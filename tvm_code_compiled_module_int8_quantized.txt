; ModuleID = 'TVMMod'
source_filename = "TVMMod"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

%0 = type { double }
%1 = type { ptr, %2, i32, %3, ptr, ptr, i64 }
%2 = type { i32, i32 }
%3 = type { i8, i8, i16 }
%4 = type { ptr, i32 }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused = type { ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.0 = type { ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.1 = type { ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.2 = type { ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.3 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.4 = type { ptr, ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.5 = type { ptr, ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.6 = type { ptr, ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.7 = type { ptr, ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.8 = type { ptr, ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.9 = type { ptr, ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.10 = type { ptr, ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.11 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.12 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.13 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.14 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.15 = type { ptr, ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.16 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.17 = type { ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.18 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.19 = type { ptr, ptr }
%closure_loop_parallel_n.oc_chunk.fused.oh.fused = type { i32, ptr, ptr, ptr }
%closure_loop_parallel_i0.i1.fused.i2.fused = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.21 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_i0.i1.fused.i2.fused.20 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.24 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_i0.i1.fused.i2.fused.23 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.29 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_i0.i1.fused.i2.fused.28 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.32 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_i0.i1.fused.i2.fused.31 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.33 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.34 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.35 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.36 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.38 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_i0.i1.fused.i2.fused.37 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.39 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.40 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.42 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_i0.i1.fused.i2.fused.41 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.43 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.44 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.47 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_i0.i1.fused.i2.fused.46 = type { ptr, ptr }
%closure_loop_parallel_ax1.outer.ax0.outer.fused = type { ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.48 = type { ptr, ptr }

$__TVMAPISetLastError = comdat any

$__TVMBackendParallelLaunch = comdat any

$__TVMBackendAllocWorkspace = comdat any

$__TVMBackendFreeWorkspace = comdat any

@__TVMAPISetLastError = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@__TVMBackendParallelLaunch = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@.str = private constant [103 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast: num_args should be 3\00", align 1
@.str.1 = private constant [158 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast: Expect arg[0] to be pointer\00", align 1
@.str.2 = private constant [158 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast: Expect arg[1] to be pointer\00", align 1
@.str.3 = private constant [174 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast: Expect arg[2] to be pointer\00", align 1
@.str.4 = private constant [139 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.ndim is expected to equal 5\00", align 1
@.str.5 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.dtype is expected to be int8\00", align 1
@.str.6 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_shape[0])\00", align 1
@.str.7 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_shape[1]) == 64, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_shape[1])\00", align 1
@.str.8 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_shape[2]) == 56, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_shape[2])\00", align 1
@.str.9 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_shape[3]) == 56, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_shape[3])\00", align 1
@.str.10 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_shape[4]) == 4, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_shape[4])\00", align 1
@.str.11 = private constant [482 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p0_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.strides: expected to be compact array\00", align 1
@.str.12 = private constant [226 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.13 = private constant [206 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.14 = private constant [139 x i8] c"Assert fail: 5 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.ndim is expected to equal 5\00", align 1
@.str.15 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.dtype is expected to be int8\00", align 1
@.str.16 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_shape[0])\00", align 1
@.str.17 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_shape[1]) == 64, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_shape[1])\00", align 1
@.str.18 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_shape[2]) == 56, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_shape[2])\00", align 1
@.str.19 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_shape[3]) == 56, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_shape[3])\00", align 1
@.str.20 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_shape[4]) == 4, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_shape[4])\00", align 1
@.str.21 = private constant [482 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_p1_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.strides: expected to be compact array\00", align 1
@.str.22 = private constant [226 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.23 = private constant [206 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.24 = private constant [212 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.25 = private constant [147 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.ndim is expected to equal 5\00", align 1
@.str.26 = private constant [275 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.dtype is expected to be int8\00", align 1
@.str.27 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_shape[0])\00", align 1
@.str.28 = private constant [307 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_shape[1]) == 64, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_shape[1])\00", align 1
@.str.29 = private constant [307 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_shape[2])\00", align 1
@.str.30 = private constant [307 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_shape[3])\00", align 1
@.str.31 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_shape[4])\00", align 1
@.str.32 = private constant [502 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_T_cast_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.strides: expected to be compact array\00", align 1
@.str.33 = private constant [238 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.34 = private constant [218 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.35 = private constant [224 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.36 = private constant [105 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1: num_args should be 3\00", align 1
@.str.37 = private constant [160 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1: Expect arg[0] to be pointer\00", align 1
@.str.38 = private constant [160 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1: Expect arg[1] to be pointer\00", align 1
@.str.39 = private constant [176 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1: Expect arg[2] to be pointer\00", align 1
@.str.40 = private constant [141 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.ndim is expected to equal 5\00", align 1
@.str.41 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.dtype is expected to be int8\00", align 1
@.str.42 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_shape[0])\00", align 1
@.str.43 = private constant [303 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_shape[1]) == 128, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_shape[1])\00", align 1
@.str.44 = private constant [301 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_shape[2]) == 28, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_shape[2])\00", align 1
@.str.45 = private constant [301 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_shape[3]) == 28, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_shape[3])\00", align 1
@.str.46 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_shape[4]) == 4, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_shape[4])\00", align 1
@.str.47 = private constant [491 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p0_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.strides: expected to be compact array\00", align 1
@.str.48 = private constant [228 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.49 = private constant [208 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.50 = private constant [141 x i8] c"Assert fail: 5 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.ndim is expected to equal 5\00", align 1
@.str.51 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.dtype is expected to be int8\00", align 1
@.str.52 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_shape[0])\00", align 1
@.str.53 = private constant [303 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_shape[1]) == 128, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_shape[1])\00", align 1
@.str.54 = private constant [301 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_shape[2]) == 28, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_shape[2])\00", align 1
@.str.55 = private constant [301 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_shape[3]) == 28, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_shape[3])\00", align 1
@.str.56 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_shape[4]) == 4, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_shape[4])\00", align 1
@.str.57 = private constant [491 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_p1_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.strides: expected to be compact array\00", align 1
@.str.58 = private constant [228 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.59 = private constant [208 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.60 = private constant [214 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.61 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.ndim is expected to equal 5\00", align 1
@.str.62 = private constant [277 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.dtype is expected to be int8\00", align 1
@.str.63 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_shape[0])\00", align 1
@.str.64 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_shape[1]) == 128, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_shape[1])\00", align 1
@.str.65 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_shape[2])\00", align 1
@.str.66 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_shape[3])\00", align 1
@.str.67 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_shape[4])\00", align 1
@.str.68 = private constant [511 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_T_cast_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.strides: expected to be compact array\00", align 1
@.str.69 = private constant [240 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.70 = private constant [220 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.71 = private constant [226 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.73 = private constant [105 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2: num_args should be 3\00", align 1
@.str.74 = private constant [160 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2: Expect arg[0] to be pointer\00", align 1
@.str.75 = private constant [160 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2: Expect arg[1] to be pointer\00", align 1
@.str.76 = private constant [176 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2: Expect arg[2] to be pointer\00", align 1
@.str.77 = private constant [141 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.ndim is expected to equal 5\00", align 1
@.str.78 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.dtype is expected to be int8\00", align 1
@.str.79 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_shape[0])\00", align 1
@.str.80 = private constant [303 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_shape[1]) == 256, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_shape[1])\00", align 1
@.str.81 = private constant [301 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_shape[2]) == 14, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_shape[2])\00", align 1
@.str.82 = private constant [301 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_shape[3]) == 14, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_shape[3])\00", align 1
@.str.83 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_shape[4]) == 4, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_shape[4])\00", align 1
@.str.84 = private constant [489 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p0_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.strides: expected to be compact array\00", align 1
@.str.85 = private constant [228 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.86 = private constant [208 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.87 = private constant [141 x i8] c"Assert fail: 5 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.ndim is expected to equal 5\00", align 1
@.str.88 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.dtype is expected to be int8\00", align 1
@.str.89 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_shape[0])\00", align 1
@.str.90 = private constant [303 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_shape[1]) == 256, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_shape[1])\00", align 1
@.str.91 = private constant [301 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_shape[2]) == 14, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_shape[2])\00", align 1
@.str.92 = private constant [301 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_shape[3]) == 14, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_shape[3])\00", align 1
@.str.93 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_shape[4]) == 4, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_shape[4])\00", align 1
@.str.94 = private constant [489 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_p1_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.strides: expected to be compact array\00", align 1
@.str.95 = private constant [228 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.96 = private constant [208 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.97 = private constant [214 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.98 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.ndim is expected to equal 5\00", align 1
@.str.99 = private constant [277 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.dtype is expected to be int8\00", align 1
@.str.100 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_shape[0])\00", align 1
@.str.101 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_shape[1]) == 256, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_shape[1])\00", align 1
@.str.102 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_shape[2])\00", align 1
@.str.103 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_shape[3])\00", align 1
@.str.104 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_shape[4])\00", align 1
@.str.105 = private constant [509 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_T_cast_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.strides: expected to be compact array\00", align 1
@.str.106 = private constant [240 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.107 = private constant [220 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.108 = private constant [226 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.110 = private constant [105 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3: num_args should be 3\00", align 1
@.str.111 = private constant [160 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3: Expect arg[0] to be pointer\00", align 1
@.str.112 = private constant [160 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3: Expect arg[1] to be pointer\00", align 1
@.str.113 = private constant [176 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3: Expect arg[2] to be pointer\00", align 1
@.str.114 = private constant [141 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.ndim is expected to equal 5\00", align 1
@.str.115 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.dtype is expected to be int8\00", align 1
@.str.116 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_shape[0])\00", align 1
@.str.117 = private constant [303 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_shape[1]) == 512, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_shape[1])\00", align 1
@.str.118 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_shape[2]) == 7, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_shape[2])\00", align 1
@.str.119 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_shape[3]) == 7, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_shape[3])\00", align 1
@.str.120 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_shape[4]) == 4, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_shape[4])\00", align 1
@.str.121 = private constant [489 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p0_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.strides: expected to be compact array\00", align 1
@.str.122 = private constant [228 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.123 = private constant [208 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.124 = private constant [141 x i8] c"Assert fail: 5 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.ndim is expected to equal 5\00", align 1
@.str.125 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.dtype is expected to be int8\00", align 1
@.str.126 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_shape[0])\00", align 1
@.str.127 = private constant [303 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_shape[1]) == 512, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_shape[1])\00", align 1
@.str.128 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_shape[2]) == 7, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_shape[2])\00", align 1
@.str.129 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_shape[3]) == 7, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_shape[3])\00", align 1
@.str.130 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_shape[4]) == 4, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_shape[4])\00", align 1
@.str.131 = private constant [489 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_p1_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.strides: expected to be compact array\00", align 1
@.str.132 = private constant [228 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.133 = private constant [208 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.134 = private constant [214 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.135 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.ndim is expected to equal 5\00", align 1
@.str.136 = private constant [277 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.dtype is expected to be int8\00", align 1
@.str.137 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_shape[0])\00", align 1
@.str.138 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_shape[1]) == 512, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_shape[1])\00", align 1
@.str.139 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_shape[2])\00", align 1
@.str.140 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_shape[3])\00", align 1
@.str.141 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_shape[4])\00", align 1
@.str.142 = private constant [509 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_T_cast_strides[1]), tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.strides: expected to be compact array\00", align 1
@.str.143 = private constant [240 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.144 = private constant [220 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.145 = private constant [226 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.147 = private constant [85 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_cast_multiply: num_args should be 2\00", align 1
@.str.148 = private constant [140 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply: Expect arg[0] to be pointer\00", align 1
@.str.149 = private constant [172 x i8] c"Assert fail: T_multiply_code == 3 or T_multiply_code == 13 or T_multiply_code == 7 or T_multiply_code == 4, tvmgen_default_fused_cast_multiply: Expect arg[1] to be pointer\00", align 1
@.str.150 = private constant [121 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply.p0.ndim is expected to equal 5\00", align 1
@.str.151 = private constant [241 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply.p0.dtype is expected to be int8\00", align 1
@.str.152 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_shape[0])\00", align 1
@.str.153 = private constant [243 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_shape[1])\00", align 1
@.str.154 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_shape[2])\00", align 1
@.str.155 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_shape[3])\00", align 1
@.str.156 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_shape[4])\00", align 1
@.str.157 = private constant [389 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_p0_strides[1]), tvmgen_default_fused_cast_multiply.p0.strides: expected to be compact array\00", align 1
@.str.158 = private constant [208 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.159 = private constant [188 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.160 = private constant [137 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_multiply, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply.T_multiply.ndim is expected to equal 5\00", align 1
@.str.161 = private constant [277 x i8] c"Assert fail: T.tvm_struct_get(T_multiply, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_multiply, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_multiply, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply.T_multiply.dtype is expected to be float32\00", align 1
@.str.162 = private constant [263 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply.T_multiply.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_shape[0])\00", align 1
@.str.163 = private constant [267 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply.T_multiply.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_shape[1])\00", align 1
@.str.164 = private constant [263 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply.T_multiply.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_shape[2])\00", align 1
@.str.165 = private constant [263 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply.T_multiply.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_shape[3])\00", align 1
@.str.166 = private constant [263 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply.T_multiply.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_shape[4])\00", align 1
@.str.167 = private constant [429 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_T_multiply_strides[1]), tvmgen_default_fused_cast_multiply.T_multiply.strides: expected to be compact array\00", align 1
@.str.168 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_multiply, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply.T_multiply.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_multiply, 0, 8, \22uint64\22)\00", align 1
@.str.169 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(T_multiply, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply.T_multiply.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_multiply, 0, 10, \22int32\22)\00", align 1
@.str.170 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_multiply, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply.T_multiply.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_multiply, 0, 9, \22int32\22)\00", align 1
@.str.172 = private constant [123 x i8] c"Assert fail: num_args == 6, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast: num_args should be 6\00", align 1
@.str.173 = private constant [178 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast: Expect arg[0] to be pointer\00", align 1
@.str.174 = private constant [178 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast: Expect arg[1] to be pointer\00", align 1
@.str.175 = private constant [178 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast: Expect arg[2] to be pointer\00", align 1
@.str.176 = private constant [178 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast: Expect arg[3] to be pointer\00", align 1
@.str.177 = private constant [178 x i8] c"Assert fail: p4_code == 3 or p4_code == 13 or p4_code == 7 or p4_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast: Expect arg[4] to be pointer\00", align 1
@.str.178 = private constant [194 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast: Expect arg[5] to be pointer\00", align 1
@.str.179 = private constant [159 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.ndim is expected to equal 5\00", align 1
@.str.180 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.dtype is expected to be int8\00", align 1
@.str.181 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_shape[0])\00", align 1
@.str.182 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_shape[1]) == 16, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_shape[1])\00", align 1
@.str.183 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_shape[2]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_shape[2])\00", align 1
@.str.184 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_shape[3]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_shape[3])\00", align 1
@.str.185 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_shape[4])\00", align 1
@.str.186 = private constant [582 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.strides: expected to be compact array\00", align 1
@.str.187 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.188 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.189 = private constant [159 x i8] c"Assert fail: 5 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.ndim is expected to equal 5\00", align 1
@.str.190 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.dtype is expected to be int16\00", align 1
@.str.191 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_shape[0])\00", align 1
@.str.192 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_shape[1]) == 16, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_shape[1])\00", align 1
@.str.193 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_shape[2])\00", align 1
@.str.194 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_shape[3])\00", align 1
@.str.195 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_shape[4])\00", align 1
@.str.196 = private constant [350 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.strides: expected to be compact array\00", align 1
@.str.197 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.198 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.199 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.200 = private constant [159 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.ndim is expected to equal 5\00", align 1
@.str.201 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.dtype is expected to be int16\00", align 1
@.str.202 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_shape[0])\00", align 1
@.str.203 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_shape[1]) == 16, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_shape[1])\00", align 1
@.str.204 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_shape[2])\00", align 1
@.str.205 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_shape[3])\00", align 1
@.str.206 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_shape[4])\00", align 1
@.str.207 = private constant [350 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.strides: expected to be compact array\00", align 1
@.str.208 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.209 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.210 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.211 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p3.ndim is expected to equal 0\00", align 1
@.str.212 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p3.dtype is expected to be int16\00", align 1
@.str.213 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.214 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.215 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.216 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p4, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p4.ndim is expected to equal 0\00", align 1
@.str.217 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p4, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p4, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p4, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p4.dtype is expected to be int16\00", align 1
@.str.218 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p4, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p4.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p4, 0, 8, \22uint64\22)\00", align 1
@.str.219 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p4, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p4.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p4, 0, 10, \22int32\22)\00", align 1
@.str.220 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p4, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p4.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p4, 0, 9, \22int32\22)\00", align 1
@.str.221 = private constant [167 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.ndim is expected to equal 5\00", align 1
@.str.222 = private constant [295 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.dtype is expected to be int8\00", align 1
@.str.223 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_shape[0])\00", align 1
@.str.224 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_shape[1]) == 16, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_shape[1])\00", align 1
@.str.225 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_shape[2])\00", align 1
@.str.226 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_shape[3])\00", align 1
@.str.227 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_shape[4])\00", align 1
@.str.228 = private constant [602 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.strides: expected to be compact array\00", align 1
@.str.229 = private constant [258 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.230 = private constant [238 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.231 = private constant [244 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.233 = private constant [125 x i8] c"Assert fail: num_args == 6, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1: num_args should be 6\00", align 1
@.str.234 = private constant [180 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1: Expect arg[0] to be pointer\00", align 1
@.str.235 = private constant [180 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1: Expect arg[1] to be pointer\00", align 1
@.str.236 = private constant [180 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1: Expect arg[2] to be pointer\00", align 1
@.str.237 = private constant [180 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1: Expect arg[3] to be pointer\00", align 1
@.str.238 = private constant [180 x i8] c"Assert fail: p4_code == 3 or p4_code == 13 or p4_code == 7 or p4_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1: Expect arg[4] to be pointer\00", align 1
@.str.239 = private constant [196 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1: Expect arg[5] to be pointer\00", align 1
@.str.240 = private constant [161 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.ndim is expected to equal 5\00", align 1
@.str.241 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.dtype is expected to be int8\00", align 1
@.str.242 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_shape[0])\00", align 1
@.str.243 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_shape[1]) == 32, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_shape[1])\00", align 1
@.str.244 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_shape[2]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_shape[2])\00", align 1
@.str.245 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_shape[3]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_shape[3])\00", align 1
@.str.246 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_shape[4])\00", align 1
@.str.247 = private constant [592 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.strides: expected to be compact array\00", align 1
@.str.248 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.249 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.250 = private constant [161 x i8] c"Assert fail: 5 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.ndim is expected to equal 5\00", align 1
@.str.251 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.dtype is expected to be int16\00", align 1
@.str.252 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_shape[0])\00", align 1
@.str.253 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_shape[1]) == 32, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_shape[1])\00", align 1
@.str.254 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_shape[2])\00", align 1
@.str.255 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_shape[3])\00", align 1
@.str.256 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_shape[4])\00", align 1
@.str.257 = private constant [356 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.strides: expected to be compact array\00", align 1
@.str.258 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.259 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.260 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.261 = private constant [161 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.ndim is expected to equal 5\00", align 1
@.str.262 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.dtype is expected to be int16\00", align 1
@.str.263 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_shape[0])\00", align 1
@.str.264 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_shape[1]) == 32, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_shape[1])\00", align 1
@.str.265 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_shape[2])\00", align 1
@.str.266 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_shape[3])\00", align 1
@.str.267 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_shape[4])\00", align 1
@.str.268 = private constant [356 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.strides: expected to be compact array\00", align 1
@.str.269 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.270 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.271 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.272 = private constant [161 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p3.ndim is expected to equal 0\00", align 1
@.str.273 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p3.dtype is expected to be int16\00", align 1
@.str.274 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.275 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.276 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.277 = private constant [161 x i8] c"Assert fail: 0 == T.tvm_struct_get(p4, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p4.ndim is expected to equal 0\00", align 1
@.str.278 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p4, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p4, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p4, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p4.dtype is expected to be int16\00", align 1
@.str.279 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p4, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p4.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p4, 0, 8, \22uint64\22)\00", align 1
@.str.280 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p4, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p4.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p4, 0, 10, \22int32\22)\00", align 1
@.str.281 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p4, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p4.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p4, 0, 9, \22int32\22)\00", align 1
@.str.282 = private constant [169 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.ndim is expected to equal 5\00", align 1
@.str.283 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.dtype is expected to be int8\00", align 1
@.str.284 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_shape[0])\00", align 1
@.str.285 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_shape[1]) == 32, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_shape[1])\00", align 1
@.str.286 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_shape[2])\00", align 1
@.str.287 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_shape[3])\00", align 1
@.str.288 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_shape[4])\00", align 1
@.str.289 = private constant [612 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.strides: expected to be compact array\00", align 1
@.str.290 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.291 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.292 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.294 = private constant [125 x i8] c"Assert fail: num_args == 6, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2: num_args should be 6\00", align 1
@.str.295 = private constant [180 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2: Expect arg[0] to be pointer\00", align 1
@.str.296 = private constant [180 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2: Expect arg[1] to be pointer\00", align 1
@.str.297 = private constant [180 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2: Expect arg[2] to be pointer\00", align 1
@.str.298 = private constant [180 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2: Expect arg[3] to be pointer\00", align 1
@.str.299 = private constant [180 x i8] c"Assert fail: p4_code == 3 or p4_code == 13 or p4_code == 7 or p4_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2: Expect arg[4] to be pointer\00", align 1
@.str.300 = private constant [196 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2: Expect arg[5] to be pointer\00", align 1
@.str.301 = private constant [161 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.ndim is expected to equal 5\00", align 1
@.str.302 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.dtype is expected to be int8\00", align 1
@.str.303 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_shape[0])\00", align 1
@.str.304 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_shape[1]) == 32, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_shape[1])\00", align 1
@.str.305 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_shape[2]) == 28, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_shape[2])\00", align 1
@.str.306 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_shape[3]) == 28, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_shape[3])\00", align 1
@.str.307 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_shape[4])\00", align 1
@.str.308 = private constant [591 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.strides: expected to be compact array\00", align 1
@.str.309 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.310 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.311 = private constant [161 x i8] c"Assert fail: 5 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.ndim is expected to equal 5\00", align 1
@.str.312 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.dtype is expected to be int16\00", align 1
@.str.313 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_shape[0])\00", align 1
@.str.314 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_shape[1]) == 32, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_shape[1])\00", align 1
@.str.315 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_shape[2])\00", align 1
@.str.316 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_shape[3])\00", align 1
@.str.317 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_shape[4])\00", align 1
@.str.318 = private constant [356 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.strides: expected to be compact array\00", align 1
@.str.319 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.320 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.321 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.322 = private constant [161 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.ndim is expected to equal 5\00", align 1
@.str.323 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.dtype is expected to be int16\00", align 1
@.str.324 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_shape[0])\00", align 1
@.str.325 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_shape[1]) == 32, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_shape[1])\00", align 1
@.str.326 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_shape[2])\00", align 1
@.str.327 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_shape[3])\00", align 1
@.str.328 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_shape[4])\00", align 1
@.str.329 = private constant [356 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.strides: expected to be compact array\00", align 1
@.str.330 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.331 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.332 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.333 = private constant [161 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p3.ndim is expected to equal 0\00", align 1
@.str.334 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p3.dtype is expected to be int16\00", align 1
@.str.335 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.336 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.337 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.338 = private constant [161 x i8] c"Assert fail: 0 == T.tvm_struct_get(p4, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p4.ndim is expected to equal 0\00", align 1
@.str.339 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p4, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p4, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p4, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p4.dtype is expected to be int16\00", align 1
@.str.340 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p4, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p4.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p4, 0, 8, \22uint64\22)\00", align 1
@.str.341 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p4, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p4.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p4, 0, 10, \22int32\22)\00", align 1
@.str.342 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p4, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p4.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p4, 0, 9, \22int32\22)\00", align 1
@.str.343 = private constant [169 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.ndim is expected to equal 5\00", align 1
@.str.344 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.dtype is expected to be int8\00", align 1
@.str.345 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_shape[0])\00", align 1
@.str.346 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_shape[1]) == 32, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_shape[1])\00", align 1
@.str.347 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_shape[2])\00", align 1
@.str.348 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_shape[3])\00", align 1
@.str.349 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_shape[4])\00", align 1
@.str.350 = private constant [611 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.strides: expected to be compact array\00", align 1
@.str.351 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.352 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.353 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.355 = private constant [125 x i8] c"Assert fail: num_args == 6, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3: num_args should be 6\00", align 1
@.str.356 = private constant [180 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3: Expect arg[0] to be pointer\00", align 1
@.str.357 = private constant [180 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3: Expect arg[1] to be pointer\00", align 1
@.str.358 = private constant [180 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3: Expect arg[2] to be pointer\00", align 1
@.str.359 = private constant [180 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3: Expect arg[3] to be pointer\00", align 1
@.str.360 = private constant [180 x i8] c"Assert fail: p4_code == 3 or p4_code == 13 or p4_code == 7 or p4_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3: Expect arg[4] to be pointer\00", align 1
@.str.361 = private constant [196 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3: Expect arg[5] to be pointer\00", align 1
@.str.362 = private constant [161 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.ndim is expected to equal 5\00", align 1
@.str.363 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.dtype is expected to be int8\00", align 1
@.str.364 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_shape[0])\00", align 1
@.str.365 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_shape[1])\00", align 1
@.str.366 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_shape[2]) == 28, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_shape[2])\00", align 1
@.str.367 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_shape[3]) == 28, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_shape[3])\00", align 1
@.str.368 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_shape[4])\00", align 1
@.str.369 = private constant [591 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.strides: expected to be compact array\00", align 1
@.str.370 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.371 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.372 = private constant [161 x i8] c"Assert fail: 5 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.ndim is expected to equal 5\00", align 1
@.str.373 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.dtype is expected to be int16\00", align 1
@.str.374 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_shape[0])\00", align 1
@.str.375 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_shape[1])\00", align 1
@.str.376 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_shape[2])\00", align 1
@.str.377 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_shape[3])\00", align 1
@.str.378 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_shape[4])\00", align 1
@.str.379 = private constant [356 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.strides: expected to be compact array\00", align 1
@.str.380 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.381 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.382 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.383 = private constant [161 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.ndim is expected to equal 5\00", align 1
@.str.384 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.dtype is expected to be int16\00", align 1
@.str.385 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_shape[0])\00", align 1
@.str.386 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_shape[1])\00", align 1
@.str.387 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_shape[2])\00", align 1
@.str.388 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_shape[3])\00", align 1
@.str.389 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_shape[4])\00", align 1
@.str.390 = private constant [356 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.strides: expected to be compact array\00", align 1
@.str.391 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.392 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.393 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.394 = private constant [161 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p3.ndim is expected to equal 0\00", align 1
@.str.395 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p3.dtype is expected to be int16\00", align 1
@.str.396 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.397 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.398 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.399 = private constant [161 x i8] c"Assert fail: 0 == T.tvm_struct_get(p4, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p4.ndim is expected to equal 0\00", align 1
@.str.400 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p4, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p4, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p4, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p4.dtype is expected to be int16\00", align 1
@.str.401 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p4, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p4.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p4, 0, 8, \22uint64\22)\00", align 1
@.str.402 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p4, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p4.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p4, 0, 10, \22int32\22)\00", align 1
@.str.403 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p4, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p4.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p4, 0, 9, \22int32\22)\00", align 1
@.str.404 = private constant [169 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.ndim is expected to equal 5\00", align 1
@.str.405 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.dtype is expected to be int8\00", align 1
@.str.406 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_shape[0])\00", align 1
@.str.407 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_shape[1])\00", align 1
@.str.408 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_shape[2])\00", align 1
@.str.409 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_shape[3])\00", align 1
@.str.410 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_shape[4])\00", align 1
@.str.411 = private constant [611 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.strides: expected to be compact array\00", align 1
@.str.412 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.413 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.414 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.416 = private constant [125 x i8] c"Assert fail: num_args == 6, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4: num_args should be 6\00", align 1
@.str.417 = private constant [180 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4: Expect arg[0] to be pointer\00", align 1
@.str.418 = private constant [180 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4: Expect arg[1] to be pointer\00", align 1
@.str.419 = private constant [180 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4: Expect arg[2] to be pointer\00", align 1
@.str.420 = private constant [180 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4: Expect arg[3] to be pointer\00", align 1
@.str.421 = private constant [180 x i8] c"Assert fail: p4_code == 3 or p4_code == 13 or p4_code == 7 or p4_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4: Expect arg[4] to be pointer\00", align 1
@.str.422 = private constant [196 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4: Expect arg[5] to be pointer\00", align 1
@.str.423 = private constant [161 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.ndim is expected to equal 5\00", align 1
@.str.424 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.dtype is expected to be int8\00", align 1
@.str.425 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_shape[0])\00", align 1
@.str.426 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_shape[1])\00", align 1
@.str.427 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_shape[2]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_shape[2])\00", align 1
@.str.428 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_shape[3]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_shape[3])\00", align 1
@.str.429 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_shape[4])\00", align 1
@.str.430 = private constant [589 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.strides: expected to be compact array\00", align 1
@.str.431 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.432 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.433 = private constant [161 x i8] c"Assert fail: 5 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.ndim is expected to equal 5\00", align 1
@.str.434 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.dtype is expected to be int16\00", align 1
@.str.435 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_shape[0])\00", align 1
@.str.436 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_shape[1])\00", align 1
@.str.437 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_shape[2])\00", align 1
@.str.438 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_shape[3])\00", align 1
@.str.439 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_shape[4])\00", align 1
@.str.440 = private constant [356 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.strides: expected to be compact array\00", align 1
@.str.441 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.442 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.443 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.444 = private constant [161 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.ndim is expected to equal 5\00", align 1
@.str.445 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.dtype is expected to be int16\00", align 1
@.str.446 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_shape[0])\00", align 1
@.str.447 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_shape[1])\00", align 1
@.str.448 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_shape[2])\00", align 1
@.str.449 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_shape[3])\00", align 1
@.str.450 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_shape[4])\00", align 1
@.str.451 = private constant [356 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.strides: expected to be compact array\00", align 1
@.str.452 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.453 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.454 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.455 = private constant [161 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p3.ndim is expected to equal 0\00", align 1
@.str.456 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p3.dtype is expected to be int16\00", align 1
@.str.457 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.458 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.459 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.460 = private constant [161 x i8] c"Assert fail: 0 == T.tvm_struct_get(p4, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p4.ndim is expected to equal 0\00", align 1
@.str.461 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p4, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p4, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p4, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p4.dtype is expected to be int16\00", align 1
@.str.462 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p4, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p4.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p4, 0, 8, \22uint64\22)\00", align 1
@.str.463 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p4, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p4.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p4, 0, 10, \22int32\22)\00", align 1
@.str.464 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p4, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p4.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p4, 0, 9, \22int32\22)\00", align 1
@.str.465 = private constant [169 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.ndim is expected to equal 5\00", align 1
@.str.466 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.dtype is expected to be int8\00", align 1
@.str.467 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_shape[0])\00", align 1
@.str.468 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_shape[1])\00", align 1
@.str.469 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_shape[2])\00", align 1
@.str.470 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_shape[3])\00", align 1
@.str.471 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_shape[4])\00", align 1
@.str.472 = private constant [609 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.strides: expected to be compact array\00", align 1
@.str.473 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.474 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.475 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.477 = private constant [125 x i8] c"Assert fail: num_args == 6, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5: num_args should be 6\00", align 1
@.str.478 = private constant [180 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5: Expect arg[0] to be pointer\00", align 1
@.str.479 = private constant [180 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5: Expect arg[1] to be pointer\00", align 1
@.str.480 = private constant [180 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5: Expect arg[2] to be pointer\00", align 1
@.str.481 = private constant [180 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5: Expect arg[3] to be pointer\00", align 1
@.str.482 = private constant [180 x i8] c"Assert fail: p4_code == 3 or p4_code == 13 or p4_code == 7 or p4_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5: Expect arg[4] to be pointer\00", align 1
@.str.483 = private constant [196 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5: Expect arg[5] to be pointer\00", align 1
@.str.484 = private constant [161 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.ndim is expected to equal 5\00", align 1
@.str.485 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.dtype is expected to be int8\00", align 1
@.str.486 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_shape[0])\00", align 1
@.str.487 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_shape[1])\00", align 1
@.str.488 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_shape[2]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_shape[2])\00", align 1
@.str.489 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_shape[3]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_shape[3])\00", align 1
@.str.490 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_shape[4])\00", align 1
@.str.491 = private constant [589 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.strides: expected to be compact array\00", align 1
@.str.492 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.493 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.494 = private constant [161 x i8] c"Assert fail: 5 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.ndim is expected to equal 5\00", align 1
@.str.495 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.dtype is expected to be int16\00", align 1
@.str.496 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_shape[0])\00", align 1
@.str.497 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_shape[1])\00", align 1
@.str.498 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_shape[2])\00", align 1
@.str.499 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_shape[3])\00", align 1
@.str.500 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_shape[4])\00", align 1
@.str.501 = private constant [356 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.strides: expected to be compact array\00", align 1
@.str.502 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.503 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.504 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.505 = private constant [161 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.ndim is expected to equal 5\00", align 1
@.str.506 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.dtype is expected to be int16\00", align 1
@.str.507 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_shape[0])\00", align 1
@.str.508 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_shape[1])\00", align 1
@.str.509 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_shape[2])\00", align 1
@.str.510 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_shape[3])\00", align 1
@.str.511 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_shape[4])\00", align 1
@.str.512 = private constant [356 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.strides: expected to be compact array\00", align 1
@.str.513 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.514 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.515 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.516 = private constant [161 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p3.ndim is expected to equal 0\00", align 1
@.str.517 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p3.dtype is expected to be int16\00", align 1
@.str.518 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.519 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.520 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.521 = private constant [161 x i8] c"Assert fail: 0 == T.tvm_struct_get(p4, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p4.ndim is expected to equal 0\00", align 1
@.str.522 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p4, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p4, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p4, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p4.dtype is expected to be int16\00", align 1
@.str.523 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p4, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p4.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p4, 0, 8, \22uint64\22)\00", align 1
@.str.524 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p4, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p4.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p4, 0, 10, \22int32\22)\00", align 1
@.str.525 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p4, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p4.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p4, 0, 9, \22int32\22)\00", align 1
@.str.526 = private constant [169 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.ndim is expected to equal 5\00", align 1
@.str.527 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.dtype is expected to be int8\00", align 1
@.str.528 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_shape[0])\00", align 1
@.str.529 = private constant [375 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_shape[1])\00", align 1
@.str.530 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_shape[2])\00", align 1
@.str.531 = private constant [373 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_shape[3])\00", align 1
@.str.532 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_shape[4])\00", align 1
@.str.533 = private constant [609 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.strides: expected to be compact array\00", align 1
@.str.534 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.535 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.536 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.538 = private constant [125 x i8] c"Assert fail: num_args == 6, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6: num_args should be 6\00", align 1
@.str.539 = private constant [180 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6: Expect arg[0] to be pointer\00", align 1
@.str.540 = private constant [180 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6: Expect arg[1] to be pointer\00", align 1
@.str.541 = private constant [180 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6: Expect arg[2] to be pointer\00", align 1
@.str.542 = private constant [180 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6: Expect arg[3] to be pointer\00", align 1
@.str.543 = private constant [180 x i8] c"Assert fail: p4_code == 3 or p4_code == 13 or p4_code == 7 or p4_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6: Expect arg[4] to be pointer\00", align 1
@.str.544 = private constant [196 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6: Expect arg[5] to be pointer\00", align 1
@.str.545 = private constant [161 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.ndim is expected to equal 5\00", align 1
@.str.546 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.dtype is expected to be int8\00", align 1
@.str.547 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_shape[0])\00", align 1
@.str.548 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_shape[1])\00", align 1
@.str.549 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_shape[2])\00", align 1
@.str.550 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_shape[3])\00", align 1
@.str.551 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_shape[4])\00", align 1
@.str.552 = private constant [589 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.strides: expected to be compact array\00", align 1
@.str.553 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.554 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.555 = private constant [161 x i8] c"Assert fail: 5 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.ndim is expected to equal 5\00", align 1
@.str.556 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.dtype is expected to be int16\00", align 1
@.str.557 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_shape[0])\00", align 1
@.str.558 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_shape[1])\00", align 1
@.str.559 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_shape[2])\00", align 1
@.str.560 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_shape[3])\00", align 1
@.str.561 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_shape[4])\00", align 1
@.str.562 = private constant [356 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.strides: expected to be compact array\00", align 1
@.str.563 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.564 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.565 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.566 = private constant [161 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.ndim is expected to equal 5\00", align 1
@.str.567 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.dtype is expected to be int16\00", align 1
@.str.568 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_shape[0])\00", align 1
@.str.569 = private constant [363 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_shape[1])\00", align 1
@.str.570 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_shape[2])\00", align 1
@.str.571 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_shape[3])\00", align 1
@.str.572 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_shape[4])\00", align 1
@.str.573 = private constant [356 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.strides: expected to be compact array\00", align 1
@.str.574 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.575 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.576 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.577 = private constant [161 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p3.ndim is expected to equal 0\00", align 1
@.str.578 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p3.dtype is expected to be int16\00", align 1
@.str.579 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.580 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.581 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.582 = private constant [161 x i8] c"Assert fail: 0 == T.tvm_struct_get(p4, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p4.ndim is expected to equal 0\00", align 1
@.str.583 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(p4, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p4, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p4, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p4.dtype is expected to be int16\00", align 1
@.str.584 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p4, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p4.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p4, 0, 8, \22uint64\22)\00", align 1
@.str.585 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(p4, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p4.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p4, 0, 10, \22int32\22)\00", align 1
@.str.586 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p4, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p4.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p4, 0, 9, \22int32\22)\00", align 1
@.str.587 = private constant [169 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.ndim is expected to equal 5\00", align 1
@.str.588 = private constant [297 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.dtype is expected to be int8\00", align 1
@.str.589 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_shape[0])\00", align 1
@.str.590 = private constant [375 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_shape[1])\00", align 1
@.str.591 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_shape[2])\00", align 1
@.str.592 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_shape[3])\00", align 1
@.str.593 = private constant [371 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_shape[4])\00", align 1
@.str.594 = private constant [609 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.strides: expected to be compact array\00", align 1
@.str.595 = private constant [260 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.596 = private constant [240 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.597 = private constant [246 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.599 = private constant [111 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast: num_args should be 5\00", align 1
@.str.600 = private constant [166 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast: Expect arg[0] to be pointer\00", align 1
@.str.601 = private constant [166 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast: Expect arg[1] to be pointer\00", align 1
@.str.602 = private constant [166 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast: Expect arg[2] to be pointer\00", align 1
@.str.603 = private constant [166 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast: Expect arg[3] to be pointer\00", align 1
@.str.604 = private constant [182 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast: Expect arg[4] to be pointer\00", align 1
@.str.605 = private constant [147 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.ndim is expected to equal 5\00", align 1
@.str.606 = private constant [267 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.dtype is expected to be int8\00", align 1
@.str.607 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_shape[0])\00", align 1
@.str.608 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_shape[1])\00", align 1
@.str.609 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_shape[2]) == 56, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_shape[2])\00", align 1
@.str.610 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_shape[3]) == 56, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_shape[3])\00", align 1
@.str.611 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_shape[4])\00", align 1
@.str.612 = private constant [522 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.strides: expected to be compact array\00", align 1
@.str.613 = private constant [234 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.614 = private constant [214 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.615 = private constant [147 x i8] c"Assert fail: 5 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.ndim is expected to equal 5\00", align 1
@.str.616 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.dtype is expected to be int16\00", align 1
@.str.617 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_shape[0])\00", align 1
@.str.618 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_shape[1])\00", align 1
@.str.619 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_shape[2])\00", align 1
@.str.620 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_shape[3])\00", align 1
@.str.621 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_shape[4])\00", align 1
@.str.622 = private constant [314 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.strides: expected to be compact array\00", align 1
@.str.623 = private constant [234 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.624 = private constant [214 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.625 = private constant [220 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.626 = private constant [147 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.ndim is expected to equal 5\00", align 1
@.str.627 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.dtype is expected to be int16\00", align 1
@.str.628 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_shape[0])\00", align 1
@.str.629 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_shape[1])\00", align 1
@.str.630 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_shape[2])\00", align 1
@.str.631 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_shape[3])\00", align 1
@.str.632 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_shape[4])\00", align 1
@.str.633 = private constant [314 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.strides: expected to be compact array\00", align 1
@.str.634 = private constant [234 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.635 = private constant [214 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.636 = private constant [220 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.637 = private constant [147 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p3.ndim is expected to equal 0\00", align 1
@.str.638 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p3.dtype is expected to be int16\00", align 1
@.str.639 = private constant [234 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.640 = private constant [214 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.641 = private constant [220 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.642 = private constant [155 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.ndim is expected to equal 5\00", align 1
@.str.643 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.dtype is expected to be int8\00", align 1
@.str.644 = private constant [329 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_shape[0])\00", align 1
@.str.645 = private constant [331 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_shape[1]) == 64, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_shape[1])\00", align 1
@.str.646 = private constant [331 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_shape[2])\00", align 1
@.str.647 = private constant [331 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_shape[3])\00", align 1
@.str.648 = private constant [329 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_shape[4])\00", align 1
@.str.649 = private constant [542 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.strides: expected to be compact array\00", align 1
@.str.650 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.651 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.652 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.654 = private constant [113 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1: num_args should be 5\00", align 1
@.str.655 = private constant [168 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1: Expect arg[0] to be pointer\00", align 1
@.str.656 = private constant [168 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1: Expect arg[1] to be pointer\00", align 1
@.str.657 = private constant [168 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1: Expect arg[2] to be pointer\00", align 1
@.str.658 = private constant [168 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1: Expect arg[3] to be pointer\00", align 1
@.str.659 = private constant [184 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1: Expect arg[4] to be pointer\00", align 1
@.str.660 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.ndim is expected to equal 5\00", align 1
@.str.661 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.dtype is expected to be int8\00", align 1
@.str.662 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_shape[0])\00", align 1
@.str.663 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_shape[1])\00", align 1
@.str.664 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_shape[2]) == 28, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_shape[2])\00", align 1
@.str.665 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_shape[3]) == 28, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_shape[3])\00", align 1
@.str.666 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_shape[4])\00", align 1
@.str.667 = private constant [531 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.strides: expected to be compact array\00", align 1
@.str.668 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.669 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.670 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.ndim is expected to equal 5\00", align 1
@.str.671 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.dtype is expected to be int16\00", align 1
@.str.672 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_shape[0])\00", align 1
@.str.673 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_shape[1])\00", align 1
@.str.674 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_shape[2])\00", align 1
@.str.675 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_shape[3])\00", align 1
@.str.676 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_shape[4])\00", align 1
@.str.677 = private constant [320 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.strides: expected to be compact array\00", align 1
@.str.678 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.679 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.680 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.681 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.ndim is expected to equal 5\00", align 1
@.str.682 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.dtype is expected to be int16\00", align 1
@.str.683 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_shape[0])\00", align 1
@.str.684 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_shape[1])\00", align 1
@.str.685 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_shape[2])\00", align 1
@.str.686 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_shape[3])\00", align 1
@.str.687 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_shape[4])\00", align 1
@.str.688 = private constant [320 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.strides: expected to be compact array\00", align 1
@.str.689 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.690 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.691 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.692 = private constant [149 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p3.ndim is expected to equal 0\00", align 1
@.str.693 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p3.dtype is expected to be int16\00", align 1
@.str.694 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.695 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.696 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.697 = private constant [157 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.ndim is expected to equal 5\00", align 1
@.str.698 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.dtype is expected to be int8\00", align 1
@.str.699 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_shape[0])\00", align 1
@.str.700 = private constant [339 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_shape[1]) == 128, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_shape[1])\00", align 1
@.str.701 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_shape[2])\00", align 1
@.str.702 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_shape[3])\00", align 1
@.str.703 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_shape[4])\00", align 1
@.str.704 = private constant [551 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.strides: expected to be compact array\00", align 1
@.str.705 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.706 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.707 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.709 = private constant [113 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2: num_args should be 5\00", align 1
@.str.710 = private constant [168 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2: Expect arg[0] to be pointer\00", align 1
@.str.711 = private constant [168 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2: Expect arg[1] to be pointer\00", align 1
@.str.712 = private constant [168 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2: Expect arg[2] to be pointer\00", align 1
@.str.713 = private constant [168 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2: Expect arg[3] to be pointer\00", align 1
@.str.714 = private constant [184 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2: Expect arg[4] to be pointer\00", align 1
@.str.715 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.ndim is expected to equal 5\00", align 1
@.str.716 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.dtype is expected to be int8\00", align 1
@.str.717 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_shape[0])\00", align 1
@.str.718 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_shape[1])\00", align 1
@.str.719 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_shape[2]) == 14, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_shape[2])\00", align 1
@.str.720 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_shape[3]) == 14, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_shape[3])\00", align 1
@.str.721 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_shape[4])\00", align 1
@.str.722 = private constant [529 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.strides: expected to be compact array\00", align 1
@.str.723 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.724 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.725 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.ndim is expected to equal 5\00", align 1
@.str.726 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.dtype is expected to be int16\00", align 1
@.str.727 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_shape[0])\00", align 1
@.str.728 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_shape[1])\00", align 1
@.str.729 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_shape[2])\00", align 1
@.str.730 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_shape[3])\00", align 1
@.str.731 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_shape[4])\00", align 1
@.str.732 = private constant [320 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.strides: expected to be compact array\00", align 1
@.str.733 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.734 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.735 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.736 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.ndim is expected to equal 5\00", align 1
@.str.737 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.dtype is expected to be int16\00", align 1
@.str.738 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_shape[0])\00", align 1
@.str.739 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_shape[1])\00", align 1
@.str.740 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_shape[2])\00", align 1
@.str.741 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_shape[3])\00", align 1
@.str.742 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_shape[4])\00", align 1
@.str.743 = private constant [320 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.strides: expected to be compact array\00", align 1
@.str.744 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.745 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.746 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.747 = private constant [149 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p3.ndim is expected to equal 0\00", align 1
@.str.748 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p3.dtype is expected to be int16\00", align 1
@.str.749 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.750 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.751 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.752 = private constant [157 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.ndim is expected to equal 5\00", align 1
@.str.753 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.dtype is expected to be int8\00", align 1
@.str.754 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_shape[0])\00", align 1
@.str.755 = private constant [339 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_shape[1]) == 256, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_shape[1])\00", align 1
@.str.756 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_shape[2])\00", align 1
@.str.757 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_shape[3])\00", align 1
@.str.758 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_shape[4])\00", align 1
@.str.759 = private constant [549 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.strides: expected to be compact array\00", align 1
@.str.760 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.761 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.762 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.764 = private constant [113 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3: num_args should be 5\00", align 1
@.str.765 = private constant [168 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3: Expect arg[0] to be pointer\00", align 1
@.str.766 = private constant [168 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3: Expect arg[1] to be pointer\00", align 1
@.str.767 = private constant [168 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3: Expect arg[2] to be pointer\00", align 1
@.str.768 = private constant [168 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3: Expect arg[3] to be pointer\00", align 1
@.str.769 = private constant [184 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3: Expect arg[4] to be pointer\00", align 1
@.str.770 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.ndim is expected to equal 5\00", align 1
@.str.771 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.dtype is expected to be int8\00", align 1
@.str.772 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_shape[0])\00", align 1
@.str.773 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_shape[1])\00", align 1
@.str.774 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_shape[2])\00", align 1
@.str.775 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_shape[3])\00", align 1
@.str.776 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_shape[4])\00", align 1
@.str.777 = private constant [529 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p0_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.strides: expected to be compact array\00", align 1
@.str.778 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.779 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.780 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.ndim is expected to equal 5\00", align 1
@.str.781 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.dtype is expected to be int16\00", align 1
@.str.782 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_shape[0])\00", align 1
@.str.783 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_shape[1])\00", align 1
@.str.784 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_shape[2])\00", align 1
@.str.785 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_shape[3])\00", align 1
@.str.786 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_shape[4])\00", align 1
@.str.787 = private constant [320 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p1_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.strides: expected to be compact array\00", align 1
@.str.788 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.789 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.790 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.791 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.ndim is expected to equal 5\00", align 1
@.str.792 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.dtype is expected to be int16\00", align 1
@.str.793 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_shape[0])\00", align 1
@.str.794 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_shape[1])\00", align 1
@.str.795 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_shape[2])\00", align 1
@.str.796 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_shape[3])\00", align 1
@.str.797 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_shape[4])\00", align 1
@.str.798 = private constant [320 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_p2_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.strides: expected to be compact array\00", align 1
@.str.799 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.800 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.801 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.802 = private constant [149 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p3.ndim is expected to equal 0\00", align 1
@.str.803 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p3.dtype is expected to be int16\00", align 1
@.str.804 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.805 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.806 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.807 = private constant [157 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.ndim is expected to equal 5\00", align 1
@.str.808 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.dtype is expected to be int8\00", align 1
@.str.809 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_shape[0])\00", align 1
@.str.810 = private constant [339 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_shape[1])\00", align 1
@.str.811 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_shape[2])\00", align 1
@.str.812 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_shape[3])\00", align 1
@.str.813 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_shape[4])\00", align 1
@.str.814 = private constant [549 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.strides: expected to be compact array\00", align 1
@.str.815 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.816 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.817 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.819 = private constant [122 x i8] c"Assert fail: num_args == 6, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast: num_args should be 6\00", align 1
@.str.820 = private constant [177 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast: Expect arg[0] to be pointer\00", align 1
@.str.821 = private constant [177 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast: Expect arg[1] to be pointer\00", align 1
@.str.822 = private constant [177 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast: Expect arg[2] to be pointer\00", align 1
@.str.823 = private constant [177 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast: Expect arg[3] to be pointer\00", align 1
@.str.824 = private constant [177 x i8] c"Assert fail: p4_code == 3 or p4_code == 13 or p4_code == 7 or p4_code == 4, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast: Expect arg[4] to be pointer\00", align 1
@.str.825 = private constant [193 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast: Expect arg[5] to be pointer\00", align 1
@.str.826 = private constant [158 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.ndim is expected to equal 5\00", align 1
@.str.827 = private constant [278 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.dtype is expected to be int8\00", align 1
@.str.828 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_shape[0])\00", align 1
@.str.829 = private constant [354 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_shape[1])\00", align 1
@.str.830 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_shape[2])\00", align 1
@.str.831 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_shape[3])\00", align 1
@.str.832 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_shape[4])\00", align 1
@.str.833 = private constant [574 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p0_strides[1]), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.strides: expected to be compact array\00", align 1
@.str.834 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.835 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.836 = private constant [158 x i8] c"Assert fail: 5 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.ndim is expected to equal 5\00", align 1
@.str.837 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.dtype is expected to be int16\00", align 1
@.str.838 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_shape[0])\00", align 1
@.str.839 = private constant [354 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_shape[1])\00", align 1
@.str.840 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_shape[2])\00", align 1
@.str.841 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_shape[3])\00", align 1
@.str.842 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_shape[4])\00", align 1
@.str.843 = private constant [347 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p1_strides[1]), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.strides: expected to be compact array\00", align 1
@.str.844 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.845 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.846 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.847 = private constant [158 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.ndim is expected to equal 0\00", align 1
@.str.848 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.dtype is expected to be int16\00", align 1
@.str.849 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.850 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.851 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.852 = private constant [158 x i8] c"Assert fail: 5 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.ndim is expected to equal 5\00", align 1
@.str.853 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.dtype is expected to be int16\00", align 1
@.str.854 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p3_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p3_shape[0])\00", align 1
@.str.855 = private constant [354 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p3_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p3_shape[1])\00", align 1
@.str.856 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p3_shape[2]) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p3_shape[2])\00", align 1
@.str.857 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p3_shape[3]) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p3_shape[3])\00", align 1
@.str.858 = private constant [350 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p3_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p3_shape[4])\00", align 1
@.str.859 = private constant [347 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p3_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_p3_strides[1]), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.strides: expected to be compact array\00", align 1
@.str.860 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.861 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.862 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.863 = private constant [158 x i8] c"Assert fail: 0 == T.tvm_struct_get(p4, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p4.ndim is expected to equal 0\00", align 1
@.str.864 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p4, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p4, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p4, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p4.dtype is expected to be int16\00", align 1
@.str.865 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p4, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p4.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p4, 0, 8, \22uint64\22)\00", align 1
@.str.866 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(p4, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p4.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p4, 0, 10, \22int32\22)\00", align 1
@.str.867 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p4, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p4.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p4, 0, 9, \22int32\22)\00", align 1
@.str.868 = private constant [166 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.ndim is expected to equal 5\00", align 1
@.str.869 = private constant [294 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.dtype is expected to be int8\00", align 1
@.str.870 = private constant [362 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_shape[0])\00", align 1
@.str.871 = private constant [366 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_shape[1]) == 512, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_shape[1])\00", align 1
@.str.872 = private constant [362 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_shape[2])\00", align 1
@.str.873 = private constant [362 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_shape[3])\00", align 1
@.str.874 = private constant [362 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_shape[4])\00", align 1
@.str.875 = private constant [594 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_T_cast_strides[1]), tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.strides: expected to be compact array\00", align 1
@.str.876 = private constant [257 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.877 = private constant [237 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.878 = private constant [243 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.880 = private constant [88 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform: num_args should be 2\00", align 1
@.str.881 = private constant [143 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform: Expect arg[0] to be pointer\00", align 1
@.str.882 = private constant [191 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform: Expect arg[1] to be pointer\00", align 1
@.str.883 = private constant [124 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform.p0.ndim is expected to equal 4\00", align 1
@.str.884 = private constant [248 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform.p0.dtype is expected to be float32\00", align 1
@.str.885 = private constant [248 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_shape[0])\00", align 1
@.str.886 = private constant [248 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_shape[1]) == 3, Argument tvmgen_default_fused_layout_transform.p0.shape[1] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_shape[1])\00", align 1
@.str.887 = private constant [252 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_shape[2]) == 224, Argument tvmgen_default_fused_layout_transform.p0.shape[2] has an unsatisfied constraint: 224 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_shape[2])\00", align 1
@.str.888 = private constant [252 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_shape[3]) == 224, Argument tvmgen_default_fused_layout_transform.p0.shape[3] has an unsatisfied constraint: 224 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_shape[3])\00", align 1
@.str.889 = private constant [329 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_strides[2]) and 50176 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_strides[1]), tvmgen_default_fused_layout_transform.p0.strides: expected to be compact array\00", align 1
@.str.890 = private constant [211 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.891 = private constant [191 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.892 = private constant [148 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.893 = private constant [296 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.894 = private constant [284 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[0])\00", align 1
@.str.895 = private constant [284 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[1]) == 1, Argument tvmgen_default_fused_layout_transform.T_layout_trans.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[1])\00", align 1
@.str.896 = private constant [288 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[2]) == 224, Argument tvmgen_default_fused_layout_transform.T_layout_trans.shape[2] has an unsatisfied constraint: 224 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[2])\00", align 1
@.str.897 = private constant [288 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[3]) == 224, Argument tvmgen_default_fused_layout_transform.T_layout_trans.shape[3] has an unsatisfied constraint: 224 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[3])\00", align 1
@.str.898 = private constant [284 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[4]) == 3, Argument tvmgen_default_fused_layout_transform.T_layout_trans.shape[4] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[4])\00", align 1
@.str.899 = private constant [373 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_strides[4]) and 3 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_strides[3]) and 672 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_strides[2]), tvmgen_default_fused_layout_transform.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.900 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.901 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.902 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.904 = private constant [104 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_reshape_squeeze: num_args should be 2\00", align 1
@.str.905 = private constant [159 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_reshape_squeeze: Expect arg[0] to be pointer\00", align 1
@.str.906 = private constant [187 x i8] c"Assert fail: T_squeeze_code == 3 or T_squeeze_code == 13 or T_squeeze_code == 7 or T_squeeze_code == 4, tvmgen_default_fused_layout_transform_reshape_squeeze: Expect arg[1] to be pointer\00", align 1
@.str.907 = private constant [140 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_reshape_squeeze.p0.ndim is expected to equal 5\00", align 1
@.str.908 = private constant [264 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_reshape_squeeze.p0.dtype is expected to be float32\00", align 1
@.str.909 = private constant [296 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[0])\00", align 1
@.str.910 = private constant [300 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[1]) == 512, Argument tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[1])\00", align 1
@.str.911 = private constant [296 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[2]) == 1, Argument tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[2])\00", align 1
@.str.912 = private constant [296 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[3]) == 1, Argument tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[3])\00", align 1
@.str.913 = private constant [296 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[4]) == 4, Argument tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[4])\00", align 1
@.str.914 = private constant [293 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_strides[1]), tvmgen_default_fused_layout_transform_reshape_squeeze.p0.strides: expected to be compact array\00", align 1
@.str.915 = private constant [227 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_reshape_squeeze.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.916 = private constant [207 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_reshape_squeeze.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.917 = private constant [154 x i8] c"Assert fail: 2 == T.tvm_struct_get(T_squeeze, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.ndim is expected to equal 2\00", align 1
@.str.918 = private constant [292 x i8] c"Assert fail: T.tvm_struct_get(T_squeeze, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_squeeze, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_squeeze, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.dtype is expected to be float32\00", align 1
@.str.919 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_T_squeeze_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_T_squeeze_shape[0])\00", align 1
@.str.920 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_T_squeeze_shape[1]) == 2048, Argument tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_T_squeeze_shape[1])\00", align 1
@.str.921 = private constant [213 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_T_squeeze_strides[1]), tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.strides: expected to be compact array\00", align 1
@.str.922 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_squeeze, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_squeeze, 0, 8, \22uint64\22)\00", align 1
@.str.923 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(T_squeeze, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_squeeze, 0, 10, \22int32\22)\00", align 1
@.str.924 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_squeeze, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_squeeze, 0, 9, \22int32\22)\00", align 1
@.str.925 = private constant [92 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_multiply_add_nn_relu: num_args should be 4\00", align 1
@.str.926 = private constant [147 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_multiply_add_nn_relu: Expect arg[0] to be pointer\00", align 1
@.str.927 = private constant [147 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_multiply_add_nn_relu: Expect arg[1] to be pointer\00", align 1
@.str.928 = private constant [147 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_multiply_add_nn_relu: Expect arg[2] to be pointer\00", align 1
@.str.929 = private constant [163 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_multiply_add_nn_relu: Expect arg[3] to be pointer\00", align 1
@.str.930 = private constant [128 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_multiply_add_nn_relu.p0.ndim is expected to equal 5\00", align 1
@.str.931 = private constant [252 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_multiply_add_nn_relu.p0.dtype is expected to be float32\00", align 1
@.str.932 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_shape[0]) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_shape[0])\00", align 1
@.str.933 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_shape[1]) == 2, Argument tvmgen_default_fused_multiply_add_nn_relu.p0.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_shape[1])\00", align 1
@.str.934 = private constant [264 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_shape[2]) == 112, Argument tvmgen_default_fused_multiply_add_nn_relu.p0.shape[2] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_shape[2])\00", align 1
@.str.935 = private constant [264 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_shape[3]) == 112, Argument tvmgen_default_fused_multiply_add_nn_relu.p0.shape[3] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_shape[3])\00", align 1
@.str.936 = private constant [262 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_shape[4]) == 32, Argument tvmgen_default_fused_multiply_add_nn_relu.p0.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_shape[4])\00", align 1
@.str.937 = private constant [430 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_strides[3]) and 3584 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_strides[2]) and 401408 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p0_strides[1]), tvmgen_default_fused_multiply_add_nn_relu.p0.strides: expected to be compact array\00", align 1
@.str.938 = private constant [215 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_multiply_add_nn_relu.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.939 = private constant [195 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.940 = private constant [128 x i8] c"Assert fail: 5 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_multiply_add_nn_relu.p1.ndim is expected to equal 5\00", align 1
@.str.941 = private constant [252 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_multiply_add_nn_relu.p1.dtype is expected to be float32\00", align 1
@.str.942 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_shape[0]) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.p1.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_shape[0])\00", align 1
@.str.943 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_shape[1]) == 2, Argument tvmgen_default_fused_multiply_add_nn_relu.p1.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_shape[1])\00", align 1
@.str.944 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_shape[2]) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_shape[2])\00", align 1
@.str.945 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_shape[3]) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_shape[3])\00", align 1
@.str.946 = private constant [262 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_shape[4]) == 32, Argument tvmgen_default_fused_multiply_add_nn_relu.p1.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_shape[4])\00", align 1
@.str.947 = private constant [258 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p1_strides[1]), tvmgen_default_fused_multiply_add_nn_relu.p1.strides: expected to be compact array\00", align 1
@.str.948 = private constant [215 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_multiply_add_nn_relu.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.949 = private constant [195 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.950 = private constant [201 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_multiply_add_nn_relu.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.951 = private constant [128 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_multiply_add_nn_relu.p2.ndim is expected to equal 5\00", align 1
@.str.952 = private constant [252 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_multiply_add_nn_relu.p2.dtype is expected to be float32\00", align 1
@.str.953 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_shape[0]) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_shape[0])\00", align 1
@.str.954 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_shape[1]) == 2, Argument tvmgen_default_fused_multiply_add_nn_relu.p2.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_shape[1])\00", align 1
@.str.955 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_shape[2]) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_shape[2])\00", align 1
@.str.956 = private constant [260 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_shape[3]) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_shape[3])\00", align 1
@.str.957 = private constant [262 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_shape[4]) == 32, Argument tvmgen_default_fused_multiply_add_nn_relu.p2.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_shape[4])\00", align 1
@.str.958 = private constant [258 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_p2_strides[1]), tvmgen_default_fused_multiply_add_nn_relu.p2.strides: expected to be compact array\00", align 1
@.str.959 = private constant [215 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_multiply_add_nn_relu.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.960 = private constant [195 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.961 = private constant [201 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_multiply_add_nn_relu.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.962 = private constant [136 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_multiply_add_nn_relu.T_relu.ndim is expected to equal 5\00", align 1
@.str.963 = private constant [268 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_multiply_add_nn_relu.T_relu.dtype is expected to be float32\00", align 1
@.str.964 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_shape[0])\00", align 1
@.str.965 = private constant [272 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_shape[1]) == 2, Argument tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_shape[1])\00", align 1
@.str.966 = private constant [276 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_shape[2]) == 112, Argument tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape[2] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_shape[2])\00", align 1
@.str.967 = private constant [276 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_shape[3]) == 112, Argument tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape[3] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_shape[3])\00", align 1
@.str.968 = private constant [274 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_shape[4]) == 32, Argument tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_shape[4])\00", align 1
@.str.969 = private constant [450 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_strides[3]) and 3584 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_strides[2]) and 401408 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_add_nn_relu_T_relu_strides[1]), tvmgen_default_fused_multiply_add_nn_relu.T_relu.strides: expected to be compact array\00", align 1
@.str.970 = private constant [227 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_multiply_add_nn_relu.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.971 = private constant [207 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_multiply_add_nn_relu.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.972 = private constant [213 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_multiply_add_nn_relu.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.974 = private constant [113 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_multiply_round_clip_cast_layout_transform: num_args should be 2\00", align 1
@.str.975 = private constant [168 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_multiply_round_clip_cast_layout_transform: Expect arg[0] to be pointer\00", align 1
@.str.976 = private constant [216 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_multiply_round_clip_cast_layout_transform: Expect arg[1] to be pointer\00", align 1
@.str.977 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.ndim is expected to equal 5\00", align 1
@.str.978 = private constant [273 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.dtype is expected to be float32\00", align 1
@.str.979 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_p0_shape[0]) == 1, Argument tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_p0_shape[0])\00", align 1
@.str.980 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_p0_shape[1]) == 2, Argument tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_p0_shape[1])\00", align 1
@.str.981 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_p0_shape[2]) == 56, Argument tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_p0_shape[2])\00", align 1
@.str.982 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_p0_shape[3]) == 56, Argument tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_p0_shape[3])\00", align 1
@.str.983 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_p0_shape[4]) == 32, Argument tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_p0_shape[4])\00", align 1
@.str.984 = private constant [535 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_p0_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_p0_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_p0_strides[2]) and 100352 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_p0_strides[1]), tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.strides: expected to be compact array\00", align 1
@.str.985 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.986 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.987 = private constant [173 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.988 = private constant [317 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.dtype is expected to be int8\00", align 1
@.str.989 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_T_layout_trans_shape[0])\00", align 1
@.str.990 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_T_layout_trans_shape[1]) == 16, Argument tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_T_layout_trans_shape[1])\00", align 1
@.str.991 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_T_layout_trans_shape[2]) == 56, Argument tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_T_layout_trans_shape[2])\00", align 1
@.str.992 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_T_layout_trans_shape[3]) == 56, Argument tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_T_layout_trans_shape[3])\00", align 1
@.str.993 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_T_layout_trans_shape[4]) == 4, Argument tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_T_layout_trans_shape[4])\00", align 1
@.str.994 = private constant [592 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_T_layout_trans_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_T_layout_trans_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_T_layout_trans_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_multiply_round_clip_cast_layout_transform_T_layout_trans_strides[1]), tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.995 = private constant [272 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.996 = private constant [252 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.997 = private constant [258 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.999 = private constant [94 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_nn_adaptive_avg_pool2d: num_args should be 2\00", align 1
@.str.1000 = private constant [149 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_adaptive_avg_pool2d: Expect arg[0] to be pointer\00", align 1
@.str.1001 = private constant [209 x i8] c"Assert fail: adaptive_pool_avg_code == 3 or adaptive_pool_avg_code == 13 or adaptive_pool_avg_code == 7 or adaptive_pool_avg_code == 4, tvmgen_default_fused_nn_adaptive_avg_pool2d: Expect arg[1] to be pointer\00", align 1
@.str.1002 = private constant [130 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.ndim is expected to equal 5\00", align 1
@.str.1003 = private constant [254 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.dtype is expected to be float32\00", align 1
@.str.1004 = private constant [266 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[0])\00", align 1
@.str.1005 = private constant [270 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[1]) == 512, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[1])\00", align 1
@.str.1006 = private constant [266 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[2]) == 7, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[2])\00", align 1
@.str.1007 = private constant [266 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[3]) == 7, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[3])\00", align 1
@.str.1008 = private constant [266 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[4])\00", align 1
@.str.1009 = private constant [434 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_strides[1]), tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides: expected to be compact array\00", align 1
@.str.1010 = private constant [217 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1011 = private constant [197 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1012 = private constant [160 x i8] c"Assert fail: 5 == T.tvm_struct_get(adaptive_pool_avg, 0, 4, \22int32\22), tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.ndim is expected to equal 5\00", align 1
@.str.1013 = private constant [314 x i8] c"Assert fail: T.tvm_struct_get(adaptive_pool_avg, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(adaptive_pool_avg, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(adaptive_pool_avg, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.dtype is expected to be float32\00", align 1
@.str.1014 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[0]) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[0])\00", align 1
@.str.1015 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[1]) == 512, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[1])\00", align 1
@.str.1016 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[2]) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[2])\00", align 1
@.str.1017 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[3]) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[3])\00", align 1
@.str.1018 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[4]) == 4, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[4])\00", align 1
@.str.1019 = private constant [308 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_strides[1]), tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.strides: expected to be compact array\00", align 1
@.str.1020 = private constant [262 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(adaptive_pool_avg, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(adaptive_pool_avg, 0, 8, \22uint64\22)\00", align 1
@.str.1021 = private constant [242 x i8] c"Assert fail: T.tvm_struct_get(adaptive_pool_avg, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(adaptive_pool_avg, 0, 10, \22int32\22)\00", align 1
@.str.1022 = private constant [248 x i8] c"Assert fail: dev_id == T.tvm_struct_get(adaptive_pool_avg, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(adaptive_pool_avg, 0, 9, \22int32\22)\00", align 1
@__TVMBackendAllocWorkspace = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@__TVMBackendFreeWorkspace = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@.str.1025 = private constant [95 x i8] c"Assert fail: num_args == 3, tvmgen_default_fused_nn_contrib_conv2d_NCHWc: num_args should be 3\00", align 1
@.str.1026 = private constant [150 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc: Expect arg[0] to be pointer\00", align 1
@.str.1027 = private constant [150 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc: Expect arg[1] to be pointer\00", align 1
@.str.1028 = private constant [190 x i8] c"Assert fail: conv2d_NCHWc_code == 3 or conv2d_NCHWc_code == 13 or conv2d_NCHWc_code == 7 or conv2d_NCHWc_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc: Expect arg[2] to be pointer\00", align 1
@.str.1029 = private constant [131 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.ndim is expected to equal 5\00", align 1
@.str.1030 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.dtype is expected to be float32\00", align 1
@.str.1031 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p0_shape[0])\00", align 1
@.str.1032 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p0_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p0_shape[1])\00", align 1
@.str.1033 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p0_shape[2]) == 224, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.shape[2] has an unsatisfied constraint: 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p0_shape[2])\00", align 1
@.str.1034 = private constant [273 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p0_shape[3]) == 224, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.shape[3] has an unsatisfied constraint: 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p0_shape[3])\00", align 1
@.str.1035 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p0_shape[4]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.shape[4] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p0_shape[4])\00", align 1
@.str.1036 = private constant [353 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p0_strides[4]) and 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p0_strides[3]) and 672 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p0_strides[2]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.strides: expected to be compact array\00", align 1
@.str.1037 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1038 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1039 = private constant [131 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.ndim is expected to equal 6\00", align 1
@.str.1040 = private constant [255 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.dtype is expected to be float32\00", align 1
@.str.1041 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p1_shape[0]) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.shape[0] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p1_shape[0])\00", align 1
@.str.1042 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p1_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p1_shape[1])\00", align 1
@.str.1043 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p1_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p1_shape[2])\00", align 1
@.str.1044 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p1_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p1_shape[3])\00", align 1
@.str.1045 = private constant [269 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p1_shape[4]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.shape[4] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p1_shape[4])\00", align 1
@.str.1046 = private constant [271 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p1_shape[5]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.shape[5] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p1_shape[5])\00", align 1
@.str.1047 = private constant [528 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p1_strides[5]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p1_strides[4]) and 96 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p1_strides[3]) and 672 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p1_strides[2]) and 4704 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.strides: expected to be compact array\00", align 1
@.str.1048 = private constant [218 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1049 = private constant [198 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1050 = private constant [204 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1051 = private constant [151 x i8] c"Assert fail: 5 == T.tvm_struct_get(conv2d_NCHWc, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.ndim is expected to equal 5\00", align 1
@.str.1052 = private constant [295 x i8] c"Assert fail: T.tvm_struct_get(conv2d_NCHWc, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(conv2d_NCHWc, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(conv2d_NCHWc, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.dtype is expected to be float32\00", align 1
@.str.1053 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_conv2d_NCHWc_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_conv2d_NCHWc_shape[0])\00", align 1
@.str.1054 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_conv2d_NCHWc_shape[1]) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_conv2d_NCHWc_shape[1])\00", align 1
@.str.1055 = private constant [303 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_conv2d_NCHWc_shape[2]) == 112, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.shape[2] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_conv2d_NCHWc_shape[2])\00", align 1
@.str.1056 = private constant [303 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_conv2d_NCHWc_shape[3]) == 112, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.shape[3] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_conv2d_NCHWc_shape[3])\00", align 1
@.str.1057 = private constant [301 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_conv2d_NCHWc_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_conv2d_NCHWc_shape[4])\00", align 1
@.str.1058 = private constant [495 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_conv2d_NCHWc_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_conv2d_NCHWc_strides[3]) and 3584 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_conv2d_NCHWc_strides[2]) and 401408 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_conv2d_NCHWc_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.strides: expected to be compact array\00", align 1
@.str.1059 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(conv2d_NCHWc, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(conv2d_NCHWc, 0, 8, \22uint64\22)\00", align 1
@.str.1060 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(conv2d_NCHWc, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(conv2d_NCHWc, 0, 10, \22int32\22)\00", align 1
@.str.1061 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(conv2d_NCHWc, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(conv2d_NCHWc, 0, 9, \22int32\22)\00", align 1
@.str.1064 = private constant [121 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast: num_args should be 5\00", align 1
@.str.1065 = private constant [176 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast: Expect arg[0] to be pointer\00", align 1
@.str.1066 = private constant [176 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast: Expect arg[1] to be pointer\00", align 1
@.str.1067 = private constant [176 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast: Expect arg[2] to be pointer\00", align 1
@.str.1068 = private constant [176 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast: Expect arg[3] to be pointer\00", align 1
@.str.1069 = private constant [192 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast: Expect arg[4] to be pointer\00", align 1
@.str.1070 = private constant [157 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.ndim is expected to equal 5\00", align 1
@.str.1071 = private constant [277 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.dtype is expected to be int8\00", align 1
@.str.1072 = private constant [347 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p0_shape[0])\00", align 1
@.str.1073 = private constant [349 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p0_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p0_shape[1])\00", align 1
@.str.1074 = private constant [349 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p0_shape[2])\00", align 1
@.str.1075 = private constant [349 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p0_shape[3])\00", align 1
@.str.1076 = private constant [347 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p0_shape[4])\00", align 1
@.str.1077 = private constant [572 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.strides: expected to be compact array\00", align 1
@.str.1078 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1079 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1080 = private constant [157 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.ndim is expected to equal 6\00", align 1
@.str.1081 = private constant [277 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.dtype is expected to be int8\00", align 1
@.str.1082 = private constant [349 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p1_shape[0]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.shape[0] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p1_shape[0])\00", align 1
@.str.1083 = private constant [349 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p1_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p1_shape[1])\00", align 1
@.str.1084 = private constant [347 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p1_shape[2])\00", align 1
@.str.1085 = private constant [347 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p1_shape[3])\00", align 1
@.str.1086 = private constant [347 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p1_shape[4])\00", align 1
@.str.1087 = private constant [347 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p1_shape[5])\00", align 1
@.str.1088 = private constant [569 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p1_strides[1]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.strides: expected to be compact array\00", align 1
@.str.1089 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1090 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1091 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1092 = private constant [157 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p2.ndim is expected to equal 0\00", align 1
@.str.1093 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p2.dtype is expected to be int16\00", align 1
@.str.1094 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1095 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1096 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1097 = private constant [157 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p3.ndim is expected to equal 0\00", align 1
@.str.1098 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p3.dtype is expected to be int16\00", align 1
@.str.1099 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1100 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1101 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1102 = private constant [165 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.ndim is expected to equal 5\00", align 1
@.str.1103 = private constant [293 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.dtype is expected to be int8\00", align 1
@.str.1104 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_T_cast_shape[0])\00", align 1
@.str.1105 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_T_cast_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_T_cast_shape[1])\00", align 1
@.str.1106 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_T_cast_shape[2])\00", align 1
@.str.1107 = private constant [361 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_T_cast_shape[3])\00", align 1
@.str.1108 = private constant [359 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_T_cast_shape[4])\00", align 1
@.str.1109 = private constant [592 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_T_cast_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_T_cast_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.strides: expected to be compact array\00", align 1
@.str.1110 = private constant [256 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1111 = private constant [236 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1112 = private constant [242 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.1114 = private constant [123 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1: num_args should be 5\00", align 1
@.str.1115 = private constant [178 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1: Expect arg[0] to be pointer\00", align 1
@.str.1116 = private constant [178 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1: Expect arg[1] to be pointer\00", align 1
@.str.1117 = private constant [178 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1: Expect arg[2] to be pointer\00", align 1
@.str.1118 = private constant [178 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1: Expect arg[3] to be pointer\00", align 1
@.str.1119 = private constant [194 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1: Expect arg[4] to be pointer\00", align 1
@.str.1120 = private constant [159 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.ndim is expected to equal 5\00", align 1
@.str.1121 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.dtype is expected to be int8\00", align 1
@.str.1122 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p0_shape[0])\00", align 1
@.str.1123 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p0_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p0_shape[1])\00", align 1
@.str.1124 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p0_shape[2])\00", align 1
@.str.1125 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p0_shape[3])\00", align 1
@.str.1126 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p0_shape[4])\00", align 1
@.str.1127 = private constant [582 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.strides: expected to be compact array\00", align 1
@.str.1128 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1129 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1130 = private constant [159 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.ndim is expected to equal 6\00", align 1
@.str.1131 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.dtype is expected to be int8\00", align 1
@.str.1132 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p1_shape[0]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.shape[0] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p1_shape[0])\00", align 1
@.str.1133 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p1_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p1_shape[1])\00", align 1
@.str.1134 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p1_shape[2])\00", align 1
@.str.1135 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p1_shape[3])\00", align 1
@.str.1136 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p1_shape[4])\00", align 1
@.str.1137 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p1_shape[5])\00", align 1
@.str.1138 = private constant [809 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p1_strides[3]) and 48 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p1_strides[2]) and 144 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p1_strides[1]) and 2304 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.strides: expected to be compact array\00", align 1
@.str.1139 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1140 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1141 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1142 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p2.ndim is expected to equal 0\00", align 1
@.str.1143 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p2.dtype is expected to be int16\00", align 1
@.str.1144 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1145 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1146 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1147 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p3.ndim is expected to equal 0\00", align 1
@.str.1148 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p3.dtype is expected to be int16\00", align 1
@.str.1149 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1150 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1151 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1152 = private constant [167 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.ndim is expected to equal 5\00", align 1
@.str.1153 = private constant [295 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.dtype is expected to be int8\00", align 1
@.str.1154 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_T_cast_shape[0])\00", align 1
@.str.1155 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_T_cast_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_T_cast_shape[1])\00", align 1
@.str.1156 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_T_cast_shape[2])\00", align 1
@.str.1157 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_T_cast_shape[3])\00", align 1
@.str.1158 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_T_cast_shape[4])\00", align 1
@.str.1159 = private constant [602 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_T_cast_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_T_cast_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.strides: expected to be compact array\00", align 1
@.str.1160 = private constant [258 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1161 = private constant [238 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1162 = private constant [244 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.1165 = private constant [124 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10: num_args should be 5\00", align 1
@.str.1166 = private constant [179 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10: Expect arg[0] to be pointer\00", align 1
@.str.1167 = private constant [179 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10: Expect arg[1] to be pointer\00", align 1
@.str.1168 = private constant [179 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10: Expect arg[2] to be pointer\00", align 1
@.str.1169 = private constant [179 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10: Expect arg[3] to be pointer\00", align 1
@.str.1170 = private constant [195 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10: Expect arg[4] to be pointer\00", align 1
@.str.1171 = private constant [160 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.ndim is expected to equal 5\00", align 1
@.str.1172 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.dtype is expected to be int8\00", align 1
@.str.1173 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p0_shape[0])\00", align 1
@.str.1174 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p0_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p0_shape[1])\00", align 1
@.str.1175 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p0_shape[2])\00", align 1
@.str.1176 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p0_shape[3])\00", align 1
@.str.1177 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p0_shape[4])\00", align 1
@.str.1178 = private constant [586 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p0_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.strides: expected to be compact array\00", align 1
@.str.1179 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1180 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1181 = private constant [160 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.ndim is expected to equal 6\00", align 1
@.str.1182 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.dtype is expected to be int8\00", align 1
@.str.1183 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p1_shape[0]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.shape[0] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p1_shape[0])\00", align 1
@.str.1184 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p1_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p1_shape[1])\00", align 1
@.str.1185 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p1_shape[2])\00", align 1
@.str.1186 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p1_shape[3])\00", align 1
@.str.1187 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p1_shape[4])\00", align 1
@.str.1188 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p1_shape[5])\00", align 1
@.str.1189 = private constant [585 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p1_strides[1]) and 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.strides: expected to be compact array\00", align 1
@.str.1190 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1191 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1192 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1193 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p2.ndim is expected to equal 0\00", align 1
@.str.1194 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p2.dtype is expected to be int16\00", align 1
@.str.1195 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1196 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1197 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1198 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p3.ndim is expected to equal 0\00", align 1
@.str.1199 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p3.dtype is expected to be int16\00", align 1
@.str.1200 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1201 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1202 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1203 = private constant [168 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.ndim is expected to equal 5\00", align 1
@.str.1204 = private constant [296 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.dtype is expected to be int8\00", align 1
@.str.1205 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_T_cast_shape[0])\00", align 1
@.str.1206 = private constant [370 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_T_cast_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_T_cast_shape[1])\00", align 1
@.str.1207 = private constant [370 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_T_cast_shape[2])\00", align 1
@.str.1208 = private constant [370 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_T_cast_shape[3])\00", align 1
@.str.1209 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_T_cast_shape[4])\00", align 1
@.str.1210 = private constant [606 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_T_cast_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.strides: expected to be compact array\00", align 1
@.str.1211 = private constant [259 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1212 = private constant [239 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1213 = private constant [245 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.1215 = private constant [124 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11: num_args should be 5\00", align 1
@.str.1216 = private constant [179 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11: Expect arg[0] to be pointer\00", align 1
@.str.1217 = private constant [179 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11: Expect arg[1] to be pointer\00", align 1
@.str.1218 = private constant [179 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11: Expect arg[2] to be pointer\00", align 1
@.str.1219 = private constant [179 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11: Expect arg[3] to be pointer\00", align 1
@.str.1220 = private constant [195 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11: Expect arg[4] to be pointer\00", align 1
@.str.1221 = private constant [160 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.ndim is expected to equal 5\00", align 1
@.str.1222 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.dtype is expected to be int8\00", align 1
@.str.1223 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p0_shape[0])\00", align 1
@.str.1224 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p0_shape[1])\00", align 1
@.str.1225 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p0_shape[2])\00", align 1
@.str.1226 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p0_shape[3])\00", align 1
@.str.1227 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p0_shape[4])\00", align 1
@.str.1228 = private constant [586 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p0_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.strides: expected to be compact array\00", align 1
@.str.1229 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1230 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1231 = private constant [160 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.ndim is expected to equal 6\00", align 1
@.str.1232 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.dtype is expected to be int8\00", align 1
@.str.1233 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p1_shape[0]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.shape[0] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p1_shape[0])\00", align 1
@.str.1234 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p1_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p1_shape[1])\00", align 1
@.str.1235 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p1_shape[2])\00", align 1
@.str.1236 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p1_shape[3])\00", align 1
@.str.1237 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p1_shape[4])\00", align 1
@.str.1238 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p1_shape[5])\00", align 1
@.str.1239 = private constant [816 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p1_strides[3]) and 48 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p1_strides[2]) and 144 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p1_strides[1]) and 9216 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.strides: expected to be compact array\00", align 1
@.str.1240 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1241 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1242 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1243 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p2.ndim is expected to equal 0\00", align 1
@.str.1244 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p2.dtype is expected to be int16\00", align 1
@.str.1245 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1246 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1247 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1248 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p3.ndim is expected to equal 0\00", align 1
@.str.1249 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p3.dtype is expected to be int16\00", align 1
@.str.1250 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1251 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1252 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1253 = private constant [168 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.ndim is expected to equal 5\00", align 1
@.str.1254 = private constant [296 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.dtype is expected to be int8\00", align 1
@.str.1255 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_T_cast_shape[0])\00", align 1
@.str.1256 = private constant [370 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_T_cast_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_T_cast_shape[1])\00", align 1
@.str.1257 = private constant [370 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_T_cast_shape[2])\00", align 1
@.str.1258 = private constant [370 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_T_cast_shape[3])\00", align 1
@.str.1259 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_T_cast_shape[4])\00", align 1
@.str.1260 = private constant [604 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.strides: expected to be compact array\00", align 1
@.str.1261 = private constant [259 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1262 = private constant [239 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1263 = private constant [245 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.1266 = private constant [124 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12: num_args should be 5\00", align 1
@.str.1267 = private constant [179 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12: Expect arg[0] to be pointer\00", align 1
@.str.1268 = private constant [179 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12: Expect arg[1] to be pointer\00", align 1
@.str.1269 = private constant [179 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12: Expect arg[2] to be pointer\00", align 1
@.str.1270 = private constant [179 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12: Expect arg[3] to be pointer\00", align 1
@.str.1271 = private constant [195 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12: Expect arg[4] to be pointer\00", align 1
@.str.1272 = private constant [160 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.ndim is expected to equal 5\00", align 1
@.str.1273 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.dtype is expected to be int8\00", align 1
@.str.1274 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p0_shape[0])\00", align 1
@.str.1275 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p0_shape[1])\00", align 1
@.str.1276 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p0_shape[2])\00", align 1
@.str.1277 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p0_shape[3])\00", align 1
@.str.1278 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p0_shape[4])\00", align 1
@.str.1279 = private constant [584 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.strides: expected to be compact array\00", align 1
@.str.1280 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1281 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1282 = private constant [160 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.ndim is expected to equal 6\00", align 1
@.str.1283 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.dtype is expected to be int8\00", align 1
@.str.1284 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p1_shape[0]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.shape[0] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p1_shape[0])\00", align 1
@.str.1285 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p1_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p1_shape[1])\00", align 1
@.str.1286 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p1_shape[2])\00", align 1
@.str.1287 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p1_shape[3])\00", align 1
@.str.1288 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p1_shape[4])\00", align 1
@.str.1289 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p1_shape[5])\00", align 1
@.str.1290 = private constant [585 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p1_strides[1]) and 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.strides: expected to be compact array\00", align 1
@.str.1291 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1292 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1293 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1294 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p2.ndim is expected to equal 0\00", align 1
@.str.1295 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p2.dtype is expected to be int16\00", align 1
@.str.1296 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1297 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1298 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1299 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p3.ndim is expected to equal 0\00", align 1
@.str.1300 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p3.dtype is expected to be int16\00", align 1
@.str.1301 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1302 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1303 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1304 = private constant [168 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.ndim is expected to equal 5\00", align 1
@.str.1305 = private constant [296 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.dtype is expected to be int8\00", align 1
@.str.1306 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_T_cast_shape[0])\00", align 1
@.str.1307 = private constant [372 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_T_cast_shape[1]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_T_cast_shape[1])\00", align 1
@.str.1308 = private constant [370 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_T_cast_shape[2])\00", align 1
@.str.1309 = private constant [370 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_T_cast_shape[3])\00", align 1
@.str.1310 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_T_cast_shape[4])\00", align 1
@.str.1311 = private constant [604 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.strides: expected to be compact array\00", align 1
@.str.1312 = private constant [259 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1313 = private constant [239 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1314 = private constant [245 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.1316 = private constant [124 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13: num_args should be 5\00", align 1
@.str.1317 = private constant [179 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13: Expect arg[0] to be pointer\00", align 1
@.str.1318 = private constant [179 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13: Expect arg[1] to be pointer\00", align 1
@.str.1319 = private constant [179 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13: Expect arg[2] to be pointer\00", align 1
@.str.1320 = private constant [179 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13: Expect arg[3] to be pointer\00", align 1
@.str.1321 = private constant [195 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13: Expect arg[4] to be pointer\00", align 1
@.str.1322 = private constant [160 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.ndim is expected to equal 5\00", align 1
@.str.1323 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.dtype is expected to be int8\00", align 1
@.str.1324 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p0_shape[0])\00", align 1
@.str.1325 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p0_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p0_shape[1])\00", align 1
@.str.1326 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p0_shape[2])\00", align 1
@.str.1327 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p0_shape[3])\00", align 1
@.str.1328 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p0_shape[4])\00", align 1
@.str.1329 = private constant [586 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p0_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.strides: expected to be compact array\00", align 1
@.str.1330 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1331 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1332 = private constant [160 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.ndim is expected to equal 6\00", align 1
@.str.1333 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.dtype is expected to be int8\00", align 1
@.str.1334 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p1_shape[0]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.shape[0] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p1_shape[0])\00", align 1
@.str.1335 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p1_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p1_shape[1])\00", align 1
@.str.1336 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p1_shape[2])\00", align 1
@.str.1337 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p1_shape[3])\00", align 1
@.str.1338 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p1_shape[4])\00", align 1
@.str.1339 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p1_shape[5])\00", align 1
@.str.1340 = private constant [585 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p1_strides[1]) and 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.strides: expected to be compact array\00", align 1
@.str.1341 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1342 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1343 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1344 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p2.ndim is expected to equal 0\00", align 1
@.str.1345 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p2.dtype is expected to be int16\00", align 1
@.str.1346 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1347 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1348 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1349 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p3.ndim is expected to equal 0\00", align 1
@.str.1350 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p3.dtype is expected to be int16\00", align 1
@.str.1351 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1352 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1353 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1354 = private constant [168 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.ndim is expected to equal 5\00", align 1
@.str.1355 = private constant [296 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.dtype is expected to be int8\00", align 1
@.str.1356 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_T_cast_shape[0])\00", align 1
@.str.1357 = private constant [372 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_T_cast_shape[1]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_T_cast_shape[1])\00", align 1
@.str.1358 = private constant [370 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_T_cast_shape[2])\00", align 1
@.str.1359 = private constant [370 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_T_cast_shape[3])\00", align 1
@.str.1360 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_T_cast_shape[4])\00", align 1
@.str.1361 = private constant [604 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.strides: expected to be compact array\00", align 1
@.str.1362 = private constant [259 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1363 = private constant [239 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1364 = private constant [245 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.1366 = private constant [124 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14: num_args should be 5\00", align 1
@.str.1367 = private constant [179 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14: Expect arg[0] to be pointer\00", align 1
@.str.1368 = private constant [179 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14: Expect arg[1] to be pointer\00", align 1
@.str.1369 = private constant [179 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14: Expect arg[2] to be pointer\00", align 1
@.str.1370 = private constant [179 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14: Expect arg[3] to be pointer\00", align 1
@.str.1371 = private constant [195 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14: Expect arg[4] to be pointer\00", align 1
@.str.1372 = private constant [160 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.ndim is expected to equal 5\00", align 1
@.str.1373 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.dtype is expected to be int8\00", align 1
@.str.1374 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p0_shape[0])\00", align 1
@.str.1375 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p0_shape[1]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p0_shape[1])\00", align 1
@.str.1376 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p0_shape[2])\00", align 1
@.str.1377 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p0_shape[3])\00", align 1
@.str.1378 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p0_shape[4])\00", align 1
@.str.1379 = private constant [584 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.strides: expected to be compact array\00", align 1
@.str.1380 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1381 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1382 = private constant [160 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.ndim is expected to equal 6\00", align 1
@.str.1383 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.dtype is expected to be int8\00", align 1
@.str.1384 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p1_shape[0]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.shape[0] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p1_shape[0])\00", align 1
@.str.1385 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p1_shape[1]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p1_shape[1])\00", align 1
@.str.1386 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p1_shape[2])\00", align 1
@.str.1387 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p1_shape[3])\00", align 1
@.str.1388 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p1_shape[4])\00", align 1
@.str.1389 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p1_shape[5])\00", align 1
@.str.1390 = private constant [585 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p1_strides[1]) and 4096 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.strides: expected to be compact array\00", align 1
@.str.1391 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1392 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1393 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1394 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p2.ndim is expected to equal 0\00", align 1
@.str.1395 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p2.dtype is expected to be int16\00", align 1
@.str.1396 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1397 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1398 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1399 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p3.ndim is expected to equal 0\00", align 1
@.str.1400 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p3.dtype is expected to be int16\00", align 1
@.str.1401 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1402 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1403 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1404 = private constant [168 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.ndim is expected to equal 5\00", align 1
@.str.1405 = private constant [296 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.dtype is expected to be int8\00", align 1
@.str.1406 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_T_cast_shape[0])\00", align 1
@.str.1407 = private constant [370 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_T_cast_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_T_cast_shape[1])\00", align 1
@.str.1408 = private constant [370 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_T_cast_shape[2])\00", align 1
@.str.1409 = private constant [370 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_T_cast_shape[3])\00", align 1
@.str.1410 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_T_cast_shape[4])\00", align 1
@.str.1411 = private constant [604 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.strides: expected to be compact array\00", align 1
@.str.1412 = private constant [259 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1413 = private constant [239 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1414 = private constant [245 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.1416 = private constant [124 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15: num_args should be 5\00", align 1
@.str.1417 = private constant [179 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15: Expect arg[0] to be pointer\00", align 1
@.str.1418 = private constant [179 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15: Expect arg[1] to be pointer\00", align 1
@.str.1419 = private constant [179 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15: Expect arg[2] to be pointer\00", align 1
@.str.1420 = private constant [179 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15: Expect arg[3] to be pointer\00", align 1
@.str.1421 = private constant [195 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15: Expect arg[4] to be pointer\00", align 1
@.str.1422 = private constant [160 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.ndim is expected to equal 5\00", align 1
@.str.1423 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.dtype is expected to be int8\00", align 1
@.str.1424 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p0_shape[0])\00", align 1
@.str.1425 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p0_shape[1])\00", align 1
@.str.1426 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p0_shape[2])\00", align 1
@.str.1427 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p0_shape[3])\00", align 1
@.str.1428 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p0_shape[4])\00", align 1
@.str.1429 = private constant [584 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.strides: expected to be compact array\00", align 1
@.str.1430 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1431 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1432 = private constant [160 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.ndim is expected to equal 6\00", align 1
@.str.1433 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.dtype is expected to be int8\00", align 1
@.str.1434 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p1_shape[0]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.shape[0] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p1_shape[0])\00", align 1
@.str.1435 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p1_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p1_shape[1])\00", align 1
@.str.1436 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p1_shape[2])\00", align 1
@.str.1437 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p1_shape[3])\00", align 1
@.str.1438 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p1_shape[4])\00", align 1
@.str.1439 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p1_shape[5])\00", align 1
@.str.1440 = private constant [816 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p1_strides[3]) and 48 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p1_strides[2]) and 144 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p1_strides[1]) and 9216 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.strides: expected to be compact array\00", align 1
@.str.1441 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1442 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1443 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1444 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p2.ndim is expected to equal 0\00", align 1
@.str.1445 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p2.dtype is expected to be int16\00", align 1
@.str.1446 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1447 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1448 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1449 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p3.ndim is expected to equal 0\00", align 1
@.str.1450 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p3.dtype is expected to be int16\00", align 1
@.str.1451 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1452 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1453 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1454 = private constant [168 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.ndim is expected to equal 5\00", align 1
@.str.1455 = private constant [296 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.dtype is expected to be int8\00", align 1
@.str.1456 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_T_cast_shape[0])\00", align 1
@.str.1457 = private constant [370 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_T_cast_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_T_cast_shape[1])\00", align 1
@.str.1458 = private constant [370 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_T_cast_shape[2])\00", align 1
@.str.1459 = private constant [370 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_T_cast_shape[3])\00", align 1
@.str.1460 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_T_cast_shape[4])\00", align 1
@.str.1461 = private constant [604 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.strides: expected to be compact array\00", align 1
@.str.1462 = private constant [259 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1463 = private constant [239 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1464 = private constant [245 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.1467 = private constant [124 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16: num_args should be 5\00", align 1
@.str.1468 = private constant [179 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16: Expect arg[0] to be pointer\00", align 1
@.str.1469 = private constant [179 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16: Expect arg[1] to be pointer\00", align 1
@.str.1470 = private constant [179 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16: Expect arg[2] to be pointer\00", align 1
@.str.1471 = private constant [179 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16: Expect arg[3] to be pointer\00", align 1
@.str.1472 = private constant [195 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16: Expect arg[4] to be pointer\00", align 1
@.str.1473 = private constant [160 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.ndim is expected to equal 5\00", align 1
@.str.1474 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.dtype is expected to be int8\00", align 1
@.str.1475 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p0_shape[0])\00", align 1
@.str.1476 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p0_shape[1]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p0_shape[1])\00", align 1
@.str.1477 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p0_shape[2])\00", align 1
@.str.1478 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p0_shape[3])\00", align 1
@.str.1479 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p0_shape[4])\00", align 1
@.str.1480 = private constant [584 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.strides: expected to be compact array\00", align 1
@.str.1481 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1482 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1483 = private constant [160 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.ndim is expected to equal 6\00", align 1
@.str.1484 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.dtype is expected to be int8\00", align 1
@.str.1485 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p1_shape[0]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.shape[0] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p1_shape[0])\00", align 1
@.str.1486 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p1_shape[1]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p1_shape[1])\00", align 1
@.str.1487 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p1_shape[2])\00", align 1
@.str.1488 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p1_shape[3])\00", align 1
@.str.1489 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p1_shape[4])\00", align 1
@.str.1490 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p1_shape[5])\00", align 1
@.str.1491 = private constant [585 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p1_strides[1]) and 4096 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.strides: expected to be compact array\00", align 1
@.str.1492 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1493 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1494 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1495 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p2.ndim is expected to equal 0\00", align 1
@.str.1496 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p2.dtype is expected to be int16\00", align 1
@.str.1497 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1498 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1499 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1500 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p3.ndim is expected to equal 0\00", align 1
@.str.1501 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p3.dtype is expected to be int16\00", align 1
@.str.1502 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1503 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1504 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1505 = private constant [168 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.ndim is expected to equal 5\00", align 1
@.str.1506 = private constant [296 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.dtype is expected to be int8\00", align 1
@.str.1507 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_T_cast_shape[0])\00", align 1
@.str.1508 = private constant [372 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_T_cast_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_T_cast_shape[1])\00", align 1
@.str.1509 = private constant [370 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_T_cast_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_T_cast_shape[2])\00", align 1
@.str.1510 = private constant [370 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_T_cast_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_T_cast_shape[3])\00", align 1
@.str.1511 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_T_cast_shape[4])\00", align 1
@.str.1512 = private constant [604 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_T_cast_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_T_cast_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.strides: expected to be compact array\00", align 1
@.str.1513 = private constant [259 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1514 = private constant [239 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1515 = private constant [245 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.1517 = private constant [124 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17: num_args should be 5\00", align 1
@.str.1518 = private constant [179 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17: Expect arg[0] to be pointer\00", align 1
@.str.1519 = private constant [179 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17: Expect arg[1] to be pointer\00", align 1
@.str.1520 = private constant [179 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17: Expect arg[2] to be pointer\00", align 1
@.str.1521 = private constant [179 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17: Expect arg[3] to be pointer\00", align 1
@.str.1522 = private constant [195 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17: Expect arg[4] to be pointer\00", align 1
@.str.1523 = private constant [160 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.ndim is expected to equal 5\00", align 1
@.str.1524 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.dtype is expected to be int8\00", align 1
@.str.1525 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p0_shape[0])\00", align 1
@.str.1526 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p0_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p0_shape[1])\00", align 1
@.str.1527 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p0_shape[2])\00", align 1
@.str.1528 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p0_shape[3])\00", align 1
@.str.1529 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p0_shape[4])\00", align 1
@.str.1530 = private constant [584 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.strides: expected to be compact array\00", align 1
@.str.1531 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1532 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1533 = private constant [160 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.ndim is expected to equal 6\00", align 1
@.str.1534 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.dtype is expected to be int8\00", align 1
@.str.1535 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p1_shape[0]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.shape[0] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p1_shape[0])\00", align 1
@.str.1536 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p1_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p1_shape[1])\00", align 1
@.str.1537 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p1_shape[2])\00", align 1
@.str.1538 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p1_shape[3])\00", align 1
@.str.1539 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p1_shape[4])\00", align 1
@.str.1540 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p1_shape[5])\00", align 1
@.str.1541 = private constant [817 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p1_strides[3]) and 48 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p1_strides[2]) and 144 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p1_strides[1]) and 18432 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.strides: expected to be compact array\00", align 1
@.str.1542 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1543 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1544 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1545 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p2.ndim is expected to equal 0\00", align 1
@.str.1546 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p2.dtype is expected to be int16\00", align 1
@.str.1547 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1548 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1549 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1550 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p3.ndim is expected to equal 0\00", align 1
@.str.1551 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p3.dtype is expected to be int16\00", align 1
@.str.1552 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1553 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1554 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1555 = private constant [168 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.ndim is expected to equal 5\00", align 1
@.str.1556 = private constant [296 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.dtype is expected to be int8\00", align 1
@.str.1557 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_T_cast_shape[0])\00", align 1
@.str.1558 = private constant [372 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_T_cast_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_T_cast_shape[1])\00", align 1
@.str.1559 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_T_cast_shape[2])\00", align 1
@.str.1560 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_T_cast_shape[3])\00", align 1
@.str.1561 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_T_cast_shape[4])\00", align 1
@.str.1562 = private constant [604 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.strides: expected to be compact array\00", align 1
@.str.1563 = private constant [259 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1564 = private constant [239 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1565 = private constant [245 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.1568 = private constant [124 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18: num_args should be 5\00", align 1
@.str.1569 = private constant [179 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18: Expect arg[0] to be pointer\00", align 1
@.str.1570 = private constant [179 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18: Expect arg[1] to be pointer\00", align 1
@.str.1571 = private constant [179 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18: Expect arg[2] to be pointer\00", align 1
@.str.1572 = private constant [179 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18: Expect arg[3] to be pointer\00", align 1
@.str.1573 = private constant [195 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18: Expect arg[4] to be pointer\00", align 1
@.str.1574 = private constant [160 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.ndim is expected to equal 5\00", align 1
@.str.1575 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.dtype is expected to be int8\00", align 1
@.str.1576 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p0_shape[0])\00", align 1
@.str.1577 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p0_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p0_shape[1])\00", align 1
@.str.1578 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p0_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p0_shape[2])\00", align 1
@.str.1579 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p0_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p0_shape[3])\00", align 1
@.str.1580 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p0_shape[4])\00", align 1
@.str.1581 = private constant [584 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.strides: expected to be compact array\00", align 1
@.str.1582 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1583 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1584 = private constant [160 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.ndim is expected to equal 6\00", align 1
@.str.1585 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.dtype is expected to be int8\00", align 1
@.str.1586 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p1_shape[0]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.shape[0] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p1_shape[0])\00", align 1
@.str.1587 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p1_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p1_shape[1])\00", align 1
@.str.1588 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p1_shape[2])\00", align 1
@.str.1589 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p1_shape[3])\00", align 1
@.str.1590 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p1_shape[4])\00", align 1
@.str.1591 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p1_shape[5])\00", align 1
@.str.1592 = private constant [585 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p1_strides[1]) and 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.strides: expected to be compact array\00", align 1
@.str.1593 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1594 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1595 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1596 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p2.ndim is expected to equal 0\00", align 1
@.str.1597 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p2.dtype is expected to be int16\00", align 1
@.str.1598 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1599 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1600 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1601 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p3.ndim is expected to equal 0\00", align 1
@.str.1602 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p3.dtype is expected to be int16\00", align 1
@.str.1603 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1604 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1605 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1606 = private constant [168 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.ndim is expected to equal 5\00", align 1
@.str.1607 = private constant [296 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.dtype is expected to be int8\00", align 1
@.str.1608 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_T_cast_shape[0])\00", align 1
@.str.1609 = private constant [372 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_T_cast_shape[1]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_T_cast_shape[1])\00", align 1
@.str.1610 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_T_cast_shape[2])\00", align 1
@.str.1611 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_T_cast_shape[3])\00", align 1
@.str.1612 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_T_cast_shape[4])\00", align 1
@.str.1613 = private constant [604 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.strides: expected to be compact array\00", align 1
@.str.1614 = private constant [259 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1615 = private constant [239 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1616 = private constant [245 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.1618 = private constant [124 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19: num_args should be 5\00", align 1
@.str.1619 = private constant [179 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19: Expect arg[0] to be pointer\00", align 1
@.str.1620 = private constant [179 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19: Expect arg[1] to be pointer\00", align 1
@.str.1621 = private constant [179 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19: Expect arg[2] to be pointer\00", align 1
@.str.1622 = private constant [179 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19: Expect arg[3] to be pointer\00", align 1
@.str.1623 = private constant [195 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19: Expect arg[4] to be pointer\00", align 1
@.str.1624 = private constant [160 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.ndim is expected to equal 5\00", align 1
@.str.1625 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.dtype is expected to be int8\00", align 1
@.str.1626 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p0_shape[0])\00", align 1
@.str.1627 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p0_shape[1]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p0_shape[1])\00", align 1
@.str.1628 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p0_shape[2])\00", align 1
@.str.1629 = private constant [358 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p0_shape[3])\00", align 1
@.str.1630 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p0_shape[4])\00", align 1
@.str.1631 = private constant [584 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.strides: expected to be compact array\00", align 1
@.str.1632 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1633 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1634 = private constant [160 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.ndim is expected to equal 6\00", align 1
@.str.1635 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.dtype is expected to be int8\00", align 1
@.str.1636 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p1_shape[0]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.shape[0] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p1_shape[0])\00", align 1
@.str.1637 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p1_shape[1]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p1_shape[1])\00", align 1
@.str.1638 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p1_shape[2])\00", align 1
@.str.1639 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p1_shape[3])\00", align 1
@.str.1640 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p1_shape[4])\00", align 1
@.str.1641 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p1_shape[5])\00", align 1
@.str.1642 = private constant [585 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p1_strides[1]) and 4096 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.strides: expected to be compact array\00", align 1
@.str.1643 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1644 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1645 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1646 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p2.ndim is expected to equal 0\00", align 1
@.str.1647 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p2.dtype is expected to be int16\00", align 1
@.str.1648 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1649 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1650 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1651 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p3.ndim is expected to equal 0\00", align 1
@.str.1652 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p3.dtype is expected to be int16\00", align 1
@.str.1653 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1654 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1655 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1656 = private constant [168 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.ndim is expected to equal 5\00", align 1
@.str.1657 = private constant [296 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.dtype is expected to be int8\00", align 1
@.str.1658 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_T_cast_shape[0])\00", align 1
@.str.1659 = private constant [372 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_T_cast_shape[1]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_T_cast_shape[1])\00", align 1
@.str.1660 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_T_cast_shape[2])\00", align 1
@.str.1661 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_T_cast_shape[3])\00", align 1
@.str.1662 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_T_cast_shape[4])\00", align 1
@.str.1663 = private constant [604 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.strides: expected to be compact array\00", align 1
@.str.1664 = private constant [259 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1665 = private constant [239 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1666 = private constant [245 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.1668 = private constant [123 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2: num_args should be 5\00", align 1
@.str.1669 = private constant [178 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2: Expect arg[0] to be pointer\00", align 1
@.str.1670 = private constant [178 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2: Expect arg[1] to be pointer\00", align 1
@.str.1671 = private constant [178 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2: Expect arg[2] to be pointer\00", align 1
@.str.1672 = private constant [178 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2: Expect arg[3] to be pointer\00", align 1
@.str.1673 = private constant [194 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2: Expect arg[4] to be pointer\00", align 1
@.str.1674 = private constant [159 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.ndim is expected to equal 5\00", align 1
@.str.1675 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.dtype is expected to be int8\00", align 1
@.str.1676 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p0_shape[0])\00", align 1
@.str.1677 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p0_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p0_shape[1])\00", align 1
@.str.1678 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p0_shape[2])\00", align 1
@.str.1679 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p0_shape[3])\00", align 1
@.str.1680 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p0_shape[4])\00", align 1
@.str.1681 = private constant [582 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.strides: expected to be compact array\00", align 1
@.str.1682 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1683 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1684 = private constant [159 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.ndim is expected to equal 6\00", align 1
@.str.1685 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.dtype is expected to be int8\00", align 1
@.str.1686 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p1_shape[0]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.shape[0] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p1_shape[0])\00", align 1
@.str.1687 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p1_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p1_shape[1])\00", align 1
@.str.1688 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p1_shape[2])\00", align 1
@.str.1689 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p1_shape[3])\00", align 1
@.str.1690 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p1_shape[4])\00", align 1
@.str.1691 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p1_shape[5])\00", align 1
@.str.1692 = private constant [579 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p1_strides[1]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.strides: expected to be compact array\00", align 1
@.str.1693 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1694 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1695 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1696 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p2.ndim is expected to equal 0\00", align 1
@.str.1697 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p2.dtype is expected to be int16\00", align 1
@.str.1698 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1699 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1700 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1701 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p3.ndim is expected to equal 0\00", align 1
@.str.1702 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p3.dtype is expected to be int16\00", align 1
@.str.1703 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1704 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1705 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1706 = private constant [167 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.ndim is expected to equal 5\00", align 1
@.str.1707 = private constant [295 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.dtype is expected to be int8\00", align 1
@.str.1708 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_T_cast_shape[0])\00", align 1
@.str.1709 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_T_cast_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_T_cast_shape[1])\00", align 1
@.str.1710 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_T_cast_shape[2])\00", align 1
@.str.1711 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_T_cast_shape[3])\00", align 1
@.str.1712 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_T_cast_shape[4])\00", align 1
@.str.1713 = private constant [602 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_T_cast_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_T_cast_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.strides: expected to be compact array\00", align 1
@.str.1714 = private constant [258 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1715 = private constant [238 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1716 = private constant [244 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.1718 = private constant [124 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20: num_args should be 5\00", align 1
@.str.1719 = private constant [179 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20: Expect arg[0] to be pointer\00", align 1
@.str.1720 = private constant [179 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20: Expect arg[1] to be pointer\00", align 1
@.str.1721 = private constant [179 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20: Expect arg[2] to be pointer\00", align 1
@.str.1722 = private constant [179 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20: Expect arg[3] to be pointer\00", align 1
@.str.1723 = private constant [195 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20: Expect arg[4] to be pointer\00", align 1
@.str.1724 = private constant [160 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.ndim is expected to equal 5\00", align 1
@.str.1725 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.dtype is expected to be int8\00", align 1
@.str.1726 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p0_shape[0])\00", align 1
@.str.1727 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p0_shape[1]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p0_shape[1])\00", align 1
@.str.1728 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p0_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p0_shape[2])\00", align 1
@.str.1729 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p0_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p0_shape[3])\00", align 1
@.str.1730 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p0_shape[4])\00", align 1
@.str.1731 = private constant [584 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.strides: expected to be compact array\00", align 1
@.str.1732 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1733 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1734 = private constant [160 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.ndim is expected to equal 6\00", align 1
@.str.1735 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.dtype is expected to be int8\00", align 1
@.str.1736 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p1_shape[0]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.shape[0] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p1_shape[0])\00", align 1
@.str.1737 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p1_shape[1]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p1_shape[1])\00", align 1
@.str.1738 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p1_shape[2])\00", align 1
@.str.1739 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p1_shape[3])\00", align 1
@.str.1740 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p1_shape[4])\00", align 1
@.str.1741 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p1_shape[5])\00", align 1
@.str.1742 = private constant [585 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p1_strides[1]) and 8192 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.strides: expected to be compact array\00", align 1
@.str.1743 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1744 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1745 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1746 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p2.ndim is expected to equal 0\00", align 1
@.str.1747 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p2.dtype is expected to be int16\00", align 1
@.str.1748 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1749 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1750 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1751 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p3.ndim is expected to equal 0\00", align 1
@.str.1752 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p3.dtype is expected to be int16\00", align 1
@.str.1753 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1754 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1755 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1756 = private constant [168 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.ndim is expected to equal 5\00", align 1
@.str.1757 = private constant [296 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.dtype is expected to be int8\00", align 1
@.str.1758 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_T_cast_shape[0])\00", align 1
@.str.1759 = private constant [372 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_T_cast_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_T_cast_shape[1])\00", align 1
@.str.1760 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_T_cast_shape[2])\00", align 1
@.str.1761 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_T_cast_shape[3])\00", align 1
@.str.1762 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_T_cast_shape[4])\00", align 1
@.str.1763 = private constant [604 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.strides: expected to be compact array\00", align 1
@.str.1764 = private constant [259 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1765 = private constant [239 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1766 = private constant [245 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.1768 = private constant [124 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21: num_args should be 5\00", align 1
@.str.1769 = private constant [179 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21: Expect arg[0] to be pointer\00", align 1
@.str.1770 = private constant [179 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21: Expect arg[1] to be pointer\00", align 1
@.str.1771 = private constant [179 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21: Expect arg[2] to be pointer\00", align 1
@.str.1772 = private constant [179 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21: Expect arg[3] to be pointer\00", align 1
@.str.1773 = private constant [195 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21: Expect arg[4] to be pointer\00", align 1
@.str.1774 = private constant [160 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.ndim is expected to equal 5\00", align 1
@.str.1775 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.dtype is expected to be int8\00", align 1
@.str.1776 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p0_shape[0])\00", align 1
@.str.1777 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p0_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p0_shape[1])\00", align 1
@.str.1778 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p0_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p0_shape[2])\00", align 1
@.str.1779 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p0_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p0_shape[3])\00", align 1
@.str.1780 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p0_shape[4])\00", align 1
@.str.1781 = private constant [584 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.strides: expected to be compact array\00", align 1
@.str.1782 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1783 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1784 = private constant [160 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.ndim is expected to equal 6\00", align 1
@.str.1785 = private constant [280 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.dtype is expected to be int8\00", align 1
@.str.1786 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p1_shape[0]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.shape[0] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p1_shape[0])\00", align 1
@.str.1787 = private constant [360 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p1_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p1_shape[1])\00", align 1
@.str.1788 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p1_shape[2])\00", align 1
@.str.1789 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p1_shape[3])\00", align 1
@.str.1790 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p1_shape[4])\00", align 1
@.str.1791 = private constant [356 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p1_shape[5])\00", align 1
@.str.1792 = private constant [817 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p1_strides[3]) and 48 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p1_strides[2]) and 144 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p1_strides[1]) and 18432 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.strides: expected to be compact array\00", align 1
@.str.1793 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1794 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1795 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1796 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p2.ndim is expected to equal 0\00", align 1
@.str.1797 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p2.dtype is expected to be int16\00", align 1
@.str.1798 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1799 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1800 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1801 = private constant [160 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p3.ndim is expected to equal 0\00", align 1
@.str.1802 = private constant [282 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p3.dtype is expected to be int16\00", align 1
@.str.1803 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1804 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1805 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1806 = private constant [168 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.ndim is expected to equal 5\00", align 1
@.str.1807 = private constant [296 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.dtype is expected to be int8\00", align 1
@.str.1808 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_T_cast_shape[0])\00", align 1
@.str.1809 = private constant [372 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_T_cast_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_T_cast_shape[1])\00", align 1
@.str.1810 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_T_cast_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_T_cast_shape[2])\00", align 1
@.str.1811 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_T_cast_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_T_cast_shape[3])\00", align 1
@.str.1812 = private constant [368 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_T_cast_shape[4])\00", align 1
@.str.1813 = private constant [604 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_T_cast_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_T_cast_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.strides: expected to be compact array\00", align 1
@.str.1814 = private constant [259 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1815 = private constant [239 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1816 = private constant [245 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.1819 = private constant [123 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3: num_args should be 5\00", align 1
@.str.1820 = private constant [178 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3: Expect arg[0] to be pointer\00", align 1
@.str.1821 = private constant [178 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3: Expect arg[1] to be pointer\00", align 1
@.str.1822 = private constant [178 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3: Expect arg[2] to be pointer\00", align 1
@.str.1823 = private constant [178 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3: Expect arg[3] to be pointer\00", align 1
@.str.1824 = private constant [194 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3: Expect arg[4] to be pointer\00", align 1
@.str.1825 = private constant [159 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.ndim is expected to equal 5\00", align 1
@.str.1826 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.dtype is expected to be int8\00", align 1
@.str.1827 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p0_shape[0])\00", align 1
@.str.1828 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p0_shape[1])\00", align 1
@.str.1829 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p0_shape[2])\00", align 1
@.str.1830 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p0_shape[3])\00", align 1
@.str.1831 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p0_shape[4])\00", align 1
@.str.1832 = private constant [582 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.strides: expected to be compact array\00", align 1
@.str.1833 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1834 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1835 = private constant [159 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.ndim is expected to equal 6\00", align 1
@.str.1836 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.dtype is expected to be int8\00", align 1
@.str.1837 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p1_shape[0]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.shape[0] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p1_shape[0])\00", align 1
@.str.1838 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p1_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p1_shape[1])\00", align 1
@.str.1839 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p1_shape[2])\00", align 1
@.str.1840 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p1_shape[3])\00", align 1
@.str.1841 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p1_shape[4])\00", align 1
@.str.1842 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p1_shape[5])\00", align 1
@.str.1843 = private constant [580 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p1_strides[1]) and 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.strides: expected to be compact array\00", align 1
@.str.1844 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1845 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1846 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1847 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p2.ndim is expected to equal 0\00", align 1
@.str.1848 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p2.dtype is expected to be int16\00", align 1
@.str.1849 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1850 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1851 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1852 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p3.ndim is expected to equal 0\00", align 1
@.str.1853 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p3.dtype is expected to be int16\00", align 1
@.str.1854 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1855 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1856 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1857 = private constant [167 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.ndim is expected to equal 5\00", align 1
@.str.1858 = private constant [295 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.dtype is expected to be int8\00", align 1
@.str.1859 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_T_cast_shape[0])\00", align 1
@.str.1860 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_T_cast_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_T_cast_shape[1])\00", align 1
@.str.1861 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_T_cast_shape[2])\00", align 1
@.str.1862 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_T_cast_shape[3])\00", align 1
@.str.1863 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_T_cast_shape[4])\00", align 1
@.str.1864 = private constant [602 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_T_cast_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_T_cast_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.strides: expected to be compact array\00", align 1
@.str.1865 = private constant [258 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1866 = private constant [238 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1867 = private constant [244 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.1869 = private constant [123 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4: num_args should be 5\00", align 1
@.str.1870 = private constant [178 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4: Expect arg[0] to be pointer\00", align 1
@.str.1871 = private constant [178 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4: Expect arg[1] to be pointer\00", align 1
@.str.1872 = private constant [178 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4: Expect arg[2] to be pointer\00", align 1
@.str.1873 = private constant [178 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4: Expect arg[3] to be pointer\00", align 1
@.str.1874 = private constant [194 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4: Expect arg[4] to be pointer\00", align 1
@.str.1875 = private constant [159 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.ndim is expected to equal 5\00", align 1
@.str.1876 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.dtype is expected to be int8\00", align 1
@.str.1877 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p0_shape[0])\00", align 1
@.str.1878 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p0_shape[1])\00", align 1
@.str.1879 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p0_shape[2])\00", align 1
@.str.1880 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p0_shape[3])\00", align 1
@.str.1881 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p0_shape[4])\00", align 1
@.str.1882 = private constant [582 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.strides: expected to be compact array\00", align 1
@.str.1883 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1884 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1885 = private constant [159 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.ndim is expected to equal 6\00", align 1
@.str.1886 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.dtype is expected to be int8\00", align 1
@.str.1887 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p1_shape[0]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.shape[0] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p1_shape[0])\00", align 1
@.str.1888 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p1_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p1_shape[1])\00", align 1
@.str.1889 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p1_shape[2])\00", align 1
@.str.1890 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p1_shape[3])\00", align 1
@.str.1891 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p1_shape[4])\00", align 1
@.str.1892 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p1_shape[5])\00", align 1
@.str.1893 = private constant [580 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p1_strides[1]) and 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.strides: expected to be compact array\00", align 1
@.str.1894 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1895 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1896 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1897 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p2.ndim is expected to equal 0\00", align 1
@.str.1898 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p2.dtype is expected to be int16\00", align 1
@.str.1899 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1900 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1901 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1902 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p3.ndim is expected to equal 0\00", align 1
@.str.1903 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p3.dtype is expected to be int16\00", align 1
@.str.1904 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1905 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1906 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1907 = private constant [167 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.ndim is expected to equal 5\00", align 1
@.str.1908 = private constant [295 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.dtype is expected to be int8\00", align 1
@.str.1909 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_T_cast_shape[0])\00", align 1
@.str.1910 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_T_cast_shape[1]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_T_cast_shape[1])\00", align 1
@.str.1911 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_T_cast_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_T_cast_shape[2])\00", align 1
@.str.1912 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_T_cast_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_T_cast_shape[3])\00", align 1
@.str.1913 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_T_cast_shape[4])\00", align 1
@.str.1914 = private constant [602 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_T_cast_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_T_cast_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.strides: expected to be compact array\00", align 1
@.str.1915 = private constant [258 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1916 = private constant [238 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1917 = private constant [244 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.1919 = private constant [123 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5: num_args should be 5\00", align 1
@.str.1920 = private constant [178 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5: Expect arg[0] to be pointer\00", align 1
@.str.1921 = private constant [178 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5: Expect arg[1] to be pointer\00", align 1
@.str.1922 = private constant [178 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5: Expect arg[2] to be pointer\00", align 1
@.str.1923 = private constant [178 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5: Expect arg[3] to be pointer\00", align 1
@.str.1924 = private constant [194 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5: Expect arg[4] to be pointer\00", align 1
@.str.1925 = private constant [159 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.ndim is expected to equal 5\00", align 1
@.str.1926 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.dtype is expected to be int8\00", align 1
@.str.1927 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p0_shape[0])\00", align 1
@.str.1928 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p0_shape[1]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p0_shape[1])\00", align 1
@.str.1929 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p0_shape[2])\00", align 1
@.str.1930 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p0_shape[3])\00", align 1
@.str.1931 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p0_shape[4])\00", align 1
@.str.1932 = private constant [582 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.strides: expected to be compact array\00", align 1
@.str.1933 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1934 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1935 = private constant [159 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.ndim is expected to equal 6\00", align 1
@.str.1936 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.dtype is expected to be int8\00", align 1
@.str.1937 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p1_shape[0]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.shape[0] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p1_shape[0])\00", align 1
@.str.1938 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p1_shape[1]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p1_shape[1])\00", align 1
@.str.1939 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p1_shape[2])\00", align 1
@.str.1940 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p1_shape[3])\00", align 1
@.str.1941 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p1_shape[4])\00", align 1
@.str.1942 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p1_shape[5])\00", align 1
@.str.1943 = private constant [809 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p1_strides[3]) and 48 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p1_strides[2]) and 144 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p1_strides[1]) and 4608 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.strides: expected to be compact array\00", align 1
@.str.1944 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1945 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1946 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1947 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p2.ndim is expected to equal 0\00", align 1
@.str.1948 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p2.dtype is expected to be int16\00", align 1
@.str.1949 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1950 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1951 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1952 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p3.ndim is expected to equal 0\00", align 1
@.str.1953 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p3.dtype is expected to be int16\00", align 1
@.str.1954 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1955 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1956 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1957 = private constant [167 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.ndim is expected to equal 5\00", align 1
@.str.1958 = private constant [295 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.dtype is expected to be int8\00", align 1
@.str.1959 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_T_cast_shape[0])\00", align 1
@.str.1960 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_T_cast_shape[1]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_T_cast_shape[1])\00", align 1
@.str.1961 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_T_cast_shape[2])\00", align 1
@.str.1962 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_T_cast_shape[3])\00", align 1
@.str.1963 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_T_cast_shape[4])\00", align 1
@.str.1964 = private constant [601 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_T_cast_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.strides: expected to be compact array\00", align 1
@.str.1965 = private constant [258 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.1966 = private constant [238 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.1967 = private constant [244 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.1970 = private constant [123 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6: num_args should be 5\00", align 1
@.str.1971 = private constant [178 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6: Expect arg[0] to be pointer\00", align 1
@.str.1972 = private constant [178 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6: Expect arg[1] to be pointer\00", align 1
@.str.1973 = private constant [178 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6: Expect arg[2] to be pointer\00", align 1
@.str.1974 = private constant [178 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6: Expect arg[3] to be pointer\00", align 1
@.str.1975 = private constant [194 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6: Expect arg[4] to be pointer\00", align 1
@.str.1976 = private constant [159 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.ndim is expected to equal 5\00", align 1
@.str.1977 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.dtype is expected to be int8\00", align 1
@.str.1978 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p0_shape[0])\00", align 1
@.str.1979 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p0_shape[1]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p0_shape[1])\00", align 1
@.str.1980 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p0_shape[2])\00", align 1
@.str.1981 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p0_shape[3])\00", align 1
@.str.1982 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p0_shape[4])\00", align 1
@.str.1983 = private constant [581 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p0_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.strides: expected to be compact array\00", align 1
@.str.1984 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1985 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1986 = private constant [159 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.ndim is expected to equal 6\00", align 1
@.str.1987 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.dtype is expected to be int8\00", align 1
@.str.1988 = private constant [357 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p1_shape[0]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.shape[0] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p1_shape[0])\00", align 1
@.str.1989 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p1_shape[1]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p1_shape[1])\00", align 1
@.str.1990 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p1_shape[2])\00", align 1
@.str.1991 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p1_shape[3])\00", align 1
@.str.1992 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p1_shape[4])\00", align 1
@.str.1993 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p1_shape[5])\00", align 1
@.str.1994 = private constant [579 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p1_strides[1]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.strides: expected to be compact array\00", align 1
@.str.1995 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1996 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1997 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1998 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p2.ndim is expected to equal 0\00", align 1
@.str.1999 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p2.dtype is expected to be int16\00", align 1
@.str.2000 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.2001 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.2002 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.2003 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p3.ndim is expected to equal 0\00", align 1
@.str.2004 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p3.dtype is expected to be int16\00", align 1
@.str.2005 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.2006 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.2007 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.2008 = private constant [167 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.ndim is expected to equal 5\00", align 1
@.str.2009 = private constant [295 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.dtype is expected to be int8\00", align 1
@.str.2010 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_T_cast_shape[0])\00", align 1
@.str.2011 = private constant [369 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_T_cast_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_T_cast_shape[1])\00", align 1
@.str.2012 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_T_cast_shape[2])\00", align 1
@.str.2013 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_T_cast_shape[3])\00", align 1
@.str.2014 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_T_cast_shape[4])\00", align 1
@.str.2015 = private constant [601 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_T_cast_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.strides: expected to be compact array\00", align 1
@.str.2016 = private constant [258 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.2017 = private constant [238 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.2018 = private constant [244 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.2020 = private constant [123 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7: num_args should be 5\00", align 1
@.str.2021 = private constant [178 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7: Expect arg[0] to be pointer\00", align 1
@.str.2022 = private constant [178 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7: Expect arg[1] to be pointer\00", align 1
@.str.2023 = private constant [178 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7: Expect arg[2] to be pointer\00", align 1
@.str.2024 = private constant [178 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7: Expect arg[3] to be pointer\00", align 1
@.str.2025 = private constant [194 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7: Expect arg[4] to be pointer\00", align 1
@.str.2026 = private constant [159 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.ndim is expected to equal 5\00", align 1
@.str.2027 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.dtype is expected to be int8\00", align 1
@.str.2028 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p0_shape[0])\00", align 1
@.str.2029 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p0_shape[1])\00", align 1
@.str.2030 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p0_shape[2])\00", align 1
@.str.2031 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p0_shape[3])\00", align 1
@.str.2032 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p0_shape[4])\00", align 1
@.str.2033 = private constant [582 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.strides: expected to be compact array\00", align 1
@.str.2034 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.2035 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.2036 = private constant [159 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.ndim is expected to equal 6\00", align 1
@.str.2037 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.dtype is expected to be int8\00", align 1
@.str.2038 = private constant [357 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p1_shape[0]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.shape[0] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p1_shape[0])\00", align 1
@.str.2039 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p1_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p1_shape[1])\00", align 1
@.str.2040 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p1_shape[2])\00", align 1
@.str.2041 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p1_shape[3])\00", align 1
@.str.2042 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p1_shape[4])\00", align 1
@.str.2043 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p1_shape[5])\00", align 1
@.str.2044 = private constant [580 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p1_strides[1]) and 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.strides: expected to be compact array\00", align 1
@.str.2045 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.2046 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.2047 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.2048 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p2.ndim is expected to equal 0\00", align 1
@.str.2049 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p2.dtype is expected to be int16\00", align 1
@.str.2050 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.2051 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.2052 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.2053 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p3.ndim is expected to equal 0\00", align 1
@.str.2054 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p3.dtype is expected to be int16\00", align 1
@.str.2055 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.2056 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.2057 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.2058 = private constant [167 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.ndim is expected to equal 5\00", align 1
@.str.2059 = private constant [295 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.dtype is expected to be int8\00", align 1
@.str.2060 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_T_cast_shape[0])\00", align 1
@.str.2061 = private constant [369 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_T_cast_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_T_cast_shape[1])\00", align 1
@.str.2062 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_T_cast_shape[2])\00", align 1
@.str.2063 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_T_cast_shape[3])\00", align 1
@.str.2064 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_T_cast_shape[4])\00", align 1
@.str.2065 = private constant [601 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_T_cast_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.strides: expected to be compact array\00", align 1
@.str.2066 = private constant [258 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.2067 = private constant [238 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.2068 = private constant [244 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.2070 = private constant [123 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8: num_args should be 5\00", align 1
@.str.2071 = private constant [178 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8: Expect arg[0] to be pointer\00", align 1
@.str.2072 = private constant [178 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8: Expect arg[1] to be pointer\00", align 1
@.str.2073 = private constant [178 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8: Expect arg[2] to be pointer\00", align 1
@.str.2074 = private constant [178 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8: Expect arg[3] to be pointer\00", align 1
@.str.2075 = private constant [194 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8: Expect arg[4] to be pointer\00", align 1
@.str.2076 = private constant [159 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.ndim is expected to equal 5\00", align 1
@.str.2077 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.dtype is expected to be int8\00", align 1
@.str.2078 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p0_shape[0])\00", align 1
@.str.2079 = private constant [357 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p0_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p0_shape[1])\00", align 1
@.str.2080 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p0_shape[2])\00", align 1
@.str.2081 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p0_shape[3])\00", align 1
@.str.2082 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p0_shape[4])\00", align 1
@.str.2083 = private constant [581 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p0_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.strides: expected to be compact array\00", align 1
@.str.2084 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.2085 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.2086 = private constant [159 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.ndim is expected to equal 6\00", align 1
@.str.2087 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.dtype is expected to be int8\00", align 1
@.str.2088 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p1_shape[0]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.shape[0] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p1_shape[0])\00", align 1
@.str.2089 = private constant [357 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p1_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p1_shape[1])\00", align 1
@.str.2090 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p1_shape[2])\00", align 1
@.str.2091 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p1_shape[3])\00", align 1
@.str.2092 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p1_shape[4])\00", align 1
@.str.2093 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p1_shape[5])\00", align 1
@.str.2094 = private constant [580 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p1_strides[1]) and 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.strides: expected to be compact array\00", align 1
@.str.2095 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.2096 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.2097 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.2098 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p2.ndim is expected to equal 0\00", align 1
@.str.2099 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p2.dtype is expected to be int16\00", align 1
@.str.2100 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.2101 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.2102 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.2103 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p3.ndim is expected to equal 0\00", align 1
@.str.2104 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p3.dtype is expected to be int16\00", align 1
@.str.2105 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.2106 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.2107 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.2108 = private constant [167 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.ndim is expected to equal 5\00", align 1
@.str.2109 = private constant [295 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.dtype is expected to be int8\00", align 1
@.str.2110 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_T_cast_shape[0])\00", align 1
@.str.2111 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_T_cast_shape[1]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_T_cast_shape[1])\00", align 1
@.str.2112 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_T_cast_shape[2])\00", align 1
@.str.2113 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_T_cast_shape[3])\00", align 1
@.str.2114 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_T_cast_shape[4])\00", align 1
@.str.2115 = private constant [601 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_T_cast_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.strides: expected to be compact array\00", align 1
@.str.2116 = private constant [258 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.2117 = private constant [238 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.2118 = private constant [244 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.2120 = private constant [123 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9: num_args should be 5\00", align 1
@.str.2121 = private constant [178 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9: Expect arg[0] to be pointer\00", align 1
@.str.2122 = private constant [178 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9: Expect arg[1] to be pointer\00", align 1
@.str.2123 = private constant [178 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9: Expect arg[2] to be pointer\00", align 1
@.str.2124 = private constant [178 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9: Expect arg[3] to be pointer\00", align 1
@.str.2125 = private constant [194 x i8] c"Assert fail: T_cast_code == 3 or T_cast_code == 13 or T_cast_code == 7 or T_cast_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9: Expect arg[4] to be pointer\00", align 1
@.str.2126 = private constant [159 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.ndim is expected to equal 5\00", align 1
@.str.2127 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.dtype is expected to be int8\00", align 1
@.str.2128 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p0_shape[0])\00", align 1
@.str.2129 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p0_shape[1]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p0_shape[1])\00", align 1
@.str.2130 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p0_shape[2])\00", align 1
@.str.2131 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p0_shape[3])\00", align 1
@.str.2132 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p0_shape[4])\00", align 1
@.str.2133 = private constant [581 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p0_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.strides: expected to be compact array\00", align 1
@.str.2134 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.2135 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.2136 = private constant [159 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.ndim is expected to equal 6\00", align 1
@.str.2137 = private constant [279 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.dtype is expected to be int8\00", align 1
@.str.2138 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p1_shape[0]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.shape[0] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p1_shape[0])\00", align 1
@.str.2139 = private constant [355 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p1_shape[1]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p1_shape[1])\00", align 1
@.str.2140 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p1_shape[2])\00", align 1
@.str.2141 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p1_shape[3])\00", align 1
@.str.2142 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p1_shape[4])\00", align 1
@.str.2143 = private constant [353 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p1_shape[5])\00", align 1
@.str.2144 = private constant [809 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p1_strides[3]) and 48 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p1_strides[2]) and 144 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p1_strides[1]) and 4608 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.strides: expected to be compact array\00", align 1
@.str.2145 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.2146 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.2147 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.2148 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p2.ndim is expected to equal 0\00", align 1
@.str.2149 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p2.dtype is expected to be int16\00", align 1
@.str.2150 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.2151 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.2152 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.2153 = private constant [159 x i8] c"Assert fail: 0 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p3.ndim is expected to equal 0\00", align 1
@.str.2154 = private constant [281 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(16) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p3.dtype is expected to be int16\00", align 1
@.str.2155 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.2156 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.2157 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.2158 = private constant [167 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_cast, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.ndim is expected to equal 5\00", align 1
@.str.2159 = private constant [295 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 5, \22uint8\22) == T.uint8(0) and T.tvm_struct_get(T_cast, 0, 6, \22uint8\22) == T.uint8(8) and T.tvm_struct_get(T_cast, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.dtype is expected to be int8\00", align 1
@.str.2160 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_T_cast_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_T_cast_shape[0])\00", align 1
@.str.2161 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_T_cast_shape[1]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_T_cast_shape[1])\00", align 1
@.str.2162 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_T_cast_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_T_cast_shape[2])\00", align 1
@.str.2163 = private constant [367 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_T_cast_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_T_cast_shape[3])\00", align 1
@.str.2164 = private constant [365 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_T_cast_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_T_cast_shape[4])\00", align 1
@.str.2165 = private constant [601 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_T_cast_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_T_cast_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_T_cast_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_T_cast_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.strides: expected to be compact array\00", align 1
@.str.2166 = private constant [258 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_cast, 0, 8, \22uint64\22)\00", align 1
@.str.2167 = private constant [238 x i8] c"Assert fail: T.tvm_struct_get(T_cast, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_cast, 0, 10, \22int32\22)\00", align 1
@.str.2168 = private constant [244 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_cast, 0, 9, \22int32\22)\00", align 1
@.str.2171 = private constant [97 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_dense_pack_add: num_args should be 4\00", align 1
@.str.2172 = private constant [152 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_dense_pack_add: Expect arg[0] to be pointer\00", align 1
@.str.2173 = private constant [152 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_dense_pack_add: Expect arg[1] to be pointer\00", align 1
@.str.2174 = private constant [152 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_dense_pack_add: Expect arg[2] to be pointer\00", align 1
@.str.2175 = private constant [164 x i8] c"Assert fail: T_add_code == 3 or T_add_code == 13 or T_add_code == 7 or T_add_code == 4, tvmgen_default_fused_nn_contrib_dense_pack_add: Expect arg[3] to be pointer\00", align 1
@.str.2176 = private constant [133 x i8] c"Assert fail: 2 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_dense_pack_add.p0.ndim is expected to equal 2\00", align 1
@.str.2177 = private constant [257 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_dense_pack_add.p0.dtype is expected to be float32\00", align 1
@.str.2178 = private constant [275 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p0_shape[0])\00", align 1
@.str.2179 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p0_shape[1]) == 2048, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p0.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p0_shape[1])\00", align 1
@.str.2180 = private constant [185 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p0_strides[1]), tvmgen_default_fused_nn_contrib_dense_pack_add.p0.strides: expected to be compact array\00", align 1
@.str.2181 = private constant [220 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.2182 = private constant [200 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.2183 = private constant [133 x i8] c"Assert fail: 3 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_dense_pack_add.p1.ndim is expected to equal 3\00", align 1
@.str.2184 = private constant [257 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_dense_pack_add.p1.dtype is expected to be float32\00", align 1
@.str.2185 = private constant [279 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p1_shape[0]) == 125, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p1.shape[0] has an unsatisfied constraint: 125 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p1_shape[0])\00", align 1
@.str.2186 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p1_shape[1]) == 2048, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p1.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p1_shape[1])\00", align 1
@.str.2187 = private constant [275 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p1_shape[2]) == 8, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p1.shape[2] has an unsatisfied constraint: 8 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p1_shape[2])\00", align 1
@.str.2188 = private constant [363 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p1_strides[2]) and 8 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p1_strides[1]) and 16384 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p1_strides[0]), tvmgen_default_fused_nn_contrib_dense_pack_add.p1.strides: expected to be compact array\00", align 1
@.str.2189 = private constant [220 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.2190 = private constant [200 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.2191 = private constant [206 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.2192 = private constant [133 x i8] c"Assert fail: 2 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_dense_pack_add.p2.ndim is expected to equal 2\00", align 1
@.str.2193 = private constant [257 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_dense_pack_add.p2.dtype is expected to be float32\00", align 1
@.str.2194 = private constant [275 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p2_shape[0])\00", align 1
@.str.2195 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p2_shape[1]) == 1000, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p2.shape[1] has an unsatisfied constraint: 1000 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p2_shape[1])\00", align 1
@.str.2196 = private constant [185 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p2_strides[1]), tvmgen_default_fused_nn_contrib_dense_pack_add.p2.strides: expected to be compact array\00", align 1
@.str.2197 = private constant [220 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.2198 = private constant [200 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.2199 = private constant [206 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.2200 = private constant [139 x i8] c"Assert fail: 2 == T.tvm_struct_get(T_add, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.ndim is expected to equal 2\00", align 1
@.str.2201 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_add, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_add, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.dtype is expected to be float32\00", align 1
@.str.2202 = private constant [284 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_T_add_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_T_add_shape[0])\00", align 1
@.str.2203 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_T_add_shape[1]) == 1000, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.shape[1] has an unsatisfied constraint: 1000 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_T_add_shape[1])\00", align 1
@.str.2204 = private constant [191 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_T_add_strides[1]), tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.strides: expected to be compact array\00", align 1
@.str.2205 = private constant [229 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22)\00", align 1
@.str.2206 = private constant [209 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_add, 0, 10, \22int32\22)\00", align 1
@.str.2207 = private constant [215 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22)\00", align 1
@.str.2209 = private constant [85 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_nn_max_pool2d: num_args should be 2\00", align 1
@.str.2210 = private constant [140 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_max_pool2d: Expect arg[0] to be pointer\00", align 1
@.str.2211 = private constant [164 x i8] c"Assert fail: pool_max_code == 3 or pool_max_code == 13 or pool_max_code == 7 or pool_max_code == 4, tvmgen_default_fused_nn_max_pool2d: Expect arg[1] to be pointer\00", align 1
@.str.2212 = private constant [121 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_max_pool2d.p0.ndim is expected to equal 5\00", align 1
@.str.2213 = private constant [245 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_max_pool2d.p0.dtype is expected to be float32\00", align 1
@.str.2214 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_max_pool2d.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[0])\00", align 1
@.str.2215 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[1]) == 2, Argument tvmgen_default_fused_nn_max_pool2d.p0.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[1])\00", align 1
@.str.2216 = private constant [243 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[2]) == 112, Argument tvmgen_default_fused_nn_max_pool2d.p0.shape[2] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[2])\00", align 1
@.str.2217 = private constant [243 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[3]) == 112, Argument tvmgen_default_fused_nn_max_pool2d.p0.shape[3] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[3])\00", align 1
@.str.2218 = private constant [241 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[4]) == 32, Argument tvmgen_default_fused_nn_max_pool2d.p0.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[4])\00", align 1
@.str.2219 = private constant [395 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_strides[3]) and 3584 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_strides[2]) and 401408 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_strides[1]), tvmgen_default_fused_nn_max_pool2d.p0.strides: expected to be compact array\00", align 1
@.str.2220 = private constant [208 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_max_pool2d.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.2221 = private constant [188 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_max_pool2d.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.2222 = private constant [133 x i8] c"Assert fail: 5 == T.tvm_struct_get(pool_max, 0, 4, \22int32\22), tvmgen_default_fused_nn_max_pool2d.pool_max.ndim is expected to equal 5\00", align 1
@.str.2223 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(pool_max, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(pool_max, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(pool_max, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_max_pool2d.pool_max.dtype is expected to be float32\00", align 1
@.str.2224 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[0]) == 1, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[0])\00", align 1
@.str.2225 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[1]) == 2, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[1])\00", align 1
@.str.2226 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[2]) == 56, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[2])\00", align 1
@.str.2227 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[3]) == 56, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[3])\00", align 1
@.str.2228 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[4]) == 32, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[4])\00", align 1
@.str.2229 = private constant [425 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_strides[2]) and 100352 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_strides[1]), tvmgen_default_fused_nn_max_pool2d.pool_max.strides: expected to be compact array\00", align 1
@.str.2230 = private constant [226 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(pool_max, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_max_pool2d.pool_max.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(pool_max, 0, 8, \22uint64\22)\00", align 1
@.str.2231 = private constant [206 x i8] c"Assert fail: T.tvm_struct_get(pool_max, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(pool_max, 0, 10, \22int32\22)\00", align 1
@.str.2232 = private constant [212 x i8] c"Assert fail: dev_id == T.tvm_struct_get(pool_max, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_max_pool2d.pool_max.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(pool_max, 0, 9, \22int32\22)\00", align 1
@llvm.global_ctors = appending global [0 x { i32, ptr, ptr }] zeroinitializer

define dllexport i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !11, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !12, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !13, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !14, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !15, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !16, metadata !DIExpression()), !dbg !17
  %0 = icmp eq i32 %num_args, 3, !dbg !17
  br i1 %0, label %assert_end, label %assert_fail, !dbg !17, !prof !18

common.ret:                                       ; preds = %assert_end83, %assert_fail82, %assert_fail80, %assert_fail78, %assert_fail76, %assert_fail72, %assert_fail70, %assert_fail68, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail58, %assert_fail56, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail56 ], [ -1, %assert_fail58 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail68 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail80 ], [ -1, %assert_fail82 ], [ %228, %assert_end83 ]
  ret i32 %common.ret.op, !dbg !17

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %1(ptr nonnull @.str), !dbg !17
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !17, !tbaa !22
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !17
  %p1.code = load i32, ptr %2, align 4, !dbg !17, !tbaa !33
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !17
  %T_cast.code = load i32, ptr %3, align 4, !dbg !17, !tbaa !35
  %p0 = load ptr, ptr %args, align 8, !dbg !17
  %4 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !17
  %p1 = load ptr, ptr %4, align 8, !dbg !17
  %5 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !17
  %T_cast = load ptr, ptr %5, align 8, !dbg !17
  %p085 = load ptr, ptr %p0, align 8, !dbg !17
  call void @llvm.assume(i1 true) [ "align"(ptr %p085, i64 64) ], !dbg !17
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !17
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape = load ptr, ptr %6, align 8, !dbg !17
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !17
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.strides = load ptr, ptr %7, align 8, !dbg !17
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !17
  %dev_id = load i32, ptr %8, align 4, !dbg !17
  %p186 = load ptr, ptr %p1, align 8, !dbg !17
  call void @llvm.assume(i1 true) [ "align"(ptr %p186, i64 64) ], !dbg !17
  %9 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !17
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape = load ptr, ptr %9, align 8, !dbg !17
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !17
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.strides = load ptr, ptr %10, align 8, !dbg !17
  %T_cast84 = load ptr, ptr %T_cast, align 8, !dbg !17
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast84, i64 64) ], !dbg !17
  %11 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !17
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape = load ptr, ptr %11, align 8, !dbg !17
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !17
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.strides = load ptr, ptr %12, align 8, !dbg !17
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !17

assert_fail4:                                     ; preds = %assert_end
  %13 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %13(ptr nonnull @.str.1), !dbg !17
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !17

assert_fail6:                                     ; preds = %assert_end5
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %14(ptr nonnull @.str.2), !dbg !17
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !17

assert_fail8:                                     ; preds = %assert_end7
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %15(ptr nonnull @.str.3), !dbg !17
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %16 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !17
  %17 = load i32, ptr %16, align 4, !dbg !17
  %18 = icmp eq i32 %17, 5, !dbg !17
  br i1 %18, label %assert_end13, label %assert_fail10, !dbg !17, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %19(ptr nonnull @.str.4), !dbg !17
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %20 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !17
  %21 = load i16, ptr %20, align 2, !dbg !17
  %22 = icmp eq i16 %21, 1, !dbg !17
  %23 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !17
  %24 = load i8, ptr %23, align 1, !dbg !17
  %25 = icmp eq i8 %24, 8, !dbg !17
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !17
  %27 = load i8, ptr %26, align 1, !dbg !17
  %28 = icmp eq i8 %27, 0, !dbg !17
  %29 = and i1 %25, %28, !dbg !17
  %30 = and i1 %22, %29, !dbg !17
  br i1 %30, label %assert_end15, label %assert_fail14, !dbg !17, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %31 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %31(ptr nonnull @.str.5), !dbg !17
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %32 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape, align 8, !dbg !17, !tbaa !38
  %33 = and i64 %32, 4294967295, !dbg !17
  %34 = icmp eq i64 %33, 1, !dbg !17
  br i1 %34, label %assert_end17, label %assert_fail16, !dbg !17, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %35(ptr nonnull @.str.6), !dbg !17
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape, i64 1, !dbg !17
  %37 = load i64, ptr %36, align 8, !dbg !17, !tbaa !48
  %38 = and i64 %37, 4294967295, !dbg !17
  %39 = icmp eq i64 %38, 64, !dbg !17
  br i1 %39, label %assert_end19, label %assert_fail18, !dbg !17, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %40(ptr nonnull @.str.7), !dbg !17
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape, i64 2, !dbg !17
  %42 = load i64, ptr %41, align 8, !dbg !17, !tbaa !50
  %43 = and i64 %42, 4294967295, !dbg !17
  %44 = icmp eq i64 %43, 56, !dbg !17
  br i1 %44, label %assert_end21, label %assert_fail20, !dbg !17, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %45(ptr nonnull @.str.8), !dbg !17
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape, i64 3, !dbg !17
  %47 = load i64, ptr %46, align 8, !dbg !17, !tbaa !53
  %48 = and i64 %47, 4294967295, !dbg !17
  %49 = icmp eq i64 %48, 56, !dbg !17
  br i1 %49, label %assert_end23, label %assert_fail22, !dbg !17, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %50(ptr nonnull @.str.9), !dbg !17
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.shape, i64 4, !dbg !17
  %52 = load i64, ptr %51, align 8, !dbg !17, !tbaa !55
  %53 = and i64 %52, 4294967295, !dbg !17
  %54 = icmp eq i64 %53, 4, !dbg !17
  br i1 %54, label %assert_end25, label %assert_fail24, !dbg !17, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %55(ptr nonnull @.str.10), !dbg !17
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %.not = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.strides, null, !dbg !17
  br i1 %.not, label %if_end, label %if_then, !dbg !17, !prof !59

if_then:                                          ; preds = %assert_end25
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.strides, i64 1, !dbg !17
  %57 = load i64, ptr %56, align 8, !dbg !17, !tbaa !60
  %58 = and i64 %57, 4294967295, !dbg !17
  %59 = icmp eq i64 %58, 12544, !dbg !17
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.strides, i64 2, !dbg !17
  %61 = load i64, ptr %60, align 8, !dbg !17, !tbaa !70
  %62 = and i64 %61, 4294967295, !dbg !17
  %63 = icmp eq i64 %62, 224, !dbg !17
  %64 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.strides, i64 3, !dbg !17
  %65 = load i64, ptr %64, align 8, !dbg !17, !tbaa !73
  %66 = and i64 %65, 4294967295, !dbg !17
  %67 = icmp eq i64 %66, 4, !dbg !17
  %68 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p0.strides, i64 4, !dbg !17
  %69 = load i64, ptr %68, align 8, !dbg !17, !tbaa !75
  %70 = and i64 %69, 4294967295, !dbg !17
  %71 = icmp eq i64 %70, 1, !dbg !17
  %72 = and i1 %67, %71, !dbg !17
  %73 = and i1 %63, %72, !dbg !17
  %74 = and i1 %59, %73, !dbg !17
  br i1 %74, label %if_end, label %assert_fail26, !dbg !17, !prof !18

if_end:                                           ; preds = %if_then, %assert_end25
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !17
  %76 = load i64, ptr %75, align 8, !dbg !17
  %77 = icmp eq i64 %76, 0, !dbg !17
  br i1 %77, label %assert_end29, label %assert_fail28, !dbg !17, !prof !18

assert_fail26:                                    ; preds = %if_then
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %78(ptr nonnull @.str.11), !dbg !17
  br label %common.ret

assert_fail28:                                    ; preds = %if_end
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %79(ptr nonnull @.str.12), !dbg !17
  br label %common.ret

assert_end29:                                     ; preds = %if_end
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !17
  %81 = load i32, ptr %80, align 4, !dbg !17
  %82 = icmp eq i32 %81, 1, !dbg !17
  br i1 %82, label %assert_end31, label %assert_fail30, !dbg !17, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %83(ptr nonnull @.str.13), !dbg !17
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !17
  %85 = load i32, ptr %84, align 4, !dbg !17
  %86 = icmp eq i32 %85, 5, !dbg !17
  br i1 %86, label %assert_end35, label %assert_fail32, !dbg !17, !prof !18

assert_fail32:                                    ; preds = %assert_end31
  %87 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %87(ptr nonnull @.str.14), !dbg !17
  br label %common.ret

assert_end35:                                     ; preds = %assert_end31
  %88 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !17
  %89 = load i16, ptr %88, align 2, !dbg !17
  %90 = icmp eq i16 %89, 1, !dbg !17
  %91 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !17
  %92 = load i8, ptr %91, align 1, !dbg !17
  %93 = icmp eq i8 %92, 8, !dbg !17
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !17
  %95 = load i8, ptr %94, align 1, !dbg !17
  %96 = icmp eq i8 %95, 0, !dbg !17
  %97 = and i1 %93, %96, !dbg !17
  %98 = and i1 %90, %97, !dbg !17
  br i1 %98, label %assert_end37, label %assert_fail36, !dbg !17, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %99(ptr nonnull @.str.15), !dbg !17
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %100 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape, align 8, !dbg !17, !tbaa !79
  %101 = and i64 %100, 4294967295, !dbg !17
  %102 = icmp eq i64 %101, 1, !dbg !17
  br i1 %102, label %assert_end39, label %assert_fail38, !dbg !17, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %103(ptr nonnull @.str.16), !dbg !17
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape, i64 1, !dbg !17
  %105 = load i64, ptr %104, align 8, !dbg !17, !tbaa !89
  %106 = and i64 %105, 4294967295, !dbg !17
  %107 = icmp eq i64 %106, 64, !dbg !17
  br i1 %107, label %assert_end41, label %assert_fail40, !dbg !17, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %108(ptr nonnull @.str.17), !dbg !17
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape, i64 2, !dbg !17
  %110 = load i64, ptr %109, align 8, !dbg !17, !tbaa !91
  %111 = and i64 %110, 4294967295, !dbg !17
  %112 = icmp eq i64 %111, 56, !dbg !17
  br i1 %112, label %assert_end43, label %assert_fail42, !dbg !17, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %113(ptr nonnull @.str.18), !dbg !17
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape, i64 3, !dbg !17
  %115 = load i64, ptr %114, align 8, !dbg !17, !tbaa !94
  %116 = and i64 %115, 4294967295, !dbg !17
  %117 = icmp eq i64 %116, 56, !dbg !17
  br i1 %117, label %assert_end45, label %assert_fail44, !dbg !17, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %118(ptr nonnull @.str.19), !dbg !17
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.shape, i64 4, !dbg !17
  %120 = load i64, ptr %119, align 8, !dbg !17, !tbaa !96
  %121 = and i64 %120, 4294967295, !dbg !17
  %122 = icmp eq i64 %121, 4, !dbg !17
  br i1 %122, label %assert_end47, label %assert_fail46, !dbg !17, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %123(ptr nonnull @.str.20), !dbg !17
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %.not87 = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.strides, null, !dbg !17
  br i1 %.not87, label %if_end49, label %if_then48, !dbg !17, !prof !59

if_then48:                                        ; preds = %assert_end47
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.strides, i64 1, !dbg !17
  %125 = load i64, ptr %124, align 8, !dbg !17, !tbaa !100
  %126 = and i64 %125, 4294967295, !dbg !17
  %127 = icmp eq i64 %126, 12544, !dbg !17
  %128 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.strides, i64 2, !dbg !17
  %129 = load i64, ptr %128, align 8, !dbg !17, !tbaa !110
  %130 = and i64 %129, 4294967295, !dbg !17
  %131 = icmp eq i64 %130, 224, !dbg !17
  %132 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.strides, i64 3, !dbg !17
  %133 = load i64, ptr %132, align 8, !dbg !17, !tbaa !113
  %134 = and i64 %133, 4294967295, !dbg !17
  %135 = icmp eq i64 %134, 4, !dbg !17
  %136 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.p1.strides, i64 4, !dbg !17
  %137 = load i64, ptr %136, align 8, !dbg !17, !tbaa !115
  %138 = and i64 %137, 4294967295, !dbg !17
  %139 = icmp eq i64 %138, 1, !dbg !17
  %140 = and i1 %135, %139, !dbg !17
  %141 = and i1 %131, %140, !dbg !17
  %142 = and i1 %127, %141, !dbg !17
  br i1 %142, label %if_end49, label %assert_fail50, !dbg !17, !prof !18

if_end49:                                         ; preds = %if_then48, %assert_end47
  %143 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !17
  %144 = load i64, ptr %143, align 8, !dbg !17
  %145 = icmp eq i64 %144, 0, !dbg !17
  br i1 %145, label %assert_end53, label %assert_fail52, !dbg !17, !prof !18

assert_fail50:                                    ; preds = %if_then48
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %146(ptr nonnull @.str.21), !dbg !17
  br label %common.ret

assert_fail52:                                    ; preds = %if_end49
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %147(ptr nonnull @.str.22), !dbg !17
  br label %common.ret

assert_end53:                                     ; preds = %if_end49
  %148 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !17
  %149 = load i32, ptr %148, align 4, !dbg !17
  %150 = icmp eq i32 %149, 1, !dbg !17
  br i1 %150, label %assert_end55, label %assert_fail54, !dbg !17, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %151(ptr nonnull @.str.23), !dbg !17
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %152 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !17
  %153 = load i32, ptr %152, align 4, !dbg !17
  %154 = icmp eq i32 %dev_id, %153, !dbg !17
  br i1 %154, label %assert_end57, label %assert_fail56, !dbg !17, !prof !18

assert_fail56:                                    ; preds = %assert_end55
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %155(ptr nonnull @.str.24), !dbg !17
  br label %common.ret

assert_end57:                                     ; preds = %assert_end55
  %156 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !17
  %157 = load i32, ptr %156, align 4, !dbg !17
  %158 = icmp eq i32 %157, 5, !dbg !17
  br i1 %158, label %assert_end61, label %assert_fail58, !dbg !17, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %159 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %159(ptr nonnull @.str.25), !dbg !17
  br label %common.ret

assert_end61:                                     ; preds = %assert_end57
  %160 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !17
  %161 = load i16, ptr %160, align 2, !dbg !17
  %162 = icmp eq i16 %161, 1, !dbg !17
  %163 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !17
  %164 = load i8, ptr %163, align 1, !dbg !17
  %165 = icmp eq i8 %164, 8, !dbg !17
  %166 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !17
  %167 = load i8, ptr %166, align 1, !dbg !17
  %168 = icmp eq i8 %167, 0, !dbg !17
  %169 = and i1 %165, %168, !dbg !17
  %170 = and i1 %162, %169, !dbg !17
  br i1 %170, label %assert_end63, label %assert_fail62, !dbg !17, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %171 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %171(ptr nonnull @.str.26), !dbg !17
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %172 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape, align 8, !dbg !17, !tbaa !119
  %173 = and i64 %172, 4294967295, !dbg !17
  %174 = icmp eq i64 %173, 1, !dbg !17
  br i1 %174, label %assert_end65, label %assert_fail64, !dbg !17, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %175(ptr nonnull @.str.27), !dbg !17
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape, i64 1, !dbg !17
  %177 = load i64, ptr %176, align 8, !dbg !17, !tbaa !129
  %178 = and i64 %177, 4294967295, !dbg !17
  %179 = icmp eq i64 %178, 64, !dbg !17
  br i1 %179, label %assert_end67, label %assert_fail66, !dbg !17, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %180(ptr nonnull @.str.28), !dbg !17
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %181 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape, i64 2, !dbg !17
  %182 = load i64, ptr %181, align 8, !dbg !17, !tbaa !131
  %183 = and i64 %182, 4294967295, !dbg !17
  %184 = icmp eq i64 %183, 56, !dbg !17
  br i1 %184, label %assert_end69, label %assert_fail68, !dbg !17, !prof !18

assert_fail68:                                    ; preds = %assert_end67
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %185(ptr nonnull @.str.29), !dbg !17
  br label %common.ret

assert_end69:                                     ; preds = %assert_end67
  %186 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape, i64 3, !dbg !17
  %187 = load i64, ptr %186, align 8, !dbg !17, !tbaa !134
  %188 = and i64 %187, 4294967295, !dbg !17
  %189 = icmp eq i64 %188, 56, !dbg !17
  br i1 %189, label %assert_end71, label %assert_fail70, !dbg !17, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %190 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %190(ptr nonnull @.str.30), !dbg !17
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %191 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.shape, i64 4, !dbg !17
  %192 = load i64, ptr %191, align 8, !dbg !17, !tbaa !136
  %193 = and i64 %192, 4294967295, !dbg !17
  %194 = icmp eq i64 %193, 4, !dbg !17
  br i1 %194, label %assert_end73, label %assert_fail72, !dbg !17, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %195 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %195(ptr nonnull @.str.31), !dbg !17
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %.not88 = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.strides, null, !dbg !17
  br i1 %.not88, label %if_end75, label %if_then74, !dbg !17, !prof !59

if_then74:                                        ; preds = %assert_end73
  %196 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.strides, i64 1, !dbg !17
  %197 = load i64, ptr %196, align 8, !dbg !17, !tbaa !140
  %198 = and i64 %197, 4294967295, !dbg !17
  %199 = icmp eq i64 %198, 12544, !dbg !17
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.strides, i64 2, !dbg !17
  %201 = load i64, ptr %200, align 8, !dbg !17, !tbaa !150
  %202 = and i64 %201, 4294967295, !dbg !17
  %203 = icmp eq i64 %202, 224, !dbg !17
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.strides, i64 3, !dbg !17
  %205 = load i64, ptr %204, align 8, !dbg !17, !tbaa !153
  %206 = and i64 %205, 4294967295, !dbg !17
  %207 = icmp eq i64 %206, 4, !dbg !17
  %208 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast.T_cast.strides, i64 4, !dbg !17
  %209 = load i64, ptr %208, align 8, !dbg !17, !tbaa !155
  %210 = and i64 %209, 4294967295, !dbg !17
  %211 = icmp eq i64 %210, 1, !dbg !17
  %212 = and i1 %207, %211, !dbg !17
  %213 = and i1 %203, %212, !dbg !17
  %214 = and i1 %199, %213, !dbg !17
  br i1 %214, label %if_end75, label %assert_fail76, !dbg !17, !prof !18

if_end75:                                         ; preds = %if_then74, %assert_end73
  %215 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !17
  %216 = load i64, ptr %215, align 8, !dbg !17
  %217 = icmp eq i64 %216, 0, !dbg !17
  br i1 %217, label %assert_end79, label %assert_fail78, !dbg !17, !prof !18

assert_fail76:                                    ; preds = %if_then74
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %218(ptr nonnull @.str.32), !dbg !17
  br label %common.ret

assert_fail78:                                    ; preds = %if_end75
  %219 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %219(ptr nonnull @.str.33), !dbg !17
  br label %common.ret

assert_end79:                                     ; preds = %if_end75
  %220 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !17
  %221 = load i32, ptr %220, align 4, !dbg !17
  %222 = icmp eq i32 %221, 1, !dbg !17
  br i1 %222, label %assert_end81, label %assert_fail80, !dbg !17, !prof !18

assert_fail80:                                    ; preds = %assert_end79
  %223 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %223(ptr nonnull @.str.34), !dbg !17
  br label %common.ret

assert_end81:                                     ; preds = %assert_end79
  %224 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !17
  %225 = load i32, ptr %224, align 4, !dbg !17
  %226 = icmp eq i32 %dev_id, %225, !dbg !17
  br i1 %226, label %assert_end83, label %assert_fail82, !dbg !17, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %227(ptr nonnull @.str.35), !dbg !17
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %228 = tail call fastcc i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_compute_(ptr %T_cast84, ptr %p085, ptr %p186), !dbg !17
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !159 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !161, metadata !DIExpression()), !dbg !167
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !162, metadata !DIExpression()), !dbg !167
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !163, metadata !DIExpression()), !dbg !167
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !164, metadata !DIExpression()), !dbg !167
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !165, metadata !DIExpression()), !dbg !167
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !166, metadata !DIExpression()), !dbg !167
  %0 = icmp eq i32 %num_args, 3, !dbg !167
  br i1 %0, label %assert_end, label %assert_fail, !dbg !167, !prof !18

common.ret:                                       ; preds = %assert_end83, %assert_fail82, %assert_fail80, %assert_fail78, %assert_fail76, %assert_fail72, %assert_fail70, %assert_fail68, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail58, %assert_fail56, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail56 ], [ -1, %assert_fail58 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail68 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail80 ], [ -1, %assert_fail82 ], [ %228, %assert_end83 ]
  ret i32 %common.ret.op, !dbg !167

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %1(ptr nonnull @.str.36), !dbg !167
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !167, !tbaa !168
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !167
  %p1.code = load i32, ptr %2, align 4, !dbg !167, !tbaa !179
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !167
  %T_cast.code = load i32, ptr %3, align 4, !dbg !167, !tbaa !181
  %p0 = load ptr, ptr %args, align 8, !dbg !167
  %4 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !167
  %p1 = load ptr, ptr %4, align 8, !dbg !167
  %5 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !167
  %T_cast = load ptr, ptr %5, align 8, !dbg !167
  %p085 = load ptr, ptr %p0, align 8, !dbg !167
  call void @llvm.assume(i1 true) [ "align"(ptr %p085, i64 64) ], !dbg !167
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !167
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape = load ptr, ptr %6, align 8, !dbg !167
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !167
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.strides = load ptr, ptr %7, align 8, !dbg !167
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !167
  %dev_id = load i32, ptr %8, align 4, !dbg !167
  %p186 = load ptr, ptr %p1, align 8, !dbg !167
  call void @llvm.assume(i1 true) [ "align"(ptr %p186, i64 64) ], !dbg !167
  %9 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !167
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape = load ptr, ptr %9, align 8, !dbg !167
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !167
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.strides = load ptr, ptr %10, align 8, !dbg !167
  %T_cast84 = load ptr, ptr %T_cast, align 8, !dbg !167
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast84, i64 64) ], !dbg !167
  %11 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !167
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape = load ptr, ptr %11, align 8, !dbg !167
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !167
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.strides = load ptr, ptr %12, align 8, !dbg !167
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !167

assert_fail4:                                     ; preds = %assert_end
  %13 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %13(ptr nonnull @.str.37), !dbg !167
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !167

assert_fail6:                                     ; preds = %assert_end5
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %14(ptr nonnull @.str.38), !dbg !167
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !167

assert_fail8:                                     ; preds = %assert_end7
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %15(ptr nonnull @.str.39), !dbg !167
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %16 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !167
  %17 = load i32, ptr %16, align 4, !dbg !167
  %18 = icmp eq i32 %17, 5, !dbg !167
  br i1 %18, label %assert_end13, label %assert_fail10, !dbg !167, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %19(ptr nonnull @.str.40), !dbg !167
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %20 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !167
  %21 = load i16, ptr %20, align 2, !dbg !167
  %22 = icmp eq i16 %21, 1, !dbg !167
  %23 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !167
  %24 = load i8, ptr %23, align 1, !dbg !167
  %25 = icmp eq i8 %24, 8, !dbg !167
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !167
  %27 = load i8, ptr %26, align 1, !dbg !167
  %28 = icmp eq i8 %27, 0, !dbg !167
  %29 = and i1 %25, %28, !dbg !167
  %30 = and i1 %22, %29, !dbg !167
  br i1 %30, label %assert_end15, label %assert_fail14, !dbg !167, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %31 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %31(ptr nonnull @.str.41), !dbg !167
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %32 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape, align 8, !dbg !167, !tbaa !184
  %33 = and i64 %32, 4294967295, !dbg !167
  %34 = icmp eq i64 %33, 1, !dbg !167
  br i1 %34, label %assert_end17, label %assert_fail16, !dbg !167, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %35(ptr nonnull @.str.42), !dbg !167
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape, i64 1, !dbg !167
  %37 = load i64, ptr %36, align 8, !dbg !167, !tbaa !194
  %38 = and i64 %37, 4294967295, !dbg !167
  %39 = icmp eq i64 %38, 128, !dbg !167
  br i1 %39, label %assert_end19, label %assert_fail18, !dbg !167, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %40(ptr nonnull @.str.43), !dbg !167
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape, i64 2, !dbg !167
  %42 = load i64, ptr %41, align 8, !dbg !167, !tbaa !196
  %43 = and i64 %42, 4294967295, !dbg !167
  %44 = icmp eq i64 %43, 28, !dbg !167
  br i1 %44, label %assert_end21, label %assert_fail20, !dbg !167, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %45(ptr nonnull @.str.44), !dbg !167
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape, i64 3, !dbg !167
  %47 = load i64, ptr %46, align 8, !dbg !167, !tbaa !199
  %48 = and i64 %47, 4294967295, !dbg !167
  %49 = icmp eq i64 %48, 28, !dbg !167
  br i1 %49, label %assert_end23, label %assert_fail22, !dbg !167, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %50(ptr nonnull @.str.45), !dbg !167
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.shape, i64 4, !dbg !167
  %52 = load i64, ptr %51, align 8, !dbg !167, !tbaa !201
  %53 = and i64 %52, 4294967295, !dbg !167
  %54 = icmp eq i64 %53, 4, !dbg !167
  br i1 %54, label %assert_end25, label %assert_fail24, !dbg !167, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %55(ptr nonnull @.str.46), !dbg !167
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %.not = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.strides, null, !dbg !167
  br i1 %.not, label %if_end, label %if_then, !dbg !167, !prof !59

if_then:                                          ; preds = %assert_end25
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.strides, i64 1, !dbg !167
  %57 = load i64, ptr %56, align 8, !dbg !167, !tbaa !205
  %58 = and i64 %57, 4294967295, !dbg !167
  %59 = icmp eq i64 %58, 3136, !dbg !167
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.strides, i64 2, !dbg !167
  %61 = load i64, ptr %60, align 8, !dbg !167, !tbaa !215
  %62 = and i64 %61, 4294967295, !dbg !167
  %63 = icmp eq i64 %62, 112, !dbg !167
  %64 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.strides, i64 3, !dbg !167
  %65 = load i64, ptr %64, align 8, !dbg !167, !tbaa !218
  %66 = and i64 %65, 4294967295, !dbg !167
  %67 = icmp eq i64 %66, 4, !dbg !167
  %68 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p0.strides, i64 4, !dbg !167
  %69 = load i64, ptr %68, align 8, !dbg !167, !tbaa !220
  %70 = and i64 %69, 4294967295, !dbg !167
  %71 = icmp eq i64 %70, 1, !dbg !167
  %72 = and i1 %67, %71, !dbg !167
  %73 = and i1 %63, %72, !dbg !167
  %74 = and i1 %59, %73, !dbg !167
  br i1 %74, label %if_end, label %assert_fail26, !dbg !167, !prof !18

if_end:                                           ; preds = %if_then, %assert_end25
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !167
  %76 = load i64, ptr %75, align 8, !dbg !167
  %77 = icmp eq i64 %76, 0, !dbg !167
  br i1 %77, label %assert_end29, label %assert_fail28, !dbg !167, !prof !18

assert_fail26:                                    ; preds = %if_then
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %78(ptr nonnull @.str.47), !dbg !167
  br label %common.ret

assert_fail28:                                    ; preds = %if_end
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %79(ptr nonnull @.str.48), !dbg !167
  br label %common.ret

assert_end29:                                     ; preds = %if_end
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !167
  %81 = load i32, ptr %80, align 4, !dbg !167
  %82 = icmp eq i32 %81, 1, !dbg !167
  br i1 %82, label %assert_end31, label %assert_fail30, !dbg !167, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %83(ptr nonnull @.str.49), !dbg !167
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !167
  %85 = load i32, ptr %84, align 4, !dbg !167
  %86 = icmp eq i32 %85, 5, !dbg !167
  br i1 %86, label %assert_end35, label %assert_fail32, !dbg !167, !prof !18

assert_fail32:                                    ; preds = %assert_end31
  %87 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %87(ptr nonnull @.str.50), !dbg !167
  br label %common.ret

assert_end35:                                     ; preds = %assert_end31
  %88 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !167
  %89 = load i16, ptr %88, align 2, !dbg !167
  %90 = icmp eq i16 %89, 1, !dbg !167
  %91 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !167
  %92 = load i8, ptr %91, align 1, !dbg !167
  %93 = icmp eq i8 %92, 8, !dbg !167
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !167
  %95 = load i8, ptr %94, align 1, !dbg !167
  %96 = icmp eq i8 %95, 0, !dbg !167
  %97 = and i1 %93, %96, !dbg !167
  %98 = and i1 %90, %97, !dbg !167
  br i1 %98, label %assert_end37, label %assert_fail36, !dbg !167, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %99(ptr nonnull @.str.51), !dbg !167
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %100 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape, align 8, !dbg !167, !tbaa !224
  %101 = and i64 %100, 4294967295, !dbg !167
  %102 = icmp eq i64 %101, 1, !dbg !167
  br i1 %102, label %assert_end39, label %assert_fail38, !dbg !167, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %103(ptr nonnull @.str.52), !dbg !167
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape, i64 1, !dbg !167
  %105 = load i64, ptr %104, align 8, !dbg !167, !tbaa !234
  %106 = and i64 %105, 4294967295, !dbg !167
  %107 = icmp eq i64 %106, 128, !dbg !167
  br i1 %107, label %assert_end41, label %assert_fail40, !dbg !167, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %108(ptr nonnull @.str.53), !dbg !167
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape, i64 2, !dbg !167
  %110 = load i64, ptr %109, align 8, !dbg !167, !tbaa !236
  %111 = and i64 %110, 4294967295, !dbg !167
  %112 = icmp eq i64 %111, 28, !dbg !167
  br i1 %112, label %assert_end43, label %assert_fail42, !dbg !167, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %113(ptr nonnull @.str.54), !dbg !167
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape, i64 3, !dbg !167
  %115 = load i64, ptr %114, align 8, !dbg !167, !tbaa !239
  %116 = and i64 %115, 4294967295, !dbg !167
  %117 = icmp eq i64 %116, 28, !dbg !167
  br i1 %117, label %assert_end45, label %assert_fail44, !dbg !167, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %118(ptr nonnull @.str.55), !dbg !167
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.shape, i64 4, !dbg !167
  %120 = load i64, ptr %119, align 8, !dbg !167, !tbaa !241
  %121 = and i64 %120, 4294967295, !dbg !167
  %122 = icmp eq i64 %121, 4, !dbg !167
  br i1 %122, label %assert_end47, label %assert_fail46, !dbg !167, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %123(ptr nonnull @.str.56), !dbg !167
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %.not87 = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.strides, null, !dbg !167
  br i1 %.not87, label %if_end49, label %if_then48, !dbg !167, !prof !59

if_then48:                                        ; preds = %assert_end47
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.strides, i64 1, !dbg !167
  %125 = load i64, ptr %124, align 8, !dbg !167, !tbaa !245
  %126 = and i64 %125, 4294967295, !dbg !167
  %127 = icmp eq i64 %126, 3136, !dbg !167
  %128 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.strides, i64 2, !dbg !167
  %129 = load i64, ptr %128, align 8, !dbg !167, !tbaa !255
  %130 = and i64 %129, 4294967295, !dbg !167
  %131 = icmp eq i64 %130, 112, !dbg !167
  %132 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.strides, i64 3, !dbg !167
  %133 = load i64, ptr %132, align 8, !dbg !167, !tbaa !258
  %134 = and i64 %133, 4294967295, !dbg !167
  %135 = icmp eq i64 %134, 4, !dbg !167
  %136 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.p1.strides, i64 4, !dbg !167
  %137 = load i64, ptr %136, align 8, !dbg !167, !tbaa !260
  %138 = and i64 %137, 4294967295, !dbg !167
  %139 = icmp eq i64 %138, 1, !dbg !167
  %140 = and i1 %135, %139, !dbg !167
  %141 = and i1 %131, %140, !dbg !167
  %142 = and i1 %127, %141, !dbg !167
  br i1 %142, label %if_end49, label %assert_fail50, !dbg !167, !prof !18

if_end49:                                         ; preds = %if_then48, %assert_end47
  %143 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !167
  %144 = load i64, ptr %143, align 8, !dbg !167
  %145 = icmp eq i64 %144, 0, !dbg !167
  br i1 %145, label %assert_end53, label %assert_fail52, !dbg !167, !prof !18

assert_fail50:                                    ; preds = %if_then48
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %146(ptr nonnull @.str.57), !dbg !167
  br label %common.ret

assert_fail52:                                    ; preds = %if_end49
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %147(ptr nonnull @.str.58), !dbg !167
  br label %common.ret

assert_end53:                                     ; preds = %if_end49
  %148 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !167
  %149 = load i32, ptr %148, align 4, !dbg !167
  %150 = icmp eq i32 %149, 1, !dbg !167
  br i1 %150, label %assert_end55, label %assert_fail54, !dbg !167, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %151(ptr nonnull @.str.59), !dbg !167
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %152 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !167
  %153 = load i32, ptr %152, align 4, !dbg !167
  %154 = icmp eq i32 %dev_id, %153, !dbg !167
  br i1 %154, label %assert_end57, label %assert_fail56, !dbg !167, !prof !18

assert_fail56:                                    ; preds = %assert_end55
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %155(ptr nonnull @.str.60), !dbg !167
  br label %common.ret

assert_end57:                                     ; preds = %assert_end55
  %156 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !167
  %157 = load i32, ptr %156, align 4, !dbg !167
  %158 = icmp eq i32 %157, 5, !dbg !167
  br i1 %158, label %assert_end61, label %assert_fail58, !dbg !167, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %159 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %159(ptr nonnull @.str.61), !dbg !167
  br label %common.ret

assert_end61:                                     ; preds = %assert_end57
  %160 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !167
  %161 = load i16, ptr %160, align 2, !dbg !167
  %162 = icmp eq i16 %161, 1, !dbg !167
  %163 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !167
  %164 = load i8, ptr %163, align 1, !dbg !167
  %165 = icmp eq i8 %164, 8, !dbg !167
  %166 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !167
  %167 = load i8, ptr %166, align 1, !dbg !167
  %168 = icmp eq i8 %167, 0, !dbg !167
  %169 = and i1 %165, %168, !dbg !167
  %170 = and i1 %162, %169, !dbg !167
  br i1 %170, label %assert_end63, label %assert_fail62, !dbg !167, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %171 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %171(ptr nonnull @.str.62), !dbg !167
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %172 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape, align 8, !dbg !167, !tbaa !264
  %173 = and i64 %172, 4294967295, !dbg !167
  %174 = icmp eq i64 %173, 1, !dbg !167
  br i1 %174, label %assert_end65, label %assert_fail64, !dbg !167, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %175(ptr nonnull @.str.63), !dbg !167
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape, i64 1, !dbg !167
  %177 = load i64, ptr %176, align 8, !dbg !167, !tbaa !274
  %178 = and i64 %177, 4294967295, !dbg !167
  %179 = icmp eq i64 %178, 128, !dbg !167
  br i1 %179, label %assert_end67, label %assert_fail66, !dbg !167, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %180(ptr nonnull @.str.64), !dbg !167
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %181 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape, i64 2, !dbg !167
  %182 = load i64, ptr %181, align 8, !dbg !167, !tbaa !276
  %183 = and i64 %182, 4294967295, !dbg !167
  %184 = icmp eq i64 %183, 28, !dbg !167
  br i1 %184, label %assert_end69, label %assert_fail68, !dbg !167, !prof !18

assert_fail68:                                    ; preds = %assert_end67
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %185(ptr nonnull @.str.65), !dbg !167
  br label %common.ret

assert_end69:                                     ; preds = %assert_end67
  %186 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape, i64 3, !dbg !167
  %187 = load i64, ptr %186, align 8, !dbg !167, !tbaa !279
  %188 = and i64 %187, 4294967295, !dbg !167
  %189 = icmp eq i64 %188, 28, !dbg !167
  br i1 %189, label %assert_end71, label %assert_fail70, !dbg !167, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %190 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %190(ptr nonnull @.str.66), !dbg !167
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %191 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.shape, i64 4, !dbg !167
  %192 = load i64, ptr %191, align 8, !dbg !167, !tbaa !281
  %193 = and i64 %192, 4294967295, !dbg !167
  %194 = icmp eq i64 %193, 4, !dbg !167
  br i1 %194, label %assert_end73, label %assert_fail72, !dbg !167, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %195 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %195(ptr nonnull @.str.67), !dbg !167
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %.not88 = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.strides, null, !dbg !167
  br i1 %.not88, label %if_end75, label %if_then74, !dbg !167, !prof !59

if_then74:                                        ; preds = %assert_end73
  %196 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.strides, i64 1, !dbg !167
  %197 = load i64, ptr %196, align 8, !dbg !167, !tbaa !285
  %198 = and i64 %197, 4294967295, !dbg !167
  %199 = icmp eq i64 %198, 3136, !dbg !167
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.strides, i64 2, !dbg !167
  %201 = load i64, ptr %200, align 8, !dbg !167, !tbaa !295
  %202 = and i64 %201, 4294967295, !dbg !167
  %203 = icmp eq i64 %202, 112, !dbg !167
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.strides, i64 3, !dbg !167
  %205 = load i64, ptr %204, align 8, !dbg !167, !tbaa !298
  %206 = and i64 %205, 4294967295, !dbg !167
  %207 = icmp eq i64 %206, 4, !dbg !167
  %208 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1.T_cast.strides, i64 4, !dbg !167
  %209 = load i64, ptr %208, align 8, !dbg !167, !tbaa !300
  %210 = and i64 %209, 4294967295, !dbg !167
  %211 = icmp eq i64 %210, 1, !dbg !167
  %212 = and i1 %207, %211, !dbg !167
  %213 = and i1 %203, %212, !dbg !167
  %214 = and i1 %199, %213, !dbg !167
  br i1 %214, label %if_end75, label %assert_fail76, !dbg !167, !prof !18

if_end75:                                         ; preds = %if_then74, %assert_end73
  %215 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !167
  %216 = load i64, ptr %215, align 8, !dbg !167
  %217 = icmp eq i64 %216, 0, !dbg !167
  br i1 %217, label %assert_end79, label %assert_fail78, !dbg !167, !prof !18

assert_fail76:                                    ; preds = %if_then74
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %218(ptr nonnull @.str.68), !dbg !167
  br label %common.ret

assert_fail78:                                    ; preds = %if_end75
  %219 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %219(ptr nonnull @.str.69), !dbg !167
  br label %common.ret

assert_end79:                                     ; preds = %if_end75
  %220 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !167
  %221 = load i32, ptr %220, align 4, !dbg !167
  %222 = icmp eq i32 %221, 1, !dbg !167
  br i1 %222, label %assert_end81, label %assert_fail80, !dbg !167, !prof !18

assert_fail80:                                    ; preds = %assert_end79
  %223 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %223(ptr nonnull @.str.70), !dbg !167
  br label %common.ret

assert_end81:                                     ; preds = %assert_end79
  %224 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !167
  %225 = load i32, ptr %224, align 4, !dbg !167
  %226 = icmp eq i32 %dev_id, %225, !dbg !167
  br i1 %226, label %assert_end83, label %assert_fail82, !dbg !167, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !167, !tbaa !19
  tail call void %227(ptr nonnull @.str.71), !dbg !167
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %228 = tail call fastcc i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_compute_(ptr %T_cast84, ptr %p085, ptr %p186), !dbg !167
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !304 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !306, metadata !DIExpression()), !dbg !312
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !307, metadata !DIExpression()), !dbg !312
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !308, metadata !DIExpression()), !dbg !312
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !309, metadata !DIExpression()), !dbg !312
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !310, metadata !DIExpression()), !dbg !312
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !311, metadata !DIExpression()), !dbg !312
  %0 = icmp eq i32 %num_args, 3, !dbg !312
  br i1 %0, label %assert_end, label %assert_fail, !dbg !312, !prof !18

common.ret:                                       ; preds = %assert_end83, %assert_fail82, %assert_fail80, %assert_fail78, %assert_fail76, %assert_fail72, %assert_fail70, %assert_fail68, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail58, %assert_fail56, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail56 ], [ -1, %assert_fail58 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail68 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail80 ], [ -1, %assert_fail82 ], [ %228, %assert_end83 ]
  ret i32 %common.ret.op, !dbg !312

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %1(ptr nonnull @.str.73), !dbg !312
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !312, !tbaa !313
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !312
  %p1.code = load i32, ptr %2, align 4, !dbg !312, !tbaa !324
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !312
  %T_cast.code = load i32, ptr %3, align 4, !dbg !312, !tbaa !326
  %p0 = load ptr, ptr %args, align 8, !dbg !312
  %4 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !312
  %p1 = load ptr, ptr %4, align 8, !dbg !312
  %5 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !312
  %T_cast = load ptr, ptr %5, align 8, !dbg !312
  %p085 = load ptr, ptr %p0, align 8, !dbg !312
  call void @llvm.assume(i1 true) [ "align"(ptr %p085, i64 64) ], !dbg !312
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !312
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape = load ptr, ptr %6, align 8, !dbg !312
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !312
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.strides = load ptr, ptr %7, align 8, !dbg !312
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !312
  %dev_id = load i32, ptr %8, align 4, !dbg !312
  %p186 = load ptr, ptr %p1, align 8, !dbg !312
  call void @llvm.assume(i1 true) [ "align"(ptr %p186, i64 64) ], !dbg !312
  %9 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !312
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape = load ptr, ptr %9, align 8, !dbg !312
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !312
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.strides = load ptr, ptr %10, align 8, !dbg !312
  %T_cast84 = load ptr, ptr %T_cast, align 8, !dbg !312
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast84, i64 64) ], !dbg !312
  %11 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !312
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape = load ptr, ptr %11, align 8, !dbg !312
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !312
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.strides = load ptr, ptr %12, align 8, !dbg !312
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !312

assert_fail4:                                     ; preds = %assert_end
  %13 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %13(ptr nonnull @.str.74), !dbg !312
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !312

assert_fail6:                                     ; preds = %assert_end5
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %14(ptr nonnull @.str.75), !dbg !312
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !312

assert_fail8:                                     ; preds = %assert_end7
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %15(ptr nonnull @.str.76), !dbg !312
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %16 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !312
  %17 = load i32, ptr %16, align 4, !dbg !312
  %18 = icmp eq i32 %17, 5, !dbg !312
  br i1 %18, label %assert_end13, label %assert_fail10, !dbg !312, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %19(ptr nonnull @.str.77), !dbg !312
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %20 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !312
  %21 = load i16, ptr %20, align 2, !dbg !312
  %22 = icmp eq i16 %21, 1, !dbg !312
  %23 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !312
  %24 = load i8, ptr %23, align 1, !dbg !312
  %25 = icmp eq i8 %24, 8, !dbg !312
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !312
  %27 = load i8, ptr %26, align 1, !dbg !312
  %28 = icmp eq i8 %27, 0, !dbg !312
  %29 = and i1 %25, %28, !dbg !312
  %30 = and i1 %22, %29, !dbg !312
  br i1 %30, label %assert_end15, label %assert_fail14, !dbg !312, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %31 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %31(ptr nonnull @.str.78), !dbg !312
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %32 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape, align 8, !dbg !312, !tbaa !329
  %33 = and i64 %32, 4294967295, !dbg !312
  %34 = icmp eq i64 %33, 1, !dbg !312
  br i1 %34, label %assert_end17, label %assert_fail16, !dbg !312, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %35(ptr nonnull @.str.79), !dbg !312
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape, i64 1, !dbg !312
  %37 = load i64, ptr %36, align 8, !dbg !312, !tbaa !339
  %38 = and i64 %37, 4294967295, !dbg !312
  %39 = icmp eq i64 %38, 256, !dbg !312
  br i1 %39, label %assert_end19, label %assert_fail18, !dbg !312, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %40(ptr nonnull @.str.80), !dbg !312
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape, i64 2, !dbg !312
  %42 = load i64, ptr %41, align 8, !dbg !312, !tbaa !341
  %43 = and i64 %42, 4294967295, !dbg !312
  %44 = icmp eq i64 %43, 14, !dbg !312
  br i1 %44, label %assert_end21, label %assert_fail20, !dbg !312, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %45(ptr nonnull @.str.81), !dbg !312
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape, i64 3, !dbg !312
  %47 = load i64, ptr %46, align 8, !dbg !312, !tbaa !344
  %48 = and i64 %47, 4294967295, !dbg !312
  %49 = icmp eq i64 %48, 14, !dbg !312
  br i1 %49, label %assert_end23, label %assert_fail22, !dbg !312, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %50(ptr nonnull @.str.82), !dbg !312
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.shape, i64 4, !dbg !312
  %52 = load i64, ptr %51, align 8, !dbg !312, !tbaa !346
  %53 = and i64 %52, 4294967295, !dbg !312
  %54 = icmp eq i64 %53, 4, !dbg !312
  br i1 %54, label %assert_end25, label %assert_fail24, !dbg !312, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %55(ptr nonnull @.str.83), !dbg !312
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %.not = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.strides, null, !dbg !312
  br i1 %.not, label %if_end, label %if_then, !dbg !312, !prof !59

if_then:                                          ; preds = %assert_end25
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.strides, i64 1, !dbg !312
  %57 = load i64, ptr %56, align 8, !dbg !312, !tbaa !350
  %58 = and i64 %57, 4294967295, !dbg !312
  %59 = icmp eq i64 %58, 784, !dbg !312
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.strides, i64 2, !dbg !312
  %61 = load i64, ptr %60, align 8, !dbg !312, !tbaa !360
  %62 = and i64 %61, 4294967295, !dbg !312
  %63 = icmp eq i64 %62, 56, !dbg !312
  %64 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.strides, i64 3, !dbg !312
  %65 = load i64, ptr %64, align 8, !dbg !312, !tbaa !363
  %66 = and i64 %65, 4294967295, !dbg !312
  %67 = icmp eq i64 %66, 4, !dbg !312
  %68 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p0.strides, i64 4, !dbg !312
  %69 = load i64, ptr %68, align 8, !dbg !312, !tbaa !365
  %70 = and i64 %69, 4294967295, !dbg !312
  %71 = icmp eq i64 %70, 1, !dbg !312
  %72 = and i1 %67, %71, !dbg !312
  %73 = and i1 %63, %72, !dbg !312
  %74 = and i1 %59, %73, !dbg !312
  br i1 %74, label %if_end, label %assert_fail26, !dbg !312, !prof !18

if_end:                                           ; preds = %if_then, %assert_end25
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !312
  %76 = load i64, ptr %75, align 8, !dbg !312
  %77 = icmp eq i64 %76, 0, !dbg !312
  br i1 %77, label %assert_end29, label %assert_fail28, !dbg !312, !prof !18

assert_fail26:                                    ; preds = %if_then
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %78(ptr nonnull @.str.84), !dbg !312
  br label %common.ret

assert_fail28:                                    ; preds = %if_end
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %79(ptr nonnull @.str.85), !dbg !312
  br label %common.ret

assert_end29:                                     ; preds = %if_end
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !312
  %81 = load i32, ptr %80, align 4, !dbg !312
  %82 = icmp eq i32 %81, 1, !dbg !312
  br i1 %82, label %assert_end31, label %assert_fail30, !dbg !312, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %83(ptr nonnull @.str.86), !dbg !312
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !312
  %85 = load i32, ptr %84, align 4, !dbg !312
  %86 = icmp eq i32 %85, 5, !dbg !312
  br i1 %86, label %assert_end35, label %assert_fail32, !dbg !312, !prof !18

assert_fail32:                                    ; preds = %assert_end31
  %87 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %87(ptr nonnull @.str.87), !dbg !312
  br label %common.ret

assert_end35:                                     ; preds = %assert_end31
  %88 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !312
  %89 = load i16, ptr %88, align 2, !dbg !312
  %90 = icmp eq i16 %89, 1, !dbg !312
  %91 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !312
  %92 = load i8, ptr %91, align 1, !dbg !312
  %93 = icmp eq i8 %92, 8, !dbg !312
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !312
  %95 = load i8, ptr %94, align 1, !dbg !312
  %96 = icmp eq i8 %95, 0, !dbg !312
  %97 = and i1 %93, %96, !dbg !312
  %98 = and i1 %90, %97, !dbg !312
  br i1 %98, label %assert_end37, label %assert_fail36, !dbg !312, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %99(ptr nonnull @.str.88), !dbg !312
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %100 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape, align 8, !dbg !312, !tbaa !369
  %101 = and i64 %100, 4294967295, !dbg !312
  %102 = icmp eq i64 %101, 1, !dbg !312
  br i1 %102, label %assert_end39, label %assert_fail38, !dbg !312, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %103(ptr nonnull @.str.89), !dbg !312
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape, i64 1, !dbg !312
  %105 = load i64, ptr %104, align 8, !dbg !312, !tbaa !379
  %106 = and i64 %105, 4294967295, !dbg !312
  %107 = icmp eq i64 %106, 256, !dbg !312
  br i1 %107, label %assert_end41, label %assert_fail40, !dbg !312, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %108(ptr nonnull @.str.90), !dbg !312
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape, i64 2, !dbg !312
  %110 = load i64, ptr %109, align 8, !dbg !312, !tbaa !381
  %111 = and i64 %110, 4294967295, !dbg !312
  %112 = icmp eq i64 %111, 14, !dbg !312
  br i1 %112, label %assert_end43, label %assert_fail42, !dbg !312, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %113(ptr nonnull @.str.91), !dbg !312
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape, i64 3, !dbg !312
  %115 = load i64, ptr %114, align 8, !dbg !312, !tbaa !384
  %116 = and i64 %115, 4294967295, !dbg !312
  %117 = icmp eq i64 %116, 14, !dbg !312
  br i1 %117, label %assert_end45, label %assert_fail44, !dbg !312, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %118(ptr nonnull @.str.92), !dbg !312
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.shape, i64 4, !dbg !312
  %120 = load i64, ptr %119, align 8, !dbg !312, !tbaa !386
  %121 = and i64 %120, 4294967295, !dbg !312
  %122 = icmp eq i64 %121, 4, !dbg !312
  br i1 %122, label %assert_end47, label %assert_fail46, !dbg !312, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %123(ptr nonnull @.str.93), !dbg !312
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %.not87 = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.strides, null, !dbg !312
  br i1 %.not87, label %if_end49, label %if_then48, !dbg !312, !prof !59

if_then48:                                        ; preds = %assert_end47
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.strides, i64 1, !dbg !312
  %125 = load i64, ptr %124, align 8, !dbg !312, !tbaa !390
  %126 = and i64 %125, 4294967295, !dbg !312
  %127 = icmp eq i64 %126, 784, !dbg !312
  %128 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.strides, i64 2, !dbg !312
  %129 = load i64, ptr %128, align 8, !dbg !312, !tbaa !400
  %130 = and i64 %129, 4294967295, !dbg !312
  %131 = icmp eq i64 %130, 56, !dbg !312
  %132 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.strides, i64 3, !dbg !312
  %133 = load i64, ptr %132, align 8, !dbg !312, !tbaa !403
  %134 = and i64 %133, 4294967295, !dbg !312
  %135 = icmp eq i64 %134, 4, !dbg !312
  %136 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.p1.strides, i64 4, !dbg !312
  %137 = load i64, ptr %136, align 8, !dbg !312, !tbaa !405
  %138 = and i64 %137, 4294967295, !dbg !312
  %139 = icmp eq i64 %138, 1, !dbg !312
  %140 = and i1 %135, %139, !dbg !312
  %141 = and i1 %131, %140, !dbg !312
  %142 = and i1 %127, %141, !dbg !312
  br i1 %142, label %if_end49, label %assert_fail50, !dbg !312, !prof !18

if_end49:                                         ; preds = %if_then48, %assert_end47
  %143 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !312
  %144 = load i64, ptr %143, align 8, !dbg !312
  %145 = icmp eq i64 %144, 0, !dbg !312
  br i1 %145, label %assert_end53, label %assert_fail52, !dbg !312, !prof !18

assert_fail50:                                    ; preds = %if_then48
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %146(ptr nonnull @.str.94), !dbg !312
  br label %common.ret

assert_fail52:                                    ; preds = %if_end49
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %147(ptr nonnull @.str.95), !dbg !312
  br label %common.ret

assert_end53:                                     ; preds = %if_end49
  %148 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !312
  %149 = load i32, ptr %148, align 4, !dbg !312
  %150 = icmp eq i32 %149, 1, !dbg !312
  br i1 %150, label %assert_end55, label %assert_fail54, !dbg !312, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %151(ptr nonnull @.str.96), !dbg !312
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %152 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !312
  %153 = load i32, ptr %152, align 4, !dbg !312
  %154 = icmp eq i32 %dev_id, %153, !dbg !312
  br i1 %154, label %assert_end57, label %assert_fail56, !dbg !312, !prof !18

assert_fail56:                                    ; preds = %assert_end55
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %155(ptr nonnull @.str.97), !dbg !312
  br label %common.ret

assert_end57:                                     ; preds = %assert_end55
  %156 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !312
  %157 = load i32, ptr %156, align 4, !dbg !312
  %158 = icmp eq i32 %157, 5, !dbg !312
  br i1 %158, label %assert_end61, label %assert_fail58, !dbg !312, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %159 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %159(ptr nonnull @.str.98), !dbg !312
  br label %common.ret

assert_end61:                                     ; preds = %assert_end57
  %160 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !312
  %161 = load i16, ptr %160, align 2, !dbg !312
  %162 = icmp eq i16 %161, 1, !dbg !312
  %163 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !312
  %164 = load i8, ptr %163, align 1, !dbg !312
  %165 = icmp eq i8 %164, 8, !dbg !312
  %166 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !312
  %167 = load i8, ptr %166, align 1, !dbg !312
  %168 = icmp eq i8 %167, 0, !dbg !312
  %169 = and i1 %165, %168, !dbg !312
  %170 = and i1 %162, %169, !dbg !312
  br i1 %170, label %assert_end63, label %assert_fail62, !dbg !312, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %171 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %171(ptr nonnull @.str.99), !dbg !312
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %172 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape, align 8, !dbg !312, !tbaa !409
  %173 = and i64 %172, 4294967295, !dbg !312
  %174 = icmp eq i64 %173, 1, !dbg !312
  br i1 %174, label %assert_end65, label %assert_fail64, !dbg !312, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %175(ptr nonnull @.str.100), !dbg !312
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape, i64 1, !dbg !312
  %177 = load i64, ptr %176, align 8, !dbg !312, !tbaa !419
  %178 = and i64 %177, 4294967295, !dbg !312
  %179 = icmp eq i64 %178, 256, !dbg !312
  br i1 %179, label %assert_end67, label %assert_fail66, !dbg !312, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %180(ptr nonnull @.str.101), !dbg !312
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %181 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape, i64 2, !dbg !312
  %182 = load i64, ptr %181, align 8, !dbg !312, !tbaa !421
  %183 = and i64 %182, 4294967295, !dbg !312
  %184 = icmp eq i64 %183, 14, !dbg !312
  br i1 %184, label %assert_end69, label %assert_fail68, !dbg !312, !prof !18

assert_fail68:                                    ; preds = %assert_end67
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %185(ptr nonnull @.str.102), !dbg !312
  br label %common.ret

assert_end69:                                     ; preds = %assert_end67
  %186 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape, i64 3, !dbg !312
  %187 = load i64, ptr %186, align 8, !dbg !312, !tbaa !424
  %188 = and i64 %187, 4294967295, !dbg !312
  %189 = icmp eq i64 %188, 14, !dbg !312
  br i1 %189, label %assert_end71, label %assert_fail70, !dbg !312, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %190 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %190(ptr nonnull @.str.103), !dbg !312
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %191 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.shape, i64 4, !dbg !312
  %192 = load i64, ptr %191, align 8, !dbg !312, !tbaa !426
  %193 = and i64 %192, 4294967295, !dbg !312
  %194 = icmp eq i64 %193, 4, !dbg !312
  br i1 %194, label %assert_end73, label %assert_fail72, !dbg !312, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %195 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %195(ptr nonnull @.str.104), !dbg !312
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %.not88 = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.strides, null, !dbg !312
  br i1 %.not88, label %if_end75, label %if_then74, !dbg !312, !prof !59

if_then74:                                        ; preds = %assert_end73
  %196 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.strides, i64 1, !dbg !312
  %197 = load i64, ptr %196, align 8, !dbg !312, !tbaa !430
  %198 = and i64 %197, 4294967295, !dbg !312
  %199 = icmp eq i64 %198, 784, !dbg !312
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.strides, i64 2, !dbg !312
  %201 = load i64, ptr %200, align 8, !dbg !312, !tbaa !440
  %202 = and i64 %201, 4294967295, !dbg !312
  %203 = icmp eq i64 %202, 56, !dbg !312
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.strides, i64 3, !dbg !312
  %205 = load i64, ptr %204, align 8, !dbg !312, !tbaa !443
  %206 = and i64 %205, 4294967295, !dbg !312
  %207 = icmp eq i64 %206, 4, !dbg !312
  %208 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2.T_cast.strides, i64 4, !dbg !312
  %209 = load i64, ptr %208, align 8, !dbg !312, !tbaa !445
  %210 = and i64 %209, 4294967295, !dbg !312
  %211 = icmp eq i64 %210, 1, !dbg !312
  %212 = and i1 %207, %211, !dbg !312
  %213 = and i1 %203, %212, !dbg !312
  %214 = and i1 %199, %213, !dbg !312
  br i1 %214, label %if_end75, label %assert_fail76, !dbg !312, !prof !18

if_end75:                                         ; preds = %if_then74, %assert_end73
  %215 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !312
  %216 = load i64, ptr %215, align 8, !dbg !312
  %217 = icmp eq i64 %216, 0, !dbg !312
  br i1 %217, label %assert_end79, label %assert_fail78, !dbg !312, !prof !18

assert_fail76:                                    ; preds = %if_then74
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %218(ptr nonnull @.str.105), !dbg !312
  br label %common.ret

assert_fail78:                                    ; preds = %if_end75
  %219 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %219(ptr nonnull @.str.106), !dbg !312
  br label %common.ret

assert_end79:                                     ; preds = %if_end75
  %220 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !312
  %221 = load i32, ptr %220, align 4, !dbg !312
  %222 = icmp eq i32 %221, 1, !dbg !312
  br i1 %222, label %assert_end81, label %assert_fail80, !dbg !312, !prof !18

assert_fail80:                                    ; preds = %assert_end79
  %223 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %223(ptr nonnull @.str.107), !dbg !312
  br label %common.ret

assert_end81:                                     ; preds = %assert_end79
  %224 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !312
  %225 = load i32, ptr %224, align 4, !dbg !312
  %226 = icmp eq i32 %dev_id, %225, !dbg !312
  br i1 %226, label %assert_end83, label %assert_fail82, !dbg !312, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !312, !tbaa !19
  tail call void %227(ptr nonnull @.str.108), !dbg !312
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %228 = tail call fastcc i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_compute_(ptr %T_cast84, ptr %p085, ptr %p186), !dbg !312
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !449 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !451, metadata !DIExpression()), !dbg !457
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !452, metadata !DIExpression()), !dbg !457
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !453, metadata !DIExpression()), !dbg !457
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !454, metadata !DIExpression()), !dbg !457
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !455, metadata !DIExpression()), !dbg !457
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !456, metadata !DIExpression()), !dbg !457
  %0 = icmp eq i32 %num_args, 3, !dbg !457
  br i1 %0, label %assert_end, label %assert_fail, !dbg !457, !prof !18

common.ret:                                       ; preds = %assert_end83, %assert_fail82, %assert_fail80, %assert_fail78, %assert_fail76, %assert_fail72, %assert_fail70, %assert_fail68, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail58, %assert_fail56, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail56 ], [ -1, %assert_fail58 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail68 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail80 ], [ -1, %assert_fail82 ], [ %228, %assert_end83 ]
  ret i32 %common.ret.op, !dbg !457

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %1(ptr nonnull @.str.110), !dbg !457
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !457, !tbaa !458
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !457
  %p1.code = load i32, ptr %2, align 4, !dbg !457, !tbaa !469
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !457
  %T_cast.code = load i32, ptr %3, align 4, !dbg !457, !tbaa !471
  %p0 = load ptr, ptr %args, align 8, !dbg !457
  %4 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !457
  %p1 = load ptr, ptr %4, align 8, !dbg !457
  %5 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !457
  %T_cast = load ptr, ptr %5, align 8, !dbg !457
  %p085 = load ptr, ptr %p0, align 8, !dbg !457
  call void @llvm.assume(i1 true) [ "align"(ptr %p085, i64 64) ], !dbg !457
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !457
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape = load ptr, ptr %6, align 8, !dbg !457
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !457
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.strides = load ptr, ptr %7, align 8, !dbg !457
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !457
  %dev_id = load i32, ptr %8, align 4, !dbg !457
  %p186 = load ptr, ptr %p1, align 8, !dbg !457
  call void @llvm.assume(i1 true) [ "align"(ptr %p186, i64 64) ], !dbg !457
  %9 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !457
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape = load ptr, ptr %9, align 8, !dbg !457
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !457
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.strides = load ptr, ptr %10, align 8, !dbg !457
  %T_cast84 = load ptr, ptr %T_cast, align 8, !dbg !457
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast84, i64 64) ], !dbg !457
  %11 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !457
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape = load ptr, ptr %11, align 8, !dbg !457
  %12 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !457
  %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.strides = load ptr, ptr %12, align 8, !dbg !457
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !457

assert_fail4:                                     ; preds = %assert_end
  %13 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %13(ptr nonnull @.str.111), !dbg !457
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !457

assert_fail6:                                     ; preds = %assert_end5
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %14(ptr nonnull @.str.112), !dbg !457
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %T_cast.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !457

assert_fail8:                                     ; preds = %assert_end7
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %15(ptr nonnull @.str.113), !dbg !457
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %16 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !457
  %17 = load i32, ptr %16, align 4, !dbg !457
  %18 = icmp eq i32 %17, 5, !dbg !457
  br i1 %18, label %assert_end13, label %assert_fail10, !dbg !457, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %19(ptr nonnull @.str.114), !dbg !457
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %20 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !457
  %21 = load i16, ptr %20, align 2, !dbg !457
  %22 = icmp eq i16 %21, 1, !dbg !457
  %23 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !457
  %24 = load i8, ptr %23, align 1, !dbg !457
  %25 = icmp eq i8 %24, 8, !dbg !457
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !457
  %27 = load i8, ptr %26, align 1, !dbg !457
  %28 = icmp eq i8 %27, 0, !dbg !457
  %29 = and i1 %25, %28, !dbg !457
  %30 = and i1 %22, %29, !dbg !457
  br i1 %30, label %assert_end15, label %assert_fail14, !dbg !457, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %31 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %31(ptr nonnull @.str.115), !dbg !457
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %32 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape, align 8, !dbg !457, !tbaa !474
  %33 = and i64 %32, 4294967295, !dbg !457
  %34 = icmp eq i64 %33, 1, !dbg !457
  br i1 %34, label %assert_end17, label %assert_fail16, !dbg !457, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %35(ptr nonnull @.str.116), !dbg !457
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape, i64 1, !dbg !457
  %37 = load i64, ptr %36, align 8, !dbg !457, !tbaa !484
  %38 = and i64 %37, 4294967295, !dbg !457
  %39 = icmp eq i64 %38, 512, !dbg !457
  br i1 %39, label %assert_end19, label %assert_fail18, !dbg !457, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %40(ptr nonnull @.str.117), !dbg !457
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape, i64 2, !dbg !457
  %42 = load i64, ptr %41, align 8, !dbg !457, !tbaa !486
  %43 = and i64 %42, 4294967295, !dbg !457
  %44 = icmp eq i64 %43, 7, !dbg !457
  br i1 %44, label %assert_end21, label %assert_fail20, !dbg !457, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %45(ptr nonnull @.str.118), !dbg !457
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape, i64 3, !dbg !457
  %47 = load i64, ptr %46, align 8, !dbg !457, !tbaa !489
  %48 = and i64 %47, 4294967295, !dbg !457
  %49 = icmp eq i64 %48, 7, !dbg !457
  br i1 %49, label %assert_end23, label %assert_fail22, !dbg !457, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %50(ptr nonnull @.str.119), !dbg !457
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.shape, i64 4, !dbg !457
  %52 = load i64, ptr %51, align 8, !dbg !457, !tbaa !491
  %53 = and i64 %52, 4294967295, !dbg !457
  %54 = icmp eq i64 %53, 4, !dbg !457
  br i1 %54, label %assert_end25, label %assert_fail24, !dbg !457, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %55(ptr nonnull @.str.120), !dbg !457
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %.not = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.strides, null, !dbg !457
  br i1 %.not, label %if_end, label %if_then, !dbg !457, !prof !59

if_then:                                          ; preds = %assert_end25
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.strides, i64 1, !dbg !457
  %57 = load i64, ptr %56, align 8, !dbg !457, !tbaa !495
  %58 = and i64 %57, 4294967295, !dbg !457
  %59 = icmp eq i64 %58, 196, !dbg !457
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.strides, i64 2, !dbg !457
  %61 = load i64, ptr %60, align 8, !dbg !457, !tbaa !505
  %62 = and i64 %61, 4294967295, !dbg !457
  %63 = icmp eq i64 %62, 28, !dbg !457
  %64 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.strides, i64 3, !dbg !457
  %65 = load i64, ptr %64, align 8, !dbg !457, !tbaa !508
  %66 = and i64 %65, 4294967295, !dbg !457
  %67 = icmp eq i64 %66, 4, !dbg !457
  %68 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p0.strides, i64 4, !dbg !457
  %69 = load i64, ptr %68, align 8, !dbg !457, !tbaa !510
  %70 = and i64 %69, 4294967295, !dbg !457
  %71 = icmp eq i64 %70, 1, !dbg !457
  %72 = and i1 %67, %71, !dbg !457
  %73 = and i1 %63, %72, !dbg !457
  %74 = and i1 %59, %73, !dbg !457
  br i1 %74, label %if_end, label %assert_fail26, !dbg !457, !prof !18

if_end:                                           ; preds = %if_then, %assert_end25
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !457
  %76 = load i64, ptr %75, align 8, !dbg !457
  %77 = icmp eq i64 %76, 0, !dbg !457
  br i1 %77, label %assert_end29, label %assert_fail28, !dbg !457, !prof !18

assert_fail26:                                    ; preds = %if_then
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %78(ptr nonnull @.str.121), !dbg !457
  br label %common.ret

assert_fail28:                                    ; preds = %if_end
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %79(ptr nonnull @.str.122), !dbg !457
  br label %common.ret

assert_end29:                                     ; preds = %if_end
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !457
  %81 = load i32, ptr %80, align 4, !dbg !457
  %82 = icmp eq i32 %81, 1, !dbg !457
  br i1 %82, label %assert_end31, label %assert_fail30, !dbg !457, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %83(ptr nonnull @.str.123), !dbg !457
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !457
  %85 = load i32, ptr %84, align 4, !dbg !457
  %86 = icmp eq i32 %85, 5, !dbg !457
  br i1 %86, label %assert_end35, label %assert_fail32, !dbg !457, !prof !18

assert_fail32:                                    ; preds = %assert_end31
  %87 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %87(ptr nonnull @.str.124), !dbg !457
  br label %common.ret

assert_end35:                                     ; preds = %assert_end31
  %88 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !457
  %89 = load i16, ptr %88, align 2, !dbg !457
  %90 = icmp eq i16 %89, 1, !dbg !457
  %91 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !457
  %92 = load i8, ptr %91, align 1, !dbg !457
  %93 = icmp eq i8 %92, 8, !dbg !457
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !457
  %95 = load i8, ptr %94, align 1, !dbg !457
  %96 = icmp eq i8 %95, 0, !dbg !457
  %97 = and i1 %93, %96, !dbg !457
  %98 = and i1 %90, %97, !dbg !457
  br i1 %98, label %assert_end37, label %assert_fail36, !dbg !457, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %99(ptr nonnull @.str.125), !dbg !457
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %100 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape, align 8, !dbg !457, !tbaa !514
  %101 = and i64 %100, 4294967295, !dbg !457
  %102 = icmp eq i64 %101, 1, !dbg !457
  br i1 %102, label %assert_end39, label %assert_fail38, !dbg !457, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %103(ptr nonnull @.str.126), !dbg !457
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape, i64 1, !dbg !457
  %105 = load i64, ptr %104, align 8, !dbg !457, !tbaa !524
  %106 = and i64 %105, 4294967295, !dbg !457
  %107 = icmp eq i64 %106, 512, !dbg !457
  br i1 %107, label %assert_end41, label %assert_fail40, !dbg !457, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %108(ptr nonnull @.str.127), !dbg !457
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape, i64 2, !dbg !457
  %110 = load i64, ptr %109, align 8, !dbg !457, !tbaa !526
  %111 = and i64 %110, 4294967295, !dbg !457
  %112 = icmp eq i64 %111, 7, !dbg !457
  br i1 %112, label %assert_end43, label %assert_fail42, !dbg !457, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %113(ptr nonnull @.str.128), !dbg !457
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape, i64 3, !dbg !457
  %115 = load i64, ptr %114, align 8, !dbg !457, !tbaa !529
  %116 = and i64 %115, 4294967295, !dbg !457
  %117 = icmp eq i64 %116, 7, !dbg !457
  br i1 %117, label %assert_end45, label %assert_fail44, !dbg !457, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %118(ptr nonnull @.str.129), !dbg !457
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.shape, i64 4, !dbg !457
  %120 = load i64, ptr %119, align 8, !dbg !457, !tbaa !531
  %121 = and i64 %120, 4294967295, !dbg !457
  %122 = icmp eq i64 %121, 4, !dbg !457
  br i1 %122, label %assert_end47, label %assert_fail46, !dbg !457, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %123(ptr nonnull @.str.130), !dbg !457
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %.not87 = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.strides, null, !dbg !457
  br i1 %.not87, label %if_end49, label %if_then48, !dbg !457, !prof !59

if_then48:                                        ; preds = %assert_end47
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.strides, i64 1, !dbg !457
  %125 = load i64, ptr %124, align 8, !dbg !457, !tbaa !535
  %126 = and i64 %125, 4294967295, !dbg !457
  %127 = icmp eq i64 %126, 196, !dbg !457
  %128 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.strides, i64 2, !dbg !457
  %129 = load i64, ptr %128, align 8, !dbg !457, !tbaa !545
  %130 = and i64 %129, 4294967295, !dbg !457
  %131 = icmp eq i64 %130, 28, !dbg !457
  %132 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.strides, i64 3, !dbg !457
  %133 = load i64, ptr %132, align 8, !dbg !457, !tbaa !548
  %134 = and i64 %133, 4294967295, !dbg !457
  %135 = icmp eq i64 %134, 4, !dbg !457
  %136 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.p1.strides, i64 4, !dbg !457
  %137 = load i64, ptr %136, align 8, !dbg !457, !tbaa !550
  %138 = and i64 %137, 4294967295, !dbg !457
  %139 = icmp eq i64 %138, 1, !dbg !457
  %140 = and i1 %135, %139, !dbg !457
  %141 = and i1 %131, %140, !dbg !457
  %142 = and i1 %127, %141, !dbg !457
  br i1 %142, label %if_end49, label %assert_fail50, !dbg !457, !prof !18

if_end49:                                         ; preds = %if_then48, %assert_end47
  %143 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !457
  %144 = load i64, ptr %143, align 8, !dbg !457
  %145 = icmp eq i64 %144, 0, !dbg !457
  br i1 %145, label %assert_end53, label %assert_fail52, !dbg !457, !prof !18

assert_fail50:                                    ; preds = %if_then48
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %146(ptr nonnull @.str.131), !dbg !457
  br label %common.ret

assert_fail52:                                    ; preds = %if_end49
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %147(ptr nonnull @.str.132), !dbg !457
  br label %common.ret

assert_end53:                                     ; preds = %if_end49
  %148 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !457
  %149 = load i32, ptr %148, align 4, !dbg !457
  %150 = icmp eq i32 %149, 1, !dbg !457
  br i1 %150, label %assert_end55, label %assert_fail54, !dbg !457, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %151(ptr nonnull @.str.133), !dbg !457
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %152 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !457
  %153 = load i32, ptr %152, align 4, !dbg !457
  %154 = icmp eq i32 %dev_id, %153, !dbg !457
  br i1 %154, label %assert_end57, label %assert_fail56, !dbg !457, !prof !18

assert_fail56:                                    ; preds = %assert_end55
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %155(ptr nonnull @.str.134), !dbg !457
  br label %common.ret

assert_end57:                                     ; preds = %assert_end55
  %156 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !457
  %157 = load i32, ptr %156, align 4, !dbg !457
  %158 = icmp eq i32 %157, 5, !dbg !457
  br i1 %158, label %assert_end61, label %assert_fail58, !dbg !457, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %159 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %159(ptr nonnull @.str.135), !dbg !457
  br label %common.ret

assert_end61:                                     ; preds = %assert_end57
  %160 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !457
  %161 = load i16, ptr %160, align 2, !dbg !457
  %162 = icmp eq i16 %161, 1, !dbg !457
  %163 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !457
  %164 = load i8, ptr %163, align 1, !dbg !457
  %165 = icmp eq i8 %164, 8, !dbg !457
  %166 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !457
  %167 = load i8, ptr %166, align 1, !dbg !457
  %168 = icmp eq i8 %167, 0, !dbg !457
  %169 = and i1 %165, %168, !dbg !457
  %170 = and i1 %162, %169, !dbg !457
  br i1 %170, label %assert_end63, label %assert_fail62, !dbg !457, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %171 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %171(ptr nonnull @.str.136), !dbg !457
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %172 = load i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape, align 8, !dbg !457, !tbaa !554
  %173 = and i64 %172, 4294967295, !dbg !457
  %174 = icmp eq i64 %173, 1, !dbg !457
  br i1 %174, label %assert_end65, label %assert_fail64, !dbg !457, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %175(ptr nonnull @.str.137), !dbg !457
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape, i64 1, !dbg !457
  %177 = load i64, ptr %176, align 8, !dbg !457, !tbaa !564
  %178 = and i64 %177, 4294967295, !dbg !457
  %179 = icmp eq i64 %178, 512, !dbg !457
  br i1 %179, label %assert_end67, label %assert_fail66, !dbg !457, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %180(ptr nonnull @.str.138), !dbg !457
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %181 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape, i64 2, !dbg !457
  %182 = load i64, ptr %181, align 8, !dbg !457, !tbaa !566
  %183 = and i64 %182, 4294967295, !dbg !457
  %184 = icmp eq i64 %183, 7, !dbg !457
  br i1 %184, label %assert_end69, label %assert_fail68, !dbg !457, !prof !18

assert_fail68:                                    ; preds = %assert_end67
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %185(ptr nonnull @.str.139), !dbg !457
  br label %common.ret

assert_end69:                                     ; preds = %assert_end67
  %186 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape, i64 3, !dbg !457
  %187 = load i64, ptr %186, align 8, !dbg !457, !tbaa !569
  %188 = and i64 %187, 4294967295, !dbg !457
  %189 = icmp eq i64 %188, 7, !dbg !457
  br i1 %189, label %assert_end71, label %assert_fail70, !dbg !457, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %190 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %190(ptr nonnull @.str.140), !dbg !457
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %191 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.shape, i64 4, !dbg !457
  %192 = load i64, ptr %191, align 8, !dbg !457, !tbaa !571
  %193 = and i64 %192, 4294967295, !dbg !457
  %194 = icmp eq i64 %193, 4, !dbg !457
  br i1 %194, label %assert_end73, label %assert_fail72, !dbg !457, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %195 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %195(ptr nonnull @.str.141), !dbg !457
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %.not88 = icmp eq ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.strides, null, !dbg !457
  br i1 %.not88, label %if_end75, label %if_then74, !dbg !457, !prof !59

if_then74:                                        ; preds = %assert_end73
  %196 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.strides, i64 1, !dbg !457
  %197 = load i64, ptr %196, align 8, !dbg !457, !tbaa !575
  %198 = and i64 %197, 4294967295, !dbg !457
  %199 = icmp eq i64 %198, 196, !dbg !457
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.strides, i64 2, !dbg !457
  %201 = load i64, ptr %200, align 8, !dbg !457, !tbaa !585
  %202 = and i64 %201, 4294967295, !dbg !457
  %203 = icmp eq i64 %202, 28, !dbg !457
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.strides, i64 3, !dbg !457
  %205 = load i64, ptr %204, align 8, !dbg !457, !tbaa !588
  %206 = and i64 %205, 4294967295, !dbg !457
  %207 = icmp eq i64 %206, 4, !dbg !457
  %208 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3.T_cast.strides, i64 4, !dbg !457
  %209 = load i64, ptr %208, align 8, !dbg !457, !tbaa !590
  %210 = and i64 %209, 4294967295, !dbg !457
  %211 = icmp eq i64 %210, 1, !dbg !457
  %212 = and i1 %207, %211, !dbg !457
  %213 = and i1 %203, %212, !dbg !457
  %214 = and i1 %199, %213, !dbg !457
  br i1 %214, label %if_end75, label %assert_fail76, !dbg !457, !prof !18

if_end75:                                         ; preds = %if_then74, %assert_end73
  %215 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !457
  %216 = load i64, ptr %215, align 8, !dbg !457
  %217 = icmp eq i64 %216, 0, !dbg !457
  br i1 %217, label %assert_end79, label %assert_fail78, !dbg !457, !prof !18

assert_fail76:                                    ; preds = %if_then74
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %218(ptr nonnull @.str.142), !dbg !457
  br label %common.ret

assert_fail78:                                    ; preds = %if_end75
  %219 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %219(ptr nonnull @.str.143), !dbg !457
  br label %common.ret

assert_end79:                                     ; preds = %if_end75
  %220 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !457
  %221 = load i32, ptr %220, align 4, !dbg !457
  %222 = icmp eq i32 %221, 1, !dbg !457
  br i1 %222, label %assert_end81, label %assert_fail80, !dbg !457, !prof !18

assert_fail80:                                    ; preds = %assert_end79
  %223 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %223(ptr nonnull @.str.144), !dbg !457
  br label %common.ret

assert_end81:                                     ; preds = %assert_end79
  %224 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !457
  %225 = load i32, ptr %224, align 4, !dbg !457
  %226 = icmp eq i32 %dev_id, %225, !dbg !457
  br i1 %226, label %assert_end83, label %assert_fail82, !dbg !457, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !457, !tbaa !19
  tail call void %227(ptr nonnull @.str.145), !dbg !457
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %228 = tail call fastcc i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_compute_(ptr %T_cast84, ptr %p085, ptr %p186), !dbg !457
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !594 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !596, metadata !DIExpression()), !dbg !602
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !597, metadata !DIExpression()), !dbg !602
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !598, metadata !DIExpression()), !dbg !602
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !599, metadata !DIExpression()), !dbg !602
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !600, metadata !DIExpression()), !dbg !602
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !601, metadata !DIExpression()), !dbg !602
  %0 = icmp eq i32 %num_args, 2, !dbg !602
  br i1 %0, label %assert_end, label %assert_fail, !dbg !602, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %151, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !602

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %1(ptr nonnull @.str.147), !dbg !602
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !602, !tbaa !603
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !602
  %T_multiply.code = load i32, ptr %2, align 4, !dbg !602, !tbaa !614
  %p0 = load ptr, ptr %args, align 8, !dbg !602
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !602
  %T_multiply = load ptr, ptr %3, align 8, !dbg !602
  %p056 = load ptr, ptr %p0, align 8, !dbg !602
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !602
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !602
  %tvmgen_default_fused_cast_multiply.p0.shape = load ptr, ptr %4, align 8, !dbg !602
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !602
  %tvmgen_default_fused_cast_multiply.p0.strides = load ptr, ptr %5, align 8, !dbg !602
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !602
  %dev_id = load i32, ptr %6, align 4, !dbg !602
  %T_multiply55 = load ptr, ptr %T_multiply, align 8, !dbg !602
  call void @llvm.assume(i1 true) [ "align"(ptr %T_multiply55, i64 64) ], !dbg !602
  %7 = getelementptr inbounds %1, ptr %T_multiply, i64 0, i32 4, !dbg !602
  %tvmgen_default_fused_cast_multiply.T_multiply.shape = load ptr, ptr %7, align 8, !dbg !602
  %8 = getelementptr inbounds %1, ptr %T_multiply, i64 0, i32 5, !dbg !602
  %tvmgen_default_fused_cast_multiply.T_multiply.strides = load ptr, ptr %8, align 8, !dbg !602
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !602

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %9(ptr nonnull @.str.148), !dbg !602
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_multiply.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !602

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %10(ptr nonnull @.str.149), !dbg !602
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !602
  %12 = load i32, ptr %11, align 4, !dbg !602
  %13 = icmp eq i32 %12, 5, !dbg !602
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !602, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %14(ptr nonnull @.str.150), !dbg !602
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !602
  %16 = load i16, ptr %15, align 2, !dbg !602
  %17 = icmp eq i16 %16, 1, !dbg !602
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !602
  %19 = load i8, ptr %18, align 1, !dbg !602
  %20 = icmp eq i8 %19, 8, !dbg !602
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !602
  %22 = load i8, ptr %21, align 1, !dbg !602
  %23 = icmp eq i8 %22, 0, !dbg !602
  %24 = and i1 %20, %23, !dbg !602
  %25 = and i1 %17, %24, !dbg !602
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !602, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %26(ptr nonnull @.str.151), !dbg !602
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_cast_multiply.p0.shape, align 8, !dbg !602, !tbaa !616
  %28 = and i64 %27, 4294967295, !dbg !602
  %29 = icmp eq i64 %28, 1, !dbg !602
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !602, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %30(ptr nonnull @.str.152), !dbg !602
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.p0.shape, i64 1, !dbg !602
  %32 = load i64, ptr %31, align 8, !dbg !602, !tbaa !626
  %33 = and i64 %32, 4294967295, !dbg !602
  %34 = icmp eq i64 %33, 512, !dbg !602
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !602, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %35(ptr nonnull @.str.153), !dbg !602
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.p0.shape, i64 2, !dbg !602
  %37 = load i64, ptr %36, align 8, !dbg !602, !tbaa !628
  %38 = and i64 %37, 4294967295, !dbg !602
  %39 = icmp eq i64 %38, 7, !dbg !602
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !602, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %40(ptr nonnull @.str.154), !dbg !602
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.p0.shape, i64 3, !dbg !602
  %42 = load i64, ptr %41, align 8, !dbg !602, !tbaa !631
  %43 = and i64 %42, 4294967295, !dbg !602
  %44 = icmp eq i64 %43, 7, !dbg !602
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !602, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %45(ptr nonnull @.str.155), !dbg !602
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.p0.shape, i64 4, !dbg !602
  %47 = load i64, ptr %46, align 8, !dbg !602, !tbaa !633
  %48 = and i64 %47, 4294967295, !dbg !602
  %49 = icmp eq i64 %48, 4, !dbg !602
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !602, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %50(ptr nonnull @.str.156), !dbg !602
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply.p0.strides, null, !dbg !602
  br i1 %.not, label %if_end, label %if_then, !dbg !602, !prof !59

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.p0.strides, i64 1, !dbg !602
  %52 = load i64, ptr %51, align 8, !dbg !602, !tbaa !637
  %53 = and i64 %52, 4294967295, !dbg !602
  %54 = icmp eq i64 %53, 196, !dbg !602
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.p0.strides, i64 2, !dbg !602
  %56 = load i64, ptr %55, align 8, !dbg !602, !tbaa !647
  %57 = and i64 %56, 4294967295, !dbg !602
  %58 = icmp eq i64 %57, 28, !dbg !602
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.p0.strides, i64 3, !dbg !602
  %60 = load i64, ptr %59, align 8, !dbg !602, !tbaa !650
  %61 = and i64 %60, 4294967295, !dbg !602
  %62 = icmp eq i64 %61, 4, !dbg !602
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.p0.strides, i64 4, !dbg !602
  %64 = load i64, ptr %63, align 8, !dbg !602, !tbaa !652
  %65 = and i64 %64, 4294967295, !dbg !602
  %66 = icmp eq i64 %65, 1, !dbg !602
  %67 = and i1 %62, %66, !dbg !602
  %68 = and i1 %58, %67, !dbg !602
  %69 = and i1 %54, %68, !dbg !602
  br i1 %69, label %if_end, label %assert_fail23, !dbg !602, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !602
  %71 = load i64, ptr %70, align 8, !dbg !602
  %72 = icmp eq i64 %71, 0, !dbg !602
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !602, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %73(ptr nonnull @.str.157), !dbg !602
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %74(ptr nonnull @.str.158), !dbg !602
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !602
  %76 = load i32, ptr %75, align 4, !dbg !602
  %77 = icmp eq i32 %76, 1, !dbg !602
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !602, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %78(ptr nonnull @.str.159), !dbg !602
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_multiply, i64 0, i32 2, !dbg !602
  %80 = load i32, ptr %79, align 4, !dbg !602
  %81 = icmp eq i32 %80, 5, !dbg !602
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !602, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %82(ptr nonnull @.str.160), !dbg !602
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_multiply, i64 0, i32 3, i32 2, !dbg !602
  %84 = load i16, ptr %83, align 2, !dbg !602
  %85 = icmp eq i16 %84, 1, !dbg !602
  %86 = getelementptr inbounds %1, ptr %T_multiply, i64 0, i32 3, i32 1, !dbg !602
  %87 = load i8, ptr %86, align 1, !dbg !602
  %88 = icmp eq i8 %87, 32, !dbg !602
  %89 = getelementptr inbounds %1, ptr %T_multiply, i64 0, i32 3, i32 0, !dbg !602
  %90 = load i8, ptr %89, align 1, !dbg !602
  %91 = icmp eq i8 %90, 2, !dbg !602
  %92 = and i1 %88, %91, !dbg !602
  %93 = and i1 %85, %92, !dbg !602
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !602, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %94(ptr nonnull @.str.161), !dbg !602
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_cast_multiply.T_multiply.shape, align 8, !dbg !602, !tbaa !656
  %96 = and i64 %95, 4294967295, !dbg !602
  %97 = icmp eq i64 %96, 1, !dbg !602
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !602, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %98(ptr nonnull @.str.162), !dbg !602
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.T_multiply.shape, i64 1, !dbg !602
  %100 = load i64, ptr %99, align 8, !dbg !602, !tbaa !666
  %101 = and i64 %100, 4294967295, !dbg !602
  %102 = icmp eq i64 %101, 512, !dbg !602
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !602, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %103(ptr nonnull @.str.163), !dbg !602
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.T_multiply.shape, i64 2, !dbg !602
  %105 = load i64, ptr %104, align 8, !dbg !602, !tbaa !668
  %106 = and i64 %105, 4294967295, !dbg !602
  %107 = icmp eq i64 %106, 7, !dbg !602
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !602, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %108(ptr nonnull @.str.164), !dbg !602
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.T_multiply.shape, i64 3, !dbg !602
  %110 = load i64, ptr %109, align 8, !dbg !602, !tbaa !671
  %111 = and i64 %110, 4294967295, !dbg !602
  %112 = icmp eq i64 %111, 7, !dbg !602
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !602, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %113(ptr nonnull @.str.165), !dbg !602
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.T_multiply.shape, i64 4, !dbg !602
  %115 = load i64, ptr %114, align 8, !dbg !602, !tbaa !673
  %116 = and i64 %115, 4294967295, !dbg !602
  %117 = icmp eq i64 %116, 4, !dbg !602
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !602, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %118(ptr nonnull @.str.166), !dbg !602
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_cast_multiply.T_multiply.strides, null, !dbg !602
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !602, !prof !59

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.T_multiply.strides, i64 1, !dbg !602
  %120 = load i64, ptr %119, align 8, !dbg !602, !tbaa !677
  %121 = and i64 %120, 4294967295, !dbg !602
  %122 = icmp eq i64 %121, 196, !dbg !602
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.T_multiply.strides, i64 2, !dbg !602
  %124 = load i64, ptr %123, align 8, !dbg !602, !tbaa !687
  %125 = and i64 %124, 4294967295, !dbg !602
  %126 = icmp eq i64 %125, 28, !dbg !602
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.T_multiply.strides, i64 3, !dbg !602
  %128 = load i64, ptr %127, align 8, !dbg !602, !tbaa !690
  %129 = and i64 %128, 4294967295, !dbg !602
  %130 = icmp eq i64 %129, 4, !dbg !602
  %131 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply.T_multiply.strides, i64 4, !dbg !602
  %132 = load i64, ptr %131, align 8, !dbg !602, !tbaa !692
  %133 = and i64 %132, 4294967295, !dbg !602
  %134 = icmp eq i64 %133, 1, !dbg !602
  %135 = and i1 %130, %134, !dbg !602
  %136 = and i1 %126, %135, !dbg !602
  %137 = and i1 %122, %136, !dbg !602
  br i1 %137, label %if_end46, label %assert_fail47, !dbg !602, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %138 = getelementptr inbounds %1, ptr %T_multiply, i64 0, i32 6, !dbg !602
  %139 = load i64, ptr %138, align 8, !dbg !602
  %140 = icmp eq i64 %139, 0, !dbg !602
  br i1 %140, label %assert_end50, label %assert_fail49, !dbg !602, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %141(ptr nonnull @.str.167), !dbg !602
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %142 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %142(ptr nonnull @.str.168), !dbg !602
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %143 = getelementptr inbounds %1, ptr %T_multiply, i64 0, i32 1, i32 0, !dbg !602
  %144 = load i32, ptr %143, align 4, !dbg !602
  %145 = icmp eq i32 %144, 1, !dbg !602
  br i1 %145, label %assert_end52, label %assert_fail51, !dbg !602, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %146(ptr nonnull @.str.169), !dbg !602
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %147 = getelementptr inbounds %1, ptr %T_multiply, i64 0, i32 1, i32 1, !dbg !602
  %148 = load i32, ptr %147, align 4, !dbg !602
  %149 = icmp eq i32 %dev_id, %148, !dbg !602
  br i1 %149, label %assert_end54, label %assert_fail53, !dbg !602, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !602, !tbaa !19
  tail call void %150(ptr nonnull @.str.170), !dbg !602
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %151 = tail call fastcc i32 @tvmgen_default_fused_cast_multiply_compute_(ptr %T_multiply55, ptr %p056), !dbg !602
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !696 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !698, metadata !DIExpression()), !dbg !704
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !699, metadata !DIExpression()), !dbg !704
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !700, metadata !DIExpression()), !dbg !704
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !701, metadata !DIExpression()), !dbg !704
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !702, metadata !DIExpression()), !dbg !704
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !703, metadata !DIExpression()), !dbg !704
  %0 = icmp eq i32 %num_args, 6, !dbg !704
  br i1 %0, label %assert_end, label %assert_fail, !dbg !704, !prof !18

common.ret:                                       ; preds = %assert_end142, %assert_fail141, %assert_fail139, %assert_fail137, %assert_fail135, %assert_fail131, %assert_fail129, %assert_fail127, %assert_fail125, %assert_fail123, %assert_fail121, %assert_fail117, %assert_fail115, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail105, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail105 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ -1, %assert_fail115 ], [ -1, %assert_fail117 ], [ -1, %assert_fail121 ], [ -1, %assert_fail123 ], [ -1, %assert_fail125 ], [ -1, %assert_fail127 ], [ -1, %assert_fail129 ], [ -1, %assert_fail131 ], [ -1, %assert_fail135 ], [ -1, %assert_fail137 ], [ -1, %assert_fail139 ], [ -1, %assert_fail141 ], [ %347, %assert_end142 ]
  ret i32 %common.ret.op, !dbg !704

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %1(ptr nonnull @.str.172), !dbg !704
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !704, !tbaa !705
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !704
  %p1.code = load i32, ptr %2, align 4, !dbg !704, !tbaa !716
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !704
  %p2.code = load i32, ptr %3, align 4, !dbg !704, !tbaa !718
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !704
  %p3.code = load i32, ptr %4, align 4, !dbg !704, !tbaa !721
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !704
  %p4.code = load i32, ptr %5, align 4, !dbg !704, !tbaa !723
  %6 = getelementptr inbounds i32, ptr %arg_type_ids, i64 5, !dbg !704
  %T_cast.code = load i32, ptr %6, align 4, !dbg !704, !tbaa !727
  %p0 = load ptr, ptr %args, align 8, !dbg !704
  %7 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !704
  %p1 = load ptr, ptr %7, align 8, !dbg !704
  %8 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !704
  %p2 = load ptr, ptr %8, align 8, !dbg !704
  %9 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !704
  %p3 = load ptr, ptr %9, align 8, !dbg !704
  %10 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !704
  %p4 = load ptr, ptr %10, align 8, !dbg !704
  %11 = getelementptr inbounds %0, ptr %args, i64 5, !dbg !704
  %T_cast = load ptr, ptr %11, align 8, !dbg !704
  %p0144 = load ptr, ptr %p0, align 8, !dbg !704
  call void @llvm.assume(i1 true) [ "align"(ptr %p0144, i64 64) ], !dbg !704
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !704
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape = load ptr, ptr %12, align 8, !dbg !704
  %13 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !704
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.strides = load ptr, ptr %13, align 8, !dbg !704
  %14 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !704
  %dev_id = load i32, ptr %14, align 4, !dbg !704
  %p1145 = load ptr, ptr %p1, align 8, !dbg !704
  call void @llvm.assume(i1 true) [ "align"(ptr %p1145, i64 64) ], !dbg !704
  %15 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !704
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape = load ptr, ptr %15, align 8, !dbg !704
  %16 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !704
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.strides = load ptr, ptr %16, align 8, !dbg !704
  %p2146 = load ptr, ptr %p2, align 8, !dbg !704
  call void @llvm.assume(i1 true) [ "align"(ptr %p2146, i64 64) ], !dbg !704
  %17 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !704
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape = load ptr, ptr %17, align 8, !dbg !704
  %18 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !704
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.strides = load ptr, ptr %18, align 8, !dbg !704
  %p3147 = load ptr, ptr %p3, align 8, !dbg !704
  call void @llvm.assume(i1 true) [ "align"(ptr %p3147, i64 64) ], !dbg !704
  %p4148 = load ptr, ptr %p4, align 8, !dbg !704
  call void @llvm.assume(i1 true) [ "align"(ptr %p4148, i64 64) ], !dbg !704
  %T_cast143 = load ptr, ptr %T_cast, align 8, !dbg !704
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast143, i64 64) ], !dbg !704
  %19 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !704
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape = load ptr, ptr %19, align 8, !dbg !704
  %20 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !704
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.strides = load ptr, ptr %20, align 8, !dbg !704
  switch i32 %p0.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !704

assert_fail7:                                     ; preds = %assert_end
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %21(ptr nonnull @.str.173), !dbg !704
  br label %common.ret

assert_end8:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !704

assert_fail9:                                     ; preds = %assert_end8
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %22(ptr nonnull @.str.174), !dbg !704
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %p2.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !704

assert_fail11:                                    ; preds = %assert_end10
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %23(ptr nonnull @.str.175), !dbg !704
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  switch i32 %p3.code, label %assert_fail13 [
    i32 13, label %assert_end14
    i32 7, label %assert_end14
    i32 4, label %assert_end14
    i32 3, label %assert_end14
  ], !dbg !704

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %24(ptr nonnull @.str.176), !dbg !704
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12, %assert_end12, %assert_end12, %assert_end12
  switch i32 %p4.code, label %assert_fail15 [
    i32 13, label %assert_end16
    i32 7, label %assert_end16
    i32 4, label %assert_end16
    i32 3, label %assert_end16
  ], !dbg !704

assert_fail15:                                    ; preds = %assert_end14
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %25(ptr nonnull @.str.177), !dbg !704
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14, %assert_end14, %assert_end14, %assert_end14
  switch i32 %T_cast.code, label %assert_fail17 [
    i32 13, label %assert_end18
    i32 7, label %assert_end18
    i32 4, label %assert_end18
    i32 3, label %assert_end18
  ], !dbg !704

assert_fail17:                                    ; preds = %assert_end16
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %26(ptr nonnull @.str.178), !dbg !704
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16, %assert_end16, %assert_end16, %assert_end16
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !704
  %28 = load i32, ptr %27, align 4, !dbg !704
  %29 = icmp eq i32 %28, 5, !dbg !704
  br i1 %29, label %assert_end22, label %assert_fail19, !dbg !704, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %30(ptr nonnull @.str.179), !dbg !704
  br label %common.ret

assert_end22:                                     ; preds = %assert_end18
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !704
  %32 = load i16, ptr %31, align 2, !dbg !704
  %33 = icmp eq i16 %32, 1, !dbg !704
  %34 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !704
  %35 = load i8, ptr %34, align 1, !dbg !704
  %36 = icmp eq i8 %35, 8, !dbg !704
  %37 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !704
  %38 = load i8, ptr %37, align 1, !dbg !704
  %39 = icmp eq i8 %38, 0, !dbg !704
  %40 = and i1 %36, %39, !dbg !704
  %41 = and i1 %33, %40, !dbg !704
  br i1 %41, label %assert_end24, label %assert_fail23, !dbg !704, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %42 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %42(ptr nonnull @.str.180), !dbg !704
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %43 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape, align 8, !dbg !704, !tbaa !729
  %44 = and i64 %43, 4294967295, !dbg !704
  %45 = icmp eq i64 %44, 1, !dbg !704
  br i1 %45, label %assert_end26, label %assert_fail25, !dbg !704, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %46(ptr nonnull @.str.181), !dbg !704
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape, i64 1, !dbg !704
  %48 = load i64, ptr %47, align 8, !dbg !704, !tbaa !739
  %49 = and i64 %48, 4294967295, !dbg !704
  %50 = icmp eq i64 %49, 16, !dbg !704
  br i1 %50, label %assert_end28, label %assert_fail27, !dbg !704, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %51(ptr nonnull @.str.182), !dbg !704
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape, i64 2, !dbg !704
  %53 = load i64, ptr %52, align 8, !dbg !704, !tbaa !741
  %54 = and i64 %53, 4294967295, !dbg !704
  %55 = icmp eq i64 %54, 56, !dbg !704
  br i1 %55, label %assert_end30, label %assert_fail29, !dbg !704, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %56(ptr nonnull @.str.183), !dbg !704
  br label %common.ret

assert_end30:                                     ; preds = %assert_end28
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape, i64 3, !dbg !704
  %58 = load i64, ptr %57, align 8, !dbg !704, !tbaa !744
  %59 = and i64 %58, 4294967295, !dbg !704
  %60 = icmp eq i64 %59, 56, !dbg !704
  br i1 %60, label %assert_end32, label %assert_fail31, !dbg !704, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %61(ptr nonnull @.str.184), !dbg !704
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.shape, i64 4, !dbg !704
  %63 = load i64, ptr %62, align 8, !dbg !704, !tbaa !746
  %64 = and i64 %63, 4294967295, !dbg !704
  %65 = icmp eq i64 %64, 4, !dbg !704
  br i1 %65, label %assert_end34, label %assert_fail33, !dbg !704, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %66 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %66(ptr nonnull @.str.185), !dbg !704
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.strides, null, !dbg !704
  br i1 %.not, label %if_end, label %if_then, !dbg !704, !prof !59

if_then:                                          ; preds = %assert_end34
  %67 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.strides, i64 1, !dbg !704
  %68 = load i64, ptr %67, align 8, !dbg !704, !tbaa !750
  %69 = and i64 %68, 4294967295, !dbg !704
  %70 = icmp eq i64 %69, 12544, !dbg !704
  %71 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.strides, i64 2, !dbg !704
  %72 = load i64, ptr %71, align 8, !dbg !704, !tbaa !760
  %73 = and i64 %72, 4294967295, !dbg !704
  %74 = icmp eq i64 %73, 224, !dbg !704
  %75 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.strides, i64 3, !dbg !704
  %76 = load i64, ptr %75, align 8, !dbg !704, !tbaa !763
  %77 = and i64 %76, 4294967295, !dbg !704
  %78 = icmp eq i64 %77, 4, !dbg !704
  %79 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p0.strides, i64 4, !dbg !704
  %80 = load i64, ptr %79, align 8, !dbg !704, !tbaa !765
  %81 = and i64 %80, 4294967295, !dbg !704
  %82 = icmp eq i64 %81, 1, !dbg !704
  %83 = and i1 %78, %82, !dbg !704
  %84 = and i1 %74, %83, !dbg !704
  %85 = and i1 %70, %84, !dbg !704
  br i1 %85, label %if_end, label %assert_fail35, !dbg !704, !prof !18

if_end:                                           ; preds = %if_then, %assert_end34
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !704
  %87 = load i64, ptr %86, align 8, !dbg !704
  %88 = icmp eq i64 %87, 0, !dbg !704
  br i1 %88, label %assert_end38, label %assert_fail37, !dbg !704, !prof !18

assert_fail35:                                    ; preds = %if_then
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %89(ptr nonnull @.str.186), !dbg !704
  br label %common.ret

assert_fail37:                                    ; preds = %if_end
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %90(ptr nonnull @.str.187), !dbg !704
  br label %common.ret

assert_end38:                                     ; preds = %if_end
  %91 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !704
  %92 = load i32, ptr %91, align 4, !dbg !704
  %93 = icmp eq i32 %92, 1, !dbg !704
  br i1 %93, label %assert_end40, label %assert_fail39, !dbg !704, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %94(ptr nonnull @.str.188), !dbg !704
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %95 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !704
  %96 = load i32, ptr %95, align 4, !dbg !704
  %97 = icmp eq i32 %96, 5, !dbg !704
  br i1 %97, label %assert_end44, label %assert_fail41, !dbg !704, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %98(ptr nonnull @.str.189), !dbg !704
  br label %common.ret

assert_end44:                                     ; preds = %assert_end40
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !704
  %100 = load i16, ptr %99, align 2, !dbg !704
  %101 = icmp eq i16 %100, 1, !dbg !704
  %102 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !704
  %103 = load i8, ptr %102, align 1, !dbg !704
  %104 = icmp eq i8 %103, 16, !dbg !704
  %105 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !704
  %106 = load i8, ptr %105, align 1, !dbg !704
  %107 = icmp eq i8 %106, 0, !dbg !704
  %108 = and i1 %104, %107, !dbg !704
  %109 = and i1 %101, %108, !dbg !704
  br i1 %109, label %assert_end46, label %assert_fail45, !dbg !704, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %110 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %110(ptr nonnull @.str.190), !dbg !704
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %111 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape, align 8, !dbg !704, !tbaa !769
  %112 = and i64 %111, 4294967295, !dbg !704
  %113 = icmp eq i64 %112, 1, !dbg !704
  br i1 %113, label %assert_end48, label %assert_fail47, !dbg !704, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %114(ptr nonnull @.str.191), !dbg !704
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape, i64 1, !dbg !704
  %116 = load i64, ptr %115, align 8, !dbg !704, !tbaa !779
  %117 = and i64 %116, 4294967295, !dbg !704
  %118 = icmp eq i64 %117, 16, !dbg !704
  br i1 %118, label %assert_end50, label %assert_fail49, !dbg !704, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %119(ptr nonnull @.str.192), !dbg !704
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape, i64 2, !dbg !704
  %121 = load i64, ptr %120, align 8, !dbg !704, !tbaa !781
  %122 = and i64 %121, 4294967295, !dbg !704
  %123 = icmp eq i64 %122, 1, !dbg !704
  br i1 %123, label %assert_end52, label %assert_fail51, !dbg !704, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %124(ptr nonnull @.str.193), !dbg !704
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape, i64 3, !dbg !704
  %126 = load i64, ptr %125, align 8, !dbg !704, !tbaa !784
  %127 = and i64 %126, 4294967295, !dbg !704
  %128 = icmp eq i64 %127, 1, !dbg !704
  br i1 %128, label %assert_end54, label %assert_fail53, !dbg !704, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %129(ptr nonnull @.str.194), !dbg !704
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.shape, i64 4, !dbg !704
  %131 = load i64, ptr %130, align 8, !dbg !704, !tbaa !786
  %132 = and i64 %131, 4294967295, !dbg !704
  %133 = icmp eq i64 %132, 4, !dbg !704
  br i1 %133, label %assert_end56, label %assert_fail55, !dbg !704, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %134(ptr nonnull @.str.195), !dbg !704
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %.not149 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.strides, null, !dbg !704
  br i1 %.not149, label %if_end58, label %if_then57, !dbg !704, !prof !59

if_then57:                                        ; preds = %assert_end56
  %135 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.strides, i64 1, !dbg !704
  %136 = load i64, ptr %135, align 8, !dbg !704, !tbaa !790
  %137 = and i64 %136, 4294967295, !dbg !704
  %138 = icmp eq i64 %137, 4, !dbg !704
  %139 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p1.strides, i64 4, !dbg !704
  %140 = load i64, ptr %139, align 8, !dbg !704, !tbaa !800
  %141 = and i64 %140, 4294967295, !dbg !704
  %142 = icmp eq i64 %141, 1, !dbg !704
  %143 = and i1 %138, %142, !dbg !704
  br i1 %143, label %if_end58, label %assert_fail59, !dbg !704, !prof !18

if_end58:                                         ; preds = %if_then57, %assert_end56
  %144 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !704
  %145 = load i64, ptr %144, align 8, !dbg !704
  %146 = icmp eq i64 %145, 0, !dbg !704
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !704, !prof !18

assert_fail59:                                    ; preds = %if_then57
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %147(ptr nonnull @.str.196), !dbg !704
  br label %common.ret

assert_fail61:                                    ; preds = %if_end58
  %148 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %148(ptr nonnull @.str.197), !dbg !704
  br label %common.ret

assert_end62:                                     ; preds = %if_end58
  %149 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !704
  %150 = load i32, ptr %149, align 4, !dbg !704
  %151 = icmp eq i32 %150, 1, !dbg !704
  br i1 %151, label %assert_end64, label %assert_fail63, !dbg !704, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %152 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %152(ptr nonnull @.str.198), !dbg !704
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !704
  %154 = load i32, ptr %153, align 4, !dbg !704
  %155 = icmp eq i32 %dev_id, %154, !dbg !704
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !704, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %156(ptr nonnull @.str.199), !dbg !704
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !704
  %158 = load i32, ptr %157, align 4, !dbg !704
  %159 = icmp eq i32 %158, 5, !dbg !704
  br i1 %159, label %assert_end70, label %assert_fail67, !dbg !704, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %160(ptr nonnull @.str.200), !dbg !704
  br label %common.ret

assert_end70:                                     ; preds = %assert_end66
  %161 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !704
  %162 = load i16, ptr %161, align 2, !dbg !704
  %163 = icmp eq i16 %162, 1, !dbg !704
  %164 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !704
  %165 = load i8, ptr %164, align 1, !dbg !704
  %166 = icmp eq i8 %165, 16, !dbg !704
  %167 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !704
  %168 = load i8, ptr %167, align 1, !dbg !704
  %169 = icmp eq i8 %168, 0, !dbg !704
  %170 = and i1 %166, %169, !dbg !704
  %171 = and i1 %163, %170, !dbg !704
  br i1 %171, label %assert_end72, label %assert_fail71, !dbg !704, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %172 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %172(ptr nonnull @.str.201), !dbg !704
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %173 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape, align 8, !dbg !704, !tbaa !804
  %174 = and i64 %173, 4294967295, !dbg !704
  %175 = icmp eq i64 %174, 1, !dbg !704
  br i1 %175, label %assert_end74, label %assert_fail73, !dbg !704, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %176 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %176(ptr nonnull @.str.202), !dbg !704
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %177 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape, i64 1, !dbg !704
  %178 = load i64, ptr %177, align 8, !dbg !704, !tbaa !814
  %179 = and i64 %178, 4294967295, !dbg !704
  %180 = icmp eq i64 %179, 16, !dbg !704
  br i1 %180, label %assert_end76, label %assert_fail75, !dbg !704, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %181(ptr nonnull @.str.203), !dbg !704
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %182 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape, i64 2, !dbg !704
  %183 = load i64, ptr %182, align 8, !dbg !704, !tbaa !816
  %184 = and i64 %183, 4294967295, !dbg !704
  %185 = icmp eq i64 %184, 1, !dbg !704
  br i1 %185, label %assert_end78, label %assert_fail77, !dbg !704, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %186 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %186(ptr nonnull @.str.204), !dbg !704
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %187 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape, i64 3, !dbg !704
  %188 = load i64, ptr %187, align 8, !dbg !704, !tbaa !819
  %189 = and i64 %188, 4294967295, !dbg !704
  %190 = icmp eq i64 %189, 1, !dbg !704
  br i1 %190, label %assert_end80, label %assert_fail79, !dbg !704, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %191(ptr nonnull @.str.205), !dbg !704
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %192 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.shape, i64 4, !dbg !704
  %193 = load i64, ptr %192, align 8, !dbg !704, !tbaa !821
  %194 = and i64 %193, 4294967295, !dbg !704
  %195 = icmp eq i64 %194, 4, !dbg !704
  br i1 %195, label %assert_end82, label %assert_fail81, !dbg !704, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %196 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %196(ptr nonnull @.str.206), !dbg !704
  br label %common.ret

assert_end82:                                     ; preds = %assert_end80
  %.not150 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.strides, null, !dbg !704
  br i1 %.not150, label %if_end84, label %if_then83, !dbg !704, !prof !59

if_then83:                                        ; preds = %assert_end82
  %197 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.strides, i64 1, !dbg !704
  %198 = load i64, ptr %197, align 8, !dbg !704, !tbaa !825
  %199 = and i64 %198, 4294967295, !dbg !704
  %200 = icmp eq i64 %199, 4, !dbg !704
  %201 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.p2.strides, i64 4, !dbg !704
  %202 = load i64, ptr %201, align 8, !dbg !704, !tbaa !835
  %203 = and i64 %202, 4294967295, !dbg !704
  %204 = icmp eq i64 %203, 1, !dbg !704
  %205 = and i1 %200, %204, !dbg !704
  br i1 %205, label %if_end84, label %assert_fail85, !dbg !704, !prof !18

if_end84:                                         ; preds = %if_then83, %assert_end82
  %206 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !704
  %207 = load i64, ptr %206, align 8, !dbg !704
  %208 = icmp eq i64 %207, 0, !dbg !704
  br i1 %208, label %assert_end88, label %assert_fail87, !dbg !704, !prof !18

assert_fail85:                                    ; preds = %if_then83
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %209(ptr nonnull @.str.207), !dbg !704
  br label %common.ret

assert_fail87:                                    ; preds = %if_end84
  %210 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %210(ptr nonnull @.str.208), !dbg !704
  br label %common.ret

assert_end88:                                     ; preds = %if_end84
  %211 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !704
  %212 = load i32, ptr %211, align 4, !dbg !704
  %213 = icmp eq i32 %212, 1, !dbg !704
  br i1 %213, label %assert_end90, label %assert_fail89, !dbg !704, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %214 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %214(ptr nonnull @.str.209), !dbg !704
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %215 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !704
  %216 = load i32, ptr %215, align 4, !dbg !704
  %217 = icmp eq i32 %dev_id, %216, !dbg !704
  br i1 %217, label %assert_end92, label %assert_fail91, !dbg !704, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %218(ptr nonnull @.str.210), !dbg !704
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %219 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !704
  %220 = load i32, ptr %219, align 4, !dbg !704
  %221 = icmp eq i32 %220, 0, !dbg !704
  br i1 %221, label %assert_end96, label %assert_fail93, !dbg !704, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %222(ptr nonnull @.str.211), !dbg !704
  br label %common.ret

assert_end96:                                     ; preds = %assert_end92
  %223 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !704
  %224 = load i16, ptr %223, align 2, !dbg !704
  %225 = icmp eq i16 %224, 1, !dbg !704
  %226 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !704
  %227 = load i8, ptr %226, align 1, !dbg !704
  %228 = icmp eq i8 %227, 16, !dbg !704
  %229 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !704
  %230 = load i8, ptr %229, align 1, !dbg !704
  %231 = icmp eq i8 %230, 0, !dbg !704
  %232 = and i1 %228, %231, !dbg !704
  %233 = and i1 %225, %232, !dbg !704
  br i1 %233, label %assert_end98, label %assert_fail97, !dbg !704, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %234 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %234(ptr nonnull @.str.212), !dbg !704
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %235 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !704
  %236 = load i64, ptr %235, align 8, !dbg !704
  %237 = icmp eq i64 %236, 0, !dbg !704
  br i1 %237, label %assert_end100, label %assert_fail99, !dbg !704, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %238 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %238(ptr nonnull @.str.213), !dbg !704
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %239 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !704
  %240 = load i32, ptr %239, align 4, !dbg !704
  %241 = icmp eq i32 %240, 1, !dbg !704
  br i1 %241, label %assert_end102, label %assert_fail101, !dbg !704, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %242(ptr nonnull @.str.214), !dbg !704
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %243 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !704
  %244 = load i32, ptr %243, align 4, !dbg !704
  %245 = icmp eq i32 %dev_id, %244, !dbg !704
  br i1 %245, label %assert_end104, label %assert_fail103, !dbg !704, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %246(ptr nonnull @.str.215), !dbg !704
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %247 = getelementptr inbounds %1, ptr %p4, i64 0, i32 2, !dbg !704
  %248 = load i32, ptr %247, align 4, !dbg !704
  %249 = icmp eq i32 %248, 0, !dbg !704
  br i1 %249, label %assert_end108, label %assert_fail105, !dbg !704, !prof !18

assert_fail105:                                   ; preds = %assert_end104
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %250(ptr nonnull @.str.216), !dbg !704
  br label %common.ret

assert_end108:                                    ; preds = %assert_end104
  %251 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 2, !dbg !704
  %252 = load i16, ptr %251, align 2, !dbg !704
  %253 = icmp eq i16 %252, 1, !dbg !704
  %254 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 1, !dbg !704
  %255 = load i8, ptr %254, align 1, !dbg !704
  %256 = icmp eq i8 %255, 16, !dbg !704
  %257 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 0, !dbg !704
  %258 = load i8, ptr %257, align 1, !dbg !704
  %259 = icmp eq i8 %258, 0, !dbg !704
  %260 = and i1 %256, %259, !dbg !704
  %261 = and i1 %253, %260, !dbg !704
  br i1 %261, label %assert_end110, label %assert_fail109, !dbg !704, !prof !18

assert_fail109:                                   ; preds = %assert_end108
  %262 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %262(ptr nonnull @.str.217), !dbg !704
  br label %common.ret

assert_end110:                                    ; preds = %assert_end108
  %263 = getelementptr inbounds %1, ptr %p4, i64 0, i32 6, !dbg !704
  %264 = load i64, ptr %263, align 8, !dbg !704
  %265 = icmp eq i64 %264, 0, !dbg !704
  br i1 %265, label %assert_end112, label %assert_fail111, !dbg !704, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %266(ptr nonnull @.str.218), !dbg !704
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %267 = getelementptr inbounds %1, ptr %p4, i64 0, i32 1, i32 0, !dbg !704
  %268 = load i32, ptr %267, align 4, !dbg !704
  %269 = icmp eq i32 %268, 1, !dbg !704
  br i1 %269, label %assert_end114, label %assert_fail113, !dbg !704, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %270 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %270(ptr nonnull @.str.219), !dbg !704
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %271 = getelementptr inbounds %1, ptr %p4, i64 0, i32 1, i32 1, !dbg !704
  %272 = load i32, ptr %271, align 4, !dbg !704
  %273 = icmp eq i32 %dev_id, %272, !dbg !704
  br i1 %273, label %assert_end116, label %assert_fail115, !dbg !704, !prof !18

assert_fail115:                                   ; preds = %assert_end114
  %274 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %274(ptr nonnull @.str.220), !dbg !704
  br label %common.ret

assert_end116:                                    ; preds = %assert_end114
  %275 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !704
  %276 = load i32, ptr %275, align 4, !dbg !704
  %277 = icmp eq i32 %276, 5, !dbg !704
  br i1 %277, label %assert_end120, label %assert_fail117, !dbg !704, !prof !18

assert_fail117:                                   ; preds = %assert_end116
  %278 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %278(ptr nonnull @.str.221), !dbg !704
  br label %common.ret

assert_end120:                                    ; preds = %assert_end116
  %279 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !704
  %280 = load i16, ptr %279, align 2, !dbg !704
  %281 = icmp eq i16 %280, 1, !dbg !704
  %282 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !704
  %283 = load i8, ptr %282, align 1, !dbg !704
  %284 = icmp eq i8 %283, 8, !dbg !704
  %285 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !704
  %286 = load i8, ptr %285, align 1, !dbg !704
  %287 = icmp eq i8 %286, 0, !dbg !704
  %288 = and i1 %284, %287, !dbg !704
  %289 = and i1 %281, %288, !dbg !704
  br i1 %289, label %assert_end122, label %assert_fail121, !dbg !704, !prof !18

assert_fail121:                                   ; preds = %assert_end120
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %290(ptr nonnull @.str.222), !dbg !704
  br label %common.ret

assert_end122:                                    ; preds = %assert_end120
  %291 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape, align 8, !dbg !704, !tbaa !839
  %292 = and i64 %291, 4294967295, !dbg !704
  %293 = icmp eq i64 %292, 1, !dbg !704
  br i1 %293, label %assert_end124, label %assert_fail123, !dbg !704, !prof !18

assert_fail123:                                   ; preds = %assert_end122
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %294(ptr nonnull @.str.223), !dbg !704
  br label %common.ret

assert_end124:                                    ; preds = %assert_end122
  %295 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape, i64 1, !dbg !704
  %296 = load i64, ptr %295, align 8, !dbg !704, !tbaa !849
  %297 = and i64 %296, 4294967295, !dbg !704
  %298 = icmp eq i64 %297, 16, !dbg !704
  br i1 %298, label %assert_end126, label %assert_fail125, !dbg !704, !prof !18

assert_fail125:                                   ; preds = %assert_end124
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %299(ptr nonnull @.str.224), !dbg !704
  br label %common.ret

assert_end126:                                    ; preds = %assert_end124
  %300 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape, i64 2, !dbg !704
  %301 = load i64, ptr %300, align 8, !dbg !704, !tbaa !851
  %302 = and i64 %301, 4294967295, !dbg !704
  %303 = icmp eq i64 %302, 56, !dbg !704
  br i1 %303, label %assert_end128, label %assert_fail127, !dbg !704, !prof !18

assert_fail127:                                   ; preds = %assert_end126
  %304 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %304(ptr nonnull @.str.225), !dbg !704
  br label %common.ret

assert_end128:                                    ; preds = %assert_end126
  %305 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape, i64 3, !dbg !704
  %306 = load i64, ptr %305, align 8, !dbg !704, !tbaa !854
  %307 = and i64 %306, 4294967295, !dbg !704
  %308 = icmp eq i64 %307, 56, !dbg !704
  br i1 %308, label %assert_end130, label %assert_fail129, !dbg !704, !prof !18

assert_fail129:                                   ; preds = %assert_end128
  %309 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %309(ptr nonnull @.str.226), !dbg !704
  br label %common.ret

assert_end130:                                    ; preds = %assert_end128
  %310 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.shape, i64 4, !dbg !704
  %311 = load i64, ptr %310, align 8, !dbg !704, !tbaa !856
  %312 = and i64 %311, 4294967295, !dbg !704
  %313 = icmp eq i64 %312, 4, !dbg !704
  br i1 %313, label %assert_end132, label %assert_fail131, !dbg !704, !prof !18

assert_fail131:                                   ; preds = %assert_end130
  %314 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %314(ptr nonnull @.str.227), !dbg !704
  br label %common.ret

assert_end132:                                    ; preds = %assert_end130
  %.not151 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.strides, null, !dbg !704
  br i1 %.not151, label %if_end134, label %if_then133, !dbg !704, !prof !59

if_then133:                                       ; preds = %assert_end132
  %315 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.strides, i64 1, !dbg !704
  %316 = load i64, ptr %315, align 8, !dbg !704, !tbaa !860
  %317 = and i64 %316, 4294967295, !dbg !704
  %318 = icmp eq i64 %317, 12544, !dbg !704
  %319 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.strides, i64 2, !dbg !704
  %320 = load i64, ptr %319, align 8, !dbg !704, !tbaa !870
  %321 = and i64 %320, 4294967295, !dbg !704
  %322 = icmp eq i64 %321, 224, !dbg !704
  %323 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.strides, i64 3, !dbg !704
  %324 = load i64, ptr %323, align 8, !dbg !704, !tbaa !873
  %325 = and i64 %324, 4294967295, !dbg !704
  %326 = icmp eq i64 %325, 4, !dbg !704
  %327 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast.T_cast.strides, i64 4, !dbg !704
  %328 = load i64, ptr %327, align 8, !dbg !704, !tbaa !875
  %329 = and i64 %328, 4294967295, !dbg !704
  %330 = icmp eq i64 %329, 1, !dbg !704
  %331 = and i1 %326, %330, !dbg !704
  %332 = and i1 %322, %331, !dbg !704
  %333 = and i1 %318, %332, !dbg !704
  br i1 %333, label %if_end134, label %assert_fail135, !dbg !704, !prof !18

if_end134:                                        ; preds = %if_then133, %assert_end132
  %334 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !704
  %335 = load i64, ptr %334, align 8, !dbg !704
  %336 = icmp eq i64 %335, 0, !dbg !704
  br i1 %336, label %assert_end138, label %assert_fail137, !dbg !704, !prof !18

assert_fail135:                                   ; preds = %if_then133
  %337 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %337(ptr nonnull @.str.228), !dbg !704
  br label %common.ret

assert_fail137:                                   ; preds = %if_end134
  %338 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %338(ptr nonnull @.str.229), !dbg !704
  br label %common.ret

assert_end138:                                    ; preds = %if_end134
  %339 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !704
  %340 = load i32, ptr %339, align 4, !dbg !704
  %341 = icmp eq i32 %340, 1, !dbg !704
  br i1 %341, label %assert_end140, label %assert_fail139, !dbg !704, !prof !18

assert_fail139:                                   ; preds = %assert_end138
  %342 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %342(ptr nonnull @.str.230), !dbg !704
  br label %common.ret

assert_end140:                                    ; preds = %assert_end138
  %343 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !704
  %344 = load i32, ptr %343, align 4, !dbg !704
  %345 = icmp eq i32 %dev_id, %344, !dbg !704
  br i1 %345, label %assert_end142, label %assert_fail141, !dbg !704, !prof !18

assert_fail141:                                   ; preds = %assert_end140
  %346 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !704, !tbaa !19
  tail call void %346(ptr nonnull @.str.231), !dbg !704
  br label %common.ret

assert_end142:                                    ; preds = %assert_end140
  %347 = tail call fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_compute_(ptr %T_cast143, ptr %p0144, ptr %p1145, ptr %p2146, ptr %p3147, ptr %p4148), !dbg !704
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !879 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !881, metadata !DIExpression()), !dbg !887
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !882, metadata !DIExpression()), !dbg !887
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !883, metadata !DIExpression()), !dbg !887
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !884, metadata !DIExpression()), !dbg !887
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !885, metadata !DIExpression()), !dbg !887
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !886, metadata !DIExpression()), !dbg !887
  %0 = icmp eq i32 %num_args, 6, !dbg !887
  br i1 %0, label %assert_end, label %assert_fail, !dbg !887, !prof !18

common.ret:                                       ; preds = %assert_end142, %assert_fail141, %assert_fail139, %assert_fail137, %assert_fail135, %assert_fail131, %assert_fail129, %assert_fail127, %assert_fail125, %assert_fail123, %assert_fail121, %assert_fail117, %assert_fail115, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail105, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail105 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ -1, %assert_fail115 ], [ -1, %assert_fail117 ], [ -1, %assert_fail121 ], [ -1, %assert_fail123 ], [ -1, %assert_fail125 ], [ -1, %assert_fail127 ], [ -1, %assert_fail129 ], [ -1, %assert_fail131 ], [ -1, %assert_fail135 ], [ -1, %assert_fail137 ], [ -1, %assert_fail139 ], [ -1, %assert_fail141 ], [ %347, %assert_end142 ]
  ret i32 %common.ret.op, !dbg !887

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %1(ptr nonnull @.str.233), !dbg !887
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !887, !tbaa !888
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !887
  %p1.code = load i32, ptr %2, align 4, !dbg !887, !tbaa !899
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !887
  %p2.code = load i32, ptr %3, align 4, !dbg !887, !tbaa !901
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !887
  %p3.code = load i32, ptr %4, align 4, !dbg !887, !tbaa !904
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !887
  %p4.code = load i32, ptr %5, align 4, !dbg !887, !tbaa !906
  %6 = getelementptr inbounds i32, ptr %arg_type_ids, i64 5, !dbg !887
  %T_cast.code = load i32, ptr %6, align 4, !dbg !887, !tbaa !910
  %p0 = load ptr, ptr %args, align 8, !dbg !887
  %7 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !887
  %p1 = load ptr, ptr %7, align 8, !dbg !887
  %8 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !887
  %p2 = load ptr, ptr %8, align 8, !dbg !887
  %9 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !887
  %p3 = load ptr, ptr %9, align 8, !dbg !887
  %10 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !887
  %p4 = load ptr, ptr %10, align 8, !dbg !887
  %11 = getelementptr inbounds %0, ptr %args, i64 5, !dbg !887
  %T_cast = load ptr, ptr %11, align 8, !dbg !887
  %p0144 = load ptr, ptr %p0, align 8, !dbg !887
  call void @llvm.assume(i1 true) [ "align"(ptr %p0144, i64 64) ], !dbg !887
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !887
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape = load ptr, ptr %12, align 8, !dbg !887
  %13 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !887
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.strides = load ptr, ptr %13, align 8, !dbg !887
  %14 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !887
  %dev_id = load i32, ptr %14, align 4, !dbg !887
  %p1145 = load ptr, ptr %p1, align 8, !dbg !887
  call void @llvm.assume(i1 true) [ "align"(ptr %p1145, i64 64) ], !dbg !887
  %15 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !887
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape = load ptr, ptr %15, align 8, !dbg !887
  %16 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !887
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.strides = load ptr, ptr %16, align 8, !dbg !887
  %p2146 = load ptr, ptr %p2, align 8, !dbg !887
  call void @llvm.assume(i1 true) [ "align"(ptr %p2146, i64 64) ], !dbg !887
  %17 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !887
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape = load ptr, ptr %17, align 8, !dbg !887
  %18 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !887
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.strides = load ptr, ptr %18, align 8, !dbg !887
  %p3147 = load ptr, ptr %p3, align 8, !dbg !887
  call void @llvm.assume(i1 true) [ "align"(ptr %p3147, i64 64) ], !dbg !887
  %p4148 = load ptr, ptr %p4, align 8, !dbg !887
  call void @llvm.assume(i1 true) [ "align"(ptr %p4148, i64 64) ], !dbg !887
  %T_cast143 = load ptr, ptr %T_cast, align 8, !dbg !887
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast143, i64 64) ], !dbg !887
  %19 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !887
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape = load ptr, ptr %19, align 8, !dbg !887
  %20 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !887
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.strides = load ptr, ptr %20, align 8, !dbg !887
  switch i32 %p0.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !887

assert_fail7:                                     ; preds = %assert_end
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %21(ptr nonnull @.str.234), !dbg !887
  br label %common.ret

assert_end8:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !887

assert_fail9:                                     ; preds = %assert_end8
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %22(ptr nonnull @.str.235), !dbg !887
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %p2.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !887

assert_fail11:                                    ; preds = %assert_end10
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %23(ptr nonnull @.str.236), !dbg !887
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  switch i32 %p3.code, label %assert_fail13 [
    i32 13, label %assert_end14
    i32 7, label %assert_end14
    i32 4, label %assert_end14
    i32 3, label %assert_end14
  ], !dbg !887

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %24(ptr nonnull @.str.237), !dbg !887
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12, %assert_end12, %assert_end12, %assert_end12
  switch i32 %p4.code, label %assert_fail15 [
    i32 13, label %assert_end16
    i32 7, label %assert_end16
    i32 4, label %assert_end16
    i32 3, label %assert_end16
  ], !dbg !887

assert_fail15:                                    ; preds = %assert_end14
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %25(ptr nonnull @.str.238), !dbg !887
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14, %assert_end14, %assert_end14, %assert_end14
  switch i32 %T_cast.code, label %assert_fail17 [
    i32 13, label %assert_end18
    i32 7, label %assert_end18
    i32 4, label %assert_end18
    i32 3, label %assert_end18
  ], !dbg !887

assert_fail17:                                    ; preds = %assert_end16
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %26(ptr nonnull @.str.239), !dbg !887
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16, %assert_end16, %assert_end16, %assert_end16
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !887
  %28 = load i32, ptr %27, align 4, !dbg !887
  %29 = icmp eq i32 %28, 5, !dbg !887
  br i1 %29, label %assert_end22, label %assert_fail19, !dbg !887, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %30(ptr nonnull @.str.240), !dbg !887
  br label %common.ret

assert_end22:                                     ; preds = %assert_end18
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !887
  %32 = load i16, ptr %31, align 2, !dbg !887
  %33 = icmp eq i16 %32, 1, !dbg !887
  %34 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !887
  %35 = load i8, ptr %34, align 1, !dbg !887
  %36 = icmp eq i8 %35, 8, !dbg !887
  %37 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !887
  %38 = load i8, ptr %37, align 1, !dbg !887
  %39 = icmp eq i8 %38, 0, !dbg !887
  %40 = and i1 %36, %39, !dbg !887
  %41 = and i1 %33, %40, !dbg !887
  br i1 %41, label %assert_end24, label %assert_fail23, !dbg !887, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %42 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %42(ptr nonnull @.str.241), !dbg !887
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %43 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape, align 8, !dbg !887, !tbaa !912
  %44 = and i64 %43, 4294967295, !dbg !887
  %45 = icmp eq i64 %44, 1, !dbg !887
  br i1 %45, label %assert_end26, label %assert_fail25, !dbg !887, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %46(ptr nonnull @.str.242), !dbg !887
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape, i64 1, !dbg !887
  %48 = load i64, ptr %47, align 8, !dbg !887, !tbaa !922
  %49 = and i64 %48, 4294967295, !dbg !887
  %50 = icmp eq i64 %49, 32, !dbg !887
  br i1 %50, label %assert_end28, label %assert_fail27, !dbg !887, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %51(ptr nonnull @.str.243), !dbg !887
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape, i64 2, !dbg !887
  %53 = load i64, ptr %52, align 8, !dbg !887, !tbaa !924
  %54 = and i64 %53, 4294967295, !dbg !887
  %55 = icmp eq i64 %54, 56, !dbg !887
  br i1 %55, label %assert_end30, label %assert_fail29, !dbg !887, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %56(ptr nonnull @.str.244), !dbg !887
  br label %common.ret

assert_end30:                                     ; preds = %assert_end28
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape, i64 3, !dbg !887
  %58 = load i64, ptr %57, align 8, !dbg !887, !tbaa !927
  %59 = and i64 %58, 4294967295, !dbg !887
  %60 = icmp eq i64 %59, 56, !dbg !887
  br i1 %60, label %assert_end32, label %assert_fail31, !dbg !887, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %61(ptr nonnull @.str.245), !dbg !887
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.shape, i64 4, !dbg !887
  %63 = load i64, ptr %62, align 8, !dbg !887, !tbaa !929
  %64 = and i64 %63, 4294967295, !dbg !887
  %65 = icmp eq i64 %64, 4, !dbg !887
  br i1 %65, label %assert_end34, label %assert_fail33, !dbg !887, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %66 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %66(ptr nonnull @.str.246), !dbg !887
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.strides, null, !dbg !887
  br i1 %.not, label %if_end, label %if_then, !dbg !887, !prof !59

if_then:                                          ; preds = %assert_end34
  %67 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.strides, i64 1, !dbg !887
  %68 = load i64, ptr %67, align 8, !dbg !887, !tbaa !933
  %69 = and i64 %68, 4294967295, !dbg !887
  %70 = icmp eq i64 %69, 12544, !dbg !887
  %71 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.strides, i64 2, !dbg !887
  %72 = load i64, ptr %71, align 8, !dbg !887, !tbaa !943
  %73 = and i64 %72, 4294967295, !dbg !887
  %74 = icmp eq i64 %73, 224, !dbg !887
  %75 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.strides, i64 3, !dbg !887
  %76 = load i64, ptr %75, align 8, !dbg !887, !tbaa !946
  %77 = and i64 %76, 4294967295, !dbg !887
  %78 = icmp eq i64 %77, 4, !dbg !887
  %79 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p0.strides, i64 4, !dbg !887
  %80 = load i64, ptr %79, align 8, !dbg !887, !tbaa !948
  %81 = and i64 %80, 4294967295, !dbg !887
  %82 = icmp eq i64 %81, 1, !dbg !887
  %83 = and i1 %78, %82, !dbg !887
  %84 = and i1 %74, %83, !dbg !887
  %85 = and i1 %70, %84, !dbg !887
  br i1 %85, label %if_end, label %assert_fail35, !dbg !887, !prof !18

if_end:                                           ; preds = %if_then, %assert_end34
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !887
  %87 = load i64, ptr %86, align 8, !dbg !887
  %88 = icmp eq i64 %87, 0, !dbg !887
  br i1 %88, label %assert_end38, label %assert_fail37, !dbg !887, !prof !18

assert_fail35:                                    ; preds = %if_then
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %89(ptr nonnull @.str.247), !dbg !887
  br label %common.ret

assert_fail37:                                    ; preds = %if_end
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %90(ptr nonnull @.str.248), !dbg !887
  br label %common.ret

assert_end38:                                     ; preds = %if_end
  %91 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !887
  %92 = load i32, ptr %91, align 4, !dbg !887
  %93 = icmp eq i32 %92, 1, !dbg !887
  br i1 %93, label %assert_end40, label %assert_fail39, !dbg !887, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %94(ptr nonnull @.str.249), !dbg !887
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %95 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !887
  %96 = load i32, ptr %95, align 4, !dbg !887
  %97 = icmp eq i32 %96, 5, !dbg !887
  br i1 %97, label %assert_end44, label %assert_fail41, !dbg !887, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %98(ptr nonnull @.str.250), !dbg !887
  br label %common.ret

assert_end44:                                     ; preds = %assert_end40
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !887
  %100 = load i16, ptr %99, align 2, !dbg !887
  %101 = icmp eq i16 %100, 1, !dbg !887
  %102 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !887
  %103 = load i8, ptr %102, align 1, !dbg !887
  %104 = icmp eq i8 %103, 16, !dbg !887
  %105 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !887
  %106 = load i8, ptr %105, align 1, !dbg !887
  %107 = icmp eq i8 %106, 0, !dbg !887
  %108 = and i1 %104, %107, !dbg !887
  %109 = and i1 %101, %108, !dbg !887
  br i1 %109, label %assert_end46, label %assert_fail45, !dbg !887, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %110 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %110(ptr nonnull @.str.251), !dbg !887
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %111 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape, align 8, !dbg !887, !tbaa !952
  %112 = and i64 %111, 4294967295, !dbg !887
  %113 = icmp eq i64 %112, 1, !dbg !887
  br i1 %113, label %assert_end48, label %assert_fail47, !dbg !887, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %114(ptr nonnull @.str.252), !dbg !887
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape, i64 1, !dbg !887
  %116 = load i64, ptr %115, align 8, !dbg !887, !tbaa !962
  %117 = and i64 %116, 4294967295, !dbg !887
  %118 = icmp eq i64 %117, 32, !dbg !887
  br i1 %118, label %assert_end50, label %assert_fail49, !dbg !887, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %119(ptr nonnull @.str.253), !dbg !887
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape, i64 2, !dbg !887
  %121 = load i64, ptr %120, align 8, !dbg !887, !tbaa !964
  %122 = and i64 %121, 4294967295, !dbg !887
  %123 = icmp eq i64 %122, 1, !dbg !887
  br i1 %123, label %assert_end52, label %assert_fail51, !dbg !887, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %124(ptr nonnull @.str.254), !dbg !887
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape, i64 3, !dbg !887
  %126 = load i64, ptr %125, align 8, !dbg !887, !tbaa !967
  %127 = and i64 %126, 4294967295, !dbg !887
  %128 = icmp eq i64 %127, 1, !dbg !887
  br i1 %128, label %assert_end54, label %assert_fail53, !dbg !887, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %129(ptr nonnull @.str.255), !dbg !887
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.shape, i64 4, !dbg !887
  %131 = load i64, ptr %130, align 8, !dbg !887, !tbaa !969
  %132 = and i64 %131, 4294967295, !dbg !887
  %133 = icmp eq i64 %132, 4, !dbg !887
  br i1 %133, label %assert_end56, label %assert_fail55, !dbg !887, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %134(ptr nonnull @.str.256), !dbg !887
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %.not149 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.strides, null, !dbg !887
  br i1 %.not149, label %if_end58, label %if_then57, !dbg !887, !prof !59

if_then57:                                        ; preds = %assert_end56
  %135 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.strides, i64 1, !dbg !887
  %136 = load i64, ptr %135, align 8, !dbg !887, !tbaa !973
  %137 = and i64 %136, 4294967295, !dbg !887
  %138 = icmp eq i64 %137, 4, !dbg !887
  %139 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p1.strides, i64 4, !dbg !887
  %140 = load i64, ptr %139, align 8, !dbg !887, !tbaa !983
  %141 = and i64 %140, 4294967295, !dbg !887
  %142 = icmp eq i64 %141, 1, !dbg !887
  %143 = and i1 %138, %142, !dbg !887
  br i1 %143, label %if_end58, label %assert_fail59, !dbg !887, !prof !18

if_end58:                                         ; preds = %if_then57, %assert_end56
  %144 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !887
  %145 = load i64, ptr %144, align 8, !dbg !887
  %146 = icmp eq i64 %145, 0, !dbg !887
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !887, !prof !18

assert_fail59:                                    ; preds = %if_then57
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %147(ptr nonnull @.str.257), !dbg !887
  br label %common.ret

assert_fail61:                                    ; preds = %if_end58
  %148 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %148(ptr nonnull @.str.258), !dbg !887
  br label %common.ret

assert_end62:                                     ; preds = %if_end58
  %149 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !887
  %150 = load i32, ptr %149, align 4, !dbg !887
  %151 = icmp eq i32 %150, 1, !dbg !887
  br i1 %151, label %assert_end64, label %assert_fail63, !dbg !887, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %152 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %152(ptr nonnull @.str.259), !dbg !887
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !887
  %154 = load i32, ptr %153, align 4, !dbg !887
  %155 = icmp eq i32 %dev_id, %154, !dbg !887
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !887, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %156(ptr nonnull @.str.260), !dbg !887
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !887
  %158 = load i32, ptr %157, align 4, !dbg !887
  %159 = icmp eq i32 %158, 5, !dbg !887
  br i1 %159, label %assert_end70, label %assert_fail67, !dbg !887, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %160(ptr nonnull @.str.261), !dbg !887
  br label %common.ret

assert_end70:                                     ; preds = %assert_end66
  %161 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !887
  %162 = load i16, ptr %161, align 2, !dbg !887
  %163 = icmp eq i16 %162, 1, !dbg !887
  %164 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !887
  %165 = load i8, ptr %164, align 1, !dbg !887
  %166 = icmp eq i8 %165, 16, !dbg !887
  %167 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !887
  %168 = load i8, ptr %167, align 1, !dbg !887
  %169 = icmp eq i8 %168, 0, !dbg !887
  %170 = and i1 %166, %169, !dbg !887
  %171 = and i1 %163, %170, !dbg !887
  br i1 %171, label %assert_end72, label %assert_fail71, !dbg !887, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %172 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %172(ptr nonnull @.str.262), !dbg !887
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %173 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape, align 8, !dbg !887, !tbaa !987
  %174 = and i64 %173, 4294967295, !dbg !887
  %175 = icmp eq i64 %174, 1, !dbg !887
  br i1 %175, label %assert_end74, label %assert_fail73, !dbg !887, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %176 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %176(ptr nonnull @.str.263), !dbg !887
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %177 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape, i64 1, !dbg !887
  %178 = load i64, ptr %177, align 8, !dbg !887, !tbaa !997
  %179 = and i64 %178, 4294967295, !dbg !887
  %180 = icmp eq i64 %179, 32, !dbg !887
  br i1 %180, label %assert_end76, label %assert_fail75, !dbg !887, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %181(ptr nonnull @.str.264), !dbg !887
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %182 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape, i64 2, !dbg !887
  %183 = load i64, ptr %182, align 8, !dbg !887, !tbaa !999
  %184 = and i64 %183, 4294967295, !dbg !887
  %185 = icmp eq i64 %184, 1, !dbg !887
  br i1 %185, label %assert_end78, label %assert_fail77, !dbg !887, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %186 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %186(ptr nonnull @.str.265), !dbg !887
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %187 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape, i64 3, !dbg !887
  %188 = load i64, ptr %187, align 8, !dbg !887, !tbaa !1002
  %189 = and i64 %188, 4294967295, !dbg !887
  %190 = icmp eq i64 %189, 1, !dbg !887
  br i1 %190, label %assert_end80, label %assert_fail79, !dbg !887, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %191(ptr nonnull @.str.266), !dbg !887
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %192 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.shape, i64 4, !dbg !887
  %193 = load i64, ptr %192, align 8, !dbg !887, !tbaa !1004
  %194 = and i64 %193, 4294967295, !dbg !887
  %195 = icmp eq i64 %194, 4, !dbg !887
  br i1 %195, label %assert_end82, label %assert_fail81, !dbg !887, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %196 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %196(ptr nonnull @.str.267), !dbg !887
  br label %common.ret

assert_end82:                                     ; preds = %assert_end80
  %.not150 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.strides, null, !dbg !887
  br i1 %.not150, label %if_end84, label %if_then83, !dbg !887, !prof !59

if_then83:                                        ; preds = %assert_end82
  %197 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.strides, i64 1, !dbg !887
  %198 = load i64, ptr %197, align 8, !dbg !887, !tbaa !1008
  %199 = and i64 %198, 4294967295, !dbg !887
  %200 = icmp eq i64 %199, 4, !dbg !887
  %201 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.p2.strides, i64 4, !dbg !887
  %202 = load i64, ptr %201, align 8, !dbg !887, !tbaa !1018
  %203 = and i64 %202, 4294967295, !dbg !887
  %204 = icmp eq i64 %203, 1, !dbg !887
  %205 = and i1 %200, %204, !dbg !887
  br i1 %205, label %if_end84, label %assert_fail85, !dbg !887, !prof !18

if_end84:                                         ; preds = %if_then83, %assert_end82
  %206 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !887
  %207 = load i64, ptr %206, align 8, !dbg !887
  %208 = icmp eq i64 %207, 0, !dbg !887
  br i1 %208, label %assert_end88, label %assert_fail87, !dbg !887, !prof !18

assert_fail85:                                    ; preds = %if_then83
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %209(ptr nonnull @.str.268), !dbg !887
  br label %common.ret

assert_fail87:                                    ; preds = %if_end84
  %210 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %210(ptr nonnull @.str.269), !dbg !887
  br label %common.ret

assert_end88:                                     ; preds = %if_end84
  %211 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !887
  %212 = load i32, ptr %211, align 4, !dbg !887
  %213 = icmp eq i32 %212, 1, !dbg !887
  br i1 %213, label %assert_end90, label %assert_fail89, !dbg !887, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %214 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %214(ptr nonnull @.str.270), !dbg !887
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %215 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !887
  %216 = load i32, ptr %215, align 4, !dbg !887
  %217 = icmp eq i32 %dev_id, %216, !dbg !887
  br i1 %217, label %assert_end92, label %assert_fail91, !dbg !887, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %218(ptr nonnull @.str.271), !dbg !887
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %219 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !887
  %220 = load i32, ptr %219, align 4, !dbg !887
  %221 = icmp eq i32 %220, 0, !dbg !887
  br i1 %221, label %assert_end96, label %assert_fail93, !dbg !887, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %222(ptr nonnull @.str.272), !dbg !887
  br label %common.ret

assert_end96:                                     ; preds = %assert_end92
  %223 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !887
  %224 = load i16, ptr %223, align 2, !dbg !887
  %225 = icmp eq i16 %224, 1, !dbg !887
  %226 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !887
  %227 = load i8, ptr %226, align 1, !dbg !887
  %228 = icmp eq i8 %227, 16, !dbg !887
  %229 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !887
  %230 = load i8, ptr %229, align 1, !dbg !887
  %231 = icmp eq i8 %230, 0, !dbg !887
  %232 = and i1 %228, %231, !dbg !887
  %233 = and i1 %225, %232, !dbg !887
  br i1 %233, label %assert_end98, label %assert_fail97, !dbg !887, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %234 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %234(ptr nonnull @.str.273), !dbg !887
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %235 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !887
  %236 = load i64, ptr %235, align 8, !dbg !887
  %237 = icmp eq i64 %236, 0, !dbg !887
  br i1 %237, label %assert_end100, label %assert_fail99, !dbg !887, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %238 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %238(ptr nonnull @.str.274), !dbg !887
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %239 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !887
  %240 = load i32, ptr %239, align 4, !dbg !887
  %241 = icmp eq i32 %240, 1, !dbg !887
  br i1 %241, label %assert_end102, label %assert_fail101, !dbg !887, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %242(ptr nonnull @.str.275), !dbg !887
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %243 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !887
  %244 = load i32, ptr %243, align 4, !dbg !887
  %245 = icmp eq i32 %dev_id, %244, !dbg !887
  br i1 %245, label %assert_end104, label %assert_fail103, !dbg !887, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %246(ptr nonnull @.str.276), !dbg !887
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %247 = getelementptr inbounds %1, ptr %p4, i64 0, i32 2, !dbg !887
  %248 = load i32, ptr %247, align 4, !dbg !887
  %249 = icmp eq i32 %248, 0, !dbg !887
  br i1 %249, label %assert_end108, label %assert_fail105, !dbg !887, !prof !18

assert_fail105:                                   ; preds = %assert_end104
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %250(ptr nonnull @.str.277), !dbg !887
  br label %common.ret

assert_end108:                                    ; preds = %assert_end104
  %251 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 2, !dbg !887
  %252 = load i16, ptr %251, align 2, !dbg !887
  %253 = icmp eq i16 %252, 1, !dbg !887
  %254 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 1, !dbg !887
  %255 = load i8, ptr %254, align 1, !dbg !887
  %256 = icmp eq i8 %255, 16, !dbg !887
  %257 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 0, !dbg !887
  %258 = load i8, ptr %257, align 1, !dbg !887
  %259 = icmp eq i8 %258, 0, !dbg !887
  %260 = and i1 %256, %259, !dbg !887
  %261 = and i1 %253, %260, !dbg !887
  br i1 %261, label %assert_end110, label %assert_fail109, !dbg !887, !prof !18

assert_fail109:                                   ; preds = %assert_end108
  %262 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %262(ptr nonnull @.str.278), !dbg !887
  br label %common.ret

assert_end110:                                    ; preds = %assert_end108
  %263 = getelementptr inbounds %1, ptr %p4, i64 0, i32 6, !dbg !887
  %264 = load i64, ptr %263, align 8, !dbg !887
  %265 = icmp eq i64 %264, 0, !dbg !887
  br i1 %265, label %assert_end112, label %assert_fail111, !dbg !887, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %266(ptr nonnull @.str.279), !dbg !887
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %267 = getelementptr inbounds %1, ptr %p4, i64 0, i32 1, i32 0, !dbg !887
  %268 = load i32, ptr %267, align 4, !dbg !887
  %269 = icmp eq i32 %268, 1, !dbg !887
  br i1 %269, label %assert_end114, label %assert_fail113, !dbg !887, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %270 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %270(ptr nonnull @.str.280), !dbg !887
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %271 = getelementptr inbounds %1, ptr %p4, i64 0, i32 1, i32 1, !dbg !887
  %272 = load i32, ptr %271, align 4, !dbg !887
  %273 = icmp eq i32 %dev_id, %272, !dbg !887
  br i1 %273, label %assert_end116, label %assert_fail115, !dbg !887, !prof !18

assert_fail115:                                   ; preds = %assert_end114
  %274 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %274(ptr nonnull @.str.281), !dbg !887
  br label %common.ret

assert_end116:                                    ; preds = %assert_end114
  %275 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !887
  %276 = load i32, ptr %275, align 4, !dbg !887
  %277 = icmp eq i32 %276, 5, !dbg !887
  br i1 %277, label %assert_end120, label %assert_fail117, !dbg !887, !prof !18

assert_fail117:                                   ; preds = %assert_end116
  %278 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %278(ptr nonnull @.str.282), !dbg !887
  br label %common.ret

assert_end120:                                    ; preds = %assert_end116
  %279 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !887
  %280 = load i16, ptr %279, align 2, !dbg !887
  %281 = icmp eq i16 %280, 1, !dbg !887
  %282 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !887
  %283 = load i8, ptr %282, align 1, !dbg !887
  %284 = icmp eq i8 %283, 8, !dbg !887
  %285 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !887
  %286 = load i8, ptr %285, align 1, !dbg !887
  %287 = icmp eq i8 %286, 0, !dbg !887
  %288 = and i1 %284, %287, !dbg !887
  %289 = and i1 %281, %288, !dbg !887
  br i1 %289, label %assert_end122, label %assert_fail121, !dbg !887, !prof !18

assert_fail121:                                   ; preds = %assert_end120
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %290(ptr nonnull @.str.283), !dbg !887
  br label %common.ret

assert_end122:                                    ; preds = %assert_end120
  %291 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape, align 8, !dbg !887, !tbaa !1022
  %292 = and i64 %291, 4294967295, !dbg !887
  %293 = icmp eq i64 %292, 1, !dbg !887
  br i1 %293, label %assert_end124, label %assert_fail123, !dbg !887, !prof !18

assert_fail123:                                   ; preds = %assert_end122
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %294(ptr nonnull @.str.284), !dbg !887
  br label %common.ret

assert_end124:                                    ; preds = %assert_end122
  %295 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape, i64 1, !dbg !887
  %296 = load i64, ptr %295, align 8, !dbg !887, !tbaa !1032
  %297 = and i64 %296, 4294967295, !dbg !887
  %298 = icmp eq i64 %297, 32, !dbg !887
  br i1 %298, label %assert_end126, label %assert_fail125, !dbg !887, !prof !18

assert_fail125:                                   ; preds = %assert_end124
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %299(ptr nonnull @.str.285), !dbg !887
  br label %common.ret

assert_end126:                                    ; preds = %assert_end124
  %300 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape, i64 2, !dbg !887
  %301 = load i64, ptr %300, align 8, !dbg !887, !tbaa !1034
  %302 = and i64 %301, 4294967295, !dbg !887
  %303 = icmp eq i64 %302, 56, !dbg !887
  br i1 %303, label %assert_end128, label %assert_fail127, !dbg !887, !prof !18

assert_fail127:                                   ; preds = %assert_end126
  %304 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %304(ptr nonnull @.str.286), !dbg !887
  br label %common.ret

assert_end128:                                    ; preds = %assert_end126
  %305 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape, i64 3, !dbg !887
  %306 = load i64, ptr %305, align 8, !dbg !887, !tbaa !1037
  %307 = and i64 %306, 4294967295, !dbg !887
  %308 = icmp eq i64 %307, 56, !dbg !887
  br i1 %308, label %assert_end130, label %assert_fail129, !dbg !887, !prof !18

assert_fail129:                                   ; preds = %assert_end128
  %309 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %309(ptr nonnull @.str.287), !dbg !887
  br label %common.ret

assert_end130:                                    ; preds = %assert_end128
  %310 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.shape, i64 4, !dbg !887
  %311 = load i64, ptr %310, align 8, !dbg !887, !tbaa !1039
  %312 = and i64 %311, 4294967295, !dbg !887
  %313 = icmp eq i64 %312, 4, !dbg !887
  br i1 %313, label %assert_end132, label %assert_fail131, !dbg !887, !prof !18

assert_fail131:                                   ; preds = %assert_end130
  %314 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %314(ptr nonnull @.str.288), !dbg !887
  br label %common.ret

assert_end132:                                    ; preds = %assert_end130
  %.not151 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.strides, null, !dbg !887
  br i1 %.not151, label %if_end134, label %if_then133, !dbg !887, !prof !59

if_then133:                                       ; preds = %assert_end132
  %315 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.strides, i64 1, !dbg !887
  %316 = load i64, ptr %315, align 8, !dbg !887, !tbaa !1043
  %317 = and i64 %316, 4294967295, !dbg !887
  %318 = icmp eq i64 %317, 12544, !dbg !887
  %319 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.strides, i64 2, !dbg !887
  %320 = load i64, ptr %319, align 8, !dbg !887, !tbaa !1053
  %321 = and i64 %320, 4294967295, !dbg !887
  %322 = icmp eq i64 %321, 224, !dbg !887
  %323 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.strides, i64 3, !dbg !887
  %324 = load i64, ptr %323, align 8, !dbg !887, !tbaa !1056
  %325 = and i64 %324, 4294967295, !dbg !887
  %326 = icmp eq i64 %325, 4, !dbg !887
  %327 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1.T_cast.strides, i64 4, !dbg !887
  %328 = load i64, ptr %327, align 8, !dbg !887, !tbaa !1058
  %329 = and i64 %328, 4294967295, !dbg !887
  %330 = icmp eq i64 %329, 1, !dbg !887
  %331 = and i1 %326, %330, !dbg !887
  %332 = and i1 %322, %331, !dbg !887
  %333 = and i1 %318, %332, !dbg !887
  br i1 %333, label %if_end134, label %assert_fail135, !dbg !887, !prof !18

if_end134:                                        ; preds = %if_then133, %assert_end132
  %334 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !887
  %335 = load i64, ptr %334, align 8, !dbg !887
  %336 = icmp eq i64 %335, 0, !dbg !887
  br i1 %336, label %assert_end138, label %assert_fail137, !dbg !887, !prof !18

assert_fail135:                                   ; preds = %if_then133
  %337 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %337(ptr nonnull @.str.289), !dbg !887
  br label %common.ret

assert_fail137:                                   ; preds = %if_end134
  %338 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %338(ptr nonnull @.str.290), !dbg !887
  br label %common.ret

assert_end138:                                    ; preds = %if_end134
  %339 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !887
  %340 = load i32, ptr %339, align 4, !dbg !887
  %341 = icmp eq i32 %340, 1, !dbg !887
  br i1 %341, label %assert_end140, label %assert_fail139, !dbg !887, !prof !18

assert_fail139:                                   ; preds = %assert_end138
  %342 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %342(ptr nonnull @.str.291), !dbg !887
  br label %common.ret

assert_end140:                                    ; preds = %assert_end138
  %343 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !887
  %344 = load i32, ptr %343, align 4, !dbg !887
  %345 = icmp eq i32 %dev_id, %344, !dbg !887
  br i1 %345, label %assert_end142, label %assert_fail141, !dbg !887, !prof !18

assert_fail141:                                   ; preds = %assert_end140
  %346 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !887, !tbaa !19
  tail call void %346(ptr nonnull @.str.292), !dbg !887
  br label %common.ret

assert_end142:                                    ; preds = %assert_end140
  %347 = tail call fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_compute_(ptr %T_cast143, ptr %p0144, ptr %p1145, ptr %p2146, ptr %p3147, ptr %p4148), !dbg !887
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1062 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1064, metadata !DIExpression()), !dbg !1070
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1065, metadata !DIExpression()), !dbg !1070
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1066, metadata !DIExpression()), !dbg !1070
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1067, metadata !DIExpression()), !dbg !1070
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1068, metadata !DIExpression()), !dbg !1070
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1069, metadata !DIExpression()), !dbg !1070
  %0 = icmp eq i32 %num_args, 6, !dbg !1070
  br i1 %0, label %assert_end, label %assert_fail, !dbg !1070, !prof !18

common.ret:                                       ; preds = %assert_end142, %assert_fail141, %assert_fail139, %assert_fail137, %assert_fail135, %assert_fail131, %assert_fail129, %assert_fail127, %assert_fail125, %assert_fail123, %assert_fail121, %assert_fail117, %assert_fail115, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail105, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail105 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ -1, %assert_fail115 ], [ -1, %assert_fail117 ], [ -1, %assert_fail121 ], [ -1, %assert_fail123 ], [ -1, %assert_fail125 ], [ -1, %assert_fail127 ], [ -1, %assert_fail129 ], [ -1, %assert_fail131 ], [ -1, %assert_fail135 ], [ -1, %assert_fail137 ], [ -1, %assert_fail139 ], [ -1, %assert_fail141 ], [ %347, %assert_end142 ]
  ret i32 %common.ret.op, !dbg !1070

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %1(ptr nonnull @.str.294), !dbg !1070
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1070, !tbaa !1071
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1070
  %p1.code = load i32, ptr %2, align 4, !dbg !1070, !tbaa !1082
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !1070
  %p2.code = load i32, ptr %3, align 4, !dbg !1070, !tbaa !1084
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !1070
  %p3.code = load i32, ptr %4, align 4, !dbg !1070, !tbaa !1087
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !1070
  %p4.code = load i32, ptr %5, align 4, !dbg !1070, !tbaa !1089
  %6 = getelementptr inbounds i32, ptr %arg_type_ids, i64 5, !dbg !1070
  %T_cast.code = load i32, ptr %6, align 4, !dbg !1070, !tbaa !1093
  %p0 = load ptr, ptr %args, align 8, !dbg !1070
  %7 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1070
  %p1 = load ptr, ptr %7, align 8, !dbg !1070
  %8 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !1070
  %p2 = load ptr, ptr %8, align 8, !dbg !1070
  %9 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !1070
  %p3 = load ptr, ptr %9, align 8, !dbg !1070
  %10 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !1070
  %p4 = load ptr, ptr %10, align 8, !dbg !1070
  %11 = getelementptr inbounds %0, ptr %args, i64 5, !dbg !1070
  %T_cast = load ptr, ptr %11, align 8, !dbg !1070
  %p0144 = load ptr, ptr %p0, align 8, !dbg !1070
  call void @llvm.assume(i1 true) [ "align"(ptr %p0144, i64 64) ], !dbg !1070
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1070
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape = load ptr, ptr %12, align 8, !dbg !1070
  %13 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1070
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.strides = load ptr, ptr %13, align 8, !dbg !1070
  %14 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1070
  %dev_id = load i32, ptr %14, align 4, !dbg !1070
  %p1145 = load ptr, ptr %p1, align 8, !dbg !1070
  call void @llvm.assume(i1 true) [ "align"(ptr %p1145, i64 64) ], !dbg !1070
  %15 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !1070
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape = load ptr, ptr %15, align 8, !dbg !1070
  %16 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !1070
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.strides = load ptr, ptr %16, align 8, !dbg !1070
  %p2146 = load ptr, ptr %p2, align 8, !dbg !1070
  call void @llvm.assume(i1 true) [ "align"(ptr %p2146, i64 64) ], !dbg !1070
  %17 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !1070
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape = load ptr, ptr %17, align 8, !dbg !1070
  %18 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !1070
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.strides = load ptr, ptr %18, align 8, !dbg !1070
  %p3147 = load ptr, ptr %p3, align 8, !dbg !1070
  call void @llvm.assume(i1 true) [ "align"(ptr %p3147, i64 64) ], !dbg !1070
  %p4148 = load ptr, ptr %p4, align 8, !dbg !1070
  call void @llvm.assume(i1 true) [ "align"(ptr %p4148, i64 64) ], !dbg !1070
  %T_cast143 = load ptr, ptr %T_cast, align 8, !dbg !1070
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast143, i64 64) ], !dbg !1070
  %19 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !1070
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape = load ptr, ptr %19, align 8, !dbg !1070
  %20 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !1070
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.strides = load ptr, ptr %20, align 8, !dbg !1070
  switch i32 %p0.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !1070

assert_fail7:                                     ; preds = %assert_end
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %21(ptr nonnull @.str.295), !dbg !1070
  br label %common.ret

assert_end8:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !1070

assert_fail9:                                     ; preds = %assert_end8
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %22(ptr nonnull @.str.296), !dbg !1070
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %p2.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !1070

assert_fail11:                                    ; preds = %assert_end10
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %23(ptr nonnull @.str.297), !dbg !1070
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  switch i32 %p3.code, label %assert_fail13 [
    i32 13, label %assert_end14
    i32 7, label %assert_end14
    i32 4, label %assert_end14
    i32 3, label %assert_end14
  ], !dbg !1070

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %24(ptr nonnull @.str.298), !dbg !1070
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12, %assert_end12, %assert_end12, %assert_end12
  switch i32 %p4.code, label %assert_fail15 [
    i32 13, label %assert_end16
    i32 7, label %assert_end16
    i32 4, label %assert_end16
    i32 3, label %assert_end16
  ], !dbg !1070

assert_fail15:                                    ; preds = %assert_end14
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %25(ptr nonnull @.str.299), !dbg !1070
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14, %assert_end14, %assert_end14, %assert_end14
  switch i32 %T_cast.code, label %assert_fail17 [
    i32 13, label %assert_end18
    i32 7, label %assert_end18
    i32 4, label %assert_end18
    i32 3, label %assert_end18
  ], !dbg !1070

assert_fail17:                                    ; preds = %assert_end16
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %26(ptr nonnull @.str.300), !dbg !1070
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16, %assert_end16, %assert_end16, %assert_end16
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1070
  %28 = load i32, ptr %27, align 4, !dbg !1070
  %29 = icmp eq i32 %28, 5, !dbg !1070
  br i1 %29, label %assert_end22, label %assert_fail19, !dbg !1070, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %30(ptr nonnull @.str.301), !dbg !1070
  br label %common.ret

assert_end22:                                     ; preds = %assert_end18
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1070
  %32 = load i16, ptr %31, align 2, !dbg !1070
  %33 = icmp eq i16 %32, 1, !dbg !1070
  %34 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1070
  %35 = load i8, ptr %34, align 1, !dbg !1070
  %36 = icmp eq i8 %35, 8, !dbg !1070
  %37 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1070
  %38 = load i8, ptr %37, align 1, !dbg !1070
  %39 = icmp eq i8 %38, 0, !dbg !1070
  %40 = and i1 %36, %39, !dbg !1070
  %41 = and i1 %33, %40, !dbg !1070
  br i1 %41, label %assert_end24, label %assert_fail23, !dbg !1070, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %42 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %42(ptr nonnull @.str.302), !dbg !1070
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %43 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape, align 8, !dbg !1070, !tbaa !1095
  %44 = and i64 %43, 4294967295, !dbg !1070
  %45 = icmp eq i64 %44, 1, !dbg !1070
  br i1 %45, label %assert_end26, label %assert_fail25, !dbg !1070, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %46(ptr nonnull @.str.303), !dbg !1070
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape, i64 1, !dbg !1070
  %48 = load i64, ptr %47, align 8, !dbg !1070, !tbaa !1105
  %49 = and i64 %48, 4294967295, !dbg !1070
  %50 = icmp eq i64 %49, 32, !dbg !1070
  br i1 %50, label %assert_end28, label %assert_fail27, !dbg !1070, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %51(ptr nonnull @.str.304), !dbg !1070
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape, i64 2, !dbg !1070
  %53 = load i64, ptr %52, align 8, !dbg !1070, !tbaa !1107
  %54 = and i64 %53, 4294967295, !dbg !1070
  %55 = icmp eq i64 %54, 28, !dbg !1070
  br i1 %55, label %assert_end30, label %assert_fail29, !dbg !1070, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %56(ptr nonnull @.str.305), !dbg !1070
  br label %common.ret

assert_end30:                                     ; preds = %assert_end28
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape, i64 3, !dbg !1070
  %58 = load i64, ptr %57, align 8, !dbg !1070, !tbaa !1110
  %59 = and i64 %58, 4294967295, !dbg !1070
  %60 = icmp eq i64 %59, 28, !dbg !1070
  br i1 %60, label %assert_end32, label %assert_fail31, !dbg !1070, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %61(ptr nonnull @.str.306), !dbg !1070
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.shape, i64 4, !dbg !1070
  %63 = load i64, ptr %62, align 8, !dbg !1070, !tbaa !1112
  %64 = and i64 %63, 4294967295, !dbg !1070
  %65 = icmp eq i64 %64, 4, !dbg !1070
  br i1 %65, label %assert_end34, label %assert_fail33, !dbg !1070, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %66 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %66(ptr nonnull @.str.307), !dbg !1070
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.strides, null, !dbg !1070
  br i1 %.not, label %if_end, label %if_then, !dbg !1070, !prof !59

if_then:                                          ; preds = %assert_end34
  %67 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.strides, i64 1, !dbg !1070
  %68 = load i64, ptr %67, align 8, !dbg !1070, !tbaa !1116
  %69 = and i64 %68, 4294967295, !dbg !1070
  %70 = icmp eq i64 %69, 3136, !dbg !1070
  %71 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.strides, i64 2, !dbg !1070
  %72 = load i64, ptr %71, align 8, !dbg !1070, !tbaa !1126
  %73 = and i64 %72, 4294967295, !dbg !1070
  %74 = icmp eq i64 %73, 112, !dbg !1070
  %75 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.strides, i64 3, !dbg !1070
  %76 = load i64, ptr %75, align 8, !dbg !1070, !tbaa !1129
  %77 = and i64 %76, 4294967295, !dbg !1070
  %78 = icmp eq i64 %77, 4, !dbg !1070
  %79 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p0.strides, i64 4, !dbg !1070
  %80 = load i64, ptr %79, align 8, !dbg !1070, !tbaa !1131
  %81 = and i64 %80, 4294967295, !dbg !1070
  %82 = icmp eq i64 %81, 1, !dbg !1070
  %83 = and i1 %78, %82, !dbg !1070
  %84 = and i1 %74, %83, !dbg !1070
  %85 = and i1 %70, %84, !dbg !1070
  br i1 %85, label %if_end, label %assert_fail35, !dbg !1070, !prof !18

if_end:                                           ; preds = %if_then, %assert_end34
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1070
  %87 = load i64, ptr %86, align 8, !dbg !1070
  %88 = icmp eq i64 %87, 0, !dbg !1070
  br i1 %88, label %assert_end38, label %assert_fail37, !dbg !1070, !prof !18

assert_fail35:                                    ; preds = %if_then
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %89(ptr nonnull @.str.308), !dbg !1070
  br label %common.ret

assert_fail37:                                    ; preds = %if_end
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %90(ptr nonnull @.str.309), !dbg !1070
  br label %common.ret

assert_end38:                                     ; preds = %if_end
  %91 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1070
  %92 = load i32, ptr %91, align 4, !dbg !1070
  %93 = icmp eq i32 %92, 1, !dbg !1070
  br i1 %93, label %assert_end40, label %assert_fail39, !dbg !1070, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %94(ptr nonnull @.str.310), !dbg !1070
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %95 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !1070
  %96 = load i32, ptr %95, align 4, !dbg !1070
  %97 = icmp eq i32 %96, 5, !dbg !1070
  br i1 %97, label %assert_end44, label %assert_fail41, !dbg !1070, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %98(ptr nonnull @.str.311), !dbg !1070
  br label %common.ret

assert_end44:                                     ; preds = %assert_end40
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !1070
  %100 = load i16, ptr %99, align 2, !dbg !1070
  %101 = icmp eq i16 %100, 1, !dbg !1070
  %102 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !1070
  %103 = load i8, ptr %102, align 1, !dbg !1070
  %104 = icmp eq i8 %103, 16, !dbg !1070
  %105 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !1070
  %106 = load i8, ptr %105, align 1, !dbg !1070
  %107 = icmp eq i8 %106, 0, !dbg !1070
  %108 = and i1 %104, %107, !dbg !1070
  %109 = and i1 %101, %108, !dbg !1070
  br i1 %109, label %assert_end46, label %assert_fail45, !dbg !1070, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %110 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %110(ptr nonnull @.str.312), !dbg !1070
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %111 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape, align 8, !dbg !1070, !tbaa !1135
  %112 = and i64 %111, 4294967295, !dbg !1070
  %113 = icmp eq i64 %112, 1, !dbg !1070
  br i1 %113, label %assert_end48, label %assert_fail47, !dbg !1070, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %114(ptr nonnull @.str.313), !dbg !1070
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape, i64 1, !dbg !1070
  %116 = load i64, ptr %115, align 8, !dbg !1070, !tbaa !1145
  %117 = and i64 %116, 4294967295, !dbg !1070
  %118 = icmp eq i64 %117, 32, !dbg !1070
  br i1 %118, label %assert_end50, label %assert_fail49, !dbg !1070, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %119(ptr nonnull @.str.314), !dbg !1070
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape, i64 2, !dbg !1070
  %121 = load i64, ptr %120, align 8, !dbg !1070, !tbaa !1147
  %122 = and i64 %121, 4294967295, !dbg !1070
  %123 = icmp eq i64 %122, 1, !dbg !1070
  br i1 %123, label %assert_end52, label %assert_fail51, !dbg !1070, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %124(ptr nonnull @.str.315), !dbg !1070
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape, i64 3, !dbg !1070
  %126 = load i64, ptr %125, align 8, !dbg !1070, !tbaa !1150
  %127 = and i64 %126, 4294967295, !dbg !1070
  %128 = icmp eq i64 %127, 1, !dbg !1070
  br i1 %128, label %assert_end54, label %assert_fail53, !dbg !1070, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %129(ptr nonnull @.str.316), !dbg !1070
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.shape, i64 4, !dbg !1070
  %131 = load i64, ptr %130, align 8, !dbg !1070, !tbaa !1152
  %132 = and i64 %131, 4294967295, !dbg !1070
  %133 = icmp eq i64 %132, 4, !dbg !1070
  br i1 %133, label %assert_end56, label %assert_fail55, !dbg !1070, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %134(ptr nonnull @.str.317), !dbg !1070
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %.not149 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.strides, null, !dbg !1070
  br i1 %.not149, label %if_end58, label %if_then57, !dbg !1070, !prof !59

if_then57:                                        ; preds = %assert_end56
  %135 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.strides, i64 1, !dbg !1070
  %136 = load i64, ptr %135, align 8, !dbg !1070, !tbaa !1156
  %137 = and i64 %136, 4294967295, !dbg !1070
  %138 = icmp eq i64 %137, 4, !dbg !1070
  %139 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p1.strides, i64 4, !dbg !1070
  %140 = load i64, ptr %139, align 8, !dbg !1070, !tbaa !1166
  %141 = and i64 %140, 4294967295, !dbg !1070
  %142 = icmp eq i64 %141, 1, !dbg !1070
  %143 = and i1 %138, %142, !dbg !1070
  br i1 %143, label %if_end58, label %assert_fail59, !dbg !1070, !prof !18

if_end58:                                         ; preds = %if_then57, %assert_end56
  %144 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !1070
  %145 = load i64, ptr %144, align 8, !dbg !1070
  %146 = icmp eq i64 %145, 0, !dbg !1070
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !1070, !prof !18

assert_fail59:                                    ; preds = %if_then57
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %147(ptr nonnull @.str.318), !dbg !1070
  br label %common.ret

assert_fail61:                                    ; preds = %if_end58
  %148 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %148(ptr nonnull @.str.319), !dbg !1070
  br label %common.ret

assert_end62:                                     ; preds = %if_end58
  %149 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !1070
  %150 = load i32, ptr %149, align 4, !dbg !1070
  %151 = icmp eq i32 %150, 1, !dbg !1070
  br i1 %151, label %assert_end64, label %assert_fail63, !dbg !1070, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %152 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %152(ptr nonnull @.str.320), !dbg !1070
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !1070
  %154 = load i32, ptr %153, align 4, !dbg !1070
  %155 = icmp eq i32 %dev_id, %154, !dbg !1070
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !1070, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %156(ptr nonnull @.str.321), !dbg !1070
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !1070
  %158 = load i32, ptr %157, align 4, !dbg !1070
  %159 = icmp eq i32 %158, 5, !dbg !1070
  br i1 %159, label %assert_end70, label %assert_fail67, !dbg !1070, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %160(ptr nonnull @.str.322), !dbg !1070
  br label %common.ret

assert_end70:                                     ; preds = %assert_end66
  %161 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !1070
  %162 = load i16, ptr %161, align 2, !dbg !1070
  %163 = icmp eq i16 %162, 1, !dbg !1070
  %164 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !1070
  %165 = load i8, ptr %164, align 1, !dbg !1070
  %166 = icmp eq i8 %165, 16, !dbg !1070
  %167 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !1070
  %168 = load i8, ptr %167, align 1, !dbg !1070
  %169 = icmp eq i8 %168, 0, !dbg !1070
  %170 = and i1 %166, %169, !dbg !1070
  %171 = and i1 %163, %170, !dbg !1070
  br i1 %171, label %assert_end72, label %assert_fail71, !dbg !1070, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %172 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %172(ptr nonnull @.str.323), !dbg !1070
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %173 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape, align 8, !dbg !1070, !tbaa !1170
  %174 = and i64 %173, 4294967295, !dbg !1070
  %175 = icmp eq i64 %174, 1, !dbg !1070
  br i1 %175, label %assert_end74, label %assert_fail73, !dbg !1070, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %176 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %176(ptr nonnull @.str.324), !dbg !1070
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %177 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape, i64 1, !dbg !1070
  %178 = load i64, ptr %177, align 8, !dbg !1070, !tbaa !1180
  %179 = and i64 %178, 4294967295, !dbg !1070
  %180 = icmp eq i64 %179, 32, !dbg !1070
  br i1 %180, label %assert_end76, label %assert_fail75, !dbg !1070, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %181(ptr nonnull @.str.325), !dbg !1070
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %182 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape, i64 2, !dbg !1070
  %183 = load i64, ptr %182, align 8, !dbg !1070, !tbaa !1182
  %184 = and i64 %183, 4294967295, !dbg !1070
  %185 = icmp eq i64 %184, 1, !dbg !1070
  br i1 %185, label %assert_end78, label %assert_fail77, !dbg !1070, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %186 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %186(ptr nonnull @.str.326), !dbg !1070
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %187 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape, i64 3, !dbg !1070
  %188 = load i64, ptr %187, align 8, !dbg !1070, !tbaa !1185
  %189 = and i64 %188, 4294967295, !dbg !1070
  %190 = icmp eq i64 %189, 1, !dbg !1070
  br i1 %190, label %assert_end80, label %assert_fail79, !dbg !1070, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %191(ptr nonnull @.str.327), !dbg !1070
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %192 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.shape, i64 4, !dbg !1070
  %193 = load i64, ptr %192, align 8, !dbg !1070, !tbaa !1187
  %194 = and i64 %193, 4294967295, !dbg !1070
  %195 = icmp eq i64 %194, 4, !dbg !1070
  br i1 %195, label %assert_end82, label %assert_fail81, !dbg !1070, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %196 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %196(ptr nonnull @.str.328), !dbg !1070
  br label %common.ret

assert_end82:                                     ; preds = %assert_end80
  %.not150 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.strides, null, !dbg !1070
  br i1 %.not150, label %if_end84, label %if_then83, !dbg !1070, !prof !59

if_then83:                                        ; preds = %assert_end82
  %197 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.strides, i64 1, !dbg !1070
  %198 = load i64, ptr %197, align 8, !dbg !1070, !tbaa !1191
  %199 = and i64 %198, 4294967295, !dbg !1070
  %200 = icmp eq i64 %199, 4, !dbg !1070
  %201 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.p2.strides, i64 4, !dbg !1070
  %202 = load i64, ptr %201, align 8, !dbg !1070, !tbaa !1201
  %203 = and i64 %202, 4294967295, !dbg !1070
  %204 = icmp eq i64 %203, 1, !dbg !1070
  %205 = and i1 %200, %204, !dbg !1070
  br i1 %205, label %if_end84, label %assert_fail85, !dbg !1070, !prof !18

if_end84:                                         ; preds = %if_then83, %assert_end82
  %206 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !1070
  %207 = load i64, ptr %206, align 8, !dbg !1070
  %208 = icmp eq i64 %207, 0, !dbg !1070
  br i1 %208, label %assert_end88, label %assert_fail87, !dbg !1070, !prof !18

assert_fail85:                                    ; preds = %if_then83
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %209(ptr nonnull @.str.329), !dbg !1070
  br label %common.ret

assert_fail87:                                    ; preds = %if_end84
  %210 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %210(ptr nonnull @.str.330), !dbg !1070
  br label %common.ret

assert_end88:                                     ; preds = %if_end84
  %211 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !1070
  %212 = load i32, ptr %211, align 4, !dbg !1070
  %213 = icmp eq i32 %212, 1, !dbg !1070
  br i1 %213, label %assert_end90, label %assert_fail89, !dbg !1070, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %214 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %214(ptr nonnull @.str.331), !dbg !1070
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %215 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !1070
  %216 = load i32, ptr %215, align 4, !dbg !1070
  %217 = icmp eq i32 %dev_id, %216, !dbg !1070
  br i1 %217, label %assert_end92, label %assert_fail91, !dbg !1070, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %218(ptr nonnull @.str.332), !dbg !1070
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %219 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !1070
  %220 = load i32, ptr %219, align 4, !dbg !1070
  %221 = icmp eq i32 %220, 0, !dbg !1070
  br i1 %221, label %assert_end96, label %assert_fail93, !dbg !1070, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %222(ptr nonnull @.str.333), !dbg !1070
  br label %common.ret

assert_end96:                                     ; preds = %assert_end92
  %223 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !1070
  %224 = load i16, ptr %223, align 2, !dbg !1070
  %225 = icmp eq i16 %224, 1, !dbg !1070
  %226 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !1070
  %227 = load i8, ptr %226, align 1, !dbg !1070
  %228 = icmp eq i8 %227, 16, !dbg !1070
  %229 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !1070
  %230 = load i8, ptr %229, align 1, !dbg !1070
  %231 = icmp eq i8 %230, 0, !dbg !1070
  %232 = and i1 %228, %231, !dbg !1070
  %233 = and i1 %225, %232, !dbg !1070
  br i1 %233, label %assert_end98, label %assert_fail97, !dbg !1070, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %234 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %234(ptr nonnull @.str.334), !dbg !1070
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %235 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !1070
  %236 = load i64, ptr %235, align 8, !dbg !1070
  %237 = icmp eq i64 %236, 0, !dbg !1070
  br i1 %237, label %assert_end100, label %assert_fail99, !dbg !1070, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %238 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %238(ptr nonnull @.str.335), !dbg !1070
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %239 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !1070
  %240 = load i32, ptr %239, align 4, !dbg !1070
  %241 = icmp eq i32 %240, 1, !dbg !1070
  br i1 %241, label %assert_end102, label %assert_fail101, !dbg !1070, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %242(ptr nonnull @.str.336), !dbg !1070
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %243 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !1070
  %244 = load i32, ptr %243, align 4, !dbg !1070
  %245 = icmp eq i32 %dev_id, %244, !dbg !1070
  br i1 %245, label %assert_end104, label %assert_fail103, !dbg !1070, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %246(ptr nonnull @.str.337), !dbg !1070
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %247 = getelementptr inbounds %1, ptr %p4, i64 0, i32 2, !dbg !1070
  %248 = load i32, ptr %247, align 4, !dbg !1070
  %249 = icmp eq i32 %248, 0, !dbg !1070
  br i1 %249, label %assert_end108, label %assert_fail105, !dbg !1070, !prof !18

assert_fail105:                                   ; preds = %assert_end104
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %250(ptr nonnull @.str.338), !dbg !1070
  br label %common.ret

assert_end108:                                    ; preds = %assert_end104
  %251 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 2, !dbg !1070
  %252 = load i16, ptr %251, align 2, !dbg !1070
  %253 = icmp eq i16 %252, 1, !dbg !1070
  %254 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 1, !dbg !1070
  %255 = load i8, ptr %254, align 1, !dbg !1070
  %256 = icmp eq i8 %255, 16, !dbg !1070
  %257 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 0, !dbg !1070
  %258 = load i8, ptr %257, align 1, !dbg !1070
  %259 = icmp eq i8 %258, 0, !dbg !1070
  %260 = and i1 %256, %259, !dbg !1070
  %261 = and i1 %253, %260, !dbg !1070
  br i1 %261, label %assert_end110, label %assert_fail109, !dbg !1070, !prof !18

assert_fail109:                                   ; preds = %assert_end108
  %262 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %262(ptr nonnull @.str.339), !dbg !1070
  br label %common.ret

assert_end110:                                    ; preds = %assert_end108
  %263 = getelementptr inbounds %1, ptr %p4, i64 0, i32 6, !dbg !1070
  %264 = load i64, ptr %263, align 8, !dbg !1070
  %265 = icmp eq i64 %264, 0, !dbg !1070
  br i1 %265, label %assert_end112, label %assert_fail111, !dbg !1070, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %266(ptr nonnull @.str.340), !dbg !1070
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %267 = getelementptr inbounds %1, ptr %p4, i64 0, i32 1, i32 0, !dbg !1070
  %268 = load i32, ptr %267, align 4, !dbg !1070
  %269 = icmp eq i32 %268, 1, !dbg !1070
  br i1 %269, label %assert_end114, label %assert_fail113, !dbg !1070, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %270 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %270(ptr nonnull @.str.341), !dbg !1070
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %271 = getelementptr inbounds %1, ptr %p4, i64 0, i32 1, i32 1, !dbg !1070
  %272 = load i32, ptr %271, align 4, !dbg !1070
  %273 = icmp eq i32 %dev_id, %272, !dbg !1070
  br i1 %273, label %assert_end116, label %assert_fail115, !dbg !1070, !prof !18

assert_fail115:                                   ; preds = %assert_end114
  %274 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %274(ptr nonnull @.str.342), !dbg !1070
  br label %common.ret

assert_end116:                                    ; preds = %assert_end114
  %275 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !1070
  %276 = load i32, ptr %275, align 4, !dbg !1070
  %277 = icmp eq i32 %276, 5, !dbg !1070
  br i1 %277, label %assert_end120, label %assert_fail117, !dbg !1070, !prof !18

assert_fail117:                                   ; preds = %assert_end116
  %278 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %278(ptr nonnull @.str.343), !dbg !1070
  br label %common.ret

assert_end120:                                    ; preds = %assert_end116
  %279 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !1070
  %280 = load i16, ptr %279, align 2, !dbg !1070
  %281 = icmp eq i16 %280, 1, !dbg !1070
  %282 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !1070
  %283 = load i8, ptr %282, align 1, !dbg !1070
  %284 = icmp eq i8 %283, 8, !dbg !1070
  %285 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !1070
  %286 = load i8, ptr %285, align 1, !dbg !1070
  %287 = icmp eq i8 %286, 0, !dbg !1070
  %288 = and i1 %284, %287, !dbg !1070
  %289 = and i1 %281, %288, !dbg !1070
  br i1 %289, label %assert_end122, label %assert_fail121, !dbg !1070, !prof !18

assert_fail121:                                   ; preds = %assert_end120
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %290(ptr nonnull @.str.344), !dbg !1070
  br label %common.ret

assert_end122:                                    ; preds = %assert_end120
  %291 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape, align 8, !dbg !1070, !tbaa !1205
  %292 = and i64 %291, 4294967295, !dbg !1070
  %293 = icmp eq i64 %292, 1, !dbg !1070
  br i1 %293, label %assert_end124, label %assert_fail123, !dbg !1070, !prof !18

assert_fail123:                                   ; preds = %assert_end122
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %294(ptr nonnull @.str.345), !dbg !1070
  br label %common.ret

assert_end124:                                    ; preds = %assert_end122
  %295 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape, i64 1, !dbg !1070
  %296 = load i64, ptr %295, align 8, !dbg !1070, !tbaa !1215
  %297 = and i64 %296, 4294967295, !dbg !1070
  %298 = icmp eq i64 %297, 32, !dbg !1070
  br i1 %298, label %assert_end126, label %assert_fail125, !dbg !1070, !prof !18

assert_fail125:                                   ; preds = %assert_end124
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %299(ptr nonnull @.str.346), !dbg !1070
  br label %common.ret

assert_end126:                                    ; preds = %assert_end124
  %300 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape, i64 2, !dbg !1070
  %301 = load i64, ptr %300, align 8, !dbg !1070, !tbaa !1217
  %302 = and i64 %301, 4294967295, !dbg !1070
  %303 = icmp eq i64 %302, 28, !dbg !1070
  br i1 %303, label %assert_end128, label %assert_fail127, !dbg !1070, !prof !18

assert_fail127:                                   ; preds = %assert_end126
  %304 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %304(ptr nonnull @.str.347), !dbg !1070
  br label %common.ret

assert_end128:                                    ; preds = %assert_end126
  %305 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape, i64 3, !dbg !1070
  %306 = load i64, ptr %305, align 8, !dbg !1070, !tbaa !1220
  %307 = and i64 %306, 4294967295, !dbg !1070
  %308 = icmp eq i64 %307, 28, !dbg !1070
  br i1 %308, label %assert_end130, label %assert_fail129, !dbg !1070, !prof !18

assert_fail129:                                   ; preds = %assert_end128
  %309 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %309(ptr nonnull @.str.348), !dbg !1070
  br label %common.ret

assert_end130:                                    ; preds = %assert_end128
  %310 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.shape, i64 4, !dbg !1070
  %311 = load i64, ptr %310, align 8, !dbg !1070, !tbaa !1222
  %312 = and i64 %311, 4294967295, !dbg !1070
  %313 = icmp eq i64 %312, 4, !dbg !1070
  br i1 %313, label %assert_end132, label %assert_fail131, !dbg !1070, !prof !18

assert_fail131:                                   ; preds = %assert_end130
  %314 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %314(ptr nonnull @.str.349), !dbg !1070
  br label %common.ret

assert_end132:                                    ; preds = %assert_end130
  %.not151 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.strides, null, !dbg !1070
  br i1 %.not151, label %if_end134, label %if_then133, !dbg !1070, !prof !59

if_then133:                                       ; preds = %assert_end132
  %315 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.strides, i64 1, !dbg !1070
  %316 = load i64, ptr %315, align 8, !dbg !1070, !tbaa !1226
  %317 = and i64 %316, 4294967295, !dbg !1070
  %318 = icmp eq i64 %317, 3136, !dbg !1070
  %319 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.strides, i64 2, !dbg !1070
  %320 = load i64, ptr %319, align 8, !dbg !1070, !tbaa !1236
  %321 = and i64 %320, 4294967295, !dbg !1070
  %322 = icmp eq i64 %321, 112, !dbg !1070
  %323 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.strides, i64 3, !dbg !1070
  %324 = load i64, ptr %323, align 8, !dbg !1070, !tbaa !1239
  %325 = and i64 %324, 4294967295, !dbg !1070
  %326 = icmp eq i64 %325, 4, !dbg !1070
  %327 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2.T_cast.strides, i64 4, !dbg !1070
  %328 = load i64, ptr %327, align 8, !dbg !1070, !tbaa !1241
  %329 = and i64 %328, 4294967295, !dbg !1070
  %330 = icmp eq i64 %329, 1, !dbg !1070
  %331 = and i1 %326, %330, !dbg !1070
  %332 = and i1 %322, %331, !dbg !1070
  %333 = and i1 %318, %332, !dbg !1070
  br i1 %333, label %if_end134, label %assert_fail135, !dbg !1070, !prof !18

if_end134:                                        ; preds = %if_then133, %assert_end132
  %334 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !1070
  %335 = load i64, ptr %334, align 8, !dbg !1070
  %336 = icmp eq i64 %335, 0, !dbg !1070
  br i1 %336, label %assert_end138, label %assert_fail137, !dbg !1070, !prof !18

assert_fail135:                                   ; preds = %if_then133
  %337 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %337(ptr nonnull @.str.350), !dbg !1070
  br label %common.ret

assert_fail137:                                   ; preds = %if_end134
  %338 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %338(ptr nonnull @.str.351), !dbg !1070
  br label %common.ret

assert_end138:                                    ; preds = %if_end134
  %339 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !1070
  %340 = load i32, ptr %339, align 4, !dbg !1070
  %341 = icmp eq i32 %340, 1, !dbg !1070
  br i1 %341, label %assert_end140, label %assert_fail139, !dbg !1070, !prof !18

assert_fail139:                                   ; preds = %assert_end138
  %342 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %342(ptr nonnull @.str.352), !dbg !1070
  br label %common.ret

assert_end140:                                    ; preds = %assert_end138
  %343 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !1070
  %344 = load i32, ptr %343, align 4, !dbg !1070
  %345 = icmp eq i32 %dev_id, %344, !dbg !1070
  br i1 %345, label %assert_end142, label %assert_fail141, !dbg !1070, !prof !18

assert_fail141:                                   ; preds = %assert_end140
  %346 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1070, !tbaa !19
  tail call void %346(ptr nonnull @.str.353), !dbg !1070
  br label %common.ret

assert_end142:                                    ; preds = %assert_end140
  %347 = tail call fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_compute_(ptr %T_cast143, ptr %p0144, ptr %p1145, ptr %p2146, ptr %p3147, ptr %p4148), !dbg !1070
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1245 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1247, metadata !DIExpression()), !dbg !1253
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1248, metadata !DIExpression()), !dbg !1253
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1249, metadata !DIExpression()), !dbg !1253
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1250, metadata !DIExpression()), !dbg !1253
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1251, metadata !DIExpression()), !dbg !1253
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1252, metadata !DIExpression()), !dbg !1253
  %0 = icmp eq i32 %num_args, 6, !dbg !1253
  br i1 %0, label %assert_end, label %assert_fail, !dbg !1253, !prof !18

common.ret:                                       ; preds = %assert_end142, %assert_fail141, %assert_fail139, %assert_fail137, %assert_fail135, %assert_fail131, %assert_fail129, %assert_fail127, %assert_fail125, %assert_fail123, %assert_fail121, %assert_fail117, %assert_fail115, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail105, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail105 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ -1, %assert_fail115 ], [ -1, %assert_fail117 ], [ -1, %assert_fail121 ], [ -1, %assert_fail123 ], [ -1, %assert_fail125 ], [ -1, %assert_fail127 ], [ -1, %assert_fail129 ], [ -1, %assert_fail131 ], [ -1, %assert_fail135 ], [ -1, %assert_fail137 ], [ -1, %assert_fail139 ], [ -1, %assert_fail141 ], [ %347, %assert_end142 ]
  ret i32 %common.ret.op, !dbg !1253

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %1(ptr nonnull @.str.355), !dbg !1253
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1253, !tbaa !1254
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1253
  %p1.code = load i32, ptr %2, align 4, !dbg !1253, !tbaa !1265
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !1253
  %p2.code = load i32, ptr %3, align 4, !dbg !1253, !tbaa !1267
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !1253
  %p3.code = load i32, ptr %4, align 4, !dbg !1253, !tbaa !1270
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !1253
  %p4.code = load i32, ptr %5, align 4, !dbg !1253, !tbaa !1272
  %6 = getelementptr inbounds i32, ptr %arg_type_ids, i64 5, !dbg !1253
  %T_cast.code = load i32, ptr %6, align 4, !dbg !1253, !tbaa !1276
  %p0 = load ptr, ptr %args, align 8, !dbg !1253
  %7 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1253
  %p1 = load ptr, ptr %7, align 8, !dbg !1253
  %8 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !1253
  %p2 = load ptr, ptr %8, align 8, !dbg !1253
  %9 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !1253
  %p3 = load ptr, ptr %9, align 8, !dbg !1253
  %10 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !1253
  %p4 = load ptr, ptr %10, align 8, !dbg !1253
  %11 = getelementptr inbounds %0, ptr %args, i64 5, !dbg !1253
  %T_cast = load ptr, ptr %11, align 8, !dbg !1253
  %p0144 = load ptr, ptr %p0, align 8, !dbg !1253
  call void @llvm.assume(i1 true) [ "align"(ptr %p0144, i64 64) ], !dbg !1253
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1253
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape = load ptr, ptr %12, align 8, !dbg !1253
  %13 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1253
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.strides = load ptr, ptr %13, align 8, !dbg !1253
  %14 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1253
  %dev_id = load i32, ptr %14, align 4, !dbg !1253
  %p1145 = load ptr, ptr %p1, align 8, !dbg !1253
  call void @llvm.assume(i1 true) [ "align"(ptr %p1145, i64 64) ], !dbg !1253
  %15 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !1253
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape = load ptr, ptr %15, align 8, !dbg !1253
  %16 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !1253
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.strides = load ptr, ptr %16, align 8, !dbg !1253
  %p2146 = load ptr, ptr %p2, align 8, !dbg !1253
  call void @llvm.assume(i1 true) [ "align"(ptr %p2146, i64 64) ], !dbg !1253
  %17 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !1253
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape = load ptr, ptr %17, align 8, !dbg !1253
  %18 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !1253
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.strides = load ptr, ptr %18, align 8, !dbg !1253
  %p3147 = load ptr, ptr %p3, align 8, !dbg !1253
  call void @llvm.assume(i1 true) [ "align"(ptr %p3147, i64 64) ], !dbg !1253
  %p4148 = load ptr, ptr %p4, align 8, !dbg !1253
  call void @llvm.assume(i1 true) [ "align"(ptr %p4148, i64 64) ], !dbg !1253
  %T_cast143 = load ptr, ptr %T_cast, align 8, !dbg !1253
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast143, i64 64) ], !dbg !1253
  %19 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !1253
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape = load ptr, ptr %19, align 8, !dbg !1253
  %20 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !1253
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.strides = load ptr, ptr %20, align 8, !dbg !1253
  switch i32 %p0.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !1253

assert_fail7:                                     ; preds = %assert_end
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %21(ptr nonnull @.str.356), !dbg !1253
  br label %common.ret

assert_end8:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !1253

assert_fail9:                                     ; preds = %assert_end8
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %22(ptr nonnull @.str.357), !dbg !1253
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %p2.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !1253

assert_fail11:                                    ; preds = %assert_end10
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %23(ptr nonnull @.str.358), !dbg !1253
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  switch i32 %p3.code, label %assert_fail13 [
    i32 13, label %assert_end14
    i32 7, label %assert_end14
    i32 4, label %assert_end14
    i32 3, label %assert_end14
  ], !dbg !1253

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %24(ptr nonnull @.str.359), !dbg !1253
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12, %assert_end12, %assert_end12, %assert_end12
  switch i32 %p4.code, label %assert_fail15 [
    i32 13, label %assert_end16
    i32 7, label %assert_end16
    i32 4, label %assert_end16
    i32 3, label %assert_end16
  ], !dbg !1253

assert_fail15:                                    ; preds = %assert_end14
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %25(ptr nonnull @.str.360), !dbg !1253
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14, %assert_end14, %assert_end14, %assert_end14
  switch i32 %T_cast.code, label %assert_fail17 [
    i32 13, label %assert_end18
    i32 7, label %assert_end18
    i32 4, label %assert_end18
    i32 3, label %assert_end18
  ], !dbg !1253

assert_fail17:                                    ; preds = %assert_end16
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %26(ptr nonnull @.str.361), !dbg !1253
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16, %assert_end16, %assert_end16, %assert_end16
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1253
  %28 = load i32, ptr %27, align 4, !dbg !1253
  %29 = icmp eq i32 %28, 5, !dbg !1253
  br i1 %29, label %assert_end22, label %assert_fail19, !dbg !1253, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %30(ptr nonnull @.str.362), !dbg !1253
  br label %common.ret

assert_end22:                                     ; preds = %assert_end18
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1253
  %32 = load i16, ptr %31, align 2, !dbg !1253
  %33 = icmp eq i16 %32, 1, !dbg !1253
  %34 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1253
  %35 = load i8, ptr %34, align 1, !dbg !1253
  %36 = icmp eq i8 %35, 8, !dbg !1253
  %37 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1253
  %38 = load i8, ptr %37, align 1, !dbg !1253
  %39 = icmp eq i8 %38, 0, !dbg !1253
  %40 = and i1 %36, %39, !dbg !1253
  %41 = and i1 %33, %40, !dbg !1253
  br i1 %41, label %assert_end24, label %assert_fail23, !dbg !1253, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %42 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %42(ptr nonnull @.str.363), !dbg !1253
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %43 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape, align 8, !dbg !1253, !tbaa !1278
  %44 = and i64 %43, 4294967295, !dbg !1253
  %45 = icmp eq i64 %44, 1, !dbg !1253
  br i1 %45, label %assert_end26, label %assert_fail25, !dbg !1253, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %46(ptr nonnull @.str.364), !dbg !1253
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape, i64 1, !dbg !1253
  %48 = load i64, ptr %47, align 8, !dbg !1253, !tbaa !1288
  %49 = and i64 %48, 4294967295, !dbg !1253
  %50 = icmp eq i64 %49, 64, !dbg !1253
  br i1 %50, label %assert_end28, label %assert_fail27, !dbg !1253, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %51(ptr nonnull @.str.365), !dbg !1253
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape, i64 2, !dbg !1253
  %53 = load i64, ptr %52, align 8, !dbg !1253, !tbaa !1290
  %54 = and i64 %53, 4294967295, !dbg !1253
  %55 = icmp eq i64 %54, 28, !dbg !1253
  br i1 %55, label %assert_end30, label %assert_fail29, !dbg !1253, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %56(ptr nonnull @.str.366), !dbg !1253
  br label %common.ret

assert_end30:                                     ; preds = %assert_end28
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape, i64 3, !dbg !1253
  %58 = load i64, ptr %57, align 8, !dbg !1253, !tbaa !1293
  %59 = and i64 %58, 4294967295, !dbg !1253
  %60 = icmp eq i64 %59, 28, !dbg !1253
  br i1 %60, label %assert_end32, label %assert_fail31, !dbg !1253, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %61(ptr nonnull @.str.367), !dbg !1253
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.shape, i64 4, !dbg !1253
  %63 = load i64, ptr %62, align 8, !dbg !1253, !tbaa !1295
  %64 = and i64 %63, 4294967295, !dbg !1253
  %65 = icmp eq i64 %64, 4, !dbg !1253
  br i1 %65, label %assert_end34, label %assert_fail33, !dbg !1253, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %66 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %66(ptr nonnull @.str.368), !dbg !1253
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.strides, null, !dbg !1253
  br i1 %.not, label %if_end, label %if_then, !dbg !1253, !prof !59

if_then:                                          ; preds = %assert_end34
  %67 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.strides, i64 1, !dbg !1253
  %68 = load i64, ptr %67, align 8, !dbg !1253, !tbaa !1299
  %69 = and i64 %68, 4294967295, !dbg !1253
  %70 = icmp eq i64 %69, 3136, !dbg !1253
  %71 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.strides, i64 2, !dbg !1253
  %72 = load i64, ptr %71, align 8, !dbg !1253, !tbaa !1309
  %73 = and i64 %72, 4294967295, !dbg !1253
  %74 = icmp eq i64 %73, 112, !dbg !1253
  %75 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.strides, i64 3, !dbg !1253
  %76 = load i64, ptr %75, align 8, !dbg !1253, !tbaa !1312
  %77 = and i64 %76, 4294967295, !dbg !1253
  %78 = icmp eq i64 %77, 4, !dbg !1253
  %79 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p0.strides, i64 4, !dbg !1253
  %80 = load i64, ptr %79, align 8, !dbg !1253, !tbaa !1314
  %81 = and i64 %80, 4294967295, !dbg !1253
  %82 = icmp eq i64 %81, 1, !dbg !1253
  %83 = and i1 %78, %82, !dbg !1253
  %84 = and i1 %74, %83, !dbg !1253
  %85 = and i1 %70, %84, !dbg !1253
  br i1 %85, label %if_end, label %assert_fail35, !dbg !1253, !prof !18

if_end:                                           ; preds = %if_then, %assert_end34
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1253
  %87 = load i64, ptr %86, align 8, !dbg !1253
  %88 = icmp eq i64 %87, 0, !dbg !1253
  br i1 %88, label %assert_end38, label %assert_fail37, !dbg !1253, !prof !18

assert_fail35:                                    ; preds = %if_then
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %89(ptr nonnull @.str.369), !dbg !1253
  br label %common.ret

assert_fail37:                                    ; preds = %if_end
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %90(ptr nonnull @.str.370), !dbg !1253
  br label %common.ret

assert_end38:                                     ; preds = %if_end
  %91 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1253
  %92 = load i32, ptr %91, align 4, !dbg !1253
  %93 = icmp eq i32 %92, 1, !dbg !1253
  br i1 %93, label %assert_end40, label %assert_fail39, !dbg !1253, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %94(ptr nonnull @.str.371), !dbg !1253
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %95 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !1253
  %96 = load i32, ptr %95, align 4, !dbg !1253
  %97 = icmp eq i32 %96, 5, !dbg !1253
  br i1 %97, label %assert_end44, label %assert_fail41, !dbg !1253, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %98(ptr nonnull @.str.372), !dbg !1253
  br label %common.ret

assert_end44:                                     ; preds = %assert_end40
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !1253
  %100 = load i16, ptr %99, align 2, !dbg !1253
  %101 = icmp eq i16 %100, 1, !dbg !1253
  %102 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !1253
  %103 = load i8, ptr %102, align 1, !dbg !1253
  %104 = icmp eq i8 %103, 16, !dbg !1253
  %105 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !1253
  %106 = load i8, ptr %105, align 1, !dbg !1253
  %107 = icmp eq i8 %106, 0, !dbg !1253
  %108 = and i1 %104, %107, !dbg !1253
  %109 = and i1 %101, %108, !dbg !1253
  br i1 %109, label %assert_end46, label %assert_fail45, !dbg !1253, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %110 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %110(ptr nonnull @.str.373), !dbg !1253
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %111 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape, align 8, !dbg !1253, !tbaa !1318
  %112 = and i64 %111, 4294967295, !dbg !1253
  %113 = icmp eq i64 %112, 1, !dbg !1253
  br i1 %113, label %assert_end48, label %assert_fail47, !dbg !1253, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %114(ptr nonnull @.str.374), !dbg !1253
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape, i64 1, !dbg !1253
  %116 = load i64, ptr %115, align 8, !dbg !1253, !tbaa !1328
  %117 = and i64 %116, 4294967295, !dbg !1253
  %118 = icmp eq i64 %117, 64, !dbg !1253
  br i1 %118, label %assert_end50, label %assert_fail49, !dbg !1253, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %119(ptr nonnull @.str.375), !dbg !1253
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape, i64 2, !dbg !1253
  %121 = load i64, ptr %120, align 8, !dbg !1253, !tbaa !1330
  %122 = and i64 %121, 4294967295, !dbg !1253
  %123 = icmp eq i64 %122, 1, !dbg !1253
  br i1 %123, label %assert_end52, label %assert_fail51, !dbg !1253, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %124(ptr nonnull @.str.376), !dbg !1253
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape, i64 3, !dbg !1253
  %126 = load i64, ptr %125, align 8, !dbg !1253, !tbaa !1333
  %127 = and i64 %126, 4294967295, !dbg !1253
  %128 = icmp eq i64 %127, 1, !dbg !1253
  br i1 %128, label %assert_end54, label %assert_fail53, !dbg !1253, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %129(ptr nonnull @.str.377), !dbg !1253
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.shape, i64 4, !dbg !1253
  %131 = load i64, ptr %130, align 8, !dbg !1253, !tbaa !1335
  %132 = and i64 %131, 4294967295, !dbg !1253
  %133 = icmp eq i64 %132, 4, !dbg !1253
  br i1 %133, label %assert_end56, label %assert_fail55, !dbg !1253, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %134(ptr nonnull @.str.378), !dbg !1253
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %.not149 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.strides, null, !dbg !1253
  br i1 %.not149, label %if_end58, label %if_then57, !dbg !1253, !prof !59

if_then57:                                        ; preds = %assert_end56
  %135 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.strides, i64 1, !dbg !1253
  %136 = load i64, ptr %135, align 8, !dbg !1253, !tbaa !1339
  %137 = and i64 %136, 4294967295, !dbg !1253
  %138 = icmp eq i64 %137, 4, !dbg !1253
  %139 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p1.strides, i64 4, !dbg !1253
  %140 = load i64, ptr %139, align 8, !dbg !1253, !tbaa !1349
  %141 = and i64 %140, 4294967295, !dbg !1253
  %142 = icmp eq i64 %141, 1, !dbg !1253
  %143 = and i1 %138, %142, !dbg !1253
  br i1 %143, label %if_end58, label %assert_fail59, !dbg !1253, !prof !18

if_end58:                                         ; preds = %if_then57, %assert_end56
  %144 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !1253
  %145 = load i64, ptr %144, align 8, !dbg !1253
  %146 = icmp eq i64 %145, 0, !dbg !1253
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !1253, !prof !18

assert_fail59:                                    ; preds = %if_then57
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %147(ptr nonnull @.str.379), !dbg !1253
  br label %common.ret

assert_fail61:                                    ; preds = %if_end58
  %148 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %148(ptr nonnull @.str.380), !dbg !1253
  br label %common.ret

assert_end62:                                     ; preds = %if_end58
  %149 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !1253
  %150 = load i32, ptr %149, align 4, !dbg !1253
  %151 = icmp eq i32 %150, 1, !dbg !1253
  br i1 %151, label %assert_end64, label %assert_fail63, !dbg !1253, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %152 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %152(ptr nonnull @.str.381), !dbg !1253
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !1253
  %154 = load i32, ptr %153, align 4, !dbg !1253
  %155 = icmp eq i32 %dev_id, %154, !dbg !1253
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !1253, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %156(ptr nonnull @.str.382), !dbg !1253
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !1253
  %158 = load i32, ptr %157, align 4, !dbg !1253
  %159 = icmp eq i32 %158, 5, !dbg !1253
  br i1 %159, label %assert_end70, label %assert_fail67, !dbg !1253, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %160(ptr nonnull @.str.383), !dbg !1253
  br label %common.ret

assert_end70:                                     ; preds = %assert_end66
  %161 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !1253
  %162 = load i16, ptr %161, align 2, !dbg !1253
  %163 = icmp eq i16 %162, 1, !dbg !1253
  %164 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !1253
  %165 = load i8, ptr %164, align 1, !dbg !1253
  %166 = icmp eq i8 %165, 16, !dbg !1253
  %167 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !1253
  %168 = load i8, ptr %167, align 1, !dbg !1253
  %169 = icmp eq i8 %168, 0, !dbg !1253
  %170 = and i1 %166, %169, !dbg !1253
  %171 = and i1 %163, %170, !dbg !1253
  br i1 %171, label %assert_end72, label %assert_fail71, !dbg !1253, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %172 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %172(ptr nonnull @.str.384), !dbg !1253
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %173 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape, align 8, !dbg !1253, !tbaa !1353
  %174 = and i64 %173, 4294967295, !dbg !1253
  %175 = icmp eq i64 %174, 1, !dbg !1253
  br i1 %175, label %assert_end74, label %assert_fail73, !dbg !1253, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %176 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %176(ptr nonnull @.str.385), !dbg !1253
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %177 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape, i64 1, !dbg !1253
  %178 = load i64, ptr %177, align 8, !dbg !1253, !tbaa !1363
  %179 = and i64 %178, 4294967295, !dbg !1253
  %180 = icmp eq i64 %179, 64, !dbg !1253
  br i1 %180, label %assert_end76, label %assert_fail75, !dbg !1253, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %181(ptr nonnull @.str.386), !dbg !1253
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %182 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape, i64 2, !dbg !1253
  %183 = load i64, ptr %182, align 8, !dbg !1253, !tbaa !1365
  %184 = and i64 %183, 4294967295, !dbg !1253
  %185 = icmp eq i64 %184, 1, !dbg !1253
  br i1 %185, label %assert_end78, label %assert_fail77, !dbg !1253, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %186 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %186(ptr nonnull @.str.387), !dbg !1253
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %187 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape, i64 3, !dbg !1253
  %188 = load i64, ptr %187, align 8, !dbg !1253, !tbaa !1368
  %189 = and i64 %188, 4294967295, !dbg !1253
  %190 = icmp eq i64 %189, 1, !dbg !1253
  br i1 %190, label %assert_end80, label %assert_fail79, !dbg !1253, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %191(ptr nonnull @.str.388), !dbg !1253
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %192 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.shape, i64 4, !dbg !1253
  %193 = load i64, ptr %192, align 8, !dbg !1253, !tbaa !1370
  %194 = and i64 %193, 4294967295, !dbg !1253
  %195 = icmp eq i64 %194, 4, !dbg !1253
  br i1 %195, label %assert_end82, label %assert_fail81, !dbg !1253, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %196 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %196(ptr nonnull @.str.389), !dbg !1253
  br label %common.ret

assert_end82:                                     ; preds = %assert_end80
  %.not150 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.strides, null, !dbg !1253
  br i1 %.not150, label %if_end84, label %if_then83, !dbg !1253, !prof !59

if_then83:                                        ; preds = %assert_end82
  %197 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.strides, i64 1, !dbg !1253
  %198 = load i64, ptr %197, align 8, !dbg !1253, !tbaa !1374
  %199 = and i64 %198, 4294967295, !dbg !1253
  %200 = icmp eq i64 %199, 4, !dbg !1253
  %201 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.p2.strides, i64 4, !dbg !1253
  %202 = load i64, ptr %201, align 8, !dbg !1253, !tbaa !1384
  %203 = and i64 %202, 4294967295, !dbg !1253
  %204 = icmp eq i64 %203, 1, !dbg !1253
  %205 = and i1 %200, %204, !dbg !1253
  br i1 %205, label %if_end84, label %assert_fail85, !dbg !1253, !prof !18

if_end84:                                         ; preds = %if_then83, %assert_end82
  %206 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !1253
  %207 = load i64, ptr %206, align 8, !dbg !1253
  %208 = icmp eq i64 %207, 0, !dbg !1253
  br i1 %208, label %assert_end88, label %assert_fail87, !dbg !1253, !prof !18

assert_fail85:                                    ; preds = %if_then83
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %209(ptr nonnull @.str.390), !dbg !1253
  br label %common.ret

assert_fail87:                                    ; preds = %if_end84
  %210 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %210(ptr nonnull @.str.391), !dbg !1253
  br label %common.ret

assert_end88:                                     ; preds = %if_end84
  %211 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !1253
  %212 = load i32, ptr %211, align 4, !dbg !1253
  %213 = icmp eq i32 %212, 1, !dbg !1253
  br i1 %213, label %assert_end90, label %assert_fail89, !dbg !1253, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %214 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %214(ptr nonnull @.str.392), !dbg !1253
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %215 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !1253
  %216 = load i32, ptr %215, align 4, !dbg !1253
  %217 = icmp eq i32 %dev_id, %216, !dbg !1253
  br i1 %217, label %assert_end92, label %assert_fail91, !dbg !1253, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %218(ptr nonnull @.str.393), !dbg !1253
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %219 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !1253
  %220 = load i32, ptr %219, align 4, !dbg !1253
  %221 = icmp eq i32 %220, 0, !dbg !1253
  br i1 %221, label %assert_end96, label %assert_fail93, !dbg !1253, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %222(ptr nonnull @.str.394), !dbg !1253
  br label %common.ret

assert_end96:                                     ; preds = %assert_end92
  %223 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !1253
  %224 = load i16, ptr %223, align 2, !dbg !1253
  %225 = icmp eq i16 %224, 1, !dbg !1253
  %226 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !1253
  %227 = load i8, ptr %226, align 1, !dbg !1253
  %228 = icmp eq i8 %227, 16, !dbg !1253
  %229 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !1253
  %230 = load i8, ptr %229, align 1, !dbg !1253
  %231 = icmp eq i8 %230, 0, !dbg !1253
  %232 = and i1 %228, %231, !dbg !1253
  %233 = and i1 %225, %232, !dbg !1253
  br i1 %233, label %assert_end98, label %assert_fail97, !dbg !1253, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %234 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %234(ptr nonnull @.str.395), !dbg !1253
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %235 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !1253
  %236 = load i64, ptr %235, align 8, !dbg !1253
  %237 = icmp eq i64 %236, 0, !dbg !1253
  br i1 %237, label %assert_end100, label %assert_fail99, !dbg !1253, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %238 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %238(ptr nonnull @.str.396), !dbg !1253
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %239 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !1253
  %240 = load i32, ptr %239, align 4, !dbg !1253
  %241 = icmp eq i32 %240, 1, !dbg !1253
  br i1 %241, label %assert_end102, label %assert_fail101, !dbg !1253, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %242(ptr nonnull @.str.397), !dbg !1253
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %243 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !1253
  %244 = load i32, ptr %243, align 4, !dbg !1253
  %245 = icmp eq i32 %dev_id, %244, !dbg !1253
  br i1 %245, label %assert_end104, label %assert_fail103, !dbg !1253, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %246(ptr nonnull @.str.398), !dbg !1253
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %247 = getelementptr inbounds %1, ptr %p4, i64 0, i32 2, !dbg !1253
  %248 = load i32, ptr %247, align 4, !dbg !1253
  %249 = icmp eq i32 %248, 0, !dbg !1253
  br i1 %249, label %assert_end108, label %assert_fail105, !dbg !1253, !prof !18

assert_fail105:                                   ; preds = %assert_end104
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %250(ptr nonnull @.str.399), !dbg !1253
  br label %common.ret

assert_end108:                                    ; preds = %assert_end104
  %251 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 2, !dbg !1253
  %252 = load i16, ptr %251, align 2, !dbg !1253
  %253 = icmp eq i16 %252, 1, !dbg !1253
  %254 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 1, !dbg !1253
  %255 = load i8, ptr %254, align 1, !dbg !1253
  %256 = icmp eq i8 %255, 16, !dbg !1253
  %257 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 0, !dbg !1253
  %258 = load i8, ptr %257, align 1, !dbg !1253
  %259 = icmp eq i8 %258, 0, !dbg !1253
  %260 = and i1 %256, %259, !dbg !1253
  %261 = and i1 %253, %260, !dbg !1253
  br i1 %261, label %assert_end110, label %assert_fail109, !dbg !1253, !prof !18

assert_fail109:                                   ; preds = %assert_end108
  %262 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %262(ptr nonnull @.str.400), !dbg !1253
  br label %common.ret

assert_end110:                                    ; preds = %assert_end108
  %263 = getelementptr inbounds %1, ptr %p4, i64 0, i32 6, !dbg !1253
  %264 = load i64, ptr %263, align 8, !dbg !1253
  %265 = icmp eq i64 %264, 0, !dbg !1253
  br i1 %265, label %assert_end112, label %assert_fail111, !dbg !1253, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %266(ptr nonnull @.str.401), !dbg !1253
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %267 = getelementptr inbounds %1, ptr %p4, i64 0, i32 1, i32 0, !dbg !1253
  %268 = load i32, ptr %267, align 4, !dbg !1253
  %269 = icmp eq i32 %268, 1, !dbg !1253
  br i1 %269, label %assert_end114, label %assert_fail113, !dbg !1253, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %270 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %270(ptr nonnull @.str.402), !dbg !1253
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %271 = getelementptr inbounds %1, ptr %p4, i64 0, i32 1, i32 1, !dbg !1253
  %272 = load i32, ptr %271, align 4, !dbg !1253
  %273 = icmp eq i32 %dev_id, %272, !dbg !1253
  br i1 %273, label %assert_end116, label %assert_fail115, !dbg !1253, !prof !18

assert_fail115:                                   ; preds = %assert_end114
  %274 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %274(ptr nonnull @.str.403), !dbg !1253
  br label %common.ret

assert_end116:                                    ; preds = %assert_end114
  %275 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !1253
  %276 = load i32, ptr %275, align 4, !dbg !1253
  %277 = icmp eq i32 %276, 5, !dbg !1253
  br i1 %277, label %assert_end120, label %assert_fail117, !dbg !1253, !prof !18

assert_fail117:                                   ; preds = %assert_end116
  %278 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %278(ptr nonnull @.str.404), !dbg !1253
  br label %common.ret

assert_end120:                                    ; preds = %assert_end116
  %279 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !1253
  %280 = load i16, ptr %279, align 2, !dbg !1253
  %281 = icmp eq i16 %280, 1, !dbg !1253
  %282 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !1253
  %283 = load i8, ptr %282, align 1, !dbg !1253
  %284 = icmp eq i8 %283, 8, !dbg !1253
  %285 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !1253
  %286 = load i8, ptr %285, align 1, !dbg !1253
  %287 = icmp eq i8 %286, 0, !dbg !1253
  %288 = and i1 %284, %287, !dbg !1253
  %289 = and i1 %281, %288, !dbg !1253
  br i1 %289, label %assert_end122, label %assert_fail121, !dbg !1253, !prof !18

assert_fail121:                                   ; preds = %assert_end120
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %290(ptr nonnull @.str.405), !dbg !1253
  br label %common.ret

assert_end122:                                    ; preds = %assert_end120
  %291 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape, align 8, !dbg !1253, !tbaa !1388
  %292 = and i64 %291, 4294967295, !dbg !1253
  %293 = icmp eq i64 %292, 1, !dbg !1253
  br i1 %293, label %assert_end124, label %assert_fail123, !dbg !1253, !prof !18

assert_fail123:                                   ; preds = %assert_end122
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %294(ptr nonnull @.str.406), !dbg !1253
  br label %common.ret

assert_end124:                                    ; preds = %assert_end122
  %295 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape, i64 1, !dbg !1253
  %296 = load i64, ptr %295, align 8, !dbg !1253, !tbaa !1398
  %297 = and i64 %296, 4294967295, !dbg !1253
  %298 = icmp eq i64 %297, 64, !dbg !1253
  br i1 %298, label %assert_end126, label %assert_fail125, !dbg !1253, !prof !18

assert_fail125:                                   ; preds = %assert_end124
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %299(ptr nonnull @.str.407), !dbg !1253
  br label %common.ret

assert_end126:                                    ; preds = %assert_end124
  %300 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape, i64 2, !dbg !1253
  %301 = load i64, ptr %300, align 8, !dbg !1253, !tbaa !1400
  %302 = and i64 %301, 4294967295, !dbg !1253
  %303 = icmp eq i64 %302, 28, !dbg !1253
  br i1 %303, label %assert_end128, label %assert_fail127, !dbg !1253, !prof !18

assert_fail127:                                   ; preds = %assert_end126
  %304 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %304(ptr nonnull @.str.408), !dbg !1253
  br label %common.ret

assert_end128:                                    ; preds = %assert_end126
  %305 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape, i64 3, !dbg !1253
  %306 = load i64, ptr %305, align 8, !dbg !1253, !tbaa !1403
  %307 = and i64 %306, 4294967295, !dbg !1253
  %308 = icmp eq i64 %307, 28, !dbg !1253
  br i1 %308, label %assert_end130, label %assert_fail129, !dbg !1253, !prof !18

assert_fail129:                                   ; preds = %assert_end128
  %309 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %309(ptr nonnull @.str.409), !dbg !1253
  br label %common.ret

assert_end130:                                    ; preds = %assert_end128
  %310 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.shape, i64 4, !dbg !1253
  %311 = load i64, ptr %310, align 8, !dbg !1253, !tbaa !1405
  %312 = and i64 %311, 4294967295, !dbg !1253
  %313 = icmp eq i64 %312, 4, !dbg !1253
  br i1 %313, label %assert_end132, label %assert_fail131, !dbg !1253, !prof !18

assert_fail131:                                   ; preds = %assert_end130
  %314 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %314(ptr nonnull @.str.410), !dbg !1253
  br label %common.ret

assert_end132:                                    ; preds = %assert_end130
  %.not151 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.strides, null, !dbg !1253
  br i1 %.not151, label %if_end134, label %if_then133, !dbg !1253, !prof !59

if_then133:                                       ; preds = %assert_end132
  %315 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.strides, i64 1, !dbg !1253
  %316 = load i64, ptr %315, align 8, !dbg !1253, !tbaa !1409
  %317 = and i64 %316, 4294967295, !dbg !1253
  %318 = icmp eq i64 %317, 3136, !dbg !1253
  %319 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.strides, i64 2, !dbg !1253
  %320 = load i64, ptr %319, align 8, !dbg !1253, !tbaa !1419
  %321 = and i64 %320, 4294967295, !dbg !1253
  %322 = icmp eq i64 %321, 112, !dbg !1253
  %323 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.strides, i64 3, !dbg !1253
  %324 = load i64, ptr %323, align 8, !dbg !1253, !tbaa !1422
  %325 = and i64 %324, 4294967295, !dbg !1253
  %326 = icmp eq i64 %325, 4, !dbg !1253
  %327 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3.T_cast.strides, i64 4, !dbg !1253
  %328 = load i64, ptr %327, align 8, !dbg !1253, !tbaa !1424
  %329 = and i64 %328, 4294967295, !dbg !1253
  %330 = icmp eq i64 %329, 1, !dbg !1253
  %331 = and i1 %326, %330, !dbg !1253
  %332 = and i1 %322, %331, !dbg !1253
  %333 = and i1 %318, %332, !dbg !1253
  br i1 %333, label %if_end134, label %assert_fail135, !dbg !1253, !prof !18

if_end134:                                        ; preds = %if_then133, %assert_end132
  %334 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !1253
  %335 = load i64, ptr %334, align 8, !dbg !1253
  %336 = icmp eq i64 %335, 0, !dbg !1253
  br i1 %336, label %assert_end138, label %assert_fail137, !dbg !1253, !prof !18

assert_fail135:                                   ; preds = %if_then133
  %337 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %337(ptr nonnull @.str.411), !dbg !1253
  br label %common.ret

assert_fail137:                                   ; preds = %if_end134
  %338 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %338(ptr nonnull @.str.412), !dbg !1253
  br label %common.ret

assert_end138:                                    ; preds = %if_end134
  %339 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !1253
  %340 = load i32, ptr %339, align 4, !dbg !1253
  %341 = icmp eq i32 %340, 1, !dbg !1253
  br i1 %341, label %assert_end140, label %assert_fail139, !dbg !1253, !prof !18

assert_fail139:                                   ; preds = %assert_end138
  %342 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %342(ptr nonnull @.str.413), !dbg !1253
  br label %common.ret

assert_end140:                                    ; preds = %assert_end138
  %343 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !1253
  %344 = load i32, ptr %343, align 4, !dbg !1253
  %345 = icmp eq i32 %dev_id, %344, !dbg !1253
  br i1 %345, label %assert_end142, label %assert_fail141, !dbg !1253, !prof !18

assert_fail141:                                   ; preds = %assert_end140
  %346 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1253, !tbaa !19
  tail call void %346(ptr nonnull @.str.414), !dbg !1253
  br label %common.ret

assert_end142:                                    ; preds = %assert_end140
  %347 = tail call fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_compute_(ptr %T_cast143, ptr %p0144, ptr %p1145, ptr %p2146, ptr %p3147, ptr %p4148), !dbg !1253
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1428 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1430, metadata !DIExpression()), !dbg !1436
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1431, metadata !DIExpression()), !dbg !1436
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1432, metadata !DIExpression()), !dbg !1436
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1433, metadata !DIExpression()), !dbg !1436
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1434, metadata !DIExpression()), !dbg !1436
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1435, metadata !DIExpression()), !dbg !1436
  %0 = icmp eq i32 %num_args, 6, !dbg !1436
  br i1 %0, label %assert_end, label %assert_fail, !dbg !1436, !prof !18

common.ret:                                       ; preds = %assert_end142, %assert_fail141, %assert_fail139, %assert_fail137, %assert_fail135, %assert_fail131, %assert_fail129, %assert_fail127, %assert_fail125, %assert_fail123, %assert_fail121, %assert_fail117, %assert_fail115, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail105, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail105 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ -1, %assert_fail115 ], [ -1, %assert_fail117 ], [ -1, %assert_fail121 ], [ -1, %assert_fail123 ], [ -1, %assert_fail125 ], [ -1, %assert_fail127 ], [ -1, %assert_fail129 ], [ -1, %assert_fail131 ], [ -1, %assert_fail135 ], [ -1, %assert_fail137 ], [ -1, %assert_fail139 ], [ -1, %assert_fail141 ], [ %347, %assert_end142 ]
  ret i32 %common.ret.op, !dbg !1436

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %1(ptr nonnull @.str.416), !dbg !1436
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1436, !tbaa !1437
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1436
  %p1.code = load i32, ptr %2, align 4, !dbg !1436, !tbaa !1448
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !1436
  %p2.code = load i32, ptr %3, align 4, !dbg !1436, !tbaa !1450
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !1436
  %p3.code = load i32, ptr %4, align 4, !dbg !1436, !tbaa !1453
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !1436
  %p4.code = load i32, ptr %5, align 4, !dbg !1436, !tbaa !1455
  %6 = getelementptr inbounds i32, ptr %arg_type_ids, i64 5, !dbg !1436
  %T_cast.code = load i32, ptr %6, align 4, !dbg !1436, !tbaa !1459
  %p0 = load ptr, ptr %args, align 8, !dbg !1436
  %7 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1436
  %p1 = load ptr, ptr %7, align 8, !dbg !1436
  %8 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !1436
  %p2 = load ptr, ptr %8, align 8, !dbg !1436
  %9 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !1436
  %p3 = load ptr, ptr %9, align 8, !dbg !1436
  %10 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !1436
  %p4 = load ptr, ptr %10, align 8, !dbg !1436
  %11 = getelementptr inbounds %0, ptr %args, i64 5, !dbg !1436
  %T_cast = load ptr, ptr %11, align 8, !dbg !1436
  %p0144 = load ptr, ptr %p0, align 8, !dbg !1436
  call void @llvm.assume(i1 true) [ "align"(ptr %p0144, i64 64) ], !dbg !1436
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1436
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape = load ptr, ptr %12, align 8, !dbg !1436
  %13 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1436
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.strides = load ptr, ptr %13, align 8, !dbg !1436
  %14 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1436
  %dev_id = load i32, ptr %14, align 4, !dbg !1436
  %p1145 = load ptr, ptr %p1, align 8, !dbg !1436
  call void @llvm.assume(i1 true) [ "align"(ptr %p1145, i64 64) ], !dbg !1436
  %15 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !1436
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape = load ptr, ptr %15, align 8, !dbg !1436
  %16 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !1436
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.strides = load ptr, ptr %16, align 8, !dbg !1436
  %p2146 = load ptr, ptr %p2, align 8, !dbg !1436
  call void @llvm.assume(i1 true) [ "align"(ptr %p2146, i64 64) ], !dbg !1436
  %17 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !1436
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape = load ptr, ptr %17, align 8, !dbg !1436
  %18 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !1436
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.strides = load ptr, ptr %18, align 8, !dbg !1436
  %p3147 = load ptr, ptr %p3, align 8, !dbg !1436
  call void @llvm.assume(i1 true) [ "align"(ptr %p3147, i64 64) ], !dbg !1436
  %p4148 = load ptr, ptr %p4, align 8, !dbg !1436
  call void @llvm.assume(i1 true) [ "align"(ptr %p4148, i64 64) ], !dbg !1436
  %T_cast143 = load ptr, ptr %T_cast, align 8, !dbg !1436
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast143, i64 64) ], !dbg !1436
  %19 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !1436
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape = load ptr, ptr %19, align 8, !dbg !1436
  %20 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !1436
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.strides = load ptr, ptr %20, align 8, !dbg !1436
  switch i32 %p0.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !1436

assert_fail7:                                     ; preds = %assert_end
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %21(ptr nonnull @.str.417), !dbg !1436
  br label %common.ret

assert_end8:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !1436

assert_fail9:                                     ; preds = %assert_end8
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %22(ptr nonnull @.str.418), !dbg !1436
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %p2.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !1436

assert_fail11:                                    ; preds = %assert_end10
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %23(ptr nonnull @.str.419), !dbg !1436
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  switch i32 %p3.code, label %assert_fail13 [
    i32 13, label %assert_end14
    i32 7, label %assert_end14
    i32 4, label %assert_end14
    i32 3, label %assert_end14
  ], !dbg !1436

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %24(ptr nonnull @.str.420), !dbg !1436
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12, %assert_end12, %assert_end12, %assert_end12
  switch i32 %p4.code, label %assert_fail15 [
    i32 13, label %assert_end16
    i32 7, label %assert_end16
    i32 4, label %assert_end16
    i32 3, label %assert_end16
  ], !dbg !1436

assert_fail15:                                    ; preds = %assert_end14
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %25(ptr nonnull @.str.421), !dbg !1436
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14, %assert_end14, %assert_end14, %assert_end14
  switch i32 %T_cast.code, label %assert_fail17 [
    i32 13, label %assert_end18
    i32 7, label %assert_end18
    i32 4, label %assert_end18
    i32 3, label %assert_end18
  ], !dbg !1436

assert_fail17:                                    ; preds = %assert_end16
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %26(ptr nonnull @.str.422), !dbg !1436
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16, %assert_end16, %assert_end16, %assert_end16
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1436
  %28 = load i32, ptr %27, align 4, !dbg !1436
  %29 = icmp eq i32 %28, 5, !dbg !1436
  br i1 %29, label %assert_end22, label %assert_fail19, !dbg !1436, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %30(ptr nonnull @.str.423), !dbg !1436
  br label %common.ret

assert_end22:                                     ; preds = %assert_end18
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1436
  %32 = load i16, ptr %31, align 2, !dbg !1436
  %33 = icmp eq i16 %32, 1, !dbg !1436
  %34 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1436
  %35 = load i8, ptr %34, align 1, !dbg !1436
  %36 = icmp eq i8 %35, 8, !dbg !1436
  %37 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1436
  %38 = load i8, ptr %37, align 1, !dbg !1436
  %39 = icmp eq i8 %38, 0, !dbg !1436
  %40 = and i1 %36, %39, !dbg !1436
  %41 = and i1 %33, %40, !dbg !1436
  br i1 %41, label %assert_end24, label %assert_fail23, !dbg !1436, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %42 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %42(ptr nonnull @.str.424), !dbg !1436
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %43 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape, align 8, !dbg !1436, !tbaa !1461
  %44 = and i64 %43, 4294967295, !dbg !1436
  %45 = icmp eq i64 %44, 1, !dbg !1436
  br i1 %45, label %assert_end26, label %assert_fail25, !dbg !1436, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %46(ptr nonnull @.str.425), !dbg !1436
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape, i64 1, !dbg !1436
  %48 = load i64, ptr %47, align 8, !dbg !1436, !tbaa !1471
  %49 = and i64 %48, 4294967295, !dbg !1436
  %50 = icmp eq i64 %49, 64, !dbg !1436
  br i1 %50, label %assert_end28, label %assert_fail27, !dbg !1436, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %51(ptr nonnull @.str.426), !dbg !1436
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape, i64 2, !dbg !1436
  %53 = load i64, ptr %52, align 8, !dbg !1436, !tbaa !1473
  %54 = and i64 %53, 4294967295, !dbg !1436
  %55 = icmp eq i64 %54, 14, !dbg !1436
  br i1 %55, label %assert_end30, label %assert_fail29, !dbg !1436, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %56(ptr nonnull @.str.427), !dbg !1436
  br label %common.ret

assert_end30:                                     ; preds = %assert_end28
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape, i64 3, !dbg !1436
  %58 = load i64, ptr %57, align 8, !dbg !1436, !tbaa !1476
  %59 = and i64 %58, 4294967295, !dbg !1436
  %60 = icmp eq i64 %59, 14, !dbg !1436
  br i1 %60, label %assert_end32, label %assert_fail31, !dbg !1436, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %61(ptr nonnull @.str.428), !dbg !1436
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.shape, i64 4, !dbg !1436
  %63 = load i64, ptr %62, align 8, !dbg !1436, !tbaa !1478
  %64 = and i64 %63, 4294967295, !dbg !1436
  %65 = icmp eq i64 %64, 4, !dbg !1436
  br i1 %65, label %assert_end34, label %assert_fail33, !dbg !1436, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %66 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %66(ptr nonnull @.str.429), !dbg !1436
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.strides, null, !dbg !1436
  br i1 %.not, label %if_end, label %if_then, !dbg !1436, !prof !59

if_then:                                          ; preds = %assert_end34
  %67 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.strides, i64 1, !dbg !1436
  %68 = load i64, ptr %67, align 8, !dbg !1436, !tbaa !1482
  %69 = and i64 %68, 4294967295, !dbg !1436
  %70 = icmp eq i64 %69, 784, !dbg !1436
  %71 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.strides, i64 2, !dbg !1436
  %72 = load i64, ptr %71, align 8, !dbg !1436, !tbaa !1492
  %73 = and i64 %72, 4294967295, !dbg !1436
  %74 = icmp eq i64 %73, 56, !dbg !1436
  %75 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.strides, i64 3, !dbg !1436
  %76 = load i64, ptr %75, align 8, !dbg !1436, !tbaa !1495
  %77 = and i64 %76, 4294967295, !dbg !1436
  %78 = icmp eq i64 %77, 4, !dbg !1436
  %79 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p0.strides, i64 4, !dbg !1436
  %80 = load i64, ptr %79, align 8, !dbg !1436, !tbaa !1497
  %81 = and i64 %80, 4294967295, !dbg !1436
  %82 = icmp eq i64 %81, 1, !dbg !1436
  %83 = and i1 %78, %82, !dbg !1436
  %84 = and i1 %74, %83, !dbg !1436
  %85 = and i1 %70, %84, !dbg !1436
  br i1 %85, label %if_end, label %assert_fail35, !dbg !1436, !prof !18

if_end:                                           ; preds = %if_then, %assert_end34
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1436
  %87 = load i64, ptr %86, align 8, !dbg !1436
  %88 = icmp eq i64 %87, 0, !dbg !1436
  br i1 %88, label %assert_end38, label %assert_fail37, !dbg !1436, !prof !18

assert_fail35:                                    ; preds = %if_then
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %89(ptr nonnull @.str.430), !dbg !1436
  br label %common.ret

assert_fail37:                                    ; preds = %if_end
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %90(ptr nonnull @.str.431), !dbg !1436
  br label %common.ret

assert_end38:                                     ; preds = %if_end
  %91 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1436
  %92 = load i32, ptr %91, align 4, !dbg !1436
  %93 = icmp eq i32 %92, 1, !dbg !1436
  br i1 %93, label %assert_end40, label %assert_fail39, !dbg !1436, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %94(ptr nonnull @.str.432), !dbg !1436
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %95 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !1436
  %96 = load i32, ptr %95, align 4, !dbg !1436
  %97 = icmp eq i32 %96, 5, !dbg !1436
  br i1 %97, label %assert_end44, label %assert_fail41, !dbg !1436, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %98(ptr nonnull @.str.433), !dbg !1436
  br label %common.ret

assert_end44:                                     ; preds = %assert_end40
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !1436
  %100 = load i16, ptr %99, align 2, !dbg !1436
  %101 = icmp eq i16 %100, 1, !dbg !1436
  %102 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !1436
  %103 = load i8, ptr %102, align 1, !dbg !1436
  %104 = icmp eq i8 %103, 16, !dbg !1436
  %105 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !1436
  %106 = load i8, ptr %105, align 1, !dbg !1436
  %107 = icmp eq i8 %106, 0, !dbg !1436
  %108 = and i1 %104, %107, !dbg !1436
  %109 = and i1 %101, %108, !dbg !1436
  br i1 %109, label %assert_end46, label %assert_fail45, !dbg !1436, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %110 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %110(ptr nonnull @.str.434), !dbg !1436
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %111 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape, align 8, !dbg !1436, !tbaa !1501
  %112 = and i64 %111, 4294967295, !dbg !1436
  %113 = icmp eq i64 %112, 1, !dbg !1436
  br i1 %113, label %assert_end48, label %assert_fail47, !dbg !1436, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %114(ptr nonnull @.str.435), !dbg !1436
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape, i64 1, !dbg !1436
  %116 = load i64, ptr %115, align 8, !dbg !1436, !tbaa !1511
  %117 = and i64 %116, 4294967295, !dbg !1436
  %118 = icmp eq i64 %117, 64, !dbg !1436
  br i1 %118, label %assert_end50, label %assert_fail49, !dbg !1436, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %119(ptr nonnull @.str.436), !dbg !1436
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape, i64 2, !dbg !1436
  %121 = load i64, ptr %120, align 8, !dbg !1436, !tbaa !1513
  %122 = and i64 %121, 4294967295, !dbg !1436
  %123 = icmp eq i64 %122, 1, !dbg !1436
  br i1 %123, label %assert_end52, label %assert_fail51, !dbg !1436, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %124(ptr nonnull @.str.437), !dbg !1436
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape, i64 3, !dbg !1436
  %126 = load i64, ptr %125, align 8, !dbg !1436, !tbaa !1516
  %127 = and i64 %126, 4294967295, !dbg !1436
  %128 = icmp eq i64 %127, 1, !dbg !1436
  br i1 %128, label %assert_end54, label %assert_fail53, !dbg !1436, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %129(ptr nonnull @.str.438), !dbg !1436
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.shape, i64 4, !dbg !1436
  %131 = load i64, ptr %130, align 8, !dbg !1436, !tbaa !1518
  %132 = and i64 %131, 4294967295, !dbg !1436
  %133 = icmp eq i64 %132, 4, !dbg !1436
  br i1 %133, label %assert_end56, label %assert_fail55, !dbg !1436, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %134(ptr nonnull @.str.439), !dbg !1436
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %.not149 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.strides, null, !dbg !1436
  br i1 %.not149, label %if_end58, label %if_then57, !dbg !1436, !prof !59

if_then57:                                        ; preds = %assert_end56
  %135 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.strides, i64 1, !dbg !1436
  %136 = load i64, ptr %135, align 8, !dbg !1436, !tbaa !1522
  %137 = and i64 %136, 4294967295, !dbg !1436
  %138 = icmp eq i64 %137, 4, !dbg !1436
  %139 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p1.strides, i64 4, !dbg !1436
  %140 = load i64, ptr %139, align 8, !dbg !1436, !tbaa !1532
  %141 = and i64 %140, 4294967295, !dbg !1436
  %142 = icmp eq i64 %141, 1, !dbg !1436
  %143 = and i1 %138, %142, !dbg !1436
  br i1 %143, label %if_end58, label %assert_fail59, !dbg !1436, !prof !18

if_end58:                                         ; preds = %if_then57, %assert_end56
  %144 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !1436
  %145 = load i64, ptr %144, align 8, !dbg !1436
  %146 = icmp eq i64 %145, 0, !dbg !1436
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !1436, !prof !18

assert_fail59:                                    ; preds = %if_then57
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %147(ptr nonnull @.str.440), !dbg !1436
  br label %common.ret

assert_fail61:                                    ; preds = %if_end58
  %148 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %148(ptr nonnull @.str.441), !dbg !1436
  br label %common.ret

assert_end62:                                     ; preds = %if_end58
  %149 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !1436
  %150 = load i32, ptr %149, align 4, !dbg !1436
  %151 = icmp eq i32 %150, 1, !dbg !1436
  br i1 %151, label %assert_end64, label %assert_fail63, !dbg !1436, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %152 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %152(ptr nonnull @.str.442), !dbg !1436
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !1436
  %154 = load i32, ptr %153, align 4, !dbg !1436
  %155 = icmp eq i32 %dev_id, %154, !dbg !1436
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !1436, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %156(ptr nonnull @.str.443), !dbg !1436
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !1436
  %158 = load i32, ptr %157, align 4, !dbg !1436
  %159 = icmp eq i32 %158, 5, !dbg !1436
  br i1 %159, label %assert_end70, label %assert_fail67, !dbg !1436, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %160(ptr nonnull @.str.444), !dbg !1436
  br label %common.ret

assert_end70:                                     ; preds = %assert_end66
  %161 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !1436
  %162 = load i16, ptr %161, align 2, !dbg !1436
  %163 = icmp eq i16 %162, 1, !dbg !1436
  %164 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !1436
  %165 = load i8, ptr %164, align 1, !dbg !1436
  %166 = icmp eq i8 %165, 16, !dbg !1436
  %167 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !1436
  %168 = load i8, ptr %167, align 1, !dbg !1436
  %169 = icmp eq i8 %168, 0, !dbg !1436
  %170 = and i1 %166, %169, !dbg !1436
  %171 = and i1 %163, %170, !dbg !1436
  br i1 %171, label %assert_end72, label %assert_fail71, !dbg !1436, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %172 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %172(ptr nonnull @.str.445), !dbg !1436
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %173 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape, align 8, !dbg !1436, !tbaa !1536
  %174 = and i64 %173, 4294967295, !dbg !1436
  %175 = icmp eq i64 %174, 1, !dbg !1436
  br i1 %175, label %assert_end74, label %assert_fail73, !dbg !1436, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %176 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %176(ptr nonnull @.str.446), !dbg !1436
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %177 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape, i64 1, !dbg !1436
  %178 = load i64, ptr %177, align 8, !dbg !1436, !tbaa !1546
  %179 = and i64 %178, 4294967295, !dbg !1436
  %180 = icmp eq i64 %179, 64, !dbg !1436
  br i1 %180, label %assert_end76, label %assert_fail75, !dbg !1436, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %181(ptr nonnull @.str.447), !dbg !1436
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %182 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape, i64 2, !dbg !1436
  %183 = load i64, ptr %182, align 8, !dbg !1436, !tbaa !1548
  %184 = and i64 %183, 4294967295, !dbg !1436
  %185 = icmp eq i64 %184, 1, !dbg !1436
  br i1 %185, label %assert_end78, label %assert_fail77, !dbg !1436, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %186 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %186(ptr nonnull @.str.448), !dbg !1436
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %187 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape, i64 3, !dbg !1436
  %188 = load i64, ptr %187, align 8, !dbg !1436, !tbaa !1551
  %189 = and i64 %188, 4294967295, !dbg !1436
  %190 = icmp eq i64 %189, 1, !dbg !1436
  br i1 %190, label %assert_end80, label %assert_fail79, !dbg !1436, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %191(ptr nonnull @.str.449), !dbg !1436
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %192 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.shape, i64 4, !dbg !1436
  %193 = load i64, ptr %192, align 8, !dbg !1436, !tbaa !1553
  %194 = and i64 %193, 4294967295, !dbg !1436
  %195 = icmp eq i64 %194, 4, !dbg !1436
  br i1 %195, label %assert_end82, label %assert_fail81, !dbg !1436, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %196 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %196(ptr nonnull @.str.450), !dbg !1436
  br label %common.ret

assert_end82:                                     ; preds = %assert_end80
  %.not150 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.strides, null, !dbg !1436
  br i1 %.not150, label %if_end84, label %if_then83, !dbg !1436, !prof !59

if_then83:                                        ; preds = %assert_end82
  %197 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.strides, i64 1, !dbg !1436
  %198 = load i64, ptr %197, align 8, !dbg !1436, !tbaa !1557
  %199 = and i64 %198, 4294967295, !dbg !1436
  %200 = icmp eq i64 %199, 4, !dbg !1436
  %201 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.p2.strides, i64 4, !dbg !1436
  %202 = load i64, ptr %201, align 8, !dbg !1436, !tbaa !1567
  %203 = and i64 %202, 4294967295, !dbg !1436
  %204 = icmp eq i64 %203, 1, !dbg !1436
  %205 = and i1 %200, %204, !dbg !1436
  br i1 %205, label %if_end84, label %assert_fail85, !dbg !1436, !prof !18

if_end84:                                         ; preds = %if_then83, %assert_end82
  %206 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !1436
  %207 = load i64, ptr %206, align 8, !dbg !1436
  %208 = icmp eq i64 %207, 0, !dbg !1436
  br i1 %208, label %assert_end88, label %assert_fail87, !dbg !1436, !prof !18

assert_fail85:                                    ; preds = %if_then83
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %209(ptr nonnull @.str.451), !dbg !1436
  br label %common.ret

assert_fail87:                                    ; preds = %if_end84
  %210 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %210(ptr nonnull @.str.452), !dbg !1436
  br label %common.ret

assert_end88:                                     ; preds = %if_end84
  %211 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !1436
  %212 = load i32, ptr %211, align 4, !dbg !1436
  %213 = icmp eq i32 %212, 1, !dbg !1436
  br i1 %213, label %assert_end90, label %assert_fail89, !dbg !1436, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %214 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %214(ptr nonnull @.str.453), !dbg !1436
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %215 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !1436
  %216 = load i32, ptr %215, align 4, !dbg !1436
  %217 = icmp eq i32 %dev_id, %216, !dbg !1436
  br i1 %217, label %assert_end92, label %assert_fail91, !dbg !1436, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %218(ptr nonnull @.str.454), !dbg !1436
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %219 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !1436
  %220 = load i32, ptr %219, align 4, !dbg !1436
  %221 = icmp eq i32 %220, 0, !dbg !1436
  br i1 %221, label %assert_end96, label %assert_fail93, !dbg !1436, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %222(ptr nonnull @.str.455), !dbg !1436
  br label %common.ret

assert_end96:                                     ; preds = %assert_end92
  %223 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !1436
  %224 = load i16, ptr %223, align 2, !dbg !1436
  %225 = icmp eq i16 %224, 1, !dbg !1436
  %226 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !1436
  %227 = load i8, ptr %226, align 1, !dbg !1436
  %228 = icmp eq i8 %227, 16, !dbg !1436
  %229 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !1436
  %230 = load i8, ptr %229, align 1, !dbg !1436
  %231 = icmp eq i8 %230, 0, !dbg !1436
  %232 = and i1 %228, %231, !dbg !1436
  %233 = and i1 %225, %232, !dbg !1436
  br i1 %233, label %assert_end98, label %assert_fail97, !dbg !1436, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %234 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %234(ptr nonnull @.str.456), !dbg !1436
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %235 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !1436
  %236 = load i64, ptr %235, align 8, !dbg !1436
  %237 = icmp eq i64 %236, 0, !dbg !1436
  br i1 %237, label %assert_end100, label %assert_fail99, !dbg !1436, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %238 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %238(ptr nonnull @.str.457), !dbg !1436
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %239 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !1436
  %240 = load i32, ptr %239, align 4, !dbg !1436
  %241 = icmp eq i32 %240, 1, !dbg !1436
  br i1 %241, label %assert_end102, label %assert_fail101, !dbg !1436, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %242(ptr nonnull @.str.458), !dbg !1436
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %243 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !1436
  %244 = load i32, ptr %243, align 4, !dbg !1436
  %245 = icmp eq i32 %dev_id, %244, !dbg !1436
  br i1 %245, label %assert_end104, label %assert_fail103, !dbg !1436, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %246(ptr nonnull @.str.459), !dbg !1436
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %247 = getelementptr inbounds %1, ptr %p4, i64 0, i32 2, !dbg !1436
  %248 = load i32, ptr %247, align 4, !dbg !1436
  %249 = icmp eq i32 %248, 0, !dbg !1436
  br i1 %249, label %assert_end108, label %assert_fail105, !dbg !1436, !prof !18

assert_fail105:                                   ; preds = %assert_end104
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %250(ptr nonnull @.str.460), !dbg !1436
  br label %common.ret

assert_end108:                                    ; preds = %assert_end104
  %251 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 2, !dbg !1436
  %252 = load i16, ptr %251, align 2, !dbg !1436
  %253 = icmp eq i16 %252, 1, !dbg !1436
  %254 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 1, !dbg !1436
  %255 = load i8, ptr %254, align 1, !dbg !1436
  %256 = icmp eq i8 %255, 16, !dbg !1436
  %257 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 0, !dbg !1436
  %258 = load i8, ptr %257, align 1, !dbg !1436
  %259 = icmp eq i8 %258, 0, !dbg !1436
  %260 = and i1 %256, %259, !dbg !1436
  %261 = and i1 %253, %260, !dbg !1436
  br i1 %261, label %assert_end110, label %assert_fail109, !dbg !1436, !prof !18

assert_fail109:                                   ; preds = %assert_end108
  %262 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %262(ptr nonnull @.str.461), !dbg !1436
  br label %common.ret

assert_end110:                                    ; preds = %assert_end108
  %263 = getelementptr inbounds %1, ptr %p4, i64 0, i32 6, !dbg !1436
  %264 = load i64, ptr %263, align 8, !dbg !1436
  %265 = icmp eq i64 %264, 0, !dbg !1436
  br i1 %265, label %assert_end112, label %assert_fail111, !dbg !1436, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %266(ptr nonnull @.str.462), !dbg !1436
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %267 = getelementptr inbounds %1, ptr %p4, i64 0, i32 1, i32 0, !dbg !1436
  %268 = load i32, ptr %267, align 4, !dbg !1436
  %269 = icmp eq i32 %268, 1, !dbg !1436
  br i1 %269, label %assert_end114, label %assert_fail113, !dbg !1436, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %270 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %270(ptr nonnull @.str.463), !dbg !1436
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %271 = getelementptr inbounds %1, ptr %p4, i64 0, i32 1, i32 1, !dbg !1436
  %272 = load i32, ptr %271, align 4, !dbg !1436
  %273 = icmp eq i32 %dev_id, %272, !dbg !1436
  br i1 %273, label %assert_end116, label %assert_fail115, !dbg !1436, !prof !18

assert_fail115:                                   ; preds = %assert_end114
  %274 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %274(ptr nonnull @.str.464), !dbg !1436
  br label %common.ret

assert_end116:                                    ; preds = %assert_end114
  %275 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !1436
  %276 = load i32, ptr %275, align 4, !dbg !1436
  %277 = icmp eq i32 %276, 5, !dbg !1436
  br i1 %277, label %assert_end120, label %assert_fail117, !dbg !1436, !prof !18

assert_fail117:                                   ; preds = %assert_end116
  %278 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %278(ptr nonnull @.str.465), !dbg !1436
  br label %common.ret

assert_end120:                                    ; preds = %assert_end116
  %279 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !1436
  %280 = load i16, ptr %279, align 2, !dbg !1436
  %281 = icmp eq i16 %280, 1, !dbg !1436
  %282 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !1436
  %283 = load i8, ptr %282, align 1, !dbg !1436
  %284 = icmp eq i8 %283, 8, !dbg !1436
  %285 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !1436
  %286 = load i8, ptr %285, align 1, !dbg !1436
  %287 = icmp eq i8 %286, 0, !dbg !1436
  %288 = and i1 %284, %287, !dbg !1436
  %289 = and i1 %281, %288, !dbg !1436
  br i1 %289, label %assert_end122, label %assert_fail121, !dbg !1436, !prof !18

assert_fail121:                                   ; preds = %assert_end120
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %290(ptr nonnull @.str.466), !dbg !1436
  br label %common.ret

assert_end122:                                    ; preds = %assert_end120
  %291 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape, align 8, !dbg !1436, !tbaa !1571
  %292 = and i64 %291, 4294967295, !dbg !1436
  %293 = icmp eq i64 %292, 1, !dbg !1436
  br i1 %293, label %assert_end124, label %assert_fail123, !dbg !1436, !prof !18

assert_fail123:                                   ; preds = %assert_end122
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %294(ptr nonnull @.str.467), !dbg !1436
  br label %common.ret

assert_end124:                                    ; preds = %assert_end122
  %295 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape, i64 1, !dbg !1436
  %296 = load i64, ptr %295, align 8, !dbg !1436, !tbaa !1581
  %297 = and i64 %296, 4294967295, !dbg !1436
  %298 = icmp eq i64 %297, 64, !dbg !1436
  br i1 %298, label %assert_end126, label %assert_fail125, !dbg !1436, !prof !18

assert_fail125:                                   ; preds = %assert_end124
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %299(ptr nonnull @.str.468), !dbg !1436
  br label %common.ret

assert_end126:                                    ; preds = %assert_end124
  %300 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape, i64 2, !dbg !1436
  %301 = load i64, ptr %300, align 8, !dbg !1436, !tbaa !1583
  %302 = and i64 %301, 4294967295, !dbg !1436
  %303 = icmp eq i64 %302, 14, !dbg !1436
  br i1 %303, label %assert_end128, label %assert_fail127, !dbg !1436, !prof !18

assert_fail127:                                   ; preds = %assert_end126
  %304 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %304(ptr nonnull @.str.469), !dbg !1436
  br label %common.ret

assert_end128:                                    ; preds = %assert_end126
  %305 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape, i64 3, !dbg !1436
  %306 = load i64, ptr %305, align 8, !dbg !1436, !tbaa !1586
  %307 = and i64 %306, 4294967295, !dbg !1436
  %308 = icmp eq i64 %307, 14, !dbg !1436
  br i1 %308, label %assert_end130, label %assert_fail129, !dbg !1436, !prof !18

assert_fail129:                                   ; preds = %assert_end128
  %309 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %309(ptr nonnull @.str.470), !dbg !1436
  br label %common.ret

assert_end130:                                    ; preds = %assert_end128
  %310 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.shape, i64 4, !dbg !1436
  %311 = load i64, ptr %310, align 8, !dbg !1436, !tbaa !1588
  %312 = and i64 %311, 4294967295, !dbg !1436
  %313 = icmp eq i64 %312, 4, !dbg !1436
  br i1 %313, label %assert_end132, label %assert_fail131, !dbg !1436, !prof !18

assert_fail131:                                   ; preds = %assert_end130
  %314 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %314(ptr nonnull @.str.471), !dbg !1436
  br label %common.ret

assert_end132:                                    ; preds = %assert_end130
  %.not151 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.strides, null, !dbg !1436
  br i1 %.not151, label %if_end134, label %if_then133, !dbg !1436, !prof !59

if_then133:                                       ; preds = %assert_end132
  %315 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.strides, i64 1, !dbg !1436
  %316 = load i64, ptr %315, align 8, !dbg !1436, !tbaa !1592
  %317 = and i64 %316, 4294967295, !dbg !1436
  %318 = icmp eq i64 %317, 784, !dbg !1436
  %319 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.strides, i64 2, !dbg !1436
  %320 = load i64, ptr %319, align 8, !dbg !1436, !tbaa !1602
  %321 = and i64 %320, 4294967295, !dbg !1436
  %322 = icmp eq i64 %321, 56, !dbg !1436
  %323 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.strides, i64 3, !dbg !1436
  %324 = load i64, ptr %323, align 8, !dbg !1436, !tbaa !1605
  %325 = and i64 %324, 4294967295, !dbg !1436
  %326 = icmp eq i64 %325, 4, !dbg !1436
  %327 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4.T_cast.strides, i64 4, !dbg !1436
  %328 = load i64, ptr %327, align 8, !dbg !1436, !tbaa !1607
  %329 = and i64 %328, 4294967295, !dbg !1436
  %330 = icmp eq i64 %329, 1, !dbg !1436
  %331 = and i1 %326, %330, !dbg !1436
  %332 = and i1 %322, %331, !dbg !1436
  %333 = and i1 %318, %332, !dbg !1436
  br i1 %333, label %if_end134, label %assert_fail135, !dbg !1436, !prof !18

if_end134:                                        ; preds = %if_then133, %assert_end132
  %334 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !1436
  %335 = load i64, ptr %334, align 8, !dbg !1436
  %336 = icmp eq i64 %335, 0, !dbg !1436
  br i1 %336, label %assert_end138, label %assert_fail137, !dbg !1436, !prof !18

assert_fail135:                                   ; preds = %if_then133
  %337 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %337(ptr nonnull @.str.472), !dbg !1436
  br label %common.ret

assert_fail137:                                   ; preds = %if_end134
  %338 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %338(ptr nonnull @.str.473), !dbg !1436
  br label %common.ret

assert_end138:                                    ; preds = %if_end134
  %339 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !1436
  %340 = load i32, ptr %339, align 4, !dbg !1436
  %341 = icmp eq i32 %340, 1, !dbg !1436
  br i1 %341, label %assert_end140, label %assert_fail139, !dbg !1436, !prof !18

assert_fail139:                                   ; preds = %assert_end138
  %342 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %342(ptr nonnull @.str.474), !dbg !1436
  br label %common.ret

assert_end140:                                    ; preds = %assert_end138
  %343 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !1436
  %344 = load i32, ptr %343, align 4, !dbg !1436
  %345 = icmp eq i32 %dev_id, %344, !dbg !1436
  br i1 %345, label %assert_end142, label %assert_fail141, !dbg !1436, !prof !18

assert_fail141:                                   ; preds = %assert_end140
  %346 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1436, !tbaa !19
  tail call void %346(ptr nonnull @.str.475), !dbg !1436
  br label %common.ret

assert_end142:                                    ; preds = %assert_end140
  %347 = tail call fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_compute_(ptr %T_cast143, ptr %p0144, ptr %p1145, ptr %p2146, ptr %p3147, ptr %p4148), !dbg !1436
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1611 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1613, metadata !DIExpression()), !dbg !1619
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1614, metadata !DIExpression()), !dbg !1619
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1615, metadata !DIExpression()), !dbg !1619
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1616, metadata !DIExpression()), !dbg !1619
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1617, metadata !DIExpression()), !dbg !1619
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1618, metadata !DIExpression()), !dbg !1619
  %0 = icmp eq i32 %num_args, 6, !dbg !1619
  br i1 %0, label %assert_end, label %assert_fail, !dbg !1619, !prof !18

common.ret:                                       ; preds = %assert_end142, %assert_fail141, %assert_fail139, %assert_fail137, %assert_fail135, %assert_fail131, %assert_fail129, %assert_fail127, %assert_fail125, %assert_fail123, %assert_fail121, %assert_fail117, %assert_fail115, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail105, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail105 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ -1, %assert_fail115 ], [ -1, %assert_fail117 ], [ -1, %assert_fail121 ], [ -1, %assert_fail123 ], [ -1, %assert_fail125 ], [ -1, %assert_fail127 ], [ -1, %assert_fail129 ], [ -1, %assert_fail131 ], [ -1, %assert_fail135 ], [ -1, %assert_fail137 ], [ -1, %assert_fail139 ], [ -1, %assert_fail141 ], [ %347, %assert_end142 ]
  ret i32 %common.ret.op, !dbg !1619

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %1(ptr nonnull @.str.477), !dbg !1619
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1619, !tbaa !1620
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1619
  %p1.code = load i32, ptr %2, align 4, !dbg !1619, !tbaa !1631
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !1619
  %p2.code = load i32, ptr %3, align 4, !dbg !1619, !tbaa !1633
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !1619
  %p3.code = load i32, ptr %4, align 4, !dbg !1619, !tbaa !1636
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !1619
  %p4.code = load i32, ptr %5, align 4, !dbg !1619, !tbaa !1638
  %6 = getelementptr inbounds i32, ptr %arg_type_ids, i64 5, !dbg !1619
  %T_cast.code = load i32, ptr %6, align 4, !dbg !1619, !tbaa !1642
  %p0 = load ptr, ptr %args, align 8, !dbg !1619
  %7 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1619
  %p1 = load ptr, ptr %7, align 8, !dbg !1619
  %8 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !1619
  %p2 = load ptr, ptr %8, align 8, !dbg !1619
  %9 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !1619
  %p3 = load ptr, ptr %9, align 8, !dbg !1619
  %10 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !1619
  %p4 = load ptr, ptr %10, align 8, !dbg !1619
  %11 = getelementptr inbounds %0, ptr %args, i64 5, !dbg !1619
  %T_cast = load ptr, ptr %11, align 8, !dbg !1619
  %p0144 = load ptr, ptr %p0, align 8, !dbg !1619
  call void @llvm.assume(i1 true) [ "align"(ptr %p0144, i64 64) ], !dbg !1619
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1619
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape = load ptr, ptr %12, align 8, !dbg !1619
  %13 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1619
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.strides = load ptr, ptr %13, align 8, !dbg !1619
  %14 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1619
  %dev_id = load i32, ptr %14, align 4, !dbg !1619
  %p1145 = load ptr, ptr %p1, align 8, !dbg !1619
  call void @llvm.assume(i1 true) [ "align"(ptr %p1145, i64 64) ], !dbg !1619
  %15 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !1619
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape = load ptr, ptr %15, align 8, !dbg !1619
  %16 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !1619
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.strides = load ptr, ptr %16, align 8, !dbg !1619
  %p2146 = load ptr, ptr %p2, align 8, !dbg !1619
  call void @llvm.assume(i1 true) [ "align"(ptr %p2146, i64 64) ], !dbg !1619
  %17 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !1619
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape = load ptr, ptr %17, align 8, !dbg !1619
  %18 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !1619
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.strides = load ptr, ptr %18, align 8, !dbg !1619
  %p3147 = load ptr, ptr %p3, align 8, !dbg !1619
  call void @llvm.assume(i1 true) [ "align"(ptr %p3147, i64 64) ], !dbg !1619
  %p4148 = load ptr, ptr %p4, align 8, !dbg !1619
  call void @llvm.assume(i1 true) [ "align"(ptr %p4148, i64 64) ], !dbg !1619
  %T_cast143 = load ptr, ptr %T_cast, align 8, !dbg !1619
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast143, i64 64) ], !dbg !1619
  %19 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !1619
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape = load ptr, ptr %19, align 8, !dbg !1619
  %20 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !1619
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.strides = load ptr, ptr %20, align 8, !dbg !1619
  switch i32 %p0.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !1619

assert_fail7:                                     ; preds = %assert_end
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %21(ptr nonnull @.str.478), !dbg !1619
  br label %common.ret

assert_end8:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !1619

assert_fail9:                                     ; preds = %assert_end8
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %22(ptr nonnull @.str.479), !dbg !1619
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %p2.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !1619

assert_fail11:                                    ; preds = %assert_end10
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %23(ptr nonnull @.str.480), !dbg !1619
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  switch i32 %p3.code, label %assert_fail13 [
    i32 13, label %assert_end14
    i32 7, label %assert_end14
    i32 4, label %assert_end14
    i32 3, label %assert_end14
  ], !dbg !1619

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %24(ptr nonnull @.str.481), !dbg !1619
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12, %assert_end12, %assert_end12, %assert_end12
  switch i32 %p4.code, label %assert_fail15 [
    i32 13, label %assert_end16
    i32 7, label %assert_end16
    i32 4, label %assert_end16
    i32 3, label %assert_end16
  ], !dbg !1619

assert_fail15:                                    ; preds = %assert_end14
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %25(ptr nonnull @.str.482), !dbg !1619
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14, %assert_end14, %assert_end14, %assert_end14
  switch i32 %T_cast.code, label %assert_fail17 [
    i32 13, label %assert_end18
    i32 7, label %assert_end18
    i32 4, label %assert_end18
    i32 3, label %assert_end18
  ], !dbg !1619

assert_fail17:                                    ; preds = %assert_end16
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %26(ptr nonnull @.str.483), !dbg !1619
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16, %assert_end16, %assert_end16, %assert_end16
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1619
  %28 = load i32, ptr %27, align 4, !dbg !1619
  %29 = icmp eq i32 %28, 5, !dbg !1619
  br i1 %29, label %assert_end22, label %assert_fail19, !dbg !1619, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %30(ptr nonnull @.str.484), !dbg !1619
  br label %common.ret

assert_end22:                                     ; preds = %assert_end18
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1619
  %32 = load i16, ptr %31, align 2, !dbg !1619
  %33 = icmp eq i16 %32, 1, !dbg !1619
  %34 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1619
  %35 = load i8, ptr %34, align 1, !dbg !1619
  %36 = icmp eq i8 %35, 8, !dbg !1619
  %37 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1619
  %38 = load i8, ptr %37, align 1, !dbg !1619
  %39 = icmp eq i8 %38, 0, !dbg !1619
  %40 = and i1 %36, %39, !dbg !1619
  %41 = and i1 %33, %40, !dbg !1619
  br i1 %41, label %assert_end24, label %assert_fail23, !dbg !1619, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %42 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %42(ptr nonnull @.str.485), !dbg !1619
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %43 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape, align 8, !dbg !1619, !tbaa !1644
  %44 = and i64 %43, 4294967295, !dbg !1619
  %45 = icmp eq i64 %44, 1, !dbg !1619
  br i1 %45, label %assert_end26, label %assert_fail25, !dbg !1619, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %46(ptr nonnull @.str.486), !dbg !1619
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape, i64 1, !dbg !1619
  %48 = load i64, ptr %47, align 8, !dbg !1619, !tbaa !1654
  %49 = and i64 %48, 4294967295, !dbg !1619
  %50 = icmp eq i64 %49, 128, !dbg !1619
  br i1 %50, label %assert_end28, label %assert_fail27, !dbg !1619, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %51(ptr nonnull @.str.487), !dbg !1619
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape, i64 2, !dbg !1619
  %53 = load i64, ptr %52, align 8, !dbg !1619, !tbaa !1656
  %54 = and i64 %53, 4294967295, !dbg !1619
  %55 = icmp eq i64 %54, 14, !dbg !1619
  br i1 %55, label %assert_end30, label %assert_fail29, !dbg !1619, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %56(ptr nonnull @.str.488), !dbg !1619
  br label %common.ret

assert_end30:                                     ; preds = %assert_end28
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape, i64 3, !dbg !1619
  %58 = load i64, ptr %57, align 8, !dbg !1619, !tbaa !1659
  %59 = and i64 %58, 4294967295, !dbg !1619
  %60 = icmp eq i64 %59, 14, !dbg !1619
  br i1 %60, label %assert_end32, label %assert_fail31, !dbg !1619, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %61(ptr nonnull @.str.489), !dbg !1619
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.shape, i64 4, !dbg !1619
  %63 = load i64, ptr %62, align 8, !dbg !1619, !tbaa !1661
  %64 = and i64 %63, 4294967295, !dbg !1619
  %65 = icmp eq i64 %64, 4, !dbg !1619
  br i1 %65, label %assert_end34, label %assert_fail33, !dbg !1619, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %66 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %66(ptr nonnull @.str.490), !dbg !1619
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.strides, null, !dbg !1619
  br i1 %.not, label %if_end, label %if_then, !dbg !1619, !prof !59

if_then:                                          ; preds = %assert_end34
  %67 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.strides, i64 1, !dbg !1619
  %68 = load i64, ptr %67, align 8, !dbg !1619, !tbaa !1665
  %69 = and i64 %68, 4294967295, !dbg !1619
  %70 = icmp eq i64 %69, 784, !dbg !1619
  %71 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.strides, i64 2, !dbg !1619
  %72 = load i64, ptr %71, align 8, !dbg !1619, !tbaa !1675
  %73 = and i64 %72, 4294967295, !dbg !1619
  %74 = icmp eq i64 %73, 56, !dbg !1619
  %75 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.strides, i64 3, !dbg !1619
  %76 = load i64, ptr %75, align 8, !dbg !1619, !tbaa !1678
  %77 = and i64 %76, 4294967295, !dbg !1619
  %78 = icmp eq i64 %77, 4, !dbg !1619
  %79 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p0.strides, i64 4, !dbg !1619
  %80 = load i64, ptr %79, align 8, !dbg !1619, !tbaa !1680
  %81 = and i64 %80, 4294967295, !dbg !1619
  %82 = icmp eq i64 %81, 1, !dbg !1619
  %83 = and i1 %78, %82, !dbg !1619
  %84 = and i1 %74, %83, !dbg !1619
  %85 = and i1 %70, %84, !dbg !1619
  br i1 %85, label %if_end, label %assert_fail35, !dbg !1619, !prof !18

if_end:                                           ; preds = %if_then, %assert_end34
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1619
  %87 = load i64, ptr %86, align 8, !dbg !1619
  %88 = icmp eq i64 %87, 0, !dbg !1619
  br i1 %88, label %assert_end38, label %assert_fail37, !dbg !1619, !prof !18

assert_fail35:                                    ; preds = %if_then
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %89(ptr nonnull @.str.491), !dbg !1619
  br label %common.ret

assert_fail37:                                    ; preds = %if_end
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %90(ptr nonnull @.str.492), !dbg !1619
  br label %common.ret

assert_end38:                                     ; preds = %if_end
  %91 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1619
  %92 = load i32, ptr %91, align 4, !dbg !1619
  %93 = icmp eq i32 %92, 1, !dbg !1619
  br i1 %93, label %assert_end40, label %assert_fail39, !dbg !1619, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %94(ptr nonnull @.str.493), !dbg !1619
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %95 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !1619
  %96 = load i32, ptr %95, align 4, !dbg !1619
  %97 = icmp eq i32 %96, 5, !dbg !1619
  br i1 %97, label %assert_end44, label %assert_fail41, !dbg !1619, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %98(ptr nonnull @.str.494), !dbg !1619
  br label %common.ret

assert_end44:                                     ; preds = %assert_end40
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !1619
  %100 = load i16, ptr %99, align 2, !dbg !1619
  %101 = icmp eq i16 %100, 1, !dbg !1619
  %102 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !1619
  %103 = load i8, ptr %102, align 1, !dbg !1619
  %104 = icmp eq i8 %103, 16, !dbg !1619
  %105 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !1619
  %106 = load i8, ptr %105, align 1, !dbg !1619
  %107 = icmp eq i8 %106, 0, !dbg !1619
  %108 = and i1 %104, %107, !dbg !1619
  %109 = and i1 %101, %108, !dbg !1619
  br i1 %109, label %assert_end46, label %assert_fail45, !dbg !1619, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %110 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %110(ptr nonnull @.str.495), !dbg !1619
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %111 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape, align 8, !dbg !1619, !tbaa !1684
  %112 = and i64 %111, 4294967295, !dbg !1619
  %113 = icmp eq i64 %112, 1, !dbg !1619
  br i1 %113, label %assert_end48, label %assert_fail47, !dbg !1619, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %114(ptr nonnull @.str.496), !dbg !1619
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape, i64 1, !dbg !1619
  %116 = load i64, ptr %115, align 8, !dbg !1619, !tbaa !1694
  %117 = and i64 %116, 4294967295, !dbg !1619
  %118 = icmp eq i64 %117, 128, !dbg !1619
  br i1 %118, label %assert_end50, label %assert_fail49, !dbg !1619, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %119(ptr nonnull @.str.497), !dbg !1619
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape, i64 2, !dbg !1619
  %121 = load i64, ptr %120, align 8, !dbg !1619, !tbaa !1696
  %122 = and i64 %121, 4294967295, !dbg !1619
  %123 = icmp eq i64 %122, 1, !dbg !1619
  br i1 %123, label %assert_end52, label %assert_fail51, !dbg !1619, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %124(ptr nonnull @.str.498), !dbg !1619
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape, i64 3, !dbg !1619
  %126 = load i64, ptr %125, align 8, !dbg !1619, !tbaa !1699
  %127 = and i64 %126, 4294967295, !dbg !1619
  %128 = icmp eq i64 %127, 1, !dbg !1619
  br i1 %128, label %assert_end54, label %assert_fail53, !dbg !1619, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %129(ptr nonnull @.str.499), !dbg !1619
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.shape, i64 4, !dbg !1619
  %131 = load i64, ptr %130, align 8, !dbg !1619, !tbaa !1701
  %132 = and i64 %131, 4294967295, !dbg !1619
  %133 = icmp eq i64 %132, 4, !dbg !1619
  br i1 %133, label %assert_end56, label %assert_fail55, !dbg !1619, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %134(ptr nonnull @.str.500), !dbg !1619
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %.not149 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.strides, null, !dbg !1619
  br i1 %.not149, label %if_end58, label %if_then57, !dbg !1619, !prof !59

if_then57:                                        ; preds = %assert_end56
  %135 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.strides, i64 1, !dbg !1619
  %136 = load i64, ptr %135, align 8, !dbg !1619, !tbaa !1705
  %137 = and i64 %136, 4294967295, !dbg !1619
  %138 = icmp eq i64 %137, 4, !dbg !1619
  %139 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p1.strides, i64 4, !dbg !1619
  %140 = load i64, ptr %139, align 8, !dbg !1619, !tbaa !1715
  %141 = and i64 %140, 4294967295, !dbg !1619
  %142 = icmp eq i64 %141, 1, !dbg !1619
  %143 = and i1 %138, %142, !dbg !1619
  br i1 %143, label %if_end58, label %assert_fail59, !dbg !1619, !prof !18

if_end58:                                         ; preds = %if_then57, %assert_end56
  %144 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !1619
  %145 = load i64, ptr %144, align 8, !dbg !1619
  %146 = icmp eq i64 %145, 0, !dbg !1619
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !1619, !prof !18

assert_fail59:                                    ; preds = %if_then57
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %147(ptr nonnull @.str.501), !dbg !1619
  br label %common.ret

assert_fail61:                                    ; preds = %if_end58
  %148 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %148(ptr nonnull @.str.502), !dbg !1619
  br label %common.ret

assert_end62:                                     ; preds = %if_end58
  %149 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !1619
  %150 = load i32, ptr %149, align 4, !dbg !1619
  %151 = icmp eq i32 %150, 1, !dbg !1619
  br i1 %151, label %assert_end64, label %assert_fail63, !dbg !1619, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %152 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %152(ptr nonnull @.str.503), !dbg !1619
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !1619
  %154 = load i32, ptr %153, align 4, !dbg !1619
  %155 = icmp eq i32 %dev_id, %154, !dbg !1619
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !1619, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %156(ptr nonnull @.str.504), !dbg !1619
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !1619
  %158 = load i32, ptr %157, align 4, !dbg !1619
  %159 = icmp eq i32 %158, 5, !dbg !1619
  br i1 %159, label %assert_end70, label %assert_fail67, !dbg !1619, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %160(ptr nonnull @.str.505), !dbg !1619
  br label %common.ret

assert_end70:                                     ; preds = %assert_end66
  %161 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !1619
  %162 = load i16, ptr %161, align 2, !dbg !1619
  %163 = icmp eq i16 %162, 1, !dbg !1619
  %164 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !1619
  %165 = load i8, ptr %164, align 1, !dbg !1619
  %166 = icmp eq i8 %165, 16, !dbg !1619
  %167 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !1619
  %168 = load i8, ptr %167, align 1, !dbg !1619
  %169 = icmp eq i8 %168, 0, !dbg !1619
  %170 = and i1 %166, %169, !dbg !1619
  %171 = and i1 %163, %170, !dbg !1619
  br i1 %171, label %assert_end72, label %assert_fail71, !dbg !1619, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %172 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %172(ptr nonnull @.str.506), !dbg !1619
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %173 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape, align 8, !dbg !1619, !tbaa !1719
  %174 = and i64 %173, 4294967295, !dbg !1619
  %175 = icmp eq i64 %174, 1, !dbg !1619
  br i1 %175, label %assert_end74, label %assert_fail73, !dbg !1619, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %176 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %176(ptr nonnull @.str.507), !dbg !1619
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %177 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape, i64 1, !dbg !1619
  %178 = load i64, ptr %177, align 8, !dbg !1619, !tbaa !1729
  %179 = and i64 %178, 4294967295, !dbg !1619
  %180 = icmp eq i64 %179, 128, !dbg !1619
  br i1 %180, label %assert_end76, label %assert_fail75, !dbg !1619, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %181(ptr nonnull @.str.508), !dbg !1619
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %182 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape, i64 2, !dbg !1619
  %183 = load i64, ptr %182, align 8, !dbg !1619, !tbaa !1731
  %184 = and i64 %183, 4294967295, !dbg !1619
  %185 = icmp eq i64 %184, 1, !dbg !1619
  br i1 %185, label %assert_end78, label %assert_fail77, !dbg !1619, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %186 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %186(ptr nonnull @.str.509), !dbg !1619
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %187 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape, i64 3, !dbg !1619
  %188 = load i64, ptr %187, align 8, !dbg !1619, !tbaa !1734
  %189 = and i64 %188, 4294967295, !dbg !1619
  %190 = icmp eq i64 %189, 1, !dbg !1619
  br i1 %190, label %assert_end80, label %assert_fail79, !dbg !1619, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %191(ptr nonnull @.str.510), !dbg !1619
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %192 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.shape, i64 4, !dbg !1619
  %193 = load i64, ptr %192, align 8, !dbg !1619, !tbaa !1736
  %194 = and i64 %193, 4294967295, !dbg !1619
  %195 = icmp eq i64 %194, 4, !dbg !1619
  br i1 %195, label %assert_end82, label %assert_fail81, !dbg !1619, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %196 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %196(ptr nonnull @.str.511), !dbg !1619
  br label %common.ret

assert_end82:                                     ; preds = %assert_end80
  %.not150 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.strides, null, !dbg !1619
  br i1 %.not150, label %if_end84, label %if_then83, !dbg !1619, !prof !59

if_then83:                                        ; preds = %assert_end82
  %197 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.strides, i64 1, !dbg !1619
  %198 = load i64, ptr %197, align 8, !dbg !1619, !tbaa !1740
  %199 = and i64 %198, 4294967295, !dbg !1619
  %200 = icmp eq i64 %199, 4, !dbg !1619
  %201 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.p2.strides, i64 4, !dbg !1619
  %202 = load i64, ptr %201, align 8, !dbg !1619, !tbaa !1750
  %203 = and i64 %202, 4294967295, !dbg !1619
  %204 = icmp eq i64 %203, 1, !dbg !1619
  %205 = and i1 %200, %204, !dbg !1619
  br i1 %205, label %if_end84, label %assert_fail85, !dbg !1619, !prof !18

if_end84:                                         ; preds = %if_then83, %assert_end82
  %206 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !1619
  %207 = load i64, ptr %206, align 8, !dbg !1619
  %208 = icmp eq i64 %207, 0, !dbg !1619
  br i1 %208, label %assert_end88, label %assert_fail87, !dbg !1619, !prof !18

assert_fail85:                                    ; preds = %if_then83
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %209(ptr nonnull @.str.512), !dbg !1619
  br label %common.ret

assert_fail87:                                    ; preds = %if_end84
  %210 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %210(ptr nonnull @.str.513), !dbg !1619
  br label %common.ret

assert_end88:                                     ; preds = %if_end84
  %211 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !1619
  %212 = load i32, ptr %211, align 4, !dbg !1619
  %213 = icmp eq i32 %212, 1, !dbg !1619
  br i1 %213, label %assert_end90, label %assert_fail89, !dbg !1619, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %214 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %214(ptr nonnull @.str.514), !dbg !1619
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %215 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !1619
  %216 = load i32, ptr %215, align 4, !dbg !1619
  %217 = icmp eq i32 %dev_id, %216, !dbg !1619
  br i1 %217, label %assert_end92, label %assert_fail91, !dbg !1619, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %218(ptr nonnull @.str.515), !dbg !1619
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %219 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !1619
  %220 = load i32, ptr %219, align 4, !dbg !1619
  %221 = icmp eq i32 %220, 0, !dbg !1619
  br i1 %221, label %assert_end96, label %assert_fail93, !dbg !1619, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %222(ptr nonnull @.str.516), !dbg !1619
  br label %common.ret

assert_end96:                                     ; preds = %assert_end92
  %223 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !1619
  %224 = load i16, ptr %223, align 2, !dbg !1619
  %225 = icmp eq i16 %224, 1, !dbg !1619
  %226 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !1619
  %227 = load i8, ptr %226, align 1, !dbg !1619
  %228 = icmp eq i8 %227, 16, !dbg !1619
  %229 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !1619
  %230 = load i8, ptr %229, align 1, !dbg !1619
  %231 = icmp eq i8 %230, 0, !dbg !1619
  %232 = and i1 %228, %231, !dbg !1619
  %233 = and i1 %225, %232, !dbg !1619
  br i1 %233, label %assert_end98, label %assert_fail97, !dbg !1619, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %234 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %234(ptr nonnull @.str.517), !dbg !1619
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %235 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !1619
  %236 = load i64, ptr %235, align 8, !dbg !1619
  %237 = icmp eq i64 %236, 0, !dbg !1619
  br i1 %237, label %assert_end100, label %assert_fail99, !dbg !1619, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %238 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %238(ptr nonnull @.str.518), !dbg !1619
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %239 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !1619
  %240 = load i32, ptr %239, align 4, !dbg !1619
  %241 = icmp eq i32 %240, 1, !dbg !1619
  br i1 %241, label %assert_end102, label %assert_fail101, !dbg !1619, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %242(ptr nonnull @.str.519), !dbg !1619
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %243 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !1619
  %244 = load i32, ptr %243, align 4, !dbg !1619
  %245 = icmp eq i32 %dev_id, %244, !dbg !1619
  br i1 %245, label %assert_end104, label %assert_fail103, !dbg !1619, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %246(ptr nonnull @.str.520), !dbg !1619
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %247 = getelementptr inbounds %1, ptr %p4, i64 0, i32 2, !dbg !1619
  %248 = load i32, ptr %247, align 4, !dbg !1619
  %249 = icmp eq i32 %248, 0, !dbg !1619
  br i1 %249, label %assert_end108, label %assert_fail105, !dbg !1619, !prof !18

assert_fail105:                                   ; preds = %assert_end104
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %250(ptr nonnull @.str.521), !dbg !1619
  br label %common.ret

assert_end108:                                    ; preds = %assert_end104
  %251 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 2, !dbg !1619
  %252 = load i16, ptr %251, align 2, !dbg !1619
  %253 = icmp eq i16 %252, 1, !dbg !1619
  %254 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 1, !dbg !1619
  %255 = load i8, ptr %254, align 1, !dbg !1619
  %256 = icmp eq i8 %255, 16, !dbg !1619
  %257 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 0, !dbg !1619
  %258 = load i8, ptr %257, align 1, !dbg !1619
  %259 = icmp eq i8 %258, 0, !dbg !1619
  %260 = and i1 %256, %259, !dbg !1619
  %261 = and i1 %253, %260, !dbg !1619
  br i1 %261, label %assert_end110, label %assert_fail109, !dbg !1619, !prof !18

assert_fail109:                                   ; preds = %assert_end108
  %262 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %262(ptr nonnull @.str.522), !dbg !1619
  br label %common.ret

assert_end110:                                    ; preds = %assert_end108
  %263 = getelementptr inbounds %1, ptr %p4, i64 0, i32 6, !dbg !1619
  %264 = load i64, ptr %263, align 8, !dbg !1619
  %265 = icmp eq i64 %264, 0, !dbg !1619
  br i1 %265, label %assert_end112, label %assert_fail111, !dbg !1619, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %266(ptr nonnull @.str.523), !dbg !1619
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %267 = getelementptr inbounds %1, ptr %p4, i64 0, i32 1, i32 0, !dbg !1619
  %268 = load i32, ptr %267, align 4, !dbg !1619
  %269 = icmp eq i32 %268, 1, !dbg !1619
  br i1 %269, label %assert_end114, label %assert_fail113, !dbg !1619, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %270 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %270(ptr nonnull @.str.524), !dbg !1619
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %271 = getelementptr inbounds %1, ptr %p4, i64 0, i32 1, i32 1, !dbg !1619
  %272 = load i32, ptr %271, align 4, !dbg !1619
  %273 = icmp eq i32 %dev_id, %272, !dbg !1619
  br i1 %273, label %assert_end116, label %assert_fail115, !dbg !1619, !prof !18

assert_fail115:                                   ; preds = %assert_end114
  %274 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %274(ptr nonnull @.str.525), !dbg !1619
  br label %common.ret

assert_end116:                                    ; preds = %assert_end114
  %275 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !1619
  %276 = load i32, ptr %275, align 4, !dbg !1619
  %277 = icmp eq i32 %276, 5, !dbg !1619
  br i1 %277, label %assert_end120, label %assert_fail117, !dbg !1619, !prof !18

assert_fail117:                                   ; preds = %assert_end116
  %278 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %278(ptr nonnull @.str.526), !dbg !1619
  br label %common.ret

assert_end120:                                    ; preds = %assert_end116
  %279 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !1619
  %280 = load i16, ptr %279, align 2, !dbg !1619
  %281 = icmp eq i16 %280, 1, !dbg !1619
  %282 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !1619
  %283 = load i8, ptr %282, align 1, !dbg !1619
  %284 = icmp eq i8 %283, 8, !dbg !1619
  %285 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !1619
  %286 = load i8, ptr %285, align 1, !dbg !1619
  %287 = icmp eq i8 %286, 0, !dbg !1619
  %288 = and i1 %284, %287, !dbg !1619
  %289 = and i1 %281, %288, !dbg !1619
  br i1 %289, label %assert_end122, label %assert_fail121, !dbg !1619, !prof !18

assert_fail121:                                   ; preds = %assert_end120
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %290(ptr nonnull @.str.527), !dbg !1619
  br label %common.ret

assert_end122:                                    ; preds = %assert_end120
  %291 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape, align 8, !dbg !1619, !tbaa !1754
  %292 = and i64 %291, 4294967295, !dbg !1619
  %293 = icmp eq i64 %292, 1, !dbg !1619
  br i1 %293, label %assert_end124, label %assert_fail123, !dbg !1619, !prof !18

assert_fail123:                                   ; preds = %assert_end122
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %294(ptr nonnull @.str.528), !dbg !1619
  br label %common.ret

assert_end124:                                    ; preds = %assert_end122
  %295 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape, i64 1, !dbg !1619
  %296 = load i64, ptr %295, align 8, !dbg !1619, !tbaa !1764
  %297 = and i64 %296, 4294967295, !dbg !1619
  %298 = icmp eq i64 %297, 128, !dbg !1619
  br i1 %298, label %assert_end126, label %assert_fail125, !dbg !1619, !prof !18

assert_fail125:                                   ; preds = %assert_end124
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %299(ptr nonnull @.str.529), !dbg !1619
  br label %common.ret

assert_end126:                                    ; preds = %assert_end124
  %300 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape, i64 2, !dbg !1619
  %301 = load i64, ptr %300, align 8, !dbg !1619, !tbaa !1766
  %302 = and i64 %301, 4294967295, !dbg !1619
  %303 = icmp eq i64 %302, 14, !dbg !1619
  br i1 %303, label %assert_end128, label %assert_fail127, !dbg !1619, !prof !18

assert_fail127:                                   ; preds = %assert_end126
  %304 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %304(ptr nonnull @.str.530), !dbg !1619
  br label %common.ret

assert_end128:                                    ; preds = %assert_end126
  %305 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape, i64 3, !dbg !1619
  %306 = load i64, ptr %305, align 8, !dbg !1619, !tbaa !1769
  %307 = and i64 %306, 4294967295, !dbg !1619
  %308 = icmp eq i64 %307, 14, !dbg !1619
  br i1 %308, label %assert_end130, label %assert_fail129, !dbg !1619, !prof !18

assert_fail129:                                   ; preds = %assert_end128
  %309 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %309(ptr nonnull @.str.531), !dbg !1619
  br label %common.ret

assert_end130:                                    ; preds = %assert_end128
  %310 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.shape, i64 4, !dbg !1619
  %311 = load i64, ptr %310, align 8, !dbg !1619, !tbaa !1771
  %312 = and i64 %311, 4294967295, !dbg !1619
  %313 = icmp eq i64 %312, 4, !dbg !1619
  br i1 %313, label %assert_end132, label %assert_fail131, !dbg !1619, !prof !18

assert_fail131:                                   ; preds = %assert_end130
  %314 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %314(ptr nonnull @.str.532), !dbg !1619
  br label %common.ret

assert_end132:                                    ; preds = %assert_end130
  %.not151 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.strides, null, !dbg !1619
  br i1 %.not151, label %if_end134, label %if_then133, !dbg !1619, !prof !59

if_then133:                                       ; preds = %assert_end132
  %315 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.strides, i64 1, !dbg !1619
  %316 = load i64, ptr %315, align 8, !dbg !1619, !tbaa !1775
  %317 = and i64 %316, 4294967295, !dbg !1619
  %318 = icmp eq i64 %317, 784, !dbg !1619
  %319 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.strides, i64 2, !dbg !1619
  %320 = load i64, ptr %319, align 8, !dbg !1619, !tbaa !1785
  %321 = and i64 %320, 4294967295, !dbg !1619
  %322 = icmp eq i64 %321, 56, !dbg !1619
  %323 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.strides, i64 3, !dbg !1619
  %324 = load i64, ptr %323, align 8, !dbg !1619, !tbaa !1788
  %325 = and i64 %324, 4294967295, !dbg !1619
  %326 = icmp eq i64 %325, 4, !dbg !1619
  %327 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5.T_cast.strides, i64 4, !dbg !1619
  %328 = load i64, ptr %327, align 8, !dbg !1619, !tbaa !1790
  %329 = and i64 %328, 4294967295, !dbg !1619
  %330 = icmp eq i64 %329, 1, !dbg !1619
  %331 = and i1 %326, %330, !dbg !1619
  %332 = and i1 %322, %331, !dbg !1619
  %333 = and i1 %318, %332, !dbg !1619
  br i1 %333, label %if_end134, label %assert_fail135, !dbg !1619, !prof !18

if_end134:                                        ; preds = %if_then133, %assert_end132
  %334 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !1619
  %335 = load i64, ptr %334, align 8, !dbg !1619
  %336 = icmp eq i64 %335, 0, !dbg !1619
  br i1 %336, label %assert_end138, label %assert_fail137, !dbg !1619, !prof !18

assert_fail135:                                   ; preds = %if_then133
  %337 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %337(ptr nonnull @.str.533), !dbg !1619
  br label %common.ret

assert_fail137:                                   ; preds = %if_end134
  %338 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %338(ptr nonnull @.str.534), !dbg !1619
  br label %common.ret

assert_end138:                                    ; preds = %if_end134
  %339 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !1619
  %340 = load i32, ptr %339, align 4, !dbg !1619
  %341 = icmp eq i32 %340, 1, !dbg !1619
  br i1 %341, label %assert_end140, label %assert_fail139, !dbg !1619, !prof !18

assert_fail139:                                   ; preds = %assert_end138
  %342 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %342(ptr nonnull @.str.535), !dbg !1619
  br label %common.ret

assert_end140:                                    ; preds = %assert_end138
  %343 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !1619
  %344 = load i32, ptr %343, align 4, !dbg !1619
  %345 = icmp eq i32 %dev_id, %344, !dbg !1619
  br i1 %345, label %assert_end142, label %assert_fail141, !dbg !1619, !prof !18

assert_fail141:                                   ; preds = %assert_end140
  %346 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1619, !tbaa !19
  tail call void %346(ptr nonnull @.str.536), !dbg !1619
  br label %common.ret

assert_end142:                                    ; preds = %assert_end140
  %347 = tail call fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_compute_(ptr %T_cast143, ptr %p0144, ptr %p1145, ptr %p2146, ptr %p3147, ptr %p4148), !dbg !1619
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1794 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1796, metadata !DIExpression()), !dbg !1802
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1797, metadata !DIExpression()), !dbg !1802
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1798, metadata !DIExpression()), !dbg !1802
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1799, metadata !DIExpression()), !dbg !1802
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1800, metadata !DIExpression()), !dbg !1802
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1801, metadata !DIExpression()), !dbg !1802
  %0 = icmp eq i32 %num_args, 6, !dbg !1802
  br i1 %0, label %assert_end, label %assert_fail, !dbg !1802, !prof !18

common.ret:                                       ; preds = %assert_end142, %assert_fail141, %assert_fail139, %assert_fail137, %assert_fail135, %assert_fail131, %assert_fail129, %assert_fail127, %assert_fail125, %assert_fail123, %assert_fail121, %assert_fail117, %assert_fail115, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail105, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail81, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail105 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ -1, %assert_fail115 ], [ -1, %assert_fail117 ], [ -1, %assert_fail121 ], [ -1, %assert_fail123 ], [ -1, %assert_fail125 ], [ -1, %assert_fail127 ], [ -1, %assert_fail129 ], [ -1, %assert_fail131 ], [ -1, %assert_fail135 ], [ -1, %assert_fail137 ], [ -1, %assert_fail139 ], [ -1, %assert_fail141 ], [ %347, %assert_end142 ]
  ret i32 %common.ret.op, !dbg !1802

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %1(ptr nonnull @.str.538), !dbg !1802
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1802, !tbaa !1803
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1802
  %p1.code = load i32, ptr %2, align 4, !dbg !1802, !tbaa !1814
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !1802
  %p2.code = load i32, ptr %3, align 4, !dbg !1802, !tbaa !1816
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !1802
  %p3.code = load i32, ptr %4, align 4, !dbg !1802, !tbaa !1819
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !1802
  %p4.code = load i32, ptr %5, align 4, !dbg !1802, !tbaa !1821
  %6 = getelementptr inbounds i32, ptr %arg_type_ids, i64 5, !dbg !1802
  %T_cast.code = load i32, ptr %6, align 4, !dbg !1802, !tbaa !1825
  %p0 = load ptr, ptr %args, align 8, !dbg !1802
  %7 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1802
  %p1 = load ptr, ptr %7, align 8, !dbg !1802
  %8 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !1802
  %p2 = load ptr, ptr %8, align 8, !dbg !1802
  %9 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !1802
  %p3 = load ptr, ptr %9, align 8, !dbg !1802
  %10 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !1802
  %p4 = load ptr, ptr %10, align 8, !dbg !1802
  %11 = getelementptr inbounds %0, ptr %args, i64 5, !dbg !1802
  %T_cast = load ptr, ptr %11, align 8, !dbg !1802
  %p0144 = load ptr, ptr %p0, align 8, !dbg !1802
  call void @llvm.assume(i1 true) [ "align"(ptr %p0144, i64 64) ], !dbg !1802
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1802
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape = load ptr, ptr %12, align 8, !dbg !1802
  %13 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1802
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.strides = load ptr, ptr %13, align 8, !dbg !1802
  %14 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1802
  %dev_id = load i32, ptr %14, align 4, !dbg !1802
  %p1145 = load ptr, ptr %p1, align 8, !dbg !1802
  call void @llvm.assume(i1 true) [ "align"(ptr %p1145, i64 64) ], !dbg !1802
  %15 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !1802
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape = load ptr, ptr %15, align 8, !dbg !1802
  %16 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !1802
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.strides = load ptr, ptr %16, align 8, !dbg !1802
  %p2146 = load ptr, ptr %p2, align 8, !dbg !1802
  call void @llvm.assume(i1 true) [ "align"(ptr %p2146, i64 64) ], !dbg !1802
  %17 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !1802
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape = load ptr, ptr %17, align 8, !dbg !1802
  %18 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !1802
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.strides = load ptr, ptr %18, align 8, !dbg !1802
  %p3147 = load ptr, ptr %p3, align 8, !dbg !1802
  call void @llvm.assume(i1 true) [ "align"(ptr %p3147, i64 64) ], !dbg !1802
  %p4148 = load ptr, ptr %p4, align 8, !dbg !1802
  call void @llvm.assume(i1 true) [ "align"(ptr %p4148, i64 64) ], !dbg !1802
  %T_cast143 = load ptr, ptr %T_cast, align 8, !dbg !1802
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast143, i64 64) ], !dbg !1802
  %19 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !1802
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape = load ptr, ptr %19, align 8, !dbg !1802
  %20 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !1802
  %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.strides = load ptr, ptr %20, align 8, !dbg !1802
  switch i32 %p0.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !1802

assert_fail7:                                     ; preds = %assert_end
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %21(ptr nonnull @.str.539), !dbg !1802
  br label %common.ret

assert_end8:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !1802

assert_fail9:                                     ; preds = %assert_end8
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %22(ptr nonnull @.str.540), !dbg !1802
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %p2.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !1802

assert_fail11:                                    ; preds = %assert_end10
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %23(ptr nonnull @.str.541), !dbg !1802
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  switch i32 %p3.code, label %assert_fail13 [
    i32 13, label %assert_end14
    i32 7, label %assert_end14
    i32 4, label %assert_end14
    i32 3, label %assert_end14
  ], !dbg !1802

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %24(ptr nonnull @.str.542), !dbg !1802
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12, %assert_end12, %assert_end12, %assert_end12
  switch i32 %p4.code, label %assert_fail15 [
    i32 13, label %assert_end16
    i32 7, label %assert_end16
    i32 4, label %assert_end16
    i32 3, label %assert_end16
  ], !dbg !1802

assert_fail15:                                    ; preds = %assert_end14
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %25(ptr nonnull @.str.543), !dbg !1802
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14, %assert_end14, %assert_end14, %assert_end14
  switch i32 %T_cast.code, label %assert_fail17 [
    i32 13, label %assert_end18
    i32 7, label %assert_end18
    i32 4, label %assert_end18
    i32 3, label %assert_end18
  ], !dbg !1802

assert_fail17:                                    ; preds = %assert_end16
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %26(ptr nonnull @.str.544), !dbg !1802
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16, %assert_end16, %assert_end16, %assert_end16
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1802
  %28 = load i32, ptr %27, align 4, !dbg !1802
  %29 = icmp eq i32 %28, 5, !dbg !1802
  br i1 %29, label %assert_end22, label %assert_fail19, !dbg !1802, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %30(ptr nonnull @.str.545), !dbg !1802
  br label %common.ret

assert_end22:                                     ; preds = %assert_end18
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1802
  %32 = load i16, ptr %31, align 2, !dbg !1802
  %33 = icmp eq i16 %32, 1, !dbg !1802
  %34 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1802
  %35 = load i8, ptr %34, align 1, !dbg !1802
  %36 = icmp eq i8 %35, 8, !dbg !1802
  %37 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1802
  %38 = load i8, ptr %37, align 1, !dbg !1802
  %39 = icmp eq i8 %38, 0, !dbg !1802
  %40 = and i1 %36, %39, !dbg !1802
  %41 = and i1 %33, %40, !dbg !1802
  br i1 %41, label %assert_end24, label %assert_fail23, !dbg !1802, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %42 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %42(ptr nonnull @.str.546), !dbg !1802
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %43 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape, align 8, !dbg !1802, !tbaa !1827
  %44 = and i64 %43, 4294967295, !dbg !1802
  %45 = icmp eq i64 %44, 1, !dbg !1802
  br i1 %45, label %assert_end26, label %assert_fail25, !dbg !1802, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %46(ptr nonnull @.str.547), !dbg !1802
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape, i64 1, !dbg !1802
  %48 = load i64, ptr %47, align 8, !dbg !1802, !tbaa !1837
  %49 = and i64 %48, 4294967295, !dbg !1802
  %50 = icmp eq i64 %49, 128, !dbg !1802
  br i1 %50, label %assert_end28, label %assert_fail27, !dbg !1802, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %51(ptr nonnull @.str.548), !dbg !1802
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape, i64 2, !dbg !1802
  %53 = load i64, ptr %52, align 8, !dbg !1802, !tbaa !1839
  %54 = and i64 %53, 4294967295, !dbg !1802
  %55 = icmp eq i64 %54, 7, !dbg !1802
  br i1 %55, label %assert_end30, label %assert_fail29, !dbg !1802, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %56(ptr nonnull @.str.549), !dbg !1802
  br label %common.ret

assert_end30:                                     ; preds = %assert_end28
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape, i64 3, !dbg !1802
  %58 = load i64, ptr %57, align 8, !dbg !1802, !tbaa !1842
  %59 = and i64 %58, 4294967295, !dbg !1802
  %60 = icmp eq i64 %59, 7, !dbg !1802
  br i1 %60, label %assert_end32, label %assert_fail31, !dbg !1802, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %61(ptr nonnull @.str.550), !dbg !1802
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.shape, i64 4, !dbg !1802
  %63 = load i64, ptr %62, align 8, !dbg !1802, !tbaa !1844
  %64 = and i64 %63, 4294967295, !dbg !1802
  %65 = icmp eq i64 %64, 4, !dbg !1802
  br i1 %65, label %assert_end34, label %assert_fail33, !dbg !1802, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %66 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %66(ptr nonnull @.str.551), !dbg !1802
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.strides, null, !dbg !1802
  br i1 %.not, label %if_end, label %if_then, !dbg !1802, !prof !59

if_then:                                          ; preds = %assert_end34
  %67 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.strides, i64 1, !dbg !1802
  %68 = load i64, ptr %67, align 8, !dbg !1802, !tbaa !1848
  %69 = and i64 %68, 4294967295, !dbg !1802
  %70 = icmp eq i64 %69, 196, !dbg !1802
  %71 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.strides, i64 2, !dbg !1802
  %72 = load i64, ptr %71, align 8, !dbg !1802, !tbaa !1858
  %73 = and i64 %72, 4294967295, !dbg !1802
  %74 = icmp eq i64 %73, 28, !dbg !1802
  %75 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.strides, i64 3, !dbg !1802
  %76 = load i64, ptr %75, align 8, !dbg !1802, !tbaa !1861
  %77 = and i64 %76, 4294967295, !dbg !1802
  %78 = icmp eq i64 %77, 4, !dbg !1802
  %79 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p0.strides, i64 4, !dbg !1802
  %80 = load i64, ptr %79, align 8, !dbg !1802, !tbaa !1863
  %81 = and i64 %80, 4294967295, !dbg !1802
  %82 = icmp eq i64 %81, 1, !dbg !1802
  %83 = and i1 %78, %82, !dbg !1802
  %84 = and i1 %74, %83, !dbg !1802
  %85 = and i1 %70, %84, !dbg !1802
  br i1 %85, label %if_end, label %assert_fail35, !dbg !1802, !prof !18

if_end:                                           ; preds = %if_then, %assert_end34
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1802
  %87 = load i64, ptr %86, align 8, !dbg !1802
  %88 = icmp eq i64 %87, 0, !dbg !1802
  br i1 %88, label %assert_end38, label %assert_fail37, !dbg !1802, !prof !18

assert_fail35:                                    ; preds = %if_then
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %89(ptr nonnull @.str.552), !dbg !1802
  br label %common.ret

assert_fail37:                                    ; preds = %if_end
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %90(ptr nonnull @.str.553), !dbg !1802
  br label %common.ret

assert_end38:                                     ; preds = %if_end
  %91 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1802
  %92 = load i32, ptr %91, align 4, !dbg !1802
  %93 = icmp eq i32 %92, 1, !dbg !1802
  br i1 %93, label %assert_end40, label %assert_fail39, !dbg !1802, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %94(ptr nonnull @.str.554), !dbg !1802
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %95 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !1802
  %96 = load i32, ptr %95, align 4, !dbg !1802
  %97 = icmp eq i32 %96, 5, !dbg !1802
  br i1 %97, label %assert_end44, label %assert_fail41, !dbg !1802, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %98(ptr nonnull @.str.555), !dbg !1802
  br label %common.ret

assert_end44:                                     ; preds = %assert_end40
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !1802
  %100 = load i16, ptr %99, align 2, !dbg !1802
  %101 = icmp eq i16 %100, 1, !dbg !1802
  %102 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !1802
  %103 = load i8, ptr %102, align 1, !dbg !1802
  %104 = icmp eq i8 %103, 16, !dbg !1802
  %105 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !1802
  %106 = load i8, ptr %105, align 1, !dbg !1802
  %107 = icmp eq i8 %106, 0, !dbg !1802
  %108 = and i1 %104, %107, !dbg !1802
  %109 = and i1 %101, %108, !dbg !1802
  br i1 %109, label %assert_end46, label %assert_fail45, !dbg !1802, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %110 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %110(ptr nonnull @.str.556), !dbg !1802
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %111 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape, align 8, !dbg !1802, !tbaa !1867
  %112 = and i64 %111, 4294967295, !dbg !1802
  %113 = icmp eq i64 %112, 1, !dbg !1802
  br i1 %113, label %assert_end48, label %assert_fail47, !dbg !1802, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %114(ptr nonnull @.str.557), !dbg !1802
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape, i64 1, !dbg !1802
  %116 = load i64, ptr %115, align 8, !dbg !1802, !tbaa !1877
  %117 = and i64 %116, 4294967295, !dbg !1802
  %118 = icmp eq i64 %117, 128, !dbg !1802
  br i1 %118, label %assert_end50, label %assert_fail49, !dbg !1802, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %119(ptr nonnull @.str.558), !dbg !1802
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape, i64 2, !dbg !1802
  %121 = load i64, ptr %120, align 8, !dbg !1802, !tbaa !1879
  %122 = and i64 %121, 4294967295, !dbg !1802
  %123 = icmp eq i64 %122, 1, !dbg !1802
  br i1 %123, label %assert_end52, label %assert_fail51, !dbg !1802, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %124(ptr nonnull @.str.559), !dbg !1802
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape, i64 3, !dbg !1802
  %126 = load i64, ptr %125, align 8, !dbg !1802, !tbaa !1882
  %127 = and i64 %126, 4294967295, !dbg !1802
  %128 = icmp eq i64 %127, 1, !dbg !1802
  br i1 %128, label %assert_end54, label %assert_fail53, !dbg !1802, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %129(ptr nonnull @.str.560), !dbg !1802
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.shape, i64 4, !dbg !1802
  %131 = load i64, ptr %130, align 8, !dbg !1802, !tbaa !1884
  %132 = and i64 %131, 4294967295, !dbg !1802
  %133 = icmp eq i64 %132, 4, !dbg !1802
  br i1 %133, label %assert_end56, label %assert_fail55, !dbg !1802, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %134(ptr nonnull @.str.561), !dbg !1802
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %.not149 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.strides, null, !dbg !1802
  br i1 %.not149, label %if_end58, label %if_then57, !dbg !1802, !prof !59

if_then57:                                        ; preds = %assert_end56
  %135 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.strides, i64 1, !dbg !1802
  %136 = load i64, ptr %135, align 8, !dbg !1802, !tbaa !1888
  %137 = and i64 %136, 4294967295, !dbg !1802
  %138 = icmp eq i64 %137, 4, !dbg !1802
  %139 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p1.strides, i64 4, !dbg !1802
  %140 = load i64, ptr %139, align 8, !dbg !1802, !tbaa !1898
  %141 = and i64 %140, 4294967295, !dbg !1802
  %142 = icmp eq i64 %141, 1, !dbg !1802
  %143 = and i1 %138, %142, !dbg !1802
  br i1 %143, label %if_end58, label %assert_fail59, !dbg !1802, !prof !18

if_end58:                                         ; preds = %if_then57, %assert_end56
  %144 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !1802
  %145 = load i64, ptr %144, align 8, !dbg !1802
  %146 = icmp eq i64 %145, 0, !dbg !1802
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !1802, !prof !18

assert_fail59:                                    ; preds = %if_then57
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %147(ptr nonnull @.str.562), !dbg !1802
  br label %common.ret

assert_fail61:                                    ; preds = %if_end58
  %148 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %148(ptr nonnull @.str.563), !dbg !1802
  br label %common.ret

assert_end62:                                     ; preds = %if_end58
  %149 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !1802
  %150 = load i32, ptr %149, align 4, !dbg !1802
  %151 = icmp eq i32 %150, 1, !dbg !1802
  br i1 %151, label %assert_end64, label %assert_fail63, !dbg !1802, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %152 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %152(ptr nonnull @.str.564), !dbg !1802
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !1802
  %154 = load i32, ptr %153, align 4, !dbg !1802
  %155 = icmp eq i32 %dev_id, %154, !dbg !1802
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !1802, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %156(ptr nonnull @.str.565), !dbg !1802
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !1802
  %158 = load i32, ptr %157, align 4, !dbg !1802
  %159 = icmp eq i32 %158, 5, !dbg !1802
  br i1 %159, label %assert_end70, label %assert_fail67, !dbg !1802, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %160(ptr nonnull @.str.566), !dbg !1802
  br label %common.ret

assert_end70:                                     ; preds = %assert_end66
  %161 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !1802
  %162 = load i16, ptr %161, align 2, !dbg !1802
  %163 = icmp eq i16 %162, 1, !dbg !1802
  %164 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !1802
  %165 = load i8, ptr %164, align 1, !dbg !1802
  %166 = icmp eq i8 %165, 16, !dbg !1802
  %167 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !1802
  %168 = load i8, ptr %167, align 1, !dbg !1802
  %169 = icmp eq i8 %168, 0, !dbg !1802
  %170 = and i1 %166, %169, !dbg !1802
  %171 = and i1 %163, %170, !dbg !1802
  br i1 %171, label %assert_end72, label %assert_fail71, !dbg !1802, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %172 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %172(ptr nonnull @.str.567), !dbg !1802
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %173 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape, align 8, !dbg !1802, !tbaa !1902
  %174 = and i64 %173, 4294967295, !dbg !1802
  %175 = icmp eq i64 %174, 1, !dbg !1802
  br i1 %175, label %assert_end74, label %assert_fail73, !dbg !1802, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %176 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %176(ptr nonnull @.str.568), !dbg !1802
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %177 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape, i64 1, !dbg !1802
  %178 = load i64, ptr %177, align 8, !dbg !1802, !tbaa !1912
  %179 = and i64 %178, 4294967295, !dbg !1802
  %180 = icmp eq i64 %179, 128, !dbg !1802
  br i1 %180, label %assert_end76, label %assert_fail75, !dbg !1802, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %181(ptr nonnull @.str.569), !dbg !1802
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %182 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape, i64 2, !dbg !1802
  %183 = load i64, ptr %182, align 8, !dbg !1802, !tbaa !1914
  %184 = and i64 %183, 4294967295, !dbg !1802
  %185 = icmp eq i64 %184, 1, !dbg !1802
  br i1 %185, label %assert_end78, label %assert_fail77, !dbg !1802, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %186 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %186(ptr nonnull @.str.570), !dbg !1802
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %187 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape, i64 3, !dbg !1802
  %188 = load i64, ptr %187, align 8, !dbg !1802, !tbaa !1917
  %189 = and i64 %188, 4294967295, !dbg !1802
  %190 = icmp eq i64 %189, 1, !dbg !1802
  br i1 %190, label %assert_end80, label %assert_fail79, !dbg !1802, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %191(ptr nonnull @.str.571), !dbg !1802
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %192 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.shape, i64 4, !dbg !1802
  %193 = load i64, ptr %192, align 8, !dbg !1802, !tbaa !1919
  %194 = and i64 %193, 4294967295, !dbg !1802
  %195 = icmp eq i64 %194, 4, !dbg !1802
  br i1 %195, label %assert_end82, label %assert_fail81, !dbg !1802, !prof !18

assert_fail81:                                    ; preds = %assert_end80
  %196 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %196(ptr nonnull @.str.572), !dbg !1802
  br label %common.ret

assert_end82:                                     ; preds = %assert_end80
  %.not150 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.strides, null, !dbg !1802
  br i1 %.not150, label %if_end84, label %if_then83, !dbg !1802, !prof !59

if_then83:                                        ; preds = %assert_end82
  %197 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.strides, i64 1, !dbg !1802
  %198 = load i64, ptr %197, align 8, !dbg !1802, !tbaa !1923
  %199 = and i64 %198, 4294967295, !dbg !1802
  %200 = icmp eq i64 %199, 4, !dbg !1802
  %201 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.p2.strides, i64 4, !dbg !1802
  %202 = load i64, ptr %201, align 8, !dbg !1802, !tbaa !1933
  %203 = and i64 %202, 4294967295, !dbg !1802
  %204 = icmp eq i64 %203, 1, !dbg !1802
  %205 = and i1 %200, %204, !dbg !1802
  br i1 %205, label %if_end84, label %assert_fail85, !dbg !1802, !prof !18

if_end84:                                         ; preds = %if_then83, %assert_end82
  %206 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !1802
  %207 = load i64, ptr %206, align 8, !dbg !1802
  %208 = icmp eq i64 %207, 0, !dbg !1802
  br i1 %208, label %assert_end88, label %assert_fail87, !dbg !1802, !prof !18

assert_fail85:                                    ; preds = %if_then83
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %209(ptr nonnull @.str.573), !dbg !1802
  br label %common.ret

assert_fail87:                                    ; preds = %if_end84
  %210 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %210(ptr nonnull @.str.574), !dbg !1802
  br label %common.ret

assert_end88:                                     ; preds = %if_end84
  %211 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !1802
  %212 = load i32, ptr %211, align 4, !dbg !1802
  %213 = icmp eq i32 %212, 1, !dbg !1802
  br i1 %213, label %assert_end90, label %assert_fail89, !dbg !1802, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %214 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %214(ptr nonnull @.str.575), !dbg !1802
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %215 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !1802
  %216 = load i32, ptr %215, align 4, !dbg !1802
  %217 = icmp eq i32 %dev_id, %216, !dbg !1802
  br i1 %217, label %assert_end92, label %assert_fail91, !dbg !1802, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %218(ptr nonnull @.str.576), !dbg !1802
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %219 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !1802
  %220 = load i32, ptr %219, align 4, !dbg !1802
  %221 = icmp eq i32 %220, 0, !dbg !1802
  br i1 %221, label %assert_end96, label %assert_fail93, !dbg !1802, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %222(ptr nonnull @.str.577), !dbg !1802
  br label %common.ret

assert_end96:                                     ; preds = %assert_end92
  %223 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !1802
  %224 = load i16, ptr %223, align 2, !dbg !1802
  %225 = icmp eq i16 %224, 1, !dbg !1802
  %226 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !1802
  %227 = load i8, ptr %226, align 1, !dbg !1802
  %228 = icmp eq i8 %227, 16, !dbg !1802
  %229 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !1802
  %230 = load i8, ptr %229, align 1, !dbg !1802
  %231 = icmp eq i8 %230, 0, !dbg !1802
  %232 = and i1 %228, %231, !dbg !1802
  %233 = and i1 %225, %232, !dbg !1802
  br i1 %233, label %assert_end98, label %assert_fail97, !dbg !1802, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %234 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %234(ptr nonnull @.str.578), !dbg !1802
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %235 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !1802
  %236 = load i64, ptr %235, align 8, !dbg !1802
  %237 = icmp eq i64 %236, 0, !dbg !1802
  br i1 %237, label %assert_end100, label %assert_fail99, !dbg !1802, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %238 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %238(ptr nonnull @.str.579), !dbg !1802
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %239 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !1802
  %240 = load i32, ptr %239, align 4, !dbg !1802
  %241 = icmp eq i32 %240, 1, !dbg !1802
  br i1 %241, label %assert_end102, label %assert_fail101, !dbg !1802, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %242(ptr nonnull @.str.580), !dbg !1802
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %243 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !1802
  %244 = load i32, ptr %243, align 4, !dbg !1802
  %245 = icmp eq i32 %dev_id, %244, !dbg !1802
  br i1 %245, label %assert_end104, label %assert_fail103, !dbg !1802, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %246(ptr nonnull @.str.581), !dbg !1802
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %247 = getelementptr inbounds %1, ptr %p4, i64 0, i32 2, !dbg !1802
  %248 = load i32, ptr %247, align 4, !dbg !1802
  %249 = icmp eq i32 %248, 0, !dbg !1802
  br i1 %249, label %assert_end108, label %assert_fail105, !dbg !1802, !prof !18

assert_fail105:                                   ; preds = %assert_end104
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %250(ptr nonnull @.str.582), !dbg !1802
  br label %common.ret

assert_end108:                                    ; preds = %assert_end104
  %251 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 2, !dbg !1802
  %252 = load i16, ptr %251, align 2, !dbg !1802
  %253 = icmp eq i16 %252, 1, !dbg !1802
  %254 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 1, !dbg !1802
  %255 = load i8, ptr %254, align 1, !dbg !1802
  %256 = icmp eq i8 %255, 16, !dbg !1802
  %257 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 0, !dbg !1802
  %258 = load i8, ptr %257, align 1, !dbg !1802
  %259 = icmp eq i8 %258, 0, !dbg !1802
  %260 = and i1 %256, %259, !dbg !1802
  %261 = and i1 %253, %260, !dbg !1802
  br i1 %261, label %assert_end110, label %assert_fail109, !dbg !1802, !prof !18

assert_fail109:                                   ; preds = %assert_end108
  %262 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %262(ptr nonnull @.str.583), !dbg !1802
  br label %common.ret

assert_end110:                                    ; preds = %assert_end108
  %263 = getelementptr inbounds %1, ptr %p4, i64 0, i32 6, !dbg !1802
  %264 = load i64, ptr %263, align 8, !dbg !1802
  %265 = icmp eq i64 %264, 0, !dbg !1802
  br i1 %265, label %assert_end112, label %assert_fail111, !dbg !1802, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %266(ptr nonnull @.str.584), !dbg !1802
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %267 = getelementptr inbounds %1, ptr %p4, i64 0, i32 1, i32 0, !dbg !1802
  %268 = load i32, ptr %267, align 4, !dbg !1802
  %269 = icmp eq i32 %268, 1, !dbg !1802
  br i1 %269, label %assert_end114, label %assert_fail113, !dbg !1802, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %270 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %270(ptr nonnull @.str.585), !dbg !1802
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %271 = getelementptr inbounds %1, ptr %p4, i64 0, i32 1, i32 1, !dbg !1802
  %272 = load i32, ptr %271, align 4, !dbg !1802
  %273 = icmp eq i32 %dev_id, %272, !dbg !1802
  br i1 %273, label %assert_end116, label %assert_fail115, !dbg !1802, !prof !18

assert_fail115:                                   ; preds = %assert_end114
  %274 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %274(ptr nonnull @.str.586), !dbg !1802
  br label %common.ret

assert_end116:                                    ; preds = %assert_end114
  %275 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !1802
  %276 = load i32, ptr %275, align 4, !dbg !1802
  %277 = icmp eq i32 %276, 5, !dbg !1802
  br i1 %277, label %assert_end120, label %assert_fail117, !dbg !1802, !prof !18

assert_fail117:                                   ; preds = %assert_end116
  %278 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %278(ptr nonnull @.str.587), !dbg !1802
  br label %common.ret

assert_end120:                                    ; preds = %assert_end116
  %279 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !1802
  %280 = load i16, ptr %279, align 2, !dbg !1802
  %281 = icmp eq i16 %280, 1, !dbg !1802
  %282 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !1802
  %283 = load i8, ptr %282, align 1, !dbg !1802
  %284 = icmp eq i8 %283, 8, !dbg !1802
  %285 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !1802
  %286 = load i8, ptr %285, align 1, !dbg !1802
  %287 = icmp eq i8 %286, 0, !dbg !1802
  %288 = and i1 %284, %287, !dbg !1802
  %289 = and i1 %281, %288, !dbg !1802
  br i1 %289, label %assert_end122, label %assert_fail121, !dbg !1802, !prof !18

assert_fail121:                                   ; preds = %assert_end120
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %290(ptr nonnull @.str.588), !dbg !1802
  br label %common.ret

assert_end122:                                    ; preds = %assert_end120
  %291 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape, align 8, !dbg !1802, !tbaa !1937
  %292 = and i64 %291, 4294967295, !dbg !1802
  %293 = icmp eq i64 %292, 1, !dbg !1802
  br i1 %293, label %assert_end124, label %assert_fail123, !dbg !1802, !prof !18

assert_fail123:                                   ; preds = %assert_end122
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %294(ptr nonnull @.str.589), !dbg !1802
  br label %common.ret

assert_end124:                                    ; preds = %assert_end122
  %295 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape, i64 1, !dbg !1802
  %296 = load i64, ptr %295, align 8, !dbg !1802, !tbaa !1947
  %297 = and i64 %296, 4294967295, !dbg !1802
  %298 = icmp eq i64 %297, 128, !dbg !1802
  br i1 %298, label %assert_end126, label %assert_fail125, !dbg !1802, !prof !18

assert_fail125:                                   ; preds = %assert_end124
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %299(ptr nonnull @.str.590), !dbg !1802
  br label %common.ret

assert_end126:                                    ; preds = %assert_end124
  %300 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape, i64 2, !dbg !1802
  %301 = load i64, ptr %300, align 8, !dbg !1802, !tbaa !1949
  %302 = and i64 %301, 4294967295, !dbg !1802
  %303 = icmp eq i64 %302, 7, !dbg !1802
  br i1 %303, label %assert_end128, label %assert_fail127, !dbg !1802, !prof !18

assert_fail127:                                   ; preds = %assert_end126
  %304 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %304(ptr nonnull @.str.591), !dbg !1802
  br label %common.ret

assert_end128:                                    ; preds = %assert_end126
  %305 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape, i64 3, !dbg !1802
  %306 = load i64, ptr %305, align 8, !dbg !1802, !tbaa !1952
  %307 = and i64 %306, 4294967295, !dbg !1802
  %308 = icmp eq i64 %307, 7, !dbg !1802
  br i1 %308, label %assert_end130, label %assert_fail129, !dbg !1802, !prof !18

assert_fail129:                                   ; preds = %assert_end128
  %309 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %309(ptr nonnull @.str.592), !dbg !1802
  br label %common.ret

assert_end130:                                    ; preds = %assert_end128
  %310 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.shape, i64 4, !dbg !1802
  %311 = load i64, ptr %310, align 8, !dbg !1802, !tbaa !1954
  %312 = and i64 %311, 4294967295, !dbg !1802
  %313 = icmp eq i64 %312, 4, !dbg !1802
  br i1 %313, label %assert_end132, label %assert_fail131, !dbg !1802, !prof !18

assert_fail131:                                   ; preds = %assert_end130
  %314 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %314(ptr nonnull @.str.593), !dbg !1802
  br label %common.ret

assert_end132:                                    ; preds = %assert_end130
  %.not151 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.strides, null, !dbg !1802
  br i1 %.not151, label %if_end134, label %if_then133, !dbg !1802, !prof !59

if_then133:                                       ; preds = %assert_end132
  %315 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.strides, i64 1, !dbg !1802
  %316 = load i64, ptr %315, align 8, !dbg !1802, !tbaa !1958
  %317 = and i64 %316, 4294967295, !dbg !1802
  %318 = icmp eq i64 %317, 196, !dbg !1802
  %319 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.strides, i64 2, !dbg !1802
  %320 = load i64, ptr %319, align 8, !dbg !1802, !tbaa !1968
  %321 = and i64 %320, 4294967295, !dbg !1802
  %322 = icmp eq i64 %321, 28, !dbg !1802
  %323 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.strides, i64 3, !dbg !1802
  %324 = load i64, ptr %323, align 8, !dbg !1802, !tbaa !1971
  %325 = and i64 %324, 4294967295, !dbg !1802
  %326 = icmp eq i64 %325, 4, !dbg !1802
  %327 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6.T_cast.strides, i64 4, !dbg !1802
  %328 = load i64, ptr %327, align 8, !dbg !1802, !tbaa !1973
  %329 = and i64 %328, 4294967295, !dbg !1802
  %330 = icmp eq i64 %329, 1, !dbg !1802
  %331 = and i1 %326, %330, !dbg !1802
  %332 = and i1 %322, %331, !dbg !1802
  %333 = and i1 %318, %332, !dbg !1802
  br i1 %333, label %if_end134, label %assert_fail135, !dbg !1802, !prof !18

if_end134:                                        ; preds = %if_then133, %assert_end132
  %334 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !1802
  %335 = load i64, ptr %334, align 8, !dbg !1802
  %336 = icmp eq i64 %335, 0, !dbg !1802
  br i1 %336, label %assert_end138, label %assert_fail137, !dbg !1802, !prof !18

assert_fail135:                                   ; preds = %if_then133
  %337 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %337(ptr nonnull @.str.594), !dbg !1802
  br label %common.ret

assert_fail137:                                   ; preds = %if_end134
  %338 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %338(ptr nonnull @.str.595), !dbg !1802
  br label %common.ret

assert_end138:                                    ; preds = %if_end134
  %339 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !1802
  %340 = load i32, ptr %339, align 4, !dbg !1802
  %341 = icmp eq i32 %340, 1, !dbg !1802
  br i1 %341, label %assert_end140, label %assert_fail139, !dbg !1802, !prof !18

assert_fail139:                                   ; preds = %assert_end138
  %342 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %342(ptr nonnull @.str.596), !dbg !1802
  br label %common.ret

assert_end140:                                    ; preds = %assert_end138
  %343 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !1802
  %344 = load i32, ptr %343, align 4, !dbg !1802
  %345 = icmp eq i32 %dev_id, %344, !dbg !1802
  br i1 %345, label %assert_end142, label %assert_fail141, !dbg !1802, !prof !18

assert_fail141:                                   ; preds = %assert_end140
  %346 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1802, !tbaa !19
  tail call void %346(ptr nonnull @.str.597), !dbg !1802
  br label %common.ret

assert_end142:                                    ; preds = %assert_end140
  %347 = tail call fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_compute_(ptr %T_cast143, ptr %p0144, ptr %p1145, ptr %p2146, ptr %p3147, ptr %p4148), !dbg !1802
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1977 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1979, metadata !DIExpression()), !dbg !1985
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1980, metadata !DIExpression()), !dbg !1985
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1981, metadata !DIExpression()), !dbg !1985
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1982, metadata !DIExpression()), !dbg !1985
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1983, metadata !DIExpression()), !dbg !1985
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1984, metadata !DIExpression()), !dbg !1985
  %0 = icmp eq i32 %num_args, 5, !dbg !1985
  br i1 %0, label %assert_end, label %assert_fail, !dbg !1985, !prof !18

common.ret:                                       ; preds = %assert_end127, %assert_fail126, %assert_fail124, %assert_fail122, %assert_fail120, %assert_fail116, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail106, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail68, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail56, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail56 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail68 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail106 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ -1, %assert_fail116 ], [ -1, %assert_fail120 ], [ -1, %assert_fail122 ], [ -1, %assert_fail124 ], [ -1, %assert_fail126 ], [ %316, %assert_end127 ]
  ret i32 %common.ret.op, !dbg !1985

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %1(ptr nonnull @.str.599), !dbg !1985
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1985, !tbaa !1986
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1985
  %p1.code = load i32, ptr %2, align 4, !dbg !1985, !tbaa !1997
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !1985
  %p2.code = load i32, ptr %3, align 4, !dbg !1985, !tbaa !1999
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !1985
  %p3.code = load i32, ptr %4, align 4, !dbg !1985, !tbaa !2002
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !1985
  %T_cast.code = load i32, ptr %5, align 4, !dbg !1985, !tbaa !2004
  %p0 = load ptr, ptr %args, align 8, !dbg !1985
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1985
  %p1 = load ptr, ptr %6, align 8, !dbg !1985
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !1985
  %p2 = load ptr, ptr %7, align 8, !dbg !1985
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !1985
  %p3 = load ptr, ptr %8, align 8, !dbg !1985
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !1985
  %T_cast = load ptr, ptr %9, align 8, !dbg !1985
  %p0129 = load ptr, ptr %p0, align 8, !dbg !1985
  call void @llvm.assume(i1 true) [ "align"(ptr %p0129, i64 64) ], !dbg !1985
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1985
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape = load ptr, ptr %10, align 8, !dbg !1985
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1985
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.strides = load ptr, ptr %11, align 8, !dbg !1985
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1985
  %dev_id = load i32, ptr %12, align 4, !dbg !1985
  %p1130 = load ptr, ptr %p1, align 8, !dbg !1985
  call void @llvm.assume(i1 true) [ "align"(ptr %p1130, i64 64) ], !dbg !1985
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !1985
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape = load ptr, ptr %13, align 8, !dbg !1985
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !1985
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.strides = load ptr, ptr %14, align 8, !dbg !1985
  %p2131 = load ptr, ptr %p2, align 8, !dbg !1985
  call void @llvm.assume(i1 true) [ "align"(ptr %p2131, i64 64) ], !dbg !1985
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !1985
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape = load ptr, ptr %15, align 8, !dbg !1985
  %16 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !1985
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.strides = load ptr, ptr %16, align 8, !dbg !1985
  %p3132 = load ptr, ptr %p3, align 8, !dbg !1985
  call void @llvm.assume(i1 true) [ "align"(ptr %p3132, i64 64) ], !dbg !1985
  %T_cast128 = load ptr, ptr %T_cast, align 8, !dbg !1985
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast128, i64 64) ], !dbg !1985
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !1985
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape = load ptr, ptr %17, align 8, !dbg !1985
  %18 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !1985
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.strides = load ptr, ptr %18, align 8, !dbg !1985
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !1985

assert_fail6:                                     ; preds = %assert_end
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %19(ptr nonnull @.str.600), !dbg !1985
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !1985

assert_fail8:                                     ; preds = %assert_end7
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %20(ptr nonnull @.str.601), !dbg !1985
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !1985

assert_fail10:                                    ; preds = %assert_end9
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %21(ptr nonnull @.str.602), !dbg !1985
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !1985

assert_fail12:                                    ; preds = %assert_end11
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %22(ptr nonnull @.str.603), !dbg !1985
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !1985

assert_fail14:                                    ; preds = %assert_end13
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %23(ptr nonnull @.str.604), !dbg !1985
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1985
  %25 = load i32, ptr %24, align 4, !dbg !1985
  %26 = icmp eq i32 %25, 5, !dbg !1985
  br i1 %26, label %assert_end19, label %assert_fail16, !dbg !1985, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %27 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %27(ptr nonnull @.str.605), !dbg !1985
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1985
  %29 = load i16, ptr %28, align 2, !dbg !1985
  %30 = icmp eq i16 %29, 1, !dbg !1985
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1985
  %32 = load i8, ptr %31, align 1, !dbg !1985
  %33 = icmp eq i8 %32, 8, !dbg !1985
  %34 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1985
  %35 = load i8, ptr %34, align 1, !dbg !1985
  %36 = icmp eq i8 %35, 0, !dbg !1985
  %37 = and i1 %33, %36, !dbg !1985
  %38 = and i1 %30, %37, !dbg !1985
  br i1 %38, label %assert_end21, label %assert_fail20, !dbg !1985, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %39 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %39(ptr nonnull @.str.606), !dbg !1985
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %40 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape, align 8, !dbg !1985, !tbaa !2008
  %41 = and i64 %40, 4294967295, !dbg !1985
  %42 = icmp eq i64 %41, 1, !dbg !1985
  br i1 %42, label %assert_end23, label %assert_fail22, !dbg !1985, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %43 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %43(ptr nonnull @.str.607), !dbg !1985
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %44 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape, i64 1, !dbg !1985
  %45 = load i64, ptr %44, align 8, !dbg !1985, !tbaa !2018
  %46 = and i64 %45, 4294967295, !dbg !1985
  %47 = icmp eq i64 %46, 64, !dbg !1985
  br i1 %47, label %assert_end25, label %assert_fail24, !dbg !1985, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %48 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %48(ptr nonnull @.str.608), !dbg !1985
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %49 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape, i64 2, !dbg !1985
  %50 = load i64, ptr %49, align 8, !dbg !1985, !tbaa !2020
  %51 = and i64 %50, 4294967295, !dbg !1985
  %52 = icmp eq i64 %51, 56, !dbg !1985
  br i1 %52, label %assert_end27, label %assert_fail26, !dbg !1985, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %53 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %53(ptr nonnull @.str.609), !dbg !1985
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %54 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape, i64 3, !dbg !1985
  %55 = load i64, ptr %54, align 8, !dbg !1985, !tbaa !2023
  %56 = and i64 %55, 4294967295, !dbg !1985
  %57 = icmp eq i64 %56, 56, !dbg !1985
  br i1 %57, label %assert_end29, label %assert_fail28, !dbg !1985, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %58 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %58(ptr nonnull @.str.610), !dbg !1985
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.shape, i64 4, !dbg !1985
  %60 = load i64, ptr %59, align 8, !dbg !1985, !tbaa !2025
  %61 = and i64 %60, 4294967295, !dbg !1985
  %62 = icmp eq i64 %61, 4, !dbg !1985
  br i1 %62, label %assert_end31, label %assert_fail30, !dbg !1985, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %63 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %63(ptr nonnull @.str.611), !dbg !1985
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.strides, null, !dbg !1985
  br i1 %.not, label %if_end, label %if_then, !dbg !1985, !prof !59

if_then:                                          ; preds = %assert_end31
  %64 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.strides, i64 1, !dbg !1985
  %65 = load i64, ptr %64, align 8, !dbg !1985, !tbaa !2029
  %66 = and i64 %65, 4294967295, !dbg !1985
  %67 = icmp eq i64 %66, 12544, !dbg !1985
  %68 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.strides, i64 2, !dbg !1985
  %69 = load i64, ptr %68, align 8, !dbg !1985, !tbaa !2039
  %70 = and i64 %69, 4294967295, !dbg !1985
  %71 = icmp eq i64 %70, 224, !dbg !1985
  %72 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.strides, i64 3, !dbg !1985
  %73 = load i64, ptr %72, align 8, !dbg !1985, !tbaa !2042
  %74 = and i64 %73, 4294967295, !dbg !1985
  %75 = icmp eq i64 %74, 4, !dbg !1985
  %76 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p0.strides, i64 4, !dbg !1985
  %77 = load i64, ptr %76, align 8, !dbg !1985, !tbaa !2044
  %78 = and i64 %77, 4294967295, !dbg !1985
  %79 = icmp eq i64 %78, 1, !dbg !1985
  %80 = and i1 %75, %79, !dbg !1985
  %81 = and i1 %71, %80, !dbg !1985
  %82 = and i1 %67, %81, !dbg !1985
  br i1 %82, label %if_end, label %assert_fail32, !dbg !1985, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %83 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1985
  %84 = load i64, ptr %83, align 8, !dbg !1985
  %85 = icmp eq i64 %84, 0, !dbg !1985
  br i1 %85, label %assert_end35, label %assert_fail34, !dbg !1985, !prof !18

assert_fail32:                                    ; preds = %if_then
  %86 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %86(ptr nonnull @.str.612), !dbg !1985
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %87 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %87(ptr nonnull @.str.613), !dbg !1985
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %88 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1985
  %89 = load i32, ptr %88, align 4, !dbg !1985
  %90 = icmp eq i32 %89, 1, !dbg !1985
  br i1 %90, label %assert_end37, label %assert_fail36, !dbg !1985, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %91 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %91(ptr nonnull @.str.614), !dbg !1985
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %92 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !1985
  %93 = load i32, ptr %92, align 4, !dbg !1985
  %94 = icmp eq i32 %93, 5, !dbg !1985
  br i1 %94, label %assert_end41, label %assert_fail38, !dbg !1985, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %95(ptr nonnull @.str.615), !dbg !1985
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %96 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !1985
  %97 = load i16, ptr %96, align 2, !dbg !1985
  %98 = icmp eq i16 %97, 1, !dbg !1985
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !1985
  %100 = load i8, ptr %99, align 1, !dbg !1985
  %101 = icmp eq i8 %100, 16, !dbg !1985
  %102 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !1985
  %103 = load i8, ptr %102, align 1, !dbg !1985
  %104 = icmp eq i8 %103, 0, !dbg !1985
  %105 = and i1 %101, %104, !dbg !1985
  %106 = and i1 %98, %105, !dbg !1985
  br i1 %106, label %assert_end43, label %assert_fail42, !dbg !1985, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %107 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %107(ptr nonnull @.str.616), !dbg !1985
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %108 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape, align 8, !dbg !1985, !tbaa !2048
  %109 = and i64 %108, 4294967295, !dbg !1985
  %110 = icmp eq i64 %109, 1, !dbg !1985
  br i1 %110, label %assert_end45, label %assert_fail44, !dbg !1985, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %111 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %111(ptr nonnull @.str.617), !dbg !1985
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %112 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape, i64 1, !dbg !1985
  %113 = load i64, ptr %112, align 8, !dbg !1985, !tbaa !2058
  %114 = and i64 %113, 4294967295, !dbg !1985
  %115 = icmp eq i64 %114, 64, !dbg !1985
  br i1 %115, label %assert_end47, label %assert_fail46, !dbg !1985, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %116 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %116(ptr nonnull @.str.618), !dbg !1985
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %117 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape, i64 2, !dbg !1985
  %118 = load i64, ptr %117, align 8, !dbg !1985, !tbaa !2060
  %119 = and i64 %118, 4294967295, !dbg !1985
  %120 = icmp eq i64 %119, 1, !dbg !1985
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !1985, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %121(ptr nonnull @.str.619), !dbg !1985
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %122 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape, i64 3, !dbg !1985
  %123 = load i64, ptr %122, align 8, !dbg !1985, !tbaa !2063
  %124 = and i64 %123, 4294967295, !dbg !1985
  %125 = icmp eq i64 %124, 1, !dbg !1985
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !1985, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %126(ptr nonnull @.str.620), !dbg !1985
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.shape, i64 4, !dbg !1985
  %128 = load i64, ptr %127, align 8, !dbg !1985, !tbaa !2065
  %129 = and i64 %128, 4294967295, !dbg !1985
  %130 = icmp eq i64 %129, 4, !dbg !1985
  br i1 %130, label %assert_end53, label %assert_fail52, !dbg !1985, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %131(ptr nonnull @.str.621), !dbg !1985
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %.not133 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.strides, null, !dbg !1985
  br i1 %.not133, label %if_end55, label %if_then54, !dbg !1985, !prof !59

if_then54:                                        ; preds = %assert_end53
  %132 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.strides, i64 1, !dbg !1985
  %133 = load i64, ptr %132, align 8, !dbg !1985, !tbaa !2069
  %134 = and i64 %133, 4294967295, !dbg !1985
  %135 = icmp eq i64 %134, 4, !dbg !1985
  %136 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p1.strides, i64 4, !dbg !1985
  %137 = load i64, ptr %136, align 8, !dbg !1985, !tbaa !2079
  %138 = and i64 %137, 4294967295, !dbg !1985
  %139 = icmp eq i64 %138, 1, !dbg !1985
  %140 = and i1 %135, %139, !dbg !1985
  br i1 %140, label %if_end55, label %assert_fail56, !dbg !1985, !prof !18

if_end55:                                         ; preds = %if_then54, %assert_end53
  %141 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !1985
  %142 = load i64, ptr %141, align 8, !dbg !1985
  %143 = icmp eq i64 %142, 0, !dbg !1985
  br i1 %143, label %assert_end59, label %assert_fail58, !dbg !1985, !prof !18

assert_fail56:                                    ; preds = %if_then54
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %144(ptr nonnull @.str.622), !dbg !1985
  br label %common.ret

assert_fail58:                                    ; preds = %if_end55
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %145(ptr nonnull @.str.623), !dbg !1985
  br label %common.ret

assert_end59:                                     ; preds = %if_end55
  %146 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !1985
  %147 = load i32, ptr %146, align 4, !dbg !1985
  %148 = icmp eq i32 %147, 1, !dbg !1985
  br i1 %148, label %assert_end61, label %assert_fail60, !dbg !1985, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %149 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %149(ptr nonnull @.str.624), !dbg !1985
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %150 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !1985
  %151 = load i32, ptr %150, align 4, !dbg !1985
  %152 = icmp eq i32 %dev_id, %151, !dbg !1985
  br i1 %152, label %assert_end63, label %assert_fail62, !dbg !1985, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %153 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %153(ptr nonnull @.str.625), !dbg !1985
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %154 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !1985
  %155 = load i32, ptr %154, align 4, !dbg !1985
  %156 = icmp eq i32 %155, 5, !dbg !1985
  br i1 %156, label %assert_end67, label %assert_fail64, !dbg !1985, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %157(ptr nonnull @.str.626), !dbg !1985
  br label %common.ret

assert_end67:                                     ; preds = %assert_end63
  %158 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !1985
  %159 = load i16, ptr %158, align 2, !dbg !1985
  %160 = icmp eq i16 %159, 1, !dbg !1985
  %161 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !1985
  %162 = load i8, ptr %161, align 1, !dbg !1985
  %163 = icmp eq i8 %162, 16, !dbg !1985
  %164 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !1985
  %165 = load i8, ptr %164, align 1, !dbg !1985
  %166 = icmp eq i8 %165, 0, !dbg !1985
  %167 = and i1 %163, %166, !dbg !1985
  %168 = and i1 %160, %167, !dbg !1985
  br i1 %168, label %assert_end69, label %assert_fail68, !dbg !1985, !prof !18

assert_fail68:                                    ; preds = %assert_end67
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %169(ptr nonnull @.str.627), !dbg !1985
  br label %common.ret

assert_end69:                                     ; preds = %assert_end67
  %170 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape, align 8, !dbg !1985, !tbaa !2083
  %171 = and i64 %170, 4294967295, !dbg !1985
  %172 = icmp eq i64 %171, 1, !dbg !1985
  br i1 %172, label %assert_end71, label %assert_fail70, !dbg !1985, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %173 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %173(ptr nonnull @.str.628), !dbg !1985
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape, i64 1, !dbg !1985
  %175 = load i64, ptr %174, align 8, !dbg !1985, !tbaa !2093
  %176 = and i64 %175, 4294967295, !dbg !1985
  %177 = icmp eq i64 %176, 64, !dbg !1985
  br i1 %177, label %assert_end73, label %assert_fail72, !dbg !1985, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %178(ptr nonnull @.str.629), !dbg !1985
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %179 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape, i64 2, !dbg !1985
  %180 = load i64, ptr %179, align 8, !dbg !1985, !tbaa !2095
  %181 = and i64 %180, 4294967295, !dbg !1985
  %182 = icmp eq i64 %181, 1, !dbg !1985
  br i1 %182, label %assert_end75, label %assert_fail74, !dbg !1985, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %183(ptr nonnull @.str.630), !dbg !1985
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %184 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape, i64 3, !dbg !1985
  %185 = load i64, ptr %184, align 8, !dbg !1985, !tbaa !2098
  %186 = and i64 %185, 4294967295, !dbg !1985
  %187 = icmp eq i64 %186, 1, !dbg !1985
  br i1 %187, label %assert_end77, label %assert_fail76, !dbg !1985, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %188(ptr nonnull @.str.631), !dbg !1985
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %189 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.shape, i64 4, !dbg !1985
  %190 = load i64, ptr %189, align 8, !dbg !1985, !tbaa !2100
  %191 = and i64 %190, 4294967295, !dbg !1985
  %192 = icmp eq i64 %191, 4, !dbg !1985
  br i1 %192, label %assert_end79, label %assert_fail78, !dbg !1985, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %193(ptr nonnull @.str.632), !dbg !1985
  br label %common.ret

assert_end79:                                     ; preds = %assert_end77
  %.not134 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.strides, null, !dbg !1985
  br i1 %.not134, label %if_end81, label %if_then80, !dbg !1985, !prof !59

if_then80:                                        ; preds = %assert_end79
  %194 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.strides, i64 1, !dbg !1985
  %195 = load i64, ptr %194, align 8, !dbg !1985, !tbaa !2104
  %196 = and i64 %195, 4294967295, !dbg !1985
  %197 = icmp eq i64 %196, 4, !dbg !1985
  %198 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.p2.strides, i64 4, !dbg !1985
  %199 = load i64, ptr %198, align 8, !dbg !1985, !tbaa !2114
  %200 = and i64 %199, 4294967295, !dbg !1985
  %201 = icmp eq i64 %200, 1, !dbg !1985
  %202 = and i1 %197, %201, !dbg !1985
  br i1 %202, label %if_end81, label %assert_fail82, !dbg !1985, !prof !18

if_end81:                                         ; preds = %if_then80, %assert_end79
  %203 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !1985
  %204 = load i64, ptr %203, align 8, !dbg !1985
  %205 = icmp eq i64 %204, 0, !dbg !1985
  br i1 %205, label %assert_end85, label %assert_fail84, !dbg !1985, !prof !18

assert_fail82:                                    ; preds = %if_then80
  %206 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %206(ptr nonnull @.str.633), !dbg !1985
  br label %common.ret

assert_fail84:                                    ; preds = %if_end81
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %207(ptr nonnull @.str.634), !dbg !1985
  br label %common.ret

assert_end85:                                     ; preds = %if_end81
  %208 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !1985
  %209 = load i32, ptr %208, align 4, !dbg !1985
  %210 = icmp eq i32 %209, 1, !dbg !1985
  br i1 %210, label %assert_end87, label %assert_fail86, !dbg !1985, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %211 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %211(ptr nonnull @.str.635), !dbg !1985
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %212 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !1985
  %213 = load i32, ptr %212, align 4, !dbg !1985
  %214 = icmp eq i32 %dev_id, %213, !dbg !1985
  br i1 %214, label %assert_end89, label %assert_fail88, !dbg !1985, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %215 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %215(ptr nonnull @.str.636), !dbg !1985
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %216 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !1985
  %217 = load i32, ptr %216, align 4, !dbg !1985
  %218 = icmp eq i32 %217, 0, !dbg !1985
  br i1 %218, label %assert_end93, label %assert_fail90, !dbg !1985, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %219 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %219(ptr nonnull @.str.637), !dbg !1985
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %220 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !1985
  %221 = load i16, ptr %220, align 2, !dbg !1985
  %222 = icmp eq i16 %221, 1, !dbg !1985
  %223 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !1985
  %224 = load i8, ptr %223, align 1, !dbg !1985
  %225 = icmp eq i8 %224, 16, !dbg !1985
  %226 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !1985
  %227 = load i8, ptr %226, align 1, !dbg !1985
  %228 = icmp eq i8 %227, 0, !dbg !1985
  %229 = and i1 %225, %228, !dbg !1985
  %230 = and i1 %222, %229, !dbg !1985
  br i1 %230, label %assert_end95, label %assert_fail94, !dbg !1985, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %231 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %231(ptr nonnull @.str.638), !dbg !1985
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %232 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !1985
  %233 = load i64, ptr %232, align 8, !dbg !1985
  %234 = icmp eq i64 %233, 0, !dbg !1985
  br i1 %234, label %assert_end97, label %assert_fail96, !dbg !1985, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %235 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %235(ptr nonnull @.str.639), !dbg !1985
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %236 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !1985
  %237 = load i32, ptr %236, align 4, !dbg !1985
  %238 = icmp eq i32 %237, 1, !dbg !1985
  br i1 %238, label %assert_end99, label %assert_fail98, !dbg !1985, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %239 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %239(ptr nonnull @.str.640), !dbg !1985
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %240 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !1985
  %241 = load i32, ptr %240, align 4, !dbg !1985
  %242 = icmp eq i32 %dev_id, %241, !dbg !1985
  br i1 %242, label %assert_end101, label %assert_fail100, !dbg !1985, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %243 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %243(ptr nonnull @.str.641), !dbg !1985
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %244 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !1985
  %245 = load i32, ptr %244, align 4, !dbg !1985
  %246 = icmp eq i32 %245, 5, !dbg !1985
  br i1 %246, label %assert_end105, label %assert_fail102, !dbg !1985, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %247 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %247(ptr nonnull @.str.642), !dbg !1985
  br label %common.ret

assert_end105:                                    ; preds = %assert_end101
  %248 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !1985
  %249 = load i16, ptr %248, align 2, !dbg !1985
  %250 = icmp eq i16 %249, 1, !dbg !1985
  %251 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !1985
  %252 = load i8, ptr %251, align 1, !dbg !1985
  %253 = icmp eq i8 %252, 8, !dbg !1985
  %254 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !1985
  %255 = load i8, ptr %254, align 1, !dbg !1985
  %256 = icmp eq i8 %255, 0, !dbg !1985
  %257 = and i1 %253, %256, !dbg !1985
  %258 = and i1 %250, %257, !dbg !1985
  br i1 %258, label %assert_end107, label %assert_fail106, !dbg !1985, !prof !18

assert_fail106:                                   ; preds = %assert_end105
  %259 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %259(ptr nonnull @.str.643), !dbg !1985
  br label %common.ret

assert_end107:                                    ; preds = %assert_end105
  %260 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape, align 8, !dbg !1985, !tbaa !2118
  %261 = and i64 %260, 4294967295, !dbg !1985
  %262 = icmp eq i64 %261, 1, !dbg !1985
  br i1 %262, label %assert_end109, label %assert_fail108, !dbg !1985, !prof !18

assert_fail108:                                   ; preds = %assert_end107
  %263 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %263(ptr nonnull @.str.644), !dbg !1985
  br label %common.ret

assert_end109:                                    ; preds = %assert_end107
  %264 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape, i64 1, !dbg !1985
  %265 = load i64, ptr %264, align 8, !dbg !1985, !tbaa !2128
  %266 = and i64 %265, 4294967295, !dbg !1985
  %267 = icmp eq i64 %266, 64, !dbg !1985
  br i1 %267, label %assert_end111, label %assert_fail110, !dbg !1985, !prof !18

assert_fail110:                                   ; preds = %assert_end109
  %268 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %268(ptr nonnull @.str.645), !dbg !1985
  br label %common.ret

assert_end111:                                    ; preds = %assert_end109
  %269 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape, i64 2, !dbg !1985
  %270 = load i64, ptr %269, align 8, !dbg !1985, !tbaa !2130
  %271 = and i64 %270, 4294967295, !dbg !1985
  %272 = icmp eq i64 %271, 56, !dbg !1985
  br i1 %272, label %assert_end113, label %assert_fail112, !dbg !1985, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %273 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %273(ptr nonnull @.str.646), !dbg !1985
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape, i64 3, !dbg !1985
  %275 = load i64, ptr %274, align 8, !dbg !1985, !tbaa !2133
  %276 = and i64 %275, 4294967295, !dbg !1985
  %277 = icmp eq i64 %276, 56, !dbg !1985
  br i1 %277, label %assert_end115, label %assert_fail114, !dbg !1985, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %278 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %278(ptr nonnull @.str.647), !dbg !1985
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %279 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.shape, i64 4, !dbg !1985
  %280 = load i64, ptr %279, align 8, !dbg !1985, !tbaa !2135
  %281 = and i64 %280, 4294967295, !dbg !1985
  %282 = icmp eq i64 %281, 4, !dbg !1985
  br i1 %282, label %assert_end117, label %assert_fail116, !dbg !1985, !prof !18

assert_fail116:                                   ; preds = %assert_end115
  %283 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %283(ptr nonnull @.str.648), !dbg !1985
  br label %common.ret

assert_end117:                                    ; preds = %assert_end115
  %.not135 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.strides, null, !dbg !1985
  br i1 %.not135, label %if_end119, label %if_then118, !dbg !1985, !prof !59

if_then118:                                       ; preds = %assert_end117
  %284 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.strides, i64 1, !dbg !1985
  %285 = load i64, ptr %284, align 8, !dbg !1985, !tbaa !2139
  %286 = and i64 %285, 4294967295, !dbg !1985
  %287 = icmp eq i64 %286, 12544, !dbg !1985
  %288 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.strides, i64 2, !dbg !1985
  %289 = load i64, ptr %288, align 8, !dbg !1985, !tbaa !2149
  %290 = and i64 %289, 4294967295, !dbg !1985
  %291 = icmp eq i64 %290, 224, !dbg !1985
  %292 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.strides, i64 3, !dbg !1985
  %293 = load i64, ptr %292, align 8, !dbg !1985, !tbaa !2152
  %294 = and i64 %293, 4294967295, !dbg !1985
  %295 = icmp eq i64 %294, 4, !dbg !1985
  %296 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast.T_cast.strides, i64 4, !dbg !1985
  %297 = load i64, ptr %296, align 8, !dbg !1985, !tbaa !2154
  %298 = and i64 %297, 4294967295, !dbg !1985
  %299 = icmp eq i64 %298, 1, !dbg !1985
  %300 = and i1 %295, %299, !dbg !1985
  %301 = and i1 %291, %300, !dbg !1985
  %302 = and i1 %287, %301, !dbg !1985
  br i1 %302, label %if_end119, label %assert_fail120, !dbg !1985, !prof !18

if_end119:                                        ; preds = %if_then118, %assert_end117
  %303 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !1985
  %304 = load i64, ptr %303, align 8, !dbg !1985
  %305 = icmp eq i64 %304, 0, !dbg !1985
  br i1 %305, label %assert_end123, label %assert_fail122, !dbg !1985, !prof !18

assert_fail120:                                   ; preds = %if_then118
  %306 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %306(ptr nonnull @.str.649), !dbg !1985
  br label %common.ret

assert_fail122:                                   ; preds = %if_end119
  %307 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %307(ptr nonnull @.str.650), !dbg !1985
  br label %common.ret

assert_end123:                                    ; preds = %if_end119
  %308 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !1985
  %309 = load i32, ptr %308, align 4, !dbg !1985
  %310 = icmp eq i32 %309, 1, !dbg !1985
  br i1 %310, label %assert_end125, label %assert_fail124, !dbg !1985, !prof !18

assert_fail124:                                   ; preds = %assert_end123
  %311 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %311(ptr nonnull @.str.651), !dbg !1985
  br label %common.ret

assert_end125:                                    ; preds = %assert_end123
  %312 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !1985
  %313 = load i32, ptr %312, align 4, !dbg !1985
  %314 = icmp eq i32 %dev_id, %313, !dbg !1985
  br i1 %314, label %assert_end127, label %assert_fail126, !dbg !1985, !prof !18

assert_fail126:                                   ; preds = %assert_end125
  %315 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1985, !tbaa !19
  tail call void %315(ptr nonnull @.str.652), !dbg !1985
  br label %common.ret

assert_end127:                                    ; preds = %assert_end125
  %316 = tail call fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_compute_(ptr %T_cast128, ptr %p0129, ptr %p1130, ptr %p2131, ptr %p3132), !dbg !1985
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2158 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2160, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2161, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2162, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2163, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2164, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2165, metadata !DIExpression()), !dbg !2166
  %0 = icmp eq i32 %num_args, 5, !dbg !2166
  br i1 %0, label %assert_end, label %assert_fail, !dbg !2166, !prof !18

common.ret:                                       ; preds = %assert_end127, %assert_fail126, %assert_fail124, %assert_fail122, %assert_fail120, %assert_fail116, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail106, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail68, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail56, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail56 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail68 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail106 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ -1, %assert_fail116 ], [ -1, %assert_fail120 ], [ -1, %assert_fail122 ], [ -1, %assert_fail124 ], [ -1, %assert_fail126 ], [ %316, %assert_end127 ]
  ret i32 %common.ret.op, !dbg !2166

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %1(ptr nonnull @.str.654), !dbg !2166
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2166, !tbaa !2167
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2166
  %p1.code = load i32, ptr %2, align 4, !dbg !2166, !tbaa !2178
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2166
  %p2.code = load i32, ptr %3, align 4, !dbg !2166, !tbaa !2180
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2166
  %p3.code = load i32, ptr %4, align 4, !dbg !2166, !tbaa !2183
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !2166
  %T_cast.code = load i32, ptr %5, align 4, !dbg !2166, !tbaa !2185
  %p0 = load ptr, ptr %args, align 8, !dbg !2166
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2166
  %p1 = load ptr, ptr %6, align 8, !dbg !2166
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2166
  %p2 = load ptr, ptr %7, align 8, !dbg !2166
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2166
  %p3 = load ptr, ptr %8, align 8, !dbg !2166
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !2166
  %T_cast = load ptr, ptr %9, align 8, !dbg !2166
  %p0129 = load ptr, ptr %p0, align 8, !dbg !2166
  call void @llvm.assume(i1 true) [ "align"(ptr %p0129, i64 64) ], !dbg !2166
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2166
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape = load ptr, ptr %10, align 8, !dbg !2166
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2166
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.strides = load ptr, ptr %11, align 8, !dbg !2166
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2166
  %dev_id = load i32, ptr %12, align 4, !dbg !2166
  %p1130 = load ptr, ptr %p1, align 8, !dbg !2166
  call void @llvm.assume(i1 true) [ "align"(ptr %p1130, i64 64) ], !dbg !2166
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2166
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape = load ptr, ptr %13, align 8, !dbg !2166
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2166
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.strides = load ptr, ptr %14, align 8, !dbg !2166
  %p2131 = load ptr, ptr %p2, align 8, !dbg !2166
  call void @llvm.assume(i1 true) [ "align"(ptr %p2131, i64 64) ], !dbg !2166
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2166
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape = load ptr, ptr %15, align 8, !dbg !2166
  %16 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2166
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.strides = load ptr, ptr %16, align 8, !dbg !2166
  %p3132 = load ptr, ptr %p3, align 8, !dbg !2166
  call void @llvm.assume(i1 true) [ "align"(ptr %p3132, i64 64) ], !dbg !2166
  %T_cast128 = load ptr, ptr %T_cast, align 8, !dbg !2166
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast128, i64 64) ], !dbg !2166
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !2166
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape = load ptr, ptr %17, align 8, !dbg !2166
  %18 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !2166
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.strides = load ptr, ptr %18, align 8, !dbg !2166
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !2166

assert_fail6:                                     ; preds = %assert_end
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %19(ptr nonnull @.str.655), !dbg !2166
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !2166

assert_fail8:                                     ; preds = %assert_end7
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %20(ptr nonnull @.str.656), !dbg !2166
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !2166

assert_fail10:                                    ; preds = %assert_end9
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %21(ptr nonnull @.str.657), !dbg !2166
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !2166

assert_fail12:                                    ; preds = %assert_end11
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %22(ptr nonnull @.str.658), !dbg !2166
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !2166

assert_fail14:                                    ; preds = %assert_end13
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %23(ptr nonnull @.str.659), !dbg !2166
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2166
  %25 = load i32, ptr %24, align 4, !dbg !2166
  %26 = icmp eq i32 %25, 5, !dbg !2166
  br i1 %26, label %assert_end19, label %assert_fail16, !dbg !2166, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %27 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %27(ptr nonnull @.str.660), !dbg !2166
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2166
  %29 = load i16, ptr %28, align 2, !dbg !2166
  %30 = icmp eq i16 %29, 1, !dbg !2166
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2166
  %32 = load i8, ptr %31, align 1, !dbg !2166
  %33 = icmp eq i8 %32, 8, !dbg !2166
  %34 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2166
  %35 = load i8, ptr %34, align 1, !dbg !2166
  %36 = icmp eq i8 %35, 0, !dbg !2166
  %37 = and i1 %33, %36, !dbg !2166
  %38 = and i1 %30, %37, !dbg !2166
  br i1 %38, label %assert_end21, label %assert_fail20, !dbg !2166, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %39 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %39(ptr nonnull @.str.661), !dbg !2166
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %40 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape, align 8, !dbg !2166, !tbaa !2189
  %41 = and i64 %40, 4294967295, !dbg !2166
  %42 = icmp eq i64 %41, 1, !dbg !2166
  br i1 %42, label %assert_end23, label %assert_fail22, !dbg !2166, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %43 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %43(ptr nonnull @.str.662), !dbg !2166
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %44 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape, i64 1, !dbg !2166
  %45 = load i64, ptr %44, align 8, !dbg !2166, !tbaa !2199
  %46 = and i64 %45, 4294967295, !dbg !2166
  %47 = icmp eq i64 %46, 128, !dbg !2166
  br i1 %47, label %assert_end25, label %assert_fail24, !dbg !2166, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %48 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %48(ptr nonnull @.str.663), !dbg !2166
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %49 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape, i64 2, !dbg !2166
  %50 = load i64, ptr %49, align 8, !dbg !2166, !tbaa !2201
  %51 = and i64 %50, 4294967295, !dbg !2166
  %52 = icmp eq i64 %51, 28, !dbg !2166
  br i1 %52, label %assert_end27, label %assert_fail26, !dbg !2166, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %53 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %53(ptr nonnull @.str.664), !dbg !2166
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %54 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape, i64 3, !dbg !2166
  %55 = load i64, ptr %54, align 8, !dbg !2166, !tbaa !2204
  %56 = and i64 %55, 4294967295, !dbg !2166
  %57 = icmp eq i64 %56, 28, !dbg !2166
  br i1 %57, label %assert_end29, label %assert_fail28, !dbg !2166, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %58 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %58(ptr nonnull @.str.665), !dbg !2166
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.shape, i64 4, !dbg !2166
  %60 = load i64, ptr %59, align 8, !dbg !2166, !tbaa !2206
  %61 = and i64 %60, 4294967295, !dbg !2166
  %62 = icmp eq i64 %61, 4, !dbg !2166
  br i1 %62, label %assert_end31, label %assert_fail30, !dbg !2166, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %63 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %63(ptr nonnull @.str.666), !dbg !2166
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.strides, null, !dbg !2166
  br i1 %.not, label %if_end, label %if_then, !dbg !2166, !prof !59

if_then:                                          ; preds = %assert_end31
  %64 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.strides, i64 1, !dbg !2166
  %65 = load i64, ptr %64, align 8, !dbg !2166, !tbaa !2210
  %66 = and i64 %65, 4294967295, !dbg !2166
  %67 = icmp eq i64 %66, 3136, !dbg !2166
  %68 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.strides, i64 2, !dbg !2166
  %69 = load i64, ptr %68, align 8, !dbg !2166, !tbaa !2220
  %70 = and i64 %69, 4294967295, !dbg !2166
  %71 = icmp eq i64 %70, 112, !dbg !2166
  %72 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.strides, i64 3, !dbg !2166
  %73 = load i64, ptr %72, align 8, !dbg !2166, !tbaa !2223
  %74 = and i64 %73, 4294967295, !dbg !2166
  %75 = icmp eq i64 %74, 4, !dbg !2166
  %76 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p0.strides, i64 4, !dbg !2166
  %77 = load i64, ptr %76, align 8, !dbg !2166, !tbaa !2225
  %78 = and i64 %77, 4294967295, !dbg !2166
  %79 = icmp eq i64 %78, 1, !dbg !2166
  %80 = and i1 %75, %79, !dbg !2166
  %81 = and i1 %71, %80, !dbg !2166
  %82 = and i1 %67, %81, !dbg !2166
  br i1 %82, label %if_end, label %assert_fail32, !dbg !2166, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %83 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2166
  %84 = load i64, ptr %83, align 8, !dbg !2166
  %85 = icmp eq i64 %84, 0, !dbg !2166
  br i1 %85, label %assert_end35, label %assert_fail34, !dbg !2166, !prof !18

assert_fail32:                                    ; preds = %if_then
  %86 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %86(ptr nonnull @.str.667), !dbg !2166
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %87 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %87(ptr nonnull @.str.668), !dbg !2166
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %88 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2166
  %89 = load i32, ptr %88, align 4, !dbg !2166
  %90 = icmp eq i32 %89, 1, !dbg !2166
  br i1 %90, label %assert_end37, label %assert_fail36, !dbg !2166, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %91 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %91(ptr nonnull @.str.669), !dbg !2166
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %92 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2166
  %93 = load i32, ptr %92, align 4, !dbg !2166
  %94 = icmp eq i32 %93, 5, !dbg !2166
  br i1 %94, label %assert_end41, label %assert_fail38, !dbg !2166, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %95(ptr nonnull @.str.670), !dbg !2166
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %96 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2166
  %97 = load i16, ptr %96, align 2, !dbg !2166
  %98 = icmp eq i16 %97, 1, !dbg !2166
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2166
  %100 = load i8, ptr %99, align 1, !dbg !2166
  %101 = icmp eq i8 %100, 16, !dbg !2166
  %102 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2166
  %103 = load i8, ptr %102, align 1, !dbg !2166
  %104 = icmp eq i8 %103, 0, !dbg !2166
  %105 = and i1 %101, %104, !dbg !2166
  %106 = and i1 %98, %105, !dbg !2166
  br i1 %106, label %assert_end43, label %assert_fail42, !dbg !2166, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %107 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %107(ptr nonnull @.str.671), !dbg !2166
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %108 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape, align 8, !dbg !2166, !tbaa !2229
  %109 = and i64 %108, 4294967295, !dbg !2166
  %110 = icmp eq i64 %109, 1, !dbg !2166
  br i1 %110, label %assert_end45, label %assert_fail44, !dbg !2166, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %111 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %111(ptr nonnull @.str.672), !dbg !2166
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %112 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape, i64 1, !dbg !2166
  %113 = load i64, ptr %112, align 8, !dbg !2166, !tbaa !2239
  %114 = and i64 %113, 4294967295, !dbg !2166
  %115 = icmp eq i64 %114, 128, !dbg !2166
  br i1 %115, label %assert_end47, label %assert_fail46, !dbg !2166, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %116 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %116(ptr nonnull @.str.673), !dbg !2166
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %117 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape, i64 2, !dbg !2166
  %118 = load i64, ptr %117, align 8, !dbg !2166, !tbaa !2241
  %119 = and i64 %118, 4294967295, !dbg !2166
  %120 = icmp eq i64 %119, 1, !dbg !2166
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !2166, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %121(ptr nonnull @.str.674), !dbg !2166
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %122 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape, i64 3, !dbg !2166
  %123 = load i64, ptr %122, align 8, !dbg !2166, !tbaa !2244
  %124 = and i64 %123, 4294967295, !dbg !2166
  %125 = icmp eq i64 %124, 1, !dbg !2166
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !2166, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %126(ptr nonnull @.str.675), !dbg !2166
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.shape, i64 4, !dbg !2166
  %128 = load i64, ptr %127, align 8, !dbg !2166, !tbaa !2246
  %129 = and i64 %128, 4294967295, !dbg !2166
  %130 = icmp eq i64 %129, 4, !dbg !2166
  br i1 %130, label %assert_end53, label %assert_fail52, !dbg !2166, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %131(ptr nonnull @.str.676), !dbg !2166
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %.not133 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.strides, null, !dbg !2166
  br i1 %.not133, label %if_end55, label %if_then54, !dbg !2166, !prof !59

if_then54:                                        ; preds = %assert_end53
  %132 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.strides, i64 1, !dbg !2166
  %133 = load i64, ptr %132, align 8, !dbg !2166, !tbaa !2250
  %134 = and i64 %133, 4294967295, !dbg !2166
  %135 = icmp eq i64 %134, 4, !dbg !2166
  %136 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p1.strides, i64 4, !dbg !2166
  %137 = load i64, ptr %136, align 8, !dbg !2166, !tbaa !2260
  %138 = and i64 %137, 4294967295, !dbg !2166
  %139 = icmp eq i64 %138, 1, !dbg !2166
  %140 = and i1 %135, %139, !dbg !2166
  br i1 %140, label %if_end55, label %assert_fail56, !dbg !2166, !prof !18

if_end55:                                         ; preds = %if_then54, %assert_end53
  %141 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2166
  %142 = load i64, ptr %141, align 8, !dbg !2166
  %143 = icmp eq i64 %142, 0, !dbg !2166
  br i1 %143, label %assert_end59, label %assert_fail58, !dbg !2166, !prof !18

assert_fail56:                                    ; preds = %if_then54
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %144(ptr nonnull @.str.677), !dbg !2166
  br label %common.ret

assert_fail58:                                    ; preds = %if_end55
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %145(ptr nonnull @.str.678), !dbg !2166
  br label %common.ret

assert_end59:                                     ; preds = %if_end55
  %146 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2166
  %147 = load i32, ptr %146, align 4, !dbg !2166
  %148 = icmp eq i32 %147, 1, !dbg !2166
  br i1 %148, label %assert_end61, label %assert_fail60, !dbg !2166, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %149 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %149(ptr nonnull @.str.679), !dbg !2166
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %150 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2166
  %151 = load i32, ptr %150, align 4, !dbg !2166
  %152 = icmp eq i32 %dev_id, %151, !dbg !2166
  br i1 %152, label %assert_end63, label %assert_fail62, !dbg !2166, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %153 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %153(ptr nonnull @.str.680), !dbg !2166
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %154 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2166
  %155 = load i32, ptr %154, align 4, !dbg !2166
  %156 = icmp eq i32 %155, 5, !dbg !2166
  br i1 %156, label %assert_end67, label %assert_fail64, !dbg !2166, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %157(ptr nonnull @.str.681), !dbg !2166
  br label %common.ret

assert_end67:                                     ; preds = %assert_end63
  %158 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2166
  %159 = load i16, ptr %158, align 2, !dbg !2166
  %160 = icmp eq i16 %159, 1, !dbg !2166
  %161 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2166
  %162 = load i8, ptr %161, align 1, !dbg !2166
  %163 = icmp eq i8 %162, 16, !dbg !2166
  %164 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2166
  %165 = load i8, ptr %164, align 1, !dbg !2166
  %166 = icmp eq i8 %165, 0, !dbg !2166
  %167 = and i1 %163, %166, !dbg !2166
  %168 = and i1 %160, %167, !dbg !2166
  br i1 %168, label %assert_end69, label %assert_fail68, !dbg !2166, !prof !18

assert_fail68:                                    ; preds = %assert_end67
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %169(ptr nonnull @.str.682), !dbg !2166
  br label %common.ret

assert_end69:                                     ; preds = %assert_end67
  %170 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape, align 8, !dbg !2166, !tbaa !2264
  %171 = and i64 %170, 4294967295, !dbg !2166
  %172 = icmp eq i64 %171, 1, !dbg !2166
  br i1 %172, label %assert_end71, label %assert_fail70, !dbg !2166, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %173 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %173(ptr nonnull @.str.683), !dbg !2166
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape, i64 1, !dbg !2166
  %175 = load i64, ptr %174, align 8, !dbg !2166, !tbaa !2274
  %176 = and i64 %175, 4294967295, !dbg !2166
  %177 = icmp eq i64 %176, 128, !dbg !2166
  br i1 %177, label %assert_end73, label %assert_fail72, !dbg !2166, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %178(ptr nonnull @.str.684), !dbg !2166
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %179 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape, i64 2, !dbg !2166
  %180 = load i64, ptr %179, align 8, !dbg !2166, !tbaa !2276
  %181 = and i64 %180, 4294967295, !dbg !2166
  %182 = icmp eq i64 %181, 1, !dbg !2166
  br i1 %182, label %assert_end75, label %assert_fail74, !dbg !2166, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %183(ptr nonnull @.str.685), !dbg !2166
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %184 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape, i64 3, !dbg !2166
  %185 = load i64, ptr %184, align 8, !dbg !2166, !tbaa !2279
  %186 = and i64 %185, 4294967295, !dbg !2166
  %187 = icmp eq i64 %186, 1, !dbg !2166
  br i1 %187, label %assert_end77, label %assert_fail76, !dbg !2166, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %188(ptr nonnull @.str.686), !dbg !2166
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %189 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.shape, i64 4, !dbg !2166
  %190 = load i64, ptr %189, align 8, !dbg !2166, !tbaa !2281
  %191 = and i64 %190, 4294967295, !dbg !2166
  %192 = icmp eq i64 %191, 4, !dbg !2166
  br i1 %192, label %assert_end79, label %assert_fail78, !dbg !2166, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %193(ptr nonnull @.str.687), !dbg !2166
  br label %common.ret

assert_end79:                                     ; preds = %assert_end77
  %.not134 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.strides, null, !dbg !2166
  br i1 %.not134, label %if_end81, label %if_then80, !dbg !2166, !prof !59

if_then80:                                        ; preds = %assert_end79
  %194 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.strides, i64 1, !dbg !2166
  %195 = load i64, ptr %194, align 8, !dbg !2166, !tbaa !2285
  %196 = and i64 %195, 4294967295, !dbg !2166
  %197 = icmp eq i64 %196, 4, !dbg !2166
  %198 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.p2.strides, i64 4, !dbg !2166
  %199 = load i64, ptr %198, align 8, !dbg !2166, !tbaa !2295
  %200 = and i64 %199, 4294967295, !dbg !2166
  %201 = icmp eq i64 %200, 1, !dbg !2166
  %202 = and i1 %197, %201, !dbg !2166
  br i1 %202, label %if_end81, label %assert_fail82, !dbg !2166, !prof !18

if_end81:                                         ; preds = %if_then80, %assert_end79
  %203 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2166
  %204 = load i64, ptr %203, align 8, !dbg !2166
  %205 = icmp eq i64 %204, 0, !dbg !2166
  br i1 %205, label %assert_end85, label %assert_fail84, !dbg !2166, !prof !18

assert_fail82:                                    ; preds = %if_then80
  %206 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %206(ptr nonnull @.str.688), !dbg !2166
  br label %common.ret

assert_fail84:                                    ; preds = %if_end81
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %207(ptr nonnull @.str.689), !dbg !2166
  br label %common.ret

assert_end85:                                     ; preds = %if_end81
  %208 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2166
  %209 = load i32, ptr %208, align 4, !dbg !2166
  %210 = icmp eq i32 %209, 1, !dbg !2166
  br i1 %210, label %assert_end87, label %assert_fail86, !dbg !2166, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %211 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %211(ptr nonnull @.str.690), !dbg !2166
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %212 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2166
  %213 = load i32, ptr %212, align 4, !dbg !2166
  %214 = icmp eq i32 %dev_id, %213, !dbg !2166
  br i1 %214, label %assert_end89, label %assert_fail88, !dbg !2166, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %215 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %215(ptr nonnull @.str.691), !dbg !2166
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %216 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !2166
  %217 = load i32, ptr %216, align 4, !dbg !2166
  %218 = icmp eq i32 %217, 0, !dbg !2166
  br i1 %218, label %assert_end93, label %assert_fail90, !dbg !2166, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %219 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %219(ptr nonnull @.str.692), !dbg !2166
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %220 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !2166
  %221 = load i16, ptr %220, align 2, !dbg !2166
  %222 = icmp eq i16 %221, 1, !dbg !2166
  %223 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !2166
  %224 = load i8, ptr %223, align 1, !dbg !2166
  %225 = icmp eq i8 %224, 16, !dbg !2166
  %226 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !2166
  %227 = load i8, ptr %226, align 1, !dbg !2166
  %228 = icmp eq i8 %227, 0, !dbg !2166
  %229 = and i1 %225, %228, !dbg !2166
  %230 = and i1 %222, %229, !dbg !2166
  br i1 %230, label %assert_end95, label %assert_fail94, !dbg !2166, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %231 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %231(ptr nonnull @.str.693), !dbg !2166
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %232 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !2166
  %233 = load i64, ptr %232, align 8, !dbg !2166
  %234 = icmp eq i64 %233, 0, !dbg !2166
  br i1 %234, label %assert_end97, label %assert_fail96, !dbg !2166, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %235 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %235(ptr nonnull @.str.694), !dbg !2166
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %236 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !2166
  %237 = load i32, ptr %236, align 4, !dbg !2166
  %238 = icmp eq i32 %237, 1, !dbg !2166
  br i1 %238, label %assert_end99, label %assert_fail98, !dbg !2166, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %239 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %239(ptr nonnull @.str.695), !dbg !2166
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %240 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !2166
  %241 = load i32, ptr %240, align 4, !dbg !2166
  %242 = icmp eq i32 %dev_id, %241, !dbg !2166
  br i1 %242, label %assert_end101, label %assert_fail100, !dbg !2166, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %243 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %243(ptr nonnull @.str.696), !dbg !2166
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %244 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !2166
  %245 = load i32, ptr %244, align 4, !dbg !2166
  %246 = icmp eq i32 %245, 5, !dbg !2166
  br i1 %246, label %assert_end105, label %assert_fail102, !dbg !2166, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %247 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %247(ptr nonnull @.str.697), !dbg !2166
  br label %common.ret

assert_end105:                                    ; preds = %assert_end101
  %248 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !2166
  %249 = load i16, ptr %248, align 2, !dbg !2166
  %250 = icmp eq i16 %249, 1, !dbg !2166
  %251 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !2166
  %252 = load i8, ptr %251, align 1, !dbg !2166
  %253 = icmp eq i8 %252, 8, !dbg !2166
  %254 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !2166
  %255 = load i8, ptr %254, align 1, !dbg !2166
  %256 = icmp eq i8 %255, 0, !dbg !2166
  %257 = and i1 %253, %256, !dbg !2166
  %258 = and i1 %250, %257, !dbg !2166
  br i1 %258, label %assert_end107, label %assert_fail106, !dbg !2166, !prof !18

assert_fail106:                                   ; preds = %assert_end105
  %259 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %259(ptr nonnull @.str.698), !dbg !2166
  br label %common.ret

assert_end107:                                    ; preds = %assert_end105
  %260 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape, align 8, !dbg !2166, !tbaa !2299
  %261 = and i64 %260, 4294967295, !dbg !2166
  %262 = icmp eq i64 %261, 1, !dbg !2166
  br i1 %262, label %assert_end109, label %assert_fail108, !dbg !2166, !prof !18

assert_fail108:                                   ; preds = %assert_end107
  %263 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %263(ptr nonnull @.str.699), !dbg !2166
  br label %common.ret

assert_end109:                                    ; preds = %assert_end107
  %264 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape, i64 1, !dbg !2166
  %265 = load i64, ptr %264, align 8, !dbg !2166, !tbaa !2309
  %266 = and i64 %265, 4294967295, !dbg !2166
  %267 = icmp eq i64 %266, 128, !dbg !2166
  br i1 %267, label %assert_end111, label %assert_fail110, !dbg !2166, !prof !18

assert_fail110:                                   ; preds = %assert_end109
  %268 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %268(ptr nonnull @.str.700), !dbg !2166
  br label %common.ret

assert_end111:                                    ; preds = %assert_end109
  %269 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape, i64 2, !dbg !2166
  %270 = load i64, ptr %269, align 8, !dbg !2166, !tbaa !2311
  %271 = and i64 %270, 4294967295, !dbg !2166
  %272 = icmp eq i64 %271, 28, !dbg !2166
  br i1 %272, label %assert_end113, label %assert_fail112, !dbg !2166, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %273 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %273(ptr nonnull @.str.701), !dbg !2166
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape, i64 3, !dbg !2166
  %275 = load i64, ptr %274, align 8, !dbg !2166, !tbaa !2314
  %276 = and i64 %275, 4294967295, !dbg !2166
  %277 = icmp eq i64 %276, 28, !dbg !2166
  br i1 %277, label %assert_end115, label %assert_fail114, !dbg !2166, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %278 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %278(ptr nonnull @.str.702), !dbg !2166
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %279 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.shape, i64 4, !dbg !2166
  %280 = load i64, ptr %279, align 8, !dbg !2166, !tbaa !2316
  %281 = and i64 %280, 4294967295, !dbg !2166
  %282 = icmp eq i64 %281, 4, !dbg !2166
  br i1 %282, label %assert_end117, label %assert_fail116, !dbg !2166, !prof !18

assert_fail116:                                   ; preds = %assert_end115
  %283 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %283(ptr nonnull @.str.703), !dbg !2166
  br label %common.ret

assert_end117:                                    ; preds = %assert_end115
  %.not135 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.strides, null, !dbg !2166
  br i1 %.not135, label %if_end119, label %if_then118, !dbg !2166, !prof !59

if_then118:                                       ; preds = %assert_end117
  %284 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.strides, i64 1, !dbg !2166
  %285 = load i64, ptr %284, align 8, !dbg !2166, !tbaa !2320
  %286 = and i64 %285, 4294967295, !dbg !2166
  %287 = icmp eq i64 %286, 3136, !dbg !2166
  %288 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.strides, i64 2, !dbg !2166
  %289 = load i64, ptr %288, align 8, !dbg !2166, !tbaa !2330
  %290 = and i64 %289, 4294967295, !dbg !2166
  %291 = icmp eq i64 %290, 112, !dbg !2166
  %292 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.strides, i64 3, !dbg !2166
  %293 = load i64, ptr %292, align 8, !dbg !2166, !tbaa !2333
  %294 = and i64 %293, 4294967295, !dbg !2166
  %295 = icmp eq i64 %294, 4, !dbg !2166
  %296 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1.T_cast.strides, i64 4, !dbg !2166
  %297 = load i64, ptr %296, align 8, !dbg !2166, !tbaa !2335
  %298 = and i64 %297, 4294967295, !dbg !2166
  %299 = icmp eq i64 %298, 1, !dbg !2166
  %300 = and i1 %295, %299, !dbg !2166
  %301 = and i1 %291, %300, !dbg !2166
  %302 = and i1 %287, %301, !dbg !2166
  br i1 %302, label %if_end119, label %assert_fail120, !dbg !2166, !prof !18

if_end119:                                        ; preds = %if_then118, %assert_end117
  %303 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !2166
  %304 = load i64, ptr %303, align 8, !dbg !2166
  %305 = icmp eq i64 %304, 0, !dbg !2166
  br i1 %305, label %assert_end123, label %assert_fail122, !dbg !2166, !prof !18

assert_fail120:                                   ; preds = %if_then118
  %306 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %306(ptr nonnull @.str.704), !dbg !2166
  br label %common.ret

assert_fail122:                                   ; preds = %if_end119
  %307 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %307(ptr nonnull @.str.705), !dbg !2166
  br label %common.ret

assert_end123:                                    ; preds = %if_end119
  %308 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !2166
  %309 = load i32, ptr %308, align 4, !dbg !2166
  %310 = icmp eq i32 %309, 1, !dbg !2166
  br i1 %310, label %assert_end125, label %assert_fail124, !dbg !2166, !prof !18

assert_fail124:                                   ; preds = %assert_end123
  %311 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %311(ptr nonnull @.str.706), !dbg !2166
  br label %common.ret

assert_end125:                                    ; preds = %assert_end123
  %312 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !2166
  %313 = load i32, ptr %312, align 4, !dbg !2166
  %314 = icmp eq i32 %dev_id, %313, !dbg !2166
  br i1 %314, label %assert_end127, label %assert_fail126, !dbg !2166, !prof !18

assert_fail126:                                   ; preds = %assert_end125
  %315 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2166, !tbaa !19
  tail call void %315(ptr nonnull @.str.707), !dbg !2166
  br label %common.ret

assert_end127:                                    ; preds = %assert_end125
  %316 = tail call fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_compute_(ptr %T_cast128, ptr %p0129, ptr %p1130, ptr %p2131, ptr %p3132), !dbg !2166
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2339 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2341, metadata !DIExpression()), !dbg !2347
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2342, metadata !DIExpression()), !dbg !2347
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2343, metadata !DIExpression()), !dbg !2347
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2344, metadata !DIExpression()), !dbg !2347
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2345, metadata !DIExpression()), !dbg !2347
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2346, metadata !DIExpression()), !dbg !2347
  %0 = icmp eq i32 %num_args, 5, !dbg !2347
  br i1 %0, label %assert_end, label %assert_fail, !dbg !2347, !prof !18

common.ret:                                       ; preds = %assert_end127, %assert_fail126, %assert_fail124, %assert_fail122, %assert_fail120, %assert_fail116, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail106, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail68, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail56, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail56 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail68 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail106 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ -1, %assert_fail116 ], [ -1, %assert_fail120 ], [ -1, %assert_fail122 ], [ -1, %assert_fail124 ], [ -1, %assert_fail126 ], [ %316, %assert_end127 ]
  ret i32 %common.ret.op, !dbg !2347

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %1(ptr nonnull @.str.709), !dbg !2347
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2347, !tbaa !2348
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2347
  %p1.code = load i32, ptr %2, align 4, !dbg !2347, !tbaa !2359
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2347
  %p2.code = load i32, ptr %3, align 4, !dbg !2347, !tbaa !2361
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2347
  %p3.code = load i32, ptr %4, align 4, !dbg !2347, !tbaa !2364
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !2347
  %T_cast.code = load i32, ptr %5, align 4, !dbg !2347, !tbaa !2366
  %p0 = load ptr, ptr %args, align 8, !dbg !2347
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2347
  %p1 = load ptr, ptr %6, align 8, !dbg !2347
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2347
  %p2 = load ptr, ptr %7, align 8, !dbg !2347
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2347
  %p3 = load ptr, ptr %8, align 8, !dbg !2347
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !2347
  %T_cast = load ptr, ptr %9, align 8, !dbg !2347
  %p0129 = load ptr, ptr %p0, align 8, !dbg !2347
  call void @llvm.assume(i1 true) [ "align"(ptr %p0129, i64 64) ], !dbg !2347
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2347
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape = load ptr, ptr %10, align 8, !dbg !2347
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2347
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.strides = load ptr, ptr %11, align 8, !dbg !2347
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2347
  %dev_id = load i32, ptr %12, align 4, !dbg !2347
  %p1130 = load ptr, ptr %p1, align 8, !dbg !2347
  call void @llvm.assume(i1 true) [ "align"(ptr %p1130, i64 64) ], !dbg !2347
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2347
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape = load ptr, ptr %13, align 8, !dbg !2347
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2347
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.strides = load ptr, ptr %14, align 8, !dbg !2347
  %p2131 = load ptr, ptr %p2, align 8, !dbg !2347
  call void @llvm.assume(i1 true) [ "align"(ptr %p2131, i64 64) ], !dbg !2347
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2347
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape = load ptr, ptr %15, align 8, !dbg !2347
  %16 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2347
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.strides = load ptr, ptr %16, align 8, !dbg !2347
  %p3132 = load ptr, ptr %p3, align 8, !dbg !2347
  call void @llvm.assume(i1 true) [ "align"(ptr %p3132, i64 64) ], !dbg !2347
  %T_cast128 = load ptr, ptr %T_cast, align 8, !dbg !2347
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast128, i64 64) ], !dbg !2347
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !2347
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape = load ptr, ptr %17, align 8, !dbg !2347
  %18 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !2347
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.strides = load ptr, ptr %18, align 8, !dbg !2347
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !2347

assert_fail6:                                     ; preds = %assert_end
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %19(ptr nonnull @.str.710), !dbg !2347
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !2347

assert_fail8:                                     ; preds = %assert_end7
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %20(ptr nonnull @.str.711), !dbg !2347
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !2347

assert_fail10:                                    ; preds = %assert_end9
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %21(ptr nonnull @.str.712), !dbg !2347
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !2347

assert_fail12:                                    ; preds = %assert_end11
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %22(ptr nonnull @.str.713), !dbg !2347
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !2347

assert_fail14:                                    ; preds = %assert_end13
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %23(ptr nonnull @.str.714), !dbg !2347
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2347
  %25 = load i32, ptr %24, align 4, !dbg !2347
  %26 = icmp eq i32 %25, 5, !dbg !2347
  br i1 %26, label %assert_end19, label %assert_fail16, !dbg !2347, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %27 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %27(ptr nonnull @.str.715), !dbg !2347
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2347
  %29 = load i16, ptr %28, align 2, !dbg !2347
  %30 = icmp eq i16 %29, 1, !dbg !2347
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2347
  %32 = load i8, ptr %31, align 1, !dbg !2347
  %33 = icmp eq i8 %32, 8, !dbg !2347
  %34 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2347
  %35 = load i8, ptr %34, align 1, !dbg !2347
  %36 = icmp eq i8 %35, 0, !dbg !2347
  %37 = and i1 %33, %36, !dbg !2347
  %38 = and i1 %30, %37, !dbg !2347
  br i1 %38, label %assert_end21, label %assert_fail20, !dbg !2347, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %39 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %39(ptr nonnull @.str.716), !dbg !2347
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %40 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape, align 8, !dbg !2347, !tbaa !2370
  %41 = and i64 %40, 4294967295, !dbg !2347
  %42 = icmp eq i64 %41, 1, !dbg !2347
  br i1 %42, label %assert_end23, label %assert_fail22, !dbg !2347, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %43 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %43(ptr nonnull @.str.717), !dbg !2347
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %44 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape, i64 1, !dbg !2347
  %45 = load i64, ptr %44, align 8, !dbg !2347, !tbaa !2380
  %46 = and i64 %45, 4294967295, !dbg !2347
  %47 = icmp eq i64 %46, 256, !dbg !2347
  br i1 %47, label %assert_end25, label %assert_fail24, !dbg !2347, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %48 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %48(ptr nonnull @.str.718), !dbg !2347
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %49 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape, i64 2, !dbg !2347
  %50 = load i64, ptr %49, align 8, !dbg !2347, !tbaa !2382
  %51 = and i64 %50, 4294967295, !dbg !2347
  %52 = icmp eq i64 %51, 14, !dbg !2347
  br i1 %52, label %assert_end27, label %assert_fail26, !dbg !2347, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %53 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %53(ptr nonnull @.str.719), !dbg !2347
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %54 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape, i64 3, !dbg !2347
  %55 = load i64, ptr %54, align 8, !dbg !2347, !tbaa !2385
  %56 = and i64 %55, 4294967295, !dbg !2347
  %57 = icmp eq i64 %56, 14, !dbg !2347
  br i1 %57, label %assert_end29, label %assert_fail28, !dbg !2347, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %58 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %58(ptr nonnull @.str.720), !dbg !2347
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.shape, i64 4, !dbg !2347
  %60 = load i64, ptr %59, align 8, !dbg !2347, !tbaa !2387
  %61 = and i64 %60, 4294967295, !dbg !2347
  %62 = icmp eq i64 %61, 4, !dbg !2347
  br i1 %62, label %assert_end31, label %assert_fail30, !dbg !2347, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %63 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %63(ptr nonnull @.str.721), !dbg !2347
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.strides, null, !dbg !2347
  br i1 %.not, label %if_end, label %if_then, !dbg !2347, !prof !59

if_then:                                          ; preds = %assert_end31
  %64 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.strides, i64 1, !dbg !2347
  %65 = load i64, ptr %64, align 8, !dbg !2347, !tbaa !2391
  %66 = and i64 %65, 4294967295, !dbg !2347
  %67 = icmp eq i64 %66, 784, !dbg !2347
  %68 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.strides, i64 2, !dbg !2347
  %69 = load i64, ptr %68, align 8, !dbg !2347, !tbaa !2401
  %70 = and i64 %69, 4294967295, !dbg !2347
  %71 = icmp eq i64 %70, 56, !dbg !2347
  %72 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.strides, i64 3, !dbg !2347
  %73 = load i64, ptr %72, align 8, !dbg !2347, !tbaa !2404
  %74 = and i64 %73, 4294967295, !dbg !2347
  %75 = icmp eq i64 %74, 4, !dbg !2347
  %76 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p0.strides, i64 4, !dbg !2347
  %77 = load i64, ptr %76, align 8, !dbg !2347, !tbaa !2406
  %78 = and i64 %77, 4294967295, !dbg !2347
  %79 = icmp eq i64 %78, 1, !dbg !2347
  %80 = and i1 %75, %79, !dbg !2347
  %81 = and i1 %71, %80, !dbg !2347
  %82 = and i1 %67, %81, !dbg !2347
  br i1 %82, label %if_end, label %assert_fail32, !dbg !2347, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %83 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2347
  %84 = load i64, ptr %83, align 8, !dbg !2347
  %85 = icmp eq i64 %84, 0, !dbg !2347
  br i1 %85, label %assert_end35, label %assert_fail34, !dbg !2347, !prof !18

assert_fail32:                                    ; preds = %if_then
  %86 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %86(ptr nonnull @.str.722), !dbg !2347
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %87 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %87(ptr nonnull @.str.723), !dbg !2347
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %88 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2347
  %89 = load i32, ptr %88, align 4, !dbg !2347
  %90 = icmp eq i32 %89, 1, !dbg !2347
  br i1 %90, label %assert_end37, label %assert_fail36, !dbg !2347, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %91 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %91(ptr nonnull @.str.724), !dbg !2347
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %92 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2347
  %93 = load i32, ptr %92, align 4, !dbg !2347
  %94 = icmp eq i32 %93, 5, !dbg !2347
  br i1 %94, label %assert_end41, label %assert_fail38, !dbg !2347, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %95(ptr nonnull @.str.725), !dbg !2347
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %96 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2347
  %97 = load i16, ptr %96, align 2, !dbg !2347
  %98 = icmp eq i16 %97, 1, !dbg !2347
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2347
  %100 = load i8, ptr %99, align 1, !dbg !2347
  %101 = icmp eq i8 %100, 16, !dbg !2347
  %102 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2347
  %103 = load i8, ptr %102, align 1, !dbg !2347
  %104 = icmp eq i8 %103, 0, !dbg !2347
  %105 = and i1 %101, %104, !dbg !2347
  %106 = and i1 %98, %105, !dbg !2347
  br i1 %106, label %assert_end43, label %assert_fail42, !dbg !2347, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %107 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %107(ptr nonnull @.str.726), !dbg !2347
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %108 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape, align 8, !dbg !2347, !tbaa !2410
  %109 = and i64 %108, 4294967295, !dbg !2347
  %110 = icmp eq i64 %109, 1, !dbg !2347
  br i1 %110, label %assert_end45, label %assert_fail44, !dbg !2347, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %111 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %111(ptr nonnull @.str.727), !dbg !2347
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %112 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape, i64 1, !dbg !2347
  %113 = load i64, ptr %112, align 8, !dbg !2347, !tbaa !2420
  %114 = and i64 %113, 4294967295, !dbg !2347
  %115 = icmp eq i64 %114, 256, !dbg !2347
  br i1 %115, label %assert_end47, label %assert_fail46, !dbg !2347, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %116 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %116(ptr nonnull @.str.728), !dbg !2347
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %117 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape, i64 2, !dbg !2347
  %118 = load i64, ptr %117, align 8, !dbg !2347, !tbaa !2422
  %119 = and i64 %118, 4294967295, !dbg !2347
  %120 = icmp eq i64 %119, 1, !dbg !2347
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !2347, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %121(ptr nonnull @.str.729), !dbg !2347
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %122 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape, i64 3, !dbg !2347
  %123 = load i64, ptr %122, align 8, !dbg !2347, !tbaa !2425
  %124 = and i64 %123, 4294967295, !dbg !2347
  %125 = icmp eq i64 %124, 1, !dbg !2347
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !2347, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %126(ptr nonnull @.str.730), !dbg !2347
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.shape, i64 4, !dbg !2347
  %128 = load i64, ptr %127, align 8, !dbg !2347, !tbaa !2427
  %129 = and i64 %128, 4294967295, !dbg !2347
  %130 = icmp eq i64 %129, 4, !dbg !2347
  br i1 %130, label %assert_end53, label %assert_fail52, !dbg !2347, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %131(ptr nonnull @.str.731), !dbg !2347
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %.not133 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.strides, null, !dbg !2347
  br i1 %.not133, label %if_end55, label %if_then54, !dbg !2347, !prof !59

if_then54:                                        ; preds = %assert_end53
  %132 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.strides, i64 1, !dbg !2347
  %133 = load i64, ptr %132, align 8, !dbg !2347, !tbaa !2431
  %134 = and i64 %133, 4294967295, !dbg !2347
  %135 = icmp eq i64 %134, 4, !dbg !2347
  %136 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p1.strides, i64 4, !dbg !2347
  %137 = load i64, ptr %136, align 8, !dbg !2347, !tbaa !2441
  %138 = and i64 %137, 4294967295, !dbg !2347
  %139 = icmp eq i64 %138, 1, !dbg !2347
  %140 = and i1 %135, %139, !dbg !2347
  br i1 %140, label %if_end55, label %assert_fail56, !dbg !2347, !prof !18

if_end55:                                         ; preds = %if_then54, %assert_end53
  %141 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2347
  %142 = load i64, ptr %141, align 8, !dbg !2347
  %143 = icmp eq i64 %142, 0, !dbg !2347
  br i1 %143, label %assert_end59, label %assert_fail58, !dbg !2347, !prof !18

assert_fail56:                                    ; preds = %if_then54
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %144(ptr nonnull @.str.732), !dbg !2347
  br label %common.ret

assert_fail58:                                    ; preds = %if_end55
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %145(ptr nonnull @.str.733), !dbg !2347
  br label %common.ret

assert_end59:                                     ; preds = %if_end55
  %146 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2347
  %147 = load i32, ptr %146, align 4, !dbg !2347
  %148 = icmp eq i32 %147, 1, !dbg !2347
  br i1 %148, label %assert_end61, label %assert_fail60, !dbg !2347, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %149 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %149(ptr nonnull @.str.734), !dbg !2347
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %150 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2347
  %151 = load i32, ptr %150, align 4, !dbg !2347
  %152 = icmp eq i32 %dev_id, %151, !dbg !2347
  br i1 %152, label %assert_end63, label %assert_fail62, !dbg !2347, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %153 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %153(ptr nonnull @.str.735), !dbg !2347
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %154 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2347
  %155 = load i32, ptr %154, align 4, !dbg !2347
  %156 = icmp eq i32 %155, 5, !dbg !2347
  br i1 %156, label %assert_end67, label %assert_fail64, !dbg !2347, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %157(ptr nonnull @.str.736), !dbg !2347
  br label %common.ret

assert_end67:                                     ; preds = %assert_end63
  %158 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2347
  %159 = load i16, ptr %158, align 2, !dbg !2347
  %160 = icmp eq i16 %159, 1, !dbg !2347
  %161 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2347
  %162 = load i8, ptr %161, align 1, !dbg !2347
  %163 = icmp eq i8 %162, 16, !dbg !2347
  %164 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2347
  %165 = load i8, ptr %164, align 1, !dbg !2347
  %166 = icmp eq i8 %165, 0, !dbg !2347
  %167 = and i1 %163, %166, !dbg !2347
  %168 = and i1 %160, %167, !dbg !2347
  br i1 %168, label %assert_end69, label %assert_fail68, !dbg !2347, !prof !18

assert_fail68:                                    ; preds = %assert_end67
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %169(ptr nonnull @.str.737), !dbg !2347
  br label %common.ret

assert_end69:                                     ; preds = %assert_end67
  %170 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape, align 8, !dbg !2347, !tbaa !2445
  %171 = and i64 %170, 4294967295, !dbg !2347
  %172 = icmp eq i64 %171, 1, !dbg !2347
  br i1 %172, label %assert_end71, label %assert_fail70, !dbg !2347, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %173 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %173(ptr nonnull @.str.738), !dbg !2347
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape, i64 1, !dbg !2347
  %175 = load i64, ptr %174, align 8, !dbg !2347, !tbaa !2455
  %176 = and i64 %175, 4294967295, !dbg !2347
  %177 = icmp eq i64 %176, 256, !dbg !2347
  br i1 %177, label %assert_end73, label %assert_fail72, !dbg !2347, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %178(ptr nonnull @.str.739), !dbg !2347
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %179 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape, i64 2, !dbg !2347
  %180 = load i64, ptr %179, align 8, !dbg !2347, !tbaa !2457
  %181 = and i64 %180, 4294967295, !dbg !2347
  %182 = icmp eq i64 %181, 1, !dbg !2347
  br i1 %182, label %assert_end75, label %assert_fail74, !dbg !2347, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %183(ptr nonnull @.str.740), !dbg !2347
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %184 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape, i64 3, !dbg !2347
  %185 = load i64, ptr %184, align 8, !dbg !2347, !tbaa !2460
  %186 = and i64 %185, 4294967295, !dbg !2347
  %187 = icmp eq i64 %186, 1, !dbg !2347
  br i1 %187, label %assert_end77, label %assert_fail76, !dbg !2347, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %188(ptr nonnull @.str.741), !dbg !2347
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %189 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.shape, i64 4, !dbg !2347
  %190 = load i64, ptr %189, align 8, !dbg !2347, !tbaa !2462
  %191 = and i64 %190, 4294967295, !dbg !2347
  %192 = icmp eq i64 %191, 4, !dbg !2347
  br i1 %192, label %assert_end79, label %assert_fail78, !dbg !2347, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %193(ptr nonnull @.str.742), !dbg !2347
  br label %common.ret

assert_end79:                                     ; preds = %assert_end77
  %.not134 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.strides, null, !dbg !2347
  br i1 %.not134, label %if_end81, label %if_then80, !dbg !2347, !prof !59

if_then80:                                        ; preds = %assert_end79
  %194 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.strides, i64 1, !dbg !2347
  %195 = load i64, ptr %194, align 8, !dbg !2347, !tbaa !2466
  %196 = and i64 %195, 4294967295, !dbg !2347
  %197 = icmp eq i64 %196, 4, !dbg !2347
  %198 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.p2.strides, i64 4, !dbg !2347
  %199 = load i64, ptr %198, align 8, !dbg !2347, !tbaa !2476
  %200 = and i64 %199, 4294967295, !dbg !2347
  %201 = icmp eq i64 %200, 1, !dbg !2347
  %202 = and i1 %197, %201, !dbg !2347
  br i1 %202, label %if_end81, label %assert_fail82, !dbg !2347, !prof !18

if_end81:                                         ; preds = %if_then80, %assert_end79
  %203 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2347
  %204 = load i64, ptr %203, align 8, !dbg !2347
  %205 = icmp eq i64 %204, 0, !dbg !2347
  br i1 %205, label %assert_end85, label %assert_fail84, !dbg !2347, !prof !18

assert_fail82:                                    ; preds = %if_then80
  %206 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %206(ptr nonnull @.str.743), !dbg !2347
  br label %common.ret

assert_fail84:                                    ; preds = %if_end81
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %207(ptr nonnull @.str.744), !dbg !2347
  br label %common.ret

assert_end85:                                     ; preds = %if_end81
  %208 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2347
  %209 = load i32, ptr %208, align 4, !dbg !2347
  %210 = icmp eq i32 %209, 1, !dbg !2347
  br i1 %210, label %assert_end87, label %assert_fail86, !dbg !2347, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %211 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %211(ptr nonnull @.str.745), !dbg !2347
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %212 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2347
  %213 = load i32, ptr %212, align 4, !dbg !2347
  %214 = icmp eq i32 %dev_id, %213, !dbg !2347
  br i1 %214, label %assert_end89, label %assert_fail88, !dbg !2347, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %215 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %215(ptr nonnull @.str.746), !dbg !2347
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %216 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !2347
  %217 = load i32, ptr %216, align 4, !dbg !2347
  %218 = icmp eq i32 %217, 0, !dbg !2347
  br i1 %218, label %assert_end93, label %assert_fail90, !dbg !2347, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %219 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %219(ptr nonnull @.str.747), !dbg !2347
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %220 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !2347
  %221 = load i16, ptr %220, align 2, !dbg !2347
  %222 = icmp eq i16 %221, 1, !dbg !2347
  %223 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !2347
  %224 = load i8, ptr %223, align 1, !dbg !2347
  %225 = icmp eq i8 %224, 16, !dbg !2347
  %226 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !2347
  %227 = load i8, ptr %226, align 1, !dbg !2347
  %228 = icmp eq i8 %227, 0, !dbg !2347
  %229 = and i1 %225, %228, !dbg !2347
  %230 = and i1 %222, %229, !dbg !2347
  br i1 %230, label %assert_end95, label %assert_fail94, !dbg !2347, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %231 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %231(ptr nonnull @.str.748), !dbg !2347
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %232 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !2347
  %233 = load i64, ptr %232, align 8, !dbg !2347
  %234 = icmp eq i64 %233, 0, !dbg !2347
  br i1 %234, label %assert_end97, label %assert_fail96, !dbg !2347, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %235 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %235(ptr nonnull @.str.749), !dbg !2347
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %236 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !2347
  %237 = load i32, ptr %236, align 4, !dbg !2347
  %238 = icmp eq i32 %237, 1, !dbg !2347
  br i1 %238, label %assert_end99, label %assert_fail98, !dbg !2347, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %239 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %239(ptr nonnull @.str.750), !dbg !2347
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %240 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !2347
  %241 = load i32, ptr %240, align 4, !dbg !2347
  %242 = icmp eq i32 %dev_id, %241, !dbg !2347
  br i1 %242, label %assert_end101, label %assert_fail100, !dbg !2347, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %243 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %243(ptr nonnull @.str.751), !dbg !2347
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %244 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !2347
  %245 = load i32, ptr %244, align 4, !dbg !2347
  %246 = icmp eq i32 %245, 5, !dbg !2347
  br i1 %246, label %assert_end105, label %assert_fail102, !dbg !2347, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %247 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %247(ptr nonnull @.str.752), !dbg !2347
  br label %common.ret

assert_end105:                                    ; preds = %assert_end101
  %248 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !2347
  %249 = load i16, ptr %248, align 2, !dbg !2347
  %250 = icmp eq i16 %249, 1, !dbg !2347
  %251 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !2347
  %252 = load i8, ptr %251, align 1, !dbg !2347
  %253 = icmp eq i8 %252, 8, !dbg !2347
  %254 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !2347
  %255 = load i8, ptr %254, align 1, !dbg !2347
  %256 = icmp eq i8 %255, 0, !dbg !2347
  %257 = and i1 %253, %256, !dbg !2347
  %258 = and i1 %250, %257, !dbg !2347
  br i1 %258, label %assert_end107, label %assert_fail106, !dbg !2347, !prof !18

assert_fail106:                                   ; preds = %assert_end105
  %259 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %259(ptr nonnull @.str.753), !dbg !2347
  br label %common.ret

assert_end107:                                    ; preds = %assert_end105
  %260 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape, align 8, !dbg !2347, !tbaa !2480
  %261 = and i64 %260, 4294967295, !dbg !2347
  %262 = icmp eq i64 %261, 1, !dbg !2347
  br i1 %262, label %assert_end109, label %assert_fail108, !dbg !2347, !prof !18

assert_fail108:                                   ; preds = %assert_end107
  %263 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %263(ptr nonnull @.str.754), !dbg !2347
  br label %common.ret

assert_end109:                                    ; preds = %assert_end107
  %264 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape, i64 1, !dbg !2347
  %265 = load i64, ptr %264, align 8, !dbg !2347, !tbaa !2490
  %266 = and i64 %265, 4294967295, !dbg !2347
  %267 = icmp eq i64 %266, 256, !dbg !2347
  br i1 %267, label %assert_end111, label %assert_fail110, !dbg !2347, !prof !18

assert_fail110:                                   ; preds = %assert_end109
  %268 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %268(ptr nonnull @.str.755), !dbg !2347
  br label %common.ret

assert_end111:                                    ; preds = %assert_end109
  %269 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape, i64 2, !dbg !2347
  %270 = load i64, ptr %269, align 8, !dbg !2347, !tbaa !2492
  %271 = and i64 %270, 4294967295, !dbg !2347
  %272 = icmp eq i64 %271, 14, !dbg !2347
  br i1 %272, label %assert_end113, label %assert_fail112, !dbg !2347, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %273 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %273(ptr nonnull @.str.756), !dbg !2347
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape, i64 3, !dbg !2347
  %275 = load i64, ptr %274, align 8, !dbg !2347, !tbaa !2495
  %276 = and i64 %275, 4294967295, !dbg !2347
  %277 = icmp eq i64 %276, 14, !dbg !2347
  br i1 %277, label %assert_end115, label %assert_fail114, !dbg !2347, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %278 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %278(ptr nonnull @.str.757), !dbg !2347
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %279 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.shape, i64 4, !dbg !2347
  %280 = load i64, ptr %279, align 8, !dbg !2347, !tbaa !2497
  %281 = and i64 %280, 4294967295, !dbg !2347
  %282 = icmp eq i64 %281, 4, !dbg !2347
  br i1 %282, label %assert_end117, label %assert_fail116, !dbg !2347, !prof !18

assert_fail116:                                   ; preds = %assert_end115
  %283 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %283(ptr nonnull @.str.758), !dbg !2347
  br label %common.ret

assert_end117:                                    ; preds = %assert_end115
  %.not135 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.strides, null, !dbg !2347
  br i1 %.not135, label %if_end119, label %if_then118, !dbg !2347, !prof !59

if_then118:                                       ; preds = %assert_end117
  %284 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.strides, i64 1, !dbg !2347
  %285 = load i64, ptr %284, align 8, !dbg !2347, !tbaa !2501
  %286 = and i64 %285, 4294967295, !dbg !2347
  %287 = icmp eq i64 %286, 784, !dbg !2347
  %288 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.strides, i64 2, !dbg !2347
  %289 = load i64, ptr %288, align 8, !dbg !2347, !tbaa !2511
  %290 = and i64 %289, 4294967295, !dbg !2347
  %291 = icmp eq i64 %290, 56, !dbg !2347
  %292 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.strides, i64 3, !dbg !2347
  %293 = load i64, ptr %292, align 8, !dbg !2347, !tbaa !2514
  %294 = and i64 %293, 4294967295, !dbg !2347
  %295 = icmp eq i64 %294, 4, !dbg !2347
  %296 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2.T_cast.strides, i64 4, !dbg !2347
  %297 = load i64, ptr %296, align 8, !dbg !2347, !tbaa !2516
  %298 = and i64 %297, 4294967295, !dbg !2347
  %299 = icmp eq i64 %298, 1, !dbg !2347
  %300 = and i1 %295, %299, !dbg !2347
  %301 = and i1 %291, %300, !dbg !2347
  %302 = and i1 %287, %301, !dbg !2347
  br i1 %302, label %if_end119, label %assert_fail120, !dbg !2347, !prof !18

if_end119:                                        ; preds = %if_then118, %assert_end117
  %303 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !2347
  %304 = load i64, ptr %303, align 8, !dbg !2347
  %305 = icmp eq i64 %304, 0, !dbg !2347
  br i1 %305, label %assert_end123, label %assert_fail122, !dbg !2347, !prof !18

assert_fail120:                                   ; preds = %if_then118
  %306 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %306(ptr nonnull @.str.759), !dbg !2347
  br label %common.ret

assert_fail122:                                   ; preds = %if_end119
  %307 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %307(ptr nonnull @.str.760), !dbg !2347
  br label %common.ret

assert_end123:                                    ; preds = %if_end119
  %308 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !2347
  %309 = load i32, ptr %308, align 4, !dbg !2347
  %310 = icmp eq i32 %309, 1, !dbg !2347
  br i1 %310, label %assert_end125, label %assert_fail124, !dbg !2347, !prof !18

assert_fail124:                                   ; preds = %assert_end123
  %311 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %311(ptr nonnull @.str.761), !dbg !2347
  br label %common.ret

assert_end125:                                    ; preds = %assert_end123
  %312 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !2347
  %313 = load i32, ptr %312, align 4, !dbg !2347
  %314 = icmp eq i32 %dev_id, %313, !dbg !2347
  br i1 %314, label %assert_end127, label %assert_fail126, !dbg !2347, !prof !18

assert_fail126:                                   ; preds = %assert_end125
  %315 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2347, !tbaa !19
  tail call void %315(ptr nonnull @.str.762), !dbg !2347
  br label %common.ret

assert_end127:                                    ; preds = %assert_end125
  %316 = tail call fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_compute_(ptr %T_cast128, ptr %p0129, ptr %p1130, ptr %p2131, ptr %p3132), !dbg !2347
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2520 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2522, metadata !DIExpression()), !dbg !2528
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2523, metadata !DIExpression()), !dbg !2528
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2524, metadata !DIExpression()), !dbg !2528
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2525, metadata !DIExpression()), !dbg !2528
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2526, metadata !DIExpression()), !dbg !2528
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2527, metadata !DIExpression()), !dbg !2528
  %0 = icmp eq i32 %num_args, 5, !dbg !2528
  br i1 %0, label %assert_end, label %assert_fail, !dbg !2528, !prof !18

common.ret:                                       ; preds = %assert_end127, %assert_fail126, %assert_fail124, %assert_fail122, %assert_fail120, %assert_fail116, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail106, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail68, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail56, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail56 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail68 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail106 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ -1, %assert_fail116 ], [ -1, %assert_fail120 ], [ -1, %assert_fail122 ], [ -1, %assert_fail124 ], [ -1, %assert_fail126 ], [ %316, %assert_end127 ]
  ret i32 %common.ret.op, !dbg !2528

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %1(ptr nonnull @.str.764), !dbg !2528
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2528, !tbaa !2529
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2528
  %p1.code = load i32, ptr %2, align 4, !dbg !2528, !tbaa !2540
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2528
  %p2.code = load i32, ptr %3, align 4, !dbg !2528, !tbaa !2542
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2528
  %p3.code = load i32, ptr %4, align 4, !dbg !2528, !tbaa !2545
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !2528
  %T_cast.code = load i32, ptr %5, align 4, !dbg !2528, !tbaa !2547
  %p0 = load ptr, ptr %args, align 8, !dbg !2528
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2528
  %p1 = load ptr, ptr %6, align 8, !dbg !2528
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2528
  %p2 = load ptr, ptr %7, align 8, !dbg !2528
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2528
  %p3 = load ptr, ptr %8, align 8, !dbg !2528
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !2528
  %T_cast = load ptr, ptr %9, align 8, !dbg !2528
  %p0129 = load ptr, ptr %p0, align 8, !dbg !2528
  call void @llvm.assume(i1 true) [ "align"(ptr %p0129, i64 64) ], !dbg !2528
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2528
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape = load ptr, ptr %10, align 8, !dbg !2528
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2528
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.strides = load ptr, ptr %11, align 8, !dbg !2528
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2528
  %dev_id = load i32, ptr %12, align 4, !dbg !2528
  %p1130 = load ptr, ptr %p1, align 8, !dbg !2528
  call void @llvm.assume(i1 true) [ "align"(ptr %p1130, i64 64) ], !dbg !2528
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2528
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape = load ptr, ptr %13, align 8, !dbg !2528
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2528
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.strides = load ptr, ptr %14, align 8, !dbg !2528
  %p2131 = load ptr, ptr %p2, align 8, !dbg !2528
  call void @llvm.assume(i1 true) [ "align"(ptr %p2131, i64 64) ], !dbg !2528
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2528
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape = load ptr, ptr %15, align 8, !dbg !2528
  %16 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2528
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.strides = load ptr, ptr %16, align 8, !dbg !2528
  %p3132 = load ptr, ptr %p3, align 8, !dbg !2528
  call void @llvm.assume(i1 true) [ "align"(ptr %p3132, i64 64) ], !dbg !2528
  %T_cast128 = load ptr, ptr %T_cast, align 8, !dbg !2528
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast128, i64 64) ], !dbg !2528
  %17 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !2528
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape = load ptr, ptr %17, align 8, !dbg !2528
  %18 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !2528
  %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.strides = load ptr, ptr %18, align 8, !dbg !2528
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !2528

assert_fail6:                                     ; preds = %assert_end
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %19(ptr nonnull @.str.765), !dbg !2528
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !2528

assert_fail8:                                     ; preds = %assert_end7
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %20(ptr nonnull @.str.766), !dbg !2528
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !2528

assert_fail10:                                    ; preds = %assert_end9
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %21(ptr nonnull @.str.767), !dbg !2528
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !2528

assert_fail12:                                    ; preds = %assert_end11
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %22(ptr nonnull @.str.768), !dbg !2528
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !2528

assert_fail14:                                    ; preds = %assert_end13
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %23(ptr nonnull @.str.769), !dbg !2528
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %24 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2528
  %25 = load i32, ptr %24, align 4, !dbg !2528
  %26 = icmp eq i32 %25, 5, !dbg !2528
  br i1 %26, label %assert_end19, label %assert_fail16, !dbg !2528, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %27 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %27(ptr nonnull @.str.770), !dbg !2528
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2528
  %29 = load i16, ptr %28, align 2, !dbg !2528
  %30 = icmp eq i16 %29, 1, !dbg !2528
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2528
  %32 = load i8, ptr %31, align 1, !dbg !2528
  %33 = icmp eq i8 %32, 8, !dbg !2528
  %34 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2528
  %35 = load i8, ptr %34, align 1, !dbg !2528
  %36 = icmp eq i8 %35, 0, !dbg !2528
  %37 = and i1 %33, %36, !dbg !2528
  %38 = and i1 %30, %37, !dbg !2528
  br i1 %38, label %assert_end21, label %assert_fail20, !dbg !2528, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %39 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %39(ptr nonnull @.str.771), !dbg !2528
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %40 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape, align 8, !dbg !2528, !tbaa !2551
  %41 = and i64 %40, 4294967295, !dbg !2528
  %42 = icmp eq i64 %41, 1, !dbg !2528
  br i1 %42, label %assert_end23, label %assert_fail22, !dbg !2528, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %43 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %43(ptr nonnull @.str.772), !dbg !2528
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %44 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape, i64 1, !dbg !2528
  %45 = load i64, ptr %44, align 8, !dbg !2528, !tbaa !2561
  %46 = and i64 %45, 4294967295, !dbg !2528
  %47 = icmp eq i64 %46, 512, !dbg !2528
  br i1 %47, label %assert_end25, label %assert_fail24, !dbg !2528, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %48 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %48(ptr nonnull @.str.773), !dbg !2528
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %49 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape, i64 2, !dbg !2528
  %50 = load i64, ptr %49, align 8, !dbg !2528, !tbaa !2563
  %51 = and i64 %50, 4294967295, !dbg !2528
  %52 = icmp eq i64 %51, 7, !dbg !2528
  br i1 %52, label %assert_end27, label %assert_fail26, !dbg !2528, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %53 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %53(ptr nonnull @.str.774), !dbg !2528
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %54 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape, i64 3, !dbg !2528
  %55 = load i64, ptr %54, align 8, !dbg !2528, !tbaa !2566
  %56 = and i64 %55, 4294967295, !dbg !2528
  %57 = icmp eq i64 %56, 7, !dbg !2528
  br i1 %57, label %assert_end29, label %assert_fail28, !dbg !2528, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %58 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %58(ptr nonnull @.str.775), !dbg !2528
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.shape, i64 4, !dbg !2528
  %60 = load i64, ptr %59, align 8, !dbg !2528, !tbaa !2568
  %61 = and i64 %60, 4294967295, !dbg !2528
  %62 = icmp eq i64 %61, 4, !dbg !2528
  br i1 %62, label %assert_end31, label %assert_fail30, !dbg !2528, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %63 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %63(ptr nonnull @.str.776), !dbg !2528
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.strides, null, !dbg !2528
  br i1 %.not, label %if_end, label %if_then, !dbg !2528, !prof !59

if_then:                                          ; preds = %assert_end31
  %64 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.strides, i64 1, !dbg !2528
  %65 = load i64, ptr %64, align 8, !dbg !2528, !tbaa !2572
  %66 = and i64 %65, 4294967295, !dbg !2528
  %67 = icmp eq i64 %66, 196, !dbg !2528
  %68 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.strides, i64 2, !dbg !2528
  %69 = load i64, ptr %68, align 8, !dbg !2528, !tbaa !2582
  %70 = and i64 %69, 4294967295, !dbg !2528
  %71 = icmp eq i64 %70, 28, !dbg !2528
  %72 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.strides, i64 3, !dbg !2528
  %73 = load i64, ptr %72, align 8, !dbg !2528, !tbaa !2585
  %74 = and i64 %73, 4294967295, !dbg !2528
  %75 = icmp eq i64 %74, 4, !dbg !2528
  %76 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p0.strides, i64 4, !dbg !2528
  %77 = load i64, ptr %76, align 8, !dbg !2528, !tbaa !2587
  %78 = and i64 %77, 4294967295, !dbg !2528
  %79 = icmp eq i64 %78, 1, !dbg !2528
  %80 = and i1 %75, %79, !dbg !2528
  %81 = and i1 %71, %80, !dbg !2528
  %82 = and i1 %67, %81, !dbg !2528
  br i1 %82, label %if_end, label %assert_fail32, !dbg !2528, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %83 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2528
  %84 = load i64, ptr %83, align 8, !dbg !2528
  %85 = icmp eq i64 %84, 0, !dbg !2528
  br i1 %85, label %assert_end35, label %assert_fail34, !dbg !2528, !prof !18

assert_fail32:                                    ; preds = %if_then
  %86 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %86(ptr nonnull @.str.777), !dbg !2528
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %87 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %87(ptr nonnull @.str.778), !dbg !2528
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %88 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2528
  %89 = load i32, ptr %88, align 4, !dbg !2528
  %90 = icmp eq i32 %89, 1, !dbg !2528
  br i1 %90, label %assert_end37, label %assert_fail36, !dbg !2528, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %91 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %91(ptr nonnull @.str.779), !dbg !2528
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %92 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2528
  %93 = load i32, ptr %92, align 4, !dbg !2528
  %94 = icmp eq i32 %93, 5, !dbg !2528
  br i1 %94, label %assert_end41, label %assert_fail38, !dbg !2528, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %95 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %95(ptr nonnull @.str.780), !dbg !2528
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %96 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2528
  %97 = load i16, ptr %96, align 2, !dbg !2528
  %98 = icmp eq i16 %97, 1, !dbg !2528
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2528
  %100 = load i8, ptr %99, align 1, !dbg !2528
  %101 = icmp eq i8 %100, 16, !dbg !2528
  %102 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2528
  %103 = load i8, ptr %102, align 1, !dbg !2528
  %104 = icmp eq i8 %103, 0, !dbg !2528
  %105 = and i1 %101, %104, !dbg !2528
  %106 = and i1 %98, %105, !dbg !2528
  br i1 %106, label %assert_end43, label %assert_fail42, !dbg !2528, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %107 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %107(ptr nonnull @.str.781), !dbg !2528
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %108 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape, align 8, !dbg !2528, !tbaa !2591
  %109 = and i64 %108, 4294967295, !dbg !2528
  %110 = icmp eq i64 %109, 1, !dbg !2528
  br i1 %110, label %assert_end45, label %assert_fail44, !dbg !2528, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %111 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %111(ptr nonnull @.str.782), !dbg !2528
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %112 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape, i64 1, !dbg !2528
  %113 = load i64, ptr %112, align 8, !dbg !2528, !tbaa !2601
  %114 = and i64 %113, 4294967295, !dbg !2528
  %115 = icmp eq i64 %114, 512, !dbg !2528
  br i1 %115, label %assert_end47, label %assert_fail46, !dbg !2528, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %116 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %116(ptr nonnull @.str.783), !dbg !2528
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %117 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape, i64 2, !dbg !2528
  %118 = load i64, ptr %117, align 8, !dbg !2528, !tbaa !2603
  %119 = and i64 %118, 4294967295, !dbg !2528
  %120 = icmp eq i64 %119, 1, !dbg !2528
  br i1 %120, label %assert_end49, label %assert_fail48, !dbg !2528, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %121 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %121(ptr nonnull @.str.784), !dbg !2528
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %122 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape, i64 3, !dbg !2528
  %123 = load i64, ptr %122, align 8, !dbg !2528, !tbaa !2606
  %124 = and i64 %123, 4294967295, !dbg !2528
  %125 = icmp eq i64 %124, 1, !dbg !2528
  br i1 %125, label %assert_end51, label %assert_fail50, !dbg !2528, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %126(ptr nonnull @.str.785), !dbg !2528
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.shape, i64 4, !dbg !2528
  %128 = load i64, ptr %127, align 8, !dbg !2528, !tbaa !2608
  %129 = and i64 %128, 4294967295, !dbg !2528
  %130 = icmp eq i64 %129, 4, !dbg !2528
  br i1 %130, label %assert_end53, label %assert_fail52, !dbg !2528, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %131(ptr nonnull @.str.786), !dbg !2528
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %.not133 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.strides, null, !dbg !2528
  br i1 %.not133, label %if_end55, label %if_then54, !dbg !2528, !prof !59

if_then54:                                        ; preds = %assert_end53
  %132 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.strides, i64 1, !dbg !2528
  %133 = load i64, ptr %132, align 8, !dbg !2528, !tbaa !2612
  %134 = and i64 %133, 4294967295, !dbg !2528
  %135 = icmp eq i64 %134, 4, !dbg !2528
  %136 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p1.strides, i64 4, !dbg !2528
  %137 = load i64, ptr %136, align 8, !dbg !2528, !tbaa !2622
  %138 = and i64 %137, 4294967295, !dbg !2528
  %139 = icmp eq i64 %138, 1, !dbg !2528
  %140 = and i1 %135, %139, !dbg !2528
  br i1 %140, label %if_end55, label %assert_fail56, !dbg !2528, !prof !18

if_end55:                                         ; preds = %if_then54, %assert_end53
  %141 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2528
  %142 = load i64, ptr %141, align 8, !dbg !2528
  %143 = icmp eq i64 %142, 0, !dbg !2528
  br i1 %143, label %assert_end59, label %assert_fail58, !dbg !2528, !prof !18

assert_fail56:                                    ; preds = %if_then54
  %144 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %144(ptr nonnull @.str.787), !dbg !2528
  br label %common.ret

assert_fail58:                                    ; preds = %if_end55
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %145(ptr nonnull @.str.788), !dbg !2528
  br label %common.ret

assert_end59:                                     ; preds = %if_end55
  %146 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2528
  %147 = load i32, ptr %146, align 4, !dbg !2528
  %148 = icmp eq i32 %147, 1, !dbg !2528
  br i1 %148, label %assert_end61, label %assert_fail60, !dbg !2528, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %149 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %149(ptr nonnull @.str.789), !dbg !2528
  br label %common.ret

assert_end61:                                     ; preds = %assert_end59
  %150 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2528
  %151 = load i32, ptr %150, align 4, !dbg !2528
  %152 = icmp eq i32 %dev_id, %151, !dbg !2528
  br i1 %152, label %assert_end63, label %assert_fail62, !dbg !2528, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %153 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %153(ptr nonnull @.str.790), !dbg !2528
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %154 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2528
  %155 = load i32, ptr %154, align 4, !dbg !2528
  %156 = icmp eq i32 %155, 5, !dbg !2528
  br i1 %156, label %assert_end67, label %assert_fail64, !dbg !2528, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %157(ptr nonnull @.str.791), !dbg !2528
  br label %common.ret

assert_end67:                                     ; preds = %assert_end63
  %158 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2528
  %159 = load i16, ptr %158, align 2, !dbg !2528
  %160 = icmp eq i16 %159, 1, !dbg !2528
  %161 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2528
  %162 = load i8, ptr %161, align 1, !dbg !2528
  %163 = icmp eq i8 %162, 16, !dbg !2528
  %164 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2528
  %165 = load i8, ptr %164, align 1, !dbg !2528
  %166 = icmp eq i8 %165, 0, !dbg !2528
  %167 = and i1 %163, %166, !dbg !2528
  %168 = and i1 %160, %167, !dbg !2528
  br i1 %168, label %assert_end69, label %assert_fail68, !dbg !2528, !prof !18

assert_fail68:                                    ; preds = %assert_end67
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %169(ptr nonnull @.str.792), !dbg !2528
  br label %common.ret

assert_end69:                                     ; preds = %assert_end67
  %170 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape, align 8, !dbg !2528, !tbaa !2626
  %171 = and i64 %170, 4294967295, !dbg !2528
  %172 = icmp eq i64 %171, 1, !dbg !2528
  br i1 %172, label %assert_end71, label %assert_fail70, !dbg !2528, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %173 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %173(ptr nonnull @.str.793), !dbg !2528
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %174 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape, i64 1, !dbg !2528
  %175 = load i64, ptr %174, align 8, !dbg !2528, !tbaa !2636
  %176 = and i64 %175, 4294967295, !dbg !2528
  %177 = icmp eq i64 %176, 512, !dbg !2528
  br i1 %177, label %assert_end73, label %assert_fail72, !dbg !2528, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %178(ptr nonnull @.str.794), !dbg !2528
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %179 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape, i64 2, !dbg !2528
  %180 = load i64, ptr %179, align 8, !dbg !2528, !tbaa !2638
  %181 = and i64 %180, 4294967295, !dbg !2528
  %182 = icmp eq i64 %181, 1, !dbg !2528
  br i1 %182, label %assert_end75, label %assert_fail74, !dbg !2528, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %183 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %183(ptr nonnull @.str.795), !dbg !2528
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %184 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape, i64 3, !dbg !2528
  %185 = load i64, ptr %184, align 8, !dbg !2528, !tbaa !2641
  %186 = and i64 %185, 4294967295, !dbg !2528
  %187 = icmp eq i64 %186, 1, !dbg !2528
  br i1 %187, label %assert_end77, label %assert_fail76, !dbg !2528, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %188(ptr nonnull @.str.796), !dbg !2528
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %189 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.shape, i64 4, !dbg !2528
  %190 = load i64, ptr %189, align 8, !dbg !2528, !tbaa !2643
  %191 = and i64 %190, 4294967295, !dbg !2528
  %192 = icmp eq i64 %191, 4, !dbg !2528
  br i1 %192, label %assert_end79, label %assert_fail78, !dbg !2528, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %193(ptr nonnull @.str.797), !dbg !2528
  br label %common.ret

assert_end79:                                     ; preds = %assert_end77
  %.not134 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.strides, null, !dbg !2528
  br i1 %.not134, label %if_end81, label %if_then80, !dbg !2528, !prof !59

if_then80:                                        ; preds = %assert_end79
  %194 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.strides, i64 1, !dbg !2528
  %195 = load i64, ptr %194, align 8, !dbg !2528, !tbaa !2647
  %196 = and i64 %195, 4294967295, !dbg !2528
  %197 = icmp eq i64 %196, 4, !dbg !2528
  %198 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.p2.strides, i64 4, !dbg !2528
  %199 = load i64, ptr %198, align 8, !dbg !2528, !tbaa !2657
  %200 = and i64 %199, 4294967295, !dbg !2528
  %201 = icmp eq i64 %200, 1, !dbg !2528
  %202 = and i1 %197, %201, !dbg !2528
  br i1 %202, label %if_end81, label %assert_fail82, !dbg !2528, !prof !18

if_end81:                                         ; preds = %if_then80, %assert_end79
  %203 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2528
  %204 = load i64, ptr %203, align 8, !dbg !2528
  %205 = icmp eq i64 %204, 0, !dbg !2528
  br i1 %205, label %assert_end85, label %assert_fail84, !dbg !2528, !prof !18

assert_fail82:                                    ; preds = %if_then80
  %206 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %206(ptr nonnull @.str.798), !dbg !2528
  br label %common.ret

assert_fail84:                                    ; preds = %if_end81
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %207(ptr nonnull @.str.799), !dbg !2528
  br label %common.ret

assert_end85:                                     ; preds = %if_end81
  %208 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2528
  %209 = load i32, ptr %208, align 4, !dbg !2528
  %210 = icmp eq i32 %209, 1, !dbg !2528
  br i1 %210, label %assert_end87, label %assert_fail86, !dbg !2528, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %211 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %211(ptr nonnull @.str.800), !dbg !2528
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %212 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2528
  %213 = load i32, ptr %212, align 4, !dbg !2528
  %214 = icmp eq i32 %dev_id, %213, !dbg !2528
  br i1 %214, label %assert_end89, label %assert_fail88, !dbg !2528, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %215 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %215(ptr nonnull @.str.801), !dbg !2528
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %216 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !2528
  %217 = load i32, ptr %216, align 4, !dbg !2528
  %218 = icmp eq i32 %217, 0, !dbg !2528
  br i1 %218, label %assert_end93, label %assert_fail90, !dbg !2528, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %219 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %219(ptr nonnull @.str.802), !dbg !2528
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %220 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !2528
  %221 = load i16, ptr %220, align 2, !dbg !2528
  %222 = icmp eq i16 %221, 1, !dbg !2528
  %223 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !2528
  %224 = load i8, ptr %223, align 1, !dbg !2528
  %225 = icmp eq i8 %224, 16, !dbg !2528
  %226 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !2528
  %227 = load i8, ptr %226, align 1, !dbg !2528
  %228 = icmp eq i8 %227, 0, !dbg !2528
  %229 = and i1 %225, %228, !dbg !2528
  %230 = and i1 %222, %229, !dbg !2528
  br i1 %230, label %assert_end95, label %assert_fail94, !dbg !2528, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %231 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %231(ptr nonnull @.str.803), !dbg !2528
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %232 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !2528
  %233 = load i64, ptr %232, align 8, !dbg !2528
  %234 = icmp eq i64 %233, 0, !dbg !2528
  br i1 %234, label %assert_end97, label %assert_fail96, !dbg !2528, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %235 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %235(ptr nonnull @.str.804), !dbg !2528
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %236 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !2528
  %237 = load i32, ptr %236, align 4, !dbg !2528
  %238 = icmp eq i32 %237, 1, !dbg !2528
  br i1 %238, label %assert_end99, label %assert_fail98, !dbg !2528, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %239 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %239(ptr nonnull @.str.805), !dbg !2528
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %240 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !2528
  %241 = load i32, ptr %240, align 4, !dbg !2528
  %242 = icmp eq i32 %dev_id, %241, !dbg !2528
  br i1 %242, label %assert_end101, label %assert_fail100, !dbg !2528, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %243 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %243(ptr nonnull @.str.806), !dbg !2528
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %244 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !2528
  %245 = load i32, ptr %244, align 4, !dbg !2528
  %246 = icmp eq i32 %245, 5, !dbg !2528
  br i1 %246, label %assert_end105, label %assert_fail102, !dbg !2528, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %247 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %247(ptr nonnull @.str.807), !dbg !2528
  br label %common.ret

assert_end105:                                    ; preds = %assert_end101
  %248 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !2528
  %249 = load i16, ptr %248, align 2, !dbg !2528
  %250 = icmp eq i16 %249, 1, !dbg !2528
  %251 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !2528
  %252 = load i8, ptr %251, align 1, !dbg !2528
  %253 = icmp eq i8 %252, 8, !dbg !2528
  %254 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !2528
  %255 = load i8, ptr %254, align 1, !dbg !2528
  %256 = icmp eq i8 %255, 0, !dbg !2528
  %257 = and i1 %253, %256, !dbg !2528
  %258 = and i1 %250, %257, !dbg !2528
  br i1 %258, label %assert_end107, label %assert_fail106, !dbg !2528, !prof !18

assert_fail106:                                   ; preds = %assert_end105
  %259 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %259(ptr nonnull @.str.808), !dbg !2528
  br label %common.ret

assert_end107:                                    ; preds = %assert_end105
  %260 = load i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape, align 8, !dbg !2528, !tbaa !2661
  %261 = and i64 %260, 4294967295, !dbg !2528
  %262 = icmp eq i64 %261, 1, !dbg !2528
  br i1 %262, label %assert_end109, label %assert_fail108, !dbg !2528, !prof !18

assert_fail108:                                   ; preds = %assert_end107
  %263 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %263(ptr nonnull @.str.809), !dbg !2528
  br label %common.ret

assert_end109:                                    ; preds = %assert_end107
  %264 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape, i64 1, !dbg !2528
  %265 = load i64, ptr %264, align 8, !dbg !2528, !tbaa !2671
  %266 = and i64 %265, 4294967295, !dbg !2528
  %267 = icmp eq i64 %266, 512, !dbg !2528
  br i1 %267, label %assert_end111, label %assert_fail110, !dbg !2528, !prof !18

assert_fail110:                                   ; preds = %assert_end109
  %268 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %268(ptr nonnull @.str.810), !dbg !2528
  br label %common.ret

assert_end111:                                    ; preds = %assert_end109
  %269 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape, i64 2, !dbg !2528
  %270 = load i64, ptr %269, align 8, !dbg !2528, !tbaa !2673
  %271 = and i64 %270, 4294967295, !dbg !2528
  %272 = icmp eq i64 %271, 7, !dbg !2528
  br i1 %272, label %assert_end113, label %assert_fail112, !dbg !2528, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %273 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %273(ptr nonnull @.str.811), !dbg !2528
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape, i64 3, !dbg !2528
  %275 = load i64, ptr %274, align 8, !dbg !2528, !tbaa !2676
  %276 = and i64 %275, 4294967295, !dbg !2528
  %277 = icmp eq i64 %276, 7, !dbg !2528
  br i1 %277, label %assert_end115, label %assert_fail114, !dbg !2528, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %278 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %278(ptr nonnull @.str.812), !dbg !2528
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %279 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.shape, i64 4, !dbg !2528
  %280 = load i64, ptr %279, align 8, !dbg !2528, !tbaa !2678
  %281 = and i64 %280, 4294967295, !dbg !2528
  %282 = icmp eq i64 %281, 4, !dbg !2528
  br i1 %282, label %assert_end117, label %assert_fail116, !dbg !2528, !prof !18

assert_fail116:                                   ; preds = %assert_end115
  %283 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %283(ptr nonnull @.str.813), !dbg !2528
  br label %common.ret

assert_end117:                                    ; preds = %assert_end115
  %.not135 = icmp eq ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.strides, null, !dbg !2528
  br i1 %.not135, label %if_end119, label %if_then118, !dbg !2528, !prof !59

if_then118:                                       ; preds = %assert_end117
  %284 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.strides, i64 1, !dbg !2528
  %285 = load i64, ptr %284, align 8, !dbg !2528, !tbaa !2682
  %286 = and i64 %285, 4294967295, !dbg !2528
  %287 = icmp eq i64 %286, 196, !dbg !2528
  %288 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.strides, i64 2, !dbg !2528
  %289 = load i64, ptr %288, align 8, !dbg !2528, !tbaa !2692
  %290 = and i64 %289, 4294967295, !dbg !2528
  %291 = icmp eq i64 %290, 28, !dbg !2528
  %292 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.strides, i64 3, !dbg !2528
  %293 = load i64, ptr %292, align 8, !dbg !2528, !tbaa !2695
  %294 = and i64 %293, 4294967295, !dbg !2528
  %295 = icmp eq i64 %294, 4, !dbg !2528
  %296 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3.T_cast.strides, i64 4, !dbg !2528
  %297 = load i64, ptr %296, align 8, !dbg !2528, !tbaa !2697
  %298 = and i64 %297, 4294967295, !dbg !2528
  %299 = icmp eq i64 %298, 1, !dbg !2528
  %300 = and i1 %295, %299, !dbg !2528
  %301 = and i1 %291, %300, !dbg !2528
  %302 = and i1 %287, %301, !dbg !2528
  br i1 %302, label %if_end119, label %assert_fail120, !dbg !2528, !prof !18

if_end119:                                        ; preds = %if_then118, %assert_end117
  %303 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !2528
  %304 = load i64, ptr %303, align 8, !dbg !2528
  %305 = icmp eq i64 %304, 0, !dbg !2528
  br i1 %305, label %assert_end123, label %assert_fail122, !dbg !2528, !prof !18

assert_fail120:                                   ; preds = %if_then118
  %306 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %306(ptr nonnull @.str.814), !dbg !2528
  br label %common.ret

assert_fail122:                                   ; preds = %if_end119
  %307 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %307(ptr nonnull @.str.815), !dbg !2528
  br label %common.ret

assert_end123:                                    ; preds = %if_end119
  %308 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !2528
  %309 = load i32, ptr %308, align 4, !dbg !2528
  %310 = icmp eq i32 %309, 1, !dbg !2528
  br i1 %310, label %assert_end125, label %assert_fail124, !dbg !2528, !prof !18

assert_fail124:                                   ; preds = %assert_end123
  %311 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %311(ptr nonnull @.str.816), !dbg !2528
  br label %common.ret

assert_end125:                                    ; preds = %assert_end123
  %312 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !2528
  %313 = load i32, ptr %312, align 4, !dbg !2528
  %314 = icmp eq i32 %dev_id, %313, !dbg !2528
  br i1 %314, label %assert_end127, label %assert_fail126, !dbg !2528, !prof !18

assert_fail126:                                   ; preds = %assert_end125
  %315 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2528, !tbaa !19
  tail call void %315(ptr nonnull @.str.817), !dbg !2528
  br label %common.ret

assert_end127:                                    ; preds = %assert_end125
  %316 = tail call fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_compute_(ptr %T_cast128, ptr %p0129, ptr %p1130, ptr %p2131, ptr %p3132), !dbg !2528
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2701 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2703, metadata !DIExpression()), !dbg !2709
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2704, metadata !DIExpression()), !dbg !2709
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2705, metadata !DIExpression()), !dbg !2709
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2706, metadata !DIExpression()), !dbg !2709
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2707, metadata !DIExpression()), !dbg !2709
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2708, metadata !DIExpression()), !dbg !2709
  %0 = icmp eq i32 %num_args, 6, !dbg !2709
  br i1 %0, label %assert_end, label %assert_fail, !dbg !2709, !prof !18

common.ret:                                       ; preds = %assert_end142, %assert_fail141, %assert_fail139, %assert_fail137, %assert_fail135, %assert_fail131, %assert_fail129, %assert_fail127, %assert_fail125, %assert_fail123, %assert_fail121, %assert_fail117, %assert_fail115, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail105, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail93, %assert_fail91, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail55, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail105 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ -1, %assert_fail115 ], [ -1, %assert_fail117 ], [ -1, %assert_fail121 ], [ -1, %assert_fail123 ], [ -1, %assert_fail125 ], [ -1, %assert_fail127 ], [ -1, %assert_fail129 ], [ -1, %assert_fail131 ], [ -1, %assert_fail135 ], [ -1, %assert_fail137 ], [ -1, %assert_fail139 ], [ -1, %assert_fail141 ], [ %347, %assert_end142 ]
  ret i32 %common.ret.op, !dbg !2709

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %1(ptr nonnull @.str.819), !dbg !2709
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2709, !tbaa !2710
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2709
  %p1.code = load i32, ptr %2, align 4, !dbg !2709, !tbaa !2721
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2709
  %p2.code = load i32, ptr %3, align 4, !dbg !2709, !tbaa !2723
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2709
  %p3.code = load i32, ptr %4, align 4, !dbg !2709, !tbaa !2726
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !2709
  %p4.code = load i32, ptr %5, align 4, !dbg !2709, !tbaa !2728
  %6 = getelementptr inbounds i32, ptr %arg_type_ids, i64 5, !dbg !2709
  %T_cast.code = load i32, ptr %6, align 4, !dbg !2709, !tbaa !2732
  %p0 = load ptr, ptr %args, align 8, !dbg !2709
  %7 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2709
  %p1 = load ptr, ptr %7, align 8, !dbg !2709
  %8 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2709
  %p2 = load ptr, ptr %8, align 8, !dbg !2709
  %9 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2709
  %p3 = load ptr, ptr %9, align 8, !dbg !2709
  %10 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !2709
  %p4 = load ptr, ptr %10, align 8, !dbg !2709
  %11 = getelementptr inbounds %0, ptr %args, i64 5, !dbg !2709
  %T_cast = load ptr, ptr %11, align 8, !dbg !2709
  %p0144 = load ptr, ptr %p0, align 8, !dbg !2709
  call void @llvm.assume(i1 true) [ "align"(ptr %p0144, i64 64) ], !dbg !2709
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2709
  %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape = load ptr, ptr %12, align 8, !dbg !2709
  %13 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2709
  %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.strides = load ptr, ptr %13, align 8, !dbg !2709
  %14 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2709
  %dev_id = load i32, ptr %14, align 4, !dbg !2709
  %p1145 = load ptr, ptr %p1, align 8, !dbg !2709
  call void @llvm.assume(i1 true) [ "align"(ptr %p1145, i64 64) ], !dbg !2709
  %15 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2709
  %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape = load ptr, ptr %15, align 8, !dbg !2709
  %16 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2709
  %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.strides = load ptr, ptr %16, align 8, !dbg !2709
  %p2146 = load ptr, ptr %p2, align 8, !dbg !2709
  call void @llvm.assume(i1 true) [ "align"(ptr %p2146, i64 64) ], !dbg !2709
  %p3147 = load ptr, ptr %p3, align 8, !dbg !2709
  call void @llvm.assume(i1 true) [ "align"(ptr %p3147, i64 64) ], !dbg !2709
  %17 = getelementptr inbounds %1, ptr %p3, i64 0, i32 4, !dbg !2709
  %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.shape = load ptr, ptr %17, align 8, !dbg !2709
  %18 = getelementptr inbounds %1, ptr %p3, i64 0, i32 5, !dbg !2709
  %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.strides = load ptr, ptr %18, align 8, !dbg !2709
  %p4148 = load ptr, ptr %p4, align 8, !dbg !2709
  call void @llvm.assume(i1 true) [ "align"(ptr %p4148, i64 64) ], !dbg !2709
  %T_cast143 = load ptr, ptr %T_cast, align 8, !dbg !2709
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast143, i64 64) ], !dbg !2709
  %19 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !2709
  %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape = load ptr, ptr %19, align 8, !dbg !2709
  %20 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !2709
  %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.strides = load ptr, ptr %20, align 8, !dbg !2709
  switch i32 %p0.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !2709

assert_fail7:                                     ; preds = %assert_end
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %21(ptr nonnull @.str.820), !dbg !2709
  br label %common.ret

assert_end8:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !2709

assert_fail9:                                     ; preds = %assert_end8
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %22(ptr nonnull @.str.821), !dbg !2709
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %p2.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !2709

assert_fail11:                                    ; preds = %assert_end10
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %23(ptr nonnull @.str.822), !dbg !2709
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  switch i32 %p3.code, label %assert_fail13 [
    i32 13, label %assert_end14
    i32 7, label %assert_end14
    i32 4, label %assert_end14
    i32 3, label %assert_end14
  ], !dbg !2709

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %24(ptr nonnull @.str.823), !dbg !2709
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12, %assert_end12, %assert_end12, %assert_end12
  switch i32 %p4.code, label %assert_fail15 [
    i32 13, label %assert_end16
    i32 7, label %assert_end16
    i32 4, label %assert_end16
    i32 3, label %assert_end16
  ], !dbg !2709

assert_fail15:                                    ; preds = %assert_end14
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %25(ptr nonnull @.str.824), !dbg !2709
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14, %assert_end14, %assert_end14, %assert_end14
  switch i32 %T_cast.code, label %assert_fail17 [
    i32 13, label %assert_end18
    i32 7, label %assert_end18
    i32 4, label %assert_end18
    i32 3, label %assert_end18
  ], !dbg !2709

assert_fail17:                                    ; preds = %assert_end16
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %26(ptr nonnull @.str.825), !dbg !2709
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16, %assert_end16, %assert_end16, %assert_end16
  %27 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2709
  %28 = load i32, ptr %27, align 4, !dbg !2709
  %29 = icmp eq i32 %28, 5, !dbg !2709
  br i1 %29, label %assert_end22, label %assert_fail19, !dbg !2709, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %30(ptr nonnull @.str.826), !dbg !2709
  br label %common.ret

assert_end22:                                     ; preds = %assert_end18
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2709
  %32 = load i16, ptr %31, align 2, !dbg !2709
  %33 = icmp eq i16 %32, 1, !dbg !2709
  %34 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2709
  %35 = load i8, ptr %34, align 1, !dbg !2709
  %36 = icmp eq i8 %35, 8, !dbg !2709
  %37 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2709
  %38 = load i8, ptr %37, align 1, !dbg !2709
  %39 = icmp eq i8 %38, 0, !dbg !2709
  %40 = and i1 %36, %39, !dbg !2709
  %41 = and i1 %33, %40, !dbg !2709
  br i1 %41, label %assert_end24, label %assert_fail23, !dbg !2709, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %42 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %42(ptr nonnull @.str.827), !dbg !2709
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %43 = load i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape, align 8, !dbg !2709, !tbaa !2734
  %44 = and i64 %43, 4294967295, !dbg !2709
  %45 = icmp eq i64 %44, 1, !dbg !2709
  br i1 %45, label %assert_end26, label %assert_fail25, !dbg !2709, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %46(ptr nonnull @.str.828), !dbg !2709
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape, i64 1, !dbg !2709
  %48 = load i64, ptr %47, align 8, !dbg !2709, !tbaa !2744
  %49 = and i64 %48, 4294967295, !dbg !2709
  %50 = icmp eq i64 %49, 512, !dbg !2709
  br i1 %50, label %assert_end28, label %assert_fail27, !dbg !2709, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %51(ptr nonnull @.str.829), !dbg !2709
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape, i64 2, !dbg !2709
  %53 = load i64, ptr %52, align 8, !dbg !2709, !tbaa !2746
  %54 = and i64 %53, 4294967295, !dbg !2709
  %55 = icmp eq i64 %54, 7, !dbg !2709
  br i1 %55, label %assert_end30, label %assert_fail29, !dbg !2709, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %56(ptr nonnull @.str.830), !dbg !2709
  br label %common.ret

assert_end30:                                     ; preds = %assert_end28
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape, i64 3, !dbg !2709
  %58 = load i64, ptr %57, align 8, !dbg !2709, !tbaa !2749
  %59 = and i64 %58, 4294967295, !dbg !2709
  %60 = icmp eq i64 %59, 7, !dbg !2709
  br i1 %60, label %assert_end32, label %assert_fail31, !dbg !2709, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %61(ptr nonnull @.str.831), !dbg !2709
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.shape, i64 4, !dbg !2709
  %63 = load i64, ptr %62, align 8, !dbg !2709, !tbaa !2751
  %64 = and i64 %63, 4294967295, !dbg !2709
  %65 = icmp eq i64 %64, 4, !dbg !2709
  br i1 %65, label %assert_end34, label %assert_fail33, !dbg !2709, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %66 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %66(ptr nonnull @.str.832), !dbg !2709
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %.not = icmp eq ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.strides, null, !dbg !2709
  br i1 %.not, label %if_end, label %if_then, !dbg !2709, !prof !59

if_then:                                          ; preds = %assert_end34
  %67 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.strides, i64 1, !dbg !2709
  %68 = load i64, ptr %67, align 8, !dbg !2709, !tbaa !2755
  %69 = and i64 %68, 4294967295, !dbg !2709
  %70 = icmp eq i64 %69, 196, !dbg !2709
  %71 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.strides, i64 2, !dbg !2709
  %72 = load i64, ptr %71, align 8, !dbg !2709, !tbaa !2765
  %73 = and i64 %72, 4294967295, !dbg !2709
  %74 = icmp eq i64 %73, 28, !dbg !2709
  %75 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.strides, i64 3, !dbg !2709
  %76 = load i64, ptr %75, align 8, !dbg !2709, !tbaa !2768
  %77 = and i64 %76, 4294967295, !dbg !2709
  %78 = icmp eq i64 %77, 4, !dbg !2709
  %79 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p0.strides, i64 4, !dbg !2709
  %80 = load i64, ptr %79, align 8, !dbg !2709, !tbaa !2770
  %81 = and i64 %80, 4294967295, !dbg !2709
  %82 = icmp eq i64 %81, 1, !dbg !2709
  %83 = and i1 %78, %82, !dbg !2709
  %84 = and i1 %74, %83, !dbg !2709
  %85 = and i1 %70, %84, !dbg !2709
  br i1 %85, label %if_end, label %assert_fail35, !dbg !2709, !prof !18

if_end:                                           ; preds = %if_then, %assert_end34
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2709
  %87 = load i64, ptr %86, align 8, !dbg !2709
  %88 = icmp eq i64 %87, 0, !dbg !2709
  br i1 %88, label %assert_end38, label %assert_fail37, !dbg !2709, !prof !18

assert_fail35:                                    ; preds = %if_then
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %89(ptr nonnull @.str.833), !dbg !2709
  br label %common.ret

assert_fail37:                                    ; preds = %if_end
  %90 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %90(ptr nonnull @.str.834), !dbg !2709
  br label %common.ret

assert_end38:                                     ; preds = %if_end
  %91 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2709
  %92 = load i32, ptr %91, align 4, !dbg !2709
  %93 = icmp eq i32 %92, 1, !dbg !2709
  br i1 %93, label %assert_end40, label %assert_fail39, !dbg !2709, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %94(ptr nonnull @.str.835), !dbg !2709
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %95 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2709
  %96 = load i32, ptr %95, align 4, !dbg !2709
  %97 = icmp eq i32 %96, 5, !dbg !2709
  br i1 %97, label %assert_end44, label %assert_fail41, !dbg !2709, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %98(ptr nonnull @.str.836), !dbg !2709
  br label %common.ret

assert_end44:                                     ; preds = %assert_end40
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2709
  %100 = load i16, ptr %99, align 2, !dbg !2709
  %101 = icmp eq i16 %100, 1, !dbg !2709
  %102 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2709
  %103 = load i8, ptr %102, align 1, !dbg !2709
  %104 = icmp eq i8 %103, 16, !dbg !2709
  %105 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2709
  %106 = load i8, ptr %105, align 1, !dbg !2709
  %107 = icmp eq i8 %106, 0, !dbg !2709
  %108 = and i1 %104, %107, !dbg !2709
  %109 = and i1 %101, %108, !dbg !2709
  br i1 %109, label %assert_end46, label %assert_fail45, !dbg !2709, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %110 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %110(ptr nonnull @.str.837), !dbg !2709
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %111 = load i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape, align 8, !dbg !2709, !tbaa !2774
  %112 = and i64 %111, 4294967295, !dbg !2709
  %113 = icmp eq i64 %112, 1, !dbg !2709
  br i1 %113, label %assert_end48, label %assert_fail47, !dbg !2709, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %114(ptr nonnull @.str.838), !dbg !2709
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape, i64 1, !dbg !2709
  %116 = load i64, ptr %115, align 8, !dbg !2709, !tbaa !2784
  %117 = and i64 %116, 4294967295, !dbg !2709
  %118 = icmp eq i64 %117, 512, !dbg !2709
  br i1 %118, label %assert_end50, label %assert_fail49, !dbg !2709, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %119(ptr nonnull @.str.839), !dbg !2709
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape, i64 2, !dbg !2709
  %121 = load i64, ptr %120, align 8, !dbg !2709, !tbaa !2786
  %122 = and i64 %121, 4294967295, !dbg !2709
  %123 = icmp eq i64 %122, 1, !dbg !2709
  br i1 %123, label %assert_end52, label %assert_fail51, !dbg !2709, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %124(ptr nonnull @.str.840), !dbg !2709
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape, i64 3, !dbg !2709
  %126 = load i64, ptr %125, align 8, !dbg !2709, !tbaa !2789
  %127 = and i64 %126, 4294967295, !dbg !2709
  %128 = icmp eq i64 %127, 1, !dbg !2709
  br i1 %128, label %assert_end54, label %assert_fail53, !dbg !2709, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %129(ptr nonnull @.str.841), !dbg !2709
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.shape, i64 4, !dbg !2709
  %131 = load i64, ptr %130, align 8, !dbg !2709, !tbaa !2791
  %132 = and i64 %131, 4294967295, !dbg !2709
  %133 = icmp eq i64 %132, 4, !dbg !2709
  br i1 %133, label %assert_end56, label %assert_fail55, !dbg !2709, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %134(ptr nonnull @.str.842), !dbg !2709
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %.not149 = icmp eq ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.strides, null, !dbg !2709
  br i1 %.not149, label %if_end58, label %if_then57, !dbg !2709, !prof !59

if_then57:                                        ; preds = %assert_end56
  %135 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.strides, i64 1, !dbg !2709
  %136 = load i64, ptr %135, align 8, !dbg !2709, !tbaa !2795
  %137 = and i64 %136, 4294967295, !dbg !2709
  %138 = icmp eq i64 %137, 4, !dbg !2709
  %139 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p1.strides, i64 4, !dbg !2709
  %140 = load i64, ptr %139, align 8, !dbg !2709, !tbaa !2805
  %141 = and i64 %140, 4294967295, !dbg !2709
  %142 = icmp eq i64 %141, 1, !dbg !2709
  %143 = and i1 %138, %142, !dbg !2709
  br i1 %143, label %if_end58, label %assert_fail59, !dbg !2709, !prof !18

if_end58:                                         ; preds = %if_then57, %assert_end56
  %144 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2709
  %145 = load i64, ptr %144, align 8, !dbg !2709
  %146 = icmp eq i64 %145, 0, !dbg !2709
  br i1 %146, label %assert_end62, label %assert_fail61, !dbg !2709, !prof !18

assert_fail59:                                    ; preds = %if_then57
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %147(ptr nonnull @.str.843), !dbg !2709
  br label %common.ret

assert_fail61:                                    ; preds = %if_end58
  %148 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %148(ptr nonnull @.str.844), !dbg !2709
  br label %common.ret

assert_end62:                                     ; preds = %if_end58
  %149 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2709
  %150 = load i32, ptr %149, align 4, !dbg !2709
  %151 = icmp eq i32 %150, 1, !dbg !2709
  br i1 %151, label %assert_end64, label %assert_fail63, !dbg !2709, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %152 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %152(ptr nonnull @.str.845), !dbg !2709
  br label %common.ret

assert_end64:                                     ; preds = %assert_end62
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2709
  %154 = load i32, ptr %153, align 4, !dbg !2709
  %155 = icmp eq i32 %dev_id, %154, !dbg !2709
  br i1 %155, label %assert_end66, label %assert_fail65, !dbg !2709, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %156(ptr nonnull @.str.846), !dbg !2709
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %157 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2709
  %158 = load i32, ptr %157, align 4, !dbg !2709
  %159 = icmp eq i32 %158, 0, !dbg !2709
  br i1 %159, label %assert_end70, label %assert_fail67, !dbg !2709, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %160(ptr nonnull @.str.847), !dbg !2709
  br label %common.ret

assert_end70:                                     ; preds = %assert_end66
  %161 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2709
  %162 = load i16, ptr %161, align 2, !dbg !2709
  %163 = icmp eq i16 %162, 1, !dbg !2709
  %164 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2709
  %165 = load i8, ptr %164, align 1, !dbg !2709
  %166 = icmp eq i8 %165, 16, !dbg !2709
  %167 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2709
  %168 = load i8, ptr %167, align 1, !dbg !2709
  %169 = icmp eq i8 %168, 0, !dbg !2709
  %170 = and i1 %166, %169, !dbg !2709
  %171 = and i1 %163, %170, !dbg !2709
  br i1 %171, label %assert_end72, label %assert_fail71, !dbg !2709, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %172 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %172(ptr nonnull @.str.848), !dbg !2709
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %173 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2709
  %174 = load i64, ptr %173, align 8, !dbg !2709
  %175 = icmp eq i64 %174, 0, !dbg !2709
  br i1 %175, label %assert_end74, label %assert_fail73, !dbg !2709, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %176 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %176(ptr nonnull @.str.849), !dbg !2709
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %177 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2709
  %178 = load i32, ptr %177, align 4, !dbg !2709
  %179 = icmp eq i32 %178, 1, !dbg !2709
  br i1 %179, label %assert_end76, label %assert_fail75, !dbg !2709, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %180(ptr nonnull @.str.850), !dbg !2709
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %181 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2709
  %182 = load i32, ptr %181, align 4, !dbg !2709
  %183 = icmp eq i32 %dev_id, %182, !dbg !2709
  br i1 %183, label %assert_end78, label %assert_fail77, !dbg !2709, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %184(ptr nonnull @.str.851), !dbg !2709
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %185 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !2709
  %186 = load i32, ptr %185, align 4, !dbg !2709
  %187 = icmp eq i32 %186, 5, !dbg !2709
  br i1 %187, label %assert_end82, label %assert_fail79, !dbg !2709, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %188 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %188(ptr nonnull @.str.852), !dbg !2709
  br label %common.ret

assert_end82:                                     ; preds = %assert_end78
  %189 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !2709
  %190 = load i16, ptr %189, align 2, !dbg !2709
  %191 = icmp eq i16 %190, 1, !dbg !2709
  %192 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !2709
  %193 = load i8, ptr %192, align 1, !dbg !2709
  %194 = icmp eq i8 %193, 16, !dbg !2709
  %195 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !2709
  %196 = load i8, ptr %195, align 1, !dbg !2709
  %197 = icmp eq i8 %196, 0, !dbg !2709
  %198 = and i1 %194, %197, !dbg !2709
  %199 = and i1 %191, %198, !dbg !2709
  br i1 %199, label %assert_end84, label %assert_fail83, !dbg !2709, !prof !18

assert_fail83:                                    ; preds = %assert_end82
  %200 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %200(ptr nonnull @.str.853), !dbg !2709
  br label %common.ret

assert_end84:                                     ; preds = %assert_end82
  %201 = load i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.shape, align 8, !dbg !2709, !tbaa !2809
  %202 = and i64 %201, 4294967295, !dbg !2709
  %203 = icmp eq i64 %202, 1, !dbg !2709
  br i1 %203, label %assert_end86, label %assert_fail85, !dbg !2709, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %204(ptr nonnull @.str.854), !dbg !2709
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.shape, i64 1, !dbg !2709
  %206 = load i64, ptr %205, align 8, !dbg !2709, !tbaa !2819
  %207 = and i64 %206, 4294967295, !dbg !2709
  %208 = icmp eq i64 %207, 512, !dbg !2709
  br i1 %208, label %assert_end88, label %assert_fail87, !dbg !2709, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %209(ptr nonnull @.str.855), !dbg !2709
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %210 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.shape, i64 2, !dbg !2709
  %211 = load i64, ptr %210, align 8, !dbg !2709, !tbaa !2821
  %212 = and i64 %211, 4294967295, !dbg !2709
  %213 = icmp eq i64 %212, 1, !dbg !2709
  br i1 %213, label %assert_end90, label %assert_fail89, !dbg !2709, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %214 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %214(ptr nonnull @.str.856), !dbg !2709
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %215 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.shape, i64 3, !dbg !2709
  %216 = load i64, ptr %215, align 8, !dbg !2709, !tbaa !2824
  %217 = and i64 %216, 4294967295, !dbg !2709
  %218 = icmp eq i64 %217, 1, !dbg !2709
  br i1 %218, label %assert_end92, label %assert_fail91, !dbg !2709, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %219 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %219(ptr nonnull @.str.857), !dbg !2709
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %220 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.shape, i64 4, !dbg !2709
  %221 = load i64, ptr %220, align 8, !dbg !2709, !tbaa !2826
  %222 = and i64 %221, 4294967295, !dbg !2709
  %223 = icmp eq i64 %222, 4, !dbg !2709
  br i1 %223, label %assert_end94, label %assert_fail93, !dbg !2709, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %224 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %224(ptr nonnull @.str.858), !dbg !2709
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %.not150 = icmp eq ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.strides, null, !dbg !2709
  br i1 %.not150, label %if_end96, label %if_then95, !dbg !2709, !prof !59

if_then95:                                        ; preds = %assert_end94
  %225 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.strides, i64 1, !dbg !2709
  %226 = load i64, ptr %225, align 8, !dbg !2709, !tbaa !2830
  %227 = and i64 %226, 4294967295, !dbg !2709
  %228 = icmp eq i64 %227, 4, !dbg !2709
  %229 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.p3.strides, i64 4, !dbg !2709
  %230 = load i64, ptr %229, align 8, !dbg !2709, !tbaa !2840
  %231 = and i64 %230, 4294967295, !dbg !2709
  %232 = icmp eq i64 %231, 1, !dbg !2709
  %233 = and i1 %228, %232, !dbg !2709
  br i1 %233, label %if_end96, label %assert_fail97, !dbg !2709, !prof !18

if_end96:                                         ; preds = %if_then95, %assert_end94
  %234 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !2709
  %235 = load i64, ptr %234, align 8, !dbg !2709
  %236 = icmp eq i64 %235, 0, !dbg !2709
  br i1 %236, label %assert_end100, label %assert_fail99, !dbg !2709, !prof !18

assert_fail97:                                    ; preds = %if_then95
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %237(ptr nonnull @.str.859), !dbg !2709
  br label %common.ret

assert_fail99:                                    ; preds = %if_end96
  %238 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %238(ptr nonnull @.str.860), !dbg !2709
  br label %common.ret

assert_end100:                                    ; preds = %if_end96
  %239 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !2709
  %240 = load i32, ptr %239, align 4, !dbg !2709
  %241 = icmp eq i32 %240, 1, !dbg !2709
  br i1 %241, label %assert_end102, label %assert_fail101, !dbg !2709, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %242(ptr nonnull @.str.861), !dbg !2709
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %243 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !2709
  %244 = load i32, ptr %243, align 4, !dbg !2709
  %245 = icmp eq i32 %dev_id, %244, !dbg !2709
  br i1 %245, label %assert_end104, label %assert_fail103, !dbg !2709, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %246(ptr nonnull @.str.862), !dbg !2709
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %247 = getelementptr inbounds %1, ptr %p4, i64 0, i32 2, !dbg !2709
  %248 = load i32, ptr %247, align 4, !dbg !2709
  %249 = icmp eq i32 %248, 0, !dbg !2709
  br i1 %249, label %assert_end108, label %assert_fail105, !dbg !2709, !prof !18

assert_fail105:                                   ; preds = %assert_end104
  %250 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %250(ptr nonnull @.str.863), !dbg !2709
  br label %common.ret

assert_end108:                                    ; preds = %assert_end104
  %251 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 2, !dbg !2709
  %252 = load i16, ptr %251, align 2, !dbg !2709
  %253 = icmp eq i16 %252, 1, !dbg !2709
  %254 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 1, !dbg !2709
  %255 = load i8, ptr %254, align 1, !dbg !2709
  %256 = icmp eq i8 %255, 16, !dbg !2709
  %257 = getelementptr inbounds %1, ptr %p4, i64 0, i32 3, i32 0, !dbg !2709
  %258 = load i8, ptr %257, align 1, !dbg !2709
  %259 = icmp eq i8 %258, 0, !dbg !2709
  %260 = and i1 %256, %259, !dbg !2709
  %261 = and i1 %253, %260, !dbg !2709
  br i1 %261, label %assert_end110, label %assert_fail109, !dbg !2709, !prof !18

assert_fail109:                                   ; preds = %assert_end108
  %262 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %262(ptr nonnull @.str.864), !dbg !2709
  br label %common.ret

assert_end110:                                    ; preds = %assert_end108
  %263 = getelementptr inbounds %1, ptr %p4, i64 0, i32 6, !dbg !2709
  %264 = load i64, ptr %263, align 8, !dbg !2709
  %265 = icmp eq i64 %264, 0, !dbg !2709
  br i1 %265, label %assert_end112, label %assert_fail111, !dbg !2709, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %266(ptr nonnull @.str.865), !dbg !2709
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %267 = getelementptr inbounds %1, ptr %p4, i64 0, i32 1, i32 0, !dbg !2709
  %268 = load i32, ptr %267, align 4, !dbg !2709
  %269 = icmp eq i32 %268, 1, !dbg !2709
  br i1 %269, label %assert_end114, label %assert_fail113, !dbg !2709, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %270 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %270(ptr nonnull @.str.866), !dbg !2709
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %271 = getelementptr inbounds %1, ptr %p4, i64 0, i32 1, i32 1, !dbg !2709
  %272 = load i32, ptr %271, align 4, !dbg !2709
  %273 = icmp eq i32 %dev_id, %272, !dbg !2709
  br i1 %273, label %assert_end116, label %assert_fail115, !dbg !2709, !prof !18

assert_fail115:                                   ; preds = %assert_end114
  %274 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %274(ptr nonnull @.str.867), !dbg !2709
  br label %common.ret

assert_end116:                                    ; preds = %assert_end114
  %275 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !2709
  %276 = load i32, ptr %275, align 4, !dbg !2709
  %277 = icmp eq i32 %276, 5, !dbg !2709
  br i1 %277, label %assert_end120, label %assert_fail117, !dbg !2709, !prof !18

assert_fail117:                                   ; preds = %assert_end116
  %278 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %278(ptr nonnull @.str.868), !dbg !2709
  br label %common.ret

assert_end120:                                    ; preds = %assert_end116
  %279 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !2709
  %280 = load i16, ptr %279, align 2, !dbg !2709
  %281 = icmp eq i16 %280, 1, !dbg !2709
  %282 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !2709
  %283 = load i8, ptr %282, align 1, !dbg !2709
  %284 = icmp eq i8 %283, 8, !dbg !2709
  %285 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !2709
  %286 = load i8, ptr %285, align 1, !dbg !2709
  %287 = icmp eq i8 %286, 0, !dbg !2709
  %288 = and i1 %284, %287, !dbg !2709
  %289 = and i1 %281, %288, !dbg !2709
  br i1 %289, label %assert_end122, label %assert_fail121, !dbg !2709, !prof !18

assert_fail121:                                   ; preds = %assert_end120
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %290(ptr nonnull @.str.869), !dbg !2709
  br label %common.ret

assert_end122:                                    ; preds = %assert_end120
  %291 = load i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape, align 8, !dbg !2709, !tbaa !2844
  %292 = and i64 %291, 4294967295, !dbg !2709
  %293 = icmp eq i64 %292, 1, !dbg !2709
  br i1 %293, label %assert_end124, label %assert_fail123, !dbg !2709, !prof !18

assert_fail123:                                   ; preds = %assert_end122
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %294(ptr nonnull @.str.870), !dbg !2709
  br label %common.ret

assert_end124:                                    ; preds = %assert_end122
  %295 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape, i64 1, !dbg !2709
  %296 = load i64, ptr %295, align 8, !dbg !2709, !tbaa !2854
  %297 = and i64 %296, 4294967295, !dbg !2709
  %298 = icmp eq i64 %297, 512, !dbg !2709
  br i1 %298, label %assert_end126, label %assert_fail125, !dbg !2709, !prof !18

assert_fail125:                                   ; preds = %assert_end124
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %299(ptr nonnull @.str.871), !dbg !2709
  br label %common.ret

assert_end126:                                    ; preds = %assert_end124
  %300 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape, i64 2, !dbg !2709
  %301 = load i64, ptr %300, align 8, !dbg !2709, !tbaa !2856
  %302 = and i64 %301, 4294967295, !dbg !2709
  %303 = icmp eq i64 %302, 7, !dbg !2709
  br i1 %303, label %assert_end128, label %assert_fail127, !dbg !2709, !prof !18

assert_fail127:                                   ; preds = %assert_end126
  %304 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %304(ptr nonnull @.str.872), !dbg !2709
  br label %common.ret

assert_end128:                                    ; preds = %assert_end126
  %305 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape, i64 3, !dbg !2709
  %306 = load i64, ptr %305, align 8, !dbg !2709, !tbaa !2859
  %307 = and i64 %306, 4294967295, !dbg !2709
  %308 = icmp eq i64 %307, 7, !dbg !2709
  br i1 %308, label %assert_end130, label %assert_fail129, !dbg !2709, !prof !18

assert_fail129:                                   ; preds = %assert_end128
  %309 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %309(ptr nonnull @.str.873), !dbg !2709
  br label %common.ret

assert_end130:                                    ; preds = %assert_end128
  %310 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.shape, i64 4, !dbg !2709
  %311 = load i64, ptr %310, align 8, !dbg !2709, !tbaa !2861
  %312 = and i64 %311, 4294967295, !dbg !2709
  %313 = icmp eq i64 %312, 4, !dbg !2709
  br i1 %313, label %assert_end132, label %assert_fail131, !dbg !2709, !prof !18

assert_fail131:                                   ; preds = %assert_end130
  %314 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %314(ptr nonnull @.str.874), !dbg !2709
  br label %common.ret

assert_end132:                                    ; preds = %assert_end130
  %.not151 = icmp eq ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.strides, null, !dbg !2709
  br i1 %.not151, label %if_end134, label %if_then133, !dbg !2709, !prof !59

if_then133:                                       ; preds = %assert_end132
  %315 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.strides, i64 1, !dbg !2709
  %316 = load i64, ptr %315, align 8, !dbg !2709, !tbaa !2865
  %317 = and i64 %316, 4294967295, !dbg !2709
  %318 = icmp eq i64 %317, 196, !dbg !2709
  %319 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.strides, i64 2, !dbg !2709
  %320 = load i64, ptr %319, align 8, !dbg !2709, !tbaa !2875
  %321 = and i64 %320, 4294967295, !dbg !2709
  %322 = icmp eq i64 %321, 28, !dbg !2709
  %323 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.strides, i64 3, !dbg !2709
  %324 = load i64, ptr %323, align 8, !dbg !2709, !tbaa !2878
  %325 = and i64 %324, 4294967295, !dbg !2709
  %326 = icmp eq i64 %325, 4, !dbg !2709
  %327 = getelementptr inbounds i64, ptr %tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast.T_cast.strides, i64 4, !dbg !2709
  %328 = load i64, ptr %327, align 8, !dbg !2709, !tbaa !2880
  %329 = and i64 %328, 4294967295, !dbg !2709
  %330 = icmp eq i64 %329, 1, !dbg !2709
  %331 = and i1 %326, %330, !dbg !2709
  %332 = and i1 %322, %331, !dbg !2709
  %333 = and i1 %318, %332, !dbg !2709
  br i1 %333, label %if_end134, label %assert_fail135, !dbg !2709, !prof !18

if_end134:                                        ; preds = %if_then133, %assert_end132
  %334 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !2709
  %335 = load i64, ptr %334, align 8, !dbg !2709
  %336 = icmp eq i64 %335, 0, !dbg !2709
  br i1 %336, label %assert_end138, label %assert_fail137, !dbg !2709, !prof !18

assert_fail135:                                   ; preds = %if_then133
  %337 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %337(ptr nonnull @.str.875), !dbg !2709
  br label %common.ret

assert_fail137:                                   ; preds = %if_end134
  %338 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %338(ptr nonnull @.str.876), !dbg !2709
  br label %common.ret

assert_end138:                                    ; preds = %if_end134
  %339 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !2709
  %340 = load i32, ptr %339, align 4, !dbg !2709
  %341 = icmp eq i32 %340, 1, !dbg !2709
  br i1 %341, label %assert_end140, label %assert_fail139, !dbg !2709, !prof !18

assert_fail139:                                   ; preds = %assert_end138
  %342 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %342(ptr nonnull @.str.877), !dbg !2709
  br label %common.ret

assert_end140:                                    ; preds = %assert_end138
  %343 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !2709
  %344 = load i32, ptr %343, align 4, !dbg !2709
  %345 = icmp eq i32 %dev_id, %344, !dbg !2709
  br i1 %345, label %assert_end142, label %assert_fail141, !dbg !2709, !prof !18

assert_fail141:                                   ; preds = %assert_end140
  %346 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2709, !tbaa !19
  tail call void %346(ptr nonnull @.str.878), !dbg !2709
  br label %common.ret

assert_end142:                                    ; preds = %assert_end140
  %347 = tail call fastcc i32 @tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_compute_(ptr %T_cast143, ptr %p0144, ptr %p1145, ptr %p2146, ptr %p3147, ptr %p4148), !dbg !2709
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2884 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2886, metadata !DIExpression()), !dbg !2892
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2887, metadata !DIExpression()), !dbg !2892
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2888, metadata !DIExpression()), !dbg !2892
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2889, metadata !DIExpression()), !dbg !2892
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2890, metadata !DIExpression()), !dbg !2892
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2891, metadata !DIExpression()), !dbg !2892
  %0 = icmp eq i32 %num_args, 2, !dbg !2892
  br i1 %0, label %assert_end, label %assert_fail, !dbg !2892, !prof !18

common.ret:                                       ; preds = %assert_end52, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ %136, %assert_end52 ]
  ret i32 %common.ret.op, !dbg !2892

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %1(ptr nonnull @.str.880), !dbg !2892
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2892, !tbaa !2893
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2892
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !2892, !tbaa !2904
  %p0 = load ptr, ptr %args, align 8, !dbg !2892
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2892
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !2892
  %p054 = load ptr, ptr %p0, align 8, !dbg !2892
  call void @llvm.assume(i1 true) [ "align"(ptr %p054, i64 64) ], !dbg !2892
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2892
  %tvmgen_default_fused_layout_transform.p0.shape = load ptr, ptr %4, align 8, !dbg !2892
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2892
  %tvmgen_default_fused_layout_transform.p0.strides = load ptr, ptr %5, align 8, !dbg !2892
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2892
  %dev_id = load i32, ptr %6, align 4, !dbg !2892
  %T_layout_trans53 = load ptr, ptr %T_layout_trans, align 8, !dbg !2892
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans53, i64 64) ], !dbg !2892
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !2892
  %tvmgen_default_fused_layout_transform.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !2892
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !2892
  %tvmgen_default_fused_layout_transform.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !2892
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !2892

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %9(ptr nonnull @.str.881), !dbg !2892
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2892

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %10(ptr nonnull @.str.882), !dbg !2892
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2892
  %12 = load i32, ptr %11, align 4, !dbg !2892
  %13 = icmp eq i32 %12, 4, !dbg !2892
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !2892, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %14(ptr nonnull @.str.883), !dbg !2892
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2892
  %16 = load i16, ptr %15, align 2, !dbg !2892
  %17 = icmp eq i16 %16, 1, !dbg !2892
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2892
  %19 = load i8, ptr %18, align 1, !dbg !2892
  %20 = icmp eq i8 %19, 32, !dbg !2892
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2892
  %22 = load i8, ptr %21, align 1, !dbg !2892
  %23 = icmp eq i8 %22, 2, !dbg !2892
  %24 = and i1 %20, %23, !dbg !2892
  %25 = and i1 %17, %24, !dbg !2892
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !2892, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %26(ptr nonnull @.str.884), !dbg !2892
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform.p0.shape, align 8, !dbg !2892, !tbaa !2906
  %28 = and i64 %27, 4294967295, !dbg !2892
  %29 = icmp eq i64 %28, 1, !dbg !2892
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !2892, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %30(ptr nonnull @.str.885), !dbg !2892
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.p0.shape, i64 1, !dbg !2892
  %32 = load i64, ptr %31, align 8, !dbg !2892, !tbaa !2916
  %33 = and i64 %32, 4294967295, !dbg !2892
  %34 = icmp eq i64 %33, 3, !dbg !2892
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !2892, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %35(ptr nonnull @.str.886), !dbg !2892
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.p0.shape, i64 2, !dbg !2892
  %37 = load i64, ptr %36, align 8, !dbg !2892, !tbaa !2918
  %38 = and i64 %37, 4294967295, !dbg !2892
  %39 = icmp eq i64 %38, 224, !dbg !2892
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !2892, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %40(ptr nonnull @.str.887), !dbg !2892
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.p0.shape, i64 3, !dbg !2892
  %42 = load i64, ptr %41, align 8, !dbg !2892, !tbaa !2921
  %43 = and i64 %42, 4294967295, !dbg !2892
  %44 = icmp eq i64 %43, 224, !dbg !2892
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !2892, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %45(ptr nonnull @.str.888), !dbg !2892
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform.p0.strides, null, !dbg !2892
  br i1 %.not, label %if_end, label %if_then, !dbg !2892, !prof !59

if_then:                                          ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.p0.strides, i64 1, !dbg !2892
  %47 = load i64, ptr %46, align 8, !dbg !2892, !tbaa !2923
  %48 = and i64 %47, 4294967295, !dbg !2892
  %49 = icmp eq i64 %48, 50176, !dbg !2892
  %50 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.p0.strides, i64 2, !dbg !2892
  %51 = load i64, ptr %50, align 8, !dbg !2892, !tbaa !2933
  %52 = and i64 %51, 4294967295, !dbg !2892
  %53 = icmp eq i64 %52, 224, !dbg !2892
  %54 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.p0.strides, i64 3, !dbg !2892
  %55 = load i64, ptr %54, align 8, !dbg !2892, !tbaa !2936
  %56 = and i64 %55, 4294967295, !dbg !2892
  %57 = icmp eq i64 %56, 1, !dbg !2892
  %58 = and i1 %53, %57, !dbg !2892
  %59 = and i1 %49, %58, !dbg !2892
  br i1 %59, label %if_end, label %assert_fail21, !dbg !2892, !prof !18

if_end:                                           ; preds = %if_then, %assert_end20
  %60 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2892
  %61 = load i64, ptr %60, align 8, !dbg !2892
  %62 = icmp eq i64 %61, 0, !dbg !2892
  br i1 %62, label %assert_end24, label %assert_fail23, !dbg !2892, !prof !18

assert_fail21:                                    ; preds = %if_then
  %63 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %63(ptr nonnull @.str.889), !dbg !2892
  br label %common.ret

assert_fail23:                                    ; preds = %if_end
  %64 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %64(ptr nonnull @.str.890), !dbg !2892
  br label %common.ret

assert_end24:                                     ; preds = %if_end
  %65 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2892
  %66 = load i32, ptr %65, align 4, !dbg !2892
  %67 = icmp eq i32 %66, 1, !dbg !2892
  br i1 %67, label %assert_end26, label %assert_fail25, !dbg !2892, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %68 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %68(ptr nonnull @.str.891), !dbg !2892
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %69 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !2892
  %70 = load i32, ptr %69, align 4, !dbg !2892
  %71 = icmp eq i32 %70, 5, !dbg !2892
  br i1 %71, label %assert_end30, label %assert_fail27, !dbg !2892, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %72 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %72(ptr nonnull @.str.892), !dbg !2892
  br label %common.ret

assert_end30:                                     ; preds = %assert_end26
  %73 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !2892
  %74 = load i16, ptr %73, align 2, !dbg !2892
  %75 = icmp eq i16 %74, 1, !dbg !2892
  %76 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !2892
  %77 = load i8, ptr %76, align 1, !dbg !2892
  %78 = icmp eq i8 %77, 32, !dbg !2892
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !2892
  %80 = load i8, ptr %79, align 1, !dbg !2892
  %81 = icmp eq i8 %80, 2, !dbg !2892
  %82 = and i1 %78, %81, !dbg !2892
  %83 = and i1 %75, %82, !dbg !2892
  br i1 %83, label %assert_end32, label %assert_fail31, !dbg !2892, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %84(ptr nonnull @.str.893), !dbg !2892
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %85 = load i64, ptr %tvmgen_default_fused_layout_transform.T_layout_trans.shape, align 8, !dbg !2892, !tbaa !2938
  %86 = and i64 %85, 4294967295, !dbg !2892
  %87 = icmp eq i64 %86, 1, !dbg !2892
  br i1 %87, label %assert_end34, label %assert_fail33, !dbg !2892, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %88(ptr nonnull @.str.894), !dbg !2892
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %89 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.T_layout_trans.shape, i64 1, !dbg !2892
  %90 = load i64, ptr %89, align 8, !dbg !2892, !tbaa !2948
  %91 = and i64 %90, 4294967295, !dbg !2892
  %92 = icmp eq i64 %91, 1, !dbg !2892
  br i1 %92, label %assert_end36, label %assert_fail35, !dbg !2892, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %93(ptr nonnull @.str.895), !dbg !2892
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %94 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.T_layout_trans.shape, i64 2, !dbg !2892
  %95 = load i64, ptr %94, align 8, !dbg !2892, !tbaa !2950
  %96 = and i64 %95, 4294967295, !dbg !2892
  %97 = icmp eq i64 %96, 224, !dbg !2892
  br i1 %97, label %assert_end38, label %assert_fail37, !dbg !2892, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %98(ptr nonnull @.str.896), !dbg !2892
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.T_layout_trans.shape, i64 3, !dbg !2892
  %100 = load i64, ptr %99, align 8, !dbg !2892, !tbaa !2953
  %101 = and i64 %100, 4294967295, !dbg !2892
  %102 = icmp eq i64 %101, 224, !dbg !2892
  br i1 %102, label %assert_end40, label %assert_fail39, !dbg !2892, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %103(ptr nonnull @.str.897), !dbg !2892
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.T_layout_trans.shape, i64 4, !dbg !2892
  %105 = load i64, ptr %104, align 8, !dbg !2892, !tbaa !2955
  %106 = and i64 %105, 4294967295, !dbg !2892
  %107 = icmp eq i64 %106, 3, !dbg !2892
  br i1 %107, label %assert_end42, label %assert_fail41, !dbg !2892, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %108(ptr nonnull @.str.898), !dbg !2892
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %.not55 = icmp eq ptr %tvmgen_default_fused_layout_transform.T_layout_trans.strides, null, !dbg !2892
  br i1 %.not55, label %if_end44, label %if_then43, !dbg !2892, !prof !59

if_then43:                                        ; preds = %assert_end42
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.T_layout_trans.strides, i64 2, !dbg !2892
  %110 = load i64, ptr %109, align 8, !dbg !2892, !tbaa !2959
  %111 = and i64 %110, 4294967295, !dbg !2892
  %112 = icmp eq i64 %111, 672, !dbg !2892
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.T_layout_trans.strides, i64 3, !dbg !2892
  %114 = load i64, ptr %113, align 8, !dbg !2892, !tbaa !2969
  %115 = and i64 %114, 4294967295, !dbg !2892
  %116 = icmp eq i64 %115, 3, !dbg !2892
  %117 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.T_layout_trans.strides, i64 4, !dbg !2892
  %118 = load i64, ptr %117, align 8, !dbg !2892, !tbaa !2971
  %119 = and i64 %118, 4294967295, !dbg !2892
  %120 = icmp eq i64 %119, 1, !dbg !2892
  %121 = and i1 %116, %120, !dbg !2892
  %122 = and i1 %112, %121, !dbg !2892
  br i1 %122, label %if_end44, label %assert_fail45, !dbg !2892, !prof !18

if_end44:                                         ; preds = %if_then43, %assert_end42
  %123 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !2892
  %124 = load i64, ptr %123, align 8, !dbg !2892
  %125 = icmp eq i64 %124, 0, !dbg !2892
  br i1 %125, label %assert_end48, label %assert_fail47, !dbg !2892, !prof !18

assert_fail45:                                    ; preds = %if_then43
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %126(ptr nonnull @.str.899), !dbg !2892
  br label %common.ret

assert_fail47:                                    ; preds = %if_end44
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %127(ptr nonnull @.str.900), !dbg !2892
  br label %common.ret

assert_end48:                                     ; preds = %if_end44
  %128 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !2892
  %129 = load i32, ptr %128, align 4, !dbg !2892
  %130 = icmp eq i32 %129, 1, !dbg !2892
  br i1 %130, label %assert_end50, label %assert_fail49, !dbg !2892, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %131(ptr nonnull @.str.901), !dbg !2892
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %132 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !2892
  %133 = load i32, ptr %132, align 4, !dbg !2892
  %134 = icmp eq i32 %dev_id, %133, !dbg !2892
  br i1 %134, label %assert_end52, label %assert_fail51, !dbg !2892, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2892, !tbaa !19
  tail call void %135(ptr nonnull @.str.902), !dbg !2892
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %136 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_compute_(ptr %T_layout_trans53, ptr %p054), !dbg !2892
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_reshape_squeeze(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2975 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2977, metadata !DIExpression()), !dbg !2983
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2978, metadata !DIExpression()), !dbg !2983
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2979, metadata !DIExpression()), !dbg !2983
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2980, metadata !DIExpression()), !dbg !2983
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2981, metadata !DIExpression()), !dbg !2983
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2982, metadata !DIExpression()), !dbg !2983
  %0 = icmp eq i32 %num_args, 2, !dbg !2983
  br i1 %0, label %assert_end, label %assert_fail, !dbg !2983, !prof !18

common.ret:                                       ; preds = %assert_end48, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ 0, %assert_end48 ]
  ret i32 %common.ret.op, !dbg !2983

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %1(ptr nonnull @.str.904), !dbg !2983
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2983, !tbaa !2984
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2983
  %T_squeeze.code = load i32, ptr %2, align 4, !dbg !2983, !tbaa !2995
  %p0 = load ptr, ptr %args, align 8, !dbg !2983
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2983
  %T_squeeze = load ptr, ptr %3, align 8, !dbg !2983
  %p050 = load ptr, ptr %p0, align 8, !dbg !2983
  call void @llvm.assume(i1 true) [ "align"(ptr %p050, i64 64) ], !dbg !2983
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2983
  %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape = load ptr, ptr %4, align 8, !dbg !2983
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2983
  %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.strides = load ptr, ptr %5, align 8, !dbg !2983
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2983
  %dev_id = load i32, ptr %6, align 4, !dbg !2983
  %T_squeeze49 = load ptr, ptr %T_squeeze, align 8, !dbg !2983
  call void @llvm.assume(i1 true) [ "align"(ptr %T_squeeze49, i64 64) ], !dbg !2983
  %7 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 4, !dbg !2983
  %tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.shape = load ptr, ptr %7, align 8, !dbg !2983
  %8 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 5, !dbg !2983
  %tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.strides = load ptr, ptr %8, align 8, !dbg !2983
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !2983

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %9(ptr nonnull @.str.905), !dbg !2983
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_squeeze.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2983

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %10(ptr nonnull @.str.906), !dbg !2983
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2983
  %12 = load i32, ptr %11, align 4, !dbg !2983
  %13 = icmp eq i32 %12, 5, !dbg !2983
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !2983, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %14(ptr nonnull @.str.907), !dbg !2983
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2983
  %16 = load i16, ptr %15, align 2, !dbg !2983
  %17 = icmp eq i16 %16, 1, !dbg !2983
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2983
  %19 = load i8, ptr %18, align 1, !dbg !2983
  %20 = icmp eq i8 %19, 32, !dbg !2983
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2983
  %22 = load i8, ptr %21, align 1, !dbg !2983
  %23 = icmp eq i8 %22, 2, !dbg !2983
  %24 = and i1 %20, %23, !dbg !2983
  %25 = and i1 %17, %24, !dbg !2983
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !2983, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %26(ptr nonnull @.str.908), !dbg !2983
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape, align 8, !dbg !2983, !tbaa !2997
  %28 = and i64 %27, 4294967295, !dbg !2983
  %29 = icmp eq i64 %28, 1, !dbg !2983
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !2983, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %30(ptr nonnull @.str.909), !dbg !2983
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape, i64 1, !dbg !2983
  %32 = load i64, ptr %31, align 8, !dbg !2983, !tbaa !3007
  %33 = and i64 %32, 4294967295, !dbg !2983
  %34 = icmp eq i64 %33, 512, !dbg !2983
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !2983, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %35(ptr nonnull @.str.910), !dbg !2983
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape, i64 2, !dbg !2983
  %37 = load i64, ptr %36, align 8, !dbg !2983, !tbaa !3009
  %38 = and i64 %37, 4294967295, !dbg !2983
  %39 = icmp eq i64 %38, 1, !dbg !2983
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !2983, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %40(ptr nonnull @.str.911), !dbg !2983
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape, i64 3, !dbg !2983
  %42 = load i64, ptr %41, align 8, !dbg !2983, !tbaa !3012
  %43 = and i64 %42, 4294967295, !dbg !2983
  %44 = icmp eq i64 %43, 1, !dbg !2983
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !2983, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %45(ptr nonnull @.str.912), !dbg !2983
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape, i64 4, !dbg !2983
  %47 = load i64, ptr %46, align 8, !dbg !2983, !tbaa !3014
  %48 = and i64 %47, 4294967295, !dbg !2983
  %49 = icmp eq i64 %48, 4, !dbg !2983
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !2983, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %50(ptr nonnull @.str.913), !dbg !2983
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.strides, null, !dbg !2983
  br i1 %.not, label %if_end, label %if_then, !dbg !2983, !prof !59

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.strides, i64 1, !dbg !2983
  %52 = load i64, ptr %51, align 8, !dbg !2983, !tbaa !3018
  %53 = and i64 %52, 4294967295, !dbg !2983
  %54 = icmp eq i64 %53, 4, !dbg !2983
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.strides, i64 4, !dbg !2983
  %56 = load i64, ptr %55, align 8, !dbg !2983, !tbaa !3028
  %57 = and i64 %56, 4294967295, !dbg !2983
  %58 = icmp eq i64 %57, 1, !dbg !2983
  %59 = and i1 %54, %58, !dbg !2983
  br i1 %59, label %if_end, label %assert_fail23, !dbg !2983, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %60 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2983
  %61 = load i64, ptr %60, align 8, !dbg !2983
  %62 = icmp eq i64 %61, 0, !dbg !2983
  br i1 %62, label %assert_end26, label %assert_fail25, !dbg !2983, !prof !18

assert_fail23:                                    ; preds = %if_then
  %63 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %63(ptr nonnull @.str.914), !dbg !2983
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %64 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %64(ptr nonnull @.str.915), !dbg !2983
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %65 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2983
  %66 = load i32, ptr %65, align 4, !dbg !2983
  %67 = icmp eq i32 %66, 1, !dbg !2983
  br i1 %67, label %assert_end28, label %assert_fail27, !dbg !2983, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %68 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %68(ptr nonnull @.str.916), !dbg !2983
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %69 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 2, !dbg !2983
  %70 = load i32, ptr %69, align 4, !dbg !2983
  %71 = icmp eq i32 %70, 2, !dbg !2983
  br i1 %71, label %assert_end32, label %assert_fail29, !dbg !2983, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %72 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %72(ptr nonnull @.str.917), !dbg !2983
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %73 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 3, i32 2, !dbg !2983
  %74 = load i16, ptr %73, align 2, !dbg !2983
  %75 = icmp eq i16 %74, 1, !dbg !2983
  %76 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 3, i32 1, !dbg !2983
  %77 = load i8, ptr %76, align 1, !dbg !2983
  %78 = icmp eq i8 %77, 32, !dbg !2983
  %79 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 3, i32 0, !dbg !2983
  %80 = load i8, ptr %79, align 1, !dbg !2983
  %81 = icmp eq i8 %80, 2, !dbg !2983
  %82 = and i1 %78, %81, !dbg !2983
  %83 = and i1 %75, %82, !dbg !2983
  br i1 %83, label %assert_end34, label %assert_fail33, !dbg !2983, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %84(ptr nonnull @.str.918), !dbg !2983
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %85 = load i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.shape, align 8, !dbg !2983, !tbaa !3032
  %86 = and i64 %85, 4294967295, !dbg !2983
  %87 = icmp eq i64 %86, 1, !dbg !2983
  br i1 %87, label %assert_end36, label %assert_fail35, !dbg !2983, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %88(ptr nonnull @.str.919), !dbg !2983
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %89 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.shape, i64 1, !dbg !2983
  %90 = load i64, ptr %89, align 8, !dbg !2983, !tbaa !3042
  %91 = and i64 %90, 4294967295, !dbg !2983
  %92 = icmp eq i64 %91, 2048, !dbg !2983
  br i1 %92, label %assert_end38, label %assert_fail37, !dbg !2983, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %93(ptr nonnull @.str.920), !dbg !2983
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %.not51 = icmp eq ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.strides, null, !dbg !2983
  br i1 %.not51, label %if_end40, label %if_then39, !dbg !2983, !prof !59

if_then39:                                        ; preds = %assert_end38
  %94 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.strides, i64 1, !dbg !2983
  %95 = load i64, ptr %94, align 8, !dbg !2983, !tbaa !3044
  %96 = and i64 %95, 4294967295, !dbg !2983
  %97 = icmp eq i64 %96, 1, !dbg !2983
  br i1 %97, label %if_end40, label %assert_fail41, !dbg !2983, !prof !18

if_end40:                                         ; preds = %if_then39, %assert_end38
  %98 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 6, !dbg !2983
  %99 = load i64, ptr %98, align 8, !dbg !2983
  %100 = icmp eq i64 %99, 0, !dbg !2983
  br i1 %100, label %assert_end44, label %assert_fail43, !dbg !2983, !prof !18

assert_fail41:                                    ; preds = %if_then39
  %101 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %101(ptr nonnull @.str.921), !dbg !2983
  br label %common.ret

assert_fail43:                                    ; preds = %if_end40
  %102 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %102(ptr nonnull @.str.922), !dbg !2983
  br label %common.ret

assert_end44:                                     ; preds = %if_end40
  %103 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 1, i32 0, !dbg !2983
  %104 = load i32, ptr %103, align 4, !dbg !2983
  %105 = icmp eq i32 %104, 1, !dbg !2983
  br i1 %105, label %assert_end46, label %assert_fail45, !dbg !2983, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %106 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %106(ptr nonnull @.str.923), !dbg !2983
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %107 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 1, i32 1, !dbg !2983
  %108 = load i32, ptr %107, align 4, !dbg !2983
  %109 = icmp eq i32 %dev_id, %108, !dbg !2983
  br i1 %109, label %assert_end48, label %assert_fail47, !dbg !2983, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %110 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2983, !tbaa !19
  tail call void %110(ptr nonnull @.str.924), !dbg !2983
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  tail call fastcc void @tvmgen_default_fused_layout_transform_reshape_squeeze_compute_(ptr %T_squeeze49, ptr %p050), !dbg !2983
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_multiply_add_nn_relu(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3054 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3056, metadata !DIExpression()), !dbg !3062
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3057, metadata !DIExpression()), !dbg !3062
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3058, metadata !DIExpression()), !dbg !3062
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3059, metadata !DIExpression()), !dbg !3062
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3060, metadata !DIExpression()), !dbg !3062
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3061, metadata !DIExpression()), !dbg !3062
  %0 = icmp eq i32 %num_args, 4, !dbg !3062
  br i1 %0, label %assert_end, label %assert_fail, !dbg !3062, !prof !18

common.ret:                                       ; preds = %assert_end112, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail105, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail91, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail79, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail53, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail53 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail79 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail91 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail105 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ %285, %assert_end112 ]
  ret i32 %common.ret.op, !dbg !3062

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %1(ptr nonnull @.str.925), !dbg !3062
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3062, !tbaa !3063
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3062
  %p1.code = load i32, ptr %2, align 4, !dbg !3062, !tbaa !3074
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3062
  %p2.code = load i32, ptr %3, align 4, !dbg !3062, !tbaa !3076
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3062
  %T_relu.code = load i32, ptr %4, align 4, !dbg !3062, !tbaa !3079
  %p0 = load ptr, ptr %args, align 8, !dbg !3062
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3062
  %p1 = load ptr, ptr %5, align 8, !dbg !3062
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3062
  %p2 = load ptr, ptr %6, align 8, !dbg !3062
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3062
  %T_relu = load ptr, ptr %7, align 8, !dbg !3062
  %p0114 = load ptr, ptr %p0, align 8, !dbg !3062
  call void @llvm.assume(i1 true) [ "align"(ptr %p0114, i64 64) ], !dbg !3062
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3062
  %tvmgen_default_fused_multiply_add_nn_relu.p0.shape = load ptr, ptr %8, align 8, !dbg !3062
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3062
  %tvmgen_default_fused_multiply_add_nn_relu.p0.strides = load ptr, ptr %9, align 8, !dbg !3062
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3062
  %dev_id = load i32, ptr %10, align 4, !dbg !3062
  %p1115 = load ptr, ptr %p1, align 8, !dbg !3062
  call void @llvm.assume(i1 true) [ "align"(ptr %p1115, i64 64) ], !dbg !3062
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3062
  %tvmgen_default_fused_multiply_add_nn_relu.p1.shape = load ptr, ptr %11, align 8, !dbg !3062
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3062
  %tvmgen_default_fused_multiply_add_nn_relu.p1.strides = load ptr, ptr %12, align 8, !dbg !3062
  %p2116 = load ptr, ptr %p2, align 8, !dbg !3062
  call void @llvm.assume(i1 true) [ "align"(ptr %p2116, i64 64) ], !dbg !3062
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3062
  %tvmgen_default_fused_multiply_add_nn_relu.p2.shape = load ptr, ptr %13, align 8, !dbg !3062
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3062
  %tvmgen_default_fused_multiply_add_nn_relu.p2.strides = load ptr, ptr %14, align 8, !dbg !3062
  %T_relu113 = load ptr, ptr %T_relu, align 8, !dbg !3062
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu113, i64 64) ], !dbg !3062
  %15 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !3062
  %tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape = load ptr, ptr %15, align 8, !dbg !3062
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !3062
  %tvmgen_default_fused_multiply_add_nn_relu.T_relu.strides = load ptr, ptr %16, align 8, !dbg !3062
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !3062

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %17(ptr nonnull @.str.926), !dbg !3062
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !3062

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %18(ptr nonnull @.str.927), !dbg !3062
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !3062

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %19(ptr nonnull @.str.928), !dbg !3062
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !3062

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %20(ptr nonnull @.str.929), !dbg !3062
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3062
  %22 = load i32, ptr %21, align 4, !dbg !3062
  %23 = icmp eq i32 %22, 5, !dbg !3062
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !3062, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %24(ptr nonnull @.str.930), !dbg !3062
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3062
  %26 = load i16, ptr %25, align 2, !dbg !3062
  %27 = icmp eq i16 %26, 1, !dbg !3062
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3062
  %29 = load i8, ptr %28, align 1, !dbg !3062
  %30 = icmp eq i8 %29, 32, !dbg !3062
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3062
  %32 = load i8, ptr %31, align 1, !dbg !3062
  %33 = icmp eq i8 %32, 2, !dbg !3062
  %34 = and i1 %30, %33, !dbg !3062
  %35 = and i1 %27, %34, !dbg !3062
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !3062, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %36(ptr nonnull @.str.931), !dbg !3062
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p0.shape, align 8, !dbg !3062, !tbaa !3081
  %38 = and i64 %37, 4294967295, !dbg !3062
  %39 = icmp eq i64 %38, 1, !dbg !3062
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !3062, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %40(ptr nonnull @.str.932), !dbg !3062
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p0.shape, i64 1, !dbg !3062
  %42 = load i64, ptr %41, align 8, !dbg !3062, !tbaa !3091
  %43 = and i64 %42, 4294967295, !dbg !3062
  %44 = icmp eq i64 %43, 2, !dbg !3062
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !3062, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %45(ptr nonnull @.str.933), !dbg !3062
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p0.shape, i64 2, !dbg !3062
  %47 = load i64, ptr %46, align 8, !dbg !3062, !tbaa !3093
  %48 = and i64 %47, 4294967295, !dbg !3062
  %49 = icmp eq i64 %48, 112, !dbg !3062
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !3062, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %50(ptr nonnull @.str.934), !dbg !3062
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p0.shape, i64 3, !dbg !3062
  %52 = load i64, ptr %51, align 8, !dbg !3062, !tbaa !3096
  %53 = and i64 %52, 4294967295, !dbg !3062
  %54 = icmp eq i64 %53, 112, !dbg !3062
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !3062, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %55(ptr nonnull @.str.935), !dbg !3062
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p0.shape, i64 4, !dbg !3062
  %57 = load i64, ptr %56, align 8, !dbg !3062, !tbaa !3098
  %58 = and i64 %57, 4294967295, !dbg !3062
  %59 = icmp eq i64 %58, 32, !dbg !3062
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !3062, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %60(ptr nonnull @.str.936), !dbg !3062
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_multiply_add_nn_relu.p0.strides, null, !dbg !3062
  br i1 %.not, label %if_end, label %if_then, !dbg !3062, !prof !59

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p0.strides, i64 1, !dbg !3062
  %62 = load i64, ptr %61, align 8, !dbg !3062, !tbaa !3102
  %63 = and i64 %62, 4294967295, !dbg !3062
  %64 = icmp eq i64 %63, 401408, !dbg !3062
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p0.strides, i64 2, !dbg !3062
  %66 = load i64, ptr %65, align 8, !dbg !3062, !tbaa !3112
  %67 = and i64 %66, 4294967295, !dbg !3062
  %68 = icmp eq i64 %67, 3584, !dbg !3062
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p0.strides, i64 3, !dbg !3062
  %70 = load i64, ptr %69, align 8, !dbg !3062, !tbaa !3115
  %71 = and i64 %70, 4294967295, !dbg !3062
  %72 = icmp eq i64 %71, 32, !dbg !3062
  %73 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p0.strides, i64 4, !dbg !3062
  %74 = load i64, ptr %73, align 8, !dbg !3062, !tbaa !3117
  %75 = and i64 %74, 4294967295, !dbg !3062
  %76 = icmp eq i64 %75, 1, !dbg !3062
  %77 = and i1 %72, %76, !dbg !3062
  %78 = and i1 %68, %77, !dbg !3062
  %79 = and i1 %64, %78, !dbg !3062
  br i1 %79, label %if_end, label %assert_fail29, !dbg !3062, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3062
  %81 = load i64, ptr %80, align 8, !dbg !3062
  %82 = icmp eq i64 %81, 0, !dbg !3062
  br i1 %82, label %assert_end32, label %assert_fail31, !dbg !3062, !prof !18

assert_fail29:                                    ; preds = %if_then
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %83(ptr nonnull @.str.937), !dbg !3062
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %84(ptr nonnull @.str.938), !dbg !3062
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %85 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3062
  %86 = load i32, ptr %85, align 4, !dbg !3062
  %87 = icmp eq i32 %86, 1, !dbg !3062
  br i1 %87, label %assert_end34, label %assert_fail33, !dbg !3062, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %88(ptr nonnull @.str.939), !dbg !3062
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %89 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3062
  %90 = load i32, ptr %89, align 4, !dbg !3062
  %91 = icmp eq i32 %90, 5, !dbg !3062
  br i1 %91, label %assert_end38, label %assert_fail35, !dbg !3062, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %92 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %92(ptr nonnull @.str.940), !dbg !3062
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %93 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3062
  %94 = load i16, ptr %93, align 2, !dbg !3062
  %95 = icmp eq i16 %94, 1, !dbg !3062
  %96 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3062
  %97 = load i8, ptr %96, align 1, !dbg !3062
  %98 = icmp eq i8 %97, 32, !dbg !3062
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3062
  %100 = load i8, ptr %99, align 1, !dbg !3062
  %101 = icmp eq i8 %100, 2, !dbg !3062
  %102 = and i1 %98, %101, !dbg !3062
  %103 = and i1 %95, %102, !dbg !3062
  br i1 %103, label %assert_end40, label %assert_fail39, !dbg !3062, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %104(ptr nonnull @.str.941), !dbg !3062
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %105 = load i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p1.shape, align 8, !dbg !3062, !tbaa !3121
  %106 = and i64 %105, 4294967295, !dbg !3062
  %107 = icmp eq i64 %106, 1, !dbg !3062
  br i1 %107, label %assert_end42, label %assert_fail41, !dbg !3062, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %108(ptr nonnull @.str.942), !dbg !3062
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p1.shape, i64 1, !dbg !3062
  %110 = load i64, ptr %109, align 8, !dbg !3062, !tbaa !3131
  %111 = and i64 %110, 4294967295, !dbg !3062
  %112 = icmp eq i64 %111, 2, !dbg !3062
  br i1 %112, label %assert_end44, label %assert_fail43, !dbg !3062, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %113(ptr nonnull @.str.943), !dbg !3062
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p1.shape, i64 2, !dbg !3062
  %115 = load i64, ptr %114, align 8, !dbg !3062, !tbaa !3133
  %116 = and i64 %115, 4294967295, !dbg !3062
  %117 = icmp eq i64 %116, 1, !dbg !3062
  br i1 %117, label %assert_end46, label %assert_fail45, !dbg !3062, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %118(ptr nonnull @.str.944), !dbg !3062
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p1.shape, i64 3, !dbg !3062
  %120 = load i64, ptr %119, align 8, !dbg !3062, !tbaa !3136
  %121 = and i64 %120, 4294967295, !dbg !3062
  %122 = icmp eq i64 %121, 1, !dbg !3062
  br i1 %122, label %assert_end48, label %assert_fail47, !dbg !3062, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %123(ptr nonnull @.str.945), !dbg !3062
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p1.shape, i64 4, !dbg !3062
  %125 = load i64, ptr %124, align 8, !dbg !3062, !tbaa !3138
  %126 = and i64 %125, 4294967295, !dbg !3062
  %127 = icmp eq i64 %126, 32, !dbg !3062
  br i1 %127, label %assert_end50, label %assert_fail49, !dbg !3062, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %128(ptr nonnull @.str.946), !dbg !3062
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %.not117 = icmp eq ptr %tvmgen_default_fused_multiply_add_nn_relu.p1.strides, null, !dbg !3062
  br i1 %.not117, label %if_end52, label %if_then51, !dbg !3062, !prof !59

if_then51:                                        ; preds = %assert_end50
  %129 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p1.strides, i64 1, !dbg !3062
  %130 = load i64, ptr %129, align 8, !dbg !3062, !tbaa !3142
  %131 = and i64 %130, 4294967295, !dbg !3062
  %132 = icmp eq i64 %131, 32, !dbg !3062
  %133 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p1.strides, i64 4, !dbg !3062
  %134 = load i64, ptr %133, align 8, !dbg !3062, !tbaa !3152
  %135 = and i64 %134, 4294967295, !dbg !3062
  %136 = icmp eq i64 %135, 1, !dbg !3062
  %137 = and i1 %132, %136, !dbg !3062
  br i1 %137, label %if_end52, label %assert_fail53, !dbg !3062, !prof !18

if_end52:                                         ; preds = %if_then51, %assert_end50
  %138 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3062
  %139 = load i64, ptr %138, align 8, !dbg !3062
  %140 = icmp eq i64 %139, 0, !dbg !3062
  br i1 %140, label %assert_end56, label %assert_fail55, !dbg !3062, !prof !18

assert_fail53:                                    ; preds = %if_then51
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %141(ptr nonnull @.str.947), !dbg !3062
  br label %common.ret

assert_fail55:                                    ; preds = %if_end52
  %142 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %142(ptr nonnull @.str.948), !dbg !3062
  br label %common.ret

assert_end56:                                     ; preds = %if_end52
  %143 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3062
  %144 = load i32, ptr %143, align 4, !dbg !3062
  %145 = icmp eq i32 %144, 1, !dbg !3062
  br i1 %145, label %assert_end58, label %assert_fail57, !dbg !3062, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %146(ptr nonnull @.str.949), !dbg !3062
  br label %common.ret

assert_end58:                                     ; preds = %assert_end56
  %147 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3062
  %148 = load i32, ptr %147, align 4, !dbg !3062
  %149 = icmp eq i32 %dev_id, %148, !dbg !3062
  br i1 %149, label %assert_end60, label %assert_fail59, !dbg !3062, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %150(ptr nonnull @.str.950), !dbg !3062
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %151 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3062
  %152 = load i32, ptr %151, align 4, !dbg !3062
  %153 = icmp eq i32 %152, 5, !dbg !3062
  br i1 %153, label %assert_end64, label %assert_fail61, !dbg !3062, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %154 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %154(ptr nonnull @.str.951), !dbg !3062
  br label %common.ret

assert_end64:                                     ; preds = %assert_end60
  %155 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3062
  %156 = load i16, ptr %155, align 2, !dbg !3062
  %157 = icmp eq i16 %156, 1, !dbg !3062
  %158 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3062
  %159 = load i8, ptr %158, align 1, !dbg !3062
  %160 = icmp eq i8 %159, 32, !dbg !3062
  %161 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3062
  %162 = load i8, ptr %161, align 1, !dbg !3062
  %163 = icmp eq i8 %162, 2, !dbg !3062
  %164 = and i1 %160, %163, !dbg !3062
  %165 = and i1 %157, %164, !dbg !3062
  br i1 %165, label %assert_end66, label %assert_fail65, !dbg !3062, !prof !18

assert_fail65:                                    ; preds = %assert_end64
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %166(ptr nonnull @.str.952), !dbg !3062
  br label %common.ret

assert_end66:                                     ; preds = %assert_end64
  %167 = load i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p2.shape, align 8, !dbg !3062, !tbaa !3156
  %168 = and i64 %167, 4294967295, !dbg !3062
  %169 = icmp eq i64 %168, 1, !dbg !3062
  br i1 %169, label %assert_end68, label %assert_fail67, !dbg !3062, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %170(ptr nonnull @.str.953), !dbg !3062
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %171 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p2.shape, i64 1, !dbg !3062
  %172 = load i64, ptr %171, align 8, !dbg !3062, !tbaa !3166
  %173 = and i64 %172, 4294967295, !dbg !3062
  %174 = icmp eq i64 %173, 2, !dbg !3062
  br i1 %174, label %assert_end70, label %assert_fail69, !dbg !3062, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %175(ptr nonnull @.str.954), !dbg !3062
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %176 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p2.shape, i64 2, !dbg !3062
  %177 = load i64, ptr %176, align 8, !dbg !3062, !tbaa !3168
  %178 = and i64 %177, 4294967295, !dbg !3062
  %179 = icmp eq i64 %178, 1, !dbg !3062
  br i1 %179, label %assert_end72, label %assert_fail71, !dbg !3062, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %180(ptr nonnull @.str.955), !dbg !3062
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %181 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p2.shape, i64 3, !dbg !3062
  %182 = load i64, ptr %181, align 8, !dbg !3062, !tbaa !3171
  %183 = and i64 %182, 4294967295, !dbg !3062
  %184 = icmp eq i64 %183, 1, !dbg !3062
  br i1 %184, label %assert_end74, label %assert_fail73, !dbg !3062, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %185(ptr nonnull @.str.956), !dbg !3062
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %186 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p2.shape, i64 4, !dbg !3062
  %187 = load i64, ptr %186, align 8, !dbg !3062, !tbaa !3173
  %188 = and i64 %187, 4294967295, !dbg !3062
  %189 = icmp eq i64 %188, 32, !dbg !3062
  br i1 %189, label %assert_end76, label %assert_fail75, !dbg !3062, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %190 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %190(ptr nonnull @.str.957), !dbg !3062
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %.not118 = icmp eq ptr %tvmgen_default_fused_multiply_add_nn_relu.p2.strides, null, !dbg !3062
  br i1 %.not118, label %if_end78, label %if_then77, !dbg !3062, !prof !59

if_then77:                                        ; preds = %assert_end76
  %191 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p2.strides, i64 1, !dbg !3062
  %192 = load i64, ptr %191, align 8, !dbg !3062, !tbaa !3177
  %193 = and i64 %192, 4294967295, !dbg !3062
  %194 = icmp eq i64 %193, 32, !dbg !3062
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.p2.strides, i64 4, !dbg !3062
  %196 = load i64, ptr %195, align 8, !dbg !3062, !tbaa !3187
  %197 = and i64 %196, 4294967295, !dbg !3062
  %198 = icmp eq i64 %197, 1, !dbg !3062
  %199 = and i1 %194, %198, !dbg !3062
  br i1 %199, label %if_end78, label %assert_fail79, !dbg !3062, !prof !18

if_end78:                                         ; preds = %if_then77, %assert_end76
  %200 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3062
  %201 = load i64, ptr %200, align 8, !dbg !3062
  %202 = icmp eq i64 %201, 0, !dbg !3062
  br i1 %202, label %assert_end82, label %assert_fail81, !dbg !3062, !prof !18

assert_fail79:                                    ; preds = %if_then77
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %203(ptr nonnull @.str.958), !dbg !3062
  br label %common.ret

assert_fail81:                                    ; preds = %if_end78
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %204(ptr nonnull @.str.959), !dbg !3062
  br label %common.ret

assert_end82:                                     ; preds = %if_end78
  %205 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3062
  %206 = load i32, ptr %205, align 4, !dbg !3062
  %207 = icmp eq i32 %206, 1, !dbg !3062
  br i1 %207, label %assert_end84, label %assert_fail83, !dbg !3062, !prof !18

assert_fail83:                                    ; preds = %assert_end82
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %208(ptr nonnull @.str.960), !dbg !3062
  br label %common.ret

assert_end84:                                     ; preds = %assert_end82
  %209 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3062
  %210 = load i32, ptr %209, align 4, !dbg !3062
  %211 = icmp eq i32 %dev_id, %210, !dbg !3062
  br i1 %211, label %assert_end86, label %assert_fail85, !dbg !3062, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %212(ptr nonnull @.str.961), !dbg !3062
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %213 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !3062
  %214 = load i32, ptr %213, align 4, !dbg !3062
  %215 = icmp eq i32 %214, 5, !dbg !3062
  br i1 %215, label %assert_end90, label %assert_fail87, !dbg !3062, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %216 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %216(ptr nonnull @.str.962), !dbg !3062
  br label %common.ret

assert_end90:                                     ; preds = %assert_end86
  %217 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !3062
  %218 = load i16, ptr %217, align 2, !dbg !3062
  %219 = icmp eq i16 %218, 1, !dbg !3062
  %220 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !3062
  %221 = load i8, ptr %220, align 1, !dbg !3062
  %222 = icmp eq i8 %221, 32, !dbg !3062
  %223 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !3062
  %224 = load i8, ptr %223, align 1, !dbg !3062
  %225 = icmp eq i8 %224, 2, !dbg !3062
  %226 = and i1 %222, %225, !dbg !3062
  %227 = and i1 %219, %226, !dbg !3062
  br i1 %227, label %assert_end92, label %assert_fail91, !dbg !3062, !prof !18

assert_fail91:                                    ; preds = %assert_end90
  %228 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %228(ptr nonnull @.str.963), !dbg !3062
  br label %common.ret

assert_end92:                                     ; preds = %assert_end90
  %229 = load i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape, align 8, !dbg !3062, !tbaa !3191
  %230 = and i64 %229, 4294967295, !dbg !3062
  %231 = icmp eq i64 %230, 1, !dbg !3062
  br i1 %231, label %assert_end94, label %assert_fail93, !dbg !3062, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %232 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %232(ptr nonnull @.str.964), !dbg !3062
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %233 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape, i64 1, !dbg !3062
  %234 = load i64, ptr %233, align 8, !dbg !3062, !tbaa !3201
  %235 = and i64 %234, 4294967295, !dbg !3062
  %236 = icmp eq i64 %235, 2, !dbg !3062
  br i1 %236, label %assert_end96, label %assert_fail95, !dbg !3062, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %237(ptr nonnull @.str.965), !dbg !3062
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %238 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape, i64 2, !dbg !3062
  %239 = load i64, ptr %238, align 8, !dbg !3062, !tbaa !3203
  %240 = and i64 %239, 4294967295, !dbg !3062
  %241 = icmp eq i64 %240, 112, !dbg !3062
  br i1 %241, label %assert_end98, label %assert_fail97, !dbg !3062, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %242(ptr nonnull @.str.966), !dbg !3062
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %243 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape, i64 3, !dbg !3062
  %244 = load i64, ptr %243, align 8, !dbg !3062, !tbaa !3206
  %245 = and i64 %244, 4294967295, !dbg !3062
  %246 = icmp eq i64 %245, 112, !dbg !3062
  br i1 %246, label %assert_end100, label %assert_fail99, !dbg !3062, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %247 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %247(ptr nonnull @.str.967), !dbg !3062
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %248 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.T_relu.shape, i64 4, !dbg !3062
  %249 = load i64, ptr %248, align 8, !dbg !3062, !tbaa !3208
  %250 = and i64 %249, 4294967295, !dbg !3062
  %251 = icmp eq i64 %250, 32, !dbg !3062
  br i1 %251, label %assert_end102, label %assert_fail101, !dbg !3062, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %252 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %252(ptr nonnull @.str.968), !dbg !3062
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %.not119 = icmp eq ptr %tvmgen_default_fused_multiply_add_nn_relu.T_relu.strides, null, !dbg !3062
  br i1 %.not119, label %if_end104, label %if_then103, !dbg !3062, !prof !59

if_then103:                                       ; preds = %assert_end102
  %253 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.T_relu.strides, i64 1, !dbg !3062
  %254 = load i64, ptr %253, align 8, !dbg !3062, !tbaa !3212
  %255 = and i64 %254, 4294967295, !dbg !3062
  %256 = icmp eq i64 %255, 401408, !dbg !3062
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.T_relu.strides, i64 2, !dbg !3062
  %258 = load i64, ptr %257, align 8, !dbg !3062, !tbaa !3222
  %259 = and i64 %258, 4294967295, !dbg !3062
  %260 = icmp eq i64 %259, 3584, !dbg !3062
  %261 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.T_relu.strides, i64 3, !dbg !3062
  %262 = load i64, ptr %261, align 8, !dbg !3062, !tbaa !3225
  %263 = and i64 %262, 4294967295, !dbg !3062
  %264 = icmp eq i64 %263, 32, !dbg !3062
  %265 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_add_nn_relu.T_relu.strides, i64 4, !dbg !3062
  %266 = load i64, ptr %265, align 8, !dbg !3062, !tbaa !3227
  %267 = and i64 %266, 4294967295, !dbg !3062
  %268 = icmp eq i64 %267, 1, !dbg !3062
  %269 = and i1 %264, %268, !dbg !3062
  %270 = and i1 %260, %269, !dbg !3062
  %271 = and i1 %256, %270, !dbg !3062
  br i1 %271, label %if_end104, label %assert_fail105, !dbg !3062, !prof !18

if_end104:                                        ; preds = %if_then103, %assert_end102
  %272 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !3062
  %273 = load i64, ptr %272, align 8, !dbg !3062
  %274 = icmp eq i64 %273, 0, !dbg !3062
  br i1 %274, label %assert_end108, label %assert_fail107, !dbg !3062, !prof !18

assert_fail105:                                   ; preds = %if_then103
  %275 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %275(ptr nonnull @.str.969), !dbg !3062
  br label %common.ret

assert_fail107:                                   ; preds = %if_end104
  %276 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %276(ptr nonnull @.str.970), !dbg !3062
  br label %common.ret

assert_end108:                                    ; preds = %if_end104
  %277 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !3062
  %278 = load i32, ptr %277, align 4, !dbg !3062
  %279 = icmp eq i32 %278, 1, !dbg !3062
  br i1 %279, label %assert_end110, label %assert_fail109, !dbg !3062, !prof !18

assert_fail109:                                   ; preds = %assert_end108
  %280 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %280(ptr nonnull @.str.971), !dbg !3062
  br label %common.ret

assert_end110:                                    ; preds = %assert_end108
  %281 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !3062
  %282 = load i32, ptr %281, align 4, !dbg !3062
  %283 = icmp eq i32 %dev_id, %282, !dbg !3062
  br i1 %283, label %assert_end112, label %assert_fail111, !dbg !3062, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3062, !tbaa !19
  tail call void %284(ptr nonnull @.str.972), !dbg !3062
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %285 = tail call fastcc i32 @tvmgen_default_fused_multiply_add_nn_relu_compute_(ptr %T_relu113, ptr %p0114, ptr %p1115, ptr %p2116), !dbg !3062
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_multiply_round_clip_cast_layout_transform(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3231 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3233, metadata !DIExpression()), !dbg !3239
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3234, metadata !DIExpression()), !dbg !3239
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3235, metadata !DIExpression()), !dbg !3239
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3236, metadata !DIExpression()), !dbg !3239
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3237, metadata !DIExpression()), !dbg !3239
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3238, metadata !DIExpression()), !dbg !3239
  %0 = icmp eq i32 %num_args, 2, !dbg !3239
  br i1 %0, label %assert_end, label %assert_fail, !dbg !3239, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %151, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !3239

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %1(ptr nonnull @.str.974), !dbg !3239
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3239, !tbaa !3240
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3239
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !3239, !tbaa !3251
  %p0 = load ptr, ptr %args, align 8, !dbg !3239
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3239
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !3239
  %p056 = load ptr, ptr %p0, align 8, !dbg !3239
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !3239
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3239
  %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.shape = load ptr, ptr %4, align 8, !dbg !3239
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3239
  %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.strides = load ptr, ptr %5, align 8, !dbg !3239
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3239
  %dev_id = load i32, ptr %6, align 4, !dbg !3239
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !3239
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !3239
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !3239
  %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !3239
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !3239
  %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !3239
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !3239

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %9(ptr nonnull @.str.975), !dbg !3239
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !3239

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %10(ptr nonnull @.str.976), !dbg !3239
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3239
  %12 = load i32, ptr %11, align 4, !dbg !3239
  %13 = icmp eq i32 %12, 5, !dbg !3239
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !3239, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %14(ptr nonnull @.str.977), !dbg !3239
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3239
  %16 = load i16, ptr %15, align 2, !dbg !3239
  %17 = icmp eq i16 %16, 1, !dbg !3239
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3239
  %19 = load i8, ptr %18, align 1, !dbg !3239
  %20 = icmp eq i8 %19, 32, !dbg !3239
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3239
  %22 = load i8, ptr %21, align 1, !dbg !3239
  %23 = icmp eq i8 %22, 2, !dbg !3239
  %24 = and i1 %20, %23, !dbg !3239
  %25 = and i1 %17, %24, !dbg !3239
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !3239, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %26(ptr nonnull @.str.978), !dbg !3239
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.shape, align 8, !dbg !3239, !tbaa !3253
  %28 = and i64 %27, 4294967295, !dbg !3239
  %29 = icmp eq i64 %28, 1, !dbg !3239
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !3239, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %30(ptr nonnull @.str.979), !dbg !3239
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.shape, i64 1, !dbg !3239
  %32 = load i64, ptr %31, align 8, !dbg !3239, !tbaa !3263
  %33 = and i64 %32, 4294967295, !dbg !3239
  %34 = icmp eq i64 %33, 2, !dbg !3239
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !3239, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %35(ptr nonnull @.str.980), !dbg !3239
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.shape, i64 2, !dbg !3239
  %37 = load i64, ptr %36, align 8, !dbg !3239, !tbaa !3265
  %38 = and i64 %37, 4294967295, !dbg !3239
  %39 = icmp eq i64 %38, 56, !dbg !3239
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !3239, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %40(ptr nonnull @.str.981), !dbg !3239
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.shape, i64 3, !dbg !3239
  %42 = load i64, ptr %41, align 8, !dbg !3239, !tbaa !3268
  %43 = and i64 %42, 4294967295, !dbg !3239
  %44 = icmp eq i64 %43, 56, !dbg !3239
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !3239, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %45(ptr nonnull @.str.982), !dbg !3239
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.shape, i64 4, !dbg !3239
  %47 = load i64, ptr %46, align 8, !dbg !3239, !tbaa !3270
  %48 = and i64 %47, 4294967295, !dbg !3239
  %49 = icmp eq i64 %48, 32, !dbg !3239
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !3239, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %50(ptr nonnull @.str.983), !dbg !3239
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.strides, null, !dbg !3239
  br i1 %.not, label %if_end, label %if_then, !dbg !3239, !prof !59

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.strides, i64 1, !dbg !3239
  %52 = load i64, ptr %51, align 8, !dbg !3239, !tbaa !3274
  %53 = and i64 %52, 4294967295, !dbg !3239
  %54 = icmp eq i64 %53, 100352, !dbg !3239
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.strides, i64 2, !dbg !3239
  %56 = load i64, ptr %55, align 8, !dbg !3239, !tbaa !3284
  %57 = and i64 %56, 4294967295, !dbg !3239
  %58 = icmp eq i64 %57, 1792, !dbg !3239
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.strides, i64 3, !dbg !3239
  %60 = load i64, ptr %59, align 8, !dbg !3239, !tbaa !3287
  %61 = and i64 %60, 4294967295, !dbg !3239
  %62 = icmp eq i64 %61, 32, !dbg !3239
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.p0.strides, i64 4, !dbg !3239
  %64 = load i64, ptr %63, align 8, !dbg !3239, !tbaa !3289
  %65 = and i64 %64, 4294967295, !dbg !3239
  %66 = icmp eq i64 %65, 1, !dbg !3239
  %67 = and i1 %62, %66, !dbg !3239
  %68 = and i1 %58, %67, !dbg !3239
  %69 = and i1 %54, %68, !dbg !3239
  br i1 %69, label %if_end, label %assert_fail23, !dbg !3239, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3239
  %71 = load i64, ptr %70, align 8, !dbg !3239
  %72 = icmp eq i64 %71, 0, !dbg !3239
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !3239, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %73(ptr nonnull @.str.984), !dbg !3239
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %74(ptr nonnull @.str.985), !dbg !3239
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3239
  %76 = load i32, ptr %75, align 4, !dbg !3239
  %77 = icmp eq i32 %76, 1, !dbg !3239
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !3239, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %78(ptr nonnull @.str.986), !dbg !3239
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !3239
  %80 = load i32, ptr %79, align 4, !dbg !3239
  %81 = icmp eq i32 %80, 5, !dbg !3239
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !3239, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %82(ptr nonnull @.str.987), !dbg !3239
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !3239
  %84 = load i16, ptr %83, align 2, !dbg !3239
  %85 = icmp eq i16 %84, 1, !dbg !3239
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !3239
  %87 = load i8, ptr %86, align 1, !dbg !3239
  %88 = icmp eq i8 %87, 8, !dbg !3239
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !3239
  %90 = load i8, ptr %89, align 1, !dbg !3239
  %91 = icmp eq i8 %90, 0, !dbg !3239
  %92 = and i1 %88, %91, !dbg !3239
  %93 = and i1 %85, %92, !dbg !3239
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !3239, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %94(ptr nonnull @.str.988), !dbg !3239
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.shape, align 8, !dbg !3239, !tbaa !3293
  %96 = and i64 %95, 4294967295, !dbg !3239
  %97 = icmp eq i64 %96, 1, !dbg !3239
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !3239, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %98(ptr nonnull @.str.989), !dbg !3239
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.shape, i64 1, !dbg !3239
  %100 = load i64, ptr %99, align 8, !dbg !3239, !tbaa !3303
  %101 = and i64 %100, 4294967295, !dbg !3239
  %102 = icmp eq i64 %101, 16, !dbg !3239
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !3239, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %103(ptr nonnull @.str.990), !dbg !3239
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.shape, i64 2, !dbg !3239
  %105 = load i64, ptr %104, align 8, !dbg !3239, !tbaa !3305
  %106 = and i64 %105, 4294967295, !dbg !3239
  %107 = icmp eq i64 %106, 56, !dbg !3239
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !3239, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %108(ptr nonnull @.str.991), !dbg !3239
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.shape, i64 3, !dbg !3239
  %110 = load i64, ptr %109, align 8, !dbg !3239, !tbaa !3308
  %111 = and i64 %110, 4294967295, !dbg !3239
  %112 = icmp eq i64 %111, 56, !dbg !3239
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !3239, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %113(ptr nonnull @.str.992), !dbg !3239
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.shape, i64 4, !dbg !3239
  %115 = load i64, ptr %114, align 8, !dbg !3239, !tbaa !3310
  %116 = and i64 %115, 4294967295, !dbg !3239
  %117 = icmp eq i64 %116, 4, !dbg !3239
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !3239, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %118(ptr nonnull @.str.993), !dbg !3239
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.strides, null, !dbg !3239
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !3239, !prof !59

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.strides, i64 1, !dbg !3239
  %120 = load i64, ptr %119, align 8, !dbg !3239, !tbaa !3314
  %121 = and i64 %120, 4294967295, !dbg !3239
  %122 = icmp eq i64 %121, 12544, !dbg !3239
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.strides, i64 2, !dbg !3239
  %124 = load i64, ptr %123, align 8, !dbg !3239, !tbaa !3324
  %125 = and i64 %124, 4294967295, !dbg !3239
  %126 = icmp eq i64 %125, 224, !dbg !3239
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.strides, i64 3, !dbg !3239
  %128 = load i64, ptr %127, align 8, !dbg !3239, !tbaa !3327
  %129 = and i64 %128, 4294967295, !dbg !3239
  %130 = icmp eq i64 %129, 4, !dbg !3239
  %131 = getelementptr inbounds i64, ptr %tvmgen_default_fused_multiply_round_clip_cast_layout_transform.T_layout_trans.strides, i64 4, !dbg !3239
  %132 = load i64, ptr %131, align 8, !dbg !3239, !tbaa !3329
  %133 = and i64 %132, 4294967295, !dbg !3239
  %134 = icmp eq i64 %133, 1, !dbg !3239
  %135 = and i1 %130, %134, !dbg !3239
  %136 = and i1 %126, %135, !dbg !3239
  %137 = and i1 %122, %136, !dbg !3239
  br i1 %137, label %if_end46, label %assert_fail47, !dbg !3239, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !3239
  %139 = load i64, ptr %138, align 8, !dbg !3239
  %140 = icmp eq i64 %139, 0, !dbg !3239
  br i1 %140, label %assert_end50, label %assert_fail49, !dbg !3239, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %141(ptr nonnull @.str.994), !dbg !3239
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %142 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %142(ptr nonnull @.str.995), !dbg !3239
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %143 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !3239
  %144 = load i32, ptr %143, align 4, !dbg !3239
  %145 = icmp eq i32 %144, 1, !dbg !3239
  br i1 %145, label %assert_end52, label %assert_fail51, !dbg !3239, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %146(ptr nonnull @.str.996), !dbg !3239
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %147 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !3239
  %148 = load i32, ptr %147, align 4, !dbg !3239
  %149 = icmp eq i32 %dev_id, %148, !dbg !3239
  br i1 %149, label %assert_end54, label %assert_fail53, !dbg !3239, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3239, !tbaa !19
  tail call void %150(ptr nonnull @.str.997), !dbg !3239
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %151 = tail call fastcc i32 @tvmgen_default_fused_multiply_round_clip_cast_layout_transform_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !3239
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_adaptive_avg_pool2d(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3333 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3335, metadata !DIExpression()), !dbg !3341
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3336, metadata !DIExpression()), !dbg !3341
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3337, metadata !DIExpression()), !dbg !3341
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3338, metadata !DIExpression()), !dbg !3341
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3339, metadata !DIExpression()), !dbg !3341
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3340, metadata !DIExpression()), !dbg !3341
  %0 = icmp eq i32 %num_args, 2, !dbg !3341
  br i1 %0, label %assert_end, label %assert_fail, !dbg !3341, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %141, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !3341

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %1(ptr nonnull @.str.999), !dbg !3341
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3341, !tbaa !3342
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3341
  %adaptive_pool_avg.code = load i32, ptr %2, align 4, !dbg !3341, !tbaa !3353
  %p0 = load ptr, ptr %args, align 8, !dbg !3341
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3341
  %adaptive_pool_avg = load ptr, ptr %3, align 8, !dbg !3341
  %p055 = load ptr, ptr %p0, align 8, !dbg !3341
  call void @llvm.assume(i1 true) [ "align"(ptr %p055, i64 64) ], !dbg !3341
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3341
  %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape = load ptr, ptr %4, align 8, !dbg !3341
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3341
  %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides = load ptr, ptr %5, align 8, !dbg !3341
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3341
  %dev_id = load i32, ptr %6, align 4, !dbg !3341
  %adaptive_pool_avg56 = load ptr, ptr %adaptive_pool_avg, align 8, !dbg !3341
  call void @llvm.assume(i1 true) [ "align"(ptr %adaptive_pool_avg56, i64 64) ], !dbg !3341
  %7 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 4, !dbg !3341
  %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape = load ptr, ptr %7, align 8, !dbg !3341
  %8 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 5, !dbg !3341
  %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.strides = load ptr, ptr %8, align 8, !dbg !3341
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !3341

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %9(ptr nonnull @.str.1000), !dbg !3341
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %adaptive_pool_avg.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !3341

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %10(ptr nonnull @.str.1001), !dbg !3341
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3341
  %12 = load i32, ptr %11, align 4, !dbg !3341
  %13 = icmp eq i32 %12, 5, !dbg !3341
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !3341, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %14(ptr nonnull @.str.1002), !dbg !3341
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3341
  %16 = load i16, ptr %15, align 2, !dbg !3341
  %17 = icmp eq i16 %16, 1, !dbg !3341
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3341
  %19 = load i8, ptr %18, align 1, !dbg !3341
  %20 = icmp eq i8 %19, 32, !dbg !3341
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3341
  %22 = load i8, ptr %21, align 1, !dbg !3341
  %23 = icmp eq i8 %22, 2, !dbg !3341
  %24 = and i1 %20, %23, !dbg !3341
  %25 = and i1 %17, %24, !dbg !3341
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !3341, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %26(ptr nonnull @.str.1003), !dbg !3341
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape, align 8, !dbg !3341, !tbaa !3355
  %28 = and i64 %27, 4294967295, !dbg !3341
  %29 = icmp eq i64 %28, 1, !dbg !3341
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !3341, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %30(ptr nonnull @.str.1004), !dbg !3341
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape, i64 1, !dbg !3341
  %32 = load i64, ptr %31, align 8, !dbg !3341, !tbaa !3365
  %33 = and i64 %32, 4294967295, !dbg !3341
  %34 = icmp eq i64 %33, 512, !dbg !3341
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !3341, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %35(ptr nonnull @.str.1005), !dbg !3341
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape, i64 2, !dbg !3341
  %37 = load i64, ptr %36, align 8, !dbg !3341, !tbaa !3367
  %38 = and i64 %37, 4294967295, !dbg !3341
  %39 = icmp eq i64 %38, 7, !dbg !3341
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !3341, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %40(ptr nonnull @.str.1006), !dbg !3341
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape, i64 3, !dbg !3341
  %42 = load i64, ptr %41, align 8, !dbg !3341, !tbaa !3370
  %43 = and i64 %42, 4294967295, !dbg !3341
  %44 = icmp eq i64 %43, 7, !dbg !3341
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !3341, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %45(ptr nonnull @.str.1007), !dbg !3341
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape, i64 4, !dbg !3341
  %47 = load i64, ptr %46, align 8, !dbg !3341, !tbaa !3372
  %48 = and i64 %47, 4294967295, !dbg !3341
  %49 = icmp eq i64 %48, 4, !dbg !3341
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !3341, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %50(ptr nonnull @.str.1008), !dbg !3341
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides, null, !dbg !3341
  br i1 %.not, label %if_end, label %if_then, !dbg !3341, !prof !59

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides, i64 1, !dbg !3341
  %52 = load i64, ptr %51, align 8, !dbg !3341, !tbaa !3376
  %53 = and i64 %52, 4294967295, !dbg !3341
  %54 = icmp eq i64 %53, 196, !dbg !3341
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides, i64 2, !dbg !3341
  %56 = load i64, ptr %55, align 8, !dbg !3341, !tbaa !3386
  %57 = and i64 %56, 4294967295, !dbg !3341
  %58 = icmp eq i64 %57, 28, !dbg !3341
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides, i64 3, !dbg !3341
  %60 = load i64, ptr %59, align 8, !dbg !3341, !tbaa !3389
  %61 = and i64 %60, 4294967295, !dbg !3341
  %62 = icmp eq i64 %61, 4, !dbg !3341
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides, i64 4, !dbg !3341
  %64 = load i64, ptr %63, align 8, !dbg !3341, !tbaa !3391
  %65 = and i64 %64, 4294967295, !dbg !3341
  %66 = icmp eq i64 %65, 1, !dbg !3341
  %67 = and i1 %62, %66, !dbg !3341
  %68 = and i1 %58, %67, !dbg !3341
  %69 = and i1 %54, %68, !dbg !3341
  br i1 %69, label %if_end, label %assert_fail23, !dbg !3341, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3341
  %71 = load i64, ptr %70, align 8, !dbg !3341
  %72 = icmp eq i64 %71, 0, !dbg !3341
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !3341, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %73(ptr nonnull @.str.1009), !dbg !3341
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %74(ptr nonnull @.str.1010), !dbg !3341
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3341
  %76 = load i32, ptr %75, align 4, !dbg !3341
  %77 = icmp eq i32 %76, 1, !dbg !3341
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !3341, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %78(ptr nonnull @.str.1011), !dbg !3341
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 2, !dbg !3341
  %80 = load i32, ptr %79, align 4, !dbg !3341
  %81 = icmp eq i32 %80, 5, !dbg !3341
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !3341, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %82(ptr nonnull @.str.1012), !dbg !3341
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 3, i32 2, !dbg !3341
  %84 = load i16, ptr %83, align 2, !dbg !3341
  %85 = icmp eq i16 %84, 1, !dbg !3341
  %86 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 3, i32 1, !dbg !3341
  %87 = load i8, ptr %86, align 1, !dbg !3341
  %88 = icmp eq i8 %87, 32, !dbg !3341
  %89 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 3, i32 0, !dbg !3341
  %90 = load i8, ptr %89, align 1, !dbg !3341
  %91 = icmp eq i8 %90, 2, !dbg !3341
  %92 = and i1 %88, %91, !dbg !3341
  %93 = and i1 %85, %92, !dbg !3341
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !3341, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %94(ptr nonnull @.str.1013), !dbg !3341
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape, align 8, !dbg !3341, !tbaa !3395
  %96 = and i64 %95, 4294967295, !dbg !3341
  %97 = icmp eq i64 %96, 1, !dbg !3341
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !3341, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %98(ptr nonnull @.str.1014), !dbg !3341
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape, i64 1, !dbg !3341
  %100 = load i64, ptr %99, align 8, !dbg !3341, !tbaa !3405
  %101 = and i64 %100, 4294967295, !dbg !3341
  %102 = icmp eq i64 %101, 512, !dbg !3341
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !3341, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %103(ptr nonnull @.str.1015), !dbg !3341
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape, i64 2, !dbg !3341
  %105 = load i64, ptr %104, align 8, !dbg !3341, !tbaa !3407
  %106 = and i64 %105, 4294967295, !dbg !3341
  %107 = icmp eq i64 %106, 1, !dbg !3341
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !3341, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %108(ptr nonnull @.str.1016), !dbg !3341
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape, i64 3, !dbg !3341
  %110 = load i64, ptr %109, align 8, !dbg !3341, !tbaa !3410
  %111 = and i64 %110, 4294967295, !dbg !3341
  %112 = icmp eq i64 %111, 1, !dbg !3341
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !3341, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %113(ptr nonnull @.str.1017), !dbg !3341
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape, i64 4, !dbg !3341
  %115 = load i64, ptr %114, align 8, !dbg !3341, !tbaa !3412
  %116 = and i64 %115, 4294967295, !dbg !3341
  %117 = icmp eq i64 %116, 4, !dbg !3341
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !3341, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %118(ptr nonnull @.str.1018), !dbg !3341
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.strides, null, !dbg !3341
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !3341, !prof !59

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.strides, i64 1, !dbg !3341
  %120 = load i64, ptr %119, align 8, !dbg !3341, !tbaa !3416
  %121 = and i64 %120, 4294967295, !dbg !3341
  %122 = icmp eq i64 %121, 4, !dbg !3341
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.strides, i64 4, !dbg !3341
  %124 = load i64, ptr %123, align 8, !dbg !3341, !tbaa !3426
  %125 = and i64 %124, 4294967295, !dbg !3341
  %126 = icmp eq i64 %125, 1, !dbg !3341
  %127 = and i1 %122, %126, !dbg !3341
  br i1 %127, label %if_end46, label %assert_fail47, !dbg !3341, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %128 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 6, !dbg !3341
  %129 = load i64, ptr %128, align 8, !dbg !3341
  %130 = icmp eq i64 %129, 0, !dbg !3341
  br i1 %130, label %assert_end50, label %assert_fail49, !dbg !3341, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %131(ptr nonnull @.str.1019), !dbg !3341
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %132(ptr nonnull @.str.1020), !dbg !3341
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %133 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 1, i32 0, !dbg !3341
  %134 = load i32, ptr %133, align 4, !dbg !3341
  %135 = icmp eq i32 %134, 1, !dbg !3341
  br i1 %135, label %assert_end52, label %assert_fail51, !dbg !3341, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %136(ptr nonnull @.str.1021), !dbg !3341
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %137 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 1, i32 1, !dbg !3341
  %138 = load i32, ptr %137, align 4, !dbg !3341
  %139 = icmp eq i32 %dev_id, %138, !dbg !3341
  br i1 %139, label %assert_end54, label %assert_fail53, !dbg !3341, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3341, !tbaa !19
  tail call void %140(ptr nonnull @.str.1022), !dbg !3341
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %141 = tail call fastcc i32 @tvmgen_default_fused_nn_adaptive_avg_pool2d_compute_(i32 %dev_id, ptr %p055, ptr %adaptive_pool_avg56), !dbg !3341
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3430 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3432, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3433, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3434, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3435, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3436, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3437, metadata !DIExpression()), !dbg !3438
  %0 = icmp eq i32 %num_args, 3, !dbg !3438
  br i1 %0, label %assert_end, label %assert_fail, !dbg !3438, !prof !18

common.ret:                                       ; preds = %assert_end85, %assert_fail84, %assert_fail82, %assert_fail80, %assert_fail78, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail68, %assert_fail66, %assert_fail64, %assert_fail60, %assert_fail58, %assert_fail56, %assert_fail54, %assert_fail52, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail40, %assert_fail38, %assert_fail36, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail18, %assert_fail16, %assert_fail14, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail4, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail4 ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail18 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail40 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail56 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail68 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail78 ], [ -1, %assert_fail80 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ %232, %assert_end85 ]
  ret i32 %common.ret.op, !dbg !3438

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %1(ptr nonnull @.str.1025), !dbg !3438
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3438, !tbaa !3439
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3438
  %p1.code = load i32, ptr %2, align 4, !dbg !3438, !tbaa !3450
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3438
  %conv2d_NCHWc.code = load i32, ptr %3, align 4, !dbg !3438, !tbaa !3452
  %p0 = load ptr, ptr %args, align 8, !dbg !3438
  %4 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3438
  %p1 = load ptr, ptr %4, align 8, !dbg !3438
  %5 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3438
  %conv2d_NCHWc = load ptr, ptr %5, align 8, !dbg !3438
  %p086 = load ptr, ptr %p0, align 8, !dbg !3438
  call void @llvm.assume(i1 true) [ "align"(ptr %p086, i64 64) ], !dbg !3438
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3438
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.shape = load ptr, ptr %6, align 8, !dbg !3438
  %7 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3438
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.strides = load ptr, ptr %7, align 8, !dbg !3438
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3438
  %dev_id = load i32, ptr %8, align 4, !dbg !3438
  %p187 = load ptr, ptr %p1, align 8, !dbg !3438
  call void @llvm.assume(i1 true) [ "align"(ptr %p187, i64 64) ], !dbg !3438
  %9 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3438
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.shape = load ptr, ptr %9, align 8, !dbg !3438
  %10 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3438
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.strides = load ptr, ptr %10, align 8, !dbg !3438
  %conv2d_NCHWc88 = load ptr, ptr %conv2d_NCHWc, align 8, !dbg !3438
  call void @llvm.assume(i1 true) [ "align"(ptr %conv2d_NCHWc88, i64 64) ], !dbg !3438
  %11 = getelementptr inbounds %1, ptr %conv2d_NCHWc, i64 0, i32 4, !dbg !3438
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.shape = load ptr, ptr %11, align 8, !dbg !3438
  %12 = getelementptr inbounds %1, ptr %conv2d_NCHWc, i64 0, i32 5, !dbg !3438
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.strides = load ptr, ptr %12, align 8, !dbg !3438
  switch i32 %p0.code, label %assert_fail4 [
    i32 13, label %assert_end5
    i32 7, label %assert_end5
    i32 4, label %assert_end5
    i32 3, label %assert_end5
  ], !dbg !3438

assert_fail4:                                     ; preds = %assert_end
  %13 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %13(ptr nonnull @.str.1026), !dbg !3438
  br label %common.ret

assert_end5:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !3438

assert_fail6:                                     ; preds = %assert_end5
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %14(ptr nonnull @.str.1027), !dbg !3438
  br label %common.ret

assert_end7:                                      ; preds = %assert_end5, %assert_end5, %assert_end5, %assert_end5
  switch i32 %conv2d_NCHWc.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !3438

assert_fail8:                                     ; preds = %assert_end7
  %15 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %15(ptr nonnull @.str.1028), !dbg !3438
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  %16 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3438
  %17 = load i32, ptr %16, align 4, !dbg !3438
  %18 = icmp eq i32 %17, 5, !dbg !3438
  br i1 %18, label %assert_end13, label %assert_fail10, !dbg !3438, !prof !18

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %19(ptr nonnull @.str.1029), !dbg !3438
  br label %common.ret

assert_end13:                                     ; preds = %assert_end9
  %20 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3438
  %21 = load i16, ptr %20, align 2, !dbg !3438
  %22 = icmp eq i16 %21, 1, !dbg !3438
  %23 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3438
  %24 = load i8, ptr %23, align 1, !dbg !3438
  %25 = icmp eq i8 %24, 32, !dbg !3438
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3438
  %27 = load i8, ptr %26, align 1, !dbg !3438
  %28 = icmp eq i8 %27, 2, !dbg !3438
  %29 = and i1 %25, %28, !dbg !3438
  %30 = and i1 %22, %29, !dbg !3438
  br i1 %30, label %assert_end15, label %assert_fail14, !dbg !3438, !prof !18

assert_fail14:                                    ; preds = %assert_end13
  %31 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %31(ptr nonnull @.str.1030), !dbg !3438
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13
  %32 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.shape, align 8, !dbg !3438, !tbaa !3455
  %33 = and i64 %32, 4294967295, !dbg !3438
  %34 = icmp eq i64 %33, 1, !dbg !3438
  br i1 %34, label %assert_end17, label %assert_fail16, !dbg !3438, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %35(ptr nonnull @.str.1031), !dbg !3438
  br label %common.ret

assert_end17:                                     ; preds = %assert_end15
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.shape, i64 1, !dbg !3438
  %37 = load i64, ptr %36, align 8, !dbg !3438, !tbaa !3465
  %38 = and i64 %37, 4294967295, !dbg !3438
  %39 = icmp eq i64 %38, 1, !dbg !3438
  br i1 %39, label %assert_end19, label %assert_fail18, !dbg !3438, !prof !18

assert_fail18:                                    ; preds = %assert_end17
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %40(ptr nonnull @.str.1032), !dbg !3438
  br label %common.ret

assert_end19:                                     ; preds = %assert_end17
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.shape, i64 2, !dbg !3438
  %42 = load i64, ptr %41, align 8, !dbg !3438, !tbaa !3467
  %43 = and i64 %42, 4294967295, !dbg !3438
  %44 = icmp eq i64 %43, 224, !dbg !3438
  br i1 %44, label %assert_end21, label %assert_fail20, !dbg !3438, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %45(ptr nonnull @.str.1033), !dbg !3438
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.shape, i64 3, !dbg !3438
  %47 = load i64, ptr %46, align 8, !dbg !3438, !tbaa !3470
  %48 = and i64 %47, 4294967295, !dbg !3438
  %49 = icmp eq i64 %48, 224, !dbg !3438
  br i1 %49, label %assert_end23, label %assert_fail22, !dbg !3438, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %50(ptr nonnull @.str.1034), !dbg !3438
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.shape, i64 4, !dbg !3438
  %52 = load i64, ptr %51, align 8, !dbg !3438, !tbaa !3472
  %53 = and i64 %52, 4294967295, !dbg !3438
  %54 = icmp eq i64 %53, 3, !dbg !3438
  br i1 %54, label %assert_end25, label %assert_fail24, !dbg !3438, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %55(ptr nonnull @.str.1035), !dbg !3438
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.strides, null, !dbg !3438
  br i1 %.not, label %if_end, label %if_then, !dbg !3438, !prof !59

if_then:                                          ; preds = %assert_end25
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.strides, i64 2, !dbg !3438
  %57 = load i64, ptr %56, align 8, !dbg !3438, !tbaa !3476
  %58 = and i64 %57, 4294967295, !dbg !3438
  %59 = icmp eq i64 %58, 672, !dbg !3438
  %60 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.strides, i64 3, !dbg !3438
  %61 = load i64, ptr %60, align 8, !dbg !3438, !tbaa !3486
  %62 = and i64 %61, 4294967295, !dbg !3438
  %63 = icmp eq i64 %62, 3, !dbg !3438
  %64 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p0.strides, i64 4, !dbg !3438
  %65 = load i64, ptr %64, align 8, !dbg !3438, !tbaa !3488
  %66 = and i64 %65, 4294967295, !dbg !3438
  %67 = icmp eq i64 %66, 1, !dbg !3438
  %68 = and i1 %63, %67, !dbg !3438
  %69 = and i1 %59, %68, !dbg !3438
  br i1 %69, label %if_end, label %assert_fail26, !dbg !3438, !prof !18

if_end:                                           ; preds = %if_then, %assert_end25
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3438
  %71 = load i64, ptr %70, align 8, !dbg !3438
  %72 = icmp eq i64 %71, 0, !dbg !3438
  br i1 %72, label %assert_end29, label %assert_fail28, !dbg !3438, !prof !18

assert_fail26:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %73(ptr nonnull @.str.1036), !dbg !3438
  br label %common.ret

assert_fail28:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %74(ptr nonnull @.str.1037), !dbg !3438
  br label %common.ret

assert_end29:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3438
  %76 = load i32, ptr %75, align 4, !dbg !3438
  %77 = icmp eq i32 %76, 1, !dbg !3438
  br i1 %77, label %assert_end31, label %assert_fail30, !dbg !3438, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %78(ptr nonnull @.str.1038), !dbg !3438
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %79 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3438
  %80 = load i32, ptr %79, align 4, !dbg !3438
  %81 = icmp eq i32 %80, 6, !dbg !3438
  br i1 %81, label %assert_end35, label %assert_fail32, !dbg !3438, !prof !18

assert_fail32:                                    ; preds = %assert_end31
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %82(ptr nonnull @.str.1039), !dbg !3438
  br label %common.ret

assert_end35:                                     ; preds = %assert_end31
  %83 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3438
  %84 = load i16, ptr %83, align 2, !dbg !3438
  %85 = icmp eq i16 %84, 1, !dbg !3438
  %86 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3438
  %87 = load i8, ptr %86, align 1, !dbg !3438
  %88 = icmp eq i8 %87, 32, !dbg !3438
  %89 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3438
  %90 = load i8, ptr %89, align 1, !dbg !3438
  %91 = icmp eq i8 %90, 2, !dbg !3438
  %92 = and i1 %88, %91, !dbg !3438
  %93 = and i1 %85, %92, !dbg !3438
  br i1 %93, label %assert_end37, label %assert_fail36, !dbg !3438, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %94(ptr nonnull @.str.1040), !dbg !3438
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %95 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.shape, align 8, !dbg !3438, !tbaa !3492
  %96 = and i64 %95, 4294967295, !dbg !3438
  %97 = icmp eq i64 %96, 2, !dbg !3438
  br i1 %97, label %assert_end39, label %assert_fail38, !dbg !3438, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %98(ptr nonnull @.str.1041), !dbg !3438
  br label %common.ret

assert_end39:                                     ; preds = %assert_end37
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.shape, i64 1, !dbg !3438
  %100 = load i64, ptr %99, align 8, !dbg !3438, !tbaa !3502
  %101 = and i64 %100, 4294967295, !dbg !3438
  %102 = icmp eq i64 %101, 1, !dbg !3438
  br i1 %102, label %assert_end41, label %assert_fail40, !dbg !3438, !prof !18

assert_fail40:                                    ; preds = %assert_end39
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %103(ptr nonnull @.str.1042), !dbg !3438
  br label %common.ret

assert_end41:                                     ; preds = %assert_end39
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.shape, i64 2, !dbg !3438
  %105 = load i64, ptr %104, align 8, !dbg !3438, !tbaa !3504
  %106 = and i64 %105, 4294967295, !dbg !3438
  %107 = icmp eq i64 %106, 7, !dbg !3438
  br i1 %107, label %assert_end43, label %assert_fail42, !dbg !3438, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %108(ptr nonnull @.str.1043), !dbg !3438
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.shape, i64 3, !dbg !3438
  %110 = load i64, ptr %109, align 8, !dbg !3438, !tbaa !3507
  %111 = and i64 %110, 4294967295, !dbg !3438
  %112 = icmp eq i64 %111, 7, !dbg !3438
  br i1 %112, label %assert_end45, label %assert_fail44, !dbg !3438, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %113(ptr nonnull @.str.1044), !dbg !3438
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.shape, i64 4, !dbg !3438
  %115 = load i64, ptr %114, align 8, !dbg !3438, !tbaa !3509
  %116 = and i64 %115, 4294967295, !dbg !3438
  %117 = icmp eq i64 %116, 3, !dbg !3438
  br i1 %117, label %assert_end47, label %assert_fail46, !dbg !3438, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %118(ptr nonnull @.str.1045), !dbg !3438
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.shape, i64 5, !dbg !3438
  %120 = load i64, ptr %119, align 8, !dbg !3438, !tbaa !3513
  %121 = and i64 %120, 4294967295, !dbg !3438
  %122 = icmp eq i64 %121, 32, !dbg !3438
  br i1 %122, label %assert_end49, label %assert_fail48, !dbg !3438, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %123(ptr nonnull @.str.1046), !dbg !3438
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %.not89 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.strides, null, !dbg !3438
  br i1 %.not89, label %if_end51, label %if_then50, !dbg !3438, !prof !59

if_then50:                                        ; preds = %assert_end49
  %124 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.strides, align 8, !dbg !3438, !tbaa !3515
  %125 = and i64 %124, 4294967295, !dbg !3438
  %126 = icmp eq i64 %125, 4704, !dbg !3438
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.strides, i64 2, !dbg !3438
  %128 = load i64, ptr %127, align 8, !dbg !3438, !tbaa !3525
  %129 = and i64 %128, 4294967295, !dbg !3438
  %130 = icmp eq i64 %129, 672, !dbg !3438
  %131 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.strides, i64 3, !dbg !3438
  %132 = load i64, ptr %131, align 8, !dbg !3438, !tbaa !3528
  %133 = and i64 %132, 4294967295, !dbg !3438
  %134 = icmp eq i64 %133, 96, !dbg !3438
  %135 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.strides, i64 4, !dbg !3438
  %136 = load i64, ptr %135, align 8, !dbg !3438, !tbaa !3530
  %137 = and i64 %136, 4294967295, !dbg !3438
  %138 = icmp eq i64 %137, 32, !dbg !3438
  %139 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.p1.strides, i64 5, !dbg !3438
  %140 = load i64, ptr %139, align 8, !dbg !3438, !tbaa !3534
  %141 = and i64 %140, 4294967295, !dbg !3438
  %142 = icmp eq i64 %141, 1, !dbg !3438
  %143 = and i1 %138, %142, !dbg !3438
  %144 = and i1 %134, %143, !dbg !3438
  %145 = and i1 %130, %144, !dbg !3438
  %146 = and i1 %126, %145, !dbg !3438
  br i1 %146, label %if_end51, label %assert_fail52, !dbg !3438, !prof !18

if_end51:                                         ; preds = %if_then50, %assert_end49
  %147 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3438
  %148 = load i64, ptr %147, align 8, !dbg !3438
  %149 = icmp eq i64 %148, 0, !dbg !3438
  br i1 %149, label %assert_end55, label %assert_fail54, !dbg !3438, !prof !18

assert_fail52:                                    ; preds = %if_then50
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %150(ptr nonnull @.str.1047), !dbg !3438
  br label %common.ret

assert_fail54:                                    ; preds = %if_end51
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %151(ptr nonnull @.str.1048), !dbg !3438
  br label %common.ret

assert_end55:                                     ; preds = %if_end51
  %152 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3438
  %153 = load i32, ptr %152, align 4, !dbg !3438
  %154 = icmp eq i32 %153, 1, !dbg !3438
  br i1 %154, label %assert_end57, label %assert_fail56, !dbg !3438, !prof !18

assert_fail56:                                    ; preds = %assert_end55
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %155(ptr nonnull @.str.1049), !dbg !3438
  br label %common.ret

assert_end57:                                     ; preds = %assert_end55
  %156 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3438
  %157 = load i32, ptr %156, align 4, !dbg !3438
  %158 = icmp eq i32 %dev_id, %157, !dbg !3438
  br i1 %158, label %assert_end59, label %assert_fail58, !dbg !3438, !prof !18

assert_fail58:                                    ; preds = %assert_end57
  %159 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %159(ptr nonnull @.str.1050), !dbg !3438
  br label %common.ret

assert_end59:                                     ; preds = %assert_end57
  %160 = getelementptr inbounds %1, ptr %conv2d_NCHWc, i64 0, i32 2, !dbg !3438
  %161 = load i32, ptr %160, align 4, !dbg !3438
  %162 = icmp eq i32 %161, 5, !dbg !3438
  br i1 %162, label %assert_end63, label %assert_fail60, !dbg !3438, !prof !18

assert_fail60:                                    ; preds = %assert_end59
  %163 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %163(ptr nonnull @.str.1051), !dbg !3438
  br label %common.ret

assert_end63:                                     ; preds = %assert_end59
  %164 = getelementptr inbounds %1, ptr %conv2d_NCHWc, i64 0, i32 3, i32 2, !dbg !3438
  %165 = load i16, ptr %164, align 2, !dbg !3438
  %166 = icmp eq i16 %165, 1, !dbg !3438
  %167 = getelementptr inbounds %1, ptr %conv2d_NCHWc, i64 0, i32 3, i32 1, !dbg !3438
  %168 = load i8, ptr %167, align 1, !dbg !3438
  %169 = icmp eq i8 %168, 32, !dbg !3438
  %170 = getelementptr inbounds %1, ptr %conv2d_NCHWc, i64 0, i32 3, i32 0, !dbg !3438
  %171 = load i8, ptr %170, align 1, !dbg !3438
  %172 = icmp eq i8 %171, 2, !dbg !3438
  %173 = and i1 %169, %172, !dbg !3438
  %174 = and i1 %166, %173, !dbg !3438
  br i1 %174, label %assert_end65, label %assert_fail64, !dbg !3438, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %175(ptr nonnull @.str.1052), !dbg !3438
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %176 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.shape, align 8, !dbg !3438, !tbaa !3536
  %177 = and i64 %176, 4294967295, !dbg !3438
  %178 = icmp eq i64 %177, 1, !dbg !3438
  br i1 %178, label %assert_end67, label %assert_fail66, !dbg !3438, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %179(ptr nonnull @.str.1053), !dbg !3438
  br label %common.ret

assert_end67:                                     ; preds = %assert_end65
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.shape, i64 1, !dbg !3438
  %181 = load i64, ptr %180, align 8, !dbg !3438, !tbaa !3546
  %182 = and i64 %181, 4294967295, !dbg !3438
  %183 = icmp eq i64 %182, 2, !dbg !3438
  br i1 %183, label %assert_end69, label %assert_fail68, !dbg !3438, !prof !18

assert_fail68:                                    ; preds = %assert_end67
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %184(ptr nonnull @.str.1054), !dbg !3438
  br label %common.ret

assert_end69:                                     ; preds = %assert_end67
  %185 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.shape, i64 2, !dbg !3438
  %186 = load i64, ptr %185, align 8, !dbg !3438, !tbaa !3548
  %187 = and i64 %186, 4294967295, !dbg !3438
  %188 = icmp eq i64 %187, 112, !dbg !3438
  br i1 %188, label %assert_end71, label %assert_fail70, !dbg !3438, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %189(ptr nonnull @.str.1055), !dbg !3438
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.shape, i64 3, !dbg !3438
  %191 = load i64, ptr %190, align 8, !dbg !3438, !tbaa !3551
  %192 = and i64 %191, 4294967295, !dbg !3438
  %193 = icmp eq i64 %192, 112, !dbg !3438
  br i1 %193, label %assert_end73, label %assert_fail72, !dbg !3438, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %194(ptr nonnull @.str.1056), !dbg !3438
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.shape, i64 4, !dbg !3438
  %196 = load i64, ptr %195, align 8, !dbg !3438, !tbaa !3553
  %197 = and i64 %196, 4294967295, !dbg !3438
  %198 = icmp eq i64 %197, 32, !dbg !3438
  br i1 %198, label %assert_end75, label %assert_fail74, !dbg !3438, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %199(ptr nonnull @.str.1057), !dbg !3438
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %.not90 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.strides, null, !dbg !3438
  br i1 %.not90, label %if_end77, label %if_then76, !dbg !3438, !prof !59

if_then76:                                        ; preds = %assert_end75
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.strides, i64 1, !dbg !3438
  %201 = load i64, ptr %200, align 8, !dbg !3438, !tbaa !3557
  %202 = and i64 %201, 4294967295, !dbg !3438
  %203 = icmp eq i64 %202, 401408, !dbg !3438
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.strides, i64 2, !dbg !3438
  %205 = load i64, ptr %204, align 8, !dbg !3438, !tbaa !3567
  %206 = and i64 %205, 4294967295, !dbg !3438
  %207 = icmp eq i64 %206, 3584, !dbg !3438
  %208 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.strides, i64 3, !dbg !3438
  %209 = load i64, ptr %208, align 8, !dbg !3438, !tbaa !3570
  %210 = and i64 %209, 4294967295, !dbg !3438
  %211 = icmp eq i64 %210, 32, !dbg !3438
  %212 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc.conv2d_NCHWc.strides, i64 4, !dbg !3438
  %213 = load i64, ptr %212, align 8, !dbg !3438, !tbaa !3572
  %214 = and i64 %213, 4294967295, !dbg !3438
  %215 = icmp eq i64 %214, 1, !dbg !3438
  %216 = and i1 %211, %215, !dbg !3438
  %217 = and i1 %207, %216, !dbg !3438
  %218 = and i1 %203, %217, !dbg !3438
  br i1 %218, label %if_end77, label %assert_fail78, !dbg !3438, !prof !18

if_end77:                                         ; preds = %if_then76, %assert_end75
  %219 = getelementptr inbounds %1, ptr %conv2d_NCHWc, i64 0, i32 6, !dbg !3438
  %220 = load i64, ptr %219, align 8, !dbg !3438
  %221 = icmp eq i64 %220, 0, !dbg !3438
  br i1 %221, label %assert_end81, label %assert_fail80, !dbg !3438, !prof !18

assert_fail78:                                    ; preds = %if_then76
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %222(ptr nonnull @.str.1058), !dbg !3438
  br label %common.ret

assert_fail80:                                    ; preds = %if_end77
  %223 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %223(ptr nonnull @.str.1059), !dbg !3438
  br label %common.ret

assert_end81:                                     ; preds = %if_end77
  %224 = getelementptr inbounds %1, ptr %conv2d_NCHWc, i64 0, i32 1, i32 0, !dbg !3438
  %225 = load i32, ptr %224, align 4, !dbg !3438
  %226 = icmp eq i32 %225, 1, !dbg !3438
  br i1 %226, label %assert_end83, label %assert_fail82, !dbg !3438, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %227(ptr nonnull @.str.1060), !dbg !3438
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %228 = getelementptr inbounds %1, ptr %conv2d_NCHWc, i64 0, i32 1, i32 1, !dbg !3438
  %229 = load i32, ptr %228, align 4, !dbg !3438
  %230 = icmp eq i32 %dev_id, %229, !dbg !3438
  br i1 %230, label %assert_end85, label %assert_fail84, !dbg !3438, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %231 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3438, !tbaa !19
  tail call void %231(ptr nonnull @.str.1061), !dbg !3438
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %232 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_compute_(i32 %dev_id, ptr %p086, ptr %p187, ptr %conv2d_NCHWc88), !dbg !3438
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3576 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3578, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3579, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3580, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3581, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3582, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3583, metadata !DIExpression()), !dbg !3584
  %0 = icmp eq i32 %num_args, 5, !dbg !3584
  br i1 %0, label %assert_end, label %assert_fail, !dbg !3584, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %294, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !3584

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %1(ptr nonnull @.str.1064), !dbg !3584
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3584, !tbaa !3585
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3584
  %p1.code = load i32, ptr %2, align 4, !dbg !3584, !tbaa !3596
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3584
  %p2.code = load i32, ptr %3, align 4, !dbg !3584, !tbaa !3598
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3584
  %p3.code = load i32, ptr %4, align 4, !dbg !3584, !tbaa !3601
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !3584
  %T_cast.code = load i32, ptr %5, align 4, !dbg !3584, !tbaa !3603
  %p0 = load ptr, ptr %args, align 8, !dbg !3584
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3584
  %p1 = load ptr, ptr %6, align 8, !dbg !3584
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3584
  %p2 = load ptr, ptr %7, align 8, !dbg !3584
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3584
  %p3 = load ptr, ptr %8, align 8, !dbg !3584
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !3584
  %T_cast = load ptr, ptr %9, align 8, !dbg !3584
  %p0116 = load ptr, ptr %p0, align 8, !dbg !3584
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !3584
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3584
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.shape = load ptr, ptr %10, align 8, !dbg !3584
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3584
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.strides = load ptr, ptr %11, align 8, !dbg !3584
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3584
  %dev_id = load i32, ptr %12, align 4, !dbg !3584
  %p1117 = load ptr, ptr %p1, align 8, !dbg !3584
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !3584
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3584
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.shape = load ptr, ptr %13, align 8, !dbg !3584
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3584
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.strides = load ptr, ptr %14, align 8, !dbg !3584
  %p2119 = load ptr, ptr %p2, align 8, !dbg !3584
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !3584
  %p3120 = load ptr, ptr %p3, align 8, !dbg !3584
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !3584
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !3584
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !3584
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !3584
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.shape = load ptr, ptr %15, align 8, !dbg !3584
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !3584
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.strides = load ptr, ptr %16, align 8, !dbg !3584
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !3584

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %17(ptr nonnull @.str.1065), !dbg !3584
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !3584

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %18(ptr nonnull @.str.1066), !dbg !3584
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !3584

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %19(ptr nonnull @.str.1067), !dbg !3584
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !3584

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %20(ptr nonnull @.str.1068), !dbg !3584
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !3584

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %21(ptr nonnull @.str.1069), !dbg !3584
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3584
  %23 = load i32, ptr %22, align 4, !dbg !3584
  %24 = icmp eq i32 %23, 5, !dbg !3584
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !3584, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %25(ptr nonnull @.str.1070), !dbg !3584
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3584
  %27 = load i16, ptr %26, align 2, !dbg !3584
  %28 = icmp eq i16 %27, 1, !dbg !3584
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3584
  %30 = load i8, ptr %29, align 1, !dbg !3584
  %31 = icmp eq i8 %30, 8, !dbg !3584
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3584
  %33 = load i8, ptr %32, align 1, !dbg !3584
  %34 = icmp eq i8 %33, 0, !dbg !3584
  %35 = and i1 %31, %34, !dbg !3584
  %36 = and i1 %28, %35, !dbg !3584
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !3584, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %37(ptr nonnull @.str.1071), !dbg !3584
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.shape, align 8, !dbg !3584, !tbaa !3607
  %39 = and i64 %38, 4294967295, !dbg !3584
  %40 = icmp eq i64 %39, 1, !dbg !3584
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !3584, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %41(ptr nonnull @.str.1072), !dbg !3584
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.shape, i64 1, !dbg !3584
  %43 = load i64, ptr %42, align 8, !dbg !3584, !tbaa !3617
  %44 = and i64 %43, 4294967295, !dbg !3584
  %45 = icmp eq i64 %44, 16, !dbg !3584
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !3584, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %46(ptr nonnull @.str.1073), !dbg !3584
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.shape, i64 2, !dbg !3584
  %48 = load i64, ptr %47, align 8, !dbg !3584, !tbaa !3619
  %49 = and i64 %48, 4294967295, !dbg !3584
  %50 = icmp eq i64 %49, 56, !dbg !3584
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !3584, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %51(ptr nonnull @.str.1074), !dbg !3584
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.shape, i64 3, !dbg !3584
  %53 = load i64, ptr %52, align 8, !dbg !3584, !tbaa !3622
  %54 = and i64 %53, 4294967295, !dbg !3584
  %55 = icmp eq i64 %54, 56, !dbg !3584
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !3584, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %56(ptr nonnull @.str.1075), !dbg !3584
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.shape, i64 4, !dbg !3584
  %58 = load i64, ptr %57, align 8, !dbg !3584, !tbaa !3624
  %59 = and i64 %58, 4294967295, !dbg !3584
  %60 = icmp eq i64 %59, 4, !dbg !3584
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !3584, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %61(ptr nonnull @.str.1076), !dbg !3584
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.strides, null, !dbg !3584
  br i1 %.not, label %if_end, label %if_then, !dbg !3584, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.strides, i64 1, !dbg !3584
  %63 = load i64, ptr %62, align 8, !dbg !3584, !tbaa !3628
  %64 = and i64 %63, 4294967295, !dbg !3584
  %65 = icmp eq i64 %64, 12544, !dbg !3584
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.strides, i64 2, !dbg !3584
  %67 = load i64, ptr %66, align 8, !dbg !3584, !tbaa !3638
  %68 = and i64 %67, 4294967295, !dbg !3584
  %69 = icmp eq i64 %68, 224, !dbg !3584
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.strides, i64 3, !dbg !3584
  %71 = load i64, ptr %70, align 8, !dbg !3584, !tbaa !3641
  %72 = and i64 %71, 4294967295, !dbg !3584
  %73 = icmp eq i64 %72, 4, !dbg !3584
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p0.strides, i64 4, !dbg !3584
  %75 = load i64, ptr %74, align 8, !dbg !3584, !tbaa !3643
  %76 = and i64 %75, 4294967295, !dbg !3584
  %77 = icmp eq i64 %76, 1, !dbg !3584
  %78 = and i1 %73, %77, !dbg !3584
  %79 = and i1 %69, %78, !dbg !3584
  %80 = and i1 %65, %79, !dbg !3584
  br i1 %80, label %if_end, label %assert_fail32, !dbg !3584, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3584
  %82 = load i64, ptr %81, align 8, !dbg !3584
  %83 = icmp eq i64 %82, 0, !dbg !3584
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !3584, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %84(ptr nonnull @.str.1077), !dbg !3584
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %85(ptr nonnull @.str.1078), !dbg !3584
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3584
  %87 = load i32, ptr %86, align 4, !dbg !3584
  %88 = icmp eq i32 %87, 1, !dbg !3584
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !3584, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %89(ptr nonnull @.str.1079), !dbg !3584
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3584
  %91 = load i32, ptr %90, align 4, !dbg !3584
  %92 = icmp eq i32 %91, 6, !dbg !3584
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !3584, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %93(ptr nonnull @.str.1080), !dbg !3584
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3584
  %95 = load i16, ptr %94, align 2, !dbg !3584
  %96 = icmp eq i16 %95, 1, !dbg !3584
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3584
  %98 = load i8, ptr %97, align 1, !dbg !3584
  %99 = icmp eq i8 %98, 8, !dbg !3584
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3584
  %101 = load i8, ptr %100, align 1, !dbg !3584
  %102 = icmp eq i8 %101, 0, !dbg !3584
  %103 = and i1 %99, %102, !dbg !3584
  %104 = and i1 %96, %103, !dbg !3584
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !3584, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %105(ptr nonnull @.str.1081), !dbg !3584
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.shape, align 8, !dbg !3584, !tbaa !3647
  %107 = and i64 %106, 4294967295, !dbg !3584
  %108 = icmp eq i64 %107, 16, !dbg !3584
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !3584, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %109(ptr nonnull @.str.1082), !dbg !3584
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.shape, i64 1, !dbg !3584
  %111 = load i64, ptr %110, align 8, !dbg !3584, !tbaa !3657
  %112 = and i64 %111, 4294967295, !dbg !3584
  %113 = icmp eq i64 %112, 16, !dbg !3584
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !3584, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %114(ptr nonnull @.str.1083), !dbg !3584
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.shape, i64 2, !dbg !3584
  %116 = load i64, ptr %115, align 8, !dbg !3584, !tbaa !3659
  %117 = and i64 %116, 4294967295, !dbg !3584
  %118 = icmp eq i64 %117, 1, !dbg !3584
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !3584, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %119(ptr nonnull @.str.1084), !dbg !3584
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.shape, i64 3, !dbg !3584
  %121 = load i64, ptr %120, align 8, !dbg !3584, !tbaa !3662
  %122 = and i64 %121, 4294967295, !dbg !3584
  %123 = icmp eq i64 %122, 1, !dbg !3584
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !3584, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %124(ptr nonnull @.str.1085), !dbg !3584
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.shape, i64 4, !dbg !3584
  %126 = load i64, ptr %125, align 8, !dbg !3584, !tbaa !3664
  %127 = and i64 %126, 4294967295, !dbg !3584
  %128 = icmp eq i64 %127, 4, !dbg !3584
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !3584, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %129(ptr nonnull @.str.1086), !dbg !3584
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.shape, i64 5, !dbg !3584
  %131 = load i64, ptr %130, align 8, !dbg !3584, !tbaa !3668
  %132 = and i64 %131, 4294967295, !dbg !3584
  %133 = icmp eq i64 %132, 4, !dbg !3584
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !3584, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %134(ptr nonnull @.str.1087), !dbg !3584
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.strides, null, !dbg !3584
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !3584, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.strides, align 8, !dbg !3584, !tbaa !3670
  %136 = and i64 %135, 4294967295, !dbg !3584
  %137 = icmp eq i64 %136, 256, !dbg !3584
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.strides, i64 1, !dbg !3584
  %139 = load i64, ptr %138, align 8, !dbg !3584, !tbaa !3680
  %140 = and i64 %139, 4294967295, !dbg !3584
  %141 = icmp eq i64 %140, 16, !dbg !3584
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.strides, i64 4, !dbg !3584
  %143 = load i64, ptr %142, align 8, !dbg !3584, !tbaa !3682
  %144 = and i64 %143, 4294967295, !dbg !3584
  %145 = icmp eq i64 %144, 4, !dbg !3584
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.p1.strides, i64 5, !dbg !3584
  %147 = load i64, ptr %146, align 8, !dbg !3584, !tbaa !3686
  %148 = and i64 %147, 4294967295, !dbg !3584
  %149 = icmp eq i64 %148, 1, !dbg !3584
  %150 = and i1 %145, %149, !dbg !3584
  %151 = and i1 %141, %150, !dbg !3584
  %152 = and i1 %137, %151, !dbg !3584
  br i1 %152, label %if_end57, label %assert_fail58, !dbg !3584, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3584
  %154 = load i64, ptr %153, align 8, !dbg !3584
  %155 = icmp eq i64 %154, 0, !dbg !3584
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !3584, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %156(ptr nonnull @.str.1088), !dbg !3584
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %157(ptr nonnull @.str.1089), !dbg !3584
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %158 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3584
  %159 = load i32, ptr %158, align 4, !dbg !3584
  %160 = icmp eq i32 %159, 1, !dbg !3584
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !3584, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %161(ptr nonnull @.str.1090), !dbg !3584
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3584
  %163 = load i32, ptr %162, align 4, !dbg !3584
  %164 = icmp eq i32 %dev_id, %163, !dbg !3584
  br i1 %164, label %assert_end65, label %assert_fail64, !dbg !3584, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %165(ptr nonnull @.str.1091), !dbg !3584
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %166 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3584
  %167 = load i32, ptr %166, align 4, !dbg !3584
  %168 = icmp eq i32 %167, 0, !dbg !3584
  br i1 %168, label %assert_end69, label %assert_fail66, !dbg !3584, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %169(ptr nonnull @.str.1092), !dbg !3584
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3584
  %171 = load i16, ptr %170, align 2, !dbg !3584
  %172 = icmp eq i16 %171, 1, !dbg !3584
  %173 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3584
  %174 = load i8, ptr %173, align 1, !dbg !3584
  %175 = icmp eq i8 %174, 16, !dbg !3584
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3584
  %177 = load i8, ptr %176, align 1, !dbg !3584
  %178 = icmp eq i8 %177, 0, !dbg !3584
  %179 = and i1 %175, %178, !dbg !3584
  %180 = and i1 %172, %179, !dbg !3584
  br i1 %180, label %assert_end71, label %assert_fail70, !dbg !3584, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %181(ptr nonnull @.str.1093), !dbg !3584
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3584
  %183 = load i64, ptr %182, align 8, !dbg !3584
  %184 = icmp eq i64 %183, 0, !dbg !3584
  br i1 %184, label %assert_end73, label %assert_fail72, !dbg !3584, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %185(ptr nonnull @.str.1094), !dbg !3584
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3584
  %187 = load i32, ptr %186, align 4, !dbg !3584
  %188 = icmp eq i32 %187, 1, !dbg !3584
  br i1 %188, label %assert_end75, label %assert_fail74, !dbg !3584, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %189(ptr nonnull @.str.1095), !dbg !3584
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3584
  %191 = load i32, ptr %190, align 4, !dbg !3584
  %192 = icmp eq i32 %dev_id, %191, !dbg !3584
  br i1 %192, label %assert_end77, label %assert_fail76, !dbg !3584, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %193(ptr nonnull @.str.1096), !dbg !3584
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %194 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !3584
  %195 = load i32, ptr %194, align 4, !dbg !3584
  %196 = icmp eq i32 %195, 0, !dbg !3584
  br i1 %196, label %assert_end81, label %assert_fail78, !dbg !3584, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %197(ptr nonnull @.str.1097), !dbg !3584
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %198 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !3584
  %199 = load i16, ptr %198, align 2, !dbg !3584
  %200 = icmp eq i16 %199, 1, !dbg !3584
  %201 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !3584
  %202 = load i8, ptr %201, align 1, !dbg !3584
  %203 = icmp eq i8 %202, 16, !dbg !3584
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !3584
  %205 = load i8, ptr %204, align 1, !dbg !3584
  %206 = icmp eq i8 %205, 0, !dbg !3584
  %207 = and i1 %203, %206, !dbg !3584
  %208 = and i1 %200, %207, !dbg !3584
  br i1 %208, label %assert_end83, label %assert_fail82, !dbg !3584, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %209(ptr nonnull @.str.1098), !dbg !3584
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %210 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !3584
  %211 = load i64, ptr %210, align 8, !dbg !3584
  %212 = icmp eq i64 %211, 0, !dbg !3584
  br i1 %212, label %assert_end85, label %assert_fail84, !dbg !3584, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %213(ptr nonnull @.str.1099), !dbg !3584
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !3584
  %215 = load i32, ptr %214, align 4, !dbg !3584
  %216 = icmp eq i32 %215, 1, !dbg !3584
  br i1 %216, label %assert_end87, label %assert_fail86, !dbg !3584, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %217(ptr nonnull @.str.1100), !dbg !3584
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %218 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !3584
  %219 = load i32, ptr %218, align 4, !dbg !3584
  %220 = icmp eq i32 %dev_id, %219, !dbg !3584
  br i1 %220, label %assert_end89, label %assert_fail88, !dbg !3584, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %221 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %221(ptr nonnull @.str.1101), !dbg !3584
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %222 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !3584
  %223 = load i32, ptr %222, align 4, !dbg !3584
  %224 = icmp eq i32 %223, 5, !dbg !3584
  br i1 %224, label %assert_end93, label %assert_fail90, !dbg !3584, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %225 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %225(ptr nonnull @.str.1102), !dbg !3584
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %226 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !3584
  %227 = load i16, ptr %226, align 2, !dbg !3584
  %228 = icmp eq i16 %227, 1, !dbg !3584
  %229 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !3584
  %230 = load i8, ptr %229, align 1, !dbg !3584
  %231 = icmp eq i8 %230, 8, !dbg !3584
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !3584
  %233 = load i8, ptr %232, align 1, !dbg !3584
  %234 = icmp eq i8 %233, 0, !dbg !3584
  %235 = and i1 %231, %234, !dbg !3584
  %236 = and i1 %228, %235, !dbg !3584
  br i1 %236, label %assert_end95, label %assert_fail94, !dbg !3584, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %237(ptr nonnull @.str.1103), !dbg !3584
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %238 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.shape, align 8, !dbg !3584, !tbaa !3688
  %239 = and i64 %238, 4294967295, !dbg !3584
  %240 = icmp eq i64 %239, 1, !dbg !3584
  br i1 %240, label %assert_end97, label %assert_fail96, !dbg !3584, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %241(ptr nonnull @.str.1104), !dbg !3584
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.shape, i64 1, !dbg !3584
  %243 = load i64, ptr %242, align 8, !dbg !3584, !tbaa !3698
  %244 = and i64 %243, 4294967295, !dbg !3584
  %245 = icmp eq i64 %244, 16, !dbg !3584
  br i1 %245, label %assert_end99, label %assert_fail98, !dbg !3584, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %246(ptr nonnull @.str.1105), !dbg !3584
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.shape, i64 2, !dbg !3584
  %248 = load i64, ptr %247, align 8, !dbg !3584, !tbaa !3700
  %249 = and i64 %248, 4294967295, !dbg !3584
  %250 = icmp eq i64 %249, 56, !dbg !3584
  br i1 %250, label %assert_end101, label %assert_fail100, !dbg !3584, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %251(ptr nonnull @.str.1106), !dbg !3584
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.shape, i64 3, !dbg !3584
  %253 = load i64, ptr %252, align 8, !dbg !3584, !tbaa !3703
  %254 = and i64 %253, 4294967295, !dbg !3584
  %255 = icmp eq i64 %254, 56, !dbg !3584
  br i1 %255, label %assert_end103, label %assert_fail102, !dbg !3584, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %256(ptr nonnull @.str.1107), !dbg !3584
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.shape, i64 4, !dbg !3584
  %258 = load i64, ptr %257, align 8, !dbg !3584, !tbaa !3705
  %259 = and i64 %258, 4294967295, !dbg !3584
  %260 = icmp eq i64 %259, 4, !dbg !3584
  br i1 %260, label %assert_end105, label %assert_fail104, !dbg !3584, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %261(ptr nonnull @.str.1108), !dbg !3584
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.strides, null, !dbg !3584
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !3584, !prof !59

if_then106:                                       ; preds = %assert_end105
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.strides, i64 1, !dbg !3584
  %263 = load i64, ptr %262, align 8, !dbg !3584, !tbaa !3709
  %264 = and i64 %263, 4294967295, !dbg !3584
  %265 = icmp eq i64 %264, 12544, !dbg !3584
  %266 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.strides, i64 2, !dbg !3584
  %267 = load i64, ptr %266, align 8, !dbg !3584, !tbaa !3719
  %268 = and i64 %267, 4294967295, !dbg !3584
  %269 = icmp eq i64 %268, 224, !dbg !3584
  %270 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.strides, i64 3, !dbg !3584
  %271 = load i64, ptr %270, align 8, !dbg !3584, !tbaa !3722
  %272 = and i64 %271, 4294967295, !dbg !3584
  %273 = icmp eq i64 %272, 4, !dbg !3584
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast.T_cast.strides, i64 4, !dbg !3584
  %275 = load i64, ptr %274, align 8, !dbg !3584, !tbaa !3724
  %276 = and i64 %275, 4294967295, !dbg !3584
  %277 = icmp eq i64 %276, 1, !dbg !3584
  %278 = and i1 %273, %277, !dbg !3584
  %279 = and i1 %269, %278, !dbg !3584
  %280 = and i1 %265, %279, !dbg !3584
  br i1 %280, label %if_end107, label %assert_fail108, !dbg !3584, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %281 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !3584
  %282 = load i64, ptr %281, align 8, !dbg !3584
  %283 = icmp eq i64 %282, 0, !dbg !3584
  br i1 %283, label %assert_end111, label %assert_fail110, !dbg !3584, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %284(ptr nonnull @.str.1109), !dbg !3584
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %285 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %285(ptr nonnull @.str.1110), !dbg !3584
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %286 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !3584
  %287 = load i32, ptr %286, align 4, !dbg !3584
  %288 = icmp eq i32 %287, 1, !dbg !3584
  br i1 %288, label %assert_end113, label %assert_fail112, !dbg !3584, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %289(ptr nonnull @.str.1111), !dbg !3584
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %290 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !3584
  %291 = load i32, ptr %290, align 4, !dbg !3584
  %292 = icmp eq i32 %dev_id, %291, !dbg !3584
  br i1 %292, label %assert_end115, label %assert_fail114, !dbg !3584, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %293 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3584, !tbaa !19
  tail call void %293(ptr nonnull @.str.1112), !dbg !3584
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %294 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_compute_(ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !3584
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3728 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3730, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3731, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3732, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3733, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3734, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3735, metadata !DIExpression()), !dbg !3736
  %0 = icmp eq i32 %num_args, 5, !dbg !3736
  br i1 %0, label %assert_end, label %assert_fail, !dbg !3736, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %304, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !3736

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %1(ptr nonnull @.str.1114), !dbg !3736
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3736, !tbaa !3737
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3736
  %p1.code = load i32, ptr %2, align 4, !dbg !3736, !tbaa !3748
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3736
  %p2.code = load i32, ptr %3, align 4, !dbg !3736, !tbaa !3750
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3736
  %p3.code = load i32, ptr %4, align 4, !dbg !3736, !tbaa !3753
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !3736
  %T_cast.code = load i32, ptr %5, align 4, !dbg !3736, !tbaa !3755
  %p0 = load ptr, ptr %args, align 8, !dbg !3736
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3736
  %p1 = load ptr, ptr %6, align 8, !dbg !3736
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3736
  %p2 = load ptr, ptr %7, align 8, !dbg !3736
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3736
  %p3 = load ptr, ptr %8, align 8, !dbg !3736
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !3736
  %T_cast = load ptr, ptr %9, align 8, !dbg !3736
  %p0116 = load ptr, ptr %p0, align 8, !dbg !3736
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !3736
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3736
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.shape = load ptr, ptr %10, align 8, !dbg !3736
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3736
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.strides = load ptr, ptr %11, align 8, !dbg !3736
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3736
  %dev_id = load i32, ptr %12, align 4, !dbg !3736
  %p1117 = load ptr, ptr %p1, align 8, !dbg !3736
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !3736
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3736
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.shape = load ptr, ptr %13, align 8, !dbg !3736
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3736
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.strides = load ptr, ptr %14, align 8, !dbg !3736
  %p2119 = load ptr, ptr %p2, align 8, !dbg !3736
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !3736
  %p3120 = load ptr, ptr %p3, align 8, !dbg !3736
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !3736
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !3736
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !3736
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !3736
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.shape = load ptr, ptr %15, align 8, !dbg !3736
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !3736
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.strides = load ptr, ptr %16, align 8, !dbg !3736
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !3736

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %17(ptr nonnull @.str.1115), !dbg !3736
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !3736

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %18(ptr nonnull @.str.1116), !dbg !3736
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !3736

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %19(ptr nonnull @.str.1117), !dbg !3736
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !3736

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %20(ptr nonnull @.str.1118), !dbg !3736
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !3736

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %21(ptr nonnull @.str.1119), !dbg !3736
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3736
  %23 = load i32, ptr %22, align 4, !dbg !3736
  %24 = icmp eq i32 %23, 5, !dbg !3736
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !3736, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %25(ptr nonnull @.str.1120), !dbg !3736
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3736
  %27 = load i16, ptr %26, align 2, !dbg !3736
  %28 = icmp eq i16 %27, 1, !dbg !3736
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3736
  %30 = load i8, ptr %29, align 1, !dbg !3736
  %31 = icmp eq i8 %30, 8, !dbg !3736
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3736
  %33 = load i8, ptr %32, align 1, !dbg !3736
  %34 = icmp eq i8 %33, 0, !dbg !3736
  %35 = and i1 %31, %34, !dbg !3736
  %36 = and i1 %28, %35, !dbg !3736
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !3736, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %37(ptr nonnull @.str.1121), !dbg !3736
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.shape, align 8, !dbg !3736, !tbaa !3759
  %39 = and i64 %38, 4294967295, !dbg !3736
  %40 = icmp eq i64 %39, 1, !dbg !3736
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !3736, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %41(ptr nonnull @.str.1122), !dbg !3736
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.shape, i64 1, !dbg !3736
  %43 = load i64, ptr %42, align 8, !dbg !3736, !tbaa !3769
  %44 = and i64 %43, 4294967295, !dbg !3736
  %45 = icmp eq i64 %44, 16, !dbg !3736
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !3736, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %46(ptr nonnull @.str.1123), !dbg !3736
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.shape, i64 2, !dbg !3736
  %48 = load i64, ptr %47, align 8, !dbg !3736, !tbaa !3771
  %49 = and i64 %48, 4294967295, !dbg !3736
  %50 = icmp eq i64 %49, 56, !dbg !3736
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !3736, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %51(ptr nonnull @.str.1124), !dbg !3736
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.shape, i64 3, !dbg !3736
  %53 = load i64, ptr %52, align 8, !dbg !3736, !tbaa !3774
  %54 = and i64 %53, 4294967295, !dbg !3736
  %55 = icmp eq i64 %54, 56, !dbg !3736
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !3736, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %56(ptr nonnull @.str.1125), !dbg !3736
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.shape, i64 4, !dbg !3736
  %58 = load i64, ptr %57, align 8, !dbg !3736, !tbaa !3776
  %59 = and i64 %58, 4294967295, !dbg !3736
  %60 = icmp eq i64 %59, 4, !dbg !3736
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !3736, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %61(ptr nonnull @.str.1126), !dbg !3736
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.strides, null, !dbg !3736
  br i1 %.not, label %if_end, label %if_then, !dbg !3736, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.strides, i64 1, !dbg !3736
  %63 = load i64, ptr %62, align 8, !dbg !3736, !tbaa !3780
  %64 = and i64 %63, 4294967295, !dbg !3736
  %65 = icmp eq i64 %64, 12544, !dbg !3736
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.strides, i64 2, !dbg !3736
  %67 = load i64, ptr %66, align 8, !dbg !3736, !tbaa !3790
  %68 = and i64 %67, 4294967295, !dbg !3736
  %69 = icmp eq i64 %68, 224, !dbg !3736
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.strides, i64 3, !dbg !3736
  %71 = load i64, ptr %70, align 8, !dbg !3736, !tbaa !3793
  %72 = and i64 %71, 4294967295, !dbg !3736
  %73 = icmp eq i64 %72, 4, !dbg !3736
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p0.strides, i64 4, !dbg !3736
  %75 = load i64, ptr %74, align 8, !dbg !3736, !tbaa !3795
  %76 = and i64 %75, 4294967295, !dbg !3736
  %77 = icmp eq i64 %76, 1, !dbg !3736
  %78 = and i1 %73, %77, !dbg !3736
  %79 = and i1 %69, %78, !dbg !3736
  %80 = and i1 %65, %79, !dbg !3736
  br i1 %80, label %if_end, label %assert_fail32, !dbg !3736, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3736
  %82 = load i64, ptr %81, align 8, !dbg !3736
  %83 = icmp eq i64 %82, 0, !dbg !3736
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !3736, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %84(ptr nonnull @.str.1127), !dbg !3736
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %85(ptr nonnull @.str.1128), !dbg !3736
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3736
  %87 = load i32, ptr %86, align 4, !dbg !3736
  %88 = icmp eq i32 %87, 1, !dbg !3736
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !3736, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %89(ptr nonnull @.str.1129), !dbg !3736
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3736
  %91 = load i32, ptr %90, align 4, !dbg !3736
  %92 = icmp eq i32 %91, 6, !dbg !3736
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !3736, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %93(ptr nonnull @.str.1130), !dbg !3736
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3736
  %95 = load i16, ptr %94, align 2, !dbg !3736
  %96 = icmp eq i16 %95, 1, !dbg !3736
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3736
  %98 = load i8, ptr %97, align 1, !dbg !3736
  %99 = icmp eq i8 %98, 8, !dbg !3736
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3736
  %101 = load i8, ptr %100, align 1, !dbg !3736
  %102 = icmp eq i8 %101, 0, !dbg !3736
  %103 = and i1 %99, %102, !dbg !3736
  %104 = and i1 %96, %103, !dbg !3736
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !3736, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %105(ptr nonnull @.str.1131), !dbg !3736
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.shape, align 8, !dbg !3736, !tbaa !3799
  %107 = and i64 %106, 4294967295, !dbg !3736
  %108 = icmp eq i64 %107, 16, !dbg !3736
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !3736, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %109(ptr nonnull @.str.1132), !dbg !3736
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.shape, i64 1, !dbg !3736
  %111 = load i64, ptr %110, align 8, !dbg !3736, !tbaa !3809
  %112 = and i64 %111, 4294967295, !dbg !3736
  %113 = icmp eq i64 %112, 16, !dbg !3736
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !3736, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %114(ptr nonnull @.str.1133), !dbg !3736
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.shape, i64 2, !dbg !3736
  %116 = load i64, ptr %115, align 8, !dbg !3736, !tbaa !3811
  %117 = and i64 %116, 4294967295, !dbg !3736
  %118 = icmp eq i64 %117, 3, !dbg !3736
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !3736, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %119(ptr nonnull @.str.1134), !dbg !3736
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.shape, i64 3, !dbg !3736
  %121 = load i64, ptr %120, align 8, !dbg !3736, !tbaa !3814
  %122 = and i64 %121, 4294967295, !dbg !3736
  %123 = icmp eq i64 %122, 3, !dbg !3736
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !3736, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %124(ptr nonnull @.str.1135), !dbg !3736
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.shape, i64 4, !dbg !3736
  %126 = load i64, ptr %125, align 8, !dbg !3736, !tbaa !3816
  %127 = and i64 %126, 4294967295, !dbg !3736
  %128 = icmp eq i64 %127, 4, !dbg !3736
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !3736, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %129(ptr nonnull @.str.1136), !dbg !3736
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.shape, i64 5, !dbg !3736
  %131 = load i64, ptr %130, align 8, !dbg !3736, !tbaa !3820
  %132 = and i64 %131, 4294967295, !dbg !3736
  %133 = icmp eq i64 %132, 4, !dbg !3736
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !3736, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %134(ptr nonnull @.str.1137), !dbg !3736
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.strides, null, !dbg !3736
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !3736, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.strides, align 8, !dbg !3736, !tbaa !3822
  %136 = and i64 %135, 4294967295, !dbg !3736
  %137 = icmp eq i64 %136, 2304, !dbg !3736
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.strides, i64 1, !dbg !3736
  %139 = load i64, ptr %138, align 8, !dbg !3736, !tbaa !3832
  %140 = and i64 %139, 4294967295, !dbg !3736
  %141 = icmp eq i64 %140, 144, !dbg !3736
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.strides, i64 2, !dbg !3736
  %143 = load i64, ptr %142, align 8, !dbg !3736, !tbaa !3834
  %144 = and i64 %143, 4294967295, !dbg !3736
  %145 = icmp eq i64 %144, 48, !dbg !3736
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.strides, i64 3, !dbg !3736
  %147 = load i64, ptr %146, align 8, !dbg !3736, !tbaa !3837
  %148 = and i64 %147, 4294967295, !dbg !3736
  %149 = icmp eq i64 %148, 16, !dbg !3736
  %150 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.strides, i64 4, !dbg !3736
  %151 = load i64, ptr %150, align 8, !dbg !3736, !tbaa !3839
  %152 = and i64 %151, 4294967295, !dbg !3736
  %153 = icmp eq i64 %152, 4, !dbg !3736
  %154 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.p1.strides, i64 5, !dbg !3736
  %155 = load i64, ptr %154, align 8, !dbg !3736, !tbaa !3843
  %156 = and i64 %155, 4294967295, !dbg !3736
  %157 = icmp eq i64 %156, 1, !dbg !3736
  %158 = and i1 %153, %157, !dbg !3736
  %159 = and i1 %149, %158, !dbg !3736
  %160 = and i1 %145, %159, !dbg !3736
  %161 = and i1 %141, %160, !dbg !3736
  %162 = and i1 %137, %161, !dbg !3736
  br i1 %162, label %if_end57, label %assert_fail58, !dbg !3736, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %163 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3736
  %164 = load i64, ptr %163, align 8, !dbg !3736
  %165 = icmp eq i64 %164, 0, !dbg !3736
  br i1 %165, label %assert_end61, label %assert_fail60, !dbg !3736, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %166(ptr nonnull @.str.1138), !dbg !3736
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %167 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %167(ptr nonnull @.str.1139), !dbg !3736
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %168 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3736
  %169 = load i32, ptr %168, align 4, !dbg !3736
  %170 = icmp eq i32 %169, 1, !dbg !3736
  br i1 %170, label %assert_end63, label %assert_fail62, !dbg !3736, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %171 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %171(ptr nonnull @.str.1140), !dbg !3736
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %172 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3736
  %173 = load i32, ptr %172, align 4, !dbg !3736
  %174 = icmp eq i32 %dev_id, %173, !dbg !3736
  br i1 %174, label %assert_end65, label %assert_fail64, !dbg !3736, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %175(ptr nonnull @.str.1141), !dbg !3736
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3736
  %177 = load i32, ptr %176, align 4, !dbg !3736
  %178 = icmp eq i32 %177, 0, !dbg !3736
  br i1 %178, label %assert_end69, label %assert_fail66, !dbg !3736, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %179(ptr nonnull @.str.1142), !dbg !3736
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3736
  %181 = load i16, ptr %180, align 2, !dbg !3736
  %182 = icmp eq i16 %181, 1, !dbg !3736
  %183 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3736
  %184 = load i8, ptr %183, align 1, !dbg !3736
  %185 = icmp eq i8 %184, 16, !dbg !3736
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3736
  %187 = load i8, ptr %186, align 1, !dbg !3736
  %188 = icmp eq i8 %187, 0, !dbg !3736
  %189 = and i1 %185, %188, !dbg !3736
  %190 = and i1 %182, %189, !dbg !3736
  br i1 %190, label %assert_end71, label %assert_fail70, !dbg !3736, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %191(ptr nonnull @.str.1143), !dbg !3736
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %192 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3736
  %193 = load i64, ptr %192, align 8, !dbg !3736
  %194 = icmp eq i64 %193, 0, !dbg !3736
  br i1 %194, label %assert_end73, label %assert_fail72, !dbg !3736, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %195 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %195(ptr nonnull @.str.1144), !dbg !3736
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %196 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3736
  %197 = load i32, ptr %196, align 4, !dbg !3736
  %198 = icmp eq i32 %197, 1, !dbg !3736
  br i1 %198, label %assert_end75, label %assert_fail74, !dbg !3736, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %199(ptr nonnull @.str.1145), !dbg !3736
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %200 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3736
  %201 = load i32, ptr %200, align 4, !dbg !3736
  %202 = icmp eq i32 %dev_id, %201, !dbg !3736
  br i1 %202, label %assert_end77, label %assert_fail76, !dbg !3736, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %203(ptr nonnull @.str.1146), !dbg !3736
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !3736
  %205 = load i32, ptr %204, align 4, !dbg !3736
  %206 = icmp eq i32 %205, 0, !dbg !3736
  br i1 %206, label %assert_end81, label %assert_fail78, !dbg !3736, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %207(ptr nonnull @.str.1147), !dbg !3736
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %208 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !3736
  %209 = load i16, ptr %208, align 2, !dbg !3736
  %210 = icmp eq i16 %209, 1, !dbg !3736
  %211 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !3736
  %212 = load i8, ptr %211, align 1, !dbg !3736
  %213 = icmp eq i8 %212, 16, !dbg !3736
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !3736
  %215 = load i8, ptr %214, align 1, !dbg !3736
  %216 = icmp eq i8 %215, 0, !dbg !3736
  %217 = and i1 %213, %216, !dbg !3736
  %218 = and i1 %210, %217, !dbg !3736
  br i1 %218, label %assert_end83, label %assert_fail82, !dbg !3736, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %219 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %219(ptr nonnull @.str.1148), !dbg !3736
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %220 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !3736
  %221 = load i64, ptr %220, align 8, !dbg !3736
  %222 = icmp eq i64 %221, 0, !dbg !3736
  br i1 %222, label %assert_end85, label %assert_fail84, !dbg !3736, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %223 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %223(ptr nonnull @.str.1149), !dbg !3736
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %224 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !3736
  %225 = load i32, ptr %224, align 4, !dbg !3736
  %226 = icmp eq i32 %225, 1, !dbg !3736
  br i1 %226, label %assert_end87, label %assert_fail86, !dbg !3736, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %227(ptr nonnull @.str.1150), !dbg !3736
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %228 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !3736
  %229 = load i32, ptr %228, align 4, !dbg !3736
  %230 = icmp eq i32 %dev_id, %229, !dbg !3736
  br i1 %230, label %assert_end89, label %assert_fail88, !dbg !3736, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %231 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %231(ptr nonnull @.str.1151), !dbg !3736
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !3736
  %233 = load i32, ptr %232, align 4, !dbg !3736
  %234 = icmp eq i32 %233, 5, !dbg !3736
  br i1 %234, label %assert_end93, label %assert_fail90, !dbg !3736, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %235 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %235(ptr nonnull @.str.1152), !dbg !3736
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %236 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !3736
  %237 = load i16, ptr %236, align 2, !dbg !3736
  %238 = icmp eq i16 %237, 1, !dbg !3736
  %239 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !3736
  %240 = load i8, ptr %239, align 1, !dbg !3736
  %241 = icmp eq i8 %240, 8, !dbg !3736
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !3736
  %243 = load i8, ptr %242, align 1, !dbg !3736
  %244 = icmp eq i8 %243, 0, !dbg !3736
  %245 = and i1 %241, %244, !dbg !3736
  %246 = and i1 %238, %245, !dbg !3736
  br i1 %246, label %assert_end95, label %assert_fail94, !dbg !3736, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %247 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %247(ptr nonnull @.str.1153), !dbg !3736
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %248 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.shape, align 8, !dbg !3736, !tbaa !3845
  %249 = and i64 %248, 4294967295, !dbg !3736
  %250 = icmp eq i64 %249, 1, !dbg !3736
  br i1 %250, label %assert_end97, label %assert_fail96, !dbg !3736, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %251(ptr nonnull @.str.1154), !dbg !3736
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.shape, i64 1, !dbg !3736
  %253 = load i64, ptr %252, align 8, !dbg !3736, !tbaa !3855
  %254 = and i64 %253, 4294967295, !dbg !3736
  %255 = icmp eq i64 %254, 16, !dbg !3736
  br i1 %255, label %assert_end99, label %assert_fail98, !dbg !3736, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %256(ptr nonnull @.str.1155), !dbg !3736
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.shape, i64 2, !dbg !3736
  %258 = load i64, ptr %257, align 8, !dbg !3736, !tbaa !3857
  %259 = and i64 %258, 4294967295, !dbg !3736
  %260 = icmp eq i64 %259, 56, !dbg !3736
  br i1 %260, label %assert_end101, label %assert_fail100, !dbg !3736, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %261(ptr nonnull @.str.1156), !dbg !3736
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.shape, i64 3, !dbg !3736
  %263 = load i64, ptr %262, align 8, !dbg !3736, !tbaa !3860
  %264 = and i64 %263, 4294967295, !dbg !3736
  %265 = icmp eq i64 %264, 56, !dbg !3736
  br i1 %265, label %assert_end103, label %assert_fail102, !dbg !3736, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %266(ptr nonnull @.str.1157), !dbg !3736
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.shape, i64 4, !dbg !3736
  %268 = load i64, ptr %267, align 8, !dbg !3736, !tbaa !3862
  %269 = and i64 %268, 4294967295, !dbg !3736
  %270 = icmp eq i64 %269, 4, !dbg !3736
  br i1 %270, label %assert_end105, label %assert_fail104, !dbg !3736, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %271 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %271(ptr nonnull @.str.1158), !dbg !3736
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.strides, null, !dbg !3736
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !3736, !prof !59

if_then106:                                       ; preds = %assert_end105
  %272 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.strides, i64 1, !dbg !3736
  %273 = load i64, ptr %272, align 8, !dbg !3736, !tbaa !3866
  %274 = and i64 %273, 4294967295, !dbg !3736
  %275 = icmp eq i64 %274, 12544, !dbg !3736
  %276 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.strides, i64 2, !dbg !3736
  %277 = load i64, ptr %276, align 8, !dbg !3736, !tbaa !3876
  %278 = and i64 %277, 4294967295, !dbg !3736
  %279 = icmp eq i64 %278, 224, !dbg !3736
  %280 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.strides, i64 3, !dbg !3736
  %281 = load i64, ptr %280, align 8, !dbg !3736, !tbaa !3879
  %282 = and i64 %281, 4294967295, !dbg !3736
  %283 = icmp eq i64 %282, 4, !dbg !3736
  %284 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1.T_cast.strides, i64 4, !dbg !3736
  %285 = load i64, ptr %284, align 8, !dbg !3736, !tbaa !3881
  %286 = and i64 %285, 4294967295, !dbg !3736
  %287 = icmp eq i64 %286, 1, !dbg !3736
  %288 = and i1 %283, %287, !dbg !3736
  %289 = and i1 %279, %288, !dbg !3736
  %290 = and i1 %275, %289, !dbg !3736
  br i1 %290, label %if_end107, label %assert_fail108, !dbg !3736, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %291 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !3736
  %292 = load i64, ptr %291, align 8, !dbg !3736
  %293 = icmp eq i64 %292, 0, !dbg !3736
  br i1 %293, label %assert_end111, label %assert_fail110, !dbg !3736, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %294(ptr nonnull @.str.1159), !dbg !3736
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %295 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %295(ptr nonnull @.str.1160), !dbg !3736
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %296 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !3736
  %297 = load i32, ptr %296, align 4, !dbg !3736
  %298 = icmp eq i32 %297, 1, !dbg !3736
  br i1 %298, label %assert_end113, label %assert_fail112, !dbg !3736, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %299(ptr nonnull @.str.1161), !dbg !3736
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %300 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !3736
  %301 = load i32, ptr %300, align 4, !dbg !3736
  %302 = icmp eq i32 %dev_id, %301, !dbg !3736
  br i1 %302, label %assert_end115, label %assert_fail114, !dbg !3736, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %303 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3736, !tbaa !19
  tail call void %303(ptr nonnull @.str.1162), !dbg !3736
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %304 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_compute_(i32 %dev_id, ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !3736
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3885 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3887, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3888, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3889, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3890, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3891, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3892, metadata !DIExpression()), !dbg !3893
  %0 = icmp eq i32 %num_args, 5, !dbg !3893
  br i1 %0, label %assert_end, label %assert_fail, !dbg !3893, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %294, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !3893

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %1(ptr nonnull @.str.1165), !dbg !3893
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3893, !tbaa !3894
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3893
  %p1.code = load i32, ptr %2, align 4, !dbg !3893, !tbaa !3905
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3893
  %p2.code = load i32, ptr %3, align 4, !dbg !3893, !tbaa !3907
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3893
  %p3.code = load i32, ptr %4, align 4, !dbg !3893, !tbaa !3910
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !3893
  %T_cast.code = load i32, ptr %5, align 4, !dbg !3893, !tbaa !3912
  %p0 = load ptr, ptr %args, align 8, !dbg !3893
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3893
  %p1 = load ptr, ptr %6, align 8, !dbg !3893
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3893
  %p2 = load ptr, ptr %7, align 8, !dbg !3893
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3893
  %p3 = load ptr, ptr %8, align 8, !dbg !3893
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !3893
  %T_cast = load ptr, ptr %9, align 8, !dbg !3893
  %p0116 = load ptr, ptr %p0, align 8, !dbg !3893
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !3893
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3893
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.shape = load ptr, ptr %10, align 8, !dbg !3893
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3893
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.strides = load ptr, ptr %11, align 8, !dbg !3893
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3893
  %dev_id = load i32, ptr %12, align 4, !dbg !3893
  %p1117 = load ptr, ptr %p1, align 8, !dbg !3893
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !3893
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3893
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.shape = load ptr, ptr %13, align 8, !dbg !3893
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3893
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.strides = load ptr, ptr %14, align 8, !dbg !3893
  %p2119 = load ptr, ptr %p2, align 8, !dbg !3893
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !3893
  %p3120 = load ptr, ptr %p3, align 8, !dbg !3893
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !3893
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !3893
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !3893
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !3893
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.shape = load ptr, ptr %15, align 8, !dbg !3893
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !3893
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.strides = load ptr, ptr %16, align 8, !dbg !3893
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !3893

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %17(ptr nonnull @.str.1166), !dbg !3893
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !3893

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %18(ptr nonnull @.str.1167), !dbg !3893
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !3893

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %19(ptr nonnull @.str.1168), !dbg !3893
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !3893

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %20(ptr nonnull @.str.1169), !dbg !3893
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !3893

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %21(ptr nonnull @.str.1170), !dbg !3893
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3893
  %23 = load i32, ptr %22, align 4, !dbg !3893
  %24 = icmp eq i32 %23, 5, !dbg !3893
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !3893, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %25(ptr nonnull @.str.1171), !dbg !3893
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3893
  %27 = load i16, ptr %26, align 2, !dbg !3893
  %28 = icmp eq i16 %27, 1, !dbg !3893
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3893
  %30 = load i8, ptr %29, align 1, !dbg !3893
  %31 = icmp eq i8 %30, 8, !dbg !3893
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3893
  %33 = load i8, ptr %32, align 1, !dbg !3893
  %34 = icmp eq i8 %33, 0, !dbg !3893
  %35 = and i1 %31, %34, !dbg !3893
  %36 = and i1 %28, %35, !dbg !3893
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !3893, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %37(ptr nonnull @.str.1172), !dbg !3893
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.shape, align 8, !dbg !3893, !tbaa !3916
  %39 = and i64 %38, 4294967295, !dbg !3893
  %40 = icmp eq i64 %39, 1, !dbg !3893
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !3893, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %41(ptr nonnull @.str.1173), !dbg !3893
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.shape, i64 1, !dbg !3893
  %43 = load i64, ptr %42, align 8, !dbg !3893, !tbaa !3926
  %44 = and i64 %43, 4294967295, !dbg !3893
  %45 = icmp eq i64 %44, 128, !dbg !3893
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !3893, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %46(ptr nonnull @.str.1174), !dbg !3893
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.shape, i64 2, !dbg !3893
  %48 = load i64, ptr %47, align 8, !dbg !3893, !tbaa !3928
  %49 = and i64 %48, 4294967295, !dbg !3893
  %50 = icmp eq i64 %49, 28, !dbg !3893
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !3893, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %51(ptr nonnull @.str.1175), !dbg !3893
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.shape, i64 3, !dbg !3893
  %53 = load i64, ptr %52, align 8, !dbg !3893, !tbaa !3931
  %54 = and i64 %53, 4294967295, !dbg !3893
  %55 = icmp eq i64 %54, 28, !dbg !3893
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !3893, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %56(ptr nonnull @.str.1176), !dbg !3893
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.shape, i64 4, !dbg !3893
  %58 = load i64, ptr %57, align 8, !dbg !3893, !tbaa !3933
  %59 = and i64 %58, 4294967295, !dbg !3893
  %60 = icmp eq i64 %59, 4, !dbg !3893
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !3893, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %61(ptr nonnull @.str.1177), !dbg !3893
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.strides, null, !dbg !3893
  br i1 %.not, label %if_end, label %if_then, !dbg !3893, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.strides, i64 1, !dbg !3893
  %63 = load i64, ptr %62, align 8, !dbg !3893, !tbaa !3937
  %64 = and i64 %63, 4294967295, !dbg !3893
  %65 = icmp eq i64 %64, 3136, !dbg !3893
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.strides, i64 2, !dbg !3893
  %67 = load i64, ptr %66, align 8, !dbg !3893, !tbaa !3947
  %68 = and i64 %67, 4294967295, !dbg !3893
  %69 = icmp eq i64 %68, 112, !dbg !3893
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.strides, i64 3, !dbg !3893
  %71 = load i64, ptr %70, align 8, !dbg !3893, !tbaa !3950
  %72 = and i64 %71, 4294967295, !dbg !3893
  %73 = icmp eq i64 %72, 4, !dbg !3893
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p0.strides, i64 4, !dbg !3893
  %75 = load i64, ptr %74, align 8, !dbg !3893, !tbaa !3952
  %76 = and i64 %75, 4294967295, !dbg !3893
  %77 = icmp eq i64 %76, 1, !dbg !3893
  %78 = and i1 %73, %77, !dbg !3893
  %79 = and i1 %69, %78, !dbg !3893
  %80 = and i1 %65, %79, !dbg !3893
  br i1 %80, label %if_end, label %assert_fail32, !dbg !3893, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3893
  %82 = load i64, ptr %81, align 8, !dbg !3893
  %83 = icmp eq i64 %82, 0, !dbg !3893
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !3893, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %84(ptr nonnull @.str.1178), !dbg !3893
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %85(ptr nonnull @.str.1179), !dbg !3893
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3893
  %87 = load i32, ptr %86, align 4, !dbg !3893
  %88 = icmp eq i32 %87, 1, !dbg !3893
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !3893, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %89(ptr nonnull @.str.1180), !dbg !3893
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3893
  %91 = load i32, ptr %90, align 4, !dbg !3893
  %92 = icmp eq i32 %91, 6, !dbg !3893
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !3893, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %93(ptr nonnull @.str.1181), !dbg !3893
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3893
  %95 = load i16, ptr %94, align 2, !dbg !3893
  %96 = icmp eq i16 %95, 1, !dbg !3893
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3893
  %98 = load i8, ptr %97, align 1, !dbg !3893
  %99 = icmp eq i8 %98, 8, !dbg !3893
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3893
  %101 = load i8, ptr %100, align 1, !dbg !3893
  %102 = icmp eq i8 %101, 0, !dbg !3893
  %103 = and i1 %99, %102, !dbg !3893
  %104 = and i1 %96, %103, !dbg !3893
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !3893, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %105(ptr nonnull @.str.1182), !dbg !3893
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.shape, align 8, !dbg !3893, !tbaa !3956
  %107 = and i64 %106, 4294967295, !dbg !3893
  %108 = icmp eq i64 %107, 64, !dbg !3893
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !3893, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %109(ptr nonnull @.str.1183), !dbg !3893
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.shape, i64 1, !dbg !3893
  %111 = load i64, ptr %110, align 8, !dbg !3893, !tbaa !3966
  %112 = and i64 %111, 4294967295, !dbg !3893
  %113 = icmp eq i64 %112, 128, !dbg !3893
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !3893, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %114(ptr nonnull @.str.1184), !dbg !3893
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.shape, i64 2, !dbg !3893
  %116 = load i64, ptr %115, align 8, !dbg !3893, !tbaa !3968
  %117 = and i64 %116, 4294967295, !dbg !3893
  %118 = icmp eq i64 %117, 1, !dbg !3893
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !3893, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %119(ptr nonnull @.str.1185), !dbg !3893
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.shape, i64 3, !dbg !3893
  %121 = load i64, ptr %120, align 8, !dbg !3893, !tbaa !3971
  %122 = and i64 %121, 4294967295, !dbg !3893
  %123 = icmp eq i64 %122, 1, !dbg !3893
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !3893, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %124(ptr nonnull @.str.1186), !dbg !3893
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.shape, i64 4, !dbg !3893
  %126 = load i64, ptr %125, align 8, !dbg !3893, !tbaa !3973
  %127 = and i64 %126, 4294967295, !dbg !3893
  %128 = icmp eq i64 %127, 4, !dbg !3893
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !3893, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %129(ptr nonnull @.str.1187), !dbg !3893
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.shape, i64 5, !dbg !3893
  %131 = load i64, ptr %130, align 8, !dbg !3893, !tbaa !3977
  %132 = and i64 %131, 4294967295, !dbg !3893
  %133 = icmp eq i64 %132, 4, !dbg !3893
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !3893, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %134(ptr nonnull @.str.1188), !dbg !3893
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.strides, null, !dbg !3893
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !3893, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.strides, align 8, !dbg !3893, !tbaa !3979
  %136 = and i64 %135, 4294967295, !dbg !3893
  %137 = icmp eq i64 %136, 2048, !dbg !3893
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.strides, i64 1, !dbg !3893
  %139 = load i64, ptr %138, align 8, !dbg !3893, !tbaa !3989
  %140 = and i64 %139, 4294967295, !dbg !3893
  %141 = icmp eq i64 %140, 16, !dbg !3893
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.strides, i64 4, !dbg !3893
  %143 = load i64, ptr %142, align 8, !dbg !3893, !tbaa !3991
  %144 = and i64 %143, 4294967295, !dbg !3893
  %145 = icmp eq i64 %144, 4, !dbg !3893
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.p1.strides, i64 5, !dbg !3893
  %147 = load i64, ptr %146, align 8, !dbg !3893, !tbaa !3995
  %148 = and i64 %147, 4294967295, !dbg !3893
  %149 = icmp eq i64 %148, 1, !dbg !3893
  %150 = and i1 %145, %149, !dbg !3893
  %151 = and i1 %141, %150, !dbg !3893
  %152 = and i1 %137, %151, !dbg !3893
  br i1 %152, label %if_end57, label %assert_fail58, !dbg !3893, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3893
  %154 = load i64, ptr %153, align 8, !dbg !3893
  %155 = icmp eq i64 %154, 0, !dbg !3893
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !3893, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %156(ptr nonnull @.str.1189), !dbg !3893
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %157(ptr nonnull @.str.1190), !dbg !3893
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %158 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3893
  %159 = load i32, ptr %158, align 4, !dbg !3893
  %160 = icmp eq i32 %159, 1, !dbg !3893
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !3893, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %161(ptr nonnull @.str.1191), !dbg !3893
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3893
  %163 = load i32, ptr %162, align 4, !dbg !3893
  %164 = icmp eq i32 %dev_id, %163, !dbg !3893
  br i1 %164, label %assert_end65, label %assert_fail64, !dbg !3893, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %165(ptr nonnull @.str.1192), !dbg !3893
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %166 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3893
  %167 = load i32, ptr %166, align 4, !dbg !3893
  %168 = icmp eq i32 %167, 0, !dbg !3893
  br i1 %168, label %assert_end69, label %assert_fail66, !dbg !3893, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %169(ptr nonnull @.str.1193), !dbg !3893
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3893
  %171 = load i16, ptr %170, align 2, !dbg !3893
  %172 = icmp eq i16 %171, 1, !dbg !3893
  %173 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3893
  %174 = load i8, ptr %173, align 1, !dbg !3893
  %175 = icmp eq i8 %174, 16, !dbg !3893
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3893
  %177 = load i8, ptr %176, align 1, !dbg !3893
  %178 = icmp eq i8 %177, 0, !dbg !3893
  %179 = and i1 %175, %178, !dbg !3893
  %180 = and i1 %172, %179, !dbg !3893
  br i1 %180, label %assert_end71, label %assert_fail70, !dbg !3893, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %181(ptr nonnull @.str.1194), !dbg !3893
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3893
  %183 = load i64, ptr %182, align 8, !dbg !3893
  %184 = icmp eq i64 %183, 0, !dbg !3893
  br i1 %184, label %assert_end73, label %assert_fail72, !dbg !3893, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %185(ptr nonnull @.str.1195), !dbg !3893
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3893
  %187 = load i32, ptr %186, align 4, !dbg !3893
  %188 = icmp eq i32 %187, 1, !dbg !3893
  br i1 %188, label %assert_end75, label %assert_fail74, !dbg !3893, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %189(ptr nonnull @.str.1196), !dbg !3893
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3893
  %191 = load i32, ptr %190, align 4, !dbg !3893
  %192 = icmp eq i32 %dev_id, %191, !dbg !3893
  br i1 %192, label %assert_end77, label %assert_fail76, !dbg !3893, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %193(ptr nonnull @.str.1197), !dbg !3893
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %194 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !3893
  %195 = load i32, ptr %194, align 4, !dbg !3893
  %196 = icmp eq i32 %195, 0, !dbg !3893
  br i1 %196, label %assert_end81, label %assert_fail78, !dbg !3893, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %197(ptr nonnull @.str.1198), !dbg !3893
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %198 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !3893
  %199 = load i16, ptr %198, align 2, !dbg !3893
  %200 = icmp eq i16 %199, 1, !dbg !3893
  %201 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !3893
  %202 = load i8, ptr %201, align 1, !dbg !3893
  %203 = icmp eq i8 %202, 16, !dbg !3893
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !3893
  %205 = load i8, ptr %204, align 1, !dbg !3893
  %206 = icmp eq i8 %205, 0, !dbg !3893
  %207 = and i1 %203, %206, !dbg !3893
  %208 = and i1 %200, %207, !dbg !3893
  br i1 %208, label %assert_end83, label %assert_fail82, !dbg !3893, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %209(ptr nonnull @.str.1199), !dbg !3893
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %210 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !3893
  %211 = load i64, ptr %210, align 8, !dbg !3893
  %212 = icmp eq i64 %211, 0, !dbg !3893
  br i1 %212, label %assert_end85, label %assert_fail84, !dbg !3893, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %213(ptr nonnull @.str.1200), !dbg !3893
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !3893
  %215 = load i32, ptr %214, align 4, !dbg !3893
  %216 = icmp eq i32 %215, 1, !dbg !3893
  br i1 %216, label %assert_end87, label %assert_fail86, !dbg !3893, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %217(ptr nonnull @.str.1201), !dbg !3893
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %218 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !3893
  %219 = load i32, ptr %218, align 4, !dbg !3893
  %220 = icmp eq i32 %dev_id, %219, !dbg !3893
  br i1 %220, label %assert_end89, label %assert_fail88, !dbg !3893, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %221 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %221(ptr nonnull @.str.1202), !dbg !3893
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %222 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !3893
  %223 = load i32, ptr %222, align 4, !dbg !3893
  %224 = icmp eq i32 %223, 5, !dbg !3893
  br i1 %224, label %assert_end93, label %assert_fail90, !dbg !3893, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %225 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %225(ptr nonnull @.str.1203), !dbg !3893
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %226 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !3893
  %227 = load i16, ptr %226, align 2, !dbg !3893
  %228 = icmp eq i16 %227, 1, !dbg !3893
  %229 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !3893
  %230 = load i8, ptr %229, align 1, !dbg !3893
  %231 = icmp eq i8 %230, 8, !dbg !3893
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !3893
  %233 = load i8, ptr %232, align 1, !dbg !3893
  %234 = icmp eq i8 %233, 0, !dbg !3893
  %235 = and i1 %231, %234, !dbg !3893
  %236 = and i1 %228, %235, !dbg !3893
  br i1 %236, label %assert_end95, label %assert_fail94, !dbg !3893, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %237(ptr nonnull @.str.1204), !dbg !3893
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %238 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.shape, align 8, !dbg !3893, !tbaa !3997
  %239 = and i64 %238, 4294967295, !dbg !3893
  %240 = icmp eq i64 %239, 1, !dbg !3893
  br i1 %240, label %assert_end97, label %assert_fail96, !dbg !3893, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %241(ptr nonnull @.str.1205), !dbg !3893
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.shape, i64 1, !dbg !3893
  %243 = load i64, ptr %242, align 8, !dbg !3893, !tbaa !4007
  %244 = and i64 %243, 4294967295, !dbg !3893
  %245 = icmp eq i64 %244, 64, !dbg !3893
  br i1 %245, label %assert_end99, label %assert_fail98, !dbg !3893, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %246(ptr nonnull @.str.1206), !dbg !3893
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.shape, i64 2, !dbg !3893
  %248 = load i64, ptr %247, align 8, !dbg !3893, !tbaa !4009
  %249 = and i64 %248, 4294967295, !dbg !3893
  %250 = icmp eq i64 %249, 28, !dbg !3893
  br i1 %250, label %assert_end101, label %assert_fail100, !dbg !3893, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %251(ptr nonnull @.str.1207), !dbg !3893
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.shape, i64 3, !dbg !3893
  %253 = load i64, ptr %252, align 8, !dbg !3893, !tbaa !4012
  %254 = and i64 %253, 4294967295, !dbg !3893
  %255 = icmp eq i64 %254, 28, !dbg !3893
  br i1 %255, label %assert_end103, label %assert_fail102, !dbg !3893, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %256(ptr nonnull @.str.1208), !dbg !3893
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.shape, i64 4, !dbg !3893
  %258 = load i64, ptr %257, align 8, !dbg !3893, !tbaa !4014
  %259 = and i64 %258, 4294967295, !dbg !3893
  %260 = icmp eq i64 %259, 4, !dbg !3893
  br i1 %260, label %assert_end105, label %assert_fail104, !dbg !3893, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %261(ptr nonnull @.str.1209), !dbg !3893
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.strides, null, !dbg !3893
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !3893, !prof !59

if_then106:                                       ; preds = %assert_end105
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.strides, i64 1, !dbg !3893
  %263 = load i64, ptr %262, align 8, !dbg !3893, !tbaa !4018
  %264 = and i64 %263, 4294967295, !dbg !3893
  %265 = icmp eq i64 %264, 3136, !dbg !3893
  %266 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.strides, i64 2, !dbg !3893
  %267 = load i64, ptr %266, align 8, !dbg !3893, !tbaa !4028
  %268 = and i64 %267, 4294967295, !dbg !3893
  %269 = icmp eq i64 %268, 112, !dbg !3893
  %270 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.strides, i64 3, !dbg !3893
  %271 = load i64, ptr %270, align 8, !dbg !3893, !tbaa !4031
  %272 = and i64 %271, 4294967295, !dbg !3893
  %273 = icmp eq i64 %272, 4, !dbg !3893
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10.T_cast.strides, i64 4, !dbg !3893
  %275 = load i64, ptr %274, align 8, !dbg !3893, !tbaa !4033
  %276 = and i64 %275, 4294967295, !dbg !3893
  %277 = icmp eq i64 %276, 1, !dbg !3893
  %278 = and i1 %273, %277, !dbg !3893
  %279 = and i1 %269, %278, !dbg !3893
  %280 = and i1 %265, %279, !dbg !3893
  br i1 %280, label %if_end107, label %assert_fail108, !dbg !3893, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %281 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !3893
  %282 = load i64, ptr %281, align 8, !dbg !3893
  %283 = icmp eq i64 %282, 0, !dbg !3893
  br i1 %283, label %assert_end111, label %assert_fail110, !dbg !3893, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %284(ptr nonnull @.str.1210), !dbg !3893
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %285 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %285(ptr nonnull @.str.1211), !dbg !3893
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %286 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !3893
  %287 = load i32, ptr %286, align 4, !dbg !3893
  %288 = icmp eq i32 %287, 1, !dbg !3893
  br i1 %288, label %assert_end113, label %assert_fail112, !dbg !3893, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %289(ptr nonnull @.str.1212), !dbg !3893
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %290 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !3893
  %291 = load i32, ptr %290, align 4, !dbg !3893
  %292 = icmp eq i32 %dev_id, %291, !dbg !3893
  br i1 %292, label %assert_end115, label %assert_fail114, !dbg !3893, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %293 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3893, !tbaa !19
  tail call void %293(ptr nonnull @.str.1213), !dbg !3893
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %294 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_compute_(ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !3893
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4037 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4039, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4040, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4041, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4042, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4043, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4044, metadata !DIExpression()), !dbg !4045
  %0 = icmp eq i32 %num_args, 5, !dbg !4045
  br i1 %0, label %assert_end, label %assert_fail, !dbg !4045, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %304, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !4045

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %1(ptr nonnull @.str.1215), !dbg !4045
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4045, !tbaa !4046
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4045
  %p1.code = load i32, ptr %2, align 4, !dbg !4045, !tbaa !4057
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4045
  %p2.code = load i32, ptr %3, align 4, !dbg !4045, !tbaa !4059
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !4045
  %p3.code = load i32, ptr %4, align 4, !dbg !4045, !tbaa !4062
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !4045
  %T_cast.code = load i32, ptr %5, align 4, !dbg !4045, !tbaa !4064
  %p0 = load ptr, ptr %args, align 8, !dbg !4045
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4045
  %p1 = load ptr, ptr %6, align 8, !dbg !4045
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4045
  %p2 = load ptr, ptr %7, align 8, !dbg !4045
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !4045
  %p3 = load ptr, ptr %8, align 8, !dbg !4045
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !4045
  %T_cast = load ptr, ptr %9, align 8, !dbg !4045
  %p0116 = load ptr, ptr %p0, align 8, !dbg !4045
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !4045
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4045
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.shape = load ptr, ptr %10, align 8, !dbg !4045
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4045
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.strides = load ptr, ptr %11, align 8, !dbg !4045
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4045
  %dev_id = load i32, ptr %12, align 4, !dbg !4045
  %p1117 = load ptr, ptr %p1, align 8, !dbg !4045
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !4045
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4045
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.shape = load ptr, ptr %13, align 8, !dbg !4045
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4045
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.strides = load ptr, ptr %14, align 8, !dbg !4045
  %p2119 = load ptr, ptr %p2, align 8, !dbg !4045
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !4045
  %p3120 = load ptr, ptr %p3, align 8, !dbg !4045
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !4045
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !4045
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !4045
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !4045
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.shape = load ptr, ptr %15, align 8, !dbg !4045
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !4045
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.strides = load ptr, ptr %16, align 8, !dbg !4045
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !4045

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %17(ptr nonnull @.str.1216), !dbg !4045
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !4045

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %18(ptr nonnull @.str.1217), !dbg !4045
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !4045

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %19(ptr nonnull @.str.1218), !dbg !4045
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !4045

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %20(ptr nonnull @.str.1219), !dbg !4045
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !4045

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %21(ptr nonnull @.str.1220), !dbg !4045
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4045
  %23 = load i32, ptr %22, align 4, !dbg !4045
  %24 = icmp eq i32 %23, 5, !dbg !4045
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !4045, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %25(ptr nonnull @.str.1221), !dbg !4045
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4045
  %27 = load i16, ptr %26, align 2, !dbg !4045
  %28 = icmp eq i16 %27, 1, !dbg !4045
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4045
  %30 = load i8, ptr %29, align 1, !dbg !4045
  %31 = icmp eq i8 %30, 8, !dbg !4045
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4045
  %33 = load i8, ptr %32, align 1, !dbg !4045
  %34 = icmp eq i8 %33, 0, !dbg !4045
  %35 = and i1 %31, %34, !dbg !4045
  %36 = and i1 %28, %35, !dbg !4045
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !4045, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %37(ptr nonnull @.str.1222), !dbg !4045
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.shape, align 8, !dbg !4045, !tbaa !4068
  %39 = and i64 %38, 4294967295, !dbg !4045
  %40 = icmp eq i64 %39, 1, !dbg !4045
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !4045, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %41(ptr nonnull @.str.1223), !dbg !4045
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.shape, i64 1, !dbg !4045
  %43 = load i64, ptr %42, align 8, !dbg !4045, !tbaa !4078
  %44 = and i64 %43, 4294967295, !dbg !4045
  %45 = icmp eq i64 %44, 64, !dbg !4045
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !4045, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %46(ptr nonnull @.str.1224), !dbg !4045
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.shape, i64 2, !dbg !4045
  %48 = load i64, ptr %47, align 8, !dbg !4045, !tbaa !4080
  %49 = and i64 %48, 4294967295, !dbg !4045
  %50 = icmp eq i64 %49, 28, !dbg !4045
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !4045, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %51(ptr nonnull @.str.1225), !dbg !4045
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.shape, i64 3, !dbg !4045
  %53 = load i64, ptr %52, align 8, !dbg !4045, !tbaa !4083
  %54 = and i64 %53, 4294967295, !dbg !4045
  %55 = icmp eq i64 %54, 28, !dbg !4045
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !4045, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %56(ptr nonnull @.str.1226), !dbg !4045
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.shape, i64 4, !dbg !4045
  %58 = load i64, ptr %57, align 8, !dbg !4045, !tbaa !4085
  %59 = and i64 %58, 4294967295, !dbg !4045
  %60 = icmp eq i64 %59, 4, !dbg !4045
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !4045, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %61(ptr nonnull @.str.1227), !dbg !4045
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.strides, null, !dbg !4045
  br i1 %.not, label %if_end, label %if_then, !dbg !4045, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.strides, i64 1, !dbg !4045
  %63 = load i64, ptr %62, align 8, !dbg !4045, !tbaa !4089
  %64 = and i64 %63, 4294967295, !dbg !4045
  %65 = icmp eq i64 %64, 3136, !dbg !4045
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.strides, i64 2, !dbg !4045
  %67 = load i64, ptr %66, align 8, !dbg !4045, !tbaa !4099
  %68 = and i64 %67, 4294967295, !dbg !4045
  %69 = icmp eq i64 %68, 112, !dbg !4045
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.strides, i64 3, !dbg !4045
  %71 = load i64, ptr %70, align 8, !dbg !4045, !tbaa !4102
  %72 = and i64 %71, 4294967295, !dbg !4045
  %73 = icmp eq i64 %72, 4, !dbg !4045
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p0.strides, i64 4, !dbg !4045
  %75 = load i64, ptr %74, align 8, !dbg !4045, !tbaa !4104
  %76 = and i64 %75, 4294967295, !dbg !4045
  %77 = icmp eq i64 %76, 1, !dbg !4045
  %78 = and i1 %73, %77, !dbg !4045
  %79 = and i1 %69, %78, !dbg !4045
  %80 = and i1 %65, %79, !dbg !4045
  br i1 %80, label %if_end, label %assert_fail32, !dbg !4045, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4045
  %82 = load i64, ptr %81, align 8, !dbg !4045
  %83 = icmp eq i64 %82, 0, !dbg !4045
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !4045, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %84(ptr nonnull @.str.1228), !dbg !4045
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %85(ptr nonnull @.str.1229), !dbg !4045
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4045
  %87 = load i32, ptr %86, align 4, !dbg !4045
  %88 = icmp eq i32 %87, 1, !dbg !4045
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !4045, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %89(ptr nonnull @.str.1230), !dbg !4045
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4045
  %91 = load i32, ptr %90, align 4, !dbg !4045
  %92 = icmp eq i32 %91, 6, !dbg !4045
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !4045, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %93(ptr nonnull @.str.1231), !dbg !4045
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4045
  %95 = load i16, ptr %94, align 2, !dbg !4045
  %96 = icmp eq i16 %95, 1, !dbg !4045
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4045
  %98 = load i8, ptr %97, align 1, !dbg !4045
  %99 = icmp eq i8 %98, 8, !dbg !4045
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4045
  %101 = load i8, ptr %100, align 1, !dbg !4045
  %102 = icmp eq i8 %101, 0, !dbg !4045
  %103 = and i1 %99, %102, !dbg !4045
  %104 = and i1 %96, %103, !dbg !4045
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !4045, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %105(ptr nonnull @.str.1232), !dbg !4045
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.shape, align 8, !dbg !4045, !tbaa !4108
  %107 = and i64 %106, 4294967295, !dbg !4045
  %108 = icmp eq i64 %107, 64, !dbg !4045
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !4045, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %109(ptr nonnull @.str.1233), !dbg !4045
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.shape, i64 1, !dbg !4045
  %111 = load i64, ptr %110, align 8, !dbg !4045, !tbaa !4118
  %112 = and i64 %111, 4294967295, !dbg !4045
  %113 = icmp eq i64 %112, 64, !dbg !4045
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !4045, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %114(ptr nonnull @.str.1234), !dbg !4045
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.shape, i64 2, !dbg !4045
  %116 = load i64, ptr %115, align 8, !dbg !4045, !tbaa !4120
  %117 = and i64 %116, 4294967295, !dbg !4045
  %118 = icmp eq i64 %117, 3, !dbg !4045
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !4045, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %119(ptr nonnull @.str.1235), !dbg !4045
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.shape, i64 3, !dbg !4045
  %121 = load i64, ptr %120, align 8, !dbg !4045, !tbaa !4123
  %122 = and i64 %121, 4294967295, !dbg !4045
  %123 = icmp eq i64 %122, 3, !dbg !4045
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !4045, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %124(ptr nonnull @.str.1236), !dbg !4045
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.shape, i64 4, !dbg !4045
  %126 = load i64, ptr %125, align 8, !dbg !4045, !tbaa !4125
  %127 = and i64 %126, 4294967295, !dbg !4045
  %128 = icmp eq i64 %127, 4, !dbg !4045
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !4045, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %129(ptr nonnull @.str.1237), !dbg !4045
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.shape, i64 5, !dbg !4045
  %131 = load i64, ptr %130, align 8, !dbg !4045, !tbaa !4129
  %132 = and i64 %131, 4294967295, !dbg !4045
  %133 = icmp eq i64 %132, 4, !dbg !4045
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !4045, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %134(ptr nonnull @.str.1238), !dbg !4045
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.strides, null, !dbg !4045
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !4045, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.strides, align 8, !dbg !4045, !tbaa !4131
  %136 = and i64 %135, 4294967295, !dbg !4045
  %137 = icmp eq i64 %136, 9216, !dbg !4045
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.strides, i64 1, !dbg !4045
  %139 = load i64, ptr %138, align 8, !dbg !4045, !tbaa !4141
  %140 = and i64 %139, 4294967295, !dbg !4045
  %141 = icmp eq i64 %140, 144, !dbg !4045
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.strides, i64 2, !dbg !4045
  %143 = load i64, ptr %142, align 8, !dbg !4045, !tbaa !4143
  %144 = and i64 %143, 4294967295, !dbg !4045
  %145 = icmp eq i64 %144, 48, !dbg !4045
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.strides, i64 3, !dbg !4045
  %147 = load i64, ptr %146, align 8, !dbg !4045, !tbaa !4146
  %148 = and i64 %147, 4294967295, !dbg !4045
  %149 = icmp eq i64 %148, 16, !dbg !4045
  %150 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.strides, i64 4, !dbg !4045
  %151 = load i64, ptr %150, align 8, !dbg !4045, !tbaa !4148
  %152 = and i64 %151, 4294967295, !dbg !4045
  %153 = icmp eq i64 %152, 4, !dbg !4045
  %154 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.p1.strides, i64 5, !dbg !4045
  %155 = load i64, ptr %154, align 8, !dbg !4045, !tbaa !4152
  %156 = and i64 %155, 4294967295, !dbg !4045
  %157 = icmp eq i64 %156, 1, !dbg !4045
  %158 = and i1 %153, %157, !dbg !4045
  %159 = and i1 %149, %158, !dbg !4045
  %160 = and i1 %145, %159, !dbg !4045
  %161 = and i1 %141, %160, !dbg !4045
  %162 = and i1 %137, %161, !dbg !4045
  br i1 %162, label %if_end57, label %assert_fail58, !dbg !4045, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %163 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4045
  %164 = load i64, ptr %163, align 8, !dbg !4045
  %165 = icmp eq i64 %164, 0, !dbg !4045
  br i1 %165, label %assert_end61, label %assert_fail60, !dbg !4045, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %166(ptr nonnull @.str.1239), !dbg !4045
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %167 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %167(ptr nonnull @.str.1240), !dbg !4045
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %168 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4045
  %169 = load i32, ptr %168, align 4, !dbg !4045
  %170 = icmp eq i32 %169, 1, !dbg !4045
  br i1 %170, label %assert_end63, label %assert_fail62, !dbg !4045, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %171 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %171(ptr nonnull @.str.1241), !dbg !4045
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %172 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4045
  %173 = load i32, ptr %172, align 4, !dbg !4045
  %174 = icmp eq i32 %dev_id, %173, !dbg !4045
  br i1 %174, label %assert_end65, label %assert_fail64, !dbg !4045, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %175(ptr nonnull @.str.1242), !dbg !4045
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !4045
  %177 = load i32, ptr %176, align 4, !dbg !4045
  %178 = icmp eq i32 %177, 0, !dbg !4045
  br i1 %178, label %assert_end69, label %assert_fail66, !dbg !4045, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %179(ptr nonnull @.str.1243), !dbg !4045
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !4045
  %181 = load i16, ptr %180, align 2, !dbg !4045
  %182 = icmp eq i16 %181, 1, !dbg !4045
  %183 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !4045
  %184 = load i8, ptr %183, align 1, !dbg !4045
  %185 = icmp eq i8 %184, 16, !dbg !4045
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !4045
  %187 = load i8, ptr %186, align 1, !dbg !4045
  %188 = icmp eq i8 %187, 0, !dbg !4045
  %189 = and i1 %185, %188, !dbg !4045
  %190 = and i1 %182, %189, !dbg !4045
  br i1 %190, label %assert_end71, label %assert_fail70, !dbg !4045, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %191(ptr nonnull @.str.1244), !dbg !4045
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %192 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !4045
  %193 = load i64, ptr %192, align 8, !dbg !4045
  %194 = icmp eq i64 %193, 0, !dbg !4045
  br i1 %194, label %assert_end73, label %assert_fail72, !dbg !4045, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %195 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %195(ptr nonnull @.str.1245), !dbg !4045
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %196 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !4045
  %197 = load i32, ptr %196, align 4, !dbg !4045
  %198 = icmp eq i32 %197, 1, !dbg !4045
  br i1 %198, label %assert_end75, label %assert_fail74, !dbg !4045, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %199(ptr nonnull @.str.1246), !dbg !4045
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %200 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !4045
  %201 = load i32, ptr %200, align 4, !dbg !4045
  %202 = icmp eq i32 %dev_id, %201, !dbg !4045
  br i1 %202, label %assert_end77, label %assert_fail76, !dbg !4045, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %203(ptr nonnull @.str.1247), !dbg !4045
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !4045
  %205 = load i32, ptr %204, align 4, !dbg !4045
  %206 = icmp eq i32 %205, 0, !dbg !4045
  br i1 %206, label %assert_end81, label %assert_fail78, !dbg !4045, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %207(ptr nonnull @.str.1248), !dbg !4045
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %208 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !4045
  %209 = load i16, ptr %208, align 2, !dbg !4045
  %210 = icmp eq i16 %209, 1, !dbg !4045
  %211 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !4045
  %212 = load i8, ptr %211, align 1, !dbg !4045
  %213 = icmp eq i8 %212, 16, !dbg !4045
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !4045
  %215 = load i8, ptr %214, align 1, !dbg !4045
  %216 = icmp eq i8 %215, 0, !dbg !4045
  %217 = and i1 %213, %216, !dbg !4045
  %218 = and i1 %210, %217, !dbg !4045
  br i1 %218, label %assert_end83, label %assert_fail82, !dbg !4045, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %219 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %219(ptr nonnull @.str.1249), !dbg !4045
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %220 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !4045
  %221 = load i64, ptr %220, align 8, !dbg !4045
  %222 = icmp eq i64 %221, 0, !dbg !4045
  br i1 %222, label %assert_end85, label %assert_fail84, !dbg !4045, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %223 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %223(ptr nonnull @.str.1250), !dbg !4045
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %224 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !4045
  %225 = load i32, ptr %224, align 4, !dbg !4045
  %226 = icmp eq i32 %225, 1, !dbg !4045
  br i1 %226, label %assert_end87, label %assert_fail86, !dbg !4045, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %227(ptr nonnull @.str.1251), !dbg !4045
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %228 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !4045
  %229 = load i32, ptr %228, align 4, !dbg !4045
  %230 = icmp eq i32 %dev_id, %229, !dbg !4045
  br i1 %230, label %assert_end89, label %assert_fail88, !dbg !4045, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %231 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %231(ptr nonnull @.str.1252), !dbg !4045
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !4045
  %233 = load i32, ptr %232, align 4, !dbg !4045
  %234 = icmp eq i32 %233, 5, !dbg !4045
  br i1 %234, label %assert_end93, label %assert_fail90, !dbg !4045, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %235 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %235(ptr nonnull @.str.1253), !dbg !4045
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %236 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !4045
  %237 = load i16, ptr %236, align 2, !dbg !4045
  %238 = icmp eq i16 %237, 1, !dbg !4045
  %239 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !4045
  %240 = load i8, ptr %239, align 1, !dbg !4045
  %241 = icmp eq i8 %240, 8, !dbg !4045
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !4045
  %243 = load i8, ptr %242, align 1, !dbg !4045
  %244 = icmp eq i8 %243, 0, !dbg !4045
  %245 = and i1 %241, %244, !dbg !4045
  %246 = and i1 %238, %245, !dbg !4045
  br i1 %246, label %assert_end95, label %assert_fail94, !dbg !4045, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %247 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %247(ptr nonnull @.str.1254), !dbg !4045
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %248 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.shape, align 8, !dbg !4045, !tbaa !4154
  %249 = and i64 %248, 4294967295, !dbg !4045
  %250 = icmp eq i64 %249, 1, !dbg !4045
  br i1 %250, label %assert_end97, label %assert_fail96, !dbg !4045, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %251(ptr nonnull @.str.1255), !dbg !4045
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.shape, i64 1, !dbg !4045
  %253 = load i64, ptr %252, align 8, !dbg !4045, !tbaa !4164
  %254 = and i64 %253, 4294967295, !dbg !4045
  %255 = icmp eq i64 %254, 64, !dbg !4045
  br i1 %255, label %assert_end99, label %assert_fail98, !dbg !4045, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %256(ptr nonnull @.str.1256), !dbg !4045
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.shape, i64 2, !dbg !4045
  %258 = load i64, ptr %257, align 8, !dbg !4045, !tbaa !4166
  %259 = and i64 %258, 4294967295, !dbg !4045
  %260 = icmp eq i64 %259, 14, !dbg !4045
  br i1 %260, label %assert_end101, label %assert_fail100, !dbg !4045, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %261(ptr nonnull @.str.1257), !dbg !4045
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.shape, i64 3, !dbg !4045
  %263 = load i64, ptr %262, align 8, !dbg !4045, !tbaa !4169
  %264 = and i64 %263, 4294967295, !dbg !4045
  %265 = icmp eq i64 %264, 14, !dbg !4045
  br i1 %265, label %assert_end103, label %assert_fail102, !dbg !4045, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %266(ptr nonnull @.str.1258), !dbg !4045
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.shape, i64 4, !dbg !4045
  %268 = load i64, ptr %267, align 8, !dbg !4045, !tbaa !4171
  %269 = and i64 %268, 4294967295, !dbg !4045
  %270 = icmp eq i64 %269, 4, !dbg !4045
  br i1 %270, label %assert_end105, label %assert_fail104, !dbg !4045, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %271 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %271(ptr nonnull @.str.1259), !dbg !4045
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.strides, null, !dbg !4045
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !4045, !prof !59

if_then106:                                       ; preds = %assert_end105
  %272 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.strides, i64 1, !dbg !4045
  %273 = load i64, ptr %272, align 8, !dbg !4045, !tbaa !4175
  %274 = and i64 %273, 4294967295, !dbg !4045
  %275 = icmp eq i64 %274, 784, !dbg !4045
  %276 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.strides, i64 2, !dbg !4045
  %277 = load i64, ptr %276, align 8, !dbg !4045, !tbaa !4185
  %278 = and i64 %277, 4294967295, !dbg !4045
  %279 = icmp eq i64 %278, 56, !dbg !4045
  %280 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.strides, i64 3, !dbg !4045
  %281 = load i64, ptr %280, align 8, !dbg !4045, !tbaa !4188
  %282 = and i64 %281, 4294967295, !dbg !4045
  %283 = icmp eq i64 %282, 4, !dbg !4045
  %284 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11.T_cast.strides, i64 4, !dbg !4045
  %285 = load i64, ptr %284, align 8, !dbg !4045, !tbaa !4190
  %286 = and i64 %285, 4294967295, !dbg !4045
  %287 = icmp eq i64 %286, 1, !dbg !4045
  %288 = and i1 %283, %287, !dbg !4045
  %289 = and i1 %279, %288, !dbg !4045
  %290 = and i1 %275, %289, !dbg !4045
  br i1 %290, label %if_end107, label %assert_fail108, !dbg !4045, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %291 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !4045
  %292 = load i64, ptr %291, align 8, !dbg !4045
  %293 = icmp eq i64 %292, 0, !dbg !4045
  br i1 %293, label %assert_end111, label %assert_fail110, !dbg !4045, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %294(ptr nonnull @.str.1260), !dbg !4045
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %295 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %295(ptr nonnull @.str.1261), !dbg !4045
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %296 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !4045
  %297 = load i32, ptr %296, align 4, !dbg !4045
  %298 = icmp eq i32 %297, 1, !dbg !4045
  br i1 %298, label %assert_end113, label %assert_fail112, !dbg !4045, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %299(ptr nonnull @.str.1262), !dbg !4045
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %300 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !4045
  %301 = load i32, ptr %300, align 4, !dbg !4045
  %302 = icmp eq i32 %dev_id, %301, !dbg !4045
  br i1 %302, label %assert_end115, label %assert_fail114, !dbg !4045, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %303 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4045, !tbaa !19
  tail call void %303(ptr nonnull @.str.1263), !dbg !4045
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %304 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_compute_(i32 %dev_id, ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !4045
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4194 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4196, metadata !DIExpression()), !dbg !4202
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4197, metadata !DIExpression()), !dbg !4202
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4198, metadata !DIExpression()), !dbg !4202
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4199, metadata !DIExpression()), !dbg !4202
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4200, metadata !DIExpression()), !dbg !4202
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4201, metadata !DIExpression()), !dbg !4202
  %0 = icmp eq i32 %num_args, 5, !dbg !4202
  br i1 %0, label %assert_end, label %assert_fail, !dbg !4202, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %294, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !4202

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %1(ptr nonnull @.str.1266), !dbg !4202
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4202, !tbaa !4203
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4202
  %p1.code = load i32, ptr %2, align 4, !dbg !4202, !tbaa !4214
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4202
  %p2.code = load i32, ptr %3, align 4, !dbg !4202, !tbaa !4216
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !4202
  %p3.code = load i32, ptr %4, align 4, !dbg !4202, !tbaa !4219
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !4202
  %T_cast.code = load i32, ptr %5, align 4, !dbg !4202, !tbaa !4221
  %p0 = load ptr, ptr %args, align 8, !dbg !4202
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4202
  %p1 = load ptr, ptr %6, align 8, !dbg !4202
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4202
  %p2 = load ptr, ptr %7, align 8, !dbg !4202
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !4202
  %p3 = load ptr, ptr %8, align 8, !dbg !4202
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !4202
  %T_cast = load ptr, ptr %9, align 8, !dbg !4202
  %p0116 = load ptr, ptr %p0, align 8, !dbg !4202
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !4202
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4202
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.shape = load ptr, ptr %10, align 8, !dbg !4202
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4202
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.strides = load ptr, ptr %11, align 8, !dbg !4202
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4202
  %dev_id = load i32, ptr %12, align 4, !dbg !4202
  %p1117 = load ptr, ptr %p1, align 8, !dbg !4202
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !4202
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4202
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.shape = load ptr, ptr %13, align 8, !dbg !4202
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4202
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.strides = load ptr, ptr %14, align 8, !dbg !4202
  %p2119 = load ptr, ptr %p2, align 8, !dbg !4202
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !4202
  %p3120 = load ptr, ptr %p3, align 8, !dbg !4202
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !4202
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !4202
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !4202
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !4202
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.shape = load ptr, ptr %15, align 8, !dbg !4202
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !4202
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.strides = load ptr, ptr %16, align 8, !dbg !4202
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !4202

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %17(ptr nonnull @.str.1267), !dbg !4202
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !4202

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %18(ptr nonnull @.str.1268), !dbg !4202
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !4202

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %19(ptr nonnull @.str.1269), !dbg !4202
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !4202

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %20(ptr nonnull @.str.1270), !dbg !4202
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !4202

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %21(ptr nonnull @.str.1271), !dbg !4202
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4202
  %23 = load i32, ptr %22, align 4, !dbg !4202
  %24 = icmp eq i32 %23, 5, !dbg !4202
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !4202, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %25(ptr nonnull @.str.1272), !dbg !4202
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4202
  %27 = load i16, ptr %26, align 2, !dbg !4202
  %28 = icmp eq i16 %27, 1, !dbg !4202
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4202
  %30 = load i8, ptr %29, align 1, !dbg !4202
  %31 = icmp eq i8 %30, 8, !dbg !4202
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4202
  %33 = load i8, ptr %32, align 1, !dbg !4202
  %34 = icmp eq i8 %33, 0, !dbg !4202
  %35 = and i1 %31, %34, !dbg !4202
  %36 = and i1 %28, %35, !dbg !4202
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !4202, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %37(ptr nonnull @.str.1273), !dbg !4202
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.shape, align 8, !dbg !4202, !tbaa !4225
  %39 = and i64 %38, 4294967295, !dbg !4202
  %40 = icmp eq i64 %39, 1, !dbg !4202
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !4202, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %41(ptr nonnull @.str.1274), !dbg !4202
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.shape, i64 1, !dbg !4202
  %43 = load i64, ptr %42, align 8, !dbg !4202, !tbaa !4235
  %44 = and i64 %43, 4294967295, !dbg !4202
  %45 = icmp eq i64 %44, 64, !dbg !4202
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !4202, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %46(ptr nonnull @.str.1275), !dbg !4202
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.shape, i64 2, !dbg !4202
  %48 = load i64, ptr %47, align 8, !dbg !4202, !tbaa !4237
  %49 = and i64 %48, 4294967295, !dbg !4202
  %50 = icmp eq i64 %49, 14, !dbg !4202
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !4202, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %51(ptr nonnull @.str.1276), !dbg !4202
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.shape, i64 3, !dbg !4202
  %53 = load i64, ptr %52, align 8, !dbg !4202, !tbaa !4240
  %54 = and i64 %53, 4294967295, !dbg !4202
  %55 = icmp eq i64 %54, 14, !dbg !4202
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !4202, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %56(ptr nonnull @.str.1277), !dbg !4202
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.shape, i64 4, !dbg !4202
  %58 = load i64, ptr %57, align 8, !dbg !4202, !tbaa !4242
  %59 = and i64 %58, 4294967295, !dbg !4202
  %60 = icmp eq i64 %59, 4, !dbg !4202
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !4202, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %61(ptr nonnull @.str.1278), !dbg !4202
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.strides, null, !dbg !4202
  br i1 %.not, label %if_end, label %if_then, !dbg !4202, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.strides, i64 1, !dbg !4202
  %63 = load i64, ptr %62, align 8, !dbg !4202, !tbaa !4246
  %64 = and i64 %63, 4294967295, !dbg !4202
  %65 = icmp eq i64 %64, 784, !dbg !4202
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.strides, i64 2, !dbg !4202
  %67 = load i64, ptr %66, align 8, !dbg !4202, !tbaa !4256
  %68 = and i64 %67, 4294967295, !dbg !4202
  %69 = icmp eq i64 %68, 56, !dbg !4202
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.strides, i64 3, !dbg !4202
  %71 = load i64, ptr %70, align 8, !dbg !4202, !tbaa !4259
  %72 = and i64 %71, 4294967295, !dbg !4202
  %73 = icmp eq i64 %72, 4, !dbg !4202
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p0.strides, i64 4, !dbg !4202
  %75 = load i64, ptr %74, align 8, !dbg !4202, !tbaa !4261
  %76 = and i64 %75, 4294967295, !dbg !4202
  %77 = icmp eq i64 %76, 1, !dbg !4202
  %78 = and i1 %73, %77, !dbg !4202
  %79 = and i1 %69, %78, !dbg !4202
  %80 = and i1 %65, %79, !dbg !4202
  br i1 %80, label %if_end, label %assert_fail32, !dbg !4202, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4202
  %82 = load i64, ptr %81, align 8, !dbg !4202
  %83 = icmp eq i64 %82, 0, !dbg !4202
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !4202, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %84(ptr nonnull @.str.1279), !dbg !4202
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %85(ptr nonnull @.str.1280), !dbg !4202
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4202
  %87 = load i32, ptr %86, align 4, !dbg !4202
  %88 = icmp eq i32 %87, 1, !dbg !4202
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !4202, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %89(ptr nonnull @.str.1281), !dbg !4202
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4202
  %91 = load i32, ptr %90, align 4, !dbg !4202
  %92 = icmp eq i32 %91, 6, !dbg !4202
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !4202, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %93(ptr nonnull @.str.1282), !dbg !4202
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4202
  %95 = load i16, ptr %94, align 2, !dbg !4202
  %96 = icmp eq i16 %95, 1, !dbg !4202
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4202
  %98 = load i8, ptr %97, align 1, !dbg !4202
  %99 = icmp eq i8 %98, 8, !dbg !4202
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4202
  %101 = load i8, ptr %100, align 1, !dbg !4202
  %102 = icmp eq i8 %101, 0, !dbg !4202
  %103 = and i1 %99, %102, !dbg !4202
  %104 = and i1 %96, %103, !dbg !4202
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !4202, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %105(ptr nonnull @.str.1283), !dbg !4202
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.shape, align 8, !dbg !4202, !tbaa !4265
  %107 = and i64 %106, 4294967295, !dbg !4202
  %108 = icmp eq i64 %107, 256, !dbg !4202
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !4202, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %109(ptr nonnull @.str.1284), !dbg !4202
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.shape, i64 1, !dbg !4202
  %111 = load i64, ptr %110, align 8, !dbg !4202, !tbaa !4275
  %112 = and i64 %111, 4294967295, !dbg !4202
  %113 = icmp eq i64 %112, 64, !dbg !4202
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !4202, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %114(ptr nonnull @.str.1285), !dbg !4202
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.shape, i64 2, !dbg !4202
  %116 = load i64, ptr %115, align 8, !dbg !4202, !tbaa !4277
  %117 = and i64 %116, 4294967295, !dbg !4202
  %118 = icmp eq i64 %117, 1, !dbg !4202
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !4202, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %119(ptr nonnull @.str.1286), !dbg !4202
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.shape, i64 3, !dbg !4202
  %121 = load i64, ptr %120, align 8, !dbg !4202, !tbaa !4280
  %122 = and i64 %121, 4294967295, !dbg !4202
  %123 = icmp eq i64 %122, 1, !dbg !4202
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !4202, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %124(ptr nonnull @.str.1287), !dbg !4202
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.shape, i64 4, !dbg !4202
  %126 = load i64, ptr %125, align 8, !dbg !4202, !tbaa !4282
  %127 = and i64 %126, 4294967295, !dbg !4202
  %128 = icmp eq i64 %127, 4, !dbg !4202
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !4202, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %129(ptr nonnull @.str.1288), !dbg !4202
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.shape, i64 5, !dbg !4202
  %131 = load i64, ptr %130, align 8, !dbg !4202, !tbaa !4286
  %132 = and i64 %131, 4294967295, !dbg !4202
  %133 = icmp eq i64 %132, 4, !dbg !4202
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !4202, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %134(ptr nonnull @.str.1289), !dbg !4202
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.strides, null, !dbg !4202
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !4202, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.strides, align 8, !dbg !4202, !tbaa !4288
  %136 = and i64 %135, 4294967295, !dbg !4202
  %137 = icmp eq i64 %136, 1024, !dbg !4202
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.strides, i64 1, !dbg !4202
  %139 = load i64, ptr %138, align 8, !dbg !4202, !tbaa !4298
  %140 = and i64 %139, 4294967295, !dbg !4202
  %141 = icmp eq i64 %140, 16, !dbg !4202
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.strides, i64 4, !dbg !4202
  %143 = load i64, ptr %142, align 8, !dbg !4202, !tbaa !4300
  %144 = and i64 %143, 4294967295, !dbg !4202
  %145 = icmp eq i64 %144, 4, !dbg !4202
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.p1.strides, i64 5, !dbg !4202
  %147 = load i64, ptr %146, align 8, !dbg !4202, !tbaa !4304
  %148 = and i64 %147, 4294967295, !dbg !4202
  %149 = icmp eq i64 %148, 1, !dbg !4202
  %150 = and i1 %145, %149, !dbg !4202
  %151 = and i1 %141, %150, !dbg !4202
  %152 = and i1 %137, %151, !dbg !4202
  br i1 %152, label %if_end57, label %assert_fail58, !dbg !4202, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4202
  %154 = load i64, ptr %153, align 8, !dbg !4202
  %155 = icmp eq i64 %154, 0, !dbg !4202
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !4202, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %156(ptr nonnull @.str.1290), !dbg !4202
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %157(ptr nonnull @.str.1291), !dbg !4202
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %158 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4202
  %159 = load i32, ptr %158, align 4, !dbg !4202
  %160 = icmp eq i32 %159, 1, !dbg !4202
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !4202, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %161(ptr nonnull @.str.1292), !dbg !4202
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4202
  %163 = load i32, ptr %162, align 4, !dbg !4202
  %164 = icmp eq i32 %dev_id, %163, !dbg !4202
  br i1 %164, label %assert_end65, label %assert_fail64, !dbg !4202, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %165(ptr nonnull @.str.1293), !dbg !4202
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %166 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !4202
  %167 = load i32, ptr %166, align 4, !dbg !4202
  %168 = icmp eq i32 %167, 0, !dbg !4202
  br i1 %168, label %assert_end69, label %assert_fail66, !dbg !4202, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %169(ptr nonnull @.str.1294), !dbg !4202
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !4202
  %171 = load i16, ptr %170, align 2, !dbg !4202
  %172 = icmp eq i16 %171, 1, !dbg !4202
  %173 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !4202
  %174 = load i8, ptr %173, align 1, !dbg !4202
  %175 = icmp eq i8 %174, 16, !dbg !4202
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !4202
  %177 = load i8, ptr %176, align 1, !dbg !4202
  %178 = icmp eq i8 %177, 0, !dbg !4202
  %179 = and i1 %175, %178, !dbg !4202
  %180 = and i1 %172, %179, !dbg !4202
  br i1 %180, label %assert_end71, label %assert_fail70, !dbg !4202, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %181(ptr nonnull @.str.1295), !dbg !4202
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !4202
  %183 = load i64, ptr %182, align 8, !dbg !4202
  %184 = icmp eq i64 %183, 0, !dbg !4202
  br i1 %184, label %assert_end73, label %assert_fail72, !dbg !4202, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %185(ptr nonnull @.str.1296), !dbg !4202
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !4202
  %187 = load i32, ptr %186, align 4, !dbg !4202
  %188 = icmp eq i32 %187, 1, !dbg !4202
  br i1 %188, label %assert_end75, label %assert_fail74, !dbg !4202, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %189(ptr nonnull @.str.1297), !dbg !4202
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !4202
  %191 = load i32, ptr %190, align 4, !dbg !4202
  %192 = icmp eq i32 %dev_id, %191, !dbg !4202
  br i1 %192, label %assert_end77, label %assert_fail76, !dbg !4202, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %193(ptr nonnull @.str.1298), !dbg !4202
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %194 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !4202
  %195 = load i32, ptr %194, align 4, !dbg !4202
  %196 = icmp eq i32 %195, 0, !dbg !4202
  br i1 %196, label %assert_end81, label %assert_fail78, !dbg !4202, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %197(ptr nonnull @.str.1299), !dbg !4202
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %198 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !4202
  %199 = load i16, ptr %198, align 2, !dbg !4202
  %200 = icmp eq i16 %199, 1, !dbg !4202
  %201 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !4202
  %202 = load i8, ptr %201, align 1, !dbg !4202
  %203 = icmp eq i8 %202, 16, !dbg !4202
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !4202
  %205 = load i8, ptr %204, align 1, !dbg !4202
  %206 = icmp eq i8 %205, 0, !dbg !4202
  %207 = and i1 %203, %206, !dbg !4202
  %208 = and i1 %200, %207, !dbg !4202
  br i1 %208, label %assert_end83, label %assert_fail82, !dbg !4202, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %209(ptr nonnull @.str.1300), !dbg !4202
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %210 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !4202
  %211 = load i64, ptr %210, align 8, !dbg !4202
  %212 = icmp eq i64 %211, 0, !dbg !4202
  br i1 %212, label %assert_end85, label %assert_fail84, !dbg !4202, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %213(ptr nonnull @.str.1301), !dbg !4202
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !4202
  %215 = load i32, ptr %214, align 4, !dbg !4202
  %216 = icmp eq i32 %215, 1, !dbg !4202
  br i1 %216, label %assert_end87, label %assert_fail86, !dbg !4202, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %217(ptr nonnull @.str.1302), !dbg !4202
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %218 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !4202
  %219 = load i32, ptr %218, align 4, !dbg !4202
  %220 = icmp eq i32 %dev_id, %219, !dbg !4202
  br i1 %220, label %assert_end89, label %assert_fail88, !dbg !4202, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %221 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %221(ptr nonnull @.str.1303), !dbg !4202
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %222 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !4202
  %223 = load i32, ptr %222, align 4, !dbg !4202
  %224 = icmp eq i32 %223, 5, !dbg !4202
  br i1 %224, label %assert_end93, label %assert_fail90, !dbg !4202, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %225 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %225(ptr nonnull @.str.1304), !dbg !4202
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %226 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !4202
  %227 = load i16, ptr %226, align 2, !dbg !4202
  %228 = icmp eq i16 %227, 1, !dbg !4202
  %229 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !4202
  %230 = load i8, ptr %229, align 1, !dbg !4202
  %231 = icmp eq i8 %230, 8, !dbg !4202
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !4202
  %233 = load i8, ptr %232, align 1, !dbg !4202
  %234 = icmp eq i8 %233, 0, !dbg !4202
  %235 = and i1 %231, %234, !dbg !4202
  %236 = and i1 %228, %235, !dbg !4202
  br i1 %236, label %assert_end95, label %assert_fail94, !dbg !4202, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %237(ptr nonnull @.str.1305), !dbg !4202
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %238 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.shape, align 8, !dbg !4202, !tbaa !4306
  %239 = and i64 %238, 4294967295, !dbg !4202
  %240 = icmp eq i64 %239, 1, !dbg !4202
  br i1 %240, label %assert_end97, label %assert_fail96, !dbg !4202, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %241(ptr nonnull @.str.1306), !dbg !4202
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.shape, i64 1, !dbg !4202
  %243 = load i64, ptr %242, align 8, !dbg !4202, !tbaa !4316
  %244 = and i64 %243, 4294967295, !dbg !4202
  %245 = icmp eq i64 %244, 256, !dbg !4202
  br i1 %245, label %assert_end99, label %assert_fail98, !dbg !4202, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %246(ptr nonnull @.str.1307), !dbg !4202
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.shape, i64 2, !dbg !4202
  %248 = load i64, ptr %247, align 8, !dbg !4202, !tbaa !4318
  %249 = and i64 %248, 4294967295, !dbg !4202
  %250 = icmp eq i64 %249, 14, !dbg !4202
  br i1 %250, label %assert_end101, label %assert_fail100, !dbg !4202, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %251(ptr nonnull @.str.1308), !dbg !4202
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.shape, i64 3, !dbg !4202
  %253 = load i64, ptr %252, align 8, !dbg !4202, !tbaa !4321
  %254 = and i64 %253, 4294967295, !dbg !4202
  %255 = icmp eq i64 %254, 14, !dbg !4202
  br i1 %255, label %assert_end103, label %assert_fail102, !dbg !4202, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %256(ptr nonnull @.str.1309), !dbg !4202
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.shape, i64 4, !dbg !4202
  %258 = load i64, ptr %257, align 8, !dbg !4202, !tbaa !4323
  %259 = and i64 %258, 4294967295, !dbg !4202
  %260 = icmp eq i64 %259, 4, !dbg !4202
  br i1 %260, label %assert_end105, label %assert_fail104, !dbg !4202, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %261(ptr nonnull @.str.1310), !dbg !4202
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.strides, null, !dbg !4202
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !4202, !prof !59

if_then106:                                       ; preds = %assert_end105
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.strides, i64 1, !dbg !4202
  %263 = load i64, ptr %262, align 8, !dbg !4202, !tbaa !4327
  %264 = and i64 %263, 4294967295, !dbg !4202
  %265 = icmp eq i64 %264, 784, !dbg !4202
  %266 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.strides, i64 2, !dbg !4202
  %267 = load i64, ptr %266, align 8, !dbg !4202, !tbaa !4337
  %268 = and i64 %267, 4294967295, !dbg !4202
  %269 = icmp eq i64 %268, 56, !dbg !4202
  %270 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.strides, i64 3, !dbg !4202
  %271 = load i64, ptr %270, align 8, !dbg !4202, !tbaa !4340
  %272 = and i64 %271, 4294967295, !dbg !4202
  %273 = icmp eq i64 %272, 4, !dbg !4202
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12.T_cast.strides, i64 4, !dbg !4202
  %275 = load i64, ptr %274, align 8, !dbg !4202, !tbaa !4342
  %276 = and i64 %275, 4294967295, !dbg !4202
  %277 = icmp eq i64 %276, 1, !dbg !4202
  %278 = and i1 %273, %277, !dbg !4202
  %279 = and i1 %269, %278, !dbg !4202
  %280 = and i1 %265, %279, !dbg !4202
  br i1 %280, label %if_end107, label %assert_fail108, !dbg !4202, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %281 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !4202
  %282 = load i64, ptr %281, align 8, !dbg !4202
  %283 = icmp eq i64 %282, 0, !dbg !4202
  br i1 %283, label %assert_end111, label %assert_fail110, !dbg !4202, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %284(ptr nonnull @.str.1311), !dbg !4202
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %285 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %285(ptr nonnull @.str.1312), !dbg !4202
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %286 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !4202
  %287 = load i32, ptr %286, align 4, !dbg !4202
  %288 = icmp eq i32 %287, 1, !dbg !4202
  br i1 %288, label %assert_end113, label %assert_fail112, !dbg !4202, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %289(ptr nonnull @.str.1313), !dbg !4202
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %290 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !4202
  %291 = load i32, ptr %290, align 4, !dbg !4202
  %292 = icmp eq i32 %dev_id, %291, !dbg !4202
  br i1 %292, label %assert_end115, label %assert_fail114, !dbg !4202, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %293 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4202, !tbaa !19
  tail call void %293(ptr nonnull @.str.1314), !dbg !4202
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %294 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_compute_(ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !4202
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4346 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4348, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4349, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4350, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4351, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4352, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4353, metadata !DIExpression()), !dbg !4354
  %0 = icmp eq i32 %num_args, 5, !dbg !4354
  br i1 %0, label %assert_end, label %assert_fail, !dbg !4354, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %294, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !4354

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %1(ptr nonnull @.str.1316), !dbg !4354
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4354, !tbaa !4355
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4354
  %p1.code = load i32, ptr %2, align 4, !dbg !4354, !tbaa !4366
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4354
  %p2.code = load i32, ptr %3, align 4, !dbg !4354, !tbaa !4368
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !4354
  %p3.code = load i32, ptr %4, align 4, !dbg !4354, !tbaa !4371
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !4354
  %T_cast.code = load i32, ptr %5, align 4, !dbg !4354, !tbaa !4373
  %p0 = load ptr, ptr %args, align 8, !dbg !4354
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4354
  %p1 = load ptr, ptr %6, align 8, !dbg !4354
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4354
  %p2 = load ptr, ptr %7, align 8, !dbg !4354
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !4354
  %p3 = load ptr, ptr %8, align 8, !dbg !4354
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !4354
  %T_cast = load ptr, ptr %9, align 8, !dbg !4354
  %p0116 = load ptr, ptr %p0, align 8, !dbg !4354
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !4354
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4354
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.shape = load ptr, ptr %10, align 8, !dbg !4354
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4354
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.strides = load ptr, ptr %11, align 8, !dbg !4354
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4354
  %dev_id = load i32, ptr %12, align 4, !dbg !4354
  %p1117 = load ptr, ptr %p1, align 8, !dbg !4354
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !4354
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4354
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.shape = load ptr, ptr %13, align 8, !dbg !4354
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4354
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.strides = load ptr, ptr %14, align 8, !dbg !4354
  %p2119 = load ptr, ptr %p2, align 8, !dbg !4354
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !4354
  %p3120 = load ptr, ptr %p3, align 8, !dbg !4354
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !4354
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !4354
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !4354
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !4354
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.shape = load ptr, ptr %15, align 8, !dbg !4354
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !4354
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.strides = load ptr, ptr %16, align 8, !dbg !4354
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !4354

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %17(ptr nonnull @.str.1317), !dbg !4354
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !4354

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %18(ptr nonnull @.str.1318), !dbg !4354
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !4354

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %19(ptr nonnull @.str.1319), !dbg !4354
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !4354

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %20(ptr nonnull @.str.1320), !dbg !4354
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !4354

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %21(ptr nonnull @.str.1321), !dbg !4354
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4354
  %23 = load i32, ptr %22, align 4, !dbg !4354
  %24 = icmp eq i32 %23, 5, !dbg !4354
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !4354, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %25(ptr nonnull @.str.1322), !dbg !4354
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4354
  %27 = load i16, ptr %26, align 2, !dbg !4354
  %28 = icmp eq i16 %27, 1, !dbg !4354
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4354
  %30 = load i8, ptr %29, align 1, !dbg !4354
  %31 = icmp eq i8 %30, 8, !dbg !4354
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4354
  %33 = load i8, ptr %32, align 1, !dbg !4354
  %34 = icmp eq i8 %33, 0, !dbg !4354
  %35 = and i1 %31, %34, !dbg !4354
  %36 = and i1 %28, %35, !dbg !4354
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !4354, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %37(ptr nonnull @.str.1323), !dbg !4354
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.shape, align 8, !dbg !4354, !tbaa !4377
  %39 = and i64 %38, 4294967295, !dbg !4354
  %40 = icmp eq i64 %39, 1, !dbg !4354
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !4354, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %41(ptr nonnull @.str.1324), !dbg !4354
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.shape, i64 1, !dbg !4354
  %43 = load i64, ptr %42, align 8, !dbg !4354, !tbaa !4387
  %44 = and i64 %43, 4294967295, !dbg !4354
  %45 = icmp eq i64 %44, 128, !dbg !4354
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !4354, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %46(ptr nonnull @.str.1325), !dbg !4354
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.shape, i64 2, !dbg !4354
  %48 = load i64, ptr %47, align 8, !dbg !4354, !tbaa !4389
  %49 = and i64 %48, 4294967295, !dbg !4354
  %50 = icmp eq i64 %49, 28, !dbg !4354
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !4354, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %51(ptr nonnull @.str.1326), !dbg !4354
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.shape, i64 3, !dbg !4354
  %53 = load i64, ptr %52, align 8, !dbg !4354, !tbaa !4392
  %54 = and i64 %53, 4294967295, !dbg !4354
  %55 = icmp eq i64 %54, 28, !dbg !4354
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !4354, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %56(ptr nonnull @.str.1327), !dbg !4354
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.shape, i64 4, !dbg !4354
  %58 = load i64, ptr %57, align 8, !dbg !4354, !tbaa !4394
  %59 = and i64 %58, 4294967295, !dbg !4354
  %60 = icmp eq i64 %59, 4, !dbg !4354
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !4354, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %61(ptr nonnull @.str.1328), !dbg !4354
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.strides, null, !dbg !4354
  br i1 %.not, label %if_end, label %if_then, !dbg !4354, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.strides, i64 1, !dbg !4354
  %63 = load i64, ptr %62, align 8, !dbg !4354, !tbaa !4398
  %64 = and i64 %63, 4294967295, !dbg !4354
  %65 = icmp eq i64 %64, 3136, !dbg !4354
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.strides, i64 2, !dbg !4354
  %67 = load i64, ptr %66, align 8, !dbg !4354, !tbaa !4408
  %68 = and i64 %67, 4294967295, !dbg !4354
  %69 = icmp eq i64 %68, 112, !dbg !4354
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.strides, i64 3, !dbg !4354
  %71 = load i64, ptr %70, align 8, !dbg !4354, !tbaa !4411
  %72 = and i64 %71, 4294967295, !dbg !4354
  %73 = icmp eq i64 %72, 4, !dbg !4354
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p0.strides, i64 4, !dbg !4354
  %75 = load i64, ptr %74, align 8, !dbg !4354, !tbaa !4413
  %76 = and i64 %75, 4294967295, !dbg !4354
  %77 = icmp eq i64 %76, 1, !dbg !4354
  %78 = and i1 %73, %77, !dbg !4354
  %79 = and i1 %69, %78, !dbg !4354
  %80 = and i1 %65, %79, !dbg !4354
  br i1 %80, label %if_end, label %assert_fail32, !dbg !4354, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4354
  %82 = load i64, ptr %81, align 8, !dbg !4354
  %83 = icmp eq i64 %82, 0, !dbg !4354
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !4354, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %84(ptr nonnull @.str.1329), !dbg !4354
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %85(ptr nonnull @.str.1330), !dbg !4354
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4354
  %87 = load i32, ptr %86, align 4, !dbg !4354
  %88 = icmp eq i32 %87, 1, !dbg !4354
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !4354, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %89(ptr nonnull @.str.1331), !dbg !4354
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4354
  %91 = load i32, ptr %90, align 4, !dbg !4354
  %92 = icmp eq i32 %91, 6, !dbg !4354
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !4354, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %93(ptr nonnull @.str.1332), !dbg !4354
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4354
  %95 = load i16, ptr %94, align 2, !dbg !4354
  %96 = icmp eq i16 %95, 1, !dbg !4354
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4354
  %98 = load i8, ptr %97, align 1, !dbg !4354
  %99 = icmp eq i8 %98, 8, !dbg !4354
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4354
  %101 = load i8, ptr %100, align 1, !dbg !4354
  %102 = icmp eq i8 %101, 0, !dbg !4354
  %103 = and i1 %99, %102, !dbg !4354
  %104 = and i1 %96, %103, !dbg !4354
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !4354, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %105(ptr nonnull @.str.1333), !dbg !4354
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.shape, align 8, !dbg !4354, !tbaa !4417
  %107 = and i64 %106, 4294967295, !dbg !4354
  %108 = icmp eq i64 %107, 256, !dbg !4354
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !4354, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %109(ptr nonnull @.str.1334), !dbg !4354
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.shape, i64 1, !dbg !4354
  %111 = load i64, ptr %110, align 8, !dbg !4354, !tbaa !4427
  %112 = and i64 %111, 4294967295, !dbg !4354
  %113 = icmp eq i64 %112, 128, !dbg !4354
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !4354, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %114(ptr nonnull @.str.1335), !dbg !4354
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.shape, i64 2, !dbg !4354
  %116 = load i64, ptr %115, align 8, !dbg !4354, !tbaa !4429
  %117 = and i64 %116, 4294967295, !dbg !4354
  %118 = icmp eq i64 %117, 1, !dbg !4354
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !4354, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %119(ptr nonnull @.str.1336), !dbg !4354
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.shape, i64 3, !dbg !4354
  %121 = load i64, ptr %120, align 8, !dbg !4354, !tbaa !4432
  %122 = and i64 %121, 4294967295, !dbg !4354
  %123 = icmp eq i64 %122, 1, !dbg !4354
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !4354, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %124(ptr nonnull @.str.1337), !dbg !4354
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.shape, i64 4, !dbg !4354
  %126 = load i64, ptr %125, align 8, !dbg !4354, !tbaa !4434
  %127 = and i64 %126, 4294967295, !dbg !4354
  %128 = icmp eq i64 %127, 4, !dbg !4354
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !4354, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %129(ptr nonnull @.str.1338), !dbg !4354
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.shape, i64 5, !dbg !4354
  %131 = load i64, ptr %130, align 8, !dbg !4354, !tbaa !4438
  %132 = and i64 %131, 4294967295, !dbg !4354
  %133 = icmp eq i64 %132, 4, !dbg !4354
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !4354, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %134(ptr nonnull @.str.1339), !dbg !4354
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.strides, null, !dbg !4354
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !4354, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.strides, align 8, !dbg !4354, !tbaa !4440
  %136 = and i64 %135, 4294967295, !dbg !4354
  %137 = icmp eq i64 %136, 2048, !dbg !4354
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.strides, i64 1, !dbg !4354
  %139 = load i64, ptr %138, align 8, !dbg !4354, !tbaa !4450
  %140 = and i64 %139, 4294967295, !dbg !4354
  %141 = icmp eq i64 %140, 16, !dbg !4354
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.strides, i64 4, !dbg !4354
  %143 = load i64, ptr %142, align 8, !dbg !4354, !tbaa !4452
  %144 = and i64 %143, 4294967295, !dbg !4354
  %145 = icmp eq i64 %144, 4, !dbg !4354
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.p1.strides, i64 5, !dbg !4354
  %147 = load i64, ptr %146, align 8, !dbg !4354, !tbaa !4456
  %148 = and i64 %147, 4294967295, !dbg !4354
  %149 = icmp eq i64 %148, 1, !dbg !4354
  %150 = and i1 %145, %149, !dbg !4354
  %151 = and i1 %141, %150, !dbg !4354
  %152 = and i1 %137, %151, !dbg !4354
  br i1 %152, label %if_end57, label %assert_fail58, !dbg !4354, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4354
  %154 = load i64, ptr %153, align 8, !dbg !4354
  %155 = icmp eq i64 %154, 0, !dbg !4354
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !4354, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %156(ptr nonnull @.str.1340), !dbg !4354
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %157(ptr nonnull @.str.1341), !dbg !4354
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %158 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4354
  %159 = load i32, ptr %158, align 4, !dbg !4354
  %160 = icmp eq i32 %159, 1, !dbg !4354
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !4354, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %161(ptr nonnull @.str.1342), !dbg !4354
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4354
  %163 = load i32, ptr %162, align 4, !dbg !4354
  %164 = icmp eq i32 %dev_id, %163, !dbg !4354
  br i1 %164, label %assert_end65, label %assert_fail64, !dbg !4354, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %165(ptr nonnull @.str.1343), !dbg !4354
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %166 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !4354
  %167 = load i32, ptr %166, align 4, !dbg !4354
  %168 = icmp eq i32 %167, 0, !dbg !4354
  br i1 %168, label %assert_end69, label %assert_fail66, !dbg !4354, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %169(ptr nonnull @.str.1344), !dbg !4354
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !4354
  %171 = load i16, ptr %170, align 2, !dbg !4354
  %172 = icmp eq i16 %171, 1, !dbg !4354
  %173 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !4354
  %174 = load i8, ptr %173, align 1, !dbg !4354
  %175 = icmp eq i8 %174, 16, !dbg !4354
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !4354
  %177 = load i8, ptr %176, align 1, !dbg !4354
  %178 = icmp eq i8 %177, 0, !dbg !4354
  %179 = and i1 %175, %178, !dbg !4354
  %180 = and i1 %172, %179, !dbg !4354
  br i1 %180, label %assert_end71, label %assert_fail70, !dbg !4354, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %181(ptr nonnull @.str.1345), !dbg !4354
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !4354
  %183 = load i64, ptr %182, align 8, !dbg !4354
  %184 = icmp eq i64 %183, 0, !dbg !4354
  br i1 %184, label %assert_end73, label %assert_fail72, !dbg !4354, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %185(ptr nonnull @.str.1346), !dbg !4354
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !4354
  %187 = load i32, ptr %186, align 4, !dbg !4354
  %188 = icmp eq i32 %187, 1, !dbg !4354
  br i1 %188, label %assert_end75, label %assert_fail74, !dbg !4354, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %189(ptr nonnull @.str.1347), !dbg !4354
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !4354
  %191 = load i32, ptr %190, align 4, !dbg !4354
  %192 = icmp eq i32 %dev_id, %191, !dbg !4354
  br i1 %192, label %assert_end77, label %assert_fail76, !dbg !4354, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %193(ptr nonnull @.str.1348), !dbg !4354
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %194 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !4354
  %195 = load i32, ptr %194, align 4, !dbg !4354
  %196 = icmp eq i32 %195, 0, !dbg !4354
  br i1 %196, label %assert_end81, label %assert_fail78, !dbg !4354, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %197(ptr nonnull @.str.1349), !dbg !4354
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %198 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !4354
  %199 = load i16, ptr %198, align 2, !dbg !4354
  %200 = icmp eq i16 %199, 1, !dbg !4354
  %201 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !4354
  %202 = load i8, ptr %201, align 1, !dbg !4354
  %203 = icmp eq i8 %202, 16, !dbg !4354
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !4354
  %205 = load i8, ptr %204, align 1, !dbg !4354
  %206 = icmp eq i8 %205, 0, !dbg !4354
  %207 = and i1 %203, %206, !dbg !4354
  %208 = and i1 %200, %207, !dbg !4354
  br i1 %208, label %assert_end83, label %assert_fail82, !dbg !4354, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %209(ptr nonnull @.str.1350), !dbg !4354
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %210 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !4354
  %211 = load i64, ptr %210, align 8, !dbg !4354
  %212 = icmp eq i64 %211, 0, !dbg !4354
  br i1 %212, label %assert_end85, label %assert_fail84, !dbg !4354, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %213(ptr nonnull @.str.1351), !dbg !4354
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !4354
  %215 = load i32, ptr %214, align 4, !dbg !4354
  %216 = icmp eq i32 %215, 1, !dbg !4354
  br i1 %216, label %assert_end87, label %assert_fail86, !dbg !4354, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %217(ptr nonnull @.str.1352), !dbg !4354
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %218 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !4354
  %219 = load i32, ptr %218, align 4, !dbg !4354
  %220 = icmp eq i32 %dev_id, %219, !dbg !4354
  br i1 %220, label %assert_end89, label %assert_fail88, !dbg !4354, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %221 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %221(ptr nonnull @.str.1353), !dbg !4354
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %222 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !4354
  %223 = load i32, ptr %222, align 4, !dbg !4354
  %224 = icmp eq i32 %223, 5, !dbg !4354
  br i1 %224, label %assert_end93, label %assert_fail90, !dbg !4354, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %225 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %225(ptr nonnull @.str.1354), !dbg !4354
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %226 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !4354
  %227 = load i16, ptr %226, align 2, !dbg !4354
  %228 = icmp eq i16 %227, 1, !dbg !4354
  %229 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !4354
  %230 = load i8, ptr %229, align 1, !dbg !4354
  %231 = icmp eq i8 %230, 8, !dbg !4354
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !4354
  %233 = load i8, ptr %232, align 1, !dbg !4354
  %234 = icmp eq i8 %233, 0, !dbg !4354
  %235 = and i1 %231, %234, !dbg !4354
  %236 = and i1 %228, %235, !dbg !4354
  br i1 %236, label %assert_end95, label %assert_fail94, !dbg !4354, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %237(ptr nonnull @.str.1355), !dbg !4354
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %238 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.shape, align 8, !dbg !4354, !tbaa !4458
  %239 = and i64 %238, 4294967295, !dbg !4354
  %240 = icmp eq i64 %239, 1, !dbg !4354
  br i1 %240, label %assert_end97, label %assert_fail96, !dbg !4354, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %241(ptr nonnull @.str.1356), !dbg !4354
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.shape, i64 1, !dbg !4354
  %243 = load i64, ptr %242, align 8, !dbg !4354, !tbaa !4468
  %244 = and i64 %243, 4294967295, !dbg !4354
  %245 = icmp eq i64 %244, 256, !dbg !4354
  br i1 %245, label %assert_end99, label %assert_fail98, !dbg !4354, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %246(ptr nonnull @.str.1357), !dbg !4354
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.shape, i64 2, !dbg !4354
  %248 = load i64, ptr %247, align 8, !dbg !4354, !tbaa !4470
  %249 = and i64 %248, 4294967295, !dbg !4354
  %250 = icmp eq i64 %249, 14, !dbg !4354
  br i1 %250, label %assert_end101, label %assert_fail100, !dbg !4354, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %251(ptr nonnull @.str.1358), !dbg !4354
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.shape, i64 3, !dbg !4354
  %253 = load i64, ptr %252, align 8, !dbg !4354, !tbaa !4473
  %254 = and i64 %253, 4294967295, !dbg !4354
  %255 = icmp eq i64 %254, 14, !dbg !4354
  br i1 %255, label %assert_end103, label %assert_fail102, !dbg !4354, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %256(ptr nonnull @.str.1359), !dbg !4354
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.shape, i64 4, !dbg !4354
  %258 = load i64, ptr %257, align 8, !dbg !4354, !tbaa !4475
  %259 = and i64 %258, 4294967295, !dbg !4354
  %260 = icmp eq i64 %259, 4, !dbg !4354
  br i1 %260, label %assert_end105, label %assert_fail104, !dbg !4354, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %261(ptr nonnull @.str.1360), !dbg !4354
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.strides, null, !dbg !4354
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !4354, !prof !59

if_then106:                                       ; preds = %assert_end105
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.strides, i64 1, !dbg !4354
  %263 = load i64, ptr %262, align 8, !dbg !4354, !tbaa !4479
  %264 = and i64 %263, 4294967295, !dbg !4354
  %265 = icmp eq i64 %264, 784, !dbg !4354
  %266 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.strides, i64 2, !dbg !4354
  %267 = load i64, ptr %266, align 8, !dbg !4354, !tbaa !4489
  %268 = and i64 %267, 4294967295, !dbg !4354
  %269 = icmp eq i64 %268, 56, !dbg !4354
  %270 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.strides, i64 3, !dbg !4354
  %271 = load i64, ptr %270, align 8, !dbg !4354, !tbaa !4492
  %272 = and i64 %271, 4294967295, !dbg !4354
  %273 = icmp eq i64 %272, 4, !dbg !4354
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13.T_cast.strides, i64 4, !dbg !4354
  %275 = load i64, ptr %274, align 8, !dbg !4354, !tbaa !4494
  %276 = and i64 %275, 4294967295, !dbg !4354
  %277 = icmp eq i64 %276, 1, !dbg !4354
  %278 = and i1 %273, %277, !dbg !4354
  %279 = and i1 %269, %278, !dbg !4354
  %280 = and i1 %265, %279, !dbg !4354
  br i1 %280, label %if_end107, label %assert_fail108, !dbg !4354, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %281 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !4354
  %282 = load i64, ptr %281, align 8, !dbg !4354
  %283 = icmp eq i64 %282, 0, !dbg !4354
  br i1 %283, label %assert_end111, label %assert_fail110, !dbg !4354, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %284(ptr nonnull @.str.1361), !dbg !4354
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %285 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %285(ptr nonnull @.str.1362), !dbg !4354
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %286 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !4354
  %287 = load i32, ptr %286, align 4, !dbg !4354
  %288 = icmp eq i32 %287, 1, !dbg !4354
  br i1 %288, label %assert_end113, label %assert_fail112, !dbg !4354, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %289(ptr nonnull @.str.1363), !dbg !4354
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %290 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !4354
  %291 = load i32, ptr %290, align 4, !dbg !4354
  %292 = icmp eq i32 %dev_id, %291, !dbg !4354
  br i1 %292, label %assert_end115, label %assert_fail114, !dbg !4354, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %293 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4354, !tbaa !19
  tail call void %293(ptr nonnull @.str.1364), !dbg !4354
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %294 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_compute_(ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !4354
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4498 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4500, metadata !DIExpression()), !dbg !4506
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4501, metadata !DIExpression()), !dbg !4506
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4502, metadata !DIExpression()), !dbg !4506
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4503, metadata !DIExpression()), !dbg !4506
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4504, metadata !DIExpression()), !dbg !4506
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4505, metadata !DIExpression()), !dbg !4506
  %0 = icmp eq i32 %num_args, 5, !dbg !4506
  br i1 %0, label %assert_end, label %assert_fail, !dbg !4506, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %294, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !4506

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %1(ptr nonnull @.str.1366), !dbg !4506
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4506, !tbaa !4507
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4506
  %p1.code = load i32, ptr %2, align 4, !dbg !4506, !tbaa !4518
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4506
  %p2.code = load i32, ptr %3, align 4, !dbg !4506, !tbaa !4520
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !4506
  %p3.code = load i32, ptr %4, align 4, !dbg !4506, !tbaa !4523
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !4506
  %T_cast.code = load i32, ptr %5, align 4, !dbg !4506, !tbaa !4525
  %p0 = load ptr, ptr %args, align 8, !dbg !4506
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4506
  %p1 = load ptr, ptr %6, align 8, !dbg !4506
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4506
  %p2 = load ptr, ptr %7, align 8, !dbg !4506
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !4506
  %p3 = load ptr, ptr %8, align 8, !dbg !4506
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !4506
  %T_cast = load ptr, ptr %9, align 8, !dbg !4506
  %p0116 = load ptr, ptr %p0, align 8, !dbg !4506
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !4506
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4506
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.shape = load ptr, ptr %10, align 8, !dbg !4506
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4506
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.strides = load ptr, ptr %11, align 8, !dbg !4506
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4506
  %dev_id = load i32, ptr %12, align 4, !dbg !4506
  %p1117 = load ptr, ptr %p1, align 8, !dbg !4506
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !4506
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4506
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.shape = load ptr, ptr %13, align 8, !dbg !4506
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4506
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.strides = load ptr, ptr %14, align 8, !dbg !4506
  %p2119 = load ptr, ptr %p2, align 8, !dbg !4506
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !4506
  %p3120 = load ptr, ptr %p3, align 8, !dbg !4506
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !4506
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !4506
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !4506
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !4506
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.shape = load ptr, ptr %15, align 8, !dbg !4506
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !4506
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.strides = load ptr, ptr %16, align 8, !dbg !4506
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !4506

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %17(ptr nonnull @.str.1367), !dbg !4506
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !4506

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %18(ptr nonnull @.str.1368), !dbg !4506
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !4506

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %19(ptr nonnull @.str.1369), !dbg !4506
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !4506

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %20(ptr nonnull @.str.1370), !dbg !4506
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !4506

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %21(ptr nonnull @.str.1371), !dbg !4506
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4506
  %23 = load i32, ptr %22, align 4, !dbg !4506
  %24 = icmp eq i32 %23, 5, !dbg !4506
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !4506, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %25(ptr nonnull @.str.1372), !dbg !4506
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4506
  %27 = load i16, ptr %26, align 2, !dbg !4506
  %28 = icmp eq i16 %27, 1, !dbg !4506
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4506
  %30 = load i8, ptr %29, align 1, !dbg !4506
  %31 = icmp eq i8 %30, 8, !dbg !4506
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4506
  %33 = load i8, ptr %32, align 1, !dbg !4506
  %34 = icmp eq i8 %33, 0, !dbg !4506
  %35 = and i1 %31, %34, !dbg !4506
  %36 = and i1 %28, %35, !dbg !4506
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !4506, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %37(ptr nonnull @.str.1373), !dbg !4506
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.shape, align 8, !dbg !4506, !tbaa !4529
  %39 = and i64 %38, 4294967295, !dbg !4506
  %40 = icmp eq i64 %39, 1, !dbg !4506
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !4506, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %41(ptr nonnull @.str.1374), !dbg !4506
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.shape, i64 1, !dbg !4506
  %43 = load i64, ptr %42, align 8, !dbg !4506, !tbaa !4539
  %44 = and i64 %43, 4294967295, !dbg !4506
  %45 = icmp eq i64 %44, 256, !dbg !4506
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !4506, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %46(ptr nonnull @.str.1375), !dbg !4506
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.shape, i64 2, !dbg !4506
  %48 = load i64, ptr %47, align 8, !dbg !4506, !tbaa !4541
  %49 = and i64 %48, 4294967295, !dbg !4506
  %50 = icmp eq i64 %49, 14, !dbg !4506
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !4506, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %51(ptr nonnull @.str.1376), !dbg !4506
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.shape, i64 3, !dbg !4506
  %53 = load i64, ptr %52, align 8, !dbg !4506, !tbaa !4544
  %54 = and i64 %53, 4294967295, !dbg !4506
  %55 = icmp eq i64 %54, 14, !dbg !4506
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !4506, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %56(ptr nonnull @.str.1377), !dbg !4506
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.shape, i64 4, !dbg !4506
  %58 = load i64, ptr %57, align 8, !dbg !4506, !tbaa !4546
  %59 = and i64 %58, 4294967295, !dbg !4506
  %60 = icmp eq i64 %59, 4, !dbg !4506
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !4506, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %61(ptr nonnull @.str.1378), !dbg !4506
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.strides, null, !dbg !4506
  br i1 %.not, label %if_end, label %if_then, !dbg !4506, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.strides, i64 1, !dbg !4506
  %63 = load i64, ptr %62, align 8, !dbg !4506, !tbaa !4550
  %64 = and i64 %63, 4294967295, !dbg !4506
  %65 = icmp eq i64 %64, 784, !dbg !4506
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.strides, i64 2, !dbg !4506
  %67 = load i64, ptr %66, align 8, !dbg !4506, !tbaa !4560
  %68 = and i64 %67, 4294967295, !dbg !4506
  %69 = icmp eq i64 %68, 56, !dbg !4506
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.strides, i64 3, !dbg !4506
  %71 = load i64, ptr %70, align 8, !dbg !4506, !tbaa !4563
  %72 = and i64 %71, 4294967295, !dbg !4506
  %73 = icmp eq i64 %72, 4, !dbg !4506
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p0.strides, i64 4, !dbg !4506
  %75 = load i64, ptr %74, align 8, !dbg !4506, !tbaa !4565
  %76 = and i64 %75, 4294967295, !dbg !4506
  %77 = icmp eq i64 %76, 1, !dbg !4506
  %78 = and i1 %73, %77, !dbg !4506
  %79 = and i1 %69, %78, !dbg !4506
  %80 = and i1 %65, %79, !dbg !4506
  br i1 %80, label %if_end, label %assert_fail32, !dbg !4506, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4506
  %82 = load i64, ptr %81, align 8, !dbg !4506
  %83 = icmp eq i64 %82, 0, !dbg !4506
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !4506, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %84(ptr nonnull @.str.1379), !dbg !4506
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %85(ptr nonnull @.str.1380), !dbg !4506
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4506
  %87 = load i32, ptr %86, align 4, !dbg !4506
  %88 = icmp eq i32 %87, 1, !dbg !4506
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !4506, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %89(ptr nonnull @.str.1381), !dbg !4506
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4506
  %91 = load i32, ptr %90, align 4, !dbg !4506
  %92 = icmp eq i32 %91, 6, !dbg !4506
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !4506, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %93(ptr nonnull @.str.1382), !dbg !4506
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4506
  %95 = load i16, ptr %94, align 2, !dbg !4506
  %96 = icmp eq i16 %95, 1, !dbg !4506
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4506
  %98 = load i8, ptr %97, align 1, !dbg !4506
  %99 = icmp eq i8 %98, 8, !dbg !4506
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4506
  %101 = load i8, ptr %100, align 1, !dbg !4506
  %102 = icmp eq i8 %101, 0, !dbg !4506
  %103 = and i1 %99, %102, !dbg !4506
  %104 = and i1 %96, %103, !dbg !4506
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !4506, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %105(ptr nonnull @.str.1383), !dbg !4506
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.shape, align 8, !dbg !4506, !tbaa !4569
  %107 = and i64 %106, 4294967295, !dbg !4506
  %108 = icmp eq i64 %107, 64, !dbg !4506
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !4506, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %109(ptr nonnull @.str.1384), !dbg !4506
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.shape, i64 1, !dbg !4506
  %111 = load i64, ptr %110, align 8, !dbg !4506, !tbaa !4579
  %112 = and i64 %111, 4294967295, !dbg !4506
  %113 = icmp eq i64 %112, 256, !dbg !4506
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !4506, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %114(ptr nonnull @.str.1385), !dbg !4506
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.shape, i64 2, !dbg !4506
  %116 = load i64, ptr %115, align 8, !dbg !4506, !tbaa !4581
  %117 = and i64 %116, 4294967295, !dbg !4506
  %118 = icmp eq i64 %117, 1, !dbg !4506
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !4506, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %119(ptr nonnull @.str.1386), !dbg !4506
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.shape, i64 3, !dbg !4506
  %121 = load i64, ptr %120, align 8, !dbg !4506, !tbaa !4584
  %122 = and i64 %121, 4294967295, !dbg !4506
  %123 = icmp eq i64 %122, 1, !dbg !4506
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !4506, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %124(ptr nonnull @.str.1387), !dbg !4506
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.shape, i64 4, !dbg !4506
  %126 = load i64, ptr %125, align 8, !dbg !4506, !tbaa !4586
  %127 = and i64 %126, 4294967295, !dbg !4506
  %128 = icmp eq i64 %127, 4, !dbg !4506
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !4506, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %129(ptr nonnull @.str.1388), !dbg !4506
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.shape, i64 5, !dbg !4506
  %131 = load i64, ptr %130, align 8, !dbg !4506, !tbaa !4590
  %132 = and i64 %131, 4294967295, !dbg !4506
  %133 = icmp eq i64 %132, 4, !dbg !4506
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !4506, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %134(ptr nonnull @.str.1389), !dbg !4506
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.strides, null, !dbg !4506
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !4506, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.strides, align 8, !dbg !4506, !tbaa !4592
  %136 = and i64 %135, 4294967295, !dbg !4506
  %137 = icmp eq i64 %136, 4096, !dbg !4506
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.strides, i64 1, !dbg !4506
  %139 = load i64, ptr %138, align 8, !dbg !4506, !tbaa !4602
  %140 = and i64 %139, 4294967295, !dbg !4506
  %141 = icmp eq i64 %140, 16, !dbg !4506
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.strides, i64 4, !dbg !4506
  %143 = load i64, ptr %142, align 8, !dbg !4506, !tbaa !4604
  %144 = and i64 %143, 4294967295, !dbg !4506
  %145 = icmp eq i64 %144, 4, !dbg !4506
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.p1.strides, i64 5, !dbg !4506
  %147 = load i64, ptr %146, align 8, !dbg !4506, !tbaa !4608
  %148 = and i64 %147, 4294967295, !dbg !4506
  %149 = icmp eq i64 %148, 1, !dbg !4506
  %150 = and i1 %145, %149, !dbg !4506
  %151 = and i1 %141, %150, !dbg !4506
  %152 = and i1 %137, %151, !dbg !4506
  br i1 %152, label %if_end57, label %assert_fail58, !dbg !4506, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4506
  %154 = load i64, ptr %153, align 8, !dbg !4506
  %155 = icmp eq i64 %154, 0, !dbg !4506
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !4506, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %156(ptr nonnull @.str.1390), !dbg !4506
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %157(ptr nonnull @.str.1391), !dbg !4506
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %158 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4506
  %159 = load i32, ptr %158, align 4, !dbg !4506
  %160 = icmp eq i32 %159, 1, !dbg !4506
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !4506, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %161(ptr nonnull @.str.1392), !dbg !4506
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4506
  %163 = load i32, ptr %162, align 4, !dbg !4506
  %164 = icmp eq i32 %dev_id, %163, !dbg !4506
  br i1 %164, label %assert_end65, label %assert_fail64, !dbg !4506, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %165(ptr nonnull @.str.1393), !dbg !4506
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %166 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !4506
  %167 = load i32, ptr %166, align 4, !dbg !4506
  %168 = icmp eq i32 %167, 0, !dbg !4506
  br i1 %168, label %assert_end69, label %assert_fail66, !dbg !4506, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %169(ptr nonnull @.str.1394), !dbg !4506
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !4506
  %171 = load i16, ptr %170, align 2, !dbg !4506
  %172 = icmp eq i16 %171, 1, !dbg !4506
  %173 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !4506
  %174 = load i8, ptr %173, align 1, !dbg !4506
  %175 = icmp eq i8 %174, 16, !dbg !4506
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !4506
  %177 = load i8, ptr %176, align 1, !dbg !4506
  %178 = icmp eq i8 %177, 0, !dbg !4506
  %179 = and i1 %175, %178, !dbg !4506
  %180 = and i1 %172, %179, !dbg !4506
  br i1 %180, label %assert_end71, label %assert_fail70, !dbg !4506, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %181(ptr nonnull @.str.1395), !dbg !4506
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !4506
  %183 = load i64, ptr %182, align 8, !dbg !4506
  %184 = icmp eq i64 %183, 0, !dbg !4506
  br i1 %184, label %assert_end73, label %assert_fail72, !dbg !4506, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %185(ptr nonnull @.str.1396), !dbg !4506
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !4506
  %187 = load i32, ptr %186, align 4, !dbg !4506
  %188 = icmp eq i32 %187, 1, !dbg !4506
  br i1 %188, label %assert_end75, label %assert_fail74, !dbg !4506, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %189(ptr nonnull @.str.1397), !dbg !4506
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !4506
  %191 = load i32, ptr %190, align 4, !dbg !4506
  %192 = icmp eq i32 %dev_id, %191, !dbg !4506
  br i1 %192, label %assert_end77, label %assert_fail76, !dbg !4506, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %193(ptr nonnull @.str.1398), !dbg !4506
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %194 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !4506
  %195 = load i32, ptr %194, align 4, !dbg !4506
  %196 = icmp eq i32 %195, 0, !dbg !4506
  br i1 %196, label %assert_end81, label %assert_fail78, !dbg !4506, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %197(ptr nonnull @.str.1399), !dbg !4506
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %198 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !4506
  %199 = load i16, ptr %198, align 2, !dbg !4506
  %200 = icmp eq i16 %199, 1, !dbg !4506
  %201 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !4506
  %202 = load i8, ptr %201, align 1, !dbg !4506
  %203 = icmp eq i8 %202, 16, !dbg !4506
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !4506
  %205 = load i8, ptr %204, align 1, !dbg !4506
  %206 = icmp eq i8 %205, 0, !dbg !4506
  %207 = and i1 %203, %206, !dbg !4506
  %208 = and i1 %200, %207, !dbg !4506
  br i1 %208, label %assert_end83, label %assert_fail82, !dbg !4506, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %209(ptr nonnull @.str.1400), !dbg !4506
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %210 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !4506
  %211 = load i64, ptr %210, align 8, !dbg !4506
  %212 = icmp eq i64 %211, 0, !dbg !4506
  br i1 %212, label %assert_end85, label %assert_fail84, !dbg !4506, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %213(ptr nonnull @.str.1401), !dbg !4506
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !4506
  %215 = load i32, ptr %214, align 4, !dbg !4506
  %216 = icmp eq i32 %215, 1, !dbg !4506
  br i1 %216, label %assert_end87, label %assert_fail86, !dbg !4506, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %217(ptr nonnull @.str.1402), !dbg !4506
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %218 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !4506
  %219 = load i32, ptr %218, align 4, !dbg !4506
  %220 = icmp eq i32 %dev_id, %219, !dbg !4506
  br i1 %220, label %assert_end89, label %assert_fail88, !dbg !4506, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %221 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %221(ptr nonnull @.str.1403), !dbg !4506
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %222 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !4506
  %223 = load i32, ptr %222, align 4, !dbg !4506
  %224 = icmp eq i32 %223, 5, !dbg !4506
  br i1 %224, label %assert_end93, label %assert_fail90, !dbg !4506, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %225 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %225(ptr nonnull @.str.1404), !dbg !4506
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %226 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !4506
  %227 = load i16, ptr %226, align 2, !dbg !4506
  %228 = icmp eq i16 %227, 1, !dbg !4506
  %229 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !4506
  %230 = load i8, ptr %229, align 1, !dbg !4506
  %231 = icmp eq i8 %230, 8, !dbg !4506
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !4506
  %233 = load i8, ptr %232, align 1, !dbg !4506
  %234 = icmp eq i8 %233, 0, !dbg !4506
  %235 = and i1 %231, %234, !dbg !4506
  %236 = and i1 %228, %235, !dbg !4506
  br i1 %236, label %assert_end95, label %assert_fail94, !dbg !4506, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %237(ptr nonnull @.str.1405), !dbg !4506
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %238 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.shape, align 8, !dbg !4506, !tbaa !4610
  %239 = and i64 %238, 4294967295, !dbg !4506
  %240 = icmp eq i64 %239, 1, !dbg !4506
  br i1 %240, label %assert_end97, label %assert_fail96, !dbg !4506, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %241(ptr nonnull @.str.1406), !dbg !4506
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.shape, i64 1, !dbg !4506
  %243 = load i64, ptr %242, align 8, !dbg !4506, !tbaa !4620
  %244 = and i64 %243, 4294967295, !dbg !4506
  %245 = icmp eq i64 %244, 64, !dbg !4506
  br i1 %245, label %assert_end99, label %assert_fail98, !dbg !4506, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %246(ptr nonnull @.str.1407), !dbg !4506
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.shape, i64 2, !dbg !4506
  %248 = load i64, ptr %247, align 8, !dbg !4506, !tbaa !4622
  %249 = and i64 %248, 4294967295, !dbg !4506
  %250 = icmp eq i64 %249, 14, !dbg !4506
  br i1 %250, label %assert_end101, label %assert_fail100, !dbg !4506, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %251(ptr nonnull @.str.1408), !dbg !4506
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.shape, i64 3, !dbg !4506
  %253 = load i64, ptr %252, align 8, !dbg !4506, !tbaa !4625
  %254 = and i64 %253, 4294967295, !dbg !4506
  %255 = icmp eq i64 %254, 14, !dbg !4506
  br i1 %255, label %assert_end103, label %assert_fail102, !dbg !4506, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %256(ptr nonnull @.str.1409), !dbg !4506
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.shape, i64 4, !dbg !4506
  %258 = load i64, ptr %257, align 8, !dbg !4506, !tbaa !4627
  %259 = and i64 %258, 4294967295, !dbg !4506
  %260 = icmp eq i64 %259, 4, !dbg !4506
  br i1 %260, label %assert_end105, label %assert_fail104, !dbg !4506, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %261(ptr nonnull @.str.1410), !dbg !4506
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.strides, null, !dbg !4506
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !4506, !prof !59

if_then106:                                       ; preds = %assert_end105
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.strides, i64 1, !dbg !4506
  %263 = load i64, ptr %262, align 8, !dbg !4506, !tbaa !4631
  %264 = and i64 %263, 4294967295, !dbg !4506
  %265 = icmp eq i64 %264, 784, !dbg !4506
  %266 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.strides, i64 2, !dbg !4506
  %267 = load i64, ptr %266, align 8, !dbg !4506, !tbaa !4641
  %268 = and i64 %267, 4294967295, !dbg !4506
  %269 = icmp eq i64 %268, 56, !dbg !4506
  %270 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.strides, i64 3, !dbg !4506
  %271 = load i64, ptr %270, align 8, !dbg !4506, !tbaa !4644
  %272 = and i64 %271, 4294967295, !dbg !4506
  %273 = icmp eq i64 %272, 4, !dbg !4506
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14.T_cast.strides, i64 4, !dbg !4506
  %275 = load i64, ptr %274, align 8, !dbg !4506, !tbaa !4646
  %276 = and i64 %275, 4294967295, !dbg !4506
  %277 = icmp eq i64 %276, 1, !dbg !4506
  %278 = and i1 %273, %277, !dbg !4506
  %279 = and i1 %269, %278, !dbg !4506
  %280 = and i1 %265, %279, !dbg !4506
  br i1 %280, label %if_end107, label %assert_fail108, !dbg !4506, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %281 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !4506
  %282 = load i64, ptr %281, align 8, !dbg !4506
  %283 = icmp eq i64 %282, 0, !dbg !4506
  br i1 %283, label %assert_end111, label %assert_fail110, !dbg !4506, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %284(ptr nonnull @.str.1411), !dbg !4506
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %285 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %285(ptr nonnull @.str.1412), !dbg !4506
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %286 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !4506
  %287 = load i32, ptr %286, align 4, !dbg !4506
  %288 = icmp eq i32 %287, 1, !dbg !4506
  br i1 %288, label %assert_end113, label %assert_fail112, !dbg !4506, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %289(ptr nonnull @.str.1413), !dbg !4506
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %290 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !4506
  %291 = load i32, ptr %290, align 4, !dbg !4506
  %292 = icmp eq i32 %dev_id, %291, !dbg !4506
  br i1 %292, label %assert_end115, label %assert_fail114, !dbg !4506, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %293 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4506, !tbaa !19
  tail call void %293(ptr nonnull @.str.1414), !dbg !4506
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %294 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_compute_(ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !4506
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4650 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4652, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4653, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4654, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4655, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4656, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4657, metadata !DIExpression()), !dbg !4658
  %0 = icmp eq i32 %num_args, 5, !dbg !4658
  br i1 %0, label %assert_end, label %assert_fail, !dbg !4658, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %304, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !4658

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %1(ptr nonnull @.str.1416), !dbg !4658
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4658, !tbaa !4659
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4658
  %p1.code = load i32, ptr %2, align 4, !dbg !4658, !tbaa !4670
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4658
  %p2.code = load i32, ptr %3, align 4, !dbg !4658, !tbaa !4672
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !4658
  %p3.code = load i32, ptr %4, align 4, !dbg !4658, !tbaa !4675
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !4658
  %T_cast.code = load i32, ptr %5, align 4, !dbg !4658, !tbaa !4677
  %p0 = load ptr, ptr %args, align 8, !dbg !4658
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4658
  %p1 = load ptr, ptr %6, align 8, !dbg !4658
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4658
  %p2 = load ptr, ptr %7, align 8, !dbg !4658
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !4658
  %p3 = load ptr, ptr %8, align 8, !dbg !4658
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !4658
  %T_cast = load ptr, ptr %9, align 8, !dbg !4658
  %p0116 = load ptr, ptr %p0, align 8, !dbg !4658
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !4658
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4658
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.shape = load ptr, ptr %10, align 8, !dbg !4658
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4658
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.strides = load ptr, ptr %11, align 8, !dbg !4658
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4658
  %dev_id = load i32, ptr %12, align 4, !dbg !4658
  %p1117 = load ptr, ptr %p1, align 8, !dbg !4658
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !4658
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4658
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.shape = load ptr, ptr %13, align 8, !dbg !4658
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4658
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.strides = load ptr, ptr %14, align 8, !dbg !4658
  %p2119 = load ptr, ptr %p2, align 8, !dbg !4658
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !4658
  %p3120 = load ptr, ptr %p3, align 8, !dbg !4658
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !4658
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !4658
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !4658
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !4658
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.shape = load ptr, ptr %15, align 8, !dbg !4658
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !4658
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.strides = load ptr, ptr %16, align 8, !dbg !4658
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !4658

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %17(ptr nonnull @.str.1417), !dbg !4658
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !4658

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %18(ptr nonnull @.str.1418), !dbg !4658
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !4658

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %19(ptr nonnull @.str.1419), !dbg !4658
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !4658

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %20(ptr nonnull @.str.1420), !dbg !4658
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !4658

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %21(ptr nonnull @.str.1421), !dbg !4658
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4658
  %23 = load i32, ptr %22, align 4, !dbg !4658
  %24 = icmp eq i32 %23, 5, !dbg !4658
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !4658, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %25(ptr nonnull @.str.1422), !dbg !4658
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4658
  %27 = load i16, ptr %26, align 2, !dbg !4658
  %28 = icmp eq i16 %27, 1, !dbg !4658
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4658
  %30 = load i8, ptr %29, align 1, !dbg !4658
  %31 = icmp eq i8 %30, 8, !dbg !4658
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4658
  %33 = load i8, ptr %32, align 1, !dbg !4658
  %34 = icmp eq i8 %33, 0, !dbg !4658
  %35 = and i1 %31, %34, !dbg !4658
  %36 = and i1 %28, %35, !dbg !4658
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !4658, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %37(ptr nonnull @.str.1423), !dbg !4658
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.shape, align 8, !dbg !4658, !tbaa !4681
  %39 = and i64 %38, 4294967295, !dbg !4658
  %40 = icmp eq i64 %39, 1, !dbg !4658
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !4658, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %41(ptr nonnull @.str.1424), !dbg !4658
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.shape, i64 1, !dbg !4658
  %43 = load i64, ptr %42, align 8, !dbg !4658, !tbaa !4691
  %44 = and i64 %43, 4294967295, !dbg !4658
  %45 = icmp eq i64 %44, 64, !dbg !4658
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !4658, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %46(ptr nonnull @.str.1425), !dbg !4658
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.shape, i64 2, !dbg !4658
  %48 = load i64, ptr %47, align 8, !dbg !4658, !tbaa !4693
  %49 = and i64 %48, 4294967295, !dbg !4658
  %50 = icmp eq i64 %49, 14, !dbg !4658
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !4658, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %51(ptr nonnull @.str.1426), !dbg !4658
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.shape, i64 3, !dbg !4658
  %53 = load i64, ptr %52, align 8, !dbg !4658, !tbaa !4696
  %54 = and i64 %53, 4294967295, !dbg !4658
  %55 = icmp eq i64 %54, 14, !dbg !4658
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !4658, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %56(ptr nonnull @.str.1427), !dbg !4658
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.shape, i64 4, !dbg !4658
  %58 = load i64, ptr %57, align 8, !dbg !4658, !tbaa !4698
  %59 = and i64 %58, 4294967295, !dbg !4658
  %60 = icmp eq i64 %59, 4, !dbg !4658
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !4658, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %61(ptr nonnull @.str.1428), !dbg !4658
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.strides, null, !dbg !4658
  br i1 %.not, label %if_end, label %if_then, !dbg !4658, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.strides, i64 1, !dbg !4658
  %63 = load i64, ptr %62, align 8, !dbg !4658, !tbaa !4702
  %64 = and i64 %63, 4294967295, !dbg !4658
  %65 = icmp eq i64 %64, 784, !dbg !4658
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.strides, i64 2, !dbg !4658
  %67 = load i64, ptr %66, align 8, !dbg !4658, !tbaa !4712
  %68 = and i64 %67, 4294967295, !dbg !4658
  %69 = icmp eq i64 %68, 56, !dbg !4658
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.strides, i64 3, !dbg !4658
  %71 = load i64, ptr %70, align 8, !dbg !4658, !tbaa !4715
  %72 = and i64 %71, 4294967295, !dbg !4658
  %73 = icmp eq i64 %72, 4, !dbg !4658
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p0.strides, i64 4, !dbg !4658
  %75 = load i64, ptr %74, align 8, !dbg !4658, !tbaa !4717
  %76 = and i64 %75, 4294967295, !dbg !4658
  %77 = icmp eq i64 %76, 1, !dbg !4658
  %78 = and i1 %73, %77, !dbg !4658
  %79 = and i1 %69, %78, !dbg !4658
  %80 = and i1 %65, %79, !dbg !4658
  br i1 %80, label %if_end, label %assert_fail32, !dbg !4658, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4658
  %82 = load i64, ptr %81, align 8, !dbg !4658
  %83 = icmp eq i64 %82, 0, !dbg !4658
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !4658, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %84(ptr nonnull @.str.1429), !dbg !4658
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %85(ptr nonnull @.str.1430), !dbg !4658
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4658
  %87 = load i32, ptr %86, align 4, !dbg !4658
  %88 = icmp eq i32 %87, 1, !dbg !4658
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !4658, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %89(ptr nonnull @.str.1431), !dbg !4658
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4658
  %91 = load i32, ptr %90, align 4, !dbg !4658
  %92 = icmp eq i32 %91, 6, !dbg !4658
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !4658, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %93(ptr nonnull @.str.1432), !dbg !4658
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4658
  %95 = load i16, ptr %94, align 2, !dbg !4658
  %96 = icmp eq i16 %95, 1, !dbg !4658
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4658
  %98 = load i8, ptr %97, align 1, !dbg !4658
  %99 = icmp eq i8 %98, 8, !dbg !4658
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4658
  %101 = load i8, ptr %100, align 1, !dbg !4658
  %102 = icmp eq i8 %101, 0, !dbg !4658
  %103 = and i1 %99, %102, !dbg !4658
  %104 = and i1 %96, %103, !dbg !4658
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !4658, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %105(ptr nonnull @.str.1433), !dbg !4658
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.shape, align 8, !dbg !4658, !tbaa !4721
  %107 = and i64 %106, 4294967295, !dbg !4658
  %108 = icmp eq i64 %107, 64, !dbg !4658
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !4658, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %109(ptr nonnull @.str.1434), !dbg !4658
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.shape, i64 1, !dbg !4658
  %111 = load i64, ptr %110, align 8, !dbg !4658, !tbaa !4731
  %112 = and i64 %111, 4294967295, !dbg !4658
  %113 = icmp eq i64 %112, 64, !dbg !4658
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !4658, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %114(ptr nonnull @.str.1435), !dbg !4658
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.shape, i64 2, !dbg !4658
  %116 = load i64, ptr %115, align 8, !dbg !4658, !tbaa !4733
  %117 = and i64 %116, 4294967295, !dbg !4658
  %118 = icmp eq i64 %117, 3, !dbg !4658
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !4658, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %119(ptr nonnull @.str.1436), !dbg !4658
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.shape, i64 3, !dbg !4658
  %121 = load i64, ptr %120, align 8, !dbg !4658, !tbaa !4736
  %122 = and i64 %121, 4294967295, !dbg !4658
  %123 = icmp eq i64 %122, 3, !dbg !4658
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !4658, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %124(ptr nonnull @.str.1437), !dbg !4658
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.shape, i64 4, !dbg !4658
  %126 = load i64, ptr %125, align 8, !dbg !4658, !tbaa !4738
  %127 = and i64 %126, 4294967295, !dbg !4658
  %128 = icmp eq i64 %127, 4, !dbg !4658
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !4658, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %129(ptr nonnull @.str.1438), !dbg !4658
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.shape, i64 5, !dbg !4658
  %131 = load i64, ptr %130, align 8, !dbg !4658, !tbaa !4742
  %132 = and i64 %131, 4294967295, !dbg !4658
  %133 = icmp eq i64 %132, 4, !dbg !4658
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !4658, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %134(ptr nonnull @.str.1439), !dbg !4658
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.strides, null, !dbg !4658
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !4658, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.strides, align 8, !dbg !4658, !tbaa !4744
  %136 = and i64 %135, 4294967295, !dbg !4658
  %137 = icmp eq i64 %136, 9216, !dbg !4658
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.strides, i64 1, !dbg !4658
  %139 = load i64, ptr %138, align 8, !dbg !4658, !tbaa !4754
  %140 = and i64 %139, 4294967295, !dbg !4658
  %141 = icmp eq i64 %140, 144, !dbg !4658
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.strides, i64 2, !dbg !4658
  %143 = load i64, ptr %142, align 8, !dbg !4658, !tbaa !4756
  %144 = and i64 %143, 4294967295, !dbg !4658
  %145 = icmp eq i64 %144, 48, !dbg !4658
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.strides, i64 3, !dbg !4658
  %147 = load i64, ptr %146, align 8, !dbg !4658, !tbaa !4759
  %148 = and i64 %147, 4294967295, !dbg !4658
  %149 = icmp eq i64 %148, 16, !dbg !4658
  %150 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.strides, i64 4, !dbg !4658
  %151 = load i64, ptr %150, align 8, !dbg !4658, !tbaa !4761
  %152 = and i64 %151, 4294967295, !dbg !4658
  %153 = icmp eq i64 %152, 4, !dbg !4658
  %154 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.p1.strides, i64 5, !dbg !4658
  %155 = load i64, ptr %154, align 8, !dbg !4658, !tbaa !4765
  %156 = and i64 %155, 4294967295, !dbg !4658
  %157 = icmp eq i64 %156, 1, !dbg !4658
  %158 = and i1 %153, %157, !dbg !4658
  %159 = and i1 %149, %158, !dbg !4658
  %160 = and i1 %145, %159, !dbg !4658
  %161 = and i1 %141, %160, !dbg !4658
  %162 = and i1 %137, %161, !dbg !4658
  br i1 %162, label %if_end57, label %assert_fail58, !dbg !4658, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %163 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4658
  %164 = load i64, ptr %163, align 8, !dbg !4658
  %165 = icmp eq i64 %164, 0, !dbg !4658
  br i1 %165, label %assert_end61, label %assert_fail60, !dbg !4658, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %166(ptr nonnull @.str.1440), !dbg !4658
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %167 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %167(ptr nonnull @.str.1441), !dbg !4658
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %168 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4658
  %169 = load i32, ptr %168, align 4, !dbg !4658
  %170 = icmp eq i32 %169, 1, !dbg !4658
  br i1 %170, label %assert_end63, label %assert_fail62, !dbg !4658, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %171 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %171(ptr nonnull @.str.1442), !dbg !4658
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %172 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4658
  %173 = load i32, ptr %172, align 4, !dbg !4658
  %174 = icmp eq i32 %dev_id, %173, !dbg !4658
  br i1 %174, label %assert_end65, label %assert_fail64, !dbg !4658, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %175(ptr nonnull @.str.1443), !dbg !4658
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !4658
  %177 = load i32, ptr %176, align 4, !dbg !4658
  %178 = icmp eq i32 %177, 0, !dbg !4658
  br i1 %178, label %assert_end69, label %assert_fail66, !dbg !4658, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %179(ptr nonnull @.str.1444), !dbg !4658
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !4658
  %181 = load i16, ptr %180, align 2, !dbg !4658
  %182 = icmp eq i16 %181, 1, !dbg !4658
  %183 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !4658
  %184 = load i8, ptr %183, align 1, !dbg !4658
  %185 = icmp eq i8 %184, 16, !dbg !4658
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !4658
  %187 = load i8, ptr %186, align 1, !dbg !4658
  %188 = icmp eq i8 %187, 0, !dbg !4658
  %189 = and i1 %185, %188, !dbg !4658
  %190 = and i1 %182, %189, !dbg !4658
  br i1 %190, label %assert_end71, label %assert_fail70, !dbg !4658, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %191(ptr nonnull @.str.1445), !dbg !4658
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %192 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !4658
  %193 = load i64, ptr %192, align 8, !dbg !4658
  %194 = icmp eq i64 %193, 0, !dbg !4658
  br i1 %194, label %assert_end73, label %assert_fail72, !dbg !4658, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %195 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %195(ptr nonnull @.str.1446), !dbg !4658
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %196 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !4658
  %197 = load i32, ptr %196, align 4, !dbg !4658
  %198 = icmp eq i32 %197, 1, !dbg !4658
  br i1 %198, label %assert_end75, label %assert_fail74, !dbg !4658, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %199(ptr nonnull @.str.1447), !dbg !4658
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %200 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !4658
  %201 = load i32, ptr %200, align 4, !dbg !4658
  %202 = icmp eq i32 %dev_id, %201, !dbg !4658
  br i1 %202, label %assert_end77, label %assert_fail76, !dbg !4658, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %203(ptr nonnull @.str.1448), !dbg !4658
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !4658
  %205 = load i32, ptr %204, align 4, !dbg !4658
  %206 = icmp eq i32 %205, 0, !dbg !4658
  br i1 %206, label %assert_end81, label %assert_fail78, !dbg !4658, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %207(ptr nonnull @.str.1449), !dbg !4658
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %208 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !4658
  %209 = load i16, ptr %208, align 2, !dbg !4658
  %210 = icmp eq i16 %209, 1, !dbg !4658
  %211 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !4658
  %212 = load i8, ptr %211, align 1, !dbg !4658
  %213 = icmp eq i8 %212, 16, !dbg !4658
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !4658
  %215 = load i8, ptr %214, align 1, !dbg !4658
  %216 = icmp eq i8 %215, 0, !dbg !4658
  %217 = and i1 %213, %216, !dbg !4658
  %218 = and i1 %210, %217, !dbg !4658
  br i1 %218, label %assert_end83, label %assert_fail82, !dbg !4658, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %219 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %219(ptr nonnull @.str.1450), !dbg !4658
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %220 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !4658
  %221 = load i64, ptr %220, align 8, !dbg !4658
  %222 = icmp eq i64 %221, 0, !dbg !4658
  br i1 %222, label %assert_end85, label %assert_fail84, !dbg !4658, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %223 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %223(ptr nonnull @.str.1451), !dbg !4658
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %224 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !4658
  %225 = load i32, ptr %224, align 4, !dbg !4658
  %226 = icmp eq i32 %225, 1, !dbg !4658
  br i1 %226, label %assert_end87, label %assert_fail86, !dbg !4658, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %227(ptr nonnull @.str.1452), !dbg !4658
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %228 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !4658
  %229 = load i32, ptr %228, align 4, !dbg !4658
  %230 = icmp eq i32 %dev_id, %229, !dbg !4658
  br i1 %230, label %assert_end89, label %assert_fail88, !dbg !4658, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %231 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %231(ptr nonnull @.str.1453), !dbg !4658
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !4658
  %233 = load i32, ptr %232, align 4, !dbg !4658
  %234 = icmp eq i32 %233, 5, !dbg !4658
  br i1 %234, label %assert_end93, label %assert_fail90, !dbg !4658, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %235 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %235(ptr nonnull @.str.1454), !dbg !4658
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %236 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !4658
  %237 = load i16, ptr %236, align 2, !dbg !4658
  %238 = icmp eq i16 %237, 1, !dbg !4658
  %239 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !4658
  %240 = load i8, ptr %239, align 1, !dbg !4658
  %241 = icmp eq i8 %240, 8, !dbg !4658
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !4658
  %243 = load i8, ptr %242, align 1, !dbg !4658
  %244 = icmp eq i8 %243, 0, !dbg !4658
  %245 = and i1 %241, %244, !dbg !4658
  %246 = and i1 %238, %245, !dbg !4658
  br i1 %246, label %assert_end95, label %assert_fail94, !dbg !4658, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %247 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %247(ptr nonnull @.str.1455), !dbg !4658
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %248 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.shape, align 8, !dbg !4658, !tbaa !4767
  %249 = and i64 %248, 4294967295, !dbg !4658
  %250 = icmp eq i64 %249, 1, !dbg !4658
  br i1 %250, label %assert_end97, label %assert_fail96, !dbg !4658, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %251(ptr nonnull @.str.1456), !dbg !4658
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.shape, i64 1, !dbg !4658
  %253 = load i64, ptr %252, align 8, !dbg !4658, !tbaa !4777
  %254 = and i64 %253, 4294967295, !dbg !4658
  %255 = icmp eq i64 %254, 64, !dbg !4658
  br i1 %255, label %assert_end99, label %assert_fail98, !dbg !4658, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %256(ptr nonnull @.str.1457), !dbg !4658
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.shape, i64 2, !dbg !4658
  %258 = load i64, ptr %257, align 8, !dbg !4658, !tbaa !4779
  %259 = and i64 %258, 4294967295, !dbg !4658
  %260 = icmp eq i64 %259, 14, !dbg !4658
  br i1 %260, label %assert_end101, label %assert_fail100, !dbg !4658, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %261(ptr nonnull @.str.1458), !dbg !4658
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.shape, i64 3, !dbg !4658
  %263 = load i64, ptr %262, align 8, !dbg !4658, !tbaa !4782
  %264 = and i64 %263, 4294967295, !dbg !4658
  %265 = icmp eq i64 %264, 14, !dbg !4658
  br i1 %265, label %assert_end103, label %assert_fail102, !dbg !4658, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %266(ptr nonnull @.str.1459), !dbg !4658
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.shape, i64 4, !dbg !4658
  %268 = load i64, ptr %267, align 8, !dbg !4658, !tbaa !4784
  %269 = and i64 %268, 4294967295, !dbg !4658
  %270 = icmp eq i64 %269, 4, !dbg !4658
  br i1 %270, label %assert_end105, label %assert_fail104, !dbg !4658, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %271 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %271(ptr nonnull @.str.1460), !dbg !4658
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.strides, null, !dbg !4658
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !4658, !prof !59

if_then106:                                       ; preds = %assert_end105
  %272 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.strides, i64 1, !dbg !4658
  %273 = load i64, ptr %272, align 8, !dbg !4658, !tbaa !4788
  %274 = and i64 %273, 4294967295, !dbg !4658
  %275 = icmp eq i64 %274, 784, !dbg !4658
  %276 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.strides, i64 2, !dbg !4658
  %277 = load i64, ptr %276, align 8, !dbg !4658, !tbaa !4798
  %278 = and i64 %277, 4294967295, !dbg !4658
  %279 = icmp eq i64 %278, 56, !dbg !4658
  %280 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.strides, i64 3, !dbg !4658
  %281 = load i64, ptr %280, align 8, !dbg !4658, !tbaa !4801
  %282 = and i64 %281, 4294967295, !dbg !4658
  %283 = icmp eq i64 %282, 4, !dbg !4658
  %284 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15.T_cast.strides, i64 4, !dbg !4658
  %285 = load i64, ptr %284, align 8, !dbg !4658, !tbaa !4803
  %286 = and i64 %285, 4294967295, !dbg !4658
  %287 = icmp eq i64 %286, 1, !dbg !4658
  %288 = and i1 %283, %287, !dbg !4658
  %289 = and i1 %279, %288, !dbg !4658
  %290 = and i1 %275, %289, !dbg !4658
  br i1 %290, label %if_end107, label %assert_fail108, !dbg !4658, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %291 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !4658
  %292 = load i64, ptr %291, align 8, !dbg !4658
  %293 = icmp eq i64 %292, 0, !dbg !4658
  br i1 %293, label %assert_end111, label %assert_fail110, !dbg !4658, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %294(ptr nonnull @.str.1461), !dbg !4658
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %295 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %295(ptr nonnull @.str.1462), !dbg !4658
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %296 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !4658
  %297 = load i32, ptr %296, align 4, !dbg !4658
  %298 = icmp eq i32 %297, 1, !dbg !4658
  br i1 %298, label %assert_end113, label %assert_fail112, !dbg !4658, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %299(ptr nonnull @.str.1463), !dbg !4658
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %300 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !4658
  %301 = load i32, ptr %300, align 4, !dbg !4658
  %302 = icmp eq i32 %dev_id, %301, !dbg !4658
  br i1 %302, label %assert_end115, label %assert_fail114, !dbg !4658, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %303 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4658, !tbaa !19
  tail call void %303(ptr nonnull @.str.1464), !dbg !4658
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %304 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_compute_(i32 %dev_id, ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !4658
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4807 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4809, metadata !DIExpression()), !dbg !4815
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4810, metadata !DIExpression()), !dbg !4815
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4811, metadata !DIExpression()), !dbg !4815
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4812, metadata !DIExpression()), !dbg !4815
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4813, metadata !DIExpression()), !dbg !4815
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4814, metadata !DIExpression()), !dbg !4815
  %0 = icmp eq i32 %num_args, 5, !dbg !4815
  br i1 %0, label %assert_end, label %assert_fail, !dbg !4815, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %294, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !4815

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %1(ptr nonnull @.str.1467), !dbg !4815
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4815, !tbaa !4816
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4815
  %p1.code = load i32, ptr %2, align 4, !dbg !4815, !tbaa !4827
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4815
  %p2.code = load i32, ptr %3, align 4, !dbg !4815, !tbaa !4829
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !4815
  %p3.code = load i32, ptr %4, align 4, !dbg !4815, !tbaa !4832
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !4815
  %T_cast.code = load i32, ptr %5, align 4, !dbg !4815, !tbaa !4834
  %p0 = load ptr, ptr %args, align 8, !dbg !4815
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4815
  %p1 = load ptr, ptr %6, align 8, !dbg !4815
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4815
  %p2 = load ptr, ptr %7, align 8, !dbg !4815
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !4815
  %p3 = load ptr, ptr %8, align 8, !dbg !4815
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !4815
  %T_cast = load ptr, ptr %9, align 8, !dbg !4815
  %p0116 = load ptr, ptr %p0, align 8, !dbg !4815
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !4815
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4815
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.shape = load ptr, ptr %10, align 8, !dbg !4815
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4815
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.strides = load ptr, ptr %11, align 8, !dbg !4815
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4815
  %dev_id = load i32, ptr %12, align 4, !dbg !4815
  %p1117 = load ptr, ptr %p1, align 8, !dbg !4815
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !4815
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4815
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.shape = load ptr, ptr %13, align 8, !dbg !4815
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4815
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.strides = load ptr, ptr %14, align 8, !dbg !4815
  %p2119 = load ptr, ptr %p2, align 8, !dbg !4815
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !4815
  %p3120 = load ptr, ptr %p3, align 8, !dbg !4815
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !4815
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !4815
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !4815
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !4815
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.shape = load ptr, ptr %15, align 8, !dbg !4815
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !4815
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.strides = load ptr, ptr %16, align 8, !dbg !4815
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !4815

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %17(ptr nonnull @.str.1468), !dbg !4815
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !4815

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %18(ptr nonnull @.str.1469), !dbg !4815
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !4815

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %19(ptr nonnull @.str.1470), !dbg !4815
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !4815

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %20(ptr nonnull @.str.1471), !dbg !4815
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !4815

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %21(ptr nonnull @.str.1472), !dbg !4815
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4815
  %23 = load i32, ptr %22, align 4, !dbg !4815
  %24 = icmp eq i32 %23, 5, !dbg !4815
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !4815, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %25(ptr nonnull @.str.1473), !dbg !4815
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4815
  %27 = load i16, ptr %26, align 2, !dbg !4815
  %28 = icmp eq i16 %27, 1, !dbg !4815
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4815
  %30 = load i8, ptr %29, align 1, !dbg !4815
  %31 = icmp eq i8 %30, 8, !dbg !4815
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4815
  %33 = load i8, ptr %32, align 1, !dbg !4815
  %34 = icmp eq i8 %33, 0, !dbg !4815
  %35 = and i1 %31, %34, !dbg !4815
  %36 = and i1 %28, %35, !dbg !4815
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !4815, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %37(ptr nonnull @.str.1474), !dbg !4815
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.shape, align 8, !dbg !4815, !tbaa !4838
  %39 = and i64 %38, 4294967295, !dbg !4815
  %40 = icmp eq i64 %39, 1, !dbg !4815
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !4815, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %41(ptr nonnull @.str.1475), !dbg !4815
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.shape, i64 1, !dbg !4815
  %43 = load i64, ptr %42, align 8, !dbg !4815, !tbaa !4848
  %44 = and i64 %43, 4294967295, !dbg !4815
  %45 = icmp eq i64 %44, 256, !dbg !4815
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !4815, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %46(ptr nonnull @.str.1476), !dbg !4815
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.shape, i64 2, !dbg !4815
  %48 = load i64, ptr %47, align 8, !dbg !4815, !tbaa !4850
  %49 = and i64 %48, 4294967295, !dbg !4815
  %50 = icmp eq i64 %49, 14, !dbg !4815
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !4815, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %51(ptr nonnull @.str.1477), !dbg !4815
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.shape, i64 3, !dbg !4815
  %53 = load i64, ptr %52, align 8, !dbg !4815, !tbaa !4853
  %54 = and i64 %53, 4294967295, !dbg !4815
  %55 = icmp eq i64 %54, 14, !dbg !4815
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !4815, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %56(ptr nonnull @.str.1478), !dbg !4815
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.shape, i64 4, !dbg !4815
  %58 = load i64, ptr %57, align 8, !dbg !4815, !tbaa !4855
  %59 = and i64 %58, 4294967295, !dbg !4815
  %60 = icmp eq i64 %59, 4, !dbg !4815
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !4815, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %61(ptr nonnull @.str.1479), !dbg !4815
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.strides, null, !dbg !4815
  br i1 %.not, label %if_end, label %if_then, !dbg !4815, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.strides, i64 1, !dbg !4815
  %63 = load i64, ptr %62, align 8, !dbg !4815, !tbaa !4859
  %64 = and i64 %63, 4294967295, !dbg !4815
  %65 = icmp eq i64 %64, 784, !dbg !4815
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.strides, i64 2, !dbg !4815
  %67 = load i64, ptr %66, align 8, !dbg !4815, !tbaa !4869
  %68 = and i64 %67, 4294967295, !dbg !4815
  %69 = icmp eq i64 %68, 56, !dbg !4815
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.strides, i64 3, !dbg !4815
  %71 = load i64, ptr %70, align 8, !dbg !4815, !tbaa !4872
  %72 = and i64 %71, 4294967295, !dbg !4815
  %73 = icmp eq i64 %72, 4, !dbg !4815
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p0.strides, i64 4, !dbg !4815
  %75 = load i64, ptr %74, align 8, !dbg !4815, !tbaa !4874
  %76 = and i64 %75, 4294967295, !dbg !4815
  %77 = icmp eq i64 %76, 1, !dbg !4815
  %78 = and i1 %73, %77, !dbg !4815
  %79 = and i1 %69, %78, !dbg !4815
  %80 = and i1 %65, %79, !dbg !4815
  br i1 %80, label %if_end, label %assert_fail32, !dbg !4815, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4815
  %82 = load i64, ptr %81, align 8, !dbg !4815
  %83 = icmp eq i64 %82, 0, !dbg !4815
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !4815, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %84(ptr nonnull @.str.1480), !dbg !4815
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %85(ptr nonnull @.str.1481), !dbg !4815
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4815
  %87 = load i32, ptr %86, align 4, !dbg !4815
  %88 = icmp eq i32 %87, 1, !dbg !4815
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !4815, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %89(ptr nonnull @.str.1482), !dbg !4815
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4815
  %91 = load i32, ptr %90, align 4, !dbg !4815
  %92 = icmp eq i32 %91, 6, !dbg !4815
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !4815, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %93(ptr nonnull @.str.1483), !dbg !4815
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4815
  %95 = load i16, ptr %94, align 2, !dbg !4815
  %96 = icmp eq i16 %95, 1, !dbg !4815
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4815
  %98 = load i8, ptr %97, align 1, !dbg !4815
  %99 = icmp eq i8 %98, 8, !dbg !4815
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4815
  %101 = load i8, ptr %100, align 1, !dbg !4815
  %102 = icmp eq i8 %101, 0, !dbg !4815
  %103 = and i1 %99, %102, !dbg !4815
  %104 = and i1 %96, %103, !dbg !4815
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !4815, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %105(ptr nonnull @.str.1484), !dbg !4815
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.shape, align 8, !dbg !4815, !tbaa !4878
  %107 = and i64 %106, 4294967295, !dbg !4815
  %108 = icmp eq i64 %107, 128, !dbg !4815
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !4815, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %109(ptr nonnull @.str.1485), !dbg !4815
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.shape, i64 1, !dbg !4815
  %111 = load i64, ptr %110, align 8, !dbg !4815, !tbaa !4888
  %112 = and i64 %111, 4294967295, !dbg !4815
  %113 = icmp eq i64 %112, 256, !dbg !4815
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !4815, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %114(ptr nonnull @.str.1486), !dbg !4815
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.shape, i64 2, !dbg !4815
  %116 = load i64, ptr %115, align 8, !dbg !4815, !tbaa !4890
  %117 = and i64 %116, 4294967295, !dbg !4815
  %118 = icmp eq i64 %117, 1, !dbg !4815
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !4815, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %119(ptr nonnull @.str.1487), !dbg !4815
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.shape, i64 3, !dbg !4815
  %121 = load i64, ptr %120, align 8, !dbg !4815, !tbaa !4893
  %122 = and i64 %121, 4294967295, !dbg !4815
  %123 = icmp eq i64 %122, 1, !dbg !4815
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !4815, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %124(ptr nonnull @.str.1488), !dbg !4815
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.shape, i64 4, !dbg !4815
  %126 = load i64, ptr %125, align 8, !dbg !4815, !tbaa !4895
  %127 = and i64 %126, 4294967295, !dbg !4815
  %128 = icmp eq i64 %127, 4, !dbg !4815
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !4815, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %129(ptr nonnull @.str.1489), !dbg !4815
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.shape, i64 5, !dbg !4815
  %131 = load i64, ptr %130, align 8, !dbg !4815, !tbaa !4899
  %132 = and i64 %131, 4294967295, !dbg !4815
  %133 = icmp eq i64 %132, 4, !dbg !4815
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !4815, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %134(ptr nonnull @.str.1490), !dbg !4815
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.strides, null, !dbg !4815
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !4815, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.strides, align 8, !dbg !4815, !tbaa !4901
  %136 = and i64 %135, 4294967295, !dbg !4815
  %137 = icmp eq i64 %136, 4096, !dbg !4815
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.strides, i64 1, !dbg !4815
  %139 = load i64, ptr %138, align 8, !dbg !4815, !tbaa !4911
  %140 = and i64 %139, 4294967295, !dbg !4815
  %141 = icmp eq i64 %140, 16, !dbg !4815
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.strides, i64 4, !dbg !4815
  %143 = load i64, ptr %142, align 8, !dbg !4815, !tbaa !4913
  %144 = and i64 %143, 4294967295, !dbg !4815
  %145 = icmp eq i64 %144, 4, !dbg !4815
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.p1.strides, i64 5, !dbg !4815
  %147 = load i64, ptr %146, align 8, !dbg !4815, !tbaa !4917
  %148 = and i64 %147, 4294967295, !dbg !4815
  %149 = icmp eq i64 %148, 1, !dbg !4815
  %150 = and i1 %145, %149, !dbg !4815
  %151 = and i1 %141, %150, !dbg !4815
  %152 = and i1 %137, %151, !dbg !4815
  br i1 %152, label %if_end57, label %assert_fail58, !dbg !4815, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4815
  %154 = load i64, ptr %153, align 8, !dbg !4815
  %155 = icmp eq i64 %154, 0, !dbg !4815
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !4815, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %156(ptr nonnull @.str.1491), !dbg !4815
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %157(ptr nonnull @.str.1492), !dbg !4815
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %158 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4815
  %159 = load i32, ptr %158, align 4, !dbg !4815
  %160 = icmp eq i32 %159, 1, !dbg !4815
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !4815, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %161(ptr nonnull @.str.1493), !dbg !4815
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4815
  %163 = load i32, ptr %162, align 4, !dbg !4815
  %164 = icmp eq i32 %dev_id, %163, !dbg !4815
  br i1 %164, label %assert_end65, label %assert_fail64, !dbg !4815, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %165(ptr nonnull @.str.1494), !dbg !4815
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %166 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !4815
  %167 = load i32, ptr %166, align 4, !dbg !4815
  %168 = icmp eq i32 %167, 0, !dbg !4815
  br i1 %168, label %assert_end69, label %assert_fail66, !dbg !4815, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %169(ptr nonnull @.str.1495), !dbg !4815
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !4815
  %171 = load i16, ptr %170, align 2, !dbg !4815
  %172 = icmp eq i16 %171, 1, !dbg !4815
  %173 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !4815
  %174 = load i8, ptr %173, align 1, !dbg !4815
  %175 = icmp eq i8 %174, 16, !dbg !4815
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !4815
  %177 = load i8, ptr %176, align 1, !dbg !4815
  %178 = icmp eq i8 %177, 0, !dbg !4815
  %179 = and i1 %175, %178, !dbg !4815
  %180 = and i1 %172, %179, !dbg !4815
  br i1 %180, label %assert_end71, label %assert_fail70, !dbg !4815, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %181(ptr nonnull @.str.1496), !dbg !4815
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !4815
  %183 = load i64, ptr %182, align 8, !dbg !4815
  %184 = icmp eq i64 %183, 0, !dbg !4815
  br i1 %184, label %assert_end73, label %assert_fail72, !dbg !4815, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %185(ptr nonnull @.str.1497), !dbg !4815
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !4815
  %187 = load i32, ptr %186, align 4, !dbg !4815
  %188 = icmp eq i32 %187, 1, !dbg !4815
  br i1 %188, label %assert_end75, label %assert_fail74, !dbg !4815, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %189(ptr nonnull @.str.1498), !dbg !4815
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !4815
  %191 = load i32, ptr %190, align 4, !dbg !4815
  %192 = icmp eq i32 %dev_id, %191, !dbg !4815
  br i1 %192, label %assert_end77, label %assert_fail76, !dbg !4815, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %193(ptr nonnull @.str.1499), !dbg !4815
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %194 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !4815
  %195 = load i32, ptr %194, align 4, !dbg !4815
  %196 = icmp eq i32 %195, 0, !dbg !4815
  br i1 %196, label %assert_end81, label %assert_fail78, !dbg !4815, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %197(ptr nonnull @.str.1500), !dbg !4815
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %198 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !4815
  %199 = load i16, ptr %198, align 2, !dbg !4815
  %200 = icmp eq i16 %199, 1, !dbg !4815
  %201 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !4815
  %202 = load i8, ptr %201, align 1, !dbg !4815
  %203 = icmp eq i8 %202, 16, !dbg !4815
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !4815
  %205 = load i8, ptr %204, align 1, !dbg !4815
  %206 = icmp eq i8 %205, 0, !dbg !4815
  %207 = and i1 %203, %206, !dbg !4815
  %208 = and i1 %200, %207, !dbg !4815
  br i1 %208, label %assert_end83, label %assert_fail82, !dbg !4815, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %209(ptr nonnull @.str.1501), !dbg !4815
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %210 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !4815
  %211 = load i64, ptr %210, align 8, !dbg !4815
  %212 = icmp eq i64 %211, 0, !dbg !4815
  br i1 %212, label %assert_end85, label %assert_fail84, !dbg !4815, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %213(ptr nonnull @.str.1502), !dbg !4815
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !4815
  %215 = load i32, ptr %214, align 4, !dbg !4815
  %216 = icmp eq i32 %215, 1, !dbg !4815
  br i1 %216, label %assert_end87, label %assert_fail86, !dbg !4815, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %217(ptr nonnull @.str.1503), !dbg !4815
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %218 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !4815
  %219 = load i32, ptr %218, align 4, !dbg !4815
  %220 = icmp eq i32 %dev_id, %219, !dbg !4815
  br i1 %220, label %assert_end89, label %assert_fail88, !dbg !4815, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %221 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %221(ptr nonnull @.str.1504), !dbg !4815
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %222 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !4815
  %223 = load i32, ptr %222, align 4, !dbg !4815
  %224 = icmp eq i32 %223, 5, !dbg !4815
  br i1 %224, label %assert_end93, label %assert_fail90, !dbg !4815, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %225 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %225(ptr nonnull @.str.1505), !dbg !4815
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %226 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !4815
  %227 = load i16, ptr %226, align 2, !dbg !4815
  %228 = icmp eq i16 %227, 1, !dbg !4815
  %229 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !4815
  %230 = load i8, ptr %229, align 1, !dbg !4815
  %231 = icmp eq i8 %230, 8, !dbg !4815
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !4815
  %233 = load i8, ptr %232, align 1, !dbg !4815
  %234 = icmp eq i8 %233, 0, !dbg !4815
  %235 = and i1 %231, %234, !dbg !4815
  %236 = and i1 %228, %235, !dbg !4815
  br i1 %236, label %assert_end95, label %assert_fail94, !dbg !4815, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %237(ptr nonnull @.str.1506), !dbg !4815
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %238 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.shape, align 8, !dbg !4815, !tbaa !4919
  %239 = and i64 %238, 4294967295, !dbg !4815
  %240 = icmp eq i64 %239, 1, !dbg !4815
  br i1 %240, label %assert_end97, label %assert_fail96, !dbg !4815, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %241(ptr nonnull @.str.1507), !dbg !4815
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.shape, i64 1, !dbg !4815
  %243 = load i64, ptr %242, align 8, !dbg !4815, !tbaa !4929
  %244 = and i64 %243, 4294967295, !dbg !4815
  %245 = icmp eq i64 %244, 128, !dbg !4815
  br i1 %245, label %assert_end99, label %assert_fail98, !dbg !4815, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %246(ptr nonnull @.str.1508), !dbg !4815
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.shape, i64 2, !dbg !4815
  %248 = load i64, ptr %247, align 8, !dbg !4815, !tbaa !4931
  %249 = and i64 %248, 4294967295, !dbg !4815
  %250 = icmp eq i64 %249, 14, !dbg !4815
  br i1 %250, label %assert_end101, label %assert_fail100, !dbg !4815, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %251(ptr nonnull @.str.1509), !dbg !4815
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.shape, i64 3, !dbg !4815
  %253 = load i64, ptr %252, align 8, !dbg !4815, !tbaa !4934
  %254 = and i64 %253, 4294967295, !dbg !4815
  %255 = icmp eq i64 %254, 14, !dbg !4815
  br i1 %255, label %assert_end103, label %assert_fail102, !dbg !4815, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %256(ptr nonnull @.str.1510), !dbg !4815
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.shape, i64 4, !dbg !4815
  %258 = load i64, ptr %257, align 8, !dbg !4815, !tbaa !4936
  %259 = and i64 %258, 4294967295, !dbg !4815
  %260 = icmp eq i64 %259, 4, !dbg !4815
  br i1 %260, label %assert_end105, label %assert_fail104, !dbg !4815, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %261(ptr nonnull @.str.1511), !dbg !4815
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.strides, null, !dbg !4815
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !4815, !prof !59

if_then106:                                       ; preds = %assert_end105
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.strides, i64 1, !dbg !4815
  %263 = load i64, ptr %262, align 8, !dbg !4815, !tbaa !4940
  %264 = and i64 %263, 4294967295, !dbg !4815
  %265 = icmp eq i64 %264, 784, !dbg !4815
  %266 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.strides, i64 2, !dbg !4815
  %267 = load i64, ptr %266, align 8, !dbg !4815, !tbaa !4950
  %268 = and i64 %267, 4294967295, !dbg !4815
  %269 = icmp eq i64 %268, 56, !dbg !4815
  %270 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.strides, i64 3, !dbg !4815
  %271 = load i64, ptr %270, align 8, !dbg !4815, !tbaa !4953
  %272 = and i64 %271, 4294967295, !dbg !4815
  %273 = icmp eq i64 %272, 4, !dbg !4815
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16.T_cast.strides, i64 4, !dbg !4815
  %275 = load i64, ptr %274, align 8, !dbg !4815, !tbaa !4955
  %276 = and i64 %275, 4294967295, !dbg !4815
  %277 = icmp eq i64 %276, 1, !dbg !4815
  %278 = and i1 %273, %277, !dbg !4815
  %279 = and i1 %269, %278, !dbg !4815
  %280 = and i1 %265, %279, !dbg !4815
  br i1 %280, label %if_end107, label %assert_fail108, !dbg !4815, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %281 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !4815
  %282 = load i64, ptr %281, align 8, !dbg !4815
  %283 = icmp eq i64 %282, 0, !dbg !4815
  br i1 %283, label %assert_end111, label %assert_fail110, !dbg !4815, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %284(ptr nonnull @.str.1512), !dbg !4815
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %285 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %285(ptr nonnull @.str.1513), !dbg !4815
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %286 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !4815
  %287 = load i32, ptr %286, align 4, !dbg !4815
  %288 = icmp eq i32 %287, 1, !dbg !4815
  br i1 %288, label %assert_end113, label %assert_fail112, !dbg !4815, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %289(ptr nonnull @.str.1514), !dbg !4815
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %290 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !4815
  %291 = load i32, ptr %290, align 4, !dbg !4815
  %292 = icmp eq i32 %dev_id, %291, !dbg !4815
  br i1 %292, label %assert_end115, label %assert_fail114, !dbg !4815, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %293 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4815, !tbaa !19
  tail call void %293(ptr nonnull @.str.1515), !dbg !4815
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %294 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_compute_(ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !4815
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4959 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4961, metadata !DIExpression()), !dbg !4967
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4962, metadata !DIExpression()), !dbg !4967
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4963, metadata !DIExpression()), !dbg !4967
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4964, metadata !DIExpression()), !dbg !4967
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4965, metadata !DIExpression()), !dbg !4967
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4966, metadata !DIExpression()), !dbg !4967
  %0 = icmp eq i32 %num_args, 5, !dbg !4967
  br i1 %0, label %assert_end, label %assert_fail, !dbg !4967, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %304, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !4967

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %1(ptr nonnull @.str.1517), !dbg !4967
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4967, !tbaa !4968
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4967
  %p1.code = load i32, ptr %2, align 4, !dbg !4967, !tbaa !4979
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4967
  %p2.code = load i32, ptr %3, align 4, !dbg !4967, !tbaa !4981
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !4967
  %p3.code = load i32, ptr %4, align 4, !dbg !4967, !tbaa !4984
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !4967
  %T_cast.code = load i32, ptr %5, align 4, !dbg !4967, !tbaa !4986
  %p0 = load ptr, ptr %args, align 8, !dbg !4967
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4967
  %p1 = load ptr, ptr %6, align 8, !dbg !4967
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4967
  %p2 = load ptr, ptr %7, align 8, !dbg !4967
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !4967
  %p3 = load ptr, ptr %8, align 8, !dbg !4967
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !4967
  %T_cast = load ptr, ptr %9, align 8, !dbg !4967
  %p0116 = load ptr, ptr %p0, align 8, !dbg !4967
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !4967
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4967
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.shape = load ptr, ptr %10, align 8, !dbg !4967
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4967
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.strides = load ptr, ptr %11, align 8, !dbg !4967
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4967
  %dev_id = load i32, ptr %12, align 4, !dbg !4967
  %p1117 = load ptr, ptr %p1, align 8, !dbg !4967
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !4967
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4967
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.shape = load ptr, ptr %13, align 8, !dbg !4967
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4967
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.strides = load ptr, ptr %14, align 8, !dbg !4967
  %p2119 = load ptr, ptr %p2, align 8, !dbg !4967
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !4967
  %p3120 = load ptr, ptr %p3, align 8, !dbg !4967
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !4967
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !4967
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !4967
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !4967
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.shape = load ptr, ptr %15, align 8, !dbg !4967
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !4967
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.strides = load ptr, ptr %16, align 8, !dbg !4967
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !4967

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %17(ptr nonnull @.str.1518), !dbg !4967
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !4967

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %18(ptr nonnull @.str.1519), !dbg !4967
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !4967

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %19(ptr nonnull @.str.1520), !dbg !4967
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !4967

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %20(ptr nonnull @.str.1521), !dbg !4967
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !4967

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %21(ptr nonnull @.str.1522), !dbg !4967
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4967
  %23 = load i32, ptr %22, align 4, !dbg !4967
  %24 = icmp eq i32 %23, 5, !dbg !4967
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !4967, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %25(ptr nonnull @.str.1523), !dbg !4967
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4967
  %27 = load i16, ptr %26, align 2, !dbg !4967
  %28 = icmp eq i16 %27, 1, !dbg !4967
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4967
  %30 = load i8, ptr %29, align 1, !dbg !4967
  %31 = icmp eq i8 %30, 8, !dbg !4967
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4967
  %33 = load i8, ptr %32, align 1, !dbg !4967
  %34 = icmp eq i8 %33, 0, !dbg !4967
  %35 = and i1 %31, %34, !dbg !4967
  %36 = and i1 %28, %35, !dbg !4967
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !4967, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %37(ptr nonnull @.str.1524), !dbg !4967
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.shape, align 8, !dbg !4967, !tbaa !4990
  %39 = and i64 %38, 4294967295, !dbg !4967
  %40 = icmp eq i64 %39, 1, !dbg !4967
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !4967, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %41(ptr nonnull @.str.1525), !dbg !4967
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.shape, i64 1, !dbg !4967
  %43 = load i64, ptr %42, align 8, !dbg !4967, !tbaa !5000
  %44 = and i64 %43, 4294967295, !dbg !4967
  %45 = icmp eq i64 %44, 128, !dbg !4967
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !4967, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %46(ptr nonnull @.str.1526), !dbg !4967
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.shape, i64 2, !dbg !4967
  %48 = load i64, ptr %47, align 8, !dbg !4967, !tbaa !5002
  %49 = and i64 %48, 4294967295, !dbg !4967
  %50 = icmp eq i64 %49, 14, !dbg !4967
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !4967, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %51(ptr nonnull @.str.1527), !dbg !4967
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.shape, i64 3, !dbg !4967
  %53 = load i64, ptr %52, align 8, !dbg !4967, !tbaa !5005
  %54 = and i64 %53, 4294967295, !dbg !4967
  %55 = icmp eq i64 %54, 14, !dbg !4967
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !4967, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %56(ptr nonnull @.str.1528), !dbg !4967
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.shape, i64 4, !dbg !4967
  %58 = load i64, ptr %57, align 8, !dbg !4967, !tbaa !5007
  %59 = and i64 %58, 4294967295, !dbg !4967
  %60 = icmp eq i64 %59, 4, !dbg !4967
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !4967, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %61(ptr nonnull @.str.1529), !dbg !4967
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.strides, null, !dbg !4967
  br i1 %.not, label %if_end, label %if_then, !dbg !4967, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.strides, i64 1, !dbg !4967
  %63 = load i64, ptr %62, align 8, !dbg !4967, !tbaa !5011
  %64 = and i64 %63, 4294967295, !dbg !4967
  %65 = icmp eq i64 %64, 784, !dbg !4967
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.strides, i64 2, !dbg !4967
  %67 = load i64, ptr %66, align 8, !dbg !4967, !tbaa !5021
  %68 = and i64 %67, 4294967295, !dbg !4967
  %69 = icmp eq i64 %68, 56, !dbg !4967
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.strides, i64 3, !dbg !4967
  %71 = load i64, ptr %70, align 8, !dbg !4967, !tbaa !5024
  %72 = and i64 %71, 4294967295, !dbg !4967
  %73 = icmp eq i64 %72, 4, !dbg !4967
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p0.strides, i64 4, !dbg !4967
  %75 = load i64, ptr %74, align 8, !dbg !4967, !tbaa !5026
  %76 = and i64 %75, 4294967295, !dbg !4967
  %77 = icmp eq i64 %76, 1, !dbg !4967
  %78 = and i1 %73, %77, !dbg !4967
  %79 = and i1 %69, %78, !dbg !4967
  %80 = and i1 %65, %79, !dbg !4967
  br i1 %80, label %if_end, label %assert_fail32, !dbg !4967, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4967
  %82 = load i64, ptr %81, align 8, !dbg !4967
  %83 = icmp eq i64 %82, 0, !dbg !4967
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !4967, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %84(ptr nonnull @.str.1530), !dbg !4967
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %85(ptr nonnull @.str.1531), !dbg !4967
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4967
  %87 = load i32, ptr %86, align 4, !dbg !4967
  %88 = icmp eq i32 %87, 1, !dbg !4967
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !4967, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %89(ptr nonnull @.str.1532), !dbg !4967
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4967
  %91 = load i32, ptr %90, align 4, !dbg !4967
  %92 = icmp eq i32 %91, 6, !dbg !4967
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !4967, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %93(ptr nonnull @.str.1533), !dbg !4967
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4967
  %95 = load i16, ptr %94, align 2, !dbg !4967
  %96 = icmp eq i16 %95, 1, !dbg !4967
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4967
  %98 = load i8, ptr %97, align 1, !dbg !4967
  %99 = icmp eq i8 %98, 8, !dbg !4967
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4967
  %101 = load i8, ptr %100, align 1, !dbg !4967
  %102 = icmp eq i8 %101, 0, !dbg !4967
  %103 = and i1 %99, %102, !dbg !4967
  %104 = and i1 %96, %103, !dbg !4967
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !4967, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %105(ptr nonnull @.str.1534), !dbg !4967
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.shape, align 8, !dbg !4967, !tbaa !5030
  %107 = and i64 %106, 4294967295, !dbg !4967
  %108 = icmp eq i64 %107, 128, !dbg !4967
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !4967, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %109(ptr nonnull @.str.1535), !dbg !4967
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.shape, i64 1, !dbg !4967
  %111 = load i64, ptr %110, align 8, !dbg !4967, !tbaa !5040
  %112 = and i64 %111, 4294967295, !dbg !4967
  %113 = icmp eq i64 %112, 128, !dbg !4967
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !4967, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %114(ptr nonnull @.str.1536), !dbg !4967
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.shape, i64 2, !dbg !4967
  %116 = load i64, ptr %115, align 8, !dbg !4967, !tbaa !5042
  %117 = and i64 %116, 4294967295, !dbg !4967
  %118 = icmp eq i64 %117, 3, !dbg !4967
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !4967, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %119(ptr nonnull @.str.1537), !dbg !4967
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.shape, i64 3, !dbg !4967
  %121 = load i64, ptr %120, align 8, !dbg !4967, !tbaa !5045
  %122 = and i64 %121, 4294967295, !dbg !4967
  %123 = icmp eq i64 %122, 3, !dbg !4967
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !4967, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %124(ptr nonnull @.str.1538), !dbg !4967
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.shape, i64 4, !dbg !4967
  %126 = load i64, ptr %125, align 8, !dbg !4967, !tbaa !5047
  %127 = and i64 %126, 4294967295, !dbg !4967
  %128 = icmp eq i64 %127, 4, !dbg !4967
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !4967, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %129(ptr nonnull @.str.1539), !dbg !4967
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.shape, i64 5, !dbg !4967
  %131 = load i64, ptr %130, align 8, !dbg !4967, !tbaa !5051
  %132 = and i64 %131, 4294967295, !dbg !4967
  %133 = icmp eq i64 %132, 4, !dbg !4967
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !4967, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %134(ptr nonnull @.str.1540), !dbg !4967
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.strides, null, !dbg !4967
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !4967, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.strides, align 8, !dbg !4967, !tbaa !5053
  %136 = and i64 %135, 4294967295, !dbg !4967
  %137 = icmp eq i64 %136, 18432, !dbg !4967
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.strides, i64 1, !dbg !4967
  %139 = load i64, ptr %138, align 8, !dbg !4967, !tbaa !5063
  %140 = and i64 %139, 4294967295, !dbg !4967
  %141 = icmp eq i64 %140, 144, !dbg !4967
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.strides, i64 2, !dbg !4967
  %143 = load i64, ptr %142, align 8, !dbg !4967, !tbaa !5065
  %144 = and i64 %143, 4294967295, !dbg !4967
  %145 = icmp eq i64 %144, 48, !dbg !4967
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.strides, i64 3, !dbg !4967
  %147 = load i64, ptr %146, align 8, !dbg !4967, !tbaa !5068
  %148 = and i64 %147, 4294967295, !dbg !4967
  %149 = icmp eq i64 %148, 16, !dbg !4967
  %150 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.strides, i64 4, !dbg !4967
  %151 = load i64, ptr %150, align 8, !dbg !4967, !tbaa !5070
  %152 = and i64 %151, 4294967295, !dbg !4967
  %153 = icmp eq i64 %152, 4, !dbg !4967
  %154 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.p1.strides, i64 5, !dbg !4967
  %155 = load i64, ptr %154, align 8, !dbg !4967, !tbaa !5074
  %156 = and i64 %155, 4294967295, !dbg !4967
  %157 = icmp eq i64 %156, 1, !dbg !4967
  %158 = and i1 %153, %157, !dbg !4967
  %159 = and i1 %149, %158, !dbg !4967
  %160 = and i1 %145, %159, !dbg !4967
  %161 = and i1 %141, %160, !dbg !4967
  %162 = and i1 %137, %161, !dbg !4967
  br i1 %162, label %if_end57, label %assert_fail58, !dbg !4967, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %163 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4967
  %164 = load i64, ptr %163, align 8, !dbg !4967
  %165 = icmp eq i64 %164, 0, !dbg !4967
  br i1 %165, label %assert_end61, label %assert_fail60, !dbg !4967, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %166(ptr nonnull @.str.1541), !dbg !4967
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %167 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %167(ptr nonnull @.str.1542), !dbg !4967
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %168 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4967
  %169 = load i32, ptr %168, align 4, !dbg !4967
  %170 = icmp eq i32 %169, 1, !dbg !4967
  br i1 %170, label %assert_end63, label %assert_fail62, !dbg !4967, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %171 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %171(ptr nonnull @.str.1543), !dbg !4967
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %172 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4967
  %173 = load i32, ptr %172, align 4, !dbg !4967
  %174 = icmp eq i32 %dev_id, %173, !dbg !4967
  br i1 %174, label %assert_end65, label %assert_fail64, !dbg !4967, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %175(ptr nonnull @.str.1544), !dbg !4967
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !4967
  %177 = load i32, ptr %176, align 4, !dbg !4967
  %178 = icmp eq i32 %177, 0, !dbg !4967
  br i1 %178, label %assert_end69, label %assert_fail66, !dbg !4967, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %179(ptr nonnull @.str.1545), !dbg !4967
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !4967
  %181 = load i16, ptr %180, align 2, !dbg !4967
  %182 = icmp eq i16 %181, 1, !dbg !4967
  %183 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !4967
  %184 = load i8, ptr %183, align 1, !dbg !4967
  %185 = icmp eq i8 %184, 16, !dbg !4967
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !4967
  %187 = load i8, ptr %186, align 1, !dbg !4967
  %188 = icmp eq i8 %187, 0, !dbg !4967
  %189 = and i1 %185, %188, !dbg !4967
  %190 = and i1 %182, %189, !dbg !4967
  br i1 %190, label %assert_end71, label %assert_fail70, !dbg !4967, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %191(ptr nonnull @.str.1546), !dbg !4967
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %192 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !4967
  %193 = load i64, ptr %192, align 8, !dbg !4967
  %194 = icmp eq i64 %193, 0, !dbg !4967
  br i1 %194, label %assert_end73, label %assert_fail72, !dbg !4967, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %195 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %195(ptr nonnull @.str.1547), !dbg !4967
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %196 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !4967
  %197 = load i32, ptr %196, align 4, !dbg !4967
  %198 = icmp eq i32 %197, 1, !dbg !4967
  br i1 %198, label %assert_end75, label %assert_fail74, !dbg !4967, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %199(ptr nonnull @.str.1548), !dbg !4967
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %200 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !4967
  %201 = load i32, ptr %200, align 4, !dbg !4967
  %202 = icmp eq i32 %dev_id, %201, !dbg !4967
  br i1 %202, label %assert_end77, label %assert_fail76, !dbg !4967, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %203(ptr nonnull @.str.1549), !dbg !4967
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !4967
  %205 = load i32, ptr %204, align 4, !dbg !4967
  %206 = icmp eq i32 %205, 0, !dbg !4967
  br i1 %206, label %assert_end81, label %assert_fail78, !dbg !4967, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %207(ptr nonnull @.str.1550), !dbg !4967
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %208 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !4967
  %209 = load i16, ptr %208, align 2, !dbg !4967
  %210 = icmp eq i16 %209, 1, !dbg !4967
  %211 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !4967
  %212 = load i8, ptr %211, align 1, !dbg !4967
  %213 = icmp eq i8 %212, 16, !dbg !4967
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !4967
  %215 = load i8, ptr %214, align 1, !dbg !4967
  %216 = icmp eq i8 %215, 0, !dbg !4967
  %217 = and i1 %213, %216, !dbg !4967
  %218 = and i1 %210, %217, !dbg !4967
  br i1 %218, label %assert_end83, label %assert_fail82, !dbg !4967, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %219 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %219(ptr nonnull @.str.1551), !dbg !4967
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %220 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !4967
  %221 = load i64, ptr %220, align 8, !dbg !4967
  %222 = icmp eq i64 %221, 0, !dbg !4967
  br i1 %222, label %assert_end85, label %assert_fail84, !dbg !4967, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %223 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %223(ptr nonnull @.str.1552), !dbg !4967
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %224 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !4967
  %225 = load i32, ptr %224, align 4, !dbg !4967
  %226 = icmp eq i32 %225, 1, !dbg !4967
  br i1 %226, label %assert_end87, label %assert_fail86, !dbg !4967, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %227(ptr nonnull @.str.1553), !dbg !4967
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %228 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !4967
  %229 = load i32, ptr %228, align 4, !dbg !4967
  %230 = icmp eq i32 %dev_id, %229, !dbg !4967
  br i1 %230, label %assert_end89, label %assert_fail88, !dbg !4967, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %231 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %231(ptr nonnull @.str.1554), !dbg !4967
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !4967
  %233 = load i32, ptr %232, align 4, !dbg !4967
  %234 = icmp eq i32 %233, 5, !dbg !4967
  br i1 %234, label %assert_end93, label %assert_fail90, !dbg !4967, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %235 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %235(ptr nonnull @.str.1555), !dbg !4967
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %236 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !4967
  %237 = load i16, ptr %236, align 2, !dbg !4967
  %238 = icmp eq i16 %237, 1, !dbg !4967
  %239 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !4967
  %240 = load i8, ptr %239, align 1, !dbg !4967
  %241 = icmp eq i8 %240, 8, !dbg !4967
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !4967
  %243 = load i8, ptr %242, align 1, !dbg !4967
  %244 = icmp eq i8 %243, 0, !dbg !4967
  %245 = and i1 %241, %244, !dbg !4967
  %246 = and i1 %238, %245, !dbg !4967
  br i1 %246, label %assert_end95, label %assert_fail94, !dbg !4967, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %247 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %247(ptr nonnull @.str.1556), !dbg !4967
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %248 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.shape, align 8, !dbg !4967, !tbaa !5076
  %249 = and i64 %248, 4294967295, !dbg !4967
  %250 = icmp eq i64 %249, 1, !dbg !4967
  br i1 %250, label %assert_end97, label %assert_fail96, !dbg !4967, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %251(ptr nonnull @.str.1557), !dbg !4967
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.shape, i64 1, !dbg !4967
  %253 = load i64, ptr %252, align 8, !dbg !4967, !tbaa !5086
  %254 = and i64 %253, 4294967295, !dbg !4967
  %255 = icmp eq i64 %254, 128, !dbg !4967
  br i1 %255, label %assert_end99, label %assert_fail98, !dbg !4967, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %256(ptr nonnull @.str.1558), !dbg !4967
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.shape, i64 2, !dbg !4967
  %258 = load i64, ptr %257, align 8, !dbg !4967, !tbaa !5088
  %259 = and i64 %258, 4294967295, !dbg !4967
  %260 = icmp eq i64 %259, 7, !dbg !4967
  br i1 %260, label %assert_end101, label %assert_fail100, !dbg !4967, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %261(ptr nonnull @.str.1559), !dbg !4967
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.shape, i64 3, !dbg !4967
  %263 = load i64, ptr %262, align 8, !dbg !4967, !tbaa !5091
  %264 = and i64 %263, 4294967295, !dbg !4967
  %265 = icmp eq i64 %264, 7, !dbg !4967
  br i1 %265, label %assert_end103, label %assert_fail102, !dbg !4967, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %266(ptr nonnull @.str.1560), !dbg !4967
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.shape, i64 4, !dbg !4967
  %268 = load i64, ptr %267, align 8, !dbg !4967, !tbaa !5093
  %269 = and i64 %268, 4294967295, !dbg !4967
  %270 = icmp eq i64 %269, 4, !dbg !4967
  br i1 %270, label %assert_end105, label %assert_fail104, !dbg !4967, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %271 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %271(ptr nonnull @.str.1561), !dbg !4967
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.strides, null, !dbg !4967
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !4967, !prof !59

if_then106:                                       ; preds = %assert_end105
  %272 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.strides, i64 1, !dbg !4967
  %273 = load i64, ptr %272, align 8, !dbg !4967, !tbaa !5097
  %274 = and i64 %273, 4294967295, !dbg !4967
  %275 = icmp eq i64 %274, 196, !dbg !4967
  %276 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.strides, i64 2, !dbg !4967
  %277 = load i64, ptr %276, align 8, !dbg !4967, !tbaa !5107
  %278 = and i64 %277, 4294967295, !dbg !4967
  %279 = icmp eq i64 %278, 28, !dbg !4967
  %280 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.strides, i64 3, !dbg !4967
  %281 = load i64, ptr %280, align 8, !dbg !4967, !tbaa !5110
  %282 = and i64 %281, 4294967295, !dbg !4967
  %283 = icmp eq i64 %282, 4, !dbg !4967
  %284 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17.T_cast.strides, i64 4, !dbg !4967
  %285 = load i64, ptr %284, align 8, !dbg !4967, !tbaa !5112
  %286 = and i64 %285, 4294967295, !dbg !4967
  %287 = icmp eq i64 %286, 1, !dbg !4967
  %288 = and i1 %283, %287, !dbg !4967
  %289 = and i1 %279, %288, !dbg !4967
  %290 = and i1 %275, %289, !dbg !4967
  br i1 %290, label %if_end107, label %assert_fail108, !dbg !4967, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %291 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !4967
  %292 = load i64, ptr %291, align 8, !dbg !4967
  %293 = icmp eq i64 %292, 0, !dbg !4967
  br i1 %293, label %assert_end111, label %assert_fail110, !dbg !4967, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %294(ptr nonnull @.str.1562), !dbg !4967
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %295 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %295(ptr nonnull @.str.1563), !dbg !4967
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %296 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !4967
  %297 = load i32, ptr %296, align 4, !dbg !4967
  %298 = icmp eq i32 %297, 1, !dbg !4967
  br i1 %298, label %assert_end113, label %assert_fail112, !dbg !4967, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %299(ptr nonnull @.str.1564), !dbg !4967
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %300 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !4967
  %301 = load i32, ptr %300, align 4, !dbg !4967
  %302 = icmp eq i32 %dev_id, %301, !dbg !4967
  br i1 %302, label %assert_end115, label %assert_fail114, !dbg !4967, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %303 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4967, !tbaa !19
  tail call void %303(ptr nonnull @.str.1565), !dbg !4967
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %304 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_compute_(i32 %dev_id, ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !4967
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5116 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5118, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5119, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5120, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5121, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5122, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5123, metadata !DIExpression()), !dbg !5124
  %0 = icmp eq i32 %num_args, 5, !dbg !5124
  br i1 %0, label %assert_end, label %assert_fail, !dbg !5124, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %294, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !5124

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %1(ptr nonnull @.str.1568), !dbg !5124
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5124, !tbaa !5125
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5124
  %p1.code = load i32, ptr %2, align 4, !dbg !5124, !tbaa !5136
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5124
  %p2.code = load i32, ptr %3, align 4, !dbg !5124, !tbaa !5138
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !5124
  %p3.code = load i32, ptr %4, align 4, !dbg !5124, !tbaa !5141
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !5124
  %T_cast.code = load i32, ptr %5, align 4, !dbg !5124, !tbaa !5143
  %p0 = load ptr, ptr %args, align 8, !dbg !5124
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5124
  %p1 = load ptr, ptr %6, align 8, !dbg !5124
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5124
  %p2 = load ptr, ptr %7, align 8, !dbg !5124
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !5124
  %p3 = load ptr, ptr %8, align 8, !dbg !5124
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !5124
  %T_cast = load ptr, ptr %9, align 8, !dbg !5124
  %p0116 = load ptr, ptr %p0, align 8, !dbg !5124
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !5124
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5124
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.shape = load ptr, ptr %10, align 8, !dbg !5124
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5124
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.strides = load ptr, ptr %11, align 8, !dbg !5124
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5124
  %dev_id = load i32, ptr %12, align 4, !dbg !5124
  %p1117 = load ptr, ptr %p1, align 8, !dbg !5124
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !5124
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5124
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.shape = load ptr, ptr %13, align 8, !dbg !5124
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5124
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.strides = load ptr, ptr %14, align 8, !dbg !5124
  %p2119 = load ptr, ptr %p2, align 8, !dbg !5124
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !5124
  %p3120 = load ptr, ptr %p3, align 8, !dbg !5124
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !5124
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !5124
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !5124
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !5124
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.shape = load ptr, ptr %15, align 8, !dbg !5124
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !5124
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.strides = load ptr, ptr %16, align 8, !dbg !5124
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !5124

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %17(ptr nonnull @.str.1569), !dbg !5124
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !5124

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %18(ptr nonnull @.str.1570), !dbg !5124
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !5124

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %19(ptr nonnull @.str.1571), !dbg !5124
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !5124

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %20(ptr nonnull @.str.1572), !dbg !5124
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !5124

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %21(ptr nonnull @.str.1573), !dbg !5124
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5124
  %23 = load i32, ptr %22, align 4, !dbg !5124
  %24 = icmp eq i32 %23, 5, !dbg !5124
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !5124, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %25(ptr nonnull @.str.1574), !dbg !5124
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5124
  %27 = load i16, ptr %26, align 2, !dbg !5124
  %28 = icmp eq i16 %27, 1, !dbg !5124
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5124
  %30 = load i8, ptr %29, align 1, !dbg !5124
  %31 = icmp eq i8 %30, 8, !dbg !5124
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5124
  %33 = load i8, ptr %32, align 1, !dbg !5124
  %34 = icmp eq i8 %33, 0, !dbg !5124
  %35 = and i1 %31, %34, !dbg !5124
  %36 = and i1 %28, %35, !dbg !5124
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !5124, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %37(ptr nonnull @.str.1575), !dbg !5124
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.shape, align 8, !dbg !5124, !tbaa !5147
  %39 = and i64 %38, 4294967295, !dbg !5124
  %40 = icmp eq i64 %39, 1, !dbg !5124
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !5124, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %41(ptr nonnull @.str.1576), !dbg !5124
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.shape, i64 1, !dbg !5124
  %43 = load i64, ptr %42, align 8, !dbg !5124, !tbaa !5157
  %44 = and i64 %43, 4294967295, !dbg !5124
  %45 = icmp eq i64 %44, 128, !dbg !5124
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !5124, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %46(ptr nonnull @.str.1577), !dbg !5124
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.shape, i64 2, !dbg !5124
  %48 = load i64, ptr %47, align 8, !dbg !5124, !tbaa !5159
  %49 = and i64 %48, 4294967295, !dbg !5124
  %50 = icmp eq i64 %49, 7, !dbg !5124
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !5124, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %51(ptr nonnull @.str.1578), !dbg !5124
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.shape, i64 3, !dbg !5124
  %53 = load i64, ptr %52, align 8, !dbg !5124, !tbaa !5162
  %54 = and i64 %53, 4294967295, !dbg !5124
  %55 = icmp eq i64 %54, 7, !dbg !5124
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !5124, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %56(ptr nonnull @.str.1579), !dbg !5124
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.shape, i64 4, !dbg !5124
  %58 = load i64, ptr %57, align 8, !dbg !5124, !tbaa !5164
  %59 = and i64 %58, 4294967295, !dbg !5124
  %60 = icmp eq i64 %59, 4, !dbg !5124
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !5124, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %61(ptr nonnull @.str.1580), !dbg !5124
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.strides, null, !dbg !5124
  br i1 %.not, label %if_end, label %if_then, !dbg !5124, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.strides, i64 1, !dbg !5124
  %63 = load i64, ptr %62, align 8, !dbg !5124, !tbaa !5168
  %64 = and i64 %63, 4294967295, !dbg !5124
  %65 = icmp eq i64 %64, 196, !dbg !5124
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.strides, i64 2, !dbg !5124
  %67 = load i64, ptr %66, align 8, !dbg !5124, !tbaa !5178
  %68 = and i64 %67, 4294967295, !dbg !5124
  %69 = icmp eq i64 %68, 28, !dbg !5124
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.strides, i64 3, !dbg !5124
  %71 = load i64, ptr %70, align 8, !dbg !5124, !tbaa !5181
  %72 = and i64 %71, 4294967295, !dbg !5124
  %73 = icmp eq i64 %72, 4, !dbg !5124
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p0.strides, i64 4, !dbg !5124
  %75 = load i64, ptr %74, align 8, !dbg !5124, !tbaa !5183
  %76 = and i64 %75, 4294967295, !dbg !5124
  %77 = icmp eq i64 %76, 1, !dbg !5124
  %78 = and i1 %73, %77, !dbg !5124
  %79 = and i1 %69, %78, !dbg !5124
  %80 = and i1 %65, %79, !dbg !5124
  br i1 %80, label %if_end, label %assert_fail32, !dbg !5124, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5124
  %82 = load i64, ptr %81, align 8, !dbg !5124
  %83 = icmp eq i64 %82, 0, !dbg !5124
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !5124, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %84(ptr nonnull @.str.1581), !dbg !5124
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %85(ptr nonnull @.str.1582), !dbg !5124
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5124
  %87 = load i32, ptr %86, align 4, !dbg !5124
  %88 = icmp eq i32 %87, 1, !dbg !5124
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !5124, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %89(ptr nonnull @.str.1583), !dbg !5124
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5124
  %91 = load i32, ptr %90, align 4, !dbg !5124
  %92 = icmp eq i32 %91, 6, !dbg !5124
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !5124, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %93(ptr nonnull @.str.1584), !dbg !5124
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5124
  %95 = load i16, ptr %94, align 2, !dbg !5124
  %96 = icmp eq i16 %95, 1, !dbg !5124
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5124
  %98 = load i8, ptr %97, align 1, !dbg !5124
  %99 = icmp eq i8 %98, 8, !dbg !5124
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5124
  %101 = load i8, ptr %100, align 1, !dbg !5124
  %102 = icmp eq i8 %101, 0, !dbg !5124
  %103 = and i1 %99, %102, !dbg !5124
  %104 = and i1 %96, %103, !dbg !5124
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !5124, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %105(ptr nonnull @.str.1585), !dbg !5124
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.shape, align 8, !dbg !5124, !tbaa !5187
  %107 = and i64 %106, 4294967295, !dbg !5124
  %108 = icmp eq i64 %107, 512, !dbg !5124
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !5124, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %109(ptr nonnull @.str.1586), !dbg !5124
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.shape, i64 1, !dbg !5124
  %111 = load i64, ptr %110, align 8, !dbg !5124, !tbaa !5197
  %112 = and i64 %111, 4294967295, !dbg !5124
  %113 = icmp eq i64 %112, 128, !dbg !5124
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !5124, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %114(ptr nonnull @.str.1587), !dbg !5124
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.shape, i64 2, !dbg !5124
  %116 = load i64, ptr %115, align 8, !dbg !5124, !tbaa !5199
  %117 = and i64 %116, 4294967295, !dbg !5124
  %118 = icmp eq i64 %117, 1, !dbg !5124
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !5124, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %119(ptr nonnull @.str.1588), !dbg !5124
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.shape, i64 3, !dbg !5124
  %121 = load i64, ptr %120, align 8, !dbg !5124, !tbaa !5202
  %122 = and i64 %121, 4294967295, !dbg !5124
  %123 = icmp eq i64 %122, 1, !dbg !5124
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !5124, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %124(ptr nonnull @.str.1589), !dbg !5124
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.shape, i64 4, !dbg !5124
  %126 = load i64, ptr %125, align 8, !dbg !5124, !tbaa !5204
  %127 = and i64 %126, 4294967295, !dbg !5124
  %128 = icmp eq i64 %127, 4, !dbg !5124
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !5124, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %129(ptr nonnull @.str.1590), !dbg !5124
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.shape, i64 5, !dbg !5124
  %131 = load i64, ptr %130, align 8, !dbg !5124, !tbaa !5208
  %132 = and i64 %131, 4294967295, !dbg !5124
  %133 = icmp eq i64 %132, 4, !dbg !5124
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !5124, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %134(ptr nonnull @.str.1591), !dbg !5124
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.strides, null, !dbg !5124
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !5124, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.strides, align 8, !dbg !5124, !tbaa !5210
  %136 = and i64 %135, 4294967295, !dbg !5124
  %137 = icmp eq i64 %136, 2048, !dbg !5124
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.strides, i64 1, !dbg !5124
  %139 = load i64, ptr %138, align 8, !dbg !5124, !tbaa !5220
  %140 = and i64 %139, 4294967295, !dbg !5124
  %141 = icmp eq i64 %140, 16, !dbg !5124
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.strides, i64 4, !dbg !5124
  %143 = load i64, ptr %142, align 8, !dbg !5124, !tbaa !5222
  %144 = and i64 %143, 4294967295, !dbg !5124
  %145 = icmp eq i64 %144, 4, !dbg !5124
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.p1.strides, i64 5, !dbg !5124
  %147 = load i64, ptr %146, align 8, !dbg !5124, !tbaa !5226
  %148 = and i64 %147, 4294967295, !dbg !5124
  %149 = icmp eq i64 %148, 1, !dbg !5124
  %150 = and i1 %145, %149, !dbg !5124
  %151 = and i1 %141, %150, !dbg !5124
  %152 = and i1 %137, %151, !dbg !5124
  br i1 %152, label %if_end57, label %assert_fail58, !dbg !5124, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5124
  %154 = load i64, ptr %153, align 8, !dbg !5124
  %155 = icmp eq i64 %154, 0, !dbg !5124
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !5124, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %156(ptr nonnull @.str.1592), !dbg !5124
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %157(ptr nonnull @.str.1593), !dbg !5124
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %158 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5124
  %159 = load i32, ptr %158, align 4, !dbg !5124
  %160 = icmp eq i32 %159, 1, !dbg !5124
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !5124, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %161(ptr nonnull @.str.1594), !dbg !5124
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5124
  %163 = load i32, ptr %162, align 4, !dbg !5124
  %164 = icmp eq i32 %dev_id, %163, !dbg !5124
  br i1 %164, label %assert_end65, label %assert_fail64, !dbg !5124, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %165(ptr nonnull @.str.1595), !dbg !5124
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %166 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !5124
  %167 = load i32, ptr %166, align 4, !dbg !5124
  %168 = icmp eq i32 %167, 0, !dbg !5124
  br i1 %168, label %assert_end69, label %assert_fail66, !dbg !5124, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %169(ptr nonnull @.str.1596), !dbg !5124
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !5124
  %171 = load i16, ptr %170, align 2, !dbg !5124
  %172 = icmp eq i16 %171, 1, !dbg !5124
  %173 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !5124
  %174 = load i8, ptr %173, align 1, !dbg !5124
  %175 = icmp eq i8 %174, 16, !dbg !5124
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !5124
  %177 = load i8, ptr %176, align 1, !dbg !5124
  %178 = icmp eq i8 %177, 0, !dbg !5124
  %179 = and i1 %175, %178, !dbg !5124
  %180 = and i1 %172, %179, !dbg !5124
  br i1 %180, label %assert_end71, label %assert_fail70, !dbg !5124, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %181(ptr nonnull @.str.1597), !dbg !5124
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !5124
  %183 = load i64, ptr %182, align 8, !dbg !5124
  %184 = icmp eq i64 %183, 0, !dbg !5124
  br i1 %184, label %assert_end73, label %assert_fail72, !dbg !5124, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %185(ptr nonnull @.str.1598), !dbg !5124
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !5124
  %187 = load i32, ptr %186, align 4, !dbg !5124
  %188 = icmp eq i32 %187, 1, !dbg !5124
  br i1 %188, label %assert_end75, label %assert_fail74, !dbg !5124, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %189(ptr nonnull @.str.1599), !dbg !5124
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !5124
  %191 = load i32, ptr %190, align 4, !dbg !5124
  %192 = icmp eq i32 %dev_id, %191, !dbg !5124
  br i1 %192, label %assert_end77, label %assert_fail76, !dbg !5124, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %193(ptr nonnull @.str.1600), !dbg !5124
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %194 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !5124
  %195 = load i32, ptr %194, align 4, !dbg !5124
  %196 = icmp eq i32 %195, 0, !dbg !5124
  br i1 %196, label %assert_end81, label %assert_fail78, !dbg !5124, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %197(ptr nonnull @.str.1601), !dbg !5124
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %198 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !5124
  %199 = load i16, ptr %198, align 2, !dbg !5124
  %200 = icmp eq i16 %199, 1, !dbg !5124
  %201 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !5124
  %202 = load i8, ptr %201, align 1, !dbg !5124
  %203 = icmp eq i8 %202, 16, !dbg !5124
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !5124
  %205 = load i8, ptr %204, align 1, !dbg !5124
  %206 = icmp eq i8 %205, 0, !dbg !5124
  %207 = and i1 %203, %206, !dbg !5124
  %208 = and i1 %200, %207, !dbg !5124
  br i1 %208, label %assert_end83, label %assert_fail82, !dbg !5124, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %209(ptr nonnull @.str.1602), !dbg !5124
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %210 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !5124
  %211 = load i64, ptr %210, align 8, !dbg !5124
  %212 = icmp eq i64 %211, 0, !dbg !5124
  br i1 %212, label %assert_end85, label %assert_fail84, !dbg !5124, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %213(ptr nonnull @.str.1603), !dbg !5124
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !5124
  %215 = load i32, ptr %214, align 4, !dbg !5124
  %216 = icmp eq i32 %215, 1, !dbg !5124
  br i1 %216, label %assert_end87, label %assert_fail86, !dbg !5124, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %217(ptr nonnull @.str.1604), !dbg !5124
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %218 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !5124
  %219 = load i32, ptr %218, align 4, !dbg !5124
  %220 = icmp eq i32 %dev_id, %219, !dbg !5124
  br i1 %220, label %assert_end89, label %assert_fail88, !dbg !5124, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %221 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %221(ptr nonnull @.str.1605), !dbg !5124
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %222 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !5124
  %223 = load i32, ptr %222, align 4, !dbg !5124
  %224 = icmp eq i32 %223, 5, !dbg !5124
  br i1 %224, label %assert_end93, label %assert_fail90, !dbg !5124, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %225 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %225(ptr nonnull @.str.1606), !dbg !5124
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %226 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !5124
  %227 = load i16, ptr %226, align 2, !dbg !5124
  %228 = icmp eq i16 %227, 1, !dbg !5124
  %229 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !5124
  %230 = load i8, ptr %229, align 1, !dbg !5124
  %231 = icmp eq i8 %230, 8, !dbg !5124
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !5124
  %233 = load i8, ptr %232, align 1, !dbg !5124
  %234 = icmp eq i8 %233, 0, !dbg !5124
  %235 = and i1 %231, %234, !dbg !5124
  %236 = and i1 %228, %235, !dbg !5124
  br i1 %236, label %assert_end95, label %assert_fail94, !dbg !5124, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %237(ptr nonnull @.str.1607), !dbg !5124
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %238 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.shape, align 8, !dbg !5124, !tbaa !5228
  %239 = and i64 %238, 4294967295, !dbg !5124
  %240 = icmp eq i64 %239, 1, !dbg !5124
  br i1 %240, label %assert_end97, label %assert_fail96, !dbg !5124, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %241(ptr nonnull @.str.1608), !dbg !5124
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.shape, i64 1, !dbg !5124
  %243 = load i64, ptr %242, align 8, !dbg !5124, !tbaa !5238
  %244 = and i64 %243, 4294967295, !dbg !5124
  %245 = icmp eq i64 %244, 512, !dbg !5124
  br i1 %245, label %assert_end99, label %assert_fail98, !dbg !5124, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %246(ptr nonnull @.str.1609), !dbg !5124
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.shape, i64 2, !dbg !5124
  %248 = load i64, ptr %247, align 8, !dbg !5124, !tbaa !5240
  %249 = and i64 %248, 4294967295, !dbg !5124
  %250 = icmp eq i64 %249, 7, !dbg !5124
  br i1 %250, label %assert_end101, label %assert_fail100, !dbg !5124, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %251(ptr nonnull @.str.1610), !dbg !5124
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.shape, i64 3, !dbg !5124
  %253 = load i64, ptr %252, align 8, !dbg !5124, !tbaa !5243
  %254 = and i64 %253, 4294967295, !dbg !5124
  %255 = icmp eq i64 %254, 7, !dbg !5124
  br i1 %255, label %assert_end103, label %assert_fail102, !dbg !5124, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %256(ptr nonnull @.str.1611), !dbg !5124
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.shape, i64 4, !dbg !5124
  %258 = load i64, ptr %257, align 8, !dbg !5124, !tbaa !5245
  %259 = and i64 %258, 4294967295, !dbg !5124
  %260 = icmp eq i64 %259, 4, !dbg !5124
  br i1 %260, label %assert_end105, label %assert_fail104, !dbg !5124, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %261(ptr nonnull @.str.1612), !dbg !5124
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.strides, null, !dbg !5124
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !5124, !prof !59

if_then106:                                       ; preds = %assert_end105
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.strides, i64 1, !dbg !5124
  %263 = load i64, ptr %262, align 8, !dbg !5124, !tbaa !5249
  %264 = and i64 %263, 4294967295, !dbg !5124
  %265 = icmp eq i64 %264, 196, !dbg !5124
  %266 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.strides, i64 2, !dbg !5124
  %267 = load i64, ptr %266, align 8, !dbg !5124, !tbaa !5259
  %268 = and i64 %267, 4294967295, !dbg !5124
  %269 = icmp eq i64 %268, 28, !dbg !5124
  %270 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.strides, i64 3, !dbg !5124
  %271 = load i64, ptr %270, align 8, !dbg !5124, !tbaa !5262
  %272 = and i64 %271, 4294967295, !dbg !5124
  %273 = icmp eq i64 %272, 4, !dbg !5124
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18.T_cast.strides, i64 4, !dbg !5124
  %275 = load i64, ptr %274, align 8, !dbg !5124, !tbaa !5264
  %276 = and i64 %275, 4294967295, !dbg !5124
  %277 = icmp eq i64 %276, 1, !dbg !5124
  %278 = and i1 %273, %277, !dbg !5124
  %279 = and i1 %269, %278, !dbg !5124
  %280 = and i1 %265, %279, !dbg !5124
  br i1 %280, label %if_end107, label %assert_fail108, !dbg !5124, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %281 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !5124
  %282 = load i64, ptr %281, align 8, !dbg !5124
  %283 = icmp eq i64 %282, 0, !dbg !5124
  br i1 %283, label %assert_end111, label %assert_fail110, !dbg !5124, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %284(ptr nonnull @.str.1613), !dbg !5124
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %285 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %285(ptr nonnull @.str.1614), !dbg !5124
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %286 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !5124
  %287 = load i32, ptr %286, align 4, !dbg !5124
  %288 = icmp eq i32 %287, 1, !dbg !5124
  br i1 %288, label %assert_end113, label %assert_fail112, !dbg !5124, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %289(ptr nonnull @.str.1615), !dbg !5124
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %290 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !5124
  %291 = load i32, ptr %290, align 4, !dbg !5124
  %292 = icmp eq i32 %dev_id, %291, !dbg !5124
  br i1 %292, label %assert_end115, label %assert_fail114, !dbg !5124, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %293 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5124, !tbaa !19
  tail call void %293(ptr nonnull @.str.1616), !dbg !5124
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %294 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_compute_(ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !5124
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5268 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5270, metadata !DIExpression()), !dbg !5276
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5271, metadata !DIExpression()), !dbg !5276
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5272, metadata !DIExpression()), !dbg !5276
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5273, metadata !DIExpression()), !dbg !5276
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5274, metadata !DIExpression()), !dbg !5276
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5275, metadata !DIExpression()), !dbg !5276
  %0 = icmp eq i32 %num_args, 5, !dbg !5276
  br i1 %0, label %assert_end, label %assert_fail, !dbg !5276, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %294, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !5276

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %1(ptr nonnull @.str.1618), !dbg !5276
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5276, !tbaa !5277
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5276
  %p1.code = load i32, ptr %2, align 4, !dbg !5276, !tbaa !5288
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5276
  %p2.code = load i32, ptr %3, align 4, !dbg !5276, !tbaa !5290
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !5276
  %p3.code = load i32, ptr %4, align 4, !dbg !5276, !tbaa !5293
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !5276
  %T_cast.code = load i32, ptr %5, align 4, !dbg !5276, !tbaa !5295
  %p0 = load ptr, ptr %args, align 8, !dbg !5276
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5276
  %p1 = load ptr, ptr %6, align 8, !dbg !5276
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5276
  %p2 = load ptr, ptr %7, align 8, !dbg !5276
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !5276
  %p3 = load ptr, ptr %8, align 8, !dbg !5276
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !5276
  %T_cast = load ptr, ptr %9, align 8, !dbg !5276
  %p0116 = load ptr, ptr %p0, align 8, !dbg !5276
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !5276
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5276
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.shape = load ptr, ptr %10, align 8, !dbg !5276
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5276
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.strides = load ptr, ptr %11, align 8, !dbg !5276
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5276
  %dev_id = load i32, ptr %12, align 4, !dbg !5276
  %p1117 = load ptr, ptr %p1, align 8, !dbg !5276
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !5276
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5276
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.shape = load ptr, ptr %13, align 8, !dbg !5276
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5276
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.strides = load ptr, ptr %14, align 8, !dbg !5276
  %p2119 = load ptr, ptr %p2, align 8, !dbg !5276
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !5276
  %p3120 = load ptr, ptr %p3, align 8, !dbg !5276
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !5276
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !5276
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !5276
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !5276
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.shape = load ptr, ptr %15, align 8, !dbg !5276
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !5276
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.strides = load ptr, ptr %16, align 8, !dbg !5276
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !5276

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %17(ptr nonnull @.str.1619), !dbg !5276
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !5276

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %18(ptr nonnull @.str.1620), !dbg !5276
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !5276

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %19(ptr nonnull @.str.1621), !dbg !5276
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !5276

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %20(ptr nonnull @.str.1622), !dbg !5276
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !5276

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %21(ptr nonnull @.str.1623), !dbg !5276
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5276
  %23 = load i32, ptr %22, align 4, !dbg !5276
  %24 = icmp eq i32 %23, 5, !dbg !5276
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !5276, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %25(ptr nonnull @.str.1624), !dbg !5276
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5276
  %27 = load i16, ptr %26, align 2, !dbg !5276
  %28 = icmp eq i16 %27, 1, !dbg !5276
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5276
  %30 = load i8, ptr %29, align 1, !dbg !5276
  %31 = icmp eq i8 %30, 8, !dbg !5276
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5276
  %33 = load i8, ptr %32, align 1, !dbg !5276
  %34 = icmp eq i8 %33, 0, !dbg !5276
  %35 = and i1 %31, %34, !dbg !5276
  %36 = and i1 %28, %35, !dbg !5276
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !5276, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %37(ptr nonnull @.str.1625), !dbg !5276
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.shape, align 8, !dbg !5276, !tbaa !5299
  %39 = and i64 %38, 4294967295, !dbg !5276
  %40 = icmp eq i64 %39, 1, !dbg !5276
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !5276, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %41(ptr nonnull @.str.1626), !dbg !5276
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.shape, i64 1, !dbg !5276
  %43 = load i64, ptr %42, align 8, !dbg !5276, !tbaa !5309
  %44 = and i64 %43, 4294967295, !dbg !5276
  %45 = icmp eq i64 %44, 256, !dbg !5276
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !5276, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %46(ptr nonnull @.str.1627), !dbg !5276
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.shape, i64 2, !dbg !5276
  %48 = load i64, ptr %47, align 8, !dbg !5276, !tbaa !5311
  %49 = and i64 %48, 4294967295, !dbg !5276
  %50 = icmp eq i64 %49, 14, !dbg !5276
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !5276, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %51(ptr nonnull @.str.1628), !dbg !5276
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.shape, i64 3, !dbg !5276
  %53 = load i64, ptr %52, align 8, !dbg !5276, !tbaa !5314
  %54 = and i64 %53, 4294967295, !dbg !5276
  %55 = icmp eq i64 %54, 14, !dbg !5276
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !5276, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %56(ptr nonnull @.str.1629), !dbg !5276
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.shape, i64 4, !dbg !5276
  %58 = load i64, ptr %57, align 8, !dbg !5276, !tbaa !5316
  %59 = and i64 %58, 4294967295, !dbg !5276
  %60 = icmp eq i64 %59, 4, !dbg !5276
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !5276, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %61(ptr nonnull @.str.1630), !dbg !5276
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.strides, null, !dbg !5276
  br i1 %.not, label %if_end, label %if_then, !dbg !5276, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.strides, i64 1, !dbg !5276
  %63 = load i64, ptr %62, align 8, !dbg !5276, !tbaa !5320
  %64 = and i64 %63, 4294967295, !dbg !5276
  %65 = icmp eq i64 %64, 784, !dbg !5276
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.strides, i64 2, !dbg !5276
  %67 = load i64, ptr %66, align 8, !dbg !5276, !tbaa !5330
  %68 = and i64 %67, 4294967295, !dbg !5276
  %69 = icmp eq i64 %68, 56, !dbg !5276
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.strides, i64 3, !dbg !5276
  %71 = load i64, ptr %70, align 8, !dbg !5276, !tbaa !5333
  %72 = and i64 %71, 4294967295, !dbg !5276
  %73 = icmp eq i64 %72, 4, !dbg !5276
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p0.strides, i64 4, !dbg !5276
  %75 = load i64, ptr %74, align 8, !dbg !5276, !tbaa !5335
  %76 = and i64 %75, 4294967295, !dbg !5276
  %77 = icmp eq i64 %76, 1, !dbg !5276
  %78 = and i1 %73, %77, !dbg !5276
  %79 = and i1 %69, %78, !dbg !5276
  %80 = and i1 %65, %79, !dbg !5276
  br i1 %80, label %if_end, label %assert_fail32, !dbg !5276, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5276
  %82 = load i64, ptr %81, align 8, !dbg !5276
  %83 = icmp eq i64 %82, 0, !dbg !5276
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !5276, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %84(ptr nonnull @.str.1631), !dbg !5276
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %85(ptr nonnull @.str.1632), !dbg !5276
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5276
  %87 = load i32, ptr %86, align 4, !dbg !5276
  %88 = icmp eq i32 %87, 1, !dbg !5276
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !5276, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %89(ptr nonnull @.str.1633), !dbg !5276
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5276
  %91 = load i32, ptr %90, align 4, !dbg !5276
  %92 = icmp eq i32 %91, 6, !dbg !5276
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !5276, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %93(ptr nonnull @.str.1634), !dbg !5276
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5276
  %95 = load i16, ptr %94, align 2, !dbg !5276
  %96 = icmp eq i16 %95, 1, !dbg !5276
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5276
  %98 = load i8, ptr %97, align 1, !dbg !5276
  %99 = icmp eq i8 %98, 8, !dbg !5276
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5276
  %101 = load i8, ptr %100, align 1, !dbg !5276
  %102 = icmp eq i8 %101, 0, !dbg !5276
  %103 = and i1 %99, %102, !dbg !5276
  %104 = and i1 %96, %103, !dbg !5276
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !5276, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %105(ptr nonnull @.str.1635), !dbg !5276
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.shape, align 8, !dbg !5276, !tbaa !5339
  %107 = and i64 %106, 4294967295, !dbg !5276
  %108 = icmp eq i64 %107, 512, !dbg !5276
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !5276, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %109(ptr nonnull @.str.1636), !dbg !5276
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.shape, i64 1, !dbg !5276
  %111 = load i64, ptr %110, align 8, !dbg !5276, !tbaa !5349
  %112 = and i64 %111, 4294967295, !dbg !5276
  %113 = icmp eq i64 %112, 256, !dbg !5276
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !5276, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %114(ptr nonnull @.str.1637), !dbg !5276
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.shape, i64 2, !dbg !5276
  %116 = load i64, ptr %115, align 8, !dbg !5276, !tbaa !5351
  %117 = and i64 %116, 4294967295, !dbg !5276
  %118 = icmp eq i64 %117, 1, !dbg !5276
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !5276, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %119(ptr nonnull @.str.1638), !dbg !5276
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.shape, i64 3, !dbg !5276
  %121 = load i64, ptr %120, align 8, !dbg !5276, !tbaa !5354
  %122 = and i64 %121, 4294967295, !dbg !5276
  %123 = icmp eq i64 %122, 1, !dbg !5276
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !5276, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %124(ptr nonnull @.str.1639), !dbg !5276
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.shape, i64 4, !dbg !5276
  %126 = load i64, ptr %125, align 8, !dbg !5276, !tbaa !5356
  %127 = and i64 %126, 4294967295, !dbg !5276
  %128 = icmp eq i64 %127, 4, !dbg !5276
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !5276, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %129(ptr nonnull @.str.1640), !dbg !5276
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.shape, i64 5, !dbg !5276
  %131 = load i64, ptr %130, align 8, !dbg !5276, !tbaa !5360
  %132 = and i64 %131, 4294967295, !dbg !5276
  %133 = icmp eq i64 %132, 4, !dbg !5276
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !5276, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %134(ptr nonnull @.str.1641), !dbg !5276
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.strides, null, !dbg !5276
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !5276, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.strides, align 8, !dbg !5276, !tbaa !5362
  %136 = and i64 %135, 4294967295, !dbg !5276
  %137 = icmp eq i64 %136, 4096, !dbg !5276
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.strides, i64 1, !dbg !5276
  %139 = load i64, ptr %138, align 8, !dbg !5276, !tbaa !5372
  %140 = and i64 %139, 4294967295, !dbg !5276
  %141 = icmp eq i64 %140, 16, !dbg !5276
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.strides, i64 4, !dbg !5276
  %143 = load i64, ptr %142, align 8, !dbg !5276, !tbaa !5374
  %144 = and i64 %143, 4294967295, !dbg !5276
  %145 = icmp eq i64 %144, 4, !dbg !5276
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.p1.strides, i64 5, !dbg !5276
  %147 = load i64, ptr %146, align 8, !dbg !5276, !tbaa !5378
  %148 = and i64 %147, 4294967295, !dbg !5276
  %149 = icmp eq i64 %148, 1, !dbg !5276
  %150 = and i1 %145, %149, !dbg !5276
  %151 = and i1 %141, %150, !dbg !5276
  %152 = and i1 %137, %151, !dbg !5276
  br i1 %152, label %if_end57, label %assert_fail58, !dbg !5276, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5276
  %154 = load i64, ptr %153, align 8, !dbg !5276
  %155 = icmp eq i64 %154, 0, !dbg !5276
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !5276, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %156(ptr nonnull @.str.1642), !dbg !5276
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %157(ptr nonnull @.str.1643), !dbg !5276
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %158 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5276
  %159 = load i32, ptr %158, align 4, !dbg !5276
  %160 = icmp eq i32 %159, 1, !dbg !5276
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !5276, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %161(ptr nonnull @.str.1644), !dbg !5276
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5276
  %163 = load i32, ptr %162, align 4, !dbg !5276
  %164 = icmp eq i32 %dev_id, %163, !dbg !5276
  br i1 %164, label %assert_end65, label %assert_fail64, !dbg !5276, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %165(ptr nonnull @.str.1645), !dbg !5276
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %166 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !5276
  %167 = load i32, ptr %166, align 4, !dbg !5276
  %168 = icmp eq i32 %167, 0, !dbg !5276
  br i1 %168, label %assert_end69, label %assert_fail66, !dbg !5276, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %169(ptr nonnull @.str.1646), !dbg !5276
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !5276
  %171 = load i16, ptr %170, align 2, !dbg !5276
  %172 = icmp eq i16 %171, 1, !dbg !5276
  %173 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !5276
  %174 = load i8, ptr %173, align 1, !dbg !5276
  %175 = icmp eq i8 %174, 16, !dbg !5276
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !5276
  %177 = load i8, ptr %176, align 1, !dbg !5276
  %178 = icmp eq i8 %177, 0, !dbg !5276
  %179 = and i1 %175, %178, !dbg !5276
  %180 = and i1 %172, %179, !dbg !5276
  br i1 %180, label %assert_end71, label %assert_fail70, !dbg !5276, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %181(ptr nonnull @.str.1647), !dbg !5276
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !5276
  %183 = load i64, ptr %182, align 8, !dbg !5276
  %184 = icmp eq i64 %183, 0, !dbg !5276
  br i1 %184, label %assert_end73, label %assert_fail72, !dbg !5276, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %185(ptr nonnull @.str.1648), !dbg !5276
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !5276
  %187 = load i32, ptr %186, align 4, !dbg !5276
  %188 = icmp eq i32 %187, 1, !dbg !5276
  br i1 %188, label %assert_end75, label %assert_fail74, !dbg !5276, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %189(ptr nonnull @.str.1649), !dbg !5276
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !5276
  %191 = load i32, ptr %190, align 4, !dbg !5276
  %192 = icmp eq i32 %dev_id, %191, !dbg !5276
  br i1 %192, label %assert_end77, label %assert_fail76, !dbg !5276, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %193(ptr nonnull @.str.1650), !dbg !5276
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %194 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !5276
  %195 = load i32, ptr %194, align 4, !dbg !5276
  %196 = icmp eq i32 %195, 0, !dbg !5276
  br i1 %196, label %assert_end81, label %assert_fail78, !dbg !5276, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %197(ptr nonnull @.str.1651), !dbg !5276
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %198 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !5276
  %199 = load i16, ptr %198, align 2, !dbg !5276
  %200 = icmp eq i16 %199, 1, !dbg !5276
  %201 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !5276
  %202 = load i8, ptr %201, align 1, !dbg !5276
  %203 = icmp eq i8 %202, 16, !dbg !5276
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !5276
  %205 = load i8, ptr %204, align 1, !dbg !5276
  %206 = icmp eq i8 %205, 0, !dbg !5276
  %207 = and i1 %203, %206, !dbg !5276
  %208 = and i1 %200, %207, !dbg !5276
  br i1 %208, label %assert_end83, label %assert_fail82, !dbg !5276, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %209(ptr nonnull @.str.1652), !dbg !5276
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %210 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !5276
  %211 = load i64, ptr %210, align 8, !dbg !5276
  %212 = icmp eq i64 %211, 0, !dbg !5276
  br i1 %212, label %assert_end85, label %assert_fail84, !dbg !5276, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %213(ptr nonnull @.str.1653), !dbg !5276
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !5276
  %215 = load i32, ptr %214, align 4, !dbg !5276
  %216 = icmp eq i32 %215, 1, !dbg !5276
  br i1 %216, label %assert_end87, label %assert_fail86, !dbg !5276, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %217(ptr nonnull @.str.1654), !dbg !5276
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %218 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !5276
  %219 = load i32, ptr %218, align 4, !dbg !5276
  %220 = icmp eq i32 %dev_id, %219, !dbg !5276
  br i1 %220, label %assert_end89, label %assert_fail88, !dbg !5276, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %221 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %221(ptr nonnull @.str.1655), !dbg !5276
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %222 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !5276
  %223 = load i32, ptr %222, align 4, !dbg !5276
  %224 = icmp eq i32 %223, 5, !dbg !5276
  br i1 %224, label %assert_end93, label %assert_fail90, !dbg !5276, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %225 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %225(ptr nonnull @.str.1656), !dbg !5276
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %226 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !5276
  %227 = load i16, ptr %226, align 2, !dbg !5276
  %228 = icmp eq i16 %227, 1, !dbg !5276
  %229 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !5276
  %230 = load i8, ptr %229, align 1, !dbg !5276
  %231 = icmp eq i8 %230, 8, !dbg !5276
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !5276
  %233 = load i8, ptr %232, align 1, !dbg !5276
  %234 = icmp eq i8 %233, 0, !dbg !5276
  %235 = and i1 %231, %234, !dbg !5276
  %236 = and i1 %228, %235, !dbg !5276
  br i1 %236, label %assert_end95, label %assert_fail94, !dbg !5276, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %237(ptr nonnull @.str.1657), !dbg !5276
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %238 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.shape, align 8, !dbg !5276, !tbaa !5380
  %239 = and i64 %238, 4294967295, !dbg !5276
  %240 = icmp eq i64 %239, 1, !dbg !5276
  br i1 %240, label %assert_end97, label %assert_fail96, !dbg !5276, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %241(ptr nonnull @.str.1658), !dbg !5276
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.shape, i64 1, !dbg !5276
  %243 = load i64, ptr %242, align 8, !dbg !5276, !tbaa !5390
  %244 = and i64 %243, 4294967295, !dbg !5276
  %245 = icmp eq i64 %244, 512, !dbg !5276
  br i1 %245, label %assert_end99, label %assert_fail98, !dbg !5276, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %246(ptr nonnull @.str.1659), !dbg !5276
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.shape, i64 2, !dbg !5276
  %248 = load i64, ptr %247, align 8, !dbg !5276, !tbaa !5392
  %249 = and i64 %248, 4294967295, !dbg !5276
  %250 = icmp eq i64 %249, 7, !dbg !5276
  br i1 %250, label %assert_end101, label %assert_fail100, !dbg !5276, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %251(ptr nonnull @.str.1660), !dbg !5276
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.shape, i64 3, !dbg !5276
  %253 = load i64, ptr %252, align 8, !dbg !5276, !tbaa !5395
  %254 = and i64 %253, 4294967295, !dbg !5276
  %255 = icmp eq i64 %254, 7, !dbg !5276
  br i1 %255, label %assert_end103, label %assert_fail102, !dbg !5276, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %256(ptr nonnull @.str.1661), !dbg !5276
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.shape, i64 4, !dbg !5276
  %258 = load i64, ptr %257, align 8, !dbg !5276, !tbaa !5397
  %259 = and i64 %258, 4294967295, !dbg !5276
  %260 = icmp eq i64 %259, 4, !dbg !5276
  br i1 %260, label %assert_end105, label %assert_fail104, !dbg !5276, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %261(ptr nonnull @.str.1662), !dbg !5276
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.strides, null, !dbg !5276
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !5276, !prof !59

if_then106:                                       ; preds = %assert_end105
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.strides, i64 1, !dbg !5276
  %263 = load i64, ptr %262, align 8, !dbg !5276, !tbaa !5401
  %264 = and i64 %263, 4294967295, !dbg !5276
  %265 = icmp eq i64 %264, 196, !dbg !5276
  %266 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.strides, i64 2, !dbg !5276
  %267 = load i64, ptr %266, align 8, !dbg !5276, !tbaa !5411
  %268 = and i64 %267, 4294967295, !dbg !5276
  %269 = icmp eq i64 %268, 28, !dbg !5276
  %270 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.strides, i64 3, !dbg !5276
  %271 = load i64, ptr %270, align 8, !dbg !5276, !tbaa !5414
  %272 = and i64 %271, 4294967295, !dbg !5276
  %273 = icmp eq i64 %272, 4, !dbg !5276
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19.T_cast.strides, i64 4, !dbg !5276
  %275 = load i64, ptr %274, align 8, !dbg !5276, !tbaa !5416
  %276 = and i64 %275, 4294967295, !dbg !5276
  %277 = icmp eq i64 %276, 1, !dbg !5276
  %278 = and i1 %273, %277, !dbg !5276
  %279 = and i1 %269, %278, !dbg !5276
  %280 = and i1 %265, %279, !dbg !5276
  br i1 %280, label %if_end107, label %assert_fail108, !dbg !5276, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %281 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !5276
  %282 = load i64, ptr %281, align 8, !dbg !5276
  %283 = icmp eq i64 %282, 0, !dbg !5276
  br i1 %283, label %assert_end111, label %assert_fail110, !dbg !5276, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %284(ptr nonnull @.str.1663), !dbg !5276
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %285 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %285(ptr nonnull @.str.1664), !dbg !5276
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %286 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !5276
  %287 = load i32, ptr %286, align 4, !dbg !5276
  %288 = icmp eq i32 %287, 1, !dbg !5276
  br i1 %288, label %assert_end113, label %assert_fail112, !dbg !5276, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %289(ptr nonnull @.str.1665), !dbg !5276
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %290 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !5276
  %291 = load i32, ptr %290, align 4, !dbg !5276
  %292 = icmp eq i32 %dev_id, %291, !dbg !5276
  br i1 %292, label %assert_end115, label %assert_fail114, !dbg !5276, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %293 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5276, !tbaa !19
  tail call void %293(ptr nonnull @.str.1666), !dbg !5276
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %294 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_compute_(ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !5276
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5420 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5422, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5423, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5424, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5425, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5426, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5427, metadata !DIExpression()), !dbg !5428
  %0 = icmp eq i32 %num_args, 5, !dbg !5428
  br i1 %0, label %assert_end, label %assert_fail, !dbg !5428, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %294, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !5428

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %1(ptr nonnull @.str.1668), !dbg !5428
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5428, !tbaa !5429
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5428
  %p1.code = load i32, ptr %2, align 4, !dbg !5428, !tbaa !5440
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5428
  %p2.code = load i32, ptr %3, align 4, !dbg !5428, !tbaa !5442
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !5428
  %p3.code = load i32, ptr %4, align 4, !dbg !5428, !tbaa !5445
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !5428
  %T_cast.code = load i32, ptr %5, align 4, !dbg !5428, !tbaa !5447
  %p0 = load ptr, ptr %args, align 8, !dbg !5428
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5428
  %p1 = load ptr, ptr %6, align 8, !dbg !5428
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5428
  %p2 = load ptr, ptr %7, align 8, !dbg !5428
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !5428
  %p3 = load ptr, ptr %8, align 8, !dbg !5428
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !5428
  %T_cast = load ptr, ptr %9, align 8, !dbg !5428
  %p0116 = load ptr, ptr %p0, align 8, !dbg !5428
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !5428
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5428
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.shape = load ptr, ptr %10, align 8, !dbg !5428
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5428
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.strides = load ptr, ptr %11, align 8, !dbg !5428
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5428
  %dev_id = load i32, ptr %12, align 4, !dbg !5428
  %p1117 = load ptr, ptr %p1, align 8, !dbg !5428
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !5428
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5428
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.shape = load ptr, ptr %13, align 8, !dbg !5428
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5428
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.strides = load ptr, ptr %14, align 8, !dbg !5428
  %p2119 = load ptr, ptr %p2, align 8, !dbg !5428
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !5428
  %p3120 = load ptr, ptr %p3, align 8, !dbg !5428
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !5428
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !5428
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !5428
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !5428
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.shape = load ptr, ptr %15, align 8, !dbg !5428
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !5428
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.strides = load ptr, ptr %16, align 8, !dbg !5428
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !5428

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %17(ptr nonnull @.str.1669), !dbg !5428
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !5428

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %18(ptr nonnull @.str.1670), !dbg !5428
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !5428

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %19(ptr nonnull @.str.1671), !dbg !5428
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !5428

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %20(ptr nonnull @.str.1672), !dbg !5428
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !5428

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %21(ptr nonnull @.str.1673), !dbg !5428
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5428
  %23 = load i32, ptr %22, align 4, !dbg !5428
  %24 = icmp eq i32 %23, 5, !dbg !5428
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !5428, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %25(ptr nonnull @.str.1674), !dbg !5428
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5428
  %27 = load i16, ptr %26, align 2, !dbg !5428
  %28 = icmp eq i16 %27, 1, !dbg !5428
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5428
  %30 = load i8, ptr %29, align 1, !dbg !5428
  %31 = icmp eq i8 %30, 8, !dbg !5428
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5428
  %33 = load i8, ptr %32, align 1, !dbg !5428
  %34 = icmp eq i8 %33, 0, !dbg !5428
  %35 = and i1 %31, %34, !dbg !5428
  %36 = and i1 %28, %35, !dbg !5428
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !5428, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %37(ptr nonnull @.str.1675), !dbg !5428
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.shape, align 8, !dbg !5428, !tbaa !5451
  %39 = and i64 %38, 4294967295, !dbg !5428
  %40 = icmp eq i64 %39, 1, !dbg !5428
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !5428, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %41(ptr nonnull @.str.1676), !dbg !5428
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.shape, i64 1, !dbg !5428
  %43 = load i64, ptr %42, align 8, !dbg !5428, !tbaa !5461
  %44 = and i64 %43, 4294967295, !dbg !5428
  %45 = icmp eq i64 %44, 16, !dbg !5428
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !5428, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %46(ptr nonnull @.str.1677), !dbg !5428
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.shape, i64 2, !dbg !5428
  %48 = load i64, ptr %47, align 8, !dbg !5428, !tbaa !5463
  %49 = and i64 %48, 4294967295, !dbg !5428
  %50 = icmp eq i64 %49, 56, !dbg !5428
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !5428, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %51(ptr nonnull @.str.1678), !dbg !5428
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.shape, i64 3, !dbg !5428
  %53 = load i64, ptr %52, align 8, !dbg !5428, !tbaa !5466
  %54 = and i64 %53, 4294967295, !dbg !5428
  %55 = icmp eq i64 %54, 56, !dbg !5428
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !5428, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %56(ptr nonnull @.str.1679), !dbg !5428
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.shape, i64 4, !dbg !5428
  %58 = load i64, ptr %57, align 8, !dbg !5428, !tbaa !5468
  %59 = and i64 %58, 4294967295, !dbg !5428
  %60 = icmp eq i64 %59, 4, !dbg !5428
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !5428, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %61(ptr nonnull @.str.1680), !dbg !5428
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.strides, null, !dbg !5428
  br i1 %.not, label %if_end, label %if_then, !dbg !5428, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.strides, i64 1, !dbg !5428
  %63 = load i64, ptr %62, align 8, !dbg !5428, !tbaa !5472
  %64 = and i64 %63, 4294967295, !dbg !5428
  %65 = icmp eq i64 %64, 12544, !dbg !5428
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.strides, i64 2, !dbg !5428
  %67 = load i64, ptr %66, align 8, !dbg !5428, !tbaa !5482
  %68 = and i64 %67, 4294967295, !dbg !5428
  %69 = icmp eq i64 %68, 224, !dbg !5428
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.strides, i64 3, !dbg !5428
  %71 = load i64, ptr %70, align 8, !dbg !5428, !tbaa !5485
  %72 = and i64 %71, 4294967295, !dbg !5428
  %73 = icmp eq i64 %72, 4, !dbg !5428
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p0.strides, i64 4, !dbg !5428
  %75 = load i64, ptr %74, align 8, !dbg !5428, !tbaa !5487
  %76 = and i64 %75, 4294967295, !dbg !5428
  %77 = icmp eq i64 %76, 1, !dbg !5428
  %78 = and i1 %73, %77, !dbg !5428
  %79 = and i1 %69, %78, !dbg !5428
  %80 = and i1 %65, %79, !dbg !5428
  br i1 %80, label %if_end, label %assert_fail32, !dbg !5428, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5428
  %82 = load i64, ptr %81, align 8, !dbg !5428
  %83 = icmp eq i64 %82, 0, !dbg !5428
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !5428, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %84(ptr nonnull @.str.1681), !dbg !5428
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %85(ptr nonnull @.str.1682), !dbg !5428
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5428
  %87 = load i32, ptr %86, align 4, !dbg !5428
  %88 = icmp eq i32 %87, 1, !dbg !5428
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !5428, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %89(ptr nonnull @.str.1683), !dbg !5428
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5428
  %91 = load i32, ptr %90, align 4, !dbg !5428
  %92 = icmp eq i32 %91, 6, !dbg !5428
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !5428, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %93(ptr nonnull @.str.1684), !dbg !5428
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5428
  %95 = load i16, ptr %94, align 2, !dbg !5428
  %96 = icmp eq i16 %95, 1, !dbg !5428
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5428
  %98 = load i8, ptr %97, align 1, !dbg !5428
  %99 = icmp eq i8 %98, 8, !dbg !5428
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5428
  %101 = load i8, ptr %100, align 1, !dbg !5428
  %102 = icmp eq i8 %101, 0, !dbg !5428
  %103 = and i1 %99, %102, !dbg !5428
  %104 = and i1 %96, %103, !dbg !5428
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !5428, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %105(ptr nonnull @.str.1685), !dbg !5428
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.shape, align 8, !dbg !5428, !tbaa !5491
  %107 = and i64 %106, 4294967295, !dbg !5428
  %108 = icmp eq i64 %107, 64, !dbg !5428
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !5428, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %109(ptr nonnull @.str.1686), !dbg !5428
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.shape, i64 1, !dbg !5428
  %111 = load i64, ptr %110, align 8, !dbg !5428, !tbaa !5501
  %112 = and i64 %111, 4294967295, !dbg !5428
  %113 = icmp eq i64 %112, 16, !dbg !5428
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !5428, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %114(ptr nonnull @.str.1687), !dbg !5428
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.shape, i64 2, !dbg !5428
  %116 = load i64, ptr %115, align 8, !dbg !5428, !tbaa !5503
  %117 = and i64 %116, 4294967295, !dbg !5428
  %118 = icmp eq i64 %117, 1, !dbg !5428
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !5428, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %119(ptr nonnull @.str.1688), !dbg !5428
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.shape, i64 3, !dbg !5428
  %121 = load i64, ptr %120, align 8, !dbg !5428, !tbaa !5506
  %122 = and i64 %121, 4294967295, !dbg !5428
  %123 = icmp eq i64 %122, 1, !dbg !5428
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !5428, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %124(ptr nonnull @.str.1689), !dbg !5428
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.shape, i64 4, !dbg !5428
  %126 = load i64, ptr %125, align 8, !dbg !5428, !tbaa !5508
  %127 = and i64 %126, 4294967295, !dbg !5428
  %128 = icmp eq i64 %127, 4, !dbg !5428
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !5428, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %129(ptr nonnull @.str.1690), !dbg !5428
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.shape, i64 5, !dbg !5428
  %131 = load i64, ptr %130, align 8, !dbg !5428, !tbaa !5512
  %132 = and i64 %131, 4294967295, !dbg !5428
  %133 = icmp eq i64 %132, 4, !dbg !5428
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !5428, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %134(ptr nonnull @.str.1691), !dbg !5428
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.strides, null, !dbg !5428
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !5428, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.strides, align 8, !dbg !5428, !tbaa !5514
  %136 = and i64 %135, 4294967295, !dbg !5428
  %137 = icmp eq i64 %136, 256, !dbg !5428
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.strides, i64 1, !dbg !5428
  %139 = load i64, ptr %138, align 8, !dbg !5428, !tbaa !5524
  %140 = and i64 %139, 4294967295, !dbg !5428
  %141 = icmp eq i64 %140, 16, !dbg !5428
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.strides, i64 4, !dbg !5428
  %143 = load i64, ptr %142, align 8, !dbg !5428, !tbaa !5526
  %144 = and i64 %143, 4294967295, !dbg !5428
  %145 = icmp eq i64 %144, 4, !dbg !5428
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.p1.strides, i64 5, !dbg !5428
  %147 = load i64, ptr %146, align 8, !dbg !5428, !tbaa !5530
  %148 = and i64 %147, 4294967295, !dbg !5428
  %149 = icmp eq i64 %148, 1, !dbg !5428
  %150 = and i1 %145, %149, !dbg !5428
  %151 = and i1 %141, %150, !dbg !5428
  %152 = and i1 %137, %151, !dbg !5428
  br i1 %152, label %if_end57, label %assert_fail58, !dbg !5428, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5428
  %154 = load i64, ptr %153, align 8, !dbg !5428
  %155 = icmp eq i64 %154, 0, !dbg !5428
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !5428, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %156(ptr nonnull @.str.1692), !dbg !5428
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %157(ptr nonnull @.str.1693), !dbg !5428
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %158 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5428
  %159 = load i32, ptr %158, align 4, !dbg !5428
  %160 = icmp eq i32 %159, 1, !dbg !5428
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !5428, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %161(ptr nonnull @.str.1694), !dbg !5428
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5428
  %163 = load i32, ptr %162, align 4, !dbg !5428
  %164 = icmp eq i32 %dev_id, %163, !dbg !5428
  br i1 %164, label %assert_end65, label %assert_fail64, !dbg !5428, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %165(ptr nonnull @.str.1695), !dbg !5428
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %166 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !5428
  %167 = load i32, ptr %166, align 4, !dbg !5428
  %168 = icmp eq i32 %167, 0, !dbg !5428
  br i1 %168, label %assert_end69, label %assert_fail66, !dbg !5428, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %169(ptr nonnull @.str.1696), !dbg !5428
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !5428
  %171 = load i16, ptr %170, align 2, !dbg !5428
  %172 = icmp eq i16 %171, 1, !dbg !5428
  %173 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !5428
  %174 = load i8, ptr %173, align 1, !dbg !5428
  %175 = icmp eq i8 %174, 16, !dbg !5428
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !5428
  %177 = load i8, ptr %176, align 1, !dbg !5428
  %178 = icmp eq i8 %177, 0, !dbg !5428
  %179 = and i1 %175, %178, !dbg !5428
  %180 = and i1 %172, %179, !dbg !5428
  br i1 %180, label %assert_end71, label %assert_fail70, !dbg !5428, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %181(ptr nonnull @.str.1697), !dbg !5428
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !5428
  %183 = load i64, ptr %182, align 8, !dbg !5428
  %184 = icmp eq i64 %183, 0, !dbg !5428
  br i1 %184, label %assert_end73, label %assert_fail72, !dbg !5428, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %185(ptr nonnull @.str.1698), !dbg !5428
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !5428
  %187 = load i32, ptr %186, align 4, !dbg !5428
  %188 = icmp eq i32 %187, 1, !dbg !5428
  br i1 %188, label %assert_end75, label %assert_fail74, !dbg !5428, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %189(ptr nonnull @.str.1699), !dbg !5428
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !5428
  %191 = load i32, ptr %190, align 4, !dbg !5428
  %192 = icmp eq i32 %dev_id, %191, !dbg !5428
  br i1 %192, label %assert_end77, label %assert_fail76, !dbg !5428, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %193(ptr nonnull @.str.1700), !dbg !5428
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %194 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !5428
  %195 = load i32, ptr %194, align 4, !dbg !5428
  %196 = icmp eq i32 %195, 0, !dbg !5428
  br i1 %196, label %assert_end81, label %assert_fail78, !dbg !5428, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %197(ptr nonnull @.str.1701), !dbg !5428
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %198 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !5428
  %199 = load i16, ptr %198, align 2, !dbg !5428
  %200 = icmp eq i16 %199, 1, !dbg !5428
  %201 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !5428
  %202 = load i8, ptr %201, align 1, !dbg !5428
  %203 = icmp eq i8 %202, 16, !dbg !5428
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !5428
  %205 = load i8, ptr %204, align 1, !dbg !5428
  %206 = icmp eq i8 %205, 0, !dbg !5428
  %207 = and i1 %203, %206, !dbg !5428
  %208 = and i1 %200, %207, !dbg !5428
  br i1 %208, label %assert_end83, label %assert_fail82, !dbg !5428, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %209(ptr nonnull @.str.1702), !dbg !5428
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %210 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !5428
  %211 = load i64, ptr %210, align 8, !dbg !5428
  %212 = icmp eq i64 %211, 0, !dbg !5428
  br i1 %212, label %assert_end85, label %assert_fail84, !dbg !5428, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %213(ptr nonnull @.str.1703), !dbg !5428
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !5428
  %215 = load i32, ptr %214, align 4, !dbg !5428
  %216 = icmp eq i32 %215, 1, !dbg !5428
  br i1 %216, label %assert_end87, label %assert_fail86, !dbg !5428, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %217(ptr nonnull @.str.1704), !dbg !5428
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %218 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !5428
  %219 = load i32, ptr %218, align 4, !dbg !5428
  %220 = icmp eq i32 %dev_id, %219, !dbg !5428
  br i1 %220, label %assert_end89, label %assert_fail88, !dbg !5428, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %221 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %221(ptr nonnull @.str.1705), !dbg !5428
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %222 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !5428
  %223 = load i32, ptr %222, align 4, !dbg !5428
  %224 = icmp eq i32 %223, 5, !dbg !5428
  br i1 %224, label %assert_end93, label %assert_fail90, !dbg !5428, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %225 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %225(ptr nonnull @.str.1706), !dbg !5428
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %226 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !5428
  %227 = load i16, ptr %226, align 2, !dbg !5428
  %228 = icmp eq i16 %227, 1, !dbg !5428
  %229 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !5428
  %230 = load i8, ptr %229, align 1, !dbg !5428
  %231 = icmp eq i8 %230, 8, !dbg !5428
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !5428
  %233 = load i8, ptr %232, align 1, !dbg !5428
  %234 = icmp eq i8 %233, 0, !dbg !5428
  %235 = and i1 %231, %234, !dbg !5428
  %236 = and i1 %228, %235, !dbg !5428
  br i1 %236, label %assert_end95, label %assert_fail94, !dbg !5428, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %237(ptr nonnull @.str.1707), !dbg !5428
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %238 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.shape, align 8, !dbg !5428, !tbaa !5532
  %239 = and i64 %238, 4294967295, !dbg !5428
  %240 = icmp eq i64 %239, 1, !dbg !5428
  br i1 %240, label %assert_end97, label %assert_fail96, !dbg !5428, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %241(ptr nonnull @.str.1708), !dbg !5428
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.shape, i64 1, !dbg !5428
  %243 = load i64, ptr %242, align 8, !dbg !5428, !tbaa !5542
  %244 = and i64 %243, 4294967295, !dbg !5428
  %245 = icmp eq i64 %244, 64, !dbg !5428
  br i1 %245, label %assert_end99, label %assert_fail98, !dbg !5428, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %246(ptr nonnull @.str.1709), !dbg !5428
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.shape, i64 2, !dbg !5428
  %248 = load i64, ptr %247, align 8, !dbg !5428, !tbaa !5544
  %249 = and i64 %248, 4294967295, !dbg !5428
  %250 = icmp eq i64 %249, 56, !dbg !5428
  br i1 %250, label %assert_end101, label %assert_fail100, !dbg !5428, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %251(ptr nonnull @.str.1710), !dbg !5428
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.shape, i64 3, !dbg !5428
  %253 = load i64, ptr %252, align 8, !dbg !5428, !tbaa !5547
  %254 = and i64 %253, 4294967295, !dbg !5428
  %255 = icmp eq i64 %254, 56, !dbg !5428
  br i1 %255, label %assert_end103, label %assert_fail102, !dbg !5428, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %256(ptr nonnull @.str.1711), !dbg !5428
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.shape, i64 4, !dbg !5428
  %258 = load i64, ptr %257, align 8, !dbg !5428, !tbaa !5549
  %259 = and i64 %258, 4294967295, !dbg !5428
  %260 = icmp eq i64 %259, 4, !dbg !5428
  br i1 %260, label %assert_end105, label %assert_fail104, !dbg !5428, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %261(ptr nonnull @.str.1712), !dbg !5428
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.strides, null, !dbg !5428
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !5428, !prof !59

if_then106:                                       ; preds = %assert_end105
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.strides, i64 1, !dbg !5428
  %263 = load i64, ptr %262, align 8, !dbg !5428, !tbaa !5553
  %264 = and i64 %263, 4294967295, !dbg !5428
  %265 = icmp eq i64 %264, 12544, !dbg !5428
  %266 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.strides, i64 2, !dbg !5428
  %267 = load i64, ptr %266, align 8, !dbg !5428, !tbaa !5563
  %268 = and i64 %267, 4294967295, !dbg !5428
  %269 = icmp eq i64 %268, 224, !dbg !5428
  %270 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.strides, i64 3, !dbg !5428
  %271 = load i64, ptr %270, align 8, !dbg !5428, !tbaa !5566
  %272 = and i64 %271, 4294967295, !dbg !5428
  %273 = icmp eq i64 %272, 4, !dbg !5428
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2.T_cast.strides, i64 4, !dbg !5428
  %275 = load i64, ptr %274, align 8, !dbg !5428, !tbaa !5568
  %276 = and i64 %275, 4294967295, !dbg !5428
  %277 = icmp eq i64 %276, 1, !dbg !5428
  %278 = and i1 %273, %277, !dbg !5428
  %279 = and i1 %269, %278, !dbg !5428
  %280 = and i1 %265, %279, !dbg !5428
  br i1 %280, label %if_end107, label %assert_fail108, !dbg !5428, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %281 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !5428
  %282 = load i64, ptr %281, align 8, !dbg !5428
  %283 = icmp eq i64 %282, 0, !dbg !5428
  br i1 %283, label %assert_end111, label %assert_fail110, !dbg !5428, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %284(ptr nonnull @.str.1713), !dbg !5428
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %285 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %285(ptr nonnull @.str.1714), !dbg !5428
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %286 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !5428
  %287 = load i32, ptr %286, align 4, !dbg !5428
  %288 = icmp eq i32 %287, 1, !dbg !5428
  br i1 %288, label %assert_end113, label %assert_fail112, !dbg !5428, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %289(ptr nonnull @.str.1715), !dbg !5428
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %290 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !5428
  %291 = load i32, ptr %290, align 4, !dbg !5428
  %292 = icmp eq i32 %dev_id, %291, !dbg !5428
  br i1 %292, label %assert_end115, label %assert_fail114, !dbg !5428, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %293 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5428, !tbaa !19
  tail call void %293(ptr nonnull @.str.1716), !dbg !5428
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %294 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_compute_(ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !5428
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5572 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5574, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5575, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5576, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5577, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5578, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5579, metadata !DIExpression()), !dbg !5580
  %0 = icmp eq i32 %num_args, 5, !dbg !5580
  br i1 %0, label %assert_end, label %assert_fail, !dbg !5580, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %294, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !5580

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %1(ptr nonnull @.str.1718), !dbg !5580
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5580, !tbaa !5581
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5580
  %p1.code = load i32, ptr %2, align 4, !dbg !5580, !tbaa !5592
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5580
  %p2.code = load i32, ptr %3, align 4, !dbg !5580, !tbaa !5594
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !5580
  %p3.code = load i32, ptr %4, align 4, !dbg !5580, !tbaa !5597
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !5580
  %T_cast.code = load i32, ptr %5, align 4, !dbg !5580, !tbaa !5599
  %p0 = load ptr, ptr %args, align 8, !dbg !5580
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5580
  %p1 = load ptr, ptr %6, align 8, !dbg !5580
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5580
  %p2 = load ptr, ptr %7, align 8, !dbg !5580
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !5580
  %p3 = load ptr, ptr %8, align 8, !dbg !5580
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !5580
  %T_cast = load ptr, ptr %9, align 8, !dbg !5580
  %p0116 = load ptr, ptr %p0, align 8, !dbg !5580
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !5580
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5580
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.shape = load ptr, ptr %10, align 8, !dbg !5580
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5580
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.strides = load ptr, ptr %11, align 8, !dbg !5580
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5580
  %dev_id = load i32, ptr %12, align 4, !dbg !5580
  %p1117 = load ptr, ptr %p1, align 8, !dbg !5580
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !5580
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5580
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.shape = load ptr, ptr %13, align 8, !dbg !5580
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5580
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.strides = load ptr, ptr %14, align 8, !dbg !5580
  %p2119 = load ptr, ptr %p2, align 8, !dbg !5580
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !5580
  %p3120 = load ptr, ptr %p3, align 8, !dbg !5580
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !5580
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !5580
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !5580
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !5580
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.shape = load ptr, ptr %15, align 8, !dbg !5580
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !5580
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.strides = load ptr, ptr %16, align 8, !dbg !5580
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !5580

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %17(ptr nonnull @.str.1719), !dbg !5580
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !5580

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %18(ptr nonnull @.str.1720), !dbg !5580
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !5580

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %19(ptr nonnull @.str.1721), !dbg !5580
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !5580

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %20(ptr nonnull @.str.1722), !dbg !5580
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !5580

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %21(ptr nonnull @.str.1723), !dbg !5580
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5580
  %23 = load i32, ptr %22, align 4, !dbg !5580
  %24 = icmp eq i32 %23, 5, !dbg !5580
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !5580, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %25(ptr nonnull @.str.1724), !dbg !5580
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5580
  %27 = load i16, ptr %26, align 2, !dbg !5580
  %28 = icmp eq i16 %27, 1, !dbg !5580
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5580
  %30 = load i8, ptr %29, align 1, !dbg !5580
  %31 = icmp eq i8 %30, 8, !dbg !5580
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5580
  %33 = load i8, ptr %32, align 1, !dbg !5580
  %34 = icmp eq i8 %33, 0, !dbg !5580
  %35 = and i1 %31, %34, !dbg !5580
  %36 = and i1 %28, %35, !dbg !5580
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !5580, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %37(ptr nonnull @.str.1725), !dbg !5580
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.shape, align 8, !dbg !5580, !tbaa !5603
  %39 = and i64 %38, 4294967295, !dbg !5580
  %40 = icmp eq i64 %39, 1, !dbg !5580
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !5580, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %41(ptr nonnull @.str.1726), !dbg !5580
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.shape, i64 1, !dbg !5580
  %43 = load i64, ptr %42, align 8, !dbg !5580, !tbaa !5613
  %44 = and i64 %43, 4294967295, !dbg !5580
  %45 = icmp eq i64 %44, 512, !dbg !5580
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !5580, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %46(ptr nonnull @.str.1727), !dbg !5580
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.shape, i64 2, !dbg !5580
  %48 = load i64, ptr %47, align 8, !dbg !5580, !tbaa !5615
  %49 = and i64 %48, 4294967295, !dbg !5580
  %50 = icmp eq i64 %49, 7, !dbg !5580
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !5580, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %51(ptr nonnull @.str.1728), !dbg !5580
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.shape, i64 3, !dbg !5580
  %53 = load i64, ptr %52, align 8, !dbg !5580, !tbaa !5618
  %54 = and i64 %53, 4294967295, !dbg !5580
  %55 = icmp eq i64 %54, 7, !dbg !5580
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !5580, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %56(ptr nonnull @.str.1729), !dbg !5580
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.shape, i64 4, !dbg !5580
  %58 = load i64, ptr %57, align 8, !dbg !5580, !tbaa !5620
  %59 = and i64 %58, 4294967295, !dbg !5580
  %60 = icmp eq i64 %59, 4, !dbg !5580
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !5580, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %61(ptr nonnull @.str.1730), !dbg !5580
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.strides, null, !dbg !5580
  br i1 %.not, label %if_end, label %if_then, !dbg !5580, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.strides, i64 1, !dbg !5580
  %63 = load i64, ptr %62, align 8, !dbg !5580, !tbaa !5624
  %64 = and i64 %63, 4294967295, !dbg !5580
  %65 = icmp eq i64 %64, 196, !dbg !5580
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.strides, i64 2, !dbg !5580
  %67 = load i64, ptr %66, align 8, !dbg !5580, !tbaa !5634
  %68 = and i64 %67, 4294967295, !dbg !5580
  %69 = icmp eq i64 %68, 28, !dbg !5580
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.strides, i64 3, !dbg !5580
  %71 = load i64, ptr %70, align 8, !dbg !5580, !tbaa !5637
  %72 = and i64 %71, 4294967295, !dbg !5580
  %73 = icmp eq i64 %72, 4, !dbg !5580
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p0.strides, i64 4, !dbg !5580
  %75 = load i64, ptr %74, align 8, !dbg !5580, !tbaa !5639
  %76 = and i64 %75, 4294967295, !dbg !5580
  %77 = icmp eq i64 %76, 1, !dbg !5580
  %78 = and i1 %73, %77, !dbg !5580
  %79 = and i1 %69, %78, !dbg !5580
  %80 = and i1 %65, %79, !dbg !5580
  br i1 %80, label %if_end, label %assert_fail32, !dbg !5580, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5580
  %82 = load i64, ptr %81, align 8, !dbg !5580
  %83 = icmp eq i64 %82, 0, !dbg !5580
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !5580, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %84(ptr nonnull @.str.1731), !dbg !5580
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %85(ptr nonnull @.str.1732), !dbg !5580
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5580
  %87 = load i32, ptr %86, align 4, !dbg !5580
  %88 = icmp eq i32 %87, 1, !dbg !5580
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !5580, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %89(ptr nonnull @.str.1733), !dbg !5580
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5580
  %91 = load i32, ptr %90, align 4, !dbg !5580
  %92 = icmp eq i32 %91, 6, !dbg !5580
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !5580, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %93(ptr nonnull @.str.1734), !dbg !5580
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5580
  %95 = load i16, ptr %94, align 2, !dbg !5580
  %96 = icmp eq i16 %95, 1, !dbg !5580
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5580
  %98 = load i8, ptr %97, align 1, !dbg !5580
  %99 = icmp eq i8 %98, 8, !dbg !5580
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5580
  %101 = load i8, ptr %100, align 1, !dbg !5580
  %102 = icmp eq i8 %101, 0, !dbg !5580
  %103 = and i1 %99, %102, !dbg !5580
  %104 = and i1 %96, %103, !dbg !5580
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !5580, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %105(ptr nonnull @.str.1735), !dbg !5580
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.shape, align 8, !dbg !5580, !tbaa !5643
  %107 = and i64 %106, 4294967295, !dbg !5580
  %108 = icmp eq i64 %107, 128, !dbg !5580
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !5580, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %109(ptr nonnull @.str.1736), !dbg !5580
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.shape, i64 1, !dbg !5580
  %111 = load i64, ptr %110, align 8, !dbg !5580, !tbaa !5653
  %112 = and i64 %111, 4294967295, !dbg !5580
  %113 = icmp eq i64 %112, 512, !dbg !5580
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !5580, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %114(ptr nonnull @.str.1737), !dbg !5580
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.shape, i64 2, !dbg !5580
  %116 = load i64, ptr %115, align 8, !dbg !5580, !tbaa !5655
  %117 = and i64 %116, 4294967295, !dbg !5580
  %118 = icmp eq i64 %117, 1, !dbg !5580
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !5580, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %119(ptr nonnull @.str.1738), !dbg !5580
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.shape, i64 3, !dbg !5580
  %121 = load i64, ptr %120, align 8, !dbg !5580, !tbaa !5658
  %122 = and i64 %121, 4294967295, !dbg !5580
  %123 = icmp eq i64 %122, 1, !dbg !5580
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !5580, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %124(ptr nonnull @.str.1739), !dbg !5580
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.shape, i64 4, !dbg !5580
  %126 = load i64, ptr %125, align 8, !dbg !5580, !tbaa !5660
  %127 = and i64 %126, 4294967295, !dbg !5580
  %128 = icmp eq i64 %127, 4, !dbg !5580
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !5580, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %129(ptr nonnull @.str.1740), !dbg !5580
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.shape, i64 5, !dbg !5580
  %131 = load i64, ptr %130, align 8, !dbg !5580, !tbaa !5664
  %132 = and i64 %131, 4294967295, !dbg !5580
  %133 = icmp eq i64 %132, 4, !dbg !5580
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !5580, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %134(ptr nonnull @.str.1741), !dbg !5580
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.strides, null, !dbg !5580
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !5580, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.strides, align 8, !dbg !5580, !tbaa !5666
  %136 = and i64 %135, 4294967295, !dbg !5580
  %137 = icmp eq i64 %136, 8192, !dbg !5580
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.strides, i64 1, !dbg !5580
  %139 = load i64, ptr %138, align 8, !dbg !5580, !tbaa !5676
  %140 = and i64 %139, 4294967295, !dbg !5580
  %141 = icmp eq i64 %140, 16, !dbg !5580
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.strides, i64 4, !dbg !5580
  %143 = load i64, ptr %142, align 8, !dbg !5580, !tbaa !5678
  %144 = and i64 %143, 4294967295, !dbg !5580
  %145 = icmp eq i64 %144, 4, !dbg !5580
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.p1.strides, i64 5, !dbg !5580
  %147 = load i64, ptr %146, align 8, !dbg !5580, !tbaa !5682
  %148 = and i64 %147, 4294967295, !dbg !5580
  %149 = icmp eq i64 %148, 1, !dbg !5580
  %150 = and i1 %145, %149, !dbg !5580
  %151 = and i1 %141, %150, !dbg !5580
  %152 = and i1 %137, %151, !dbg !5580
  br i1 %152, label %if_end57, label %assert_fail58, !dbg !5580, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5580
  %154 = load i64, ptr %153, align 8, !dbg !5580
  %155 = icmp eq i64 %154, 0, !dbg !5580
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !5580, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %156(ptr nonnull @.str.1742), !dbg !5580
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %157(ptr nonnull @.str.1743), !dbg !5580
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %158 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5580
  %159 = load i32, ptr %158, align 4, !dbg !5580
  %160 = icmp eq i32 %159, 1, !dbg !5580
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !5580, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %161(ptr nonnull @.str.1744), !dbg !5580
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5580
  %163 = load i32, ptr %162, align 4, !dbg !5580
  %164 = icmp eq i32 %dev_id, %163, !dbg !5580
  br i1 %164, label %assert_end65, label %assert_fail64, !dbg !5580, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %165(ptr nonnull @.str.1745), !dbg !5580
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %166 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !5580
  %167 = load i32, ptr %166, align 4, !dbg !5580
  %168 = icmp eq i32 %167, 0, !dbg !5580
  br i1 %168, label %assert_end69, label %assert_fail66, !dbg !5580, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %169(ptr nonnull @.str.1746), !dbg !5580
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !5580
  %171 = load i16, ptr %170, align 2, !dbg !5580
  %172 = icmp eq i16 %171, 1, !dbg !5580
  %173 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !5580
  %174 = load i8, ptr %173, align 1, !dbg !5580
  %175 = icmp eq i8 %174, 16, !dbg !5580
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !5580
  %177 = load i8, ptr %176, align 1, !dbg !5580
  %178 = icmp eq i8 %177, 0, !dbg !5580
  %179 = and i1 %175, %178, !dbg !5580
  %180 = and i1 %172, %179, !dbg !5580
  br i1 %180, label %assert_end71, label %assert_fail70, !dbg !5580, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %181(ptr nonnull @.str.1747), !dbg !5580
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !5580
  %183 = load i64, ptr %182, align 8, !dbg !5580
  %184 = icmp eq i64 %183, 0, !dbg !5580
  br i1 %184, label %assert_end73, label %assert_fail72, !dbg !5580, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %185(ptr nonnull @.str.1748), !dbg !5580
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !5580
  %187 = load i32, ptr %186, align 4, !dbg !5580
  %188 = icmp eq i32 %187, 1, !dbg !5580
  br i1 %188, label %assert_end75, label %assert_fail74, !dbg !5580, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %189(ptr nonnull @.str.1749), !dbg !5580
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !5580
  %191 = load i32, ptr %190, align 4, !dbg !5580
  %192 = icmp eq i32 %dev_id, %191, !dbg !5580
  br i1 %192, label %assert_end77, label %assert_fail76, !dbg !5580, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %193(ptr nonnull @.str.1750), !dbg !5580
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %194 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !5580
  %195 = load i32, ptr %194, align 4, !dbg !5580
  %196 = icmp eq i32 %195, 0, !dbg !5580
  br i1 %196, label %assert_end81, label %assert_fail78, !dbg !5580, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %197(ptr nonnull @.str.1751), !dbg !5580
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %198 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !5580
  %199 = load i16, ptr %198, align 2, !dbg !5580
  %200 = icmp eq i16 %199, 1, !dbg !5580
  %201 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !5580
  %202 = load i8, ptr %201, align 1, !dbg !5580
  %203 = icmp eq i8 %202, 16, !dbg !5580
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !5580
  %205 = load i8, ptr %204, align 1, !dbg !5580
  %206 = icmp eq i8 %205, 0, !dbg !5580
  %207 = and i1 %203, %206, !dbg !5580
  %208 = and i1 %200, %207, !dbg !5580
  br i1 %208, label %assert_end83, label %assert_fail82, !dbg !5580, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %209(ptr nonnull @.str.1752), !dbg !5580
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %210 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !5580
  %211 = load i64, ptr %210, align 8, !dbg !5580
  %212 = icmp eq i64 %211, 0, !dbg !5580
  br i1 %212, label %assert_end85, label %assert_fail84, !dbg !5580, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %213(ptr nonnull @.str.1753), !dbg !5580
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !5580
  %215 = load i32, ptr %214, align 4, !dbg !5580
  %216 = icmp eq i32 %215, 1, !dbg !5580
  br i1 %216, label %assert_end87, label %assert_fail86, !dbg !5580, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %217(ptr nonnull @.str.1754), !dbg !5580
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %218 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !5580
  %219 = load i32, ptr %218, align 4, !dbg !5580
  %220 = icmp eq i32 %dev_id, %219, !dbg !5580
  br i1 %220, label %assert_end89, label %assert_fail88, !dbg !5580, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %221 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %221(ptr nonnull @.str.1755), !dbg !5580
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %222 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !5580
  %223 = load i32, ptr %222, align 4, !dbg !5580
  %224 = icmp eq i32 %223, 5, !dbg !5580
  br i1 %224, label %assert_end93, label %assert_fail90, !dbg !5580, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %225 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %225(ptr nonnull @.str.1756), !dbg !5580
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %226 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !5580
  %227 = load i16, ptr %226, align 2, !dbg !5580
  %228 = icmp eq i16 %227, 1, !dbg !5580
  %229 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !5580
  %230 = load i8, ptr %229, align 1, !dbg !5580
  %231 = icmp eq i8 %230, 8, !dbg !5580
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !5580
  %233 = load i8, ptr %232, align 1, !dbg !5580
  %234 = icmp eq i8 %233, 0, !dbg !5580
  %235 = and i1 %231, %234, !dbg !5580
  %236 = and i1 %228, %235, !dbg !5580
  br i1 %236, label %assert_end95, label %assert_fail94, !dbg !5580, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %237(ptr nonnull @.str.1757), !dbg !5580
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %238 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.shape, align 8, !dbg !5580, !tbaa !5684
  %239 = and i64 %238, 4294967295, !dbg !5580
  %240 = icmp eq i64 %239, 1, !dbg !5580
  br i1 %240, label %assert_end97, label %assert_fail96, !dbg !5580, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %241(ptr nonnull @.str.1758), !dbg !5580
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.shape, i64 1, !dbg !5580
  %243 = load i64, ptr %242, align 8, !dbg !5580, !tbaa !5694
  %244 = and i64 %243, 4294967295, !dbg !5580
  %245 = icmp eq i64 %244, 128, !dbg !5580
  br i1 %245, label %assert_end99, label %assert_fail98, !dbg !5580, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %246(ptr nonnull @.str.1759), !dbg !5580
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.shape, i64 2, !dbg !5580
  %248 = load i64, ptr %247, align 8, !dbg !5580, !tbaa !5696
  %249 = and i64 %248, 4294967295, !dbg !5580
  %250 = icmp eq i64 %249, 7, !dbg !5580
  br i1 %250, label %assert_end101, label %assert_fail100, !dbg !5580, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %251(ptr nonnull @.str.1760), !dbg !5580
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.shape, i64 3, !dbg !5580
  %253 = load i64, ptr %252, align 8, !dbg !5580, !tbaa !5699
  %254 = and i64 %253, 4294967295, !dbg !5580
  %255 = icmp eq i64 %254, 7, !dbg !5580
  br i1 %255, label %assert_end103, label %assert_fail102, !dbg !5580, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %256(ptr nonnull @.str.1761), !dbg !5580
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.shape, i64 4, !dbg !5580
  %258 = load i64, ptr %257, align 8, !dbg !5580, !tbaa !5701
  %259 = and i64 %258, 4294967295, !dbg !5580
  %260 = icmp eq i64 %259, 4, !dbg !5580
  br i1 %260, label %assert_end105, label %assert_fail104, !dbg !5580, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %261(ptr nonnull @.str.1762), !dbg !5580
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.strides, null, !dbg !5580
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !5580, !prof !59

if_then106:                                       ; preds = %assert_end105
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.strides, i64 1, !dbg !5580
  %263 = load i64, ptr %262, align 8, !dbg !5580, !tbaa !5705
  %264 = and i64 %263, 4294967295, !dbg !5580
  %265 = icmp eq i64 %264, 196, !dbg !5580
  %266 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.strides, i64 2, !dbg !5580
  %267 = load i64, ptr %266, align 8, !dbg !5580, !tbaa !5715
  %268 = and i64 %267, 4294967295, !dbg !5580
  %269 = icmp eq i64 %268, 28, !dbg !5580
  %270 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.strides, i64 3, !dbg !5580
  %271 = load i64, ptr %270, align 8, !dbg !5580, !tbaa !5718
  %272 = and i64 %271, 4294967295, !dbg !5580
  %273 = icmp eq i64 %272, 4, !dbg !5580
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20.T_cast.strides, i64 4, !dbg !5580
  %275 = load i64, ptr %274, align 8, !dbg !5580, !tbaa !5720
  %276 = and i64 %275, 4294967295, !dbg !5580
  %277 = icmp eq i64 %276, 1, !dbg !5580
  %278 = and i1 %273, %277, !dbg !5580
  %279 = and i1 %269, %278, !dbg !5580
  %280 = and i1 %265, %279, !dbg !5580
  br i1 %280, label %if_end107, label %assert_fail108, !dbg !5580, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %281 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !5580
  %282 = load i64, ptr %281, align 8, !dbg !5580
  %283 = icmp eq i64 %282, 0, !dbg !5580
  br i1 %283, label %assert_end111, label %assert_fail110, !dbg !5580, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %284(ptr nonnull @.str.1763), !dbg !5580
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %285 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %285(ptr nonnull @.str.1764), !dbg !5580
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %286 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !5580
  %287 = load i32, ptr %286, align 4, !dbg !5580
  %288 = icmp eq i32 %287, 1, !dbg !5580
  br i1 %288, label %assert_end113, label %assert_fail112, !dbg !5580, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %289(ptr nonnull @.str.1765), !dbg !5580
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %290 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !5580
  %291 = load i32, ptr %290, align 4, !dbg !5580
  %292 = icmp eq i32 %dev_id, %291, !dbg !5580
  br i1 %292, label %assert_end115, label %assert_fail114, !dbg !5580, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %293 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5580, !tbaa !19
  tail call void %293(ptr nonnull @.str.1766), !dbg !5580
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %294 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_compute_(ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !5580
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5724 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5726, metadata !DIExpression()), !dbg !5732
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5727, metadata !DIExpression()), !dbg !5732
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5728, metadata !DIExpression()), !dbg !5732
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5729, metadata !DIExpression()), !dbg !5732
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5730, metadata !DIExpression()), !dbg !5732
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5731, metadata !DIExpression()), !dbg !5732
  %0 = icmp eq i32 %num_args, 5, !dbg !5732
  br i1 %0, label %assert_end, label %assert_fail, !dbg !5732, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %304, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !5732

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %1(ptr nonnull @.str.1768), !dbg !5732
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5732, !tbaa !5733
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5732
  %p1.code = load i32, ptr %2, align 4, !dbg !5732, !tbaa !5744
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5732
  %p2.code = load i32, ptr %3, align 4, !dbg !5732, !tbaa !5746
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !5732
  %p3.code = load i32, ptr %4, align 4, !dbg !5732, !tbaa !5749
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !5732
  %T_cast.code = load i32, ptr %5, align 4, !dbg !5732, !tbaa !5751
  %p0 = load ptr, ptr %args, align 8, !dbg !5732
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5732
  %p1 = load ptr, ptr %6, align 8, !dbg !5732
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5732
  %p2 = load ptr, ptr %7, align 8, !dbg !5732
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !5732
  %p3 = load ptr, ptr %8, align 8, !dbg !5732
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !5732
  %T_cast = load ptr, ptr %9, align 8, !dbg !5732
  %p0116 = load ptr, ptr %p0, align 8, !dbg !5732
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !5732
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5732
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.shape = load ptr, ptr %10, align 8, !dbg !5732
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5732
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.strides = load ptr, ptr %11, align 8, !dbg !5732
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5732
  %dev_id = load i32, ptr %12, align 4, !dbg !5732
  %p1117 = load ptr, ptr %p1, align 8, !dbg !5732
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !5732
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5732
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.shape = load ptr, ptr %13, align 8, !dbg !5732
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5732
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.strides = load ptr, ptr %14, align 8, !dbg !5732
  %p2119 = load ptr, ptr %p2, align 8, !dbg !5732
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !5732
  %p3120 = load ptr, ptr %p3, align 8, !dbg !5732
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !5732
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !5732
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !5732
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !5732
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.shape = load ptr, ptr %15, align 8, !dbg !5732
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !5732
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.strides = load ptr, ptr %16, align 8, !dbg !5732
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !5732

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %17(ptr nonnull @.str.1769), !dbg !5732
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !5732

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %18(ptr nonnull @.str.1770), !dbg !5732
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !5732

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %19(ptr nonnull @.str.1771), !dbg !5732
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !5732

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %20(ptr nonnull @.str.1772), !dbg !5732
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !5732

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %21(ptr nonnull @.str.1773), !dbg !5732
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5732
  %23 = load i32, ptr %22, align 4, !dbg !5732
  %24 = icmp eq i32 %23, 5, !dbg !5732
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !5732, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %25(ptr nonnull @.str.1774), !dbg !5732
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5732
  %27 = load i16, ptr %26, align 2, !dbg !5732
  %28 = icmp eq i16 %27, 1, !dbg !5732
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5732
  %30 = load i8, ptr %29, align 1, !dbg !5732
  %31 = icmp eq i8 %30, 8, !dbg !5732
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5732
  %33 = load i8, ptr %32, align 1, !dbg !5732
  %34 = icmp eq i8 %33, 0, !dbg !5732
  %35 = and i1 %31, %34, !dbg !5732
  %36 = and i1 %28, %35, !dbg !5732
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !5732, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %37(ptr nonnull @.str.1775), !dbg !5732
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.shape, align 8, !dbg !5732, !tbaa !5755
  %39 = and i64 %38, 4294967295, !dbg !5732
  %40 = icmp eq i64 %39, 1, !dbg !5732
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !5732, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %41(ptr nonnull @.str.1776), !dbg !5732
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.shape, i64 1, !dbg !5732
  %43 = load i64, ptr %42, align 8, !dbg !5732, !tbaa !5765
  %44 = and i64 %43, 4294967295, !dbg !5732
  %45 = icmp eq i64 %44, 128, !dbg !5732
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !5732, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %46(ptr nonnull @.str.1777), !dbg !5732
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.shape, i64 2, !dbg !5732
  %48 = load i64, ptr %47, align 8, !dbg !5732, !tbaa !5767
  %49 = and i64 %48, 4294967295, !dbg !5732
  %50 = icmp eq i64 %49, 7, !dbg !5732
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !5732, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %51(ptr nonnull @.str.1778), !dbg !5732
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.shape, i64 3, !dbg !5732
  %53 = load i64, ptr %52, align 8, !dbg !5732, !tbaa !5770
  %54 = and i64 %53, 4294967295, !dbg !5732
  %55 = icmp eq i64 %54, 7, !dbg !5732
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !5732, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %56(ptr nonnull @.str.1779), !dbg !5732
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.shape, i64 4, !dbg !5732
  %58 = load i64, ptr %57, align 8, !dbg !5732, !tbaa !5772
  %59 = and i64 %58, 4294967295, !dbg !5732
  %60 = icmp eq i64 %59, 4, !dbg !5732
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !5732, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %61(ptr nonnull @.str.1780), !dbg !5732
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.strides, null, !dbg !5732
  br i1 %.not, label %if_end, label %if_then, !dbg !5732, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.strides, i64 1, !dbg !5732
  %63 = load i64, ptr %62, align 8, !dbg !5732, !tbaa !5776
  %64 = and i64 %63, 4294967295, !dbg !5732
  %65 = icmp eq i64 %64, 196, !dbg !5732
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.strides, i64 2, !dbg !5732
  %67 = load i64, ptr %66, align 8, !dbg !5732, !tbaa !5786
  %68 = and i64 %67, 4294967295, !dbg !5732
  %69 = icmp eq i64 %68, 28, !dbg !5732
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.strides, i64 3, !dbg !5732
  %71 = load i64, ptr %70, align 8, !dbg !5732, !tbaa !5789
  %72 = and i64 %71, 4294967295, !dbg !5732
  %73 = icmp eq i64 %72, 4, !dbg !5732
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p0.strides, i64 4, !dbg !5732
  %75 = load i64, ptr %74, align 8, !dbg !5732, !tbaa !5791
  %76 = and i64 %75, 4294967295, !dbg !5732
  %77 = icmp eq i64 %76, 1, !dbg !5732
  %78 = and i1 %73, %77, !dbg !5732
  %79 = and i1 %69, %78, !dbg !5732
  %80 = and i1 %65, %79, !dbg !5732
  br i1 %80, label %if_end, label %assert_fail32, !dbg !5732, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5732
  %82 = load i64, ptr %81, align 8, !dbg !5732
  %83 = icmp eq i64 %82, 0, !dbg !5732
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !5732, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %84(ptr nonnull @.str.1781), !dbg !5732
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %85(ptr nonnull @.str.1782), !dbg !5732
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5732
  %87 = load i32, ptr %86, align 4, !dbg !5732
  %88 = icmp eq i32 %87, 1, !dbg !5732
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !5732, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %89(ptr nonnull @.str.1783), !dbg !5732
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5732
  %91 = load i32, ptr %90, align 4, !dbg !5732
  %92 = icmp eq i32 %91, 6, !dbg !5732
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !5732, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %93(ptr nonnull @.str.1784), !dbg !5732
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5732
  %95 = load i16, ptr %94, align 2, !dbg !5732
  %96 = icmp eq i16 %95, 1, !dbg !5732
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5732
  %98 = load i8, ptr %97, align 1, !dbg !5732
  %99 = icmp eq i8 %98, 8, !dbg !5732
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5732
  %101 = load i8, ptr %100, align 1, !dbg !5732
  %102 = icmp eq i8 %101, 0, !dbg !5732
  %103 = and i1 %99, %102, !dbg !5732
  %104 = and i1 %96, %103, !dbg !5732
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !5732, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %105(ptr nonnull @.str.1785), !dbg !5732
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.shape, align 8, !dbg !5732, !tbaa !5795
  %107 = and i64 %106, 4294967295, !dbg !5732
  %108 = icmp eq i64 %107, 128, !dbg !5732
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !5732, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %109(ptr nonnull @.str.1786), !dbg !5732
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.shape, i64 1, !dbg !5732
  %111 = load i64, ptr %110, align 8, !dbg !5732, !tbaa !5805
  %112 = and i64 %111, 4294967295, !dbg !5732
  %113 = icmp eq i64 %112, 128, !dbg !5732
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !5732, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %114(ptr nonnull @.str.1787), !dbg !5732
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.shape, i64 2, !dbg !5732
  %116 = load i64, ptr %115, align 8, !dbg !5732, !tbaa !5807
  %117 = and i64 %116, 4294967295, !dbg !5732
  %118 = icmp eq i64 %117, 3, !dbg !5732
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !5732, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %119(ptr nonnull @.str.1788), !dbg !5732
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.shape, i64 3, !dbg !5732
  %121 = load i64, ptr %120, align 8, !dbg !5732, !tbaa !5810
  %122 = and i64 %121, 4294967295, !dbg !5732
  %123 = icmp eq i64 %122, 3, !dbg !5732
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !5732, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %124(ptr nonnull @.str.1789), !dbg !5732
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.shape, i64 4, !dbg !5732
  %126 = load i64, ptr %125, align 8, !dbg !5732, !tbaa !5812
  %127 = and i64 %126, 4294967295, !dbg !5732
  %128 = icmp eq i64 %127, 4, !dbg !5732
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !5732, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %129(ptr nonnull @.str.1790), !dbg !5732
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.shape, i64 5, !dbg !5732
  %131 = load i64, ptr %130, align 8, !dbg !5732, !tbaa !5816
  %132 = and i64 %131, 4294967295, !dbg !5732
  %133 = icmp eq i64 %132, 4, !dbg !5732
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !5732, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %134(ptr nonnull @.str.1791), !dbg !5732
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.strides, null, !dbg !5732
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !5732, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.strides, align 8, !dbg !5732, !tbaa !5818
  %136 = and i64 %135, 4294967295, !dbg !5732
  %137 = icmp eq i64 %136, 18432, !dbg !5732
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.strides, i64 1, !dbg !5732
  %139 = load i64, ptr %138, align 8, !dbg !5732, !tbaa !5828
  %140 = and i64 %139, 4294967295, !dbg !5732
  %141 = icmp eq i64 %140, 144, !dbg !5732
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.strides, i64 2, !dbg !5732
  %143 = load i64, ptr %142, align 8, !dbg !5732, !tbaa !5830
  %144 = and i64 %143, 4294967295, !dbg !5732
  %145 = icmp eq i64 %144, 48, !dbg !5732
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.strides, i64 3, !dbg !5732
  %147 = load i64, ptr %146, align 8, !dbg !5732, !tbaa !5833
  %148 = and i64 %147, 4294967295, !dbg !5732
  %149 = icmp eq i64 %148, 16, !dbg !5732
  %150 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.strides, i64 4, !dbg !5732
  %151 = load i64, ptr %150, align 8, !dbg !5732, !tbaa !5835
  %152 = and i64 %151, 4294967295, !dbg !5732
  %153 = icmp eq i64 %152, 4, !dbg !5732
  %154 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.p1.strides, i64 5, !dbg !5732
  %155 = load i64, ptr %154, align 8, !dbg !5732, !tbaa !5839
  %156 = and i64 %155, 4294967295, !dbg !5732
  %157 = icmp eq i64 %156, 1, !dbg !5732
  %158 = and i1 %153, %157, !dbg !5732
  %159 = and i1 %149, %158, !dbg !5732
  %160 = and i1 %145, %159, !dbg !5732
  %161 = and i1 %141, %160, !dbg !5732
  %162 = and i1 %137, %161, !dbg !5732
  br i1 %162, label %if_end57, label %assert_fail58, !dbg !5732, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %163 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5732
  %164 = load i64, ptr %163, align 8, !dbg !5732
  %165 = icmp eq i64 %164, 0, !dbg !5732
  br i1 %165, label %assert_end61, label %assert_fail60, !dbg !5732, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %166(ptr nonnull @.str.1792), !dbg !5732
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %167 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %167(ptr nonnull @.str.1793), !dbg !5732
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %168 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5732
  %169 = load i32, ptr %168, align 4, !dbg !5732
  %170 = icmp eq i32 %169, 1, !dbg !5732
  br i1 %170, label %assert_end63, label %assert_fail62, !dbg !5732, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %171 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %171(ptr nonnull @.str.1794), !dbg !5732
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %172 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5732
  %173 = load i32, ptr %172, align 4, !dbg !5732
  %174 = icmp eq i32 %dev_id, %173, !dbg !5732
  br i1 %174, label %assert_end65, label %assert_fail64, !dbg !5732, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %175(ptr nonnull @.str.1795), !dbg !5732
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !5732
  %177 = load i32, ptr %176, align 4, !dbg !5732
  %178 = icmp eq i32 %177, 0, !dbg !5732
  br i1 %178, label %assert_end69, label %assert_fail66, !dbg !5732, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %179(ptr nonnull @.str.1796), !dbg !5732
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !5732
  %181 = load i16, ptr %180, align 2, !dbg !5732
  %182 = icmp eq i16 %181, 1, !dbg !5732
  %183 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !5732
  %184 = load i8, ptr %183, align 1, !dbg !5732
  %185 = icmp eq i8 %184, 16, !dbg !5732
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !5732
  %187 = load i8, ptr %186, align 1, !dbg !5732
  %188 = icmp eq i8 %187, 0, !dbg !5732
  %189 = and i1 %185, %188, !dbg !5732
  %190 = and i1 %182, %189, !dbg !5732
  br i1 %190, label %assert_end71, label %assert_fail70, !dbg !5732, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %191(ptr nonnull @.str.1797), !dbg !5732
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %192 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !5732
  %193 = load i64, ptr %192, align 8, !dbg !5732
  %194 = icmp eq i64 %193, 0, !dbg !5732
  br i1 %194, label %assert_end73, label %assert_fail72, !dbg !5732, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %195 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %195(ptr nonnull @.str.1798), !dbg !5732
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %196 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !5732
  %197 = load i32, ptr %196, align 4, !dbg !5732
  %198 = icmp eq i32 %197, 1, !dbg !5732
  br i1 %198, label %assert_end75, label %assert_fail74, !dbg !5732, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %199(ptr nonnull @.str.1799), !dbg !5732
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %200 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !5732
  %201 = load i32, ptr %200, align 4, !dbg !5732
  %202 = icmp eq i32 %dev_id, %201, !dbg !5732
  br i1 %202, label %assert_end77, label %assert_fail76, !dbg !5732, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %203(ptr nonnull @.str.1800), !dbg !5732
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !5732
  %205 = load i32, ptr %204, align 4, !dbg !5732
  %206 = icmp eq i32 %205, 0, !dbg !5732
  br i1 %206, label %assert_end81, label %assert_fail78, !dbg !5732, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %207(ptr nonnull @.str.1801), !dbg !5732
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %208 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !5732
  %209 = load i16, ptr %208, align 2, !dbg !5732
  %210 = icmp eq i16 %209, 1, !dbg !5732
  %211 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !5732
  %212 = load i8, ptr %211, align 1, !dbg !5732
  %213 = icmp eq i8 %212, 16, !dbg !5732
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !5732
  %215 = load i8, ptr %214, align 1, !dbg !5732
  %216 = icmp eq i8 %215, 0, !dbg !5732
  %217 = and i1 %213, %216, !dbg !5732
  %218 = and i1 %210, %217, !dbg !5732
  br i1 %218, label %assert_end83, label %assert_fail82, !dbg !5732, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %219 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %219(ptr nonnull @.str.1802), !dbg !5732
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %220 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !5732
  %221 = load i64, ptr %220, align 8, !dbg !5732
  %222 = icmp eq i64 %221, 0, !dbg !5732
  br i1 %222, label %assert_end85, label %assert_fail84, !dbg !5732, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %223 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %223(ptr nonnull @.str.1803), !dbg !5732
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %224 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !5732
  %225 = load i32, ptr %224, align 4, !dbg !5732
  %226 = icmp eq i32 %225, 1, !dbg !5732
  br i1 %226, label %assert_end87, label %assert_fail86, !dbg !5732, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %227(ptr nonnull @.str.1804), !dbg !5732
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %228 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !5732
  %229 = load i32, ptr %228, align 4, !dbg !5732
  %230 = icmp eq i32 %dev_id, %229, !dbg !5732
  br i1 %230, label %assert_end89, label %assert_fail88, !dbg !5732, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %231 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %231(ptr nonnull @.str.1805), !dbg !5732
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !5732
  %233 = load i32, ptr %232, align 4, !dbg !5732
  %234 = icmp eq i32 %233, 5, !dbg !5732
  br i1 %234, label %assert_end93, label %assert_fail90, !dbg !5732, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %235 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %235(ptr nonnull @.str.1806), !dbg !5732
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %236 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !5732
  %237 = load i16, ptr %236, align 2, !dbg !5732
  %238 = icmp eq i16 %237, 1, !dbg !5732
  %239 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !5732
  %240 = load i8, ptr %239, align 1, !dbg !5732
  %241 = icmp eq i8 %240, 8, !dbg !5732
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !5732
  %243 = load i8, ptr %242, align 1, !dbg !5732
  %244 = icmp eq i8 %243, 0, !dbg !5732
  %245 = and i1 %241, %244, !dbg !5732
  %246 = and i1 %238, %245, !dbg !5732
  br i1 %246, label %assert_end95, label %assert_fail94, !dbg !5732, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %247 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %247(ptr nonnull @.str.1807), !dbg !5732
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %248 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.shape, align 8, !dbg !5732, !tbaa !5841
  %249 = and i64 %248, 4294967295, !dbg !5732
  %250 = icmp eq i64 %249, 1, !dbg !5732
  br i1 %250, label %assert_end97, label %assert_fail96, !dbg !5732, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %251(ptr nonnull @.str.1808), !dbg !5732
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.shape, i64 1, !dbg !5732
  %253 = load i64, ptr %252, align 8, !dbg !5732, !tbaa !5851
  %254 = and i64 %253, 4294967295, !dbg !5732
  %255 = icmp eq i64 %254, 128, !dbg !5732
  br i1 %255, label %assert_end99, label %assert_fail98, !dbg !5732, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %256(ptr nonnull @.str.1809), !dbg !5732
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.shape, i64 2, !dbg !5732
  %258 = load i64, ptr %257, align 8, !dbg !5732, !tbaa !5853
  %259 = and i64 %258, 4294967295, !dbg !5732
  %260 = icmp eq i64 %259, 7, !dbg !5732
  br i1 %260, label %assert_end101, label %assert_fail100, !dbg !5732, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %261(ptr nonnull @.str.1810), !dbg !5732
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.shape, i64 3, !dbg !5732
  %263 = load i64, ptr %262, align 8, !dbg !5732, !tbaa !5856
  %264 = and i64 %263, 4294967295, !dbg !5732
  %265 = icmp eq i64 %264, 7, !dbg !5732
  br i1 %265, label %assert_end103, label %assert_fail102, !dbg !5732, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %266(ptr nonnull @.str.1811), !dbg !5732
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.shape, i64 4, !dbg !5732
  %268 = load i64, ptr %267, align 8, !dbg !5732, !tbaa !5858
  %269 = and i64 %268, 4294967295, !dbg !5732
  %270 = icmp eq i64 %269, 4, !dbg !5732
  br i1 %270, label %assert_end105, label %assert_fail104, !dbg !5732, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %271 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %271(ptr nonnull @.str.1812), !dbg !5732
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.strides, null, !dbg !5732
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !5732, !prof !59

if_then106:                                       ; preds = %assert_end105
  %272 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.strides, i64 1, !dbg !5732
  %273 = load i64, ptr %272, align 8, !dbg !5732, !tbaa !5862
  %274 = and i64 %273, 4294967295, !dbg !5732
  %275 = icmp eq i64 %274, 196, !dbg !5732
  %276 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.strides, i64 2, !dbg !5732
  %277 = load i64, ptr %276, align 8, !dbg !5732, !tbaa !5872
  %278 = and i64 %277, 4294967295, !dbg !5732
  %279 = icmp eq i64 %278, 28, !dbg !5732
  %280 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.strides, i64 3, !dbg !5732
  %281 = load i64, ptr %280, align 8, !dbg !5732, !tbaa !5875
  %282 = and i64 %281, 4294967295, !dbg !5732
  %283 = icmp eq i64 %282, 4, !dbg !5732
  %284 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21.T_cast.strides, i64 4, !dbg !5732
  %285 = load i64, ptr %284, align 8, !dbg !5732, !tbaa !5877
  %286 = and i64 %285, 4294967295, !dbg !5732
  %287 = icmp eq i64 %286, 1, !dbg !5732
  %288 = and i1 %283, %287, !dbg !5732
  %289 = and i1 %279, %288, !dbg !5732
  %290 = and i1 %275, %289, !dbg !5732
  br i1 %290, label %if_end107, label %assert_fail108, !dbg !5732, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %291 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !5732
  %292 = load i64, ptr %291, align 8, !dbg !5732
  %293 = icmp eq i64 %292, 0, !dbg !5732
  br i1 %293, label %assert_end111, label %assert_fail110, !dbg !5732, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %294(ptr nonnull @.str.1813), !dbg !5732
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %295 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %295(ptr nonnull @.str.1814), !dbg !5732
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %296 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !5732
  %297 = load i32, ptr %296, align 4, !dbg !5732
  %298 = icmp eq i32 %297, 1, !dbg !5732
  br i1 %298, label %assert_end113, label %assert_fail112, !dbg !5732, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %299(ptr nonnull @.str.1815), !dbg !5732
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %300 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !5732
  %301 = load i32, ptr %300, align 4, !dbg !5732
  %302 = icmp eq i32 %dev_id, %301, !dbg !5732
  br i1 %302, label %assert_end115, label %assert_fail114, !dbg !5732, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %303 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5732, !tbaa !19
  tail call void %303(ptr nonnull @.str.1816), !dbg !5732
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %304 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_compute_(i32 %dev_id, ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !5732
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5881 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5883, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5884, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5885, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5886, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5887, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5888, metadata !DIExpression()), !dbg !5889
  %0 = icmp eq i32 %num_args, 5, !dbg !5889
  br i1 %0, label %assert_end, label %assert_fail, !dbg !5889, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %294, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !5889

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %1(ptr nonnull @.str.1819), !dbg !5889
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5889, !tbaa !5890
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5889
  %p1.code = load i32, ptr %2, align 4, !dbg !5889, !tbaa !5901
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5889
  %p2.code = load i32, ptr %3, align 4, !dbg !5889, !tbaa !5903
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !5889
  %p3.code = load i32, ptr %4, align 4, !dbg !5889, !tbaa !5906
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !5889
  %T_cast.code = load i32, ptr %5, align 4, !dbg !5889, !tbaa !5908
  %p0 = load ptr, ptr %args, align 8, !dbg !5889
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5889
  %p1 = load ptr, ptr %6, align 8, !dbg !5889
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5889
  %p2 = load ptr, ptr %7, align 8, !dbg !5889
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !5889
  %p3 = load ptr, ptr %8, align 8, !dbg !5889
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !5889
  %T_cast = load ptr, ptr %9, align 8, !dbg !5889
  %p0116 = load ptr, ptr %p0, align 8, !dbg !5889
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !5889
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5889
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.shape = load ptr, ptr %10, align 8, !dbg !5889
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5889
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.strides = load ptr, ptr %11, align 8, !dbg !5889
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5889
  %dev_id = load i32, ptr %12, align 4, !dbg !5889
  %p1117 = load ptr, ptr %p1, align 8, !dbg !5889
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !5889
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5889
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.shape = load ptr, ptr %13, align 8, !dbg !5889
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5889
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.strides = load ptr, ptr %14, align 8, !dbg !5889
  %p2119 = load ptr, ptr %p2, align 8, !dbg !5889
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !5889
  %p3120 = load ptr, ptr %p3, align 8, !dbg !5889
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !5889
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !5889
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !5889
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !5889
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.shape = load ptr, ptr %15, align 8, !dbg !5889
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !5889
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.strides = load ptr, ptr %16, align 8, !dbg !5889
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !5889

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %17(ptr nonnull @.str.1820), !dbg !5889
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !5889

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %18(ptr nonnull @.str.1821), !dbg !5889
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !5889

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %19(ptr nonnull @.str.1822), !dbg !5889
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !5889

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %20(ptr nonnull @.str.1823), !dbg !5889
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !5889

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %21(ptr nonnull @.str.1824), !dbg !5889
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5889
  %23 = load i32, ptr %22, align 4, !dbg !5889
  %24 = icmp eq i32 %23, 5, !dbg !5889
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !5889, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %25(ptr nonnull @.str.1825), !dbg !5889
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5889
  %27 = load i16, ptr %26, align 2, !dbg !5889
  %28 = icmp eq i16 %27, 1, !dbg !5889
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5889
  %30 = load i8, ptr %29, align 1, !dbg !5889
  %31 = icmp eq i8 %30, 8, !dbg !5889
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5889
  %33 = load i8, ptr %32, align 1, !dbg !5889
  %34 = icmp eq i8 %33, 0, !dbg !5889
  %35 = and i1 %31, %34, !dbg !5889
  %36 = and i1 %28, %35, !dbg !5889
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !5889, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %37(ptr nonnull @.str.1826), !dbg !5889
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.shape, align 8, !dbg !5889, !tbaa !5912
  %39 = and i64 %38, 4294967295, !dbg !5889
  %40 = icmp eq i64 %39, 1, !dbg !5889
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !5889, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %41(ptr nonnull @.str.1827), !dbg !5889
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.shape, i64 1, !dbg !5889
  %43 = load i64, ptr %42, align 8, !dbg !5889, !tbaa !5922
  %44 = and i64 %43, 4294967295, !dbg !5889
  %45 = icmp eq i64 %44, 64, !dbg !5889
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !5889, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %46(ptr nonnull @.str.1828), !dbg !5889
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.shape, i64 2, !dbg !5889
  %48 = load i64, ptr %47, align 8, !dbg !5889, !tbaa !5924
  %49 = and i64 %48, 4294967295, !dbg !5889
  %50 = icmp eq i64 %49, 56, !dbg !5889
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !5889, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %51(ptr nonnull @.str.1829), !dbg !5889
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.shape, i64 3, !dbg !5889
  %53 = load i64, ptr %52, align 8, !dbg !5889, !tbaa !5927
  %54 = and i64 %53, 4294967295, !dbg !5889
  %55 = icmp eq i64 %54, 56, !dbg !5889
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !5889, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %56(ptr nonnull @.str.1830), !dbg !5889
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.shape, i64 4, !dbg !5889
  %58 = load i64, ptr %57, align 8, !dbg !5889, !tbaa !5929
  %59 = and i64 %58, 4294967295, !dbg !5889
  %60 = icmp eq i64 %59, 4, !dbg !5889
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !5889, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %61(ptr nonnull @.str.1831), !dbg !5889
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.strides, null, !dbg !5889
  br i1 %.not, label %if_end, label %if_then, !dbg !5889, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.strides, i64 1, !dbg !5889
  %63 = load i64, ptr %62, align 8, !dbg !5889, !tbaa !5933
  %64 = and i64 %63, 4294967295, !dbg !5889
  %65 = icmp eq i64 %64, 12544, !dbg !5889
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.strides, i64 2, !dbg !5889
  %67 = load i64, ptr %66, align 8, !dbg !5889, !tbaa !5943
  %68 = and i64 %67, 4294967295, !dbg !5889
  %69 = icmp eq i64 %68, 224, !dbg !5889
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.strides, i64 3, !dbg !5889
  %71 = load i64, ptr %70, align 8, !dbg !5889, !tbaa !5946
  %72 = and i64 %71, 4294967295, !dbg !5889
  %73 = icmp eq i64 %72, 4, !dbg !5889
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p0.strides, i64 4, !dbg !5889
  %75 = load i64, ptr %74, align 8, !dbg !5889, !tbaa !5948
  %76 = and i64 %75, 4294967295, !dbg !5889
  %77 = icmp eq i64 %76, 1, !dbg !5889
  %78 = and i1 %73, %77, !dbg !5889
  %79 = and i1 %69, %78, !dbg !5889
  %80 = and i1 %65, %79, !dbg !5889
  br i1 %80, label %if_end, label %assert_fail32, !dbg !5889, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5889
  %82 = load i64, ptr %81, align 8, !dbg !5889
  %83 = icmp eq i64 %82, 0, !dbg !5889
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !5889, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %84(ptr nonnull @.str.1832), !dbg !5889
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %85(ptr nonnull @.str.1833), !dbg !5889
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5889
  %87 = load i32, ptr %86, align 4, !dbg !5889
  %88 = icmp eq i32 %87, 1, !dbg !5889
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !5889, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %89(ptr nonnull @.str.1834), !dbg !5889
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5889
  %91 = load i32, ptr %90, align 4, !dbg !5889
  %92 = icmp eq i32 %91, 6, !dbg !5889
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !5889, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %93(ptr nonnull @.str.1835), !dbg !5889
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5889
  %95 = load i16, ptr %94, align 2, !dbg !5889
  %96 = icmp eq i16 %95, 1, !dbg !5889
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5889
  %98 = load i8, ptr %97, align 1, !dbg !5889
  %99 = icmp eq i8 %98, 8, !dbg !5889
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5889
  %101 = load i8, ptr %100, align 1, !dbg !5889
  %102 = icmp eq i8 %101, 0, !dbg !5889
  %103 = and i1 %99, %102, !dbg !5889
  %104 = and i1 %96, %103, !dbg !5889
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !5889, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %105(ptr nonnull @.str.1836), !dbg !5889
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.shape, align 8, !dbg !5889, !tbaa !5952
  %107 = and i64 %106, 4294967295, !dbg !5889
  %108 = icmp eq i64 %107, 16, !dbg !5889
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !5889, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %109(ptr nonnull @.str.1837), !dbg !5889
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.shape, i64 1, !dbg !5889
  %111 = load i64, ptr %110, align 8, !dbg !5889, !tbaa !5962
  %112 = and i64 %111, 4294967295, !dbg !5889
  %113 = icmp eq i64 %112, 64, !dbg !5889
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !5889, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %114(ptr nonnull @.str.1838), !dbg !5889
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.shape, i64 2, !dbg !5889
  %116 = load i64, ptr %115, align 8, !dbg !5889, !tbaa !5964
  %117 = and i64 %116, 4294967295, !dbg !5889
  %118 = icmp eq i64 %117, 1, !dbg !5889
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !5889, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %119(ptr nonnull @.str.1839), !dbg !5889
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.shape, i64 3, !dbg !5889
  %121 = load i64, ptr %120, align 8, !dbg !5889, !tbaa !5967
  %122 = and i64 %121, 4294967295, !dbg !5889
  %123 = icmp eq i64 %122, 1, !dbg !5889
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !5889, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %124(ptr nonnull @.str.1840), !dbg !5889
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.shape, i64 4, !dbg !5889
  %126 = load i64, ptr %125, align 8, !dbg !5889, !tbaa !5969
  %127 = and i64 %126, 4294967295, !dbg !5889
  %128 = icmp eq i64 %127, 4, !dbg !5889
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !5889, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %129(ptr nonnull @.str.1841), !dbg !5889
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.shape, i64 5, !dbg !5889
  %131 = load i64, ptr %130, align 8, !dbg !5889, !tbaa !5973
  %132 = and i64 %131, 4294967295, !dbg !5889
  %133 = icmp eq i64 %132, 4, !dbg !5889
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !5889, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %134(ptr nonnull @.str.1842), !dbg !5889
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.strides, null, !dbg !5889
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !5889, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.strides, align 8, !dbg !5889, !tbaa !5975
  %136 = and i64 %135, 4294967295, !dbg !5889
  %137 = icmp eq i64 %136, 1024, !dbg !5889
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.strides, i64 1, !dbg !5889
  %139 = load i64, ptr %138, align 8, !dbg !5889, !tbaa !5985
  %140 = and i64 %139, 4294967295, !dbg !5889
  %141 = icmp eq i64 %140, 16, !dbg !5889
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.strides, i64 4, !dbg !5889
  %143 = load i64, ptr %142, align 8, !dbg !5889, !tbaa !5987
  %144 = and i64 %143, 4294967295, !dbg !5889
  %145 = icmp eq i64 %144, 4, !dbg !5889
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.p1.strides, i64 5, !dbg !5889
  %147 = load i64, ptr %146, align 8, !dbg !5889, !tbaa !5991
  %148 = and i64 %147, 4294967295, !dbg !5889
  %149 = icmp eq i64 %148, 1, !dbg !5889
  %150 = and i1 %145, %149, !dbg !5889
  %151 = and i1 %141, %150, !dbg !5889
  %152 = and i1 %137, %151, !dbg !5889
  br i1 %152, label %if_end57, label %assert_fail58, !dbg !5889, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5889
  %154 = load i64, ptr %153, align 8, !dbg !5889
  %155 = icmp eq i64 %154, 0, !dbg !5889
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !5889, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %156(ptr nonnull @.str.1843), !dbg !5889
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %157(ptr nonnull @.str.1844), !dbg !5889
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %158 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5889
  %159 = load i32, ptr %158, align 4, !dbg !5889
  %160 = icmp eq i32 %159, 1, !dbg !5889
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !5889, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %161(ptr nonnull @.str.1845), !dbg !5889
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5889
  %163 = load i32, ptr %162, align 4, !dbg !5889
  %164 = icmp eq i32 %dev_id, %163, !dbg !5889
  br i1 %164, label %assert_end65, label %assert_fail64, !dbg !5889, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %165(ptr nonnull @.str.1846), !dbg !5889
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %166 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !5889
  %167 = load i32, ptr %166, align 4, !dbg !5889
  %168 = icmp eq i32 %167, 0, !dbg !5889
  br i1 %168, label %assert_end69, label %assert_fail66, !dbg !5889, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %169(ptr nonnull @.str.1847), !dbg !5889
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !5889
  %171 = load i16, ptr %170, align 2, !dbg !5889
  %172 = icmp eq i16 %171, 1, !dbg !5889
  %173 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !5889
  %174 = load i8, ptr %173, align 1, !dbg !5889
  %175 = icmp eq i8 %174, 16, !dbg !5889
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !5889
  %177 = load i8, ptr %176, align 1, !dbg !5889
  %178 = icmp eq i8 %177, 0, !dbg !5889
  %179 = and i1 %175, %178, !dbg !5889
  %180 = and i1 %172, %179, !dbg !5889
  br i1 %180, label %assert_end71, label %assert_fail70, !dbg !5889, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %181(ptr nonnull @.str.1848), !dbg !5889
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !5889
  %183 = load i64, ptr %182, align 8, !dbg !5889
  %184 = icmp eq i64 %183, 0, !dbg !5889
  br i1 %184, label %assert_end73, label %assert_fail72, !dbg !5889, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %185(ptr nonnull @.str.1849), !dbg !5889
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !5889
  %187 = load i32, ptr %186, align 4, !dbg !5889
  %188 = icmp eq i32 %187, 1, !dbg !5889
  br i1 %188, label %assert_end75, label %assert_fail74, !dbg !5889, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %189(ptr nonnull @.str.1850), !dbg !5889
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !5889
  %191 = load i32, ptr %190, align 4, !dbg !5889
  %192 = icmp eq i32 %dev_id, %191, !dbg !5889
  br i1 %192, label %assert_end77, label %assert_fail76, !dbg !5889, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %193(ptr nonnull @.str.1851), !dbg !5889
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %194 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !5889
  %195 = load i32, ptr %194, align 4, !dbg !5889
  %196 = icmp eq i32 %195, 0, !dbg !5889
  br i1 %196, label %assert_end81, label %assert_fail78, !dbg !5889, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %197(ptr nonnull @.str.1852), !dbg !5889
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %198 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !5889
  %199 = load i16, ptr %198, align 2, !dbg !5889
  %200 = icmp eq i16 %199, 1, !dbg !5889
  %201 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !5889
  %202 = load i8, ptr %201, align 1, !dbg !5889
  %203 = icmp eq i8 %202, 16, !dbg !5889
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !5889
  %205 = load i8, ptr %204, align 1, !dbg !5889
  %206 = icmp eq i8 %205, 0, !dbg !5889
  %207 = and i1 %203, %206, !dbg !5889
  %208 = and i1 %200, %207, !dbg !5889
  br i1 %208, label %assert_end83, label %assert_fail82, !dbg !5889, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %209(ptr nonnull @.str.1853), !dbg !5889
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %210 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !5889
  %211 = load i64, ptr %210, align 8, !dbg !5889
  %212 = icmp eq i64 %211, 0, !dbg !5889
  br i1 %212, label %assert_end85, label %assert_fail84, !dbg !5889, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %213(ptr nonnull @.str.1854), !dbg !5889
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !5889
  %215 = load i32, ptr %214, align 4, !dbg !5889
  %216 = icmp eq i32 %215, 1, !dbg !5889
  br i1 %216, label %assert_end87, label %assert_fail86, !dbg !5889, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %217(ptr nonnull @.str.1855), !dbg !5889
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %218 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !5889
  %219 = load i32, ptr %218, align 4, !dbg !5889
  %220 = icmp eq i32 %dev_id, %219, !dbg !5889
  br i1 %220, label %assert_end89, label %assert_fail88, !dbg !5889, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %221 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %221(ptr nonnull @.str.1856), !dbg !5889
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %222 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !5889
  %223 = load i32, ptr %222, align 4, !dbg !5889
  %224 = icmp eq i32 %223, 5, !dbg !5889
  br i1 %224, label %assert_end93, label %assert_fail90, !dbg !5889, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %225 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %225(ptr nonnull @.str.1857), !dbg !5889
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %226 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !5889
  %227 = load i16, ptr %226, align 2, !dbg !5889
  %228 = icmp eq i16 %227, 1, !dbg !5889
  %229 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !5889
  %230 = load i8, ptr %229, align 1, !dbg !5889
  %231 = icmp eq i8 %230, 8, !dbg !5889
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !5889
  %233 = load i8, ptr %232, align 1, !dbg !5889
  %234 = icmp eq i8 %233, 0, !dbg !5889
  %235 = and i1 %231, %234, !dbg !5889
  %236 = and i1 %228, %235, !dbg !5889
  br i1 %236, label %assert_end95, label %assert_fail94, !dbg !5889, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %237(ptr nonnull @.str.1858), !dbg !5889
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %238 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.shape, align 8, !dbg !5889, !tbaa !5993
  %239 = and i64 %238, 4294967295, !dbg !5889
  %240 = icmp eq i64 %239, 1, !dbg !5889
  br i1 %240, label %assert_end97, label %assert_fail96, !dbg !5889, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %241(ptr nonnull @.str.1859), !dbg !5889
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.shape, i64 1, !dbg !5889
  %243 = load i64, ptr %242, align 8, !dbg !5889, !tbaa !6003
  %244 = and i64 %243, 4294967295, !dbg !5889
  %245 = icmp eq i64 %244, 16, !dbg !5889
  br i1 %245, label %assert_end99, label %assert_fail98, !dbg !5889, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %246(ptr nonnull @.str.1860), !dbg !5889
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.shape, i64 2, !dbg !5889
  %248 = load i64, ptr %247, align 8, !dbg !5889, !tbaa !6005
  %249 = and i64 %248, 4294967295, !dbg !5889
  %250 = icmp eq i64 %249, 56, !dbg !5889
  br i1 %250, label %assert_end101, label %assert_fail100, !dbg !5889, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %251(ptr nonnull @.str.1861), !dbg !5889
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.shape, i64 3, !dbg !5889
  %253 = load i64, ptr %252, align 8, !dbg !5889, !tbaa !6008
  %254 = and i64 %253, 4294967295, !dbg !5889
  %255 = icmp eq i64 %254, 56, !dbg !5889
  br i1 %255, label %assert_end103, label %assert_fail102, !dbg !5889, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %256(ptr nonnull @.str.1862), !dbg !5889
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.shape, i64 4, !dbg !5889
  %258 = load i64, ptr %257, align 8, !dbg !5889, !tbaa !6010
  %259 = and i64 %258, 4294967295, !dbg !5889
  %260 = icmp eq i64 %259, 4, !dbg !5889
  br i1 %260, label %assert_end105, label %assert_fail104, !dbg !5889, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %261(ptr nonnull @.str.1863), !dbg !5889
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.strides, null, !dbg !5889
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !5889, !prof !59

if_then106:                                       ; preds = %assert_end105
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.strides, i64 1, !dbg !5889
  %263 = load i64, ptr %262, align 8, !dbg !5889, !tbaa !6014
  %264 = and i64 %263, 4294967295, !dbg !5889
  %265 = icmp eq i64 %264, 12544, !dbg !5889
  %266 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.strides, i64 2, !dbg !5889
  %267 = load i64, ptr %266, align 8, !dbg !5889, !tbaa !6024
  %268 = and i64 %267, 4294967295, !dbg !5889
  %269 = icmp eq i64 %268, 224, !dbg !5889
  %270 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.strides, i64 3, !dbg !5889
  %271 = load i64, ptr %270, align 8, !dbg !5889, !tbaa !6027
  %272 = and i64 %271, 4294967295, !dbg !5889
  %273 = icmp eq i64 %272, 4, !dbg !5889
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3.T_cast.strides, i64 4, !dbg !5889
  %275 = load i64, ptr %274, align 8, !dbg !5889, !tbaa !6029
  %276 = and i64 %275, 4294967295, !dbg !5889
  %277 = icmp eq i64 %276, 1, !dbg !5889
  %278 = and i1 %273, %277, !dbg !5889
  %279 = and i1 %269, %278, !dbg !5889
  %280 = and i1 %265, %279, !dbg !5889
  br i1 %280, label %if_end107, label %assert_fail108, !dbg !5889, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %281 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !5889
  %282 = load i64, ptr %281, align 8, !dbg !5889
  %283 = icmp eq i64 %282, 0, !dbg !5889
  br i1 %283, label %assert_end111, label %assert_fail110, !dbg !5889, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %284(ptr nonnull @.str.1864), !dbg !5889
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %285 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %285(ptr nonnull @.str.1865), !dbg !5889
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %286 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !5889
  %287 = load i32, ptr %286, align 4, !dbg !5889
  %288 = icmp eq i32 %287, 1, !dbg !5889
  br i1 %288, label %assert_end113, label %assert_fail112, !dbg !5889, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %289(ptr nonnull @.str.1866), !dbg !5889
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %290 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !5889
  %291 = load i32, ptr %290, align 4, !dbg !5889
  %292 = icmp eq i32 %dev_id, %291, !dbg !5889
  br i1 %292, label %assert_end115, label %assert_fail114, !dbg !5889, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %293 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5889, !tbaa !19
  tail call void %293(ptr nonnull @.str.1867), !dbg !5889
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %294 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_compute_(ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !5889
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6033 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6035, metadata !DIExpression()), !dbg !6041
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6036, metadata !DIExpression()), !dbg !6041
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6037, metadata !DIExpression()), !dbg !6041
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6038, metadata !DIExpression()), !dbg !6041
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6039, metadata !DIExpression()), !dbg !6041
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6040, metadata !DIExpression()), !dbg !6041
  %0 = icmp eq i32 %num_args, 5, !dbg !6041
  br i1 %0, label %assert_end, label %assert_fail, !dbg !6041, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %294, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !6041

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %1(ptr nonnull @.str.1869), !dbg !6041
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6041, !tbaa !6042
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6041
  %p1.code = load i32, ptr %2, align 4, !dbg !6041, !tbaa !6053
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6041
  %p2.code = load i32, ptr %3, align 4, !dbg !6041, !tbaa !6055
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !6041
  %p3.code = load i32, ptr %4, align 4, !dbg !6041, !tbaa !6058
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !6041
  %T_cast.code = load i32, ptr %5, align 4, !dbg !6041, !tbaa !6060
  %p0 = load ptr, ptr %args, align 8, !dbg !6041
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6041
  %p1 = load ptr, ptr %6, align 8, !dbg !6041
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6041
  %p2 = load ptr, ptr %7, align 8, !dbg !6041
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !6041
  %p3 = load ptr, ptr %8, align 8, !dbg !6041
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !6041
  %T_cast = load ptr, ptr %9, align 8, !dbg !6041
  %p0116 = load ptr, ptr %p0, align 8, !dbg !6041
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !6041
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6041
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.shape = load ptr, ptr %10, align 8, !dbg !6041
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6041
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.strides = load ptr, ptr %11, align 8, !dbg !6041
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6041
  %dev_id = load i32, ptr %12, align 4, !dbg !6041
  %p1117 = load ptr, ptr %p1, align 8, !dbg !6041
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !6041
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6041
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.shape = load ptr, ptr %13, align 8, !dbg !6041
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6041
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.strides = load ptr, ptr %14, align 8, !dbg !6041
  %p2119 = load ptr, ptr %p2, align 8, !dbg !6041
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !6041
  %p3120 = load ptr, ptr %p3, align 8, !dbg !6041
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !6041
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !6041
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !6041
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !6041
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.shape = load ptr, ptr %15, align 8, !dbg !6041
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !6041
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.strides = load ptr, ptr %16, align 8, !dbg !6041
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !6041

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %17(ptr nonnull @.str.1870), !dbg !6041
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !6041

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %18(ptr nonnull @.str.1871), !dbg !6041
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !6041

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %19(ptr nonnull @.str.1872), !dbg !6041
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !6041

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %20(ptr nonnull @.str.1873), !dbg !6041
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !6041

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %21(ptr nonnull @.str.1874), !dbg !6041
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6041
  %23 = load i32, ptr %22, align 4, !dbg !6041
  %24 = icmp eq i32 %23, 5, !dbg !6041
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !6041, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %25(ptr nonnull @.str.1875), !dbg !6041
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6041
  %27 = load i16, ptr %26, align 2, !dbg !6041
  %28 = icmp eq i16 %27, 1, !dbg !6041
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6041
  %30 = load i8, ptr %29, align 1, !dbg !6041
  %31 = icmp eq i8 %30, 8, !dbg !6041
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6041
  %33 = load i8, ptr %32, align 1, !dbg !6041
  %34 = icmp eq i8 %33, 0, !dbg !6041
  %35 = and i1 %31, %34, !dbg !6041
  %36 = and i1 %28, %35, !dbg !6041
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !6041, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %37(ptr nonnull @.str.1876), !dbg !6041
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.shape, align 8, !dbg !6041, !tbaa !6064
  %39 = and i64 %38, 4294967295, !dbg !6041
  %40 = icmp eq i64 %39, 1, !dbg !6041
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !6041, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %41(ptr nonnull @.str.1877), !dbg !6041
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.shape, i64 1, !dbg !6041
  %43 = load i64, ptr %42, align 8, !dbg !6041, !tbaa !6074
  %44 = and i64 %43, 4294967295, !dbg !6041
  %45 = icmp eq i64 %44, 64, !dbg !6041
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !6041, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %46(ptr nonnull @.str.1878), !dbg !6041
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.shape, i64 2, !dbg !6041
  %48 = load i64, ptr %47, align 8, !dbg !6041, !tbaa !6076
  %49 = and i64 %48, 4294967295, !dbg !6041
  %50 = icmp eq i64 %49, 56, !dbg !6041
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !6041, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %51(ptr nonnull @.str.1879), !dbg !6041
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.shape, i64 3, !dbg !6041
  %53 = load i64, ptr %52, align 8, !dbg !6041, !tbaa !6079
  %54 = and i64 %53, 4294967295, !dbg !6041
  %55 = icmp eq i64 %54, 56, !dbg !6041
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !6041, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %56(ptr nonnull @.str.1880), !dbg !6041
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.shape, i64 4, !dbg !6041
  %58 = load i64, ptr %57, align 8, !dbg !6041, !tbaa !6081
  %59 = and i64 %58, 4294967295, !dbg !6041
  %60 = icmp eq i64 %59, 4, !dbg !6041
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !6041, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %61(ptr nonnull @.str.1881), !dbg !6041
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.strides, null, !dbg !6041
  br i1 %.not, label %if_end, label %if_then, !dbg !6041, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.strides, i64 1, !dbg !6041
  %63 = load i64, ptr %62, align 8, !dbg !6041, !tbaa !6085
  %64 = and i64 %63, 4294967295, !dbg !6041
  %65 = icmp eq i64 %64, 12544, !dbg !6041
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.strides, i64 2, !dbg !6041
  %67 = load i64, ptr %66, align 8, !dbg !6041, !tbaa !6095
  %68 = and i64 %67, 4294967295, !dbg !6041
  %69 = icmp eq i64 %68, 224, !dbg !6041
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.strides, i64 3, !dbg !6041
  %71 = load i64, ptr %70, align 8, !dbg !6041, !tbaa !6098
  %72 = and i64 %71, 4294967295, !dbg !6041
  %73 = icmp eq i64 %72, 4, !dbg !6041
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p0.strides, i64 4, !dbg !6041
  %75 = load i64, ptr %74, align 8, !dbg !6041, !tbaa !6100
  %76 = and i64 %75, 4294967295, !dbg !6041
  %77 = icmp eq i64 %76, 1, !dbg !6041
  %78 = and i1 %73, %77, !dbg !6041
  %79 = and i1 %69, %78, !dbg !6041
  %80 = and i1 %65, %79, !dbg !6041
  br i1 %80, label %if_end, label %assert_fail32, !dbg !6041, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6041
  %82 = load i64, ptr %81, align 8, !dbg !6041
  %83 = icmp eq i64 %82, 0, !dbg !6041
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !6041, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %84(ptr nonnull @.str.1882), !dbg !6041
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %85(ptr nonnull @.str.1883), !dbg !6041
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6041
  %87 = load i32, ptr %86, align 4, !dbg !6041
  %88 = icmp eq i32 %87, 1, !dbg !6041
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !6041, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %89(ptr nonnull @.str.1884), !dbg !6041
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6041
  %91 = load i32, ptr %90, align 4, !dbg !6041
  %92 = icmp eq i32 %91, 6, !dbg !6041
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !6041, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %93(ptr nonnull @.str.1885), !dbg !6041
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6041
  %95 = load i16, ptr %94, align 2, !dbg !6041
  %96 = icmp eq i16 %95, 1, !dbg !6041
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6041
  %98 = load i8, ptr %97, align 1, !dbg !6041
  %99 = icmp eq i8 %98, 8, !dbg !6041
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6041
  %101 = load i8, ptr %100, align 1, !dbg !6041
  %102 = icmp eq i8 %101, 0, !dbg !6041
  %103 = and i1 %99, %102, !dbg !6041
  %104 = and i1 %96, %103, !dbg !6041
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !6041, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %105(ptr nonnull @.str.1886), !dbg !6041
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.shape, align 8, !dbg !6041, !tbaa !6104
  %107 = and i64 %106, 4294967295, !dbg !6041
  %108 = icmp eq i64 %107, 32, !dbg !6041
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !6041, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %109(ptr nonnull @.str.1887), !dbg !6041
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.shape, i64 1, !dbg !6041
  %111 = load i64, ptr %110, align 8, !dbg !6041, !tbaa !6114
  %112 = and i64 %111, 4294967295, !dbg !6041
  %113 = icmp eq i64 %112, 64, !dbg !6041
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !6041, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %114(ptr nonnull @.str.1888), !dbg !6041
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.shape, i64 2, !dbg !6041
  %116 = load i64, ptr %115, align 8, !dbg !6041, !tbaa !6116
  %117 = and i64 %116, 4294967295, !dbg !6041
  %118 = icmp eq i64 %117, 1, !dbg !6041
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !6041, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %119(ptr nonnull @.str.1889), !dbg !6041
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.shape, i64 3, !dbg !6041
  %121 = load i64, ptr %120, align 8, !dbg !6041, !tbaa !6119
  %122 = and i64 %121, 4294967295, !dbg !6041
  %123 = icmp eq i64 %122, 1, !dbg !6041
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !6041, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %124(ptr nonnull @.str.1890), !dbg !6041
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.shape, i64 4, !dbg !6041
  %126 = load i64, ptr %125, align 8, !dbg !6041, !tbaa !6121
  %127 = and i64 %126, 4294967295, !dbg !6041
  %128 = icmp eq i64 %127, 4, !dbg !6041
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !6041, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %129(ptr nonnull @.str.1891), !dbg !6041
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.shape, i64 5, !dbg !6041
  %131 = load i64, ptr %130, align 8, !dbg !6041, !tbaa !6125
  %132 = and i64 %131, 4294967295, !dbg !6041
  %133 = icmp eq i64 %132, 4, !dbg !6041
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !6041, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %134(ptr nonnull @.str.1892), !dbg !6041
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.strides, null, !dbg !6041
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !6041, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.strides, align 8, !dbg !6041, !tbaa !6127
  %136 = and i64 %135, 4294967295, !dbg !6041
  %137 = icmp eq i64 %136, 1024, !dbg !6041
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.strides, i64 1, !dbg !6041
  %139 = load i64, ptr %138, align 8, !dbg !6041, !tbaa !6137
  %140 = and i64 %139, 4294967295, !dbg !6041
  %141 = icmp eq i64 %140, 16, !dbg !6041
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.strides, i64 4, !dbg !6041
  %143 = load i64, ptr %142, align 8, !dbg !6041, !tbaa !6139
  %144 = and i64 %143, 4294967295, !dbg !6041
  %145 = icmp eq i64 %144, 4, !dbg !6041
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.p1.strides, i64 5, !dbg !6041
  %147 = load i64, ptr %146, align 8, !dbg !6041, !tbaa !6143
  %148 = and i64 %147, 4294967295, !dbg !6041
  %149 = icmp eq i64 %148, 1, !dbg !6041
  %150 = and i1 %145, %149, !dbg !6041
  %151 = and i1 %141, %150, !dbg !6041
  %152 = and i1 %137, %151, !dbg !6041
  br i1 %152, label %if_end57, label %assert_fail58, !dbg !6041, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6041
  %154 = load i64, ptr %153, align 8, !dbg !6041
  %155 = icmp eq i64 %154, 0, !dbg !6041
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !6041, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %156(ptr nonnull @.str.1893), !dbg !6041
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %157(ptr nonnull @.str.1894), !dbg !6041
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %158 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6041
  %159 = load i32, ptr %158, align 4, !dbg !6041
  %160 = icmp eq i32 %159, 1, !dbg !6041
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !6041, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %161(ptr nonnull @.str.1895), !dbg !6041
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6041
  %163 = load i32, ptr %162, align 4, !dbg !6041
  %164 = icmp eq i32 %dev_id, %163, !dbg !6041
  br i1 %164, label %assert_end65, label %assert_fail64, !dbg !6041, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %165(ptr nonnull @.str.1896), !dbg !6041
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %166 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !6041
  %167 = load i32, ptr %166, align 4, !dbg !6041
  %168 = icmp eq i32 %167, 0, !dbg !6041
  br i1 %168, label %assert_end69, label %assert_fail66, !dbg !6041, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %169(ptr nonnull @.str.1897), !dbg !6041
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !6041
  %171 = load i16, ptr %170, align 2, !dbg !6041
  %172 = icmp eq i16 %171, 1, !dbg !6041
  %173 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !6041
  %174 = load i8, ptr %173, align 1, !dbg !6041
  %175 = icmp eq i8 %174, 16, !dbg !6041
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !6041
  %177 = load i8, ptr %176, align 1, !dbg !6041
  %178 = icmp eq i8 %177, 0, !dbg !6041
  %179 = and i1 %175, %178, !dbg !6041
  %180 = and i1 %172, %179, !dbg !6041
  br i1 %180, label %assert_end71, label %assert_fail70, !dbg !6041, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %181(ptr nonnull @.str.1898), !dbg !6041
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !6041
  %183 = load i64, ptr %182, align 8, !dbg !6041
  %184 = icmp eq i64 %183, 0, !dbg !6041
  br i1 %184, label %assert_end73, label %assert_fail72, !dbg !6041, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %185(ptr nonnull @.str.1899), !dbg !6041
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !6041
  %187 = load i32, ptr %186, align 4, !dbg !6041
  %188 = icmp eq i32 %187, 1, !dbg !6041
  br i1 %188, label %assert_end75, label %assert_fail74, !dbg !6041, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %189(ptr nonnull @.str.1900), !dbg !6041
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !6041
  %191 = load i32, ptr %190, align 4, !dbg !6041
  %192 = icmp eq i32 %dev_id, %191, !dbg !6041
  br i1 %192, label %assert_end77, label %assert_fail76, !dbg !6041, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %193(ptr nonnull @.str.1901), !dbg !6041
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %194 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !6041
  %195 = load i32, ptr %194, align 4, !dbg !6041
  %196 = icmp eq i32 %195, 0, !dbg !6041
  br i1 %196, label %assert_end81, label %assert_fail78, !dbg !6041, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %197(ptr nonnull @.str.1902), !dbg !6041
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %198 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !6041
  %199 = load i16, ptr %198, align 2, !dbg !6041
  %200 = icmp eq i16 %199, 1, !dbg !6041
  %201 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !6041
  %202 = load i8, ptr %201, align 1, !dbg !6041
  %203 = icmp eq i8 %202, 16, !dbg !6041
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !6041
  %205 = load i8, ptr %204, align 1, !dbg !6041
  %206 = icmp eq i8 %205, 0, !dbg !6041
  %207 = and i1 %203, %206, !dbg !6041
  %208 = and i1 %200, %207, !dbg !6041
  br i1 %208, label %assert_end83, label %assert_fail82, !dbg !6041, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %209(ptr nonnull @.str.1903), !dbg !6041
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %210 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !6041
  %211 = load i64, ptr %210, align 8, !dbg !6041
  %212 = icmp eq i64 %211, 0, !dbg !6041
  br i1 %212, label %assert_end85, label %assert_fail84, !dbg !6041, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %213(ptr nonnull @.str.1904), !dbg !6041
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !6041
  %215 = load i32, ptr %214, align 4, !dbg !6041
  %216 = icmp eq i32 %215, 1, !dbg !6041
  br i1 %216, label %assert_end87, label %assert_fail86, !dbg !6041, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %217(ptr nonnull @.str.1905), !dbg !6041
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %218 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !6041
  %219 = load i32, ptr %218, align 4, !dbg !6041
  %220 = icmp eq i32 %dev_id, %219, !dbg !6041
  br i1 %220, label %assert_end89, label %assert_fail88, !dbg !6041, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %221 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %221(ptr nonnull @.str.1906), !dbg !6041
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %222 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !6041
  %223 = load i32, ptr %222, align 4, !dbg !6041
  %224 = icmp eq i32 %223, 5, !dbg !6041
  br i1 %224, label %assert_end93, label %assert_fail90, !dbg !6041, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %225 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %225(ptr nonnull @.str.1907), !dbg !6041
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %226 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !6041
  %227 = load i16, ptr %226, align 2, !dbg !6041
  %228 = icmp eq i16 %227, 1, !dbg !6041
  %229 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !6041
  %230 = load i8, ptr %229, align 1, !dbg !6041
  %231 = icmp eq i8 %230, 8, !dbg !6041
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !6041
  %233 = load i8, ptr %232, align 1, !dbg !6041
  %234 = icmp eq i8 %233, 0, !dbg !6041
  %235 = and i1 %231, %234, !dbg !6041
  %236 = and i1 %228, %235, !dbg !6041
  br i1 %236, label %assert_end95, label %assert_fail94, !dbg !6041, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %237(ptr nonnull @.str.1908), !dbg !6041
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %238 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.shape, align 8, !dbg !6041, !tbaa !6145
  %239 = and i64 %238, 4294967295, !dbg !6041
  %240 = icmp eq i64 %239, 1, !dbg !6041
  br i1 %240, label %assert_end97, label %assert_fail96, !dbg !6041, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %241(ptr nonnull @.str.1909), !dbg !6041
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.shape, i64 1, !dbg !6041
  %243 = load i64, ptr %242, align 8, !dbg !6041, !tbaa !6155
  %244 = and i64 %243, 4294967295, !dbg !6041
  %245 = icmp eq i64 %244, 32, !dbg !6041
  br i1 %245, label %assert_end99, label %assert_fail98, !dbg !6041, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %246(ptr nonnull @.str.1910), !dbg !6041
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.shape, i64 2, !dbg !6041
  %248 = load i64, ptr %247, align 8, !dbg !6041, !tbaa !6157
  %249 = and i64 %248, 4294967295, !dbg !6041
  %250 = icmp eq i64 %249, 56, !dbg !6041
  br i1 %250, label %assert_end101, label %assert_fail100, !dbg !6041, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %251(ptr nonnull @.str.1911), !dbg !6041
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.shape, i64 3, !dbg !6041
  %253 = load i64, ptr %252, align 8, !dbg !6041, !tbaa !6160
  %254 = and i64 %253, 4294967295, !dbg !6041
  %255 = icmp eq i64 %254, 56, !dbg !6041
  br i1 %255, label %assert_end103, label %assert_fail102, !dbg !6041, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %256(ptr nonnull @.str.1912), !dbg !6041
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.shape, i64 4, !dbg !6041
  %258 = load i64, ptr %257, align 8, !dbg !6041, !tbaa !6162
  %259 = and i64 %258, 4294967295, !dbg !6041
  %260 = icmp eq i64 %259, 4, !dbg !6041
  br i1 %260, label %assert_end105, label %assert_fail104, !dbg !6041, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %261(ptr nonnull @.str.1913), !dbg !6041
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.strides, null, !dbg !6041
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !6041, !prof !59

if_then106:                                       ; preds = %assert_end105
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.strides, i64 1, !dbg !6041
  %263 = load i64, ptr %262, align 8, !dbg !6041, !tbaa !6166
  %264 = and i64 %263, 4294967295, !dbg !6041
  %265 = icmp eq i64 %264, 12544, !dbg !6041
  %266 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.strides, i64 2, !dbg !6041
  %267 = load i64, ptr %266, align 8, !dbg !6041, !tbaa !6176
  %268 = and i64 %267, 4294967295, !dbg !6041
  %269 = icmp eq i64 %268, 224, !dbg !6041
  %270 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.strides, i64 3, !dbg !6041
  %271 = load i64, ptr %270, align 8, !dbg !6041, !tbaa !6179
  %272 = and i64 %271, 4294967295, !dbg !6041
  %273 = icmp eq i64 %272, 4, !dbg !6041
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4.T_cast.strides, i64 4, !dbg !6041
  %275 = load i64, ptr %274, align 8, !dbg !6041, !tbaa !6181
  %276 = and i64 %275, 4294967295, !dbg !6041
  %277 = icmp eq i64 %276, 1, !dbg !6041
  %278 = and i1 %273, %277, !dbg !6041
  %279 = and i1 %269, %278, !dbg !6041
  %280 = and i1 %265, %279, !dbg !6041
  br i1 %280, label %if_end107, label %assert_fail108, !dbg !6041, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %281 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !6041
  %282 = load i64, ptr %281, align 8, !dbg !6041
  %283 = icmp eq i64 %282, 0, !dbg !6041
  br i1 %283, label %assert_end111, label %assert_fail110, !dbg !6041, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %284(ptr nonnull @.str.1914), !dbg !6041
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %285 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %285(ptr nonnull @.str.1915), !dbg !6041
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %286 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !6041
  %287 = load i32, ptr %286, align 4, !dbg !6041
  %288 = icmp eq i32 %287, 1, !dbg !6041
  br i1 %288, label %assert_end113, label %assert_fail112, !dbg !6041, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %289(ptr nonnull @.str.1916), !dbg !6041
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %290 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !6041
  %291 = load i32, ptr %290, align 4, !dbg !6041
  %292 = icmp eq i32 %dev_id, %291, !dbg !6041
  br i1 %292, label %assert_end115, label %assert_fail114, !dbg !6041, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %293 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6041, !tbaa !19
  tail call void %293(ptr nonnull @.str.1917), !dbg !6041
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %294 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_compute_(ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !6041
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6185 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6187, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6188, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6189, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6190, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6191, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6192, metadata !DIExpression()), !dbg !6193
  %0 = icmp eq i32 %num_args, 5, !dbg !6193
  br i1 %0, label %assert_end, label %assert_fail, !dbg !6193, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %304, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !6193

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %1(ptr nonnull @.str.1919), !dbg !6193
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6193, !tbaa !6194
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6193
  %p1.code = load i32, ptr %2, align 4, !dbg !6193, !tbaa !6205
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6193
  %p2.code = load i32, ptr %3, align 4, !dbg !6193, !tbaa !6207
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !6193
  %p3.code = load i32, ptr %4, align 4, !dbg !6193, !tbaa !6210
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !6193
  %T_cast.code = load i32, ptr %5, align 4, !dbg !6193, !tbaa !6212
  %p0 = load ptr, ptr %args, align 8, !dbg !6193
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6193
  %p1 = load ptr, ptr %6, align 8, !dbg !6193
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6193
  %p2 = load ptr, ptr %7, align 8, !dbg !6193
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !6193
  %p3 = load ptr, ptr %8, align 8, !dbg !6193
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !6193
  %T_cast = load ptr, ptr %9, align 8, !dbg !6193
  %p0116 = load ptr, ptr %p0, align 8, !dbg !6193
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !6193
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6193
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.shape = load ptr, ptr %10, align 8, !dbg !6193
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6193
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.strides = load ptr, ptr %11, align 8, !dbg !6193
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6193
  %dev_id = load i32, ptr %12, align 4, !dbg !6193
  %p1117 = load ptr, ptr %p1, align 8, !dbg !6193
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !6193
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6193
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.shape = load ptr, ptr %13, align 8, !dbg !6193
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6193
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.strides = load ptr, ptr %14, align 8, !dbg !6193
  %p2119 = load ptr, ptr %p2, align 8, !dbg !6193
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !6193
  %p3120 = load ptr, ptr %p3, align 8, !dbg !6193
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !6193
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !6193
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !6193
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !6193
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.shape = load ptr, ptr %15, align 8, !dbg !6193
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !6193
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.strides = load ptr, ptr %16, align 8, !dbg !6193
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !6193

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %17(ptr nonnull @.str.1920), !dbg !6193
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !6193

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %18(ptr nonnull @.str.1921), !dbg !6193
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !6193

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %19(ptr nonnull @.str.1922), !dbg !6193
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !6193

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %20(ptr nonnull @.str.1923), !dbg !6193
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !6193

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %21(ptr nonnull @.str.1924), !dbg !6193
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6193
  %23 = load i32, ptr %22, align 4, !dbg !6193
  %24 = icmp eq i32 %23, 5, !dbg !6193
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !6193, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %25(ptr nonnull @.str.1925), !dbg !6193
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6193
  %27 = load i16, ptr %26, align 2, !dbg !6193
  %28 = icmp eq i16 %27, 1, !dbg !6193
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6193
  %30 = load i8, ptr %29, align 1, !dbg !6193
  %31 = icmp eq i8 %30, 8, !dbg !6193
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6193
  %33 = load i8, ptr %32, align 1, !dbg !6193
  %34 = icmp eq i8 %33, 0, !dbg !6193
  %35 = and i1 %31, %34, !dbg !6193
  %36 = and i1 %28, %35, !dbg !6193
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !6193, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %37(ptr nonnull @.str.1926), !dbg !6193
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.shape, align 8, !dbg !6193, !tbaa !6216
  %39 = and i64 %38, 4294967295, !dbg !6193
  %40 = icmp eq i64 %39, 1, !dbg !6193
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !6193, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %41(ptr nonnull @.str.1927), !dbg !6193
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.shape, i64 1, !dbg !6193
  %43 = load i64, ptr %42, align 8, !dbg !6193, !tbaa !6226
  %44 = and i64 %43, 4294967295, !dbg !6193
  %45 = icmp eq i64 %44, 32, !dbg !6193
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !6193, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %46(ptr nonnull @.str.1928), !dbg !6193
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.shape, i64 2, !dbg !6193
  %48 = load i64, ptr %47, align 8, !dbg !6193, !tbaa !6228
  %49 = and i64 %48, 4294967295, !dbg !6193
  %50 = icmp eq i64 %49, 56, !dbg !6193
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !6193, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %51(ptr nonnull @.str.1929), !dbg !6193
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.shape, i64 3, !dbg !6193
  %53 = load i64, ptr %52, align 8, !dbg !6193, !tbaa !6231
  %54 = and i64 %53, 4294967295, !dbg !6193
  %55 = icmp eq i64 %54, 56, !dbg !6193
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !6193, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %56(ptr nonnull @.str.1930), !dbg !6193
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.shape, i64 4, !dbg !6193
  %58 = load i64, ptr %57, align 8, !dbg !6193, !tbaa !6233
  %59 = and i64 %58, 4294967295, !dbg !6193
  %60 = icmp eq i64 %59, 4, !dbg !6193
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !6193, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %61(ptr nonnull @.str.1931), !dbg !6193
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.strides, null, !dbg !6193
  br i1 %.not, label %if_end, label %if_then, !dbg !6193, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.strides, i64 1, !dbg !6193
  %63 = load i64, ptr %62, align 8, !dbg !6193, !tbaa !6237
  %64 = and i64 %63, 4294967295, !dbg !6193
  %65 = icmp eq i64 %64, 12544, !dbg !6193
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.strides, i64 2, !dbg !6193
  %67 = load i64, ptr %66, align 8, !dbg !6193, !tbaa !6247
  %68 = and i64 %67, 4294967295, !dbg !6193
  %69 = icmp eq i64 %68, 224, !dbg !6193
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.strides, i64 3, !dbg !6193
  %71 = load i64, ptr %70, align 8, !dbg !6193, !tbaa !6250
  %72 = and i64 %71, 4294967295, !dbg !6193
  %73 = icmp eq i64 %72, 4, !dbg !6193
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p0.strides, i64 4, !dbg !6193
  %75 = load i64, ptr %74, align 8, !dbg !6193, !tbaa !6252
  %76 = and i64 %75, 4294967295, !dbg !6193
  %77 = icmp eq i64 %76, 1, !dbg !6193
  %78 = and i1 %73, %77, !dbg !6193
  %79 = and i1 %69, %78, !dbg !6193
  %80 = and i1 %65, %79, !dbg !6193
  br i1 %80, label %if_end, label %assert_fail32, !dbg !6193, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6193
  %82 = load i64, ptr %81, align 8, !dbg !6193
  %83 = icmp eq i64 %82, 0, !dbg !6193
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !6193, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %84(ptr nonnull @.str.1932), !dbg !6193
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %85(ptr nonnull @.str.1933), !dbg !6193
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6193
  %87 = load i32, ptr %86, align 4, !dbg !6193
  %88 = icmp eq i32 %87, 1, !dbg !6193
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !6193, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %89(ptr nonnull @.str.1934), !dbg !6193
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6193
  %91 = load i32, ptr %90, align 4, !dbg !6193
  %92 = icmp eq i32 %91, 6, !dbg !6193
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !6193, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %93(ptr nonnull @.str.1935), !dbg !6193
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6193
  %95 = load i16, ptr %94, align 2, !dbg !6193
  %96 = icmp eq i16 %95, 1, !dbg !6193
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6193
  %98 = load i8, ptr %97, align 1, !dbg !6193
  %99 = icmp eq i8 %98, 8, !dbg !6193
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6193
  %101 = load i8, ptr %100, align 1, !dbg !6193
  %102 = icmp eq i8 %101, 0, !dbg !6193
  %103 = and i1 %99, %102, !dbg !6193
  %104 = and i1 %96, %103, !dbg !6193
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !6193, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %105(ptr nonnull @.str.1936), !dbg !6193
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.shape, align 8, !dbg !6193, !tbaa !6256
  %107 = and i64 %106, 4294967295, !dbg !6193
  %108 = icmp eq i64 %107, 32, !dbg !6193
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !6193, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %109(ptr nonnull @.str.1937), !dbg !6193
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.shape, i64 1, !dbg !6193
  %111 = load i64, ptr %110, align 8, !dbg !6193, !tbaa !6266
  %112 = and i64 %111, 4294967295, !dbg !6193
  %113 = icmp eq i64 %112, 32, !dbg !6193
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !6193, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %114(ptr nonnull @.str.1938), !dbg !6193
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.shape, i64 2, !dbg !6193
  %116 = load i64, ptr %115, align 8, !dbg !6193, !tbaa !6268
  %117 = and i64 %116, 4294967295, !dbg !6193
  %118 = icmp eq i64 %117, 3, !dbg !6193
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !6193, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %119(ptr nonnull @.str.1939), !dbg !6193
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.shape, i64 3, !dbg !6193
  %121 = load i64, ptr %120, align 8, !dbg !6193, !tbaa !6271
  %122 = and i64 %121, 4294967295, !dbg !6193
  %123 = icmp eq i64 %122, 3, !dbg !6193
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !6193, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %124(ptr nonnull @.str.1940), !dbg !6193
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.shape, i64 4, !dbg !6193
  %126 = load i64, ptr %125, align 8, !dbg !6193, !tbaa !6273
  %127 = and i64 %126, 4294967295, !dbg !6193
  %128 = icmp eq i64 %127, 4, !dbg !6193
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !6193, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %129(ptr nonnull @.str.1941), !dbg !6193
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.shape, i64 5, !dbg !6193
  %131 = load i64, ptr %130, align 8, !dbg !6193, !tbaa !6277
  %132 = and i64 %131, 4294967295, !dbg !6193
  %133 = icmp eq i64 %132, 4, !dbg !6193
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !6193, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %134(ptr nonnull @.str.1942), !dbg !6193
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.strides, null, !dbg !6193
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !6193, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.strides, align 8, !dbg !6193, !tbaa !6279
  %136 = and i64 %135, 4294967295, !dbg !6193
  %137 = icmp eq i64 %136, 4608, !dbg !6193
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.strides, i64 1, !dbg !6193
  %139 = load i64, ptr %138, align 8, !dbg !6193, !tbaa !6289
  %140 = and i64 %139, 4294967295, !dbg !6193
  %141 = icmp eq i64 %140, 144, !dbg !6193
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.strides, i64 2, !dbg !6193
  %143 = load i64, ptr %142, align 8, !dbg !6193, !tbaa !6291
  %144 = and i64 %143, 4294967295, !dbg !6193
  %145 = icmp eq i64 %144, 48, !dbg !6193
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.strides, i64 3, !dbg !6193
  %147 = load i64, ptr %146, align 8, !dbg !6193, !tbaa !6294
  %148 = and i64 %147, 4294967295, !dbg !6193
  %149 = icmp eq i64 %148, 16, !dbg !6193
  %150 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.strides, i64 4, !dbg !6193
  %151 = load i64, ptr %150, align 8, !dbg !6193, !tbaa !6296
  %152 = and i64 %151, 4294967295, !dbg !6193
  %153 = icmp eq i64 %152, 4, !dbg !6193
  %154 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.p1.strides, i64 5, !dbg !6193
  %155 = load i64, ptr %154, align 8, !dbg !6193, !tbaa !6300
  %156 = and i64 %155, 4294967295, !dbg !6193
  %157 = icmp eq i64 %156, 1, !dbg !6193
  %158 = and i1 %153, %157, !dbg !6193
  %159 = and i1 %149, %158, !dbg !6193
  %160 = and i1 %145, %159, !dbg !6193
  %161 = and i1 %141, %160, !dbg !6193
  %162 = and i1 %137, %161, !dbg !6193
  br i1 %162, label %if_end57, label %assert_fail58, !dbg !6193, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %163 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6193
  %164 = load i64, ptr %163, align 8, !dbg !6193
  %165 = icmp eq i64 %164, 0, !dbg !6193
  br i1 %165, label %assert_end61, label %assert_fail60, !dbg !6193, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %166(ptr nonnull @.str.1943), !dbg !6193
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %167 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %167(ptr nonnull @.str.1944), !dbg !6193
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %168 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6193
  %169 = load i32, ptr %168, align 4, !dbg !6193
  %170 = icmp eq i32 %169, 1, !dbg !6193
  br i1 %170, label %assert_end63, label %assert_fail62, !dbg !6193, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %171 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %171(ptr nonnull @.str.1945), !dbg !6193
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %172 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6193
  %173 = load i32, ptr %172, align 4, !dbg !6193
  %174 = icmp eq i32 %dev_id, %173, !dbg !6193
  br i1 %174, label %assert_end65, label %assert_fail64, !dbg !6193, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %175(ptr nonnull @.str.1946), !dbg !6193
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !6193
  %177 = load i32, ptr %176, align 4, !dbg !6193
  %178 = icmp eq i32 %177, 0, !dbg !6193
  br i1 %178, label %assert_end69, label %assert_fail66, !dbg !6193, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %179(ptr nonnull @.str.1947), !dbg !6193
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !6193
  %181 = load i16, ptr %180, align 2, !dbg !6193
  %182 = icmp eq i16 %181, 1, !dbg !6193
  %183 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !6193
  %184 = load i8, ptr %183, align 1, !dbg !6193
  %185 = icmp eq i8 %184, 16, !dbg !6193
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !6193
  %187 = load i8, ptr %186, align 1, !dbg !6193
  %188 = icmp eq i8 %187, 0, !dbg !6193
  %189 = and i1 %185, %188, !dbg !6193
  %190 = and i1 %182, %189, !dbg !6193
  br i1 %190, label %assert_end71, label %assert_fail70, !dbg !6193, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %191(ptr nonnull @.str.1948), !dbg !6193
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %192 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !6193
  %193 = load i64, ptr %192, align 8, !dbg !6193
  %194 = icmp eq i64 %193, 0, !dbg !6193
  br i1 %194, label %assert_end73, label %assert_fail72, !dbg !6193, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %195 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %195(ptr nonnull @.str.1949), !dbg !6193
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %196 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !6193
  %197 = load i32, ptr %196, align 4, !dbg !6193
  %198 = icmp eq i32 %197, 1, !dbg !6193
  br i1 %198, label %assert_end75, label %assert_fail74, !dbg !6193, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %199(ptr nonnull @.str.1950), !dbg !6193
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %200 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !6193
  %201 = load i32, ptr %200, align 4, !dbg !6193
  %202 = icmp eq i32 %dev_id, %201, !dbg !6193
  br i1 %202, label %assert_end77, label %assert_fail76, !dbg !6193, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %203(ptr nonnull @.str.1951), !dbg !6193
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !6193
  %205 = load i32, ptr %204, align 4, !dbg !6193
  %206 = icmp eq i32 %205, 0, !dbg !6193
  br i1 %206, label %assert_end81, label %assert_fail78, !dbg !6193, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %207(ptr nonnull @.str.1952), !dbg !6193
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %208 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !6193
  %209 = load i16, ptr %208, align 2, !dbg !6193
  %210 = icmp eq i16 %209, 1, !dbg !6193
  %211 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !6193
  %212 = load i8, ptr %211, align 1, !dbg !6193
  %213 = icmp eq i8 %212, 16, !dbg !6193
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !6193
  %215 = load i8, ptr %214, align 1, !dbg !6193
  %216 = icmp eq i8 %215, 0, !dbg !6193
  %217 = and i1 %213, %216, !dbg !6193
  %218 = and i1 %210, %217, !dbg !6193
  br i1 %218, label %assert_end83, label %assert_fail82, !dbg !6193, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %219 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %219(ptr nonnull @.str.1953), !dbg !6193
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %220 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !6193
  %221 = load i64, ptr %220, align 8, !dbg !6193
  %222 = icmp eq i64 %221, 0, !dbg !6193
  br i1 %222, label %assert_end85, label %assert_fail84, !dbg !6193, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %223 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %223(ptr nonnull @.str.1954), !dbg !6193
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %224 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !6193
  %225 = load i32, ptr %224, align 4, !dbg !6193
  %226 = icmp eq i32 %225, 1, !dbg !6193
  br i1 %226, label %assert_end87, label %assert_fail86, !dbg !6193, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %227(ptr nonnull @.str.1955), !dbg !6193
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %228 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !6193
  %229 = load i32, ptr %228, align 4, !dbg !6193
  %230 = icmp eq i32 %dev_id, %229, !dbg !6193
  br i1 %230, label %assert_end89, label %assert_fail88, !dbg !6193, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %231 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %231(ptr nonnull @.str.1956), !dbg !6193
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !6193
  %233 = load i32, ptr %232, align 4, !dbg !6193
  %234 = icmp eq i32 %233, 5, !dbg !6193
  br i1 %234, label %assert_end93, label %assert_fail90, !dbg !6193, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %235 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %235(ptr nonnull @.str.1957), !dbg !6193
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %236 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !6193
  %237 = load i16, ptr %236, align 2, !dbg !6193
  %238 = icmp eq i16 %237, 1, !dbg !6193
  %239 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !6193
  %240 = load i8, ptr %239, align 1, !dbg !6193
  %241 = icmp eq i8 %240, 8, !dbg !6193
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !6193
  %243 = load i8, ptr %242, align 1, !dbg !6193
  %244 = icmp eq i8 %243, 0, !dbg !6193
  %245 = and i1 %241, %244, !dbg !6193
  %246 = and i1 %238, %245, !dbg !6193
  br i1 %246, label %assert_end95, label %assert_fail94, !dbg !6193, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %247 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %247(ptr nonnull @.str.1958), !dbg !6193
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %248 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.shape, align 8, !dbg !6193, !tbaa !6302
  %249 = and i64 %248, 4294967295, !dbg !6193
  %250 = icmp eq i64 %249, 1, !dbg !6193
  br i1 %250, label %assert_end97, label %assert_fail96, !dbg !6193, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %251(ptr nonnull @.str.1959), !dbg !6193
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.shape, i64 1, !dbg !6193
  %253 = load i64, ptr %252, align 8, !dbg !6193, !tbaa !6312
  %254 = and i64 %253, 4294967295, !dbg !6193
  %255 = icmp eq i64 %254, 32, !dbg !6193
  br i1 %255, label %assert_end99, label %assert_fail98, !dbg !6193, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %256(ptr nonnull @.str.1960), !dbg !6193
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.shape, i64 2, !dbg !6193
  %258 = load i64, ptr %257, align 8, !dbg !6193, !tbaa !6314
  %259 = and i64 %258, 4294967295, !dbg !6193
  %260 = icmp eq i64 %259, 28, !dbg !6193
  br i1 %260, label %assert_end101, label %assert_fail100, !dbg !6193, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %261(ptr nonnull @.str.1961), !dbg !6193
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.shape, i64 3, !dbg !6193
  %263 = load i64, ptr %262, align 8, !dbg !6193, !tbaa !6317
  %264 = and i64 %263, 4294967295, !dbg !6193
  %265 = icmp eq i64 %264, 28, !dbg !6193
  br i1 %265, label %assert_end103, label %assert_fail102, !dbg !6193, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %266(ptr nonnull @.str.1962), !dbg !6193
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.shape, i64 4, !dbg !6193
  %268 = load i64, ptr %267, align 8, !dbg !6193, !tbaa !6319
  %269 = and i64 %268, 4294967295, !dbg !6193
  %270 = icmp eq i64 %269, 4, !dbg !6193
  br i1 %270, label %assert_end105, label %assert_fail104, !dbg !6193, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %271 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %271(ptr nonnull @.str.1963), !dbg !6193
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.strides, null, !dbg !6193
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !6193, !prof !59

if_then106:                                       ; preds = %assert_end105
  %272 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.strides, i64 1, !dbg !6193
  %273 = load i64, ptr %272, align 8, !dbg !6193, !tbaa !6323
  %274 = and i64 %273, 4294967295, !dbg !6193
  %275 = icmp eq i64 %274, 3136, !dbg !6193
  %276 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.strides, i64 2, !dbg !6193
  %277 = load i64, ptr %276, align 8, !dbg !6193, !tbaa !6333
  %278 = and i64 %277, 4294967295, !dbg !6193
  %279 = icmp eq i64 %278, 112, !dbg !6193
  %280 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.strides, i64 3, !dbg !6193
  %281 = load i64, ptr %280, align 8, !dbg !6193, !tbaa !6336
  %282 = and i64 %281, 4294967295, !dbg !6193
  %283 = icmp eq i64 %282, 4, !dbg !6193
  %284 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5.T_cast.strides, i64 4, !dbg !6193
  %285 = load i64, ptr %284, align 8, !dbg !6193, !tbaa !6338
  %286 = and i64 %285, 4294967295, !dbg !6193
  %287 = icmp eq i64 %286, 1, !dbg !6193
  %288 = and i1 %283, %287, !dbg !6193
  %289 = and i1 %279, %288, !dbg !6193
  %290 = and i1 %275, %289, !dbg !6193
  br i1 %290, label %if_end107, label %assert_fail108, !dbg !6193, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %291 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !6193
  %292 = load i64, ptr %291, align 8, !dbg !6193
  %293 = icmp eq i64 %292, 0, !dbg !6193
  br i1 %293, label %assert_end111, label %assert_fail110, !dbg !6193, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %294(ptr nonnull @.str.1964), !dbg !6193
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %295 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %295(ptr nonnull @.str.1965), !dbg !6193
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %296 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !6193
  %297 = load i32, ptr %296, align 4, !dbg !6193
  %298 = icmp eq i32 %297, 1, !dbg !6193
  br i1 %298, label %assert_end113, label %assert_fail112, !dbg !6193, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %299(ptr nonnull @.str.1966), !dbg !6193
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %300 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !6193
  %301 = load i32, ptr %300, align 4, !dbg !6193
  %302 = icmp eq i32 %dev_id, %301, !dbg !6193
  br i1 %302, label %assert_end115, label %assert_fail114, !dbg !6193, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %303 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6193, !tbaa !19
  tail call void %303(ptr nonnull @.str.1967), !dbg !6193
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %304 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_compute_(i32 %dev_id, ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !6193
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6342 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6344, metadata !DIExpression()), !dbg !6350
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6345, metadata !DIExpression()), !dbg !6350
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6346, metadata !DIExpression()), !dbg !6350
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6347, metadata !DIExpression()), !dbg !6350
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6348, metadata !DIExpression()), !dbg !6350
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6349, metadata !DIExpression()), !dbg !6350
  %0 = icmp eq i32 %num_args, 5, !dbg !6350
  br i1 %0, label %assert_end, label %assert_fail, !dbg !6350, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %294, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !6350

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %1(ptr nonnull @.str.1970), !dbg !6350
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6350, !tbaa !6351
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6350
  %p1.code = load i32, ptr %2, align 4, !dbg !6350, !tbaa !6362
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6350
  %p2.code = load i32, ptr %3, align 4, !dbg !6350, !tbaa !6364
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !6350
  %p3.code = load i32, ptr %4, align 4, !dbg !6350, !tbaa !6367
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !6350
  %T_cast.code = load i32, ptr %5, align 4, !dbg !6350, !tbaa !6369
  %p0 = load ptr, ptr %args, align 8, !dbg !6350
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6350
  %p1 = load ptr, ptr %6, align 8, !dbg !6350
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6350
  %p2 = load ptr, ptr %7, align 8, !dbg !6350
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !6350
  %p3 = load ptr, ptr %8, align 8, !dbg !6350
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !6350
  %T_cast = load ptr, ptr %9, align 8, !dbg !6350
  %p0116 = load ptr, ptr %p0, align 8, !dbg !6350
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !6350
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6350
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.shape = load ptr, ptr %10, align 8, !dbg !6350
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6350
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.strides = load ptr, ptr %11, align 8, !dbg !6350
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6350
  %dev_id = load i32, ptr %12, align 4, !dbg !6350
  %p1117 = load ptr, ptr %p1, align 8, !dbg !6350
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !6350
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6350
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.shape = load ptr, ptr %13, align 8, !dbg !6350
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6350
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.strides = load ptr, ptr %14, align 8, !dbg !6350
  %p2119 = load ptr, ptr %p2, align 8, !dbg !6350
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !6350
  %p3120 = load ptr, ptr %p3, align 8, !dbg !6350
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !6350
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !6350
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !6350
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !6350
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.shape = load ptr, ptr %15, align 8, !dbg !6350
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !6350
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.strides = load ptr, ptr %16, align 8, !dbg !6350
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !6350

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %17(ptr nonnull @.str.1971), !dbg !6350
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !6350

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %18(ptr nonnull @.str.1972), !dbg !6350
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !6350

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %19(ptr nonnull @.str.1973), !dbg !6350
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !6350

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %20(ptr nonnull @.str.1974), !dbg !6350
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !6350

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %21(ptr nonnull @.str.1975), !dbg !6350
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6350
  %23 = load i32, ptr %22, align 4, !dbg !6350
  %24 = icmp eq i32 %23, 5, !dbg !6350
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !6350, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %25(ptr nonnull @.str.1976), !dbg !6350
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6350
  %27 = load i16, ptr %26, align 2, !dbg !6350
  %28 = icmp eq i16 %27, 1, !dbg !6350
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6350
  %30 = load i8, ptr %29, align 1, !dbg !6350
  %31 = icmp eq i8 %30, 8, !dbg !6350
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6350
  %33 = load i8, ptr %32, align 1, !dbg !6350
  %34 = icmp eq i8 %33, 0, !dbg !6350
  %35 = and i1 %31, %34, !dbg !6350
  %36 = and i1 %28, %35, !dbg !6350
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !6350, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %37(ptr nonnull @.str.1977), !dbg !6350
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.shape, align 8, !dbg !6350, !tbaa !6373
  %39 = and i64 %38, 4294967295, !dbg !6350
  %40 = icmp eq i64 %39, 1, !dbg !6350
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !6350, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %41(ptr nonnull @.str.1978), !dbg !6350
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.shape, i64 1, !dbg !6350
  %43 = load i64, ptr %42, align 8, !dbg !6350, !tbaa !6383
  %44 = and i64 %43, 4294967295, !dbg !6350
  %45 = icmp eq i64 %44, 32, !dbg !6350
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !6350, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %46(ptr nonnull @.str.1979), !dbg !6350
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.shape, i64 2, !dbg !6350
  %48 = load i64, ptr %47, align 8, !dbg !6350, !tbaa !6385
  %49 = and i64 %48, 4294967295, !dbg !6350
  %50 = icmp eq i64 %49, 28, !dbg !6350
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !6350, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %51(ptr nonnull @.str.1980), !dbg !6350
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.shape, i64 3, !dbg !6350
  %53 = load i64, ptr %52, align 8, !dbg !6350, !tbaa !6388
  %54 = and i64 %53, 4294967295, !dbg !6350
  %55 = icmp eq i64 %54, 28, !dbg !6350
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !6350, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %56(ptr nonnull @.str.1981), !dbg !6350
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.shape, i64 4, !dbg !6350
  %58 = load i64, ptr %57, align 8, !dbg !6350, !tbaa !6390
  %59 = and i64 %58, 4294967295, !dbg !6350
  %60 = icmp eq i64 %59, 4, !dbg !6350
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !6350, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %61(ptr nonnull @.str.1982), !dbg !6350
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.strides, null, !dbg !6350
  br i1 %.not, label %if_end, label %if_then, !dbg !6350, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.strides, i64 1, !dbg !6350
  %63 = load i64, ptr %62, align 8, !dbg !6350, !tbaa !6394
  %64 = and i64 %63, 4294967295, !dbg !6350
  %65 = icmp eq i64 %64, 3136, !dbg !6350
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.strides, i64 2, !dbg !6350
  %67 = load i64, ptr %66, align 8, !dbg !6350, !tbaa !6404
  %68 = and i64 %67, 4294967295, !dbg !6350
  %69 = icmp eq i64 %68, 112, !dbg !6350
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.strides, i64 3, !dbg !6350
  %71 = load i64, ptr %70, align 8, !dbg !6350, !tbaa !6407
  %72 = and i64 %71, 4294967295, !dbg !6350
  %73 = icmp eq i64 %72, 4, !dbg !6350
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p0.strides, i64 4, !dbg !6350
  %75 = load i64, ptr %74, align 8, !dbg !6350, !tbaa !6409
  %76 = and i64 %75, 4294967295, !dbg !6350
  %77 = icmp eq i64 %76, 1, !dbg !6350
  %78 = and i1 %73, %77, !dbg !6350
  %79 = and i1 %69, %78, !dbg !6350
  %80 = and i1 %65, %79, !dbg !6350
  br i1 %80, label %if_end, label %assert_fail32, !dbg !6350, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6350
  %82 = load i64, ptr %81, align 8, !dbg !6350
  %83 = icmp eq i64 %82, 0, !dbg !6350
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !6350, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %84(ptr nonnull @.str.1983), !dbg !6350
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %85(ptr nonnull @.str.1984), !dbg !6350
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6350
  %87 = load i32, ptr %86, align 4, !dbg !6350
  %88 = icmp eq i32 %87, 1, !dbg !6350
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !6350, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %89(ptr nonnull @.str.1985), !dbg !6350
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6350
  %91 = load i32, ptr %90, align 4, !dbg !6350
  %92 = icmp eq i32 %91, 6, !dbg !6350
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !6350, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %93(ptr nonnull @.str.1986), !dbg !6350
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6350
  %95 = load i16, ptr %94, align 2, !dbg !6350
  %96 = icmp eq i16 %95, 1, !dbg !6350
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6350
  %98 = load i8, ptr %97, align 1, !dbg !6350
  %99 = icmp eq i8 %98, 8, !dbg !6350
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6350
  %101 = load i8, ptr %100, align 1, !dbg !6350
  %102 = icmp eq i8 %101, 0, !dbg !6350
  %103 = and i1 %99, %102, !dbg !6350
  %104 = and i1 %96, %103, !dbg !6350
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !6350, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %105(ptr nonnull @.str.1987), !dbg !6350
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.shape, align 8, !dbg !6350, !tbaa !6413
  %107 = and i64 %106, 4294967295, !dbg !6350
  %108 = icmp eq i64 %107, 128, !dbg !6350
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !6350, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %109(ptr nonnull @.str.1988), !dbg !6350
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.shape, i64 1, !dbg !6350
  %111 = load i64, ptr %110, align 8, !dbg !6350, !tbaa !6423
  %112 = and i64 %111, 4294967295, !dbg !6350
  %113 = icmp eq i64 %112, 32, !dbg !6350
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !6350, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %114(ptr nonnull @.str.1989), !dbg !6350
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.shape, i64 2, !dbg !6350
  %116 = load i64, ptr %115, align 8, !dbg !6350, !tbaa !6425
  %117 = and i64 %116, 4294967295, !dbg !6350
  %118 = icmp eq i64 %117, 1, !dbg !6350
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !6350, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %119(ptr nonnull @.str.1990), !dbg !6350
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.shape, i64 3, !dbg !6350
  %121 = load i64, ptr %120, align 8, !dbg !6350, !tbaa !6428
  %122 = and i64 %121, 4294967295, !dbg !6350
  %123 = icmp eq i64 %122, 1, !dbg !6350
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !6350, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %124(ptr nonnull @.str.1991), !dbg !6350
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.shape, i64 4, !dbg !6350
  %126 = load i64, ptr %125, align 8, !dbg !6350, !tbaa !6430
  %127 = and i64 %126, 4294967295, !dbg !6350
  %128 = icmp eq i64 %127, 4, !dbg !6350
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !6350, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %129(ptr nonnull @.str.1992), !dbg !6350
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.shape, i64 5, !dbg !6350
  %131 = load i64, ptr %130, align 8, !dbg !6350, !tbaa !6434
  %132 = and i64 %131, 4294967295, !dbg !6350
  %133 = icmp eq i64 %132, 4, !dbg !6350
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !6350, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %134(ptr nonnull @.str.1993), !dbg !6350
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.strides, null, !dbg !6350
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !6350, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.strides, align 8, !dbg !6350, !tbaa !6436
  %136 = and i64 %135, 4294967295, !dbg !6350
  %137 = icmp eq i64 %136, 512, !dbg !6350
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.strides, i64 1, !dbg !6350
  %139 = load i64, ptr %138, align 8, !dbg !6350, !tbaa !6446
  %140 = and i64 %139, 4294967295, !dbg !6350
  %141 = icmp eq i64 %140, 16, !dbg !6350
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.strides, i64 4, !dbg !6350
  %143 = load i64, ptr %142, align 8, !dbg !6350, !tbaa !6448
  %144 = and i64 %143, 4294967295, !dbg !6350
  %145 = icmp eq i64 %144, 4, !dbg !6350
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.p1.strides, i64 5, !dbg !6350
  %147 = load i64, ptr %146, align 8, !dbg !6350, !tbaa !6452
  %148 = and i64 %147, 4294967295, !dbg !6350
  %149 = icmp eq i64 %148, 1, !dbg !6350
  %150 = and i1 %145, %149, !dbg !6350
  %151 = and i1 %141, %150, !dbg !6350
  %152 = and i1 %137, %151, !dbg !6350
  br i1 %152, label %if_end57, label %assert_fail58, !dbg !6350, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6350
  %154 = load i64, ptr %153, align 8, !dbg !6350
  %155 = icmp eq i64 %154, 0, !dbg !6350
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !6350, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %156(ptr nonnull @.str.1994), !dbg !6350
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %157(ptr nonnull @.str.1995), !dbg !6350
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %158 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6350
  %159 = load i32, ptr %158, align 4, !dbg !6350
  %160 = icmp eq i32 %159, 1, !dbg !6350
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !6350, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %161(ptr nonnull @.str.1996), !dbg !6350
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6350
  %163 = load i32, ptr %162, align 4, !dbg !6350
  %164 = icmp eq i32 %dev_id, %163, !dbg !6350
  br i1 %164, label %assert_end65, label %assert_fail64, !dbg !6350, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %165(ptr nonnull @.str.1997), !dbg !6350
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %166 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !6350
  %167 = load i32, ptr %166, align 4, !dbg !6350
  %168 = icmp eq i32 %167, 0, !dbg !6350
  br i1 %168, label %assert_end69, label %assert_fail66, !dbg !6350, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %169(ptr nonnull @.str.1998), !dbg !6350
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !6350
  %171 = load i16, ptr %170, align 2, !dbg !6350
  %172 = icmp eq i16 %171, 1, !dbg !6350
  %173 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !6350
  %174 = load i8, ptr %173, align 1, !dbg !6350
  %175 = icmp eq i8 %174, 16, !dbg !6350
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !6350
  %177 = load i8, ptr %176, align 1, !dbg !6350
  %178 = icmp eq i8 %177, 0, !dbg !6350
  %179 = and i1 %175, %178, !dbg !6350
  %180 = and i1 %172, %179, !dbg !6350
  br i1 %180, label %assert_end71, label %assert_fail70, !dbg !6350, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %181(ptr nonnull @.str.1999), !dbg !6350
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !6350
  %183 = load i64, ptr %182, align 8, !dbg !6350
  %184 = icmp eq i64 %183, 0, !dbg !6350
  br i1 %184, label %assert_end73, label %assert_fail72, !dbg !6350, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %185(ptr nonnull @.str.2000), !dbg !6350
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !6350
  %187 = load i32, ptr %186, align 4, !dbg !6350
  %188 = icmp eq i32 %187, 1, !dbg !6350
  br i1 %188, label %assert_end75, label %assert_fail74, !dbg !6350, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %189(ptr nonnull @.str.2001), !dbg !6350
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !6350
  %191 = load i32, ptr %190, align 4, !dbg !6350
  %192 = icmp eq i32 %dev_id, %191, !dbg !6350
  br i1 %192, label %assert_end77, label %assert_fail76, !dbg !6350, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %193(ptr nonnull @.str.2002), !dbg !6350
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %194 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !6350
  %195 = load i32, ptr %194, align 4, !dbg !6350
  %196 = icmp eq i32 %195, 0, !dbg !6350
  br i1 %196, label %assert_end81, label %assert_fail78, !dbg !6350, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %197(ptr nonnull @.str.2003), !dbg !6350
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %198 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !6350
  %199 = load i16, ptr %198, align 2, !dbg !6350
  %200 = icmp eq i16 %199, 1, !dbg !6350
  %201 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !6350
  %202 = load i8, ptr %201, align 1, !dbg !6350
  %203 = icmp eq i8 %202, 16, !dbg !6350
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !6350
  %205 = load i8, ptr %204, align 1, !dbg !6350
  %206 = icmp eq i8 %205, 0, !dbg !6350
  %207 = and i1 %203, %206, !dbg !6350
  %208 = and i1 %200, %207, !dbg !6350
  br i1 %208, label %assert_end83, label %assert_fail82, !dbg !6350, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %209(ptr nonnull @.str.2004), !dbg !6350
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %210 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !6350
  %211 = load i64, ptr %210, align 8, !dbg !6350
  %212 = icmp eq i64 %211, 0, !dbg !6350
  br i1 %212, label %assert_end85, label %assert_fail84, !dbg !6350, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %213(ptr nonnull @.str.2005), !dbg !6350
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !6350
  %215 = load i32, ptr %214, align 4, !dbg !6350
  %216 = icmp eq i32 %215, 1, !dbg !6350
  br i1 %216, label %assert_end87, label %assert_fail86, !dbg !6350, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %217(ptr nonnull @.str.2006), !dbg !6350
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %218 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !6350
  %219 = load i32, ptr %218, align 4, !dbg !6350
  %220 = icmp eq i32 %dev_id, %219, !dbg !6350
  br i1 %220, label %assert_end89, label %assert_fail88, !dbg !6350, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %221 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %221(ptr nonnull @.str.2007), !dbg !6350
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %222 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !6350
  %223 = load i32, ptr %222, align 4, !dbg !6350
  %224 = icmp eq i32 %223, 5, !dbg !6350
  br i1 %224, label %assert_end93, label %assert_fail90, !dbg !6350, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %225 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %225(ptr nonnull @.str.2008), !dbg !6350
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %226 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !6350
  %227 = load i16, ptr %226, align 2, !dbg !6350
  %228 = icmp eq i16 %227, 1, !dbg !6350
  %229 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !6350
  %230 = load i8, ptr %229, align 1, !dbg !6350
  %231 = icmp eq i8 %230, 8, !dbg !6350
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !6350
  %233 = load i8, ptr %232, align 1, !dbg !6350
  %234 = icmp eq i8 %233, 0, !dbg !6350
  %235 = and i1 %231, %234, !dbg !6350
  %236 = and i1 %228, %235, !dbg !6350
  br i1 %236, label %assert_end95, label %assert_fail94, !dbg !6350, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %237(ptr nonnull @.str.2009), !dbg !6350
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %238 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.shape, align 8, !dbg !6350, !tbaa !6454
  %239 = and i64 %238, 4294967295, !dbg !6350
  %240 = icmp eq i64 %239, 1, !dbg !6350
  br i1 %240, label %assert_end97, label %assert_fail96, !dbg !6350, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %241(ptr nonnull @.str.2010), !dbg !6350
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.shape, i64 1, !dbg !6350
  %243 = load i64, ptr %242, align 8, !dbg !6350, !tbaa !6464
  %244 = and i64 %243, 4294967295, !dbg !6350
  %245 = icmp eq i64 %244, 128, !dbg !6350
  br i1 %245, label %assert_end99, label %assert_fail98, !dbg !6350, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %246(ptr nonnull @.str.2011), !dbg !6350
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.shape, i64 2, !dbg !6350
  %248 = load i64, ptr %247, align 8, !dbg !6350, !tbaa !6466
  %249 = and i64 %248, 4294967295, !dbg !6350
  %250 = icmp eq i64 %249, 28, !dbg !6350
  br i1 %250, label %assert_end101, label %assert_fail100, !dbg !6350, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %251(ptr nonnull @.str.2012), !dbg !6350
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.shape, i64 3, !dbg !6350
  %253 = load i64, ptr %252, align 8, !dbg !6350, !tbaa !6469
  %254 = and i64 %253, 4294967295, !dbg !6350
  %255 = icmp eq i64 %254, 28, !dbg !6350
  br i1 %255, label %assert_end103, label %assert_fail102, !dbg !6350, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %256(ptr nonnull @.str.2013), !dbg !6350
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.shape, i64 4, !dbg !6350
  %258 = load i64, ptr %257, align 8, !dbg !6350, !tbaa !6471
  %259 = and i64 %258, 4294967295, !dbg !6350
  %260 = icmp eq i64 %259, 4, !dbg !6350
  br i1 %260, label %assert_end105, label %assert_fail104, !dbg !6350, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %261(ptr nonnull @.str.2014), !dbg !6350
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.strides, null, !dbg !6350
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !6350, !prof !59

if_then106:                                       ; preds = %assert_end105
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.strides, i64 1, !dbg !6350
  %263 = load i64, ptr %262, align 8, !dbg !6350, !tbaa !6475
  %264 = and i64 %263, 4294967295, !dbg !6350
  %265 = icmp eq i64 %264, 3136, !dbg !6350
  %266 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.strides, i64 2, !dbg !6350
  %267 = load i64, ptr %266, align 8, !dbg !6350, !tbaa !6485
  %268 = and i64 %267, 4294967295, !dbg !6350
  %269 = icmp eq i64 %268, 112, !dbg !6350
  %270 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.strides, i64 3, !dbg !6350
  %271 = load i64, ptr %270, align 8, !dbg !6350, !tbaa !6488
  %272 = and i64 %271, 4294967295, !dbg !6350
  %273 = icmp eq i64 %272, 4, !dbg !6350
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6.T_cast.strides, i64 4, !dbg !6350
  %275 = load i64, ptr %274, align 8, !dbg !6350, !tbaa !6490
  %276 = and i64 %275, 4294967295, !dbg !6350
  %277 = icmp eq i64 %276, 1, !dbg !6350
  %278 = and i1 %273, %277, !dbg !6350
  %279 = and i1 %269, %278, !dbg !6350
  %280 = and i1 %265, %279, !dbg !6350
  br i1 %280, label %if_end107, label %assert_fail108, !dbg !6350, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %281 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !6350
  %282 = load i64, ptr %281, align 8, !dbg !6350
  %283 = icmp eq i64 %282, 0, !dbg !6350
  br i1 %283, label %assert_end111, label %assert_fail110, !dbg !6350, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %284(ptr nonnull @.str.2015), !dbg !6350
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %285 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %285(ptr nonnull @.str.2016), !dbg !6350
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %286 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !6350
  %287 = load i32, ptr %286, align 4, !dbg !6350
  %288 = icmp eq i32 %287, 1, !dbg !6350
  br i1 %288, label %assert_end113, label %assert_fail112, !dbg !6350, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %289(ptr nonnull @.str.2017), !dbg !6350
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %290 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !6350
  %291 = load i32, ptr %290, align 4, !dbg !6350
  %292 = icmp eq i32 %dev_id, %291, !dbg !6350
  br i1 %292, label %assert_end115, label %assert_fail114, !dbg !6350, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %293 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6350, !tbaa !19
  tail call void %293(ptr nonnull @.str.2018), !dbg !6350
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %294 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_compute_(ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !6350
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6494 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6496, metadata !DIExpression()), !dbg !6502
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6497, metadata !DIExpression()), !dbg !6502
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6498, metadata !DIExpression()), !dbg !6502
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6499, metadata !DIExpression()), !dbg !6502
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6500, metadata !DIExpression()), !dbg !6502
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6501, metadata !DIExpression()), !dbg !6502
  %0 = icmp eq i32 %num_args, 5, !dbg !6502
  br i1 %0, label %assert_end, label %assert_fail, !dbg !6502, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %294, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !6502

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %1(ptr nonnull @.str.2020), !dbg !6502
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6502, !tbaa !6503
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6502
  %p1.code = load i32, ptr %2, align 4, !dbg !6502, !tbaa !6514
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6502
  %p2.code = load i32, ptr %3, align 4, !dbg !6502, !tbaa !6516
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !6502
  %p3.code = load i32, ptr %4, align 4, !dbg !6502, !tbaa !6519
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !6502
  %T_cast.code = load i32, ptr %5, align 4, !dbg !6502, !tbaa !6521
  %p0 = load ptr, ptr %args, align 8, !dbg !6502
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6502
  %p1 = load ptr, ptr %6, align 8, !dbg !6502
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6502
  %p2 = load ptr, ptr %7, align 8, !dbg !6502
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !6502
  %p3 = load ptr, ptr %8, align 8, !dbg !6502
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !6502
  %T_cast = load ptr, ptr %9, align 8, !dbg !6502
  %p0116 = load ptr, ptr %p0, align 8, !dbg !6502
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !6502
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6502
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.shape = load ptr, ptr %10, align 8, !dbg !6502
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6502
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.strides = load ptr, ptr %11, align 8, !dbg !6502
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6502
  %dev_id = load i32, ptr %12, align 4, !dbg !6502
  %p1117 = load ptr, ptr %p1, align 8, !dbg !6502
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !6502
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6502
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.shape = load ptr, ptr %13, align 8, !dbg !6502
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6502
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.strides = load ptr, ptr %14, align 8, !dbg !6502
  %p2119 = load ptr, ptr %p2, align 8, !dbg !6502
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !6502
  %p3120 = load ptr, ptr %p3, align 8, !dbg !6502
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !6502
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !6502
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !6502
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !6502
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.shape = load ptr, ptr %15, align 8, !dbg !6502
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !6502
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.strides = load ptr, ptr %16, align 8, !dbg !6502
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !6502

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %17(ptr nonnull @.str.2021), !dbg !6502
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !6502

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %18(ptr nonnull @.str.2022), !dbg !6502
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !6502

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %19(ptr nonnull @.str.2023), !dbg !6502
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !6502

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %20(ptr nonnull @.str.2024), !dbg !6502
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !6502

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %21(ptr nonnull @.str.2025), !dbg !6502
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6502
  %23 = load i32, ptr %22, align 4, !dbg !6502
  %24 = icmp eq i32 %23, 5, !dbg !6502
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !6502, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %25(ptr nonnull @.str.2026), !dbg !6502
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6502
  %27 = load i16, ptr %26, align 2, !dbg !6502
  %28 = icmp eq i16 %27, 1, !dbg !6502
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6502
  %30 = load i8, ptr %29, align 1, !dbg !6502
  %31 = icmp eq i8 %30, 8, !dbg !6502
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6502
  %33 = load i8, ptr %32, align 1, !dbg !6502
  %34 = icmp eq i8 %33, 0, !dbg !6502
  %35 = and i1 %31, %34, !dbg !6502
  %36 = and i1 %28, %35, !dbg !6502
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !6502, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %37(ptr nonnull @.str.2027), !dbg !6502
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.shape, align 8, !dbg !6502, !tbaa !6525
  %39 = and i64 %38, 4294967295, !dbg !6502
  %40 = icmp eq i64 %39, 1, !dbg !6502
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !6502, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %41(ptr nonnull @.str.2028), !dbg !6502
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.shape, i64 1, !dbg !6502
  %43 = load i64, ptr %42, align 8, !dbg !6502, !tbaa !6535
  %44 = and i64 %43, 4294967295, !dbg !6502
  %45 = icmp eq i64 %44, 64, !dbg !6502
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !6502, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %46(ptr nonnull @.str.2029), !dbg !6502
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.shape, i64 2, !dbg !6502
  %48 = load i64, ptr %47, align 8, !dbg !6502, !tbaa !6537
  %49 = and i64 %48, 4294967295, !dbg !6502
  %50 = icmp eq i64 %49, 56, !dbg !6502
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !6502, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %51(ptr nonnull @.str.2030), !dbg !6502
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.shape, i64 3, !dbg !6502
  %53 = load i64, ptr %52, align 8, !dbg !6502, !tbaa !6540
  %54 = and i64 %53, 4294967295, !dbg !6502
  %55 = icmp eq i64 %54, 56, !dbg !6502
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !6502, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %56(ptr nonnull @.str.2031), !dbg !6502
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.shape, i64 4, !dbg !6502
  %58 = load i64, ptr %57, align 8, !dbg !6502, !tbaa !6542
  %59 = and i64 %58, 4294967295, !dbg !6502
  %60 = icmp eq i64 %59, 4, !dbg !6502
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !6502, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %61(ptr nonnull @.str.2032), !dbg !6502
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.strides, null, !dbg !6502
  br i1 %.not, label %if_end, label %if_then, !dbg !6502, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.strides, i64 1, !dbg !6502
  %63 = load i64, ptr %62, align 8, !dbg !6502, !tbaa !6546
  %64 = and i64 %63, 4294967295, !dbg !6502
  %65 = icmp eq i64 %64, 12544, !dbg !6502
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.strides, i64 2, !dbg !6502
  %67 = load i64, ptr %66, align 8, !dbg !6502, !tbaa !6556
  %68 = and i64 %67, 4294967295, !dbg !6502
  %69 = icmp eq i64 %68, 224, !dbg !6502
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.strides, i64 3, !dbg !6502
  %71 = load i64, ptr %70, align 8, !dbg !6502, !tbaa !6559
  %72 = and i64 %71, 4294967295, !dbg !6502
  %73 = icmp eq i64 %72, 4, !dbg !6502
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p0.strides, i64 4, !dbg !6502
  %75 = load i64, ptr %74, align 8, !dbg !6502, !tbaa !6561
  %76 = and i64 %75, 4294967295, !dbg !6502
  %77 = icmp eq i64 %76, 1, !dbg !6502
  %78 = and i1 %73, %77, !dbg !6502
  %79 = and i1 %69, %78, !dbg !6502
  %80 = and i1 %65, %79, !dbg !6502
  br i1 %80, label %if_end, label %assert_fail32, !dbg !6502, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6502
  %82 = load i64, ptr %81, align 8, !dbg !6502
  %83 = icmp eq i64 %82, 0, !dbg !6502
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !6502, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %84(ptr nonnull @.str.2033), !dbg !6502
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %85(ptr nonnull @.str.2034), !dbg !6502
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6502
  %87 = load i32, ptr %86, align 4, !dbg !6502
  %88 = icmp eq i32 %87, 1, !dbg !6502
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !6502, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %89(ptr nonnull @.str.2035), !dbg !6502
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6502
  %91 = load i32, ptr %90, align 4, !dbg !6502
  %92 = icmp eq i32 %91, 6, !dbg !6502
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !6502, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %93(ptr nonnull @.str.2036), !dbg !6502
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6502
  %95 = load i16, ptr %94, align 2, !dbg !6502
  %96 = icmp eq i16 %95, 1, !dbg !6502
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6502
  %98 = load i8, ptr %97, align 1, !dbg !6502
  %99 = icmp eq i8 %98, 8, !dbg !6502
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6502
  %101 = load i8, ptr %100, align 1, !dbg !6502
  %102 = icmp eq i8 %101, 0, !dbg !6502
  %103 = and i1 %99, %102, !dbg !6502
  %104 = and i1 %96, %103, !dbg !6502
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !6502, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %105(ptr nonnull @.str.2037), !dbg !6502
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.shape, align 8, !dbg !6502, !tbaa !6565
  %107 = and i64 %106, 4294967295, !dbg !6502
  %108 = icmp eq i64 %107, 128, !dbg !6502
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !6502, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %109(ptr nonnull @.str.2038), !dbg !6502
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.shape, i64 1, !dbg !6502
  %111 = load i64, ptr %110, align 8, !dbg !6502, !tbaa !6575
  %112 = and i64 %111, 4294967295, !dbg !6502
  %113 = icmp eq i64 %112, 64, !dbg !6502
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !6502, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %114(ptr nonnull @.str.2039), !dbg !6502
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.shape, i64 2, !dbg !6502
  %116 = load i64, ptr %115, align 8, !dbg !6502, !tbaa !6577
  %117 = and i64 %116, 4294967295, !dbg !6502
  %118 = icmp eq i64 %117, 1, !dbg !6502
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !6502, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %119(ptr nonnull @.str.2040), !dbg !6502
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.shape, i64 3, !dbg !6502
  %121 = load i64, ptr %120, align 8, !dbg !6502, !tbaa !6580
  %122 = and i64 %121, 4294967295, !dbg !6502
  %123 = icmp eq i64 %122, 1, !dbg !6502
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !6502, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %124(ptr nonnull @.str.2041), !dbg !6502
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.shape, i64 4, !dbg !6502
  %126 = load i64, ptr %125, align 8, !dbg !6502, !tbaa !6582
  %127 = and i64 %126, 4294967295, !dbg !6502
  %128 = icmp eq i64 %127, 4, !dbg !6502
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !6502, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %129(ptr nonnull @.str.2042), !dbg !6502
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.shape, i64 5, !dbg !6502
  %131 = load i64, ptr %130, align 8, !dbg !6502, !tbaa !6586
  %132 = and i64 %131, 4294967295, !dbg !6502
  %133 = icmp eq i64 %132, 4, !dbg !6502
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !6502, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %134(ptr nonnull @.str.2043), !dbg !6502
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.strides, null, !dbg !6502
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !6502, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.strides, align 8, !dbg !6502, !tbaa !6588
  %136 = and i64 %135, 4294967295, !dbg !6502
  %137 = icmp eq i64 %136, 1024, !dbg !6502
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.strides, i64 1, !dbg !6502
  %139 = load i64, ptr %138, align 8, !dbg !6502, !tbaa !6598
  %140 = and i64 %139, 4294967295, !dbg !6502
  %141 = icmp eq i64 %140, 16, !dbg !6502
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.strides, i64 4, !dbg !6502
  %143 = load i64, ptr %142, align 8, !dbg !6502, !tbaa !6600
  %144 = and i64 %143, 4294967295, !dbg !6502
  %145 = icmp eq i64 %144, 4, !dbg !6502
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.p1.strides, i64 5, !dbg !6502
  %147 = load i64, ptr %146, align 8, !dbg !6502, !tbaa !6604
  %148 = and i64 %147, 4294967295, !dbg !6502
  %149 = icmp eq i64 %148, 1, !dbg !6502
  %150 = and i1 %145, %149, !dbg !6502
  %151 = and i1 %141, %150, !dbg !6502
  %152 = and i1 %137, %151, !dbg !6502
  br i1 %152, label %if_end57, label %assert_fail58, !dbg !6502, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6502
  %154 = load i64, ptr %153, align 8, !dbg !6502
  %155 = icmp eq i64 %154, 0, !dbg !6502
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !6502, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %156(ptr nonnull @.str.2044), !dbg !6502
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %157(ptr nonnull @.str.2045), !dbg !6502
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %158 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6502
  %159 = load i32, ptr %158, align 4, !dbg !6502
  %160 = icmp eq i32 %159, 1, !dbg !6502
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !6502, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %161(ptr nonnull @.str.2046), !dbg !6502
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6502
  %163 = load i32, ptr %162, align 4, !dbg !6502
  %164 = icmp eq i32 %dev_id, %163, !dbg !6502
  br i1 %164, label %assert_end65, label %assert_fail64, !dbg !6502, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %165(ptr nonnull @.str.2047), !dbg !6502
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %166 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !6502
  %167 = load i32, ptr %166, align 4, !dbg !6502
  %168 = icmp eq i32 %167, 0, !dbg !6502
  br i1 %168, label %assert_end69, label %assert_fail66, !dbg !6502, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %169(ptr nonnull @.str.2048), !dbg !6502
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !6502
  %171 = load i16, ptr %170, align 2, !dbg !6502
  %172 = icmp eq i16 %171, 1, !dbg !6502
  %173 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !6502
  %174 = load i8, ptr %173, align 1, !dbg !6502
  %175 = icmp eq i8 %174, 16, !dbg !6502
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !6502
  %177 = load i8, ptr %176, align 1, !dbg !6502
  %178 = icmp eq i8 %177, 0, !dbg !6502
  %179 = and i1 %175, %178, !dbg !6502
  %180 = and i1 %172, %179, !dbg !6502
  br i1 %180, label %assert_end71, label %assert_fail70, !dbg !6502, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %181(ptr nonnull @.str.2049), !dbg !6502
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !6502
  %183 = load i64, ptr %182, align 8, !dbg !6502
  %184 = icmp eq i64 %183, 0, !dbg !6502
  br i1 %184, label %assert_end73, label %assert_fail72, !dbg !6502, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %185(ptr nonnull @.str.2050), !dbg !6502
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !6502
  %187 = load i32, ptr %186, align 4, !dbg !6502
  %188 = icmp eq i32 %187, 1, !dbg !6502
  br i1 %188, label %assert_end75, label %assert_fail74, !dbg !6502, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %189(ptr nonnull @.str.2051), !dbg !6502
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !6502
  %191 = load i32, ptr %190, align 4, !dbg !6502
  %192 = icmp eq i32 %dev_id, %191, !dbg !6502
  br i1 %192, label %assert_end77, label %assert_fail76, !dbg !6502, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %193(ptr nonnull @.str.2052), !dbg !6502
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %194 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !6502
  %195 = load i32, ptr %194, align 4, !dbg !6502
  %196 = icmp eq i32 %195, 0, !dbg !6502
  br i1 %196, label %assert_end81, label %assert_fail78, !dbg !6502, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %197(ptr nonnull @.str.2053), !dbg !6502
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %198 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !6502
  %199 = load i16, ptr %198, align 2, !dbg !6502
  %200 = icmp eq i16 %199, 1, !dbg !6502
  %201 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !6502
  %202 = load i8, ptr %201, align 1, !dbg !6502
  %203 = icmp eq i8 %202, 16, !dbg !6502
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !6502
  %205 = load i8, ptr %204, align 1, !dbg !6502
  %206 = icmp eq i8 %205, 0, !dbg !6502
  %207 = and i1 %203, %206, !dbg !6502
  %208 = and i1 %200, %207, !dbg !6502
  br i1 %208, label %assert_end83, label %assert_fail82, !dbg !6502, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %209(ptr nonnull @.str.2054), !dbg !6502
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %210 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !6502
  %211 = load i64, ptr %210, align 8, !dbg !6502
  %212 = icmp eq i64 %211, 0, !dbg !6502
  br i1 %212, label %assert_end85, label %assert_fail84, !dbg !6502, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %213(ptr nonnull @.str.2055), !dbg !6502
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !6502
  %215 = load i32, ptr %214, align 4, !dbg !6502
  %216 = icmp eq i32 %215, 1, !dbg !6502
  br i1 %216, label %assert_end87, label %assert_fail86, !dbg !6502, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %217(ptr nonnull @.str.2056), !dbg !6502
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %218 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !6502
  %219 = load i32, ptr %218, align 4, !dbg !6502
  %220 = icmp eq i32 %dev_id, %219, !dbg !6502
  br i1 %220, label %assert_end89, label %assert_fail88, !dbg !6502, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %221 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %221(ptr nonnull @.str.2057), !dbg !6502
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %222 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !6502
  %223 = load i32, ptr %222, align 4, !dbg !6502
  %224 = icmp eq i32 %223, 5, !dbg !6502
  br i1 %224, label %assert_end93, label %assert_fail90, !dbg !6502, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %225 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %225(ptr nonnull @.str.2058), !dbg !6502
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %226 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !6502
  %227 = load i16, ptr %226, align 2, !dbg !6502
  %228 = icmp eq i16 %227, 1, !dbg !6502
  %229 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !6502
  %230 = load i8, ptr %229, align 1, !dbg !6502
  %231 = icmp eq i8 %230, 8, !dbg !6502
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !6502
  %233 = load i8, ptr %232, align 1, !dbg !6502
  %234 = icmp eq i8 %233, 0, !dbg !6502
  %235 = and i1 %231, %234, !dbg !6502
  %236 = and i1 %228, %235, !dbg !6502
  br i1 %236, label %assert_end95, label %assert_fail94, !dbg !6502, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %237(ptr nonnull @.str.2059), !dbg !6502
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %238 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.shape, align 8, !dbg !6502, !tbaa !6606
  %239 = and i64 %238, 4294967295, !dbg !6502
  %240 = icmp eq i64 %239, 1, !dbg !6502
  br i1 %240, label %assert_end97, label %assert_fail96, !dbg !6502, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %241(ptr nonnull @.str.2060), !dbg !6502
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.shape, i64 1, !dbg !6502
  %243 = load i64, ptr %242, align 8, !dbg !6502, !tbaa !6616
  %244 = and i64 %243, 4294967295, !dbg !6502
  %245 = icmp eq i64 %244, 128, !dbg !6502
  br i1 %245, label %assert_end99, label %assert_fail98, !dbg !6502, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %246(ptr nonnull @.str.2061), !dbg !6502
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.shape, i64 2, !dbg !6502
  %248 = load i64, ptr %247, align 8, !dbg !6502, !tbaa !6618
  %249 = and i64 %248, 4294967295, !dbg !6502
  %250 = icmp eq i64 %249, 28, !dbg !6502
  br i1 %250, label %assert_end101, label %assert_fail100, !dbg !6502, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %251(ptr nonnull @.str.2062), !dbg !6502
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.shape, i64 3, !dbg !6502
  %253 = load i64, ptr %252, align 8, !dbg !6502, !tbaa !6621
  %254 = and i64 %253, 4294967295, !dbg !6502
  %255 = icmp eq i64 %254, 28, !dbg !6502
  br i1 %255, label %assert_end103, label %assert_fail102, !dbg !6502, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %256(ptr nonnull @.str.2063), !dbg !6502
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.shape, i64 4, !dbg !6502
  %258 = load i64, ptr %257, align 8, !dbg !6502, !tbaa !6623
  %259 = and i64 %258, 4294967295, !dbg !6502
  %260 = icmp eq i64 %259, 4, !dbg !6502
  br i1 %260, label %assert_end105, label %assert_fail104, !dbg !6502, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %261(ptr nonnull @.str.2064), !dbg !6502
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.strides, null, !dbg !6502
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !6502, !prof !59

if_then106:                                       ; preds = %assert_end105
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.strides, i64 1, !dbg !6502
  %263 = load i64, ptr %262, align 8, !dbg !6502, !tbaa !6627
  %264 = and i64 %263, 4294967295, !dbg !6502
  %265 = icmp eq i64 %264, 3136, !dbg !6502
  %266 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.strides, i64 2, !dbg !6502
  %267 = load i64, ptr %266, align 8, !dbg !6502, !tbaa !6637
  %268 = and i64 %267, 4294967295, !dbg !6502
  %269 = icmp eq i64 %268, 112, !dbg !6502
  %270 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.strides, i64 3, !dbg !6502
  %271 = load i64, ptr %270, align 8, !dbg !6502, !tbaa !6640
  %272 = and i64 %271, 4294967295, !dbg !6502
  %273 = icmp eq i64 %272, 4, !dbg !6502
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7.T_cast.strides, i64 4, !dbg !6502
  %275 = load i64, ptr %274, align 8, !dbg !6502, !tbaa !6642
  %276 = and i64 %275, 4294967295, !dbg !6502
  %277 = icmp eq i64 %276, 1, !dbg !6502
  %278 = and i1 %273, %277, !dbg !6502
  %279 = and i1 %269, %278, !dbg !6502
  %280 = and i1 %265, %279, !dbg !6502
  br i1 %280, label %if_end107, label %assert_fail108, !dbg !6502, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %281 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !6502
  %282 = load i64, ptr %281, align 8, !dbg !6502
  %283 = icmp eq i64 %282, 0, !dbg !6502
  br i1 %283, label %assert_end111, label %assert_fail110, !dbg !6502, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %284(ptr nonnull @.str.2065), !dbg !6502
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %285 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %285(ptr nonnull @.str.2066), !dbg !6502
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %286 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !6502
  %287 = load i32, ptr %286, align 4, !dbg !6502
  %288 = icmp eq i32 %287, 1, !dbg !6502
  br i1 %288, label %assert_end113, label %assert_fail112, !dbg !6502, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %289(ptr nonnull @.str.2067), !dbg !6502
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %290 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !6502
  %291 = load i32, ptr %290, align 4, !dbg !6502
  %292 = icmp eq i32 %dev_id, %291, !dbg !6502
  br i1 %292, label %assert_end115, label %assert_fail114, !dbg !6502, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %293 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6502, !tbaa !19
  tail call void %293(ptr nonnull @.str.2068), !dbg !6502
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %294 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_compute_(ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !6502
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6646 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6648, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6649, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6650, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6651, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6652, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6653, metadata !DIExpression()), !dbg !6654
  %0 = icmp eq i32 %num_args, 5, !dbg !6654
  br i1 %0, label %assert_end, label %assert_fail, !dbg !6654, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %294, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !6654

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %1(ptr nonnull @.str.2070), !dbg !6654
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6654, !tbaa !6655
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6654
  %p1.code = load i32, ptr %2, align 4, !dbg !6654, !tbaa !6666
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6654
  %p2.code = load i32, ptr %3, align 4, !dbg !6654, !tbaa !6668
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !6654
  %p3.code = load i32, ptr %4, align 4, !dbg !6654, !tbaa !6671
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !6654
  %T_cast.code = load i32, ptr %5, align 4, !dbg !6654, !tbaa !6673
  %p0 = load ptr, ptr %args, align 8, !dbg !6654
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6654
  %p1 = load ptr, ptr %6, align 8, !dbg !6654
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6654
  %p2 = load ptr, ptr %7, align 8, !dbg !6654
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !6654
  %p3 = load ptr, ptr %8, align 8, !dbg !6654
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !6654
  %T_cast = load ptr, ptr %9, align 8, !dbg !6654
  %p0116 = load ptr, ptr %p0, align 8, !dbg !6654
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !6654
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6654
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.shape = load ptr, ptr %10, align 8, !dbg !6654
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6654
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.strides = load ptr, ptr %11, align 8, !dbg !6654
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6654
  %dev_id = load i32, ptr %12, align 4, !dbg !6654
  %p1117 = load ptr, ptr %p1, align 8, !dbg !6654
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !6654
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6654
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.shape = load ptr, ptr %13, align 8, !dbg !6654
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6654
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.strides = load ptr, ptr %14, align 8, !dbg !6654
  %p2119 = load ptr, ptr %p2, align 8, !dbg !6654
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !6654
  %p3120 = load ptr, ptr %p3, align 8, !dbg !6654
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !6654
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !6654
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !6654
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !6654
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.shape = load ptr, ptr %15, align 8, !dbg !6654
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !6654
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.strides = load ptr, ptr %16, align 8, !dbg !6654
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !6654

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %17(ptr nonnull @.str.2071), !dbg !6654
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !6654

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %18(ptr nonnull @.str.2072), !dbg !6654
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !6654

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %19(ptr nonnull @.str.2073), !dbg !6654
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !6654

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %20(ptr nonnull @.str.2074), !dbg !6654
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !6654

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %21(ptr nonnull @.str.2075), !dbg !6654
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6654
  %23 = load i32, ptr %22, align 4, !dbg !6654
  %24 = icmp eq i32 %23, 5, !dbg !6654
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !6654, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %25(ptr nonnull @.str.2076), !dbg !6654
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6654
  %27 = load i16, ptr %26, align 2, !dbg !6654
  %28 = icmp eq i16 %27, 1, !dbg !6654
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6654
  %30 = load i8, ptr %29, align 1, !dbg !6654
  %31 = icmp eq i8 %30, 8, !dbg !6654
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6654
  %33 = load i8, ptr %32, align 1, !dbg !6654
  %34 = icmp eq i8 %33, 0, !dbg !6654
  %35 = and i1 %31, %34, !dbg !6654
  %36 = and i1 %28, %35, !dbg !6654
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !6654, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %37(ptr nonnull @.str.2077), !dbg !6654
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.shape, align 8, !dbg !6654, !tbaa !6677
  %39 = and i64 %38, 4294967295, !dbg !6654
  %40 = icmp eq i64 %39, 1, !dbg !6654
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !6654, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %41(ptr nonnull @.str.2078), !dbg !6654
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.shape, i64 1, !dbg !6654
  %43 = load i64, ptr %42, align 8, !dbg !6654, !tbaa !6687
  %44 = and i64 %43, 4294967295, !dbg !6654
  %45 = icmp eq i64 %44, 128, !dbg !6654
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !6654, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %46(ptr nonnull @.str.2079), !dbg !6654
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.shape, i64 2, !dbg !6654
  %48 = load i64, ptr %47, align 8, !dbg !6654, !tbaa !6689
  %49 = and i64 %48, 4294967295, !dbg !6654
  %50 = icmp eq i64 %49, 28, !dbg !6654
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !6654, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %51(ptr nonnull @.str.2080), !dbg !6654
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.shape, i64 3, !dbg !6654
  %53 = load i64, ptr %52, align 8, !dbg !6654, !tbaa !6692
  %54 = and i64 %53, 4294967295, !dbg !6654
  %55 = icmp eq i64 %54, 28, !dbg !6654
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !6654, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %56(ptr nonnull @.str.2081), !dbg !6654
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.shape, i64 4, !dbg !6654
  %58 = load i64, ptr %57, align 8, !dbg !6654, !tbaa !6694
  %59 = and i64 %58, 4294967295, !dbg !6654
  %60 = icmp eq i64 %59, 4, !dbg !6654
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !6654, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %61(ptr nonnull @.str.2082), !dbg !6654
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.strides, null, !dbg !6654
  br i1 %.not, label %if_end, label %if_then, !dbg !6654, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.strides, i64 1, !dbg !6654
  %63 = load i64, ptr %62, align 8, !dbg !6654, !tbaa !6698
  %64 = and i64 %63, 4294967295, !dbg !6654
  %65 = icmp eq i64 %64, 3136, !dbg !6654
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.strides, i64 2, !dbg !6654
  %67 = load i64, ptr %66, align 8, !dbg !6654, !tbaa !6708
  %68 = and i64 %67, 4294967295, !dbg !6654
  %69 = icmp eq i64 %68, 112, !dbg !6654
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.strides, i64 3, !dbg !6654
  %71 = load i64, ptr %70, align 8, !dbg !6654, !tbaa !6711
  %72 = and i64 %71, 4294967295, !dbg !6654
  %73 = icmp eq i64 %72, 4, !dbg !6654
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p0.strides, i64 4, !dbg !6654
  %75 = load i64, ptr %74, align 8, !dbg !6654, !tbaa !6713
  %76 = and i64 %75, 4294967295, !dbg !6654
  %77 = icmp eq i64 %76, 1, !dbg !6654
  %78 = and i1 %73, %77, !dbg !6654
  %79 = and i1 %69, %78, !dbg !6654
  %80 = and i1 %65, %79, !dbg !6654
  br i1 %80, label %if_end, label %assert_fail32, !dbg !6654, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6654
  %82 = load i64, ptr %81, align 8, !dbg !6654
  %83 = icmp eq i64 %82, 0, !dbg !6654
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !6654, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %84(ptr nonnull @.str.2083), !dbg !6654
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %85(ptr nonnull @.str.2084), !dbg !6654
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6654
  %87 = load i32, ptr %86, align 4, !dbg !6654
  %88 = icmp eq i32 %87, 1, !dbg !6654
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !6654, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %89(ptr nonnull @.str.2085), !dbg !6654
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6654
  %91 = load i32, ptr %90, align 4, !dbg !6654
  %92 = icmp eq i32 %91, 6, !dbg !6654
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !6654, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %93(ptr nonnull @.str.2086), !dbg !6654
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6654
  %95 = load i16, ptr %94, align 2, !dbg !6654
  %96 = icmp eq i16 %95, 1, !dbg !6654
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6654
  %98 = load i8, ptr %97, align 1, !dbg !6654
  %99 = icmp eq i8 %98, 8, !dbg !6654
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6654
  %101 = load i8, ptr %100, align 1, !dbg !6654
  %102 = icmp eq i8 %101, 0, !dbg !6654
  %103 = and i1 %99, %102, !dbg !6654
  %104 = and i1 %96, %103, !dbg !6654
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !6654, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %105(ptr nonnull @.str.2087), !dbg !6654
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.shape, align 8, !dbg !6654, !tbaa !6717
  %107 = and i64 %106, 4294967295, !dbg !6654
  %108 = icmp eq i64 %107, 32, !dbg !6654
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !6654, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %109(ptr nonnull @.str.2088), !dbg !6654
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.shape, i64 1, !dbg !6654
  %111 = load i64, ptr %110, align 8, !dbg !6654, !tbaa !6727
  %112 = and i64 %111, 4294967295, !dbg !6654
  %113 = icmp eq i64 %112, 128, !dbg !6654
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !6654, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %114(ptr nonnull @.str.2089), !dbg !6654
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.shape, i64 2, !dbg !6654
  %116 = load i64, ptr %115, align 8, !dbg !6654, !tbaa !6729
  %117 = and i64 %116, 4294967295, !dbg !6654
  %118 = icmp eq i64 %117, 1, !dbg !6654
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !6654, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %119(ptr nonnull @.str.2090), !dbg !6654
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.shape, i64 3, !dbg !6654
  %121 = load i64, ptr %120, align 8, !dbg !6654, !tbaa !6732
  %122 = and i64 %121, 4294967295, !dbg !6654
  %123 = icmp eq i64 %122, 1, !dbg !6654
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !6654, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %124(ptr nonnull @.str.2091), !dbg !6654
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.shape, i64 4, !dbg !6654
  %126 = load i64, ptr %125, align 8, !dbg !6654, !tbaa !6734
  %127 = and i64 %126, 4294967295, !dbg !6654
  %128 = icmp eq i64 %127, 4, !dbg !6654
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !6654, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %129(ptr nonnull @.str.2092), !dbg !6654
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.shape, i64 5, !dbg !6654
  %131 = load i64, ptr %130, align 8, !dbg !6654, !tbaa !6738
  %132 = and i64 %131, 4294967295, !dbg !6654
  %133 = icmp eq i64 %132, 4, !dbg !6654
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !6654, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %134(ptr nonnull @.str.2093), !dbg !6654
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.strides, null, !dbg !6654
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !6654, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.strides, align 8, !dbg !6654, !tbaa !6740
  %136 = and i64 %135, 4294967295, !dbg !6654
  %137 = icmp eq i64 %136, 2048, !dbg !6654
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.strides, i64 1, !dbg !6654
  %139 = load i64, ptr %138, align 8, !dbg !6654, !tbaa !6750
  %140 = and i64 %139, 4294967295, !dbg !6654
  %141 = icmp eq i64 %140, 16, !dbg !6654
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.strides, i64 4, !dbg !6654
  %143 = load i64, ptr %142, align 8, !dbg !6654, !tbaa !6752
  %144 = and i64 %143, 4294967295, !dbg !6654
  %145 = icmp eq i64 %144, 4, !dbg !6654
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.p1.strides, i64 5, !dbg !6654
  %147 = load i64, ptr %146, align 8, !dbg !6654, !tbaa !6756
  %148 = and i64 %147, 4294967295, !dbg !6654
  %149 = icmp eq i64 %148, 1, !dbg !6654
  %150 = and i1 %145, %149, !dbg !6654
  %151 = and i1 %141, %150, !dbg !6654
  %152 = and i1 %137, %151, !dbg !6654
  br i1 %152, label %if_end57, label %assert_fail58, !dbg !6654, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %153 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6654
  %154 = load i64, ptr %153, align 8, !dbg !6654
  %155 = icmp eq i64 %154, 0, !dbg !6654
  br i1 %155, label %assert_end61, label %assert_fail60, !dbg !6654, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %156(ptr nonnull @.str.2094), !dbg !6654
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %157 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %157(ptr nonnull @.str.2095), !dbg !6654
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %158 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6654
  %159 = load i32, ptr %158, align 4, !dbg !6654
  %160 = icmp eq i32 %159, 1, !dbg !6654
  br i1 %160, label %assert_end63, label %assert_fail62, !dbg !6654, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %161(ptr nonnull @.str.2096), !dbg !6654
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6654
  %163 = load i32, ptr %162, align 4, !dbg !6654
  %164 = icmp eq i32 %dev_id, %163, !dbg !6654
  br i1 %164, label %assert_end65, label %assert_fail64, !dbg !6654, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %165(ptr nonnull @.str.2097), !dbg !6654
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %166 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !6654
  %167 = load i32, ptr %166, align 4, !dbg !6654
  %168 = icmp eq i32 %167, 0, !dbg !6654
  br i1 %168, label %assert_end69, label %assert_fail66, !dbg !6654, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %169(ptr nonnull @.str.2098), !dbg !6654
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !6654
  %171 = load i16, ptr %170, align 2, !dbg !6654
  %172 = icmp eq i16 %171, 1, !dbg !6654
  %173 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !6654
  %174 = load i8, ptr %173, align 1, !dbg !6654
  %175 = icmp eq i8 %174, 16, !dbg !6654
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !6654
  %177 = load i8, ptr %176, align 1, !dbg !6654
  %178 = icmp eq i8 %177, 0, !dbg !6654
  %179 = and i1 %175, %178, !dbg !6654
  %180 = and i1 %172, %179, !dbg !6654
  br i1 %180, label %assert_end71, label %assert_fail70, !dbg !6654, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %181(ptr nonnull @.str.2099), !dbg !6654
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !6654
  %183 = load i64, ptr %182, align 8, !dbg !6654
  %184 = icmp eq i64 %183, 0, !dbg !6654
  br i1 %184, label %assert_end73, label %assert_fail72, !dbg !6654, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %185(ptr nonnull @.str.2100), !dbg !6654
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !6654
  %187 = load i32, ptr %186, align 4, !dbg !6654
  %188 = icmp eq i32 %187, 1, !dbg !6654
  br i1 %188, label %assert_end75, label %assert_fail74, !dbg !6654, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %189(ptr nonnull @.str.2101), !dbg !6654
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %190 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !6654
  %191 = load i32, ptr %190, align 4, !dbg !6654
  %192 = icmp eq i32 %dev_id, %191, !dbg !6654
  br i1 %192, label %assert_end77, label %assert_fail76, !dbg !6654, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %193 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %193(ptr nonnull @.str.2102), !dbg !6654
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %194 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !6654
  %195 = load i32, ptr %194, align 4, !dbg !6654
  %196 = icmp eq i32 %195, 0, !dbg !6654
  br i1 %196, label %assert_end81, label %assert_fail78, !dbg !6654, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %197 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %197(ptr nonnull @.str.2103), !dbg !6654
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %198 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !6654
  %199 = load i16, ptr %198, align 2, !dbg !6654
  %200 = icmp eq i16 %199, 1, !dbg !6654
  %201 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !6654
  %202 = load i8, ptr %201, align 1, !dbg !6654
  %203 = icmp eq i8 %202, 16, !dbg !6654
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !6654
  %205 = load i8, ptr %204, align 1, !dbg !6654
  %206 = icmp eq i8 %205, 0, !dbg !6654
  %207 = and i1 %203, %206, !dbg !6654
  %208 = and i1 %200, %207, !dbg !6654
  br i1 %208, label %assert_end83, label %assert_fail82, !dbg !6654, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %209(ptr nonnull @.str.2104), !dbg !6654
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %210 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !6654
  %211 = load i64, ptr %210, align 8, !dbg !6654
  %212 = icmp eq i64 %211, 0, !dbg !6654
  br i1 %212, label %assert_end85, label %assert_fail84, !dbg !6654, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %213(ptr nonnull @.str.2105), !dbg !6654
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !6654
  %215 = load i32, ptr %214, align 4, !dbg !6654
  %216 = icmp eq i32 %215, 1, !dbg !6654
  br i1 %216, label %assert_end87, label %assert_fail86, !dbg !6654, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %217(ptr nonnull @.str.2106), !dbg !6654
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %218 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !6654
  %219 = load i32, ptr %218, align 4, !dbg !6654
  %220 = icmp eq i32 %dev_id, %219, !dbg !6654
  br i1 %220, label %assert_end89, label %assert_fail88, !dbg !6654, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %221 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %221(ptr nonnull @.str.2107), !dbg !6654
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %222 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !6654
  %223 = load i32, ptr %222, align 4, !dbg !6654
  %224 = icmp eq i32 %223, 5, !dbg !6654
  br i1 %224, label %assert_end93, label %assert_fail90, !dbg !6654, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %225 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %225(ptr nonnull @.str.2108), !dbg !6654
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %226 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !6654
  %227 = load i16, ptr %226, align 2, !dbg !6654
  %228 = icmp eq i16 %227, 1, !dbg !6654
  %229 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !6654
  %230 = load i8, ptr %229, align 1, !dbg !6654
  %231 = icmp eq i8 %230, 8, !dbg !6654
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !6654
  %233 = load i8, ptr %232, align 1, !dbg !6654
  %234 = icmp eq i8 %233, 0, !dbg !6654
  %235 = and i1 %231, %234, !dbg !6654
  %236 = and i1 %228, %235, !dbg !6654
  br i1 %236, label %assert_end95, label %assert_fail94, !dbg !6654, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %237(ptr nonnull @.str.2109), !dbg !6654
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %238 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.shape, align 8, !dbg !6654, !tbaa !6758
  %239 = and i64 %238, 4294967295, !dbg !6654
  %240 = icmp eq i64 %239, 1, !dbg !6654
  br i1 %240, label %assert_end97, label %assert_fail96, !dbg !6654, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %241(ptr nonnull @.str.2110), !dbg !6654
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.shape, i64 1, !dbg !6654
  %243 = load i64, ptr %242, align 8, !dbg !6654, !tbaa !6768
  %244 = and i64 %243, 4294967295, !dbg !6654
  %245 = icmp eq i64 %244, 32, !dbg !6654
  br i1 %245, label %assert_end99, label %assert_fail98, !dbg !6654, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %246(ptr nonnull @.str.2111), !dbg !6654
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.shape, i64 2, !dbg !6654
  %248 = load i64, ptr %247, align 8, !dbg !6654, !tbaa !6770
  %249 = and i64 %248, 4294967295, !dbg !6654
  %250 = icmp eq i64 %249, 28, !dbg !6654
  br i1 %250, label %assert_end101, label %assert_fail100, !dbg !6654, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %251(ptr nonnull @.str.2112), !dbg !6654
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.shape, i64 3, !dbg !6654
  %253 = load i64, ptr %252, align 8, !dbg !6654, !tbaa !6773
  %254 = and i64 %253, 4294967295, !dbg !6654
  %255 = icmp eq i64 %254, 28, !dbg !6654
  br i1 %255, label %assert_end103, label %assert_fail102, !dbg !6654, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %256(ptr nonnull @.str.2113), !dbg !6654
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.shape, i64 4, !dbg !6654
  %258 = load i64, ptr %257, align 8, !dbg !6654, !tbaa !6775
  %259 = and i64 %258, 4294967295, !dbg !6654
  %260 = icmp eq i64 %259, 4, !dbg !6654
  br i1 %260, label %assert_end105, label %assert_fail104, !dbg !6654, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %261(ptr nonnull @.str.2114), !dbg !6654
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.strides, null, !dbg !6654
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !6654, !prof !59

if_then106:                                       ; preds = %assert_end105
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.strides, i64 1, !dbg !6654
  %263 = load i64, ptr %262, align 8, !dbg !6654, !tbaa !6779
  %264 = and i64 %263, 4294967295, !dbg !6654
  %265 = icmp eq i64 %264, 3136, !dbg !6654
  %266 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.strides, i64 2, !dbg !6654
  %267 = load i64, ptr %266, align 8, !dbg !6654, !tbaa !6789
  %268 = and i64 %267, 4294967295, !dbg !6654
  %269 = icmp eq i64 %268, 112, !dbg !6654
  %270 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.strides, i64 3, !dbg !6654
  %271 = load i64, ptr %270, align 8, !dbg !6654, !tbaa !6792
  %272 = and i64 %271, 4294967295, !dbg !6654
  %273 = icmp eq i64 %272, 4, !dbg !6654
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8.T_cast.strides, i64 4, !dbg !6654
  %275 = load i64, ptr %274, align 8, !dbg !6654, !tbaa !6794
  %276 = and i64 %275, 4294967295, !dbg !6654
  %277 = icmp eq i64 %276, 1, !dbg !6654
  %278 = and i1 %273, %277, !dbg !6654
  %279 = and i1 %269, %278, !dbg !6654
  %280 = and i1 %265, %279, !dbg !6654
  br i1 %280, label %if_end107, label %assert_fail108, !dbg !6654, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %281 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !6654
  %282 = load i64, ptr %281, align 8, !dbg !6654
  %283 = icmp eq i64 %282, 0, !dbg !6654
  br i1 %283, label %assert_end111, label %assert_fail110, !dbg !6654, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %284(ptr nonnull @.str.2115), !dbg !6654
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %285 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %285(ptr nonnull @.str.2116), !dbg !6654
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %286 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !6654
  %287 = load i32, ptr %286, align 4, !dbg !6654
  %288 = icmp eq i32 %287, 1, !dbg !6654
  br i1 %288, label %assert_end113, label %assert_fail112, !dbg !6654, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %289(ptr nonnull @.str.2117), !dbg !6654
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %290 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !6654
  %291 = load i32, ptr %290, align 4, !dbg !6654
  %292 = icmp eq i32 %dev_id, %291, !dbg !6654
  br i1 %292, label %assert_end115, label %assert_fail114, !dbg !6654, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %293 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6654, !tbaa !19
  tail call void %293(ptr nonnull @.str.2118), !dbg !6654
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %294 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_compute_(ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !6654
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6798 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6800, metadata !DIExpression()), !dbg !6806
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6801, metadata !DIExpression()), !dbg !6806
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6802, metadata !DIExpression()), !dbg !6806
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6803, metadata !DIExpression()), !dbg !6806
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6804, metadata !DIExpression()), !dbg !6806
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6805, metadata !DIExpression()), !dbg !6806
  %0 = icmp eq i32 %num_args, 5, !dbg !6806
  br i1 %0, label %assert_end, label %assert_fail, !dbg !6806, !prof !18

common.ret:                                       ; preds = %assert_end115, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail108, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail94, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail82, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail82 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail94 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail108 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ %304, %assert_end115 ]
  ret i32 %common.ret.op, !dbg !6806

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %1(ptr nonnull @.str.2120), !dbg !6806
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6806, !tbaa !6807
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6806
  %p1.code = load i32, ptr %2, align 4, !dbg !6806, !tbaa !6818
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6806
  %p2.code = load i32, ptr %3, align 4, !dbg !6806, !tbaa !6820
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !6806
  %p3.code = load i32, ptr %4, align 4, !dbg !6806, !tbaa !6823
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !6806
  %T_cast.code = load i32, ptr %5, align 4, !dbg !6806, !tbaa !6825
  %p0 = load ptr, ptr %args, align 8, !dbg !6806
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6806
  %p1 = load ptr, ptr %6, align 8, !dbg !6806
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6806
  %p2 = load ptr, ptr %7, align 8, !dbg !6806
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !6806
  %p3 = load ptr, ptr %8, align 8, !dbg !6806
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !6806
  %T_cast = load ptr, ptr %9, align 8, !dbg !6806
  %p0116 = load ptr, ptr %p0, align 8, !dbg !6806
  call void @llvm.assume(i1 true) [ "align"(ptr %p0116, i64 64) ], !dbg !6806
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6806
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.shape = load ptr, ptr %10, align 8, !dbg !6806
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6806
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.strides = load ptr, ptr %11, align 8, !dbg !6806
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6806
  %dev_id = load i32, ptr %12, align 4, !dbg !6806
  %p1117 = load ptr, ptr %p1, align 8, !dbg !6806
  call void @llvm.assume(i1 true) [ "align"(ptr %p1117, i64 64) ], !dbg !6806
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6806
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.shape = load ptr, ptr %13, align 8, !dbg !6806
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6806
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.strides = load ptr, ptr %14, align 8, !dbg !6806
  %p2119 = load ptr, ptr %p2, align 8, !dbg !6806
  call void @llvm.assume(i1 true) [ "align"(ptr %p2119, i64 64) ], !dbg !6806
  %p3120 = load ptr, ptr %p3, align 8, !dbg !6806
  call void @llvm.assume(i1 true) [ "align"(ptr %p3120, i64 64) ], !dbg !6806
  %T_cast118 = load ptr, ptr %T_cast, align 8, !dbg !6806
  call void @llvm.assume(i1 true) [ "align"(ptr %T_cast118, i64 64) ], !dbg !6806
  %15 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 4, !dbg !6806
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.shape = load ptr, ptr %15, align 8, !dbg !6806
  %16 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 5, !dbg !6806
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.strides = load ptr, ptr %16, align 8, !dbg !6806
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !6806

assert_fail6:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %17(ptr nonnull @.str.2121), !dbg !6806
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !6806

assert_fail8:                                     ; preds = %assert_end7
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %18(ptr nonnull @.str.2122), !dbg !6806
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !6806

assert_fail10:                                    ; preds = %assert_end9
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %19(ptr nonnull @.str.2123), !dbg !6806
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !6806

assert_fail12:                                    ; preds = %assert_end11
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %20(ptr nonnull @.str.2124), !dbg !6806
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_cast.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !6806

assert_fail14:                                    ; preds = %assert_end13
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %21(ptr nonnull @.str.2125), !dbg !6806
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %22 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6806
  %23 = load i32, ptr %22, align 4, !dbg !6806
  %24 = icmp eq i32 %23, 5, !dbg !6806
  br i1 %24, label %assert_end19, label %assert_fail16, !dbg !6806, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %25(ptr nonnull @.str.2126), !dbg !6806
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6806
  %27 = load i16, ptr %26, align 2, !dbg !6806
  %28 = icmp eq i16 %27, 1, !dbg !6806
  %29 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6806
  %30 = load i8, ptr %29, align 1, !dbg !6806
  %31 = icmp eq i8 %30, 8, !dbg !6806
  %32 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6806
  %33 = load i8, ptr %32, align 1, !dbg !6806
  %34 = icmp eq i8 %33, 0, !dbg !6806
  %35 = and i1 %31, %34, !dbg !6806
  %36 = and i1 %28, %35, !dbg !6806
  br i1 %36, label %assert_end21, label %assert_fail20, !dbg !6806, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %37 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %37(ptr nonnull @.str.2127), !dbg !6806
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %38 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.shape, align 8, !dbg !6806, !tbaa !6829
  %39 = and i64 %38, 4294967295, !dbg !6806
  %40 = icmp eq i64 %39, 1, !dbg !6806
  br i1 %40, label %assert_end23, label %assert_fail22, !dbg !6806, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %41(ptr nonnull @.str.2128), !dbg !6806
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %42 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.shape, i64 1, !dbg !6806
  %43 = load i64, ptr %42, align 8, !dbg !6806, !tbaa !6839
  %44 = and i64 %43, 4294967295, !dbg !6806
  %45 = icmp eq i64 %44, 32, !dbg !6806
  br i1 %45, label %assert_end25, label %assert_fail24, !dbg !6806, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %46 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %46(ptr nonnull @.str.2129), !dbg !6806
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %47 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.shape, i64 2, !dbg !6806
  %48 = load i64, ptr %47, align 8, !dbg !6806, !tbaa !6841
  %49 = and i64 %48, 4294967295, !dbg !6806
  %50 = icmp eq i64 %49, 28, !dbg !6806
  br i1 %50, label %assert_end27, label %assert_fail26, !dbg !6806, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %51 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %51(ptr nonnull @.str.2130), !dbg !6806
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %52 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.shape, i64 3, !dbg !6806
  %53 = load i64, ptr %52, align 8, !dbg !6806, !tbaa !6844
  %54 = and i64 %53, 4294967295, !dbg !6806
  %55 = icmp eq i64 %54, 28, !dbg !6806
  br i1 %55, label %assert_end29, label %assert_fail28, !dbg !6806, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %56 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %56(ptr nonnull @.str.2131), !dbg !6806
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %57 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.shape, i64 4, !dbg !6806
  %58 = load i64, ptr %57, align 8, !dbg !6806, !tbaa !6846
  %59 = and i64 %58, 4294967295, !dbg !6806
  %60 = icmp eq i64 %59, 4, !dbg !6806
  br i1 %60, label %assert_end31, label %assert_fail30, !dbg !6806, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %61 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %61(ptr nonnull @.str.2132), !dbg !6806
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.strides, null, !dbg !6806
  br i1 %.not, label %if_end, label %if_then, !dbg !6806, !prof !59

if_then:                                          ; preds = %assert_end31
  %62 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.strides, i64 1, !dbg !6806
  %63 = load i64, ptr %62, align 8, !dbg !6806, !tbaa !6850
  %64 = and i64 %63, 4294967295, !dbg !6806
  %65 = icmp eq i64 %64, 3136, !dbg !6806
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.strides, i64 2, !dbg !6806
  %67 = load i64, ptr %66, align 8, !dbg !6806, !tbaa !6860
  %68 = and i64 %67, 4294967295, !dbg !6806
  %69 = icmp eq i64 %68, 112, !dbg !6806
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.strides, i64 3, !dbg !6806
  %71 = load i64, ptr %70, align 8, !dbg !6806, !tbaa !6863
  %72 = and i64 %71, 4294967295, !dbg !6806
  %73 = icmp eq i64 %72, 4, !dbg !6806
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p0.strides, i64 4, !dbg !6806
  %75 = load i64, ptr %74, align 8, !dbg !6806, !tbaa !6865
  %76 = and i64 %75, 4294967295, !dbg !6806
  %77 = icmp eq i64 %76, 1, !dbg !6806
  %78 = and i1 %73, %77, !dbg !6806
  %79 = and i1 %69, %78, !dbg !6806
  %80 = and i1 %65, %79, !dbg !6806
  br i1 %80, label %if_end, label %assert_fail32, !dbg !6806, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %81 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6806
  %82 = load i64, ptr %81, align 8, !dbg !6806
  %83 = icmp eq i64 %82, 0, !dbg !6806
  br i1 %83, label %assert_end35, label %assert_fail34, !dbg !6806, !prof !18

assert_fail32:                                    ; preds = %if_then
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %84(ptr nonnull @.str.2133), !dbg !6806
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %85 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %85(ptr nonnull @.str.2134), !dbg !6806
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %86 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6806
  %87 = load i32, ptr %86, align 4, !dbg !6806
  %88 = icmp eq i32 %87, 1, !dbg !6806
  br i1 %88, label %assert_end37, label %assert_fail36, !dbg !6806, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %89(ptr nonnull @.str.2135), !dbg !6806
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %90 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6806
  %91 = load i32, ptr %90, align 4, !dbg !6806
  %92 = icmp eq i32 %91, 6, !dbg !6806
  br i1 %92, label %assert_end41, label %assert_fail38, !dbg !6806, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %93(ptr nonnull @.str.2136), !dbg !6806
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6806
  %95 = load i16, ptr %94, align 2, !dbg !6806
  %96 = icmp eq i16 %95, 1, !dbg !6806
  %97 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6806
  %98 = load i8, ptr %97, align 1, !dbg !6806
  %99 = icmp eq i8 %98, 8, !dbg !6806
  %100 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6806
  %101 = load i8, ptr %100, align 1, !dbg !6806
  %102 = icmp eq i8 %101, 0, !dbg !6806
  %103 = and i1 %99, %102, !dbg !6806
  %104 = and i1 %96, %103, !dbg !6806
  br i1 %104, label %assert_end43, label %assert_fail42, !dbg !6806, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %105(ptr nonnull @.str.2137), !dbg !6806
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %106 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.shape, align 8, !dbg !6806, !tbaa !6869
  %107 = and i64 %106, 4294967295, !dbg !6806
  %108 = icmp eq i64 %107, 32, !dbg !6806
  br i1 %108, label %assert_end45, label %assert_fail44, !dbg !6806, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %109(ptr nonnull @.str.2138), !dbg !6806
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %110 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.shape, i64 1, !dbg !6806
  %111 = load i64, ptr %110, align 8, !dbg !6806, !tbaa !6879
  %112 = and i64 %111, 4294967295, !dbg !6806
  %113 = icmp eq i64 %112, 32, !dbg !6806
  br i1 %113, label %assert_end47, label %assert_fail46, !dbg !6806, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %114(ptr nonnull @.str.2139), !dbg !6806
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %115 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.shape, i64 2, !dbg !6806
  %116 = load i64, ptr %115, align 8, !dbg !6806, !tbaa !6881
  %117 = and i64 %116, 4294967295, !dbg !6806
  %118 = icmp eq i64 %117, 3, !dbg !6806
  br i1 %118, label %assert_end49, label %assert_fail48, !dbg !6806, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %119 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %119(ptr nonnull @.str.2140), !dbg !6806
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %120 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.shape, i64 3, !dbg !6806
  %121 = load i64, ptr %120, align 8, !dbg !6806, !tbaa !6884
  %122 = and i64 %121, 4294967295, !dbg !6806
  %123 = icmp eq i64 %122, 3, !dbg !6806
  br i1 %123, label %assert_end51, label %assert_fail50, !dbg !6806, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %124 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %124(ptr nonnull @.str.2141), !dbg !6806
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %125 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.shape, i64 4, !dbg !6806
  %126 = load i64, ptr %125, align 8, !dbg !6806, !tbaa !6886
  %127 = and i64 %126, 4294967295, !dbg !6806
  %128 = icmp eq i64 %127, 4, !dbg !6806
  br i1 %128, label %assert_end53, label %assert_fail52, !dbg !6806, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %129 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %129(ptr nonnull @.str.2142), !dbg !6806
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %130 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.shape, i64 5, !dbg !6806
  %131 = load i64, ptr %130, align 8, !dbg !6806, !tbaa !6890
  %132 = and i64 %131, 4294967295, !dbg !6806
  %133 = icmp eq i64 %132, 4, !dbg !6806
  br i1 %133, label %assert_end55, label %assert_fail54, !dbg !6806, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %134(ptr nonnull @.str.2143), !dbg !6806
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.strides, null, !dbg !6806
  br i1 %.not121, label %if_end57, label %if_then56, !dbg !6806, !prof !59

if_then56:                                        ; preds = %assert_end55
  %135 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.strides, align 8, !dbg !6806, !tbaa !6892
  %136 = and i64 %135, 4294967295, !dbg !6806
  %137 = icmp eq i64 %136, 4608, !dbg !6806
  %138 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.strides, i64 1, !dbg !6806
  %139 = load i64, ptr %138, align 8, !dbg !6806, !tbaa !6902
  %140 = and i64 %139, 4294967295, !dbg !6806
  %141 = icmp eq i64 %140, 144, !dbg !6806
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.strides, i64 2, !dbg !6806
  %143 = load i64, ptr %142, align 8, !dbg !6806, !tbaa !6904
  %144 = and i64 %143, 4294967295, !dbg !6806
  %145 = icmp eq i64 %144, 48, !dbg !6806
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.strides, i64 3, !dbg !6806
  %147 = load i64, ptr %146, align 8, !dbg !6806, !tbaa !6907
  %148 = and i64 %147, 4294967295, !dbg !6806
  %149 = icmp eq i64 %148, 16, !dbg !6806
  %150 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.strides, i64 4, !dbg !6806
  %151 = load i64, ptr %150, align 8, !dbg !6806, !tbaa !6909
  %152 = and i64 %151, 4294967295, !dbg !6806
  %153 = icmp eq i64 %152, 4, !dbg !6806
  %154 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.p1.strides, i64 5, !dbg !6806
  %155 = load i64, ptr %154, align 8, !dbg !6806, !tbaa !6913
  %156 = and i64 %155, 4294967295, !dbg !6806
  %157 = icmp eq i64 %156, 1, !dbg !6806
  %158 = and i1 %153, %157, !dbg !6806
  %159 = and i1 %149, %158, !dbg !6806
  %160 = and i1 %145, %159, !dbg !6806
  %161 = and i1 %141, %160, !dbg !6806
  %162 = and i1 %137, %161, !dbg !6806
  br i1 %162, label %if_end57, label %assert_fail58, !dbg !6806, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %163 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6806
  %164 = load i64, ptr %163, align 8, !dbg !6806
  %165 = icmp eq i64 %164, 0, !dbg !6806
  br i1 %165, label %assert_end61, label %assert_fail60, !dbg !6806, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %166(ptr nonnull @.str.2144), !dbg !6806
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %167 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %167(ptr nonnull @.str.2145), !dbg !6806
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %168 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6806
  %169 = load i32, ptr %168, align 4, !dbg !6806
  %170 = icmp eq i32 %169, 1, !dbg !6806
  br i1 %170, label %assert_end63, label %assert_fail62, !dbg !6806, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %171 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %171(ptr nonnull @.str.2146), !dbg !6806
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %172 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6806
  %173 = load i32, ptr %172, align 4, !dbg !6806
  %174 = icmp eq i32 %dev_id, %173, !dbg !6806
  br i1 %174, label %assert_end65, label %assert_fail64, !dbg !6806, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %175(ptr nonnull @.str.2147), !dbg !6806
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %176 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !6806
  %177 = load i32, ptr %176, align 4, !dbg !6806
  %178 = icmp eq i32 %177, 0, !dbg !6806
  br i1 %178, label %assert_end69, label %assert_fail66, !dbg !6806, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %179(ptr nonnull @.str.2148), !dbg !6806
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !6806
  %181 = load i16, ptr %180, align 2, !dbg !6806
  %182 = icmp eq i16 %181, 1, !dbg !6806
  %183 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !6806
  %184 = load i8, ptr %183, align 1, !dbg !6806
  %185 = icmp eq i8 %184, 16, !dbg !6806
  %186 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !6806
  %187 = load i8, ptr %186, align 1, !dbg !6806
  %188 = icmp eq i8 %187, 0, !dbg !6806
  %189 = and i1 %185, %188, !dbg !6806
  %190 = and i1 %182, %189, !dbg !6806
  br i1 %190, label %assert_end71, label %assert_fail70, !dbg !6806, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %191 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %191(ptr nonnull @.str.2149), !dbg !6806
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %192 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !6806
  %193 = load i64, ptr %192, align 8, !dbg !6806
  %194 = icmp eq i64 %193, 0, !dbg !6806
  br i1 %194, label %assert_end73, label %assert_fail72, !dbg !6806, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %195 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %195(ptr nonnull @.str.2150), !dbg !6806
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %196 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !6806
  %197 = load i32, ptr %196, align 4, !dbg !6806
  %198 = icmp eq i32 %197, 1, !dbg !6806
  br i1 %198, label %assert_end75, label %assert_fail74, !dbg !6806, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %199(ptr nonnull @.str.2151), !dbg !6806
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %200 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !6806
  %201 = load i32, ptr %200, align 4, !dbg !6806
  %202 = icmp eq i32 %dev_id, %201, !dbg !6806
  br i1 %202, label %assert_end77, label %assert_fail76, !dbg !6806, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %203 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %203(ptr nonnull @.str.2152), !dbg !6806
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %204 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !6806
  %205 = load i32, ptr %204, align 4, !dbg !6806
  %206 = icmp eq i32 %205, 0, !dbg !6806
  br i1 %206, label %assert_end81, label %assert_fail78, !dbg !6806, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %207(ptr nonnull @.str.2153), !dbg !6806
  br label %common.ret

assert_end81:                                     ; preds = %assert_end77
  %208 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !6806
  %209 = load i16, ptr %208, align 2, !dbg !6806
  %210 = icmp eq i16 %209, 1, !dbg !6806
  %211 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !6806
  %212 = load i8, ptr %211, align 1, !dbg !6806
  %213 = icmp eq i8 %212, 16, !dbg !6806
  %214 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !6806
  %215 = load i8, ptr %214, align 1, !dbg !6806
  %216 = icmp eq i8 %215, 0, !dbg !6806
  %217 = and i1 %213, %216, !dbg !6806
  %218 = and i1 %210, %217, !dbg !6806
  br i1 %218, label %assert_end83, label %assert_fail82, !dbg !6806, !prof !18

assert_fail82:                                    ; preds = %assert_end81
  %219 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %219(ptr nonnull @.str.2154), !dbg !6806
  br label %common.ret

assert_end83:                                     ; preds = %assert_end81
  %220 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !6806
  %221 = load i64, ptr %220, align 8, !dbg !6806
  %222 = icmp eq i64 %221, 0, !dbg !6806
  br i1 %222, label %assert_end85, label %assert_fail84, !dbg !6806, !prof !18

assert_fail84:                                    ; preds = %assert_end83
  %223 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %223(ptr nonnull @.str.2155), !dbg !6806
  br label %common.ret

assert_end85:                                     ; preds = %assert_end83
  %224 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !6806
  %225 = load i32, ptr %224, align 4, !dbg !6806
  %226 = icmp eq i32 %225, 1, !dbg !6806
  br i1 %226, label %assert_end87, label %assert_fail86, !dbg !6806, !prof !18

assert_fail86:                                    ; preds = %assert_end85
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %227(ptr nonnull @.str.2156), !dbg !6806
  br label %common.ret

assert_end87:                                     ; preds = %assert_end85
  %228 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !6806
  %229 = load i32, ptr %228, align 4, !dbg !6806
  %230 = icmp eq i32 %dev_id, %229, !dbg !6806
  br i1 %230, label %assert_end89, label %assert_fail88, !dbg !6806, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %231 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %231(ptr nonnull @.str.2157), !dbg !6806
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %232 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 2, !dbg !6806
  %233 = load i32, ptr %232, align 4, !dbg !6806
  %234 = icmp eq i32 %233, 5, !dbg !6806
  br i1 %234, label %assert_end93, label %assert_fail90, !dbg !6806, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %235 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %235(ptr nonnull @.str.2158), !dbg !6806
  br label %common.ret

assert_end93:                                     ; preds = %assert_end89
  %236 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 2, !dbg !6806
  %237 = load i16, ptr %236, align 2, !dbg !6806
  %238 = icmp eq i16 %237, 1, !dbg !6806
  %239 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 1, !dbg !6806
  %240 = load i8, ptr %239, align 1, !dbg !6806
  %241 = icmp eq i8 %240, 8, !dbg !6806
  %242 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 3, i32 0, !dbg !6806
  %243 = load i8, ptr %242, align 1, !dbg !6806
  %244 = icmp eq i8 %243, 0, !dbg !6806
  %245 = and i1 %241, %244, !dbg !6806
  %246 = and i1 %238, %245, !dbg !6806
  br i1 %246, label %assert_end95, label %assert_fail94, !dbg !6806, !prof !18

assert_fail94:                                    ; preds = %assert_end93
  %247 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %247(ptr nonnull @.str.2159), !dbg !6806
  br label %common.ret

assert_end95:                                     ; preds = %assert_end93
  %248 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.shape, align 8, !dbg !6806, !tbaa !6915
  %249 = and i64 %248, 4294967295, !dbg !6806
  %250 = icmp eq i64 %249, 1, !dbg !6806
  br i1 %250, label %assert_end97, label %assert_fail96, !dbg !6806, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %251(ptr nonnull @.str.2160), !dbg !6806
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.shape, i64 1, !dbg !6806
  %253 = load i64, ptr %252, align 8, !dbg !6806, !tbaa !6925
  %254 = and i64 %253, 4294967295, !dbg !6806
  %255 = icmp eq i64 %254, 32, !dbg !6806
  br i1 %255, label %assert_end99, label %assert_fail98, !dbg !6806, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %256(ptr nonnull @.str.2161), !dbg !6806
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.shape, i64 2, !dbg !6806
  %258 = load i64, ptr %257, align 8, !dbg !6806, !tbaa !6927
  %259 = and i64 %258, 4294967295, !dbg !6806
  %260 = icmp eq i64 %259, 28, !dbg !6806
  br i1 %260, label %assert_end101, label %assert_fail100, !dbg !6806, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %261(ptr nonnull @.str.2162), !dbg !6806
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.shape, i64 3, !dbg !6806
  %263 = load i64, ptr %262, align 8, !dbg !6806, !tbaa !6930
  %264 = and i64 %263, 4294967295, !dbg !6806
  %265 = icmp eq i64 %264, 28, !dbg !6806
  br i1 %265, label %assert_end103, label %assert_fail102, !dbg !6806, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %266(ptr nonnull @.str.2163), !dbg !6806
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.shape, i64 4, !dbg !6806
  %268 = load i64, ptr %267, align 8, !dbg !6806, !tbaa !6932
  %269 = and i64 %268, 4294967295, !dbg !6806
  %270 = icmp eq i64 %269, 4, !dbg !6806
  br i1 %270, label %assert_end105, label %assert_fail104, !dbg !6806, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %271 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %271(ptr nonnull @.str.2164), !dbg !6806
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %.not122 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.strides, null, !dbg !6806
  br i1 %.not122, label %if_end107, label %if_then106, !dbg !6806, !prof !59

if_then106:                                       ; preds = %assert_end105
  %272 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.strides, i64 1, !dbg !6806
  %273 = load i64, ptr %272, align 8, !dbg !6806, !tbaa !6936
  %274 = and i64 %273, 4294967295, !dbg !6806
  %275 = icmp eq i64 %274, 3136, !dbg !6806
  %276 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.strides, i64 2, !dbg !6806
  %277 = load i64, ptr %276, align 8, !dbg !6806, !tbaa !6946
  %278 = and i64 %277, 4294967295, !dbg !6806
  %279 = icmp eq i64 %278, 112, !dbg !6806
  %280 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.strides, i64 3, !dbg !6806
  %281 = load i64, ptr %280, align 8, !dbg !6806, !tbaa !6949
  %282 = and i64 %281, 4294967295, !dbg !6806
  %283 = icmp eq i64 %282, 4, !dbg !6806
  %284 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9.T_cast.strides, i64 4, !dbg !6806
  %285 = load i64, ptr %284, align 8, !dbg !6806, !tbaa !6951
  %286 = and i64 %285, 4294967295, !dbg !6806
  %287 = icmp eq i64 %286, 1, !dbg !6806
  %288 = and i1 %283, %287, !dbg !6806
  %289 = and i1 %279, %288, !dbg !6806
  %290 = and i1 %275, %289, !dbg !6806
  br i1 %290, label %if_end107, label %assert_fail108, !dbg !6806, !prof !18

if_end107:                                        ; preds = %if_then106, %assert_end105
  %291 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 6, !dbg !6806
  %292 = load i64, ptr %291, align 8, !dbg !6806
  %293 = icmp eq i64 %292, 0, !dbg !6806
  br i1 %293, label %assert_end111, label %assert_fail110, !dbg !6806, !prof !18

assert_fail108:                                   ; preds = %if_then106
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %294(ptr nonnull @.str.2165), !dbg !6806
  br label %common.ret

assert_fail110:                                   ; preds = %if_end107
  %295 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %295(ptr nonnull @.str.2166), !dbg !6806
  br label %common.ret

assert_end111:                                    ; preds = %if_end107
  %296 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 0, !dbg !6806
  %297 = load i32, ptr %296, align 4, !dbg !6806
  %298 = icmp eq i32 %297, 1, !dbg !6806
  br i1 %298, label %assert_end113, label %assert_fail112, !dbg !6806, !prof !18

assert_fail112:                                   ; preds = %assert_end111
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %299(ptr nonnull @.str.2167), !dbg !6806
  br label %common.ret

assert_end113:                                    ; preds = %assert_end111
  %300 = getelementptr inbounds %1, ptr %T_cast, i64 0, i32 1, i32 1, !dbg !6806
  %301 = load i32, ptr %300, align 4, !dbg !6806
  %302 = icmp eq i32 %dev_id, %301, !dbg !6806
  br i1 %302, label %assert_end115, label %assert_fail114, !dbg !6806, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %303 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6806, !tbaa !19
  tail call void %303(ptr nonnull @.str.2168), !dbg !6806
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %304 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_compute_(i32 %dev_id, ptr %p0116, ptr %p1117, ptr %T_cast118, ptr %p2119, ptr %p3120), !dbg !6806
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_dense_pack_add(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6955 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6957, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6958, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6959, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6960, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6961, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6962, metadata !DIExpression()), !dbg !6963
  %0 = icmp eq i32 %num_args, 4, !dbg !6963
  br i1 %0, label %assert_end, label %assert_fail, !dbg !6963, !prof !18

common.ret:                                       ; preds = %assert_end90, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ %199, %assert_end90 ]
  ret i32 %common.ret.op, !dbg !6963

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %1(ptr nonnull @.str.2171), !dbg !6963
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6963, !tbaa !6964
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6963
  %p1.code = load i32, ptr %2, align 4, !dbg !6963, !tbaa !6975
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6963
  %p2.code = load i32, ptr %3, align 4, !dbg !6963, !tbaa !6977
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !6963
  %T_add.code = load i32, ptr %4, align 4, !dbg !6963, !tbaa !6980
  %p0 = load ptr, ptr %args, align 8, !dbg !6963
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6963
  %p1 = load ptr, ptr %5, align 8, !dbg !6963
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6963
  %p2 = load ptr, ptr %6, align 8, !dbg !6963
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !6963
  %T_add = load ptr, ptr %7, align 8, !dbg !6963
  %p091 = load ptr, ptr %p0, align 8, !dbg !6963
  call void @llvm.assume(i1 true) [ "align"(ptr %p091, i64 64) ], !dbg !6963
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6963
  %tvmgen_default_fused_nn_contrib_dense_pack_add.p0.shape = load ptr, ptr %8, align 8, !dbg !6963
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6963
  %tvmgen_default_fused_nn_contrib_dense_pack_add.p0.strides = load ptr, ptr %9, align 8, !dbg !6963
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6963
  %dev_id = load i32, ptr %10, align 4, !dbg !6963
  %p192 = load ptr, ptr %p1, align 8, !dbg !6963
  call void @llvm.assume(i1 true) [ "align"(ptr %p192, i64 64) ], !dbg !6963
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6963
  %tvmgen_default_fused_nn_contrib_dense_pack_add.p1.shape = load ptr, ptr %11, align 8, !dbg !6963
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6963
  %tvmgen_default_fused_nn_contrib_dense_pack_add.p1.strides = load ptr, ptr %12, align 8, !dbg !6963
  %p294 = load ptr, ptr %p2, align 8, !dbg !6963
  call void @llvm.assume(i1 true) [ "align"(ptr %p294, i64 64) ], !dbg !6963
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !6963
  %tvmgen_default_fused_nn_contrib_dense_pack_add.p2.shape = load ptr, ptr %13, align 8, !dbg !6963
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !6963
  %tvmgen_default_fused_nn_contrib_dense_pack_add.p2.strides = load ptr, ptr %14, align 8, !dbg !6963
  %T_add93 = load ptr, ptr %T_add, align 8, !dbg !6963
  call void @llvm.assume(i1 true) [ "align"(ptr %T_add93, i64 64) ], !dbg !6963
  %15 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 4, !dbg !6963
  %tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.shape = load ptr, ptr %15, align 8, !dbg !6963
  %16 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 5, !dbg !6963
  %tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.strides = load ptr, ptr %16, align 8, !dbg !6963
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !6963

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %17(ptr nonnull @.str.2172), !dbg !6963
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !6963

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %18(ptr nonnull @.str.2173), !dbg !6963
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !6963

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %19(ptr nonnull @.str.2174), !dbg !6963
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_add.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !6963

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %20(ptr nonnull @.str.2175), !dbg !6963
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6963
  %22 = load i32, ptr %21, align 4, !dbg !6963
  %23 = icmp eq i32 %22, 2, !dbg !6963
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !6963, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %24(ptr nonnull @.str.2176), !dbg !6963
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6963
  %26 = load i16, ptr %25, align 2, !dbg !6963
  %27 = icmp eq i16 %26, 1, !dbg !6963
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6963
  %29 = load i8, ptr %28, align 1, !dbg !6963
  %30 = icmp eq i8 %29, 32, !dbg !6963
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6963
  %32 = load i8, ptr %31, align 1, !dbg !6963
  %33 = icmp eq i8 %32, 2, !dbg !6963
  %34 = and i1 %30, %33, !dbg !6963
  %35 = and i1 %27, %34, !dbg !6963
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !6963, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %36(ptr nonnull @.str.2177), !dbg !6963
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p0.shape, align 8, !dbg !6963, !tbaa !6982
  %38 = and i64 %37, 4294967295, !dbg !6963
  %39 = icmp eq i64 %38, 1, !dbg !6963
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !6963, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %40(ptr nonnull @.str.2178), !dbg !6963
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p0.shape, i64 1, !dbg !6963
  %42 = load i64, ptr %41, align 8, !dbg !6963, !tbaa !6992
  %43 = and i64 %42, 4294967295, !dbg !6963
  %44 = icmp eq i64 %43, 2048, !dbg !6963
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !6963, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %45(ptr nonnull @.str.2179), !dbg !6963
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p0.strides, null, !dbg !6963
  br i1 %.not, label %if_end, label %if_then, !dbg !6963, !prof !59

if_then:                                          ; preds = %assert_end22
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p0.strides, i64 1, !dbg !6963
  %47 = load i64, ptr %46, align 8, !dbg !6963, !tbaa !6994
  %48 = and i64 %47, 4294967295, !dbg !6963
  %49 = icmp eq i64 %48, 1, !dbg !6963
  br i1 %49, label %if_end, label %assert_fail23, !dbg !6963, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %50 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6963
  %51 = load i64, ptr %50, align 8, !dbg !6963
  %52 = icmp eq i64 %51, 0, !dbg !6963
  br i1 %52, label %assert_end26, label %assert_fail25, !dbg !6963, !prof !18

assert_fail23:                                    ; preds = %if_then
  %53 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %53(ptr nonnull @.str.2180), !dbg !6963
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %54 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %54(ptr nonnull @.str.2181), !dbg !6963
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %55 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6963
  %56 = load i32, ptr %55, align 4, !dbg !6963
  %57 = icmp eq i32 %56, 1, !dbg !6963
  br i1 %57, label %assert_end28, label %assert_fail27, !dbg !6963, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %58 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %58(ptr nonnull @.str.2182), !dbg !6963
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %59 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6963
  %60 = load i32, ptr %59, align 4, !dbg !6963
  %61 = icmp eq i32 %60, 3, !dbg !6963
  br i1 %61, label %assert_end32, label %assert_fail29, !dbg !6963, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %62 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %62(ptr nonnull @.str.2183), !dbg !6963
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %63 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6963
  %64 = load i16, ptr %63, align 2, !dbg !6963
  %65 = icmp eq i16 %64, 1, !dbg !6963
  %66 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6963
  %67 = load i8, ptr %66, align 1, !dbg !6963
  %68 = icmp eq i8 %67, 32, !dbg !6963
  %69 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6963
  %70 = load i8, ptr %69, align 1, !dbg !6963
  %71 = icmp eq i8 %70, 2, !dbg !6963
  %72 = and i1 %68, %71, !dbg !6963
  %73 = and i1 %65, %72, !dbg !6963
  br i1 %73, label %assert_end34, label %assert_fail33, !dbg !6963, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %74(ptr nonnull @.str.2184), !dbg !6963
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %75 = load i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p1.shape, align 8, !dbg !6963, !tbaa !7004
  %76 = and i64 %75, 4294967295, !dbg !6963
  %77 = icmp eq i64 %76, 125, !dbg !6963
  br i1 %77, label %assert_end36, label %assert_fail35, !dbg !6963, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %78(ptr nonnull @.str.2185), !dbg !6963
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %79 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p1.shape, i64 1, !dbg !6963
  %80 = load i64, ptr %79, align 8, !dbg !6963, !tbaa !7014
  %81 = and i64 %80, 4294967295, !dbg !6963
  %82 = icmp eq i64 %81, 2048, !dbg !6963
  br i1 %82, label %assert_end38, label %assert_fail37, !dbg !6963, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %83(ptr nonnull @.str.2186), !dbg !6963
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %84 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p1.shape, i64 2, !dbg !6963
  %85 = load i64, ptr %84, align 8, !dbg !6963, !tbaa !7016
  %86 = and i64 %85, 4294967295, !dbg !6963
  %87 = icmp eq i64 %86, 8, !dbg !6963
  br i1 %87, label %assert_end40, label %assert_fail39, !dbg !6963, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %88(ptr nonnull @.str.2187), !dbg !6963
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %.not95 = icmp eq ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p1.strides, null, !dbg !6963
  br i1 %.not95, label %if_end42, label %if_then41, !dbg !6963, !prof !59

if_then41:                                        ; preds = %assert_end40
  %89 = load i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p1.strides, align 8, !dbg !6963, !tbaa !7019
  %90 = and i64 %89, 4294967295, !dbg !6963
  %91 = icmp eq i64 %90, 16384, !dbg !6963
  %92 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p1.strides, i64 1, !dbg !6963
  %93 = load i64, ptr %92, align 8, !dbg !6963, !tbaa !7029
  %94 = and i64 %93, 4294967295, !dbg !6963
  %95 = icmp eq i64 %94, 8, !dbg !6963
  %96 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p1.strides, i64 2, !dbg !6963
  %97 = load i64, ptr %96, align 8, !dbg !6963, !tbaa !7031
  %98 = and i64 %97, 4294967295, !dbg !6963
  %99 = icmp eq i64 %98, 1, !dbg !6963
  %100 = and i1 %95, %99, !dbg !6963
  %101 = and i1 %91, %100, !dbg !6963
  br i1 %101, label %if_end42, label %assert_fail43, !dbg !6963, !prof !18

if_end42:                                         ; preds = %if_then41, %assert_end40
  %102 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6963
  %103 = load i64, ptr %102, align 8, !dbg !6963
  %104 = icmp eq i64 %103, 0, !dbg !6963
  br i1 %104, label %assert_end46, label %assert_fail45, !dbg !6963, !prof !18

assert_fail43:                                    ; preds = %if_then41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %105(ptr nonnull @.str.2188), !dbg !6963
  br label %common.ret

assert_fail45:                                    ; preds = %if_end42
  %106 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %106(ptr nonnull @.str.2189), !dbg !6963
  br label %common.ret

assert_end46:                                     ; preds = %if_end42
  %107 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6963
  %108 = load i32, ptr %107, align 4, !dbg !6963
  %109 = icmp eq i32 %108, 1, !dbg !6963
  br i1 %109, label %assert_end48, label %assert_fail47, !dbg !6963, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %110 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %110(ptr nonnull @.str.2190), !dbg !6963
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %111 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6963
  %112 = load i32, ptr %111, align 4, !dbg !6963
  %113 = icmp eq i32 %dev_id, %112, !dbg !6963
  br i1 %113, label %assert_end50, label %assert_fail49, !dbg !6963, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %114(ptr nonnull @.str.2191), !dbg !6963
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %115 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !6963
  %116 = load i32, ptr %115, align 4, !dbg !6963
  %117 = icmp eq i32 %116, 2, !dbg !6963
  br i1 %117, label %assert_end54, label %assert_fail51, !dbg !6963, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %118(ptr nonnull @.str.2192), !dbg !6963
  br label %common.ret

assert_end54:                                     ; preds = %assert_end50
  %119 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !6963
  %120 = load i16, ptr %119, align 2, !dbg !6963
  %121 = icmp eq i16 %120, 1, !dbg !6963
  %122 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !6963
  %123 = load i8, ptr %122, align 1, !dbg !6963
  %124 = icmp eq i8 %123, 32, !dbg !6963
  %125 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !6963
  %126 = load i8, ptr %125, align 1, !dbg !6963
  %127 = icmp eq i8 %126, 2, !dbg !6963
  %128 = and i1 %124, %127, !dbg !6963
  %129 = and i1 %121, %128, !dbg !6963
  br i1 %129, label %assert_end56, label %assert_fail55, !dbg !6963, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %130(ptr nonnull @.str.2193), !dbg !6963
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %131 = load i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p2.shape, align 8, !dbg !6963, !tbaa !7034
  %132 = and i64 %131, 4294967295, !dbg !6963
  %133 = icmp eq i64 %132, 1, !dbg !6963
  br i1 %133, label %assert_end58, label %assert_fail57, !dbg !6963, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %134(ptr nonnull @.str.2194), !dbg !6963
  br label %common.ret

assert_end58:                                     ; preds = %assert_end56
  %135 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p2.shape, i64 1, !dbg !6963
  %136 = load i64, ptr %135, align 8, !dbg !6963, !tbaa !7044
  %137 = and i64 %136, 4294967295, !dbg !6963
  %138 = icmp eq i64 %137, 1000, !dbg !6963
  br i1 %138, label %assert_end60, label %assert_fail59, !dbg !6963, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %139 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %139(ptr nonnull @.str.2195), !dbg !6963
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %.not96 = icmp eq ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p2.strides, null, !dbg !6963
  br i1 %.not96, label %if_end62, label %if_then61, !dbg !6963, !prof !59

if_then61:                                        ; preds = %assert_end60
  %140 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p2.strides, i64 1, !dbg !6963
  %141 = load i64, ptr %140, align 8, !dbg !6963, !tbaa !7046
  %142 = and i64 %141, 4294967295, !dbg !6963
  %143 = icmp eq i64 %142, 1, !dbg !6963
  br i1 %143, label %if_end62, label %assert_fail63, !dbg !6963, !prof !18

if_end62:                                         ; preds = %if_then61, %assert_end60
  %144 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !6963
  %145 = load i64, ptr %144, align 8, !dbg !6963
  %146 = icmp eq i64 %145, 0, !dbg !6963
  br i1 %146, label %assert_end66, label %assert_fail65, !dbg !6963, !prof !18

assert_fail63:                                    ; preds = %if_then61
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %147(ptr nonnull @.str.2196), !dbg !6963
  br label %common.ret

assert_fail65:                                    ; preds = %if_end62
  %148 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %148(ptr nonnull @.str.2197), !dbg !6963
  br label %common.ret

assert_end66:                                     ; preds = %if_end62
  %149 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !6963
  %150 = load i32, ptr %149, align 4, !dbg !6963
  %151 = icmp eq i32 %150, 1, !dbg !6963
  br i1 %151, label %assert_end68, label %assert_fail67, !dbg !6963, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %152 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %152(ptr nonnull @.str.2198), !dbg !6963
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %153 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !6963
  %154 = load i32, ptr %153, align 4, !dbg !6963
  %155 = icmp eq i32 %dev_id, %154, !dbg !6963
  br i1 %155, label %assert_end70, label %assert_fail69, !dbg !6963, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %156(ptr nonnull @.str.2199), !dbg !6963
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %157 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 2, !dbg !6963
  %158 = load i32, ptr %157, align 4, !dbg !6963
  %159 = icmp eq i32 %158, 2, !dbg !6963
  br i1 %159, label %assert_end74, label %assert_fail71, !dbg !6963, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %160(ptr nonnull @.str.2200), !dbg !6963
  br label %common.ret

assert_end74:                                     ; preds = %assert_end70
  %161 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 2, !dbg !6963
  %162 = load i16, ptr %161, align 2, !dbg !6963
  %163 = icmp eq i16 %162, 1, !dbg !6963
  %164 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 1, !dbg !6963
  %165 = load i8, ptr %164, align 1, !dbg !6963
  %166 = icmp eq i8 %165, 32, !dbg !6963
  %167 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 0, !dbg !6963
  %168 = load i8, ptr %167, align 1, !dbg !6963
  %169 = icmp eq i8 %168, 2, !dbg !6963
  %170 = and i1 %166, %169, !dbg !6963
  %171 = and i1 %163, %170, !dbg !6963
  br i1 %171, label %assert_end76, label %assert_fail75, !dbg !6963, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %172 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %172(ptr nonnull @.str.2201), !dbg !6963
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %173 = load i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.shape, align 8, !dbg !6963, !tbaa !7056
  %174 = and i64 %173, 4294967295, !dbg !6963
  %175 = icmp eq i64 %174, 1, !dbg !6963
  br i1 %175, label %assert_end78, label %assert_fail77, !dbg !6963, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %176 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %176(ptr nonnull @.str.2202), !dbg !6963
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %177 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.shape, i64 1, !dbg !6963
  %178 = load i64, ptr %177, align 8, !dbg !6963, !tbaa !7066
  %179 = and i64 %178, 4294967295, !dbg !6963
  %180 = icmp eq i64 %179, 1000, !dbg !6963
  br i1 %180, label %assert_end80, label %assert_fail79, !dbg !6963, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %181(ptr nonnull @.str.2203), !dbg !6963
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %.not97 = icmp eq ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.strides, null, !dbg !6963
  br i1 %.not97, label %if_end82, label %if_then81, !dbg !6963, !prof !59

if_then81:                                        ; preds = %assert_end80
  %182 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.strides, i64 1, !dbg !6963
  %183 = load i64, ptr %182, align 8, !dbg !6963, !tbaa !7068
  %184 = and i64 %183, 4294967295, !dbg !6963
  %185 = icmp eq i64 %184, 1, !dbg !6963
  br i1 %185, label %if_end82, label %assert_fail83, !dbg !6963, !prof !18

if_end82:                                         ; preds = %if_then81, %assert_end80
  %186 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 6, !dbg !6963
  %187 = load i64, ptr %186, align 8, !dbg !6963
  %188 = icmp eq i64 %187, 0, !dbg !6963
  br i1 %188, label %assert_end86, label %assert_fail85, !dbg !6963, !prof !18

assert_fail83:                                    ; preds = %if_then81
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %189(ptr nonnull @.str.2204), !dbg !6963
  br label %common.ret

assert_fail85:                                    ; preds = %if_end82
  %190 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %190(ptr nonnull @.str.2205), !dbg !6963
  br label %common.ret

assert_end86:                                     ; preds = %if_end82
  %191 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 0, !dbg !6963
  %192 = load i32, ptr %191, align 4, !dbg !6963
  %193 = icmp eq i32 %192, 1, !dbg !6963
  br i1 %193, label %assert_end88, label %assert_fail87, !dbg !6963, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %194(ptr nonnull @.str.2206), !dbg !6963
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %195 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 1, !dbg !6963
  %196 = load i32, ptr %195, align 4, !dbg !6963
  %197 = icmp eq i32 %dev_id, %196, !dbg !6963
  br i1 %197, label %assert_end90, label %assert_fail89, !dbg !6963, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %198 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6963, !tbaa !19
  tail call void %198(ptr nonnull @.str.2207), !dbg !6963
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %199 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_dense_pack_add_compute_(ptr %p091, ptr %p192, ptr %T_add93, ptr %p294), !dbg !6963
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_max_pool2d(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !7078 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !7080, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !7081, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !7082, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !7083, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !7084, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !7085, metadata !DIExpression()), !dbg !7086
  %0 = icmp eq i32 %num_args, 2, !dbg !7086
  br i1 %0, label %assert_end, label %assert_fail, !dbg !7086, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %151, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !7086

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %1(ptr nonnull @.str.2209), !dbg !7086
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !7086, !tbaa !7087
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !7086
  %pool_max.code = load i32, ptr %2, align 4, !dbg !7086, !tbaa !7098
  %p0 = load ptr, ptr %args, align 8, !dbg !7086
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !7086
  %pool_max = load ptr, ptr %3, align 8, !dbg !7086
  %p056 = load ptr, ptr %p0, align 8, !dbg !7086
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !7086
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !7086
  %tvmgen_default_fused_nn_max_pool2d.p0.shape = load ptr, ptr %4, align 8, !dbg !7086
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !7086
  %tvmgen_default_fused_nn_max_pool2d.p0.strides = load ptr, ptr %5, align 8, !dbg !7086
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !7086
  %dev_id = load i32, ptr %6, align 4, !dbg !7086
  %pool_max55 = load ptr, ptr %pool_max, align 8, !dbg !7086
  call void @llvm.assume(i1 true) [ "align"(ptr %pool_max55, i64 64) ], !dbg !7086
  %7 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 4, !dbg !7086
  %tvmgen_default_fused_nn_max_pool2d.pool_max.shape = load ptr, ptr %7, align 8, !dbg !7086
  %8 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 5, !dbg !7086
  %tvmgen_default_fused_nn_max_pool2d.pool_max.strides = load ptr, ptr %8, align 8, !dbg !7086
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !7086

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %9(ptr nonnull @.str.2210), !dbg !7086
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %pool_max.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !7086

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %10(ptr nonnull @.str.2211), !dbg !7086
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !7086
  %12 = load i32, ptr %11, align 4, !dbg !7086
  %13 = icmp eq i32 %12, 5, !dbg !7086
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !7086, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %14(ptr nonnull @.str.2212), !dbg !7086
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !7086
  %16 = load i16, ptr %15, align 2, !dbg !7086
  %17 = icmp eq i16 %16, 1, !dbg !7086
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !7086
  %19 = load i8, ptr %18, align 1, !dbg !7086
  %20 = icmp eq i8 %19, 32, !dbg !7086
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !7086
  %22 = load i8, ptr %21, align 1, !dbg !7086
  %23 = icmp eq i8 %22, 2, !dbg !7086
  %24 = and i1 %20, %23, !dbg !7086
  %25 = and i1 %17, %24, !dbg !7086
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !7086, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %26(ptr nonnull @.str.2213), !dbg !7086
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.shape, align 8, !dbg !7086, !tbaa !7100
  %28 = and i64 %27, 4294967295, !dbg !7086
  %29 = icmp eq i64 %28, 1, !dbg !7086
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !7086, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %30(ptr nonnull @.str.2214), !dbg !7086
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.shape, i64 1, !dbg !7086
  %32 = load i64, ptr %31, align 8, !dbg !7086, !tbaa !7110
  %33 = and i64 %32, 4294967295, !dbg !7086
  %34 = icmp eq i64 %33, 2, !dbg !7086
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !7086, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %35(ptr nonnull @.str.2215), !dbg !7086
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.shape, i64 2, !dbg !7086
  %37 = load i64, ptr %36, align 8, !dbg !7086, !tbaa !7112
  %38 = and i64 %37, 4294967295, !dbg !7086
  %39 = icmp eq i64 %38, 112, !dbg !7086
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !7086, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %40(ptr nonnull @.str.2216), !dbg !7086
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.shape, i64 3, !dbg !7086
  %42 = load i64, ptr %41, align 8, !dbg !7086, !tbaa !7115
  %43 = and i64 %42, 4294967295, !dbg !7086
  %44 = icmp eq i64 %43, 112, !dbg !7086
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !7086, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %45(ptr nonnull @.str.2217), !dbg !7086
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.shape, i64 4, !dbg !7086
  %47 = load i64, ptr %46, align 8, !dbg !7086, !tbaa !7117
  %48 = and i64 %47, 4294967295, !dbg !7086
  %49 = icmp eq i64 %48, 32, !dbg !7086
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !7086, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %50(ptr nonnull @.str.2218), !dbg !7086
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_nn_max_pool2d.p0.strides, null, !dbg !7086
  br i1 %.not, label %if_end, label %if_then, !dbg !7086, !prof !59

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.strides, i64 1, !dbg !7086
  %52 = load i64, ptr %51, align 8, !dbg !7086, !tbaa !7121
  %53 = and i64 %52, 4294967295, !dbg !7086
  %54 = icmp eq i64 %53, 401408, !dbg !7086
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.strides, i64 2, !dbg !7086
  %56 = load i64, ptr %55, align 8, !dbg !7086, !tbaa !7131
  %57 = and i64 %56, 4294967295, !dbg !7086
  %58 = icmp eq i64 %57, 3584, !dbg !7086
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.strides, i64 3, !dbg !7086
  %60 = load i64, ptr %59, align 8, !dbg !7086, !tbaa !7134
  %61 = and i64 %60, 4294967295, !dbg !7086
  %62 = icmp eq i64 %61, 32, !dbg !7086
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.strides, i64 4, !dbg !7086
  %64 = load i64, ptr %63, align 8, !dbg !7086, !tbaa !7136
  %65 = and i64 %64, 4294967295, !dbg !7086
  %66 = icmp eq i64 %65, 1, !dbg !7086
  %67 = and i1 %62, %66, !dbg !7086
  %68 = and i1 %58, %67, !dbg !7086
  %69 = and i1 %54, %68, !dbg !7086
  br i1 %69, label %if_end, label %assert_fail23, !dbg !7086, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !7086
  %71 = load i64, ptr %70, align 8, !dbg !7086
  %72 = icmp eq i64 %71, 0, !dbg !7086
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !7086, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %73(ptr nonnull @.str.2219), !dbg !7086
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %74(ptr nonnull @.str.2220), !dbg !7086
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !7086
  %76 = load i32, ptr %75, align 4, !dbg !7086
  %77 = icmp eq i32 %76, 1, !dbg !7086
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !7086, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %78(ptr nonnull @.str.2221), !dbg !7086
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 2, !dbg !7086
  %80 = load i32, ptr %79, align 4, !dbg !7086
  %81 = icmp eq i32 %80, 5, !dbg !7086
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !7086, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %82(ptr nonnull @.str.2222), !dbg !7086
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 3, i32 2, !dbg !7086
  %84 = load i16, ptr %83, align 2, !dbg !7086
  %85 = icmp eq i16 %84, 1, !dbg !7086
  %86 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 3, i32 1, !dbg !7086
  %87 = load i8, ptr %86, align 1, !dbg !7086
  %88 = icmp eq i8 %87, 32, !dbg !7086
  %89 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 3, i32 0, !dbg !7086
  %90 = load i8, ptr %89, align 1, !dbg !7086
  %91 = icmp eq i8 %90, 2, !dbg !7086
  %92 = and i1 %88, %91, !dbg !7086
  %93 = and i1 %85, %92, !dbg !7086
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !7086, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %94(ptr nonnull @.str.2223), !dbg !7086
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.shape, align 8, !dbg !7086, !tbaa !7140
  %96 = and i64 %95, 4294967295, !dbg !7086
  %97 = icmp eq i64 %96, 1, !dbg !7086
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !7086, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %98(ptr nonnull @.str.2224), !dbg !7086
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.shape, i64 1, !dbg !7086
  %100 = load i64, ptr %99, align 8, !dbg !7086, !tbaa !7150
  %101 = and i64 %100, 4294967295, !dbg !7086
  %102 = icmp eq i64 %101, 2, !dbg !7086
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !7086, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %103(ptr nonnull @.str.2225), !dbg !7086
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.shape, i64 2, !dbg !7086
  %105 = load i64, ptr %104, align 8, !dbg !7086, !tbaa !7152
  %106 = and i64 %105, 4294967295, !dbg !7086
  %107 = icmp eq i64 %106, 56, !dbg !7086
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !7086, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %108(ptr nonnull @.str.2226), !dbg !7086
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.shape, i64 3, !dbg !7086
  %110 = load i64, ptr %109, align 8, !dbg !7086, !tbaa !7155
  %111 = and i64 %110, 4294967295, !dbg !7086
  %112 = icmp eq i64 %111, 56, !dbg !7086
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !7086, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %113(ptr nonnull @.str.2227), !dbg !7086
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.shape, i64 4, !dbg !7086
  %115 = load i64, ptr %114, align 8, !dbg !7086, !tbaa !7157
  %116 = and i64 %115, 4294967295, !dbg !7086
  %117 = icmp eq i64 %116, 32, !dbg !7086
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !7086, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %118(ptr nonnull @.str.2228), !dbg !7086
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.strides, null, !dbg !7086
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !7086, !prof !59

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.strides, i64 1, !dbg !7086
  %120 = load i64, ptr %119, align 8, !dbg !7086, !tbaa !7161
  %121 = and i64 %120, 4294967295, !dbg !7086
  %122 = icmp eq i64 %121, 100352, !dbg !7086
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.strides, i64 2, !dbg !7086
  %124 = load i64, ptr %123, align 8, !dbg !7086, !tbaa !7171
  %125 = and i64 %124, 4294967295, !dbg !7086
  %126 = icmp eq i64 %125, 1792, !dbg !7086
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.strides, i64 3, !dbg !7086
  %128 = load i64, ptr %127, align 8, !dbg !7086, !tbaa !7174
  %129 = and i64 %128, 4294967295, !dbg !7086
  %130 = icmp eq i64 %129, 32, !dbg !7086
  %131 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.strides, i64 4, !dbg !7086
  %132 = load i64, ptr %131, align 8, !dbg !7086, !tbaa !7176
  %133 = and i64 %132, 4294967295, !dbg !7086
  %134 = icmp eq i64 %133, 1, !dbg !7086
  %135 = and i1 %130, %134, !dbg !7086
  %136 = and i1 %126, %135, !dbg !7086
  %137 = and i1 %122, %136, !dbg !7086
  br i1 %137, label %if_end46, label %assert_fail47, !dbg !7086, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %138 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 6, !dbg !7086
  %139 = load i64, ptr %138, align 8, !dbg !7086
  %140 = icmp eq i64 %139, 0, !dbg !7086
  br i1 %140, label %assert_end50, label %assert_fail49, !dbg !7086, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %141(ptr nonnull @.str.2229), !dbg !7086
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %142 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %142(ptr nonnull @.str.2230), !dbg !7086
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %143 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 1, i32 0, !dbg !7086
  %144 = load i32, ptr %143, align 4, !dbg !7086
  %145 = icmp eq i32 %144, 1, !dbg !7086
  br i1 %145, label %assert_end52, label %assert_fail51, !dbg !7086, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %146(ptr nonnull @.str.2231), !dbg !7086
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %147 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 1, i32 1, !dbg !7086
  %148 = load i32, ptr %147, align 4, !dbg !7086
  %149 = icmp eq i32 %dev_id, %148, !dbg !7086
  br i1 %149, label %assert_end54, label %assert_fail53, !dbg !7086, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !7086, !tbaa !19
  tail call void %150(ptr nonnull @.str.2232), !dbg !7086
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %151 = tail call fastcc i32 @tvmgen_default_fused_nn_max_pool2d_compute_(ptr %pool_max55, ptr %p056), !dbg !7086
  br label %common.ret
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #1

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2) unnamed_addr #2 {
entry:
  %3 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused, align 8
  store ptr %0, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused, ptr %3, i64 0, i32 1
  store ptr %1, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused, ptr %3, i64 0, i32 2
  store ptr %2, ptr %5, align 8
  %6 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %7 = call i32 %6(ptr nonnull @__tvm_parallel_lambda, ptr nonnull %3, i32 0)
  ret i32 %7
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_cast = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 3583
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 3584)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 3584)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %13 = tail call i32 @llvm.smin.i32(i32 %10, i32 3584)
  %smin = sext i32 %13 to i64
  %14 = add i32 %9, %13
  %15 = sub i32 %14, %11
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv5 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next6, %for_end_ax3 ]
  %16 = mul nsw i64 %indvars.iv5, 224
  br label %for_body_ax3

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_body_ax3:                                     ; preds = %for_begin_ax3.preheader, %for_body_ax3
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %for_body_ax3 ]
  %17 = shl nuw nsw i64 %indvars.iv, 2
  %18 = add nsw i64 %17, %16
  %19 = getelementptr inbounds i8, ptr %p1, i64 %18
  %20 = load <4 x i8>, ptr %19, align 4, !tbaa !7180
  %21 = sext <4 x i8> %20 to <4 x i16>
  %22 = getelementptr inbounds i8, ptr %p0, i64 %18
  %23 = load <4 x i8>, ptr %22, align 4, !tbaa !7182
  %24 = sext <4 x i8> %23 to <4 x i16>
  %25 = add nsw <4 x i16> %24, %21
  %26 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %25, <4 x i16> zeroinitializer)
  %27 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %26, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %28 = trunc <4 x i16> %27 to <4 x i8>
  %29 = getelementptr inbounds i8, ptr %T_cast, i64 %18
  store <4 x i8> %28, ptr %29, align 4, !tbaa !7184
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 56
  br i1 %exitcond.not, label %for_end_ax3, label %for_body_ax3, !prof !59

for_end_ax3:                                      ; preds = %for_body_ax3
  %indvars.iv.next6 = add nsw i64 %indvars.iv5, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next6 to i32
  %exitcond7.not = icmp eq i32 %15, %lftr.wideiv
  br i1 %exitcond7.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_1_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2) unnamed_addr #2 {
entry:
  %3 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.0, align 8
  store ptr %0, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.0, ptr %3, i64 0, i32 1
  store ptr %1, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.0, ptr %3, i64 0, i32 2
  store ptr %2, ptr %5, align 8
  %6 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %7 = call i32 %6(ptr nonnull @__tvm_parallel_lambda.72, ptr nonnull %3, i32 0)
  ret i32 %7
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.72(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_cast = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.0, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.0, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 3583
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 3584)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 3584)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %13 = tail call i32 @llvm.smin.i32(i32 %10, i32 3584)
  %smin = sext i32 %13 to i64
  %14 = add i32 %9, %13
  %15 = sub i32 %14, %11
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv5 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next6, %for_end_ax3 ]
  %16 = mul nsw i64 %indvars.iv5, 112
  br label %for_body_ax3

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_body_ax3:                                     ; preds = %for_begin_ax3.preheader, %for_body_ax3
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %for_body_ax3 ]
  %17 = shl nuw nsw i64 %indvars.iv, 2
  %18 = add nsw i64 %17, %16
  %19 = getelementptr inbounds i8, ptr %p1, i64 %18
  %20 = load <4 x i8>, ptr %19, align 4, !tbaa !7186
  %21 = sext <4 x i8> %20 to <4 x i16>
  %22 = getelementptr inbounds i8, ptr %p0, i64 %18
  %23 = load <4 x i8>, ptr %22, align 4, !tbaa !7188
  %24 = sext <4 x i8> %23 to <4 x i16>
  %25 = add nsw <4 x i16> %24, %21
  %26 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %25, <4 x i16> zeroinitializer)
  %27 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %26, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %28 = trunc <4 x i16> %27 to <4 x i8>
  %29 = getelementptr inbounds i8, ptr %T_cast, i64 %18
  store <4 x i8> %28, ptr %29, align 4, !tbaa !7190
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 28
  br i1 %exitcond.not, label %for_end_ax3, label %for_body_ax3, !prof !59

for_end_ax3:                                      ; preds = %for_body_ax3
  %indvars.iv.next6 = add nsw i64 %indvars.iv5, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next6 to i32
  %exitcond7.not = icmp eq i32 %15, %lftr.wideiv
  br i1 %exitcond7.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_2_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2) unnamed_addr #2 {
entry:
  %3 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.1, align 8
  store ptr %0, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.1, ptr %3, i64 0, i32 1
  store ptr %1, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.1, ptr %3, i64 0, i32 2
  store ptr %2, ptr %5, align 8
  %6 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %7 = call i32 %6(ptr nonnull @__tvm_parallel_lambda.109, ptr nonnull %3, i32 0)
  ret i32 %7
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.109(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_cast = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.1, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.1, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 3583
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 3584)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 3584)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %13 = tail call i32 @llvm.smin.i32(i32 %10, i32 3584)
  %smin = sext i32 %13 to i64
  %14 = add i32 %9, %13
  %15 = sub i32 %14, %11
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next, %for_begin_ax3.preheader ]
  %16 = mul nsw i64 %indvars.iv, 56
  %17 = getelementptr inbounds i8, ptr %p1, i64 %16
  %18 = load <4 x i8>, ptr %17, align 4, !tbaa !7192
  %19 = sext <4 x i8> %18 to <4 x i16>
  %20 = getelementptr inbounds i8, ptr %p0, i64 %16
  %21 = load <4 x i8>, ptr %20, align 4, !tbaa !7194
  %22 = sext <4 x i8> %21 to <4 x i16>
  %23 = add nsw <4 x i16> %22, %19
  %24 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %23, <4 x i16> zeroinitializer)
  %25 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %24, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %26 = trunc <4 x i16> %25 to <4 x i8>
  %27 = getelementptr inbounds i8, ptr %T_cast, i64 %16
  store <4 x i8> %26, ptr %27, align 4, !tbaa !7196
  %28 = or i64 %16, 4
  %29 = getelementptr inbounds i8, ptr %p1, i64 %28
  %30 = load <4 x i8>, ptr %29, align 4, !tbaa !7192
  %31 = sext <4 x i8> %30 to <4 x i16>
  %32 = getelementptr inbounds i8, ptr %p0, i64 %28
  %33 = load <4 x i8>, ptr %32, align 4, !tbaa !7194
  %34 = sext <4 x i8> %33 to <4 x i16>
  %35 = add nsw <4 x i16> %34, %31
  %36 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %35, <4 x i16> zeroinitializer)
  %37 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %36, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %38 = trunc <4 x i16> %37 to <4 x i8>
  %39 = getelementptr inbounds i8, ptr %T_cast, i64 %28
  store <4 x i8> %38, ptr %39, align 4, !tbaa !7196
  %40 = add nsw i64 %16, 8
  %41 = getelementptr inbounds i8, ptr %p1, i64 %40
  %42 = load <4 x i8>, ptr %41, align 4, !tbaa !7192
  %43 = sext <4 x i8> %42 to <4 x i16>
  %44 = getelementptr inbounds i8, ptr %p0, i64 %40
  %45 = load <4 x i8>, ptr %44, align 4, !tbaa !7194
  %46 = sext <4 x i8> %45 to <4 x i16>
  %47 = add nsw <4 x i16> %46, %43
  %48 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %47, <4 x i16> zeroinitializer)
  %49 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %48, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %50 = trunc <4 x i16> %49 to <4 x i8>
  %51 = getelementptr inbounds i8, ptr %T_cast, i64 %40
  store <4 x i8> %50, ptr %51, align 4, !tbaa !7196
  %52 = add nsw i64 %16, 12
  %53 = getelementptr inbounds i8, ptr %p1, i64 %52
  %54 = load <4 x i8>, ptr %53, align 4, !tbaa !7192
  %55 = sext <4 x i8> %54 to <4 x i16>
  %56 = getelementptr inbounds i8, ptr %p0, i64 %52
  %57 = load <4 x i8>, ptr %56, align 4, !tbaa !7194
  %58 = sext <4 x i8> %57 to <4 x i16>
  %59 = add nsw <4 x i16> %58, %55
  %60 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %59, <4 x i16> zeroinitializer)
  %61 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %60, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %62 = trunc <4 x i16> %61 to <4 x i8>
  %63 = getelementptr inbounds i8, ptr %T_cast, i64 %52
  store <4 x i8> %62, ptr %63, align 4, !tbaa !7196
  %64 = add nsw i64 %16, 16
  %65 = getelementptr inbounds i8, ptr %p1, i64 %64
  %66 = load <4 x i8>, ptr %65, align 4, !tbaa !7192
  %67 = sext <4 x i8> %66 to <4 x i16>
  %68 = getelementptr inbounds i8, ptr %p0, i64 %64
  %69 = load <4 x i8>, ptr %68, align 4, !tbaa !7194
  %70 = sext <4 x i8> %69 to <4 x i16>
  %71 = add nsw <4 x i16> %70, %67
  %72 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %71, <4 x i16> zeroinitializer)
  %73 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %72, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %74 = trunc <4 x i16> %73 to <4 x i8>
  %75 = getelementptr inbounds i8, ptr %T_cast, i64 %64
  store <4 x i8> %74, ptr %75, align 4, !tbaa !7196
  %76 = add nsw i64 %16, 20
  %77 = getelementptr inbounds i8, ptr %p1, i64 %76
  %78 = load <4 x i8>, ptr %77, align 4, !tbaa !7192
  %79 = sext <4 x i8> %78 to <4 x i16>
  %80 = getelementptr inbounds i8, ptr %p0, i64 %76
  %81 = load <4 x i8>, ptr %80, align 4, !tbaa !7194
  %82 = sext <4 x i8> %81 to <4 x i16>
  %83 = add nsw <4 x i16> %82, %79
  %84 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %83, <4 x i16> zeroinitializer)
  %85 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %84, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %86 = trunc <4 x i16> %85 to <4 x i8>
  %87 = getelementptr inbounds i8, ptr %T_cast, i64 %76
  store <4 x i8> %86, ptr %87, align 4, !tbaa !7196
  %88 = add nsw i64 %16, 24
  %89 = getelementptr inbounds i8, ptr %p1, i64 %88
  %90 = load <4 x i8>, ptr %89, align 4, !tbaa !7192
  %91 = sext <4 x i8> %90 to <4 x i16>
  %92 = getelementptr inbounds i8, ptr %p0, i64 %88
  %93 = load <4 x i8>, ptr %92, align 4, !tbaa !7194
  %94 = sext <4 x i8> %93 to <4 x i16>
  %95 = add nsw <4 x i16> %94, %91
  %96 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %95, <4 x i16> zeroinitializer)
  %97 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %96, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %98 = trunc <4 x i16> %97 to <4 x i8>
  %99 = getelementptr inbounds i8, ptr %T_cast, i64 %88
  store <4 x i8> %98, ptr %99, align 4, !tbaa !7196
  %100 = add nsw i64 %16, 28
  %101 = getelementptr inbounds i8, ptr %p1, i64 %100
  %102 = load <4 x i8>, ptr %101, align 4, !tbaa !7192
  %103 = sext <4 x i8> %102 to <4 x i16>
  %104 = getelementptr inbounds i8, ptr %p0, i64 %100
  %105 = load <4 x i8>, ptr %104, align 4, !tbaa !7194
  %106 = sext <4 x i8> %105 to <4 x i16>
  %107 = add nsw <4 x i16> %106, %103
  %108 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %107, <4 x i16> zeroinitializer)
  %109 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %108, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %110 = trunc <4 x i16> %109 to <4 x i8>
  %111 = getelementptr inbounds i8, ptr %T_cast, i64 %100
  store <4 x i8> %110, ptr %111, align 4, !tbaa !7196
  %112 = add nsw i64 %16, 32
  %113 = getelementptr inbounds i8, ptr %p1, i64 %112
  %114 = load <4 x i8>, ptr %113, align 4, !tbaa !7192
  %115 = sext <4 x i8> %114 to <4 x i16>
  %116 = getelementptr inbounds i8, ptr %p0, i64 %112
  %117 = load <4 x i8>, ptr %116, align 4, !tbaa !7194
  %118 = sext <4 x i8> %117 to <4 x i16>
  %119 = add nsw <4 x i16> %118, %115
  %120 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %119, <4 x i16> zeroinitializer)
  %121 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %120, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %122 = trunc <4 x i16> %121 to <4 x i8>
  %123 = getelementptr inbounds i8, ptr %T_cast, i64 %112
  store <4 x i8> %122, ptr %123, align 4, !tbaa !7196
  %124 = add nsw i64 %16, 36
  %125 = getelementptr inbounds i8, ptr %p1, i64 %124
  %126 = load <4 x i8>, ptr %125, align 4, !tbaa !7192
  %127 = sext <4 x i8> %126 to <4 x i16>
  %128 = getelementptr inbounds i8, ptr %p0, i64 %124
  %129 = load <4 x i8>, ptr %128, align 4, !tbaa !7194
  %130 = sext <4 x i8> %129 to <4 x i16>
  %131 = add nsw <4 x i16> %130, %127
  %132 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %131, <4 x i16> zeroinitializer)
  %133 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %132, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %134 = trunc <4 x i16> %133 to <4 x i8>
  %135 = getelementptr inbounds i8, ptr %T_cast, i64 %124
  store <4 x i8> %134, ptr %135, align 4, !tbaa !7196
  %136 = add nsw i64 %16, 40
  %137 = getelementptr inbounds i8, ptr %p1, i64 %136
  %138 = load <4 x i8>, ptr %137, align 4, !tbaa !7192
  %139 = sext <4 x i8> %138 to <4 x i16>
  %140 = getelementptr inbounds i8, ptr %p0, i64 %136
  %141 = load <4 x i8>, ptr %140, align 4, !tbaa !7194
  %142 = sext <4 x i8> %141 to <4 x i16>
  %143 = add nsw <4 x i16> %142, %139
  %144 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %143, <4 x i16> zeroinitializer)
  %145 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %144, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %146 = trunc <4 x i16> %145 to <4 x i8>
  %147 = getelementptr inbounds i8, ptr %T_cast, i64 %136
  store <4 x i8> %146, ptr %147, align 4, !tbaa !7196
  %148 = add nsw i64 %16, 44
  %149 = getelementptr inbounds i8, ptr %p1, i64 %148
  %150 = load <4 x i8>, ptr %149, align 4, !tbaa !7192
  %151 = sext <4 x i8> %150 to <4 x i16>
  %152 = getelementptr inbounds i8, ptr %p0, i64 %148
  %153 = load <4 x i8>, ptr %152, align 4, !tbaa !7194
  %154 = sext <4 x i8> %153 to <4 x i16>
  %155 = add nsw <4 x i16> %154, %151
  %156 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %155, <4 x i16> zeroinitializer)
  %157 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %156, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %158 = trunc <4 x i16> %157 to <4 x i8>
  %159 = getelementptr inbounds i8, ptr %T_cast, i64 %148
  store <4 x i8> %158, ptr %159, align 4, !tbaa !7196
  %160 = add nsw i64 %16, 48
  %161 = getelementptr inbounds i8, ptr %p1, i64 %160
  %162 = load <4 x i8>, ptr %161, align 4, !tbaa !7192
  %163 = sext <4 x i8> %162 to <4 x i16>
  %164 = getelementptr inbounds i8, ptr %p0, i64 %160
  %165 = load <4 x i8>, ptr %164, align 4, !tbaa !7194
  %166 = sext <4 x i8> %165 to <4 x i16>
  %167 = add nsw <4 x i16> %166, %163
  %168 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %167, <4 x i16> zeroinitializer)
  %169 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %168, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %170 = trunc <4 x i16> %169 to <4 x i8>
  %171 = getelementptr inbounds i8, ptr %T_cast, i64 %160
  store <4 x i8> %170, ptr %171, align 4, !tbaa !7196
  %172 = add nsw i64 %16, 52
  %173 = getelementptr inbounds i8, ptr %p1, i64 %172
  %174 = load <4 x i8>, ptr %173, align 4, !tbaa !7192
  %175 = sext <4 x i8> %174 to <4 x i16>
  %176 = getelementptr inbounds i8, ptr %p0, i64 %172
  %177 = load <4 x i8>, ptr %176, align 4, !tbaa !7194
  %178 = sext <4 x i8> %177 to <4 x i16>
  %179 = add nsw <4 x i16> %178, %175
  %180 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %179, <4 x i16> zeroinitializer)
  %181 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %180, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %182 = trunc <4 x i16> %181 to <4 x i8>
  %183 = getelementptr inbounds i8, ptr %T_cast, i64 %172
  store <4 x i8> %182, ptr %183, align 4, !tbaa !7196
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %15, %lftr.wideiv
  br i1 %exitcond.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.preheader, %parallel_closure_entry
  ret i32 0
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_cast_add_nn_relu_clip_cast_3_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2) unnamed_addr #2 {
entry:
  %3 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.2, align 8
  store ptr %0, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.2, ptr %3, i64 0, i32 1
  store ptr %1, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.2, ptr %3, i64 0, i32 2
  store ptr %2, ptr %5, align 8
  %6 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %7 = call i32 %6(ptr nonnull @__tvm_parallel_lambda.146, ptr nonnull %3, i32 0)
  ret i32 %7
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.146(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_cast = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.2, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.2, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 3583
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 3584)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 3584)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %13 = tail call i32 @llvm.smin.i32(i32 %10, i32 3584)
  %smin = sext i32 %13 to i64
  %14 = add i32 %9, %13
  %15 = sub i32 %14, %11
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next, %for_begin_ax3.preheader ]
  %16 = mul nsw i64 %indvars.iv, 28
  %17 = getelementptr inbounds i8, ptr %p1, i64 %16
  %18 = load <4 x i8>, ptr %17, align 4, !tbaa !7198
  %19 = sext <4 x i8> %18 to <4 x i16>
  %20 = getelementptr inbounds i8, ptr %p0, i64 %16
  %21 = load <4 x i8>, ptr %20, align 4, !tbaa !7200
  %22 = sext <4 x i8> %21 to <4 x i16>
  %23 = add nsw <4 x i16> %22, %19
  %24 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %23, <4 x i16> zeroinitializer)
  %25 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %24, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %26 = trunc <4 x i16> %25 to <4 x i8>
  %27 = getelementptr inbounds i8, ptr %T_cast, i64 %16
  store <4 x i8> %26, ptr %27, align 4, !tbaa !7202
  %28 = add nsw i64 %16, 4
  %29 = getelementptr inbounds i8, ptr %p1, i64 %28
  %30 = load <4 x i8>, ptr %29, align 4, !tbaa !7198
  %31 = sext <4 x i8> %30 to <4 x i16>
  %32 = getelementptr inbounds i8, ptr %p0, i64 %28
  %33 = load <4 x i8>, ptr %32, align 4, !tbaa !7200
  %34 = sext <4 x i8> %33 to <4 x i16>
  %35 = add nsw <4 x i16> %34, %31
  %36 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %35, <4 x i16> zeroinitializer)
  %37 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %36, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %38 = trunc <4 x i16> %37 to <4 x i8>
  %39 = getelementptr inbounds i8, ptr %T_cast, i64 %28
  store <4 x i8> %38, ptr %39, align 4, !tbaa !7202
  %40 = add nsw i64 %16, 8
  %41 = getelementptr inbounds i8, ptr %p1, i64 %40
  %42 = load <4 x i8>, ptr %41, align 4, !tbaa !7198
  %43 = sext <4 x i8> %42 to <4 x i16>
  %44 = getelementptr inbounds i8, ptr %p0, i64 %40
  %45 = load <4 x i8>, ptr %44, align 4, !tbaa !7200
  %46 = sext <4 x i8> %45 to <4 x i16>
  %47 = add nsw <4 x i16> %46, %43
  %48 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %47, <4 x i16> zeroinitializer)
  %49 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %48, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %50 = trunc <4 x i16> %49 to <4 x i8>
  %51 = getelementptr inbounds i8, ptr %T_cast, i64 %40
  store <4 x i8> %50, ptr %51, align 4, !tbaa !7202
  %52 = add nsw i64 %16, 12
  %53 = getelementptr inbounds i8, ptr %p1, i64 %52
  %54 = load <4 x i8>, ptr %53, align 4, !tbaa !7198
  %55 = sext <4 x i8> %54 to <4 x i16>
  %56 = getelementptr inbounds i8, ptr %p0, i64 %52
  %57 = load <4 x i8>, ptr %56, align 4, !tbaa !7200
  %58 = sext <4 x i8> %57 to <4 x i16>
  %59 = add nsw <4 x i16> %58, %55
  %60 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %59, <4 x i16> zeroinitializer)
  %61 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %60, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %62 = trunc <4 x i16> %61 to <4 x i8>
  %63 = getelementptr inbounds i8, ptr %T_cast, i64 %52
  store <4 x i8> %62, ptr %63, align 4, !tbaa !7202
  %64 = add nsw i64 %16, 16
  %65 = getelementptr inbounds i8, ptr %p1, i64 %64
  %66 = load <4 x i8>, ptr %65, align 4, !tbaa !7198
  %67 = sext <4 x i8> %66 to <4 x i16>
  %68 = getelementptr inbounds i8, ptr %p0, i64 %64
  %69 = load <4 x i8>, ptr %68, align 4, !tbaa !7200
  %70 = sext <4 x i8> %69 to <4 x i16>
  %71 = add nsw <4 x i16> %70, %67
  %72 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %71, <4 x i16> zeroinitializer)
  %73 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %72, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %74 = trunc <4 x i16> %73 to <4 x i8>
  %75 = getelementptr inbounds i8, ptr %T_cast, i64 %64
  store <4 x i8> %74, ptr %75, align 4, !tbaa !7202
  %76 = add nsw i64 %16, 20
  %77 = getelementptr inbounds i8, ptr %p1, i64 %76
  %78 = load <4 x i8>, ptr %77, align 4, !tbaa !7198
  %79 = sext <4 x i8> %78 to <4 x i16>
  %80 = getelementptr inbounds i8, ptr %p0, i64 %76
  %81 = load <4 x i8>, ptr %80, align 4, !tbaa !7200
  %82 = sext <4 x i8> %81 to <4 x i16>
  %83 = add nsw <4 x i16> %82, %79
  %84 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %83, <4 x i16> zeroinitializer)
  %85 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %84, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %86 = trunc <4 x i16> %85 to <4 x i8>
  %87 = getelementptr inbounds i8, ptr %T_cast, i64 %76
  store <4 x i8> %86, ptr %87, align 4, !tbaa !7202
  %88 = add nsw i64 %16, 24
  %89 = getelementptr inbounds i8, ptr %p1, i64 %88
  %90 = load <4 x i8>, ptr %89, align 4, !tbaa !7198
  %91 = sext <4 x i8> %90 to <4 x i16>
  %92 = getelementptr inbounds i8, ptr %p0, i64 %88
  %93 = load <4 x i8>, ptr %92, align 4, !tbaa !7200
  %94 = sext <4 x i8> %93 to <4 x i16>
  %95 = add nsw <4 x i16> %94, %91
  %96 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %95, <4 x i16> zeroinitializer)
  %97 = tail call <4 x i16> @llvm.umin.v4i16(<4 x i16> %96, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %98 = trunc <4 x i16> %97 to <4 x i8>
  %99 = getelementptr inbounds i8, ptr %T_cast, i64 %88
  store <4 x i8> %98, ptr %99, align 4, !tbaa !7202
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %15, %lftr.wideiv
  br i1 %exitcond.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.preheader, %parallel_closure_entry
  ret i32 0
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.3, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.3, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.171, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.171(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_multiply = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.3, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 3583
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 3584)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 3584)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 3584)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next, %for_begin_ax3.preheader ]
  %15 = mul nsw i64 %indvars.iv, 28
  %16 = getelementptr inbounds i8, ptr %p0, i64 %15
  %17 = load <4 x i8>, ptr %16, align 4, !tbaa !7204
  %18 = sitofp <4 x i8> %17 to <4 x float>
  %19 = fmul <4 x float> %18, <float 6.250000e-02, float 6.250000e-02, float 6.250000e-02, float 6.250000e-02>
  %20 = getelementptr inbounds float, ptr %T_multiply, i64 %15
  store <4 x float> %19, ptr %20, align 16, !tbaa !7206
  %21 = add nsw i64 %15, 4
  %22 = getelementptr inbounds i8, ptr %p0, i64 %21
  %23 = load <4 x i8>, ptr %22, align 4, !tbaa !7204
  %24 = sitofp <4 x i8> %23 to <4 x float>
  %25 = fmul <4 x float> %24, <float 6.250000e-02, float 6.250000e-02, float 6.250000e-02, float 6.250000e-02>
  %26 = getelementptr inbounds float, ptr %T_multiply, i64 %21
  store <4 x float> %25, ptr %26, align 16, !tbaa !7206
  %27 = add nsw i64 %15, 8
  %28 = getelementptr inbounds i8, ptr %p0, i64 %27
  %29 = load <4 x i8>, ptr %28, align 4, !tbaa !7204
  %30 = sitofp <4 x i8> %29 to <4 x float>
  %31 = fmul <4 x float> %30, <float 6.250000e-02, float 6.250000e-02, float 6.250000e-02, float 6.250000e-02>
  %32 = getelementptr inbounds float, ptr %T_multiply, i64 %27
  store <4 x float> %31, ptr %32, align 16, !tbaa !7206
  %33 = add nsw i64 %15, 12
  %34 = getelementptr inbounds i8, ptr %p0, i64 %33
  %35 = load <4 x i8>, ptr %34, align 4, !tbaa !7204
  %36 = sitofp <4 x i8> %35 to <4 x float>
  %37 = fmul <4 x float> %36, <float 6.250000e-02, float 6.250000e-02, float 6.250000e-02, float 6.250000e-02>
  %38 = getelementptr inbounds float, ptr %T_multiply, i64 %33
  store <4 x float> %37, ptr %38, align 16, !tbaa !7206
  %39 = add nsw i64 %15, 16
  %40 = getelementptr inbounds i8, ptr %p0, i64 %39
  %41 = load <4 x i8>, ptr %40, align 4, !tbaa !7204
  %42 = sitofp <4 x i8> %41 to <4 x float>
  %43 = fmul <4 x float> %42, <float 6.250000e-02, float 6.250000e-02, float 6.250000e-02, float 6.250000e-02>
  %44 = getelementptr inbounds float, ptr %T_multiply, i64 %39
  store <4 x float> %43, ptr %44, align 16, !tbaa !7206
  %45 = add nsw i64 %15, 20
  %46 = getelementptr inbounds i8, ptr %p0, i64 %45
  %47 = load <4 x i8>, ptr %46, align 4, !tbaa !7204
  %48 = sitofp <4 x i8> %47 to <4 x float>
  %49 = fmul <4 x float> %48, <float 6.250000e-02, float 6.250000e-02, float 6.250000e-02, float 6.250000e-02>
  %50 = getelementptr inbounds float, ptr %T_multiply, i64 %45
  store <4 x float> %49, ptr %50, align 16, !tbaa !7206
  %51 = add nsw i64 %15, 24
  %52 = getelementptr inbounds i8, ptr %p0, i64 %51
  %53 = load <4 x i8>, ptr %52, align 4, !tbaa !7204
  %54 = sitofp <4 x i8> %53 to <4 x float>
  %55 = fmul <4 x float> %54, <float 6.250000e-02, float 6.250000e-02, float 6.250000e-02, float 6.250000e-02>
  %56 = getelementptr inbounds float, ptr %T_multiply, i64 %51
  store <4 x float> %55, ptr %56, align 16, !tbaa !7206
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.preheader, %parallel_closure_entry
  ret i32 0
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.4, align 8
  store ptr %0, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.4, ptr %6, i64 0, i32 1
  store ptr %1, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.4, ptr %6, i64 0, i32 2
  store ptr %2, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.4, ptr %6, i64 0, i32 3
  store ptr %3, ptr %9, align 8
  %10 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.4, ptr %6, i64 0, i32 4
  store ptr %4, ptr %10, align 8
  %11 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.4, ptr %6, i64 0, i32 5
  store ptr %5, ptr %11, align 8
  %12 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %13 = call i32 %12(ptr nonnull @__tvm_parallel_lambda.232, ptr nonnull %6, i32 0)
  ret i32 %13
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.232(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_cast = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.4, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.4, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.4, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 895
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 896)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 896)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_begin_ax3.preheader.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.lr.ph:                    ; preds = %parallel_closure_entry
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.4, ptr %1, i64 0, i32 5
  %p4 = load ptr, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.4, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %15, align 8
  %16 = load i16, ptr %p4, align 64, !tbaa !7208
  %17 = insertelement <4 x i16> undef, i16 %16, i64 0
  %18 = shufflevector <4 x i16> %17, <4 x i16> undef, <4 x i32> zeroinitializer
  %19 = load i16, ptr %p3, align 64, !tbaa !7220
  %20 = insertelement <4 x i16> undef, i16 %19, i64 0
  %21 = shufflevector <4 x i16> %20, <4 x i16> undef, <4 x i32> zeroinitializer
  %22 = tail call i32 @llvm.smin.i32(i32 %11, i32 896)
  %smin = sext i32 %22 to i64
  %23 = add i32 %10, %22
  %24 = sub i32 %23, %12
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.lr.ph, %for_end_ax3
  %indvars.iv5 = phi i64 [ %smin, %for_begin_ax3.preheader.lr.ph ], [ %indvars.iv.next6, %for_end_ax3 ]
  %25 = trunc i64 %indvars.iv5 to i32
  %26 = sdiv i32 %25, 56
  %cse_var_2 = shl nsw i32 %26, 2
  %27 = mul nsw i64 %indvars.iv5, 224
  %28 = sext i32 %cse_var_2 to i64
  %29 = getelementptr inbounds i16, ptr %p2, i64 %28
  %30 = load <4 x i16>, ptr %29, align 8, !tbaa !7232
  %31 = getelementptr inbounds i16, ptr %p1, i64 %28
  %32 = load <4 x i16>, ptr %31, align 8, !tbaa !7234
  br label %for_body_ax3

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_body_ax3:                                     ; preds = %for_begin_ax3.preheader, %for_body_ax3
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %for_body_ax3 ]
  %33 = shl nuw nsw i64 %indvars.iv, 2
  %34 = add nsw i64 %33, %27
  %35 = getelementptr inbounds i8, ptr %p0, i64 %34
  %36 = load <4 x i8>, ptr %35, align 4, !tbaa !7236
  %37 = sext <4 x i8> %36 to <4 x i16>
  %38 = mul <4 x i16> %32, %37
  %39 = add <4 x i16> %38, %30
  %40 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %39, <4 x i16> zeroinitializer)
  %41 = add <4 x i16> %40, %21
  %42 = ashr <4 x i16> %41, %18
  %43 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %42, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %44 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %43, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %45 = trunc <4 x i16> %44 to <4 x i8>
  %46 = getelementptr inbounds i8, ptr %T_cast, i64 %34
  store <4 x i8> %45, ptr %46, align 4, !tbaa !7238
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 56
  br i1 %exitcond.not, label %for_end_ax3, label %for_body_ax3, !prof !59

for_end_ax3:                                      ; preds = %for_body_ax3
  %indvars.iv.next6 = add nsw i64 %indvars.iv5, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next6 to i32
  %exitcond7.not = icmp eq i32 %24, %lftr.wideiv
  br i1 %exitcond7.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_1_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.5, align 8
  store ptr %0, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.5, ptr %6, i64 0, i32 1
  store ptr %1, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.5, ptr %6, i64 0, i32 2
  store ptr %2, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.5, ptr %6, i64 0, i32 3
  store ptr %3, ptr %9, align 8
  %10 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.5, ptr %6, i64 0, i32 4
  store ptr %4, ptr %10, align 8
  %11 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.5, ptr %6, i64 0, i32 5
  store ptr %5, ptr %11, align 8
  %12 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %13 = call i32 %12(ptr nonnull @__tvm_parallel_lambda.293, ptr nonnull %6, i32 0)
  ret i32 %13
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.293(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_cast = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.5, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.5, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.5, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 1791
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 1792)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 1792)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_begin_ax3.preheader.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.lr.ph:                    ; preds = %parallel_closure_entry
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.5, ptr %1, i64 0, i32 5
  %p4 = load ptr, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.5, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %15, align 8
  %16 = load i16, ptr %p4, align 64, !tbaa !7240
  %17 = insertelement <4 x i16> undef, i16 %16, i64 0
  %18 = shufflevector <4 x i16> %17, <4 x i16> undef, <4 x i32> zeroinitializer
  %19 = load i16, ptr %p3, align 64, !tbaa !7252
  %20 = insertelement <4 x i16> undef, i16 %19, i64 0
  %21 = shufflevector <4 x i16> %20, <4 x i16> undef, <4 x i32> zeroinitializer
  %22 = tail call i32 @llvm.smin.i32(i32 %11, i32 1792)
  %smin = sext i32 %22 to i64
  %23 = add i32 %10, %22
  %24 = sub i32 %23, %12
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.lr.ph, %for_end_ax3
  %indvars.iv5 = phi i64 [ %smin, %for_begin_ax3.preheader.lr.ph ], [ %indvars.iv.next6, %for_end_ax3 ]
  %25 = trunc i64 %indvars.iv5 to i32
  %26 = sdiv i32 %25, 56
  %cse_var_2 = shl nsw i32 %26, 2
  %27 = mul nsw i64 %indvars.iv5, 224
  %28 = sext i32 %cse_var_2 to i64
  %29 = getelementptr inbounds i16, ptr %p2, i64 %28
  %30 = load <4 x i16>, ptr %29, align 8, !tbaa !7264
  %31 = getelementptr inbounds i16, ptr %p1, i64 %28
  %32 = load <4 x i16>, ptr %31, align 8, !tbaa !7266
  br label %for_body_ax3

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_body_ax3:                                     ; preds = %for_begin_ax3.preheader, %for_body_ax3
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %for_body_ax3 ]
  %33 = shl nuw nsw i64 %indvars.iv, 2
  %34 = add nsw i64 %33, %27
  %35 = getelementptr inbounds i8, ptr %p0, i64 %34
  %36 = load <4 x i8>, ptr %35, align 4, !tbaa !7268
  %37 = sext <4 x i8> %36 to <4 x i16>
  %38 = mul <4 x i16> %32, %37
  %39 = add <4 x i16> %38, %30
  %40 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %39, <4 x i16> zeroinitializer)
  %41 = add <4 x i16> %40, %21
  %42 = ashr <4 x i16> %41, %18
  %43 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %42, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %44 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %43, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %45 = trunc <4 x i16> %44 to <4 x i8>
  %46 = getelementptr inbounds i8, ptr %T_cast, i64 %34
  store <4 x i8> %45, ptr %46, align 4, !tbaa !7270
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 56
  br i1 %exitcond.not, label %for_end_ax3, label %for_body_ax3, !prof !59

for_end_ax3:                                      ; preds = %for_body_ax3
  %indvars.iv.next6 = add nsw i64 %indvars.iv5, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next6 to i32
  %exitcond7.not = icmp eq i32 %24, %lftr.wideiv
  br i1 %exitcond7.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_2_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.6, align 8
  store ptr %0, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.6, ptr %6, i64 0, i32 1
  store ptr %1, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.6, ptr %6, i64 0, i32 2
  store ptr %2, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.6, ptr %6, i64 0, i32 3
  store ptr %3, ptr %9, align 8
  %10 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.6, ptr %6, i64 0, i32 4
  store ptr %4, ptr %10, align 8
  %11 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.6, ptr %6, i64 0, i32 5
  store ptr %5, ptr %11, align 8
  %12 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %13 = call i32 %12(ptr nonnull @__tvm_parallel_lambda.354, ptr nonnull %6, i32 0)
  ret i32 %13
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.354(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_cast = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.6, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.6, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.6, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 895
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 896)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 896)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_begin_ax3.preheader.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.lr.ph:                    ; preds = %parallel_closure_entry
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.6, ptr %1, i64 0, i32 5
  %p4 = load ptr, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.6, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %15, align 8
  %16 = load i16, ptr %p4, align 64, !tbaa !7272
  %17 = insertelement <4 x i16> undef, i16 %16, i64 0
  %18 = shufflevector <4 x i16> %17, <4 x i16> undef, <4 x i32> zeroinitializer
  %19 = load i16, ptr %p3, align 64, !tbaa !7284
  %20 = insertelement <4 x i16> undef, i16 %19, i64 0
  %21 = shufflevector <4 x i16> %20, <4 x i16> undef, <4 x i32> zeroinitializer
  %22 = tail call i32 @llvm.smin.i32(i32 %11, i32 896)
  %smin = sext i32 %22 to i64
  %23 = add i32 %10, %22
  %24 = sub i32 %23, %12
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.lr.ph, %for_end_ax3
  %indvars.iv5 = phi i64 [ %smin, %for_begin_ax3.preheader.lr.ph ], [ %indvars.iv.next6, %for_end_ax3 ]
  %25 = trunc i64 %indvars.iv5 to i32
  %26 = sdiv i32 %25, 28
  %cse_var_2 = shl nsw i32 %26, 2
  %27 = mul nsw i64 %indvars.iv5, 112
  %28 = sext i32 %cse_var_2 to i64
  %29 = getelementptr inbounds i16, ptr %p2, i64 %28
  %30 = load <4 x i16>, ptr %29, align 8, !tbaa !7296
  %31 = getelementptr inbounds i16, ptr %p1, i64 %28
  %32 = load <4 x i16>, ptr %31, align 8, !tbaa !7298
  br label %for_body_ax3

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_body_ax3:                                     ; preds = %for_begin_ax3.preheader, %for_body_ax3
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %for_body_ax3 ]
  %33 = shl nuw nsw i64 %indvars.iv, 2
  %34 = add nsw i64 %33, %27
  %35 = getelementptr inbounds i8, ptr %p0, i64 %34
  %36 = load <4 x i8>, ptr %35, align 4, !tbaa !7300
  %37 = sext <4 x i8> %36 to <4 x i16>
  %38 = mul <4 x i16> %32, %37
  %39 = add <4 x i16> %38, %30
  %40 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %39, <4 x i16> zeroinitializer)
  %41 = add <4 x i16> %40, %21
  %42 = ashr <4 x i16> %41, %18
  %43 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %42, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %44 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %43, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %45 = trunc <4 x i16> %44 to <4 x i8>
  %46 = getelementptr inbounds i8, ptr %T_cast, i64 %34
  store <4 x i8> %45, ptr %46, align 4, !tbaa !7302
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 28
  br i1 %exitcond.not, label %for_end_ax3, label %for_body_ax3, !prof !59

for_end_ax3:                                      ; preds = %for_body_ax3
  %indvars.iv.next6 = add nsw i64 %indvars.iv5, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next6 to i32
  %exitcond7.not = icmp eq i32 %24, %lftr.wideiv
  br i1 %exitcond7.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_3_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.7, align 8
  store ptr %0, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.7, ptr %6, i64 0, i32 1
  store ptr %1, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.7, ptr %6, i64 0, i32 2
  store ptr %2, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.7, ptr %6, i64 0, i32 3
  store ptr %3, ptr %9, align 8
  %10 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.7, ptr %6, i64 0, i32 4
  store ptr %4, ptr %10, align 8
  %11 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.7, ptr %6, i64 0, i32 5
  store ptr %5, ptr %11, align 8
  %12 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %13 = call i32 %12(ptr nonnull @__tvm_parallel_lambda.415, ptr nonnull %6, i32 0)
  ret i32 %13
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.415(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_cast = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.7, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.7, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.7, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 1791
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 1792)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 1792)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_begin_ax3.preheader.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.lr.ph:                    ; preds = %parallel_closure_entry
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.7, ptr %1, i64 0, i32 5
  %p4 = load ptr, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.7, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %15, align 8
  %16 = load i16, ptr %p4, align 64, !tbaa !7304
  %17 = insertelement <4 x i16> undef, i16 %16, i64 0
  %18 = shufflevector <4 x i16> %17, <4 x i16> undef, <4 x i32> zeroinitializer
  %19 = load i16, ptr %p3, align 64, !tbaa !7316
  %20 = insertelement <4 x i16> undef, i16 %19, i64 0
  %21 = shufflevector <4 x i16> %20, <4 x i16> undef, <4 x i32> zeroinitializer
  %22 = tail call i32 @llvm.smin.i32(i32 %11, i32 1792)
  %smin = sext i32 %22 to i64
  %23 = add i32 %10, %22
  %24 = sub i32 %23, %12
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.lr.ph, %for_end_ax3
  %indvars.iv5 = phi i64 [ %smin, %for_begin_ax3.preheader.lr.ph ], [ %indvars.iv.next6, %for_end_ax3 ]
  %25 = trunc i64 %indvars.iv5 to i32
  %26 = sdiv i32 %25, 28
  %cse_var_2 = shl nsw i32 %26, 2
  %27 = mul nsw i64 %indvars.iv5, 112
  %28 = sext i32 %cse_var_2 to i64
  %29 = getelementptr inbounds i16, ptr %p2, i64 %28
  %30 = load <4 x i16>, ptr %29, align 8, !tbaa !7328
  %31 = getelementptr inbounds i16, ptr %p1, i64 %28
  %32 = load <4 x i16>, ptr %31, align 8, !tbaa !7330
  br label %for_body_ax3

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_body_ax3:                                     ; preds = %for_begin_ax3.preheader, %for_body_ax3
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %for_body_ax3 ]
  %33 = shl nuw nsw i64 %indvars.iv, 2
  %34 = add nsw i64 %33, %27
  %35 = getelementptr inbounds i8, ptr %p0, i64 %34
  %36 = load <4 x i8>, ptr %35, align 4, !tbaa !7332
  %37 = sext <4 x i8> %36 to <4 x i16>
  %38 = mul <4 x i16> %32, %37
  %39 = add <4 x i16> %38, %30
  %40 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %39, <4 x i16> zeroinitializer)
  %41 = add <4 x i16> %40, %21
  %42 = ashr <4 x i16> %41, %18
  %43 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %42, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %44 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %43, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %45 = trunc <4 x i16> %44 to <4 x i8>
  %46 = getelementptr inbounds i8, ptr %T_cast, i64 %34
  store <4 x i8> %45, ptr %46, align 4, !tbaa !7334
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 28
  br i1 %exitcond.not, label %for_end_ax3, label %for_body_ax3, !prof !59

for_end_ax3:                                      ; preds = %for_body_ax3
  %indvars.iv.next6 = add nsw i64 %indvars.iv5, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next6 to i32
  %exitcond7.not = icmp eq i32 %24, %lftr.wideiv
  br i1 %exitcond7.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_4_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.8, align 8
  store ptr %0, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.8, ptr %6, i64 0, i32 1
  store ptr %1, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.8, ptr %6, i64 0, i32 2
  store ptr %2, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.8, ptr %6, i64 0, i32 3
  store ptr %3, ptr %9, align 8
  %10 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.8, ptr %6, i64 0, i32 4
  store ptr %4, ptr %10, align 8
  %11 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.8, ptr %6, i64 0, i32 5
  store ptr %5, ptr %11, align 8
  %12 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %13 = call i32 %12(ptr nonnull @__tvm_parallel_lambda.476, ptr nonnull %6, i32 0)
  ret i32 %13
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.476(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_cast = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.8, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.8, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.8, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 895
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 896)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 896)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_begin_ax3.preheader.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.lr.ph:                    ; preds = %parallel_closure_entry
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.8, ptr %1, i64 0, i32 5
  %p4 = load ptr, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.8, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %15, align 8
  %16 = load i16, ptr %p4, align 64, !tbaa !7336
  %17 = insertelement <4 x i16> undef, i16 %16, i64 0
  %18 = shufflevector <4 x i16> %17, <4 x i16> undef, <4 x i32> zeroinitializer
  %19 = load i16, ptr %p3, align 64, !tbaa !7348
  %20 = insertelement <4 x i16> undef, i16 %19, i64 0
  %21 = shufflevector <4 x i16> %20, <4 x i16> undef, <4 x i32> zeroinitializer
  %22 = tail call i32 @llvm.smin.i32(i32 %11, i32 896)
  %smin = sext i32 %22 to i64
  %23 = add i32 %10, %22
  %24 = sub i32 %23, %12
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.lr.ph, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ %smin, %for_begin_ax3.preheader.lr.ph ], [ %indvars.iv.next, %for_begin_ax3.preheader ]
  %25 = trunc i64 %indvars.iv to i32
  %26 = sdiv i32 %25, 14
  %cse_var_2 = shl nsw i32 %26, 2
  %27 = mul nsw i64 %indvars.iv, 56
  %28 = sext i32 %cse_var_2 to i64
  %29 = getelementptr inbounds i16, ptr %p2, i64 %28
  %30 = load <4 x i16>, ptr %29, align 8, !tbaa !7360
  %31 = getelementptr inbounds i16, ptr %p1, i64 %28
  %32 = load <4 x i16>, ptr %31, align 8, !tbaa !7362
  %33 = getelementptr inbounds i8, ptr %p0, i64 %27
  %34 = load <4 x i8>, ptr %33, align 4, !tbaa !7364
  %35 = sext <4 x i8> %34 to <4 x i16>
  %36 = mul <4 x i16> %32, %35
  %37 = add <4 x i16> %36, %30
  %38 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %37, <4 x i16> zeroinitializer)
  %39 = add <4 x i16> %38, %21
  %40 = ashr <4 x i16> %39, %18
  %41 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %40, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %42 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %41, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %43 = trunc <4 x i16> %42 to <4 x i8>
  %44 = getelementptr inbounds i8, ptr %T_cast, i64 %27
  store <4 x i8> %43, ptr %44, align 4, !tbaa !7366
  %45 = or i64 %27, 4
  %46 = getelementptr inbounds i8, ptr %p0, i64 %45
  %47 = load <4 x i8>, ptr %46, align 4, !tbaa !7364
  %48 = sext <4 x i8> %47 to <4 x i16>
  %49 = mul <4 x i16> %32, %48
  %50 = add <4 x i16> %49, %30
  %51 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %50, <4 x i16> zeroinitializer)
  %52 = add <4 x i16> %51, %21
  %53 = ashr <4 x i16> %52, %18
  %54 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %53, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %55 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %54, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %56 = trunc <4 x i16> %55 to <4 x i8>
  %57 = getelementptr inbounds i8, ptr %T_cast, i64 %45
  store <4 x i8> %56, ptr %57, align 4, !tbaa !7366
  %58 = add nsw i64 %27, 8
  %59 = getelementptr inbounds i8, ptr %p0, i64 %58
  %60 = load <4 x i8>, ptr %59, align 4, !tbaa !7364
  %61 = sext <4 x i8> %60 to <4 x i16>
  %62 = mul <4 x i16> %32, %61
  %63 = add <4 x i16> %62, %30
  %64 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %63, <4 x i16> zeroinitializer)
  %65 = add <4 x i16> %64, %21
  %66 = ashr <4 x i16> %65, %18
  %67 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %66, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %68 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %67, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %69 = trunc <4 x i16> %68 to <4 x i8>
  %70 = getelementptr inbounds i8, ptr %T_cast, i64 %58
  store <4 x i8> %69, ptr %70, align 4, !tbaa !7366
  %71 = add nsw i64 %27, 12
  %72 = getelementptr inbounds i8, ptr %p0, i64 %71
  %73 = load <4 x i8>, ptr %72, align 4, !tbaa !7364
  %74 = sext <4 x i8> %73 to <4 x i16>
  %75 = mul <4 x i16> %32, %74
  %76 = add <4 x i16> %75, %30
  %77 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %76, <4 x i16> zeroinitializer)
  %78 = add <4 x i16> %77, %21
  %79 = ashr <4 x i16> %78, %18
  %80 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %79, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %81 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %80, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %82 = trunc <4 x i16> %81 to <4 x i8>
  %83 = getelementptr inbounds i8, ptr %T_cast, i64 %71
  store <4 x i8> %82, ptr %83, align 4, !tbaa !7366
  %84 = add nsw i64 %27, 16
  %85 = getelementptr inbounds i8, ptr %p0, i64 %84
  %86 = load <4 x i8>, ptr %85, align 4, !tbaa !7364
  %87 = sext <4 x i8> %86 to <4 x i16>
  %88 = mul <4 x i16> %32, %87
  %89 = add <4 x i16> %88, %30
  %90 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %89, <4 x i16> zeroinitializer)
  %91 = add <4 x i16> %90, %21
  %92 = ashr <4 x i16> %91, %18
  %93 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %92, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %94 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %93, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %95 = trunc <4 x i16> %94 to <4 x i8>
  %96 = getelementptr inbounds i8, ptr %T_cast, i64 %84
  store <4 x i8> %95, ptr %96, align 4, !tbaa !7366
  %97 = add nsw i64 %27, 20
  %98 = getelementptr inbounds i8, ptr %p0, i64 %97
  %99 = load <4 x i8>, ptr %98, align 4, !tbaa !7364
  %100 = sext <4 x i8> %99 to <4 x i16>
  %101 = mul <4 x i16> %32, %100
  %102 = add <4 x i16> %101, %30
  %103 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %102, <4 x i16> zeroinitializer)
  %104 = add <4 x i16> %103, %21
  %105 = ashr <4 x i16> %104, %18
  %106 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %105, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %107 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %106, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %108 = trunc <4 x i16> %107 to <4 x i8>
  %109 = getelementptr inbounds i8, ptr %T_cast, i64 %97
  store <4 x i8> %108, ptr %109, align 4, !tbaa !7366
  %110 = add nsw i64 %27, 24
  %111 = getelementptr inbounds i8, ptr %p0, i64 %110
  %112 = load <4 x i8>, ptr %111, align 4, !tbaa !7364
  %113 = sext <4 x i8> %112 to <4 x i16>
  %114 = mul <4 x i16> %32, %113
  %115 = add <4 x i16> %114, %30
  %116 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %115, <4 x i16> zeroinitializer)
  %117 = add <4 x i16> %116, %21
  %118 = ashr <4 x i16> %117, %18
  %119 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %118, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %120 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %119, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %121 = trunc <4 x i16> %120 to <4 x i8>
  %122 = getelementptr inbounds i8, ptr %T_cast, i64 %110
  store <4 x i8> %121, ptr %122, align 4, !tbaa !7366
  %123 = add nsw i64 %27, 28
  %124 = getelementptr inbounds i8, ptr %p0, i64 %123
  %125 = load <4 x i8>, ptr %124, align 4, !tbaa !7364
  %126 = sext <4 x i8> %125 to <4 x i16>
  %127 = mul <4 x i16> %32, %126
  %128 = add <4 x i16> %127, %30
  %129 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %128, <4 x i16> zeroinitializer)
  %130 = add <4 x i16> %129, %21
  %131 = ashr <4 x i16> %130, %18
  %132 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %131, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %133 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %132, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %134 = trunc <4 x i16> %133 to <4 x i8>
  %135 = getelementptr inbounds i8, ptr %T_cast, i64 %123
  store <4 x i8> %134, ptr %135, align 4, !tbaa !7366
  %136 = add nsw i64 %27, 32
  %137 = getelementptr inbounds i8, ptr %p0, i64 %136
  %138 = load <4 x i8>, ptr %137, align 4, !tbaa !7364
  %139 = sext <4 x i8> %138 to <4 x i16>
  %140 = mul <4 x i16> %32, %139
  %141 = add <4 x i16> %140, %30
  %142 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %141, <4 x i16> zeroinitializer)
  %143 = add <4 x i16> %142, %21
  %144 = ashr <4 x i16> %143, %18
  %145 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %144, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %146 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %145, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %147 = trunc <4 x i16> %146 to <4 x i8>
  %148 = getelementptr inbounds i8, ptr %T_cast, i64 %136
  store <4 x i8> %147, ptr %148, align 4, !tbaa !7366
  %149 = add nsw i64 %27, 36
  %150 = getelementptr inbounds i8, ptr %p0, i64 %149
  %151 = load <4 x i8>, ptr %150, align 4, !tbaa !7364
  %152 = sext <4 x i8> %151 to <4 x i16>
  %153 = mul <4 x i16> %32, %152
  %154 = add <4 x i16> %153, %30
  %155 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %154, <4 x i16> zeroinitializer)
  %156 = add <4 x i16> %155, %21
  %157 = ashr <4 x i16> %156, %18
  %158 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %157, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %159 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %158, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %160 = trunc <4 x i16> %159 to <4 x i8>
  %161 = getelementptr inbounds i8, ptr %T_cast, i64 %149
  store <4 x i8> %160, ptr %161, align 4, !tbaa !7366
  %162 = add nsw i64 %27, 40
  %163 = getelementptr inbounds i8, ptr %p0, i64 %162
  %164 = load <4 x i8>, ptr %163, align 4, !tbaa !7364
  %165 = sext <4 x i8> %164 to <4 x i16>
  %166 = mul <4 x i16> %32, %165
  %167 = add <4 x i16> %166, %30
  %168 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %167, <4 x i16> zeroinitializer)
  %169 = add <4 x i16> %168, %21
  %170 = ashr <4 x i16> %169, %18
  %171 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %170, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %172 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %171, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %173 = trunc <4 x i16> %172 to <4 x i8>
  %174 = getelementptr inbounds i8, ptr %T_cast, i64 %162
  store <4 x i8> %173, ptr %174, align 4, !tbaa !7366
  %175 = add nsw i64 %27, 44
  %176 = getelementptr inbounds i8, ptr %p0, i64 %175
  %177 = load <4 x i8>, ptr %176, align 4, !tbaa !7364
  %178 = sext <4 x i8> %177 to <4 x i16>
  %179 = mul <4 x i16> %32, %178
  %180 = add <4 x i16> %179, %30
  %181 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %180, <4 x i16> zeroinitializer)
  %182 = add <4 x i16> %181, %21
  %183 = ashr <4 x i16> %182, %18
  %184 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %183, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %185 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %184, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %186 = trunc <4 x i16> %185 to <4 x i8>
  %187 = getelementptr inbounds i8, ptr %T_cast, i64 %175
  store <4 x i8> %186, ptr %187, align 4, !tbaa !7366
  %188 = add nsw i64 %27, 48
  %189 = getelementptr inbounds i8, ptr %p0, i64 %188
  %190 = load <4 x i8>, ptr %189, align 4, !tbaa !7364
  %191 = sext <4 x i8> %190 to <4 x i16>
  %192 = mul <4 x i16> %32, %191
  %193 = add <4 x i16> %192, %30
  %194 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %193, <4 x i16> zeroinitializer)
  %195 = add <4 x i16> %194, %21
  %196 = ashr <4 x i16> %195, %18
  %197 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %196, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %198 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %197, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %199 = trunc <4 x i16> %198 to <4 x i8>
  %200 = getelementptr inbounds i8, ptr %T_cast, i64 %188
  store <4 x i8> %199, ptr %200, align 4, !tbaa !7366
  %201 = add nsw i64 %27, 52
  %202 = getelementptr inbounds i8, ptr %p0, i64 %201
  %203 = load <4 x i8>, ptr %202, align 4, !tbaa !7364
  %204 = sext <4 x i8> %203 to <4 x i16>
  %205 = mul <4 x i16> %32, %204
  %206 = add <4 x i16> %205, %30
  %207 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %206, <4 x i16> zeroinitializer)
  %208 = add <4 x i16> %207, %21
  %209 = ashr <4 x i16> %208, %18
  %210 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %209, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %211 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %210, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %212 = trunc <4 x i16> %211 to <4 x i8>
  %213 = getelementptr inbounds i8, ptr %T_cast, i64 %201
  store <4 x i8> %212, ptr %213, align 4, !tbaa !7366
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %24, %lftr.wideiv
  br i1 %exitcond.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.preheader, %parallel_closure_entry
  ret i32 0
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_5_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.9, align 8
  store ptr %0, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.9, ptr %6, i64 0, i32 1
  store ptr %1, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.9, ptr %6, i64 0, i32 2
  store ptr %2, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.9, ptr %6, i64 0, i32 3
  store ptr %3, ptr %9, align 8
  %10 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.9, ptr %6, i64 0, i32 4
  store ptr %4, ptr %10, align 8
  %11 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.9, ptr %6, i64 0, i32 5
  store ptr %5, ptr %11, align 8
  %12 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %13 = call i32 %12(ptr nonnull @__tvm_parallel_lambda.537, ptr nonnull %6, i32 0)
  ret i32 %13
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.537(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_cast = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.9, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.9, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.9, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 1791
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 1792)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 1792)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_begin_ax3.preheader.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.lr.ph:                    ; preds = %parallel_closure_entry
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.9, ptr %1, i64 0, i32 5
  %p4 = load ptr, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.9, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %15, align 8
  %16 = load i16, ptr %p4, align 64, !tbaa !7368
  %17 = insertelement <4 x i16> undef, i16 %16, i64 0
  %18 = shufflevector <4 x i16> %17, <4 x i16> undef, <4 x i32> zeroinitializer
  %19 = load i16, ptr %p3, align 64, !tbaa !7380
  %20 = insertelement <4 x i16> undef, i16 %19, i64 0
  %21 = shufflevector <4 x i16> %20, <4 x i16> undef, <4 x i32> zeroinitializer
  %22 = tail call i32 @llvm.smin.i32(i32 %11, i32 1792)
  %smin = sext i32 %22 to i64
  %23 = add i32 %10, %22
  %24 = sub i32 %23, %12
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.lr.ph, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ %smin, %for_begin_ax3.preheader.lr.ph ], [ %indvars.iv.next, %for_begin_ax3.preheader ]
  %25 = trunc i64 %indvars.iv to i32
  %26 = sdiv i32 %25, 14
  %cse_var_2 = shl nsw i32 %26, 2
  %27 = mul nsw i64 %indvars.iv, 56
  %28 = sext i32 %cse_var_2 to i64
  %29 = getelementptr inbounds i16, ptr %p2, i64 %28
  %30 = load <4 x i16>, ptr %29, align 8, !tbaa !7392
  %31 = getelementptr inbounds i16, ptr %p1, i64 %28
  %32 = load <4 x i16>, ptr %31, align 8, !tbaa !7394
  %33 = getelementptr inbounds i8, ptr %p0, i64 %27
  %34 = load <4 x i8>, ptr %33, align 4, !tbaa !7396
  %35 = sext <4 x i8> %34 to <4 x i16>
  %36 = mul <4 x i16> %32, %35
  %37 = add <4 x i16> %36, %30
  %38 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %37, <4 x i16> zeroinitializer)
  %39 = add <4 x i16> %38, %21
  %40 = ashr <4 x i16> %39, %18
  %41 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %40, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %42 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %41, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %43 = trunc <4 x i16> %42 to <4 x i8>
  %44 = getelementptr inbounds i8, ptr %T_cast, i64 %27
  store <4 x i8> %43, ptr %44, align 4, !tbaa !7398
  %45 = or i64 %27, 4
  %46 = getelementptr inbounds i8, ptr %p0, i64 %45
  %47 = load <4 x i8>, ptr %46, align 4, !tbaa !7396
  %48 = sext <4 x i8> %47 to <4 x i16>
  %49 = mul <4 x i16> %32, %48
  %50 = add <4 x i16> %49, %30
  %51 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %50, <4 x i16> zeroinitializer)
  %52 = add <4 x i16> %51, %21
  %53 = ashr <4 x i16> %52, %18
  %54 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %53, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %55 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %54, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %56 = trunc <4 x i16> %55 to <4 x i8>
  %57 = getelementptr inbounds i8, ptr %T_cast, i64 %45
  store <4 x i8> %56, ptr %57, align 4, !tbaa !7398
  %58 = add nsw i64 %27, 8
  %59 = getelementptr inbounds i8, ptr %p0, i64 %58
  %60 = load <4 x i8>, ptr %59, align 4, !tbaa !7396
  %61 = sext <4 x i8> %60 to <4 x i16>
  %62 = mul <4 x i16> %32, %61
  %63 = add <4 x i16> %62, %30
  %64 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %63, <4 x i16> zeroinitializer)
  %65 = add <4 x i16> %64, %21
  %66 = ashr <4 x i16> %65, %18
  %67 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %66, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %68 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %67, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %69 = trunc <4 x i16> %68 to <4 x i8>
  %70 = getelementptr inbounds i8, ptr %T_cast, i64 %58
  store <4 x i8> %69, ptr %70, align 4, !tbaa !7398
  %71 = add nsw i64 %27, 12
  %72 = getelementptr inbounds i8, ptr %p0, i64 %71
  %73 = load <4 x i8>, ptr %72, align 4, !tbaa !7396
  %74 = sext <4 x i8> %73 to <4 x i16>
  %75 = mul <4 x i16> %32, %74
  %76 = add <4 x i16> %75, %30
  %77 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %76, <4 x i16> zeroinitializer)
  %78 = add <4 x i16> %77, %21
  %79 = ashr <4 x i16> %78, %18
  %80 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %79, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %81 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %80, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %82 = trunc <4 x i16> %81 to <4 x i8>
  %83 = getelementptr inbounds i8, ptr %T_cast, i64 %71
  store <4 x i8> %82, ptr %83, align 4, !tbaa !7398
  %84 = add nsw i64 %27, 16
  %85 = getelementptr inbounds i8, ptr %p0, i64 %84
  %86 = load <4 x i8>, ptr %85, align 4, !tbaa !7396
  %87 = sext <4 x i8> %86 to <4 x i16>
  %88 = mul <4 x i16> %32, %87
  %89 = add <4 x i16> %88, %30
  %90 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %89, <4 x i16> zeroinitializer)
  %91 = add <4 x i16> %90, %21
  %92 = ashr <4 x i16> %91, %18
  %93 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %92, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %94 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %93, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %95 = trunc <4 x i16> %94 to <4 x i8>
  %96 = getelementptr inbounds i8, ptr %T_cast, i64 %84
  store <4 x i8> %95, ptr %96, align 4, !tbaa !7398
  %97 = add nsw i64 %27, 20
  %98 = getelementptr inbounds i8, ptr %p0, i64 %97
  %99 = load <4 x i8>, ptr %98, align 4, !tbaa !7396
  %100 = sext <4 x i8> %99 to <4 x i16>
  %101 = mul <4 x i16> %32, %100
  %102 = add <4 x i16> %101, %30
  %103 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %102, <4 x i16> zeroinitializer)
  %104 = add <4 x i16> %103, %21
  %105 = ashr <4 x i16> %104, %18
  %106 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %105, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %107 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %106, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %108 = trunc <4 x i16> %107 to <4 x i8>
  %109 = getelementptr inbounds i8, ptr %T_cast, i64 %97
  store <4 x i8> %108, ptr %109, align 4, !tbaa !7398
  %110 = add nsw i64 %27, 24
  %111 = getelementptr inbounds i8, ptr %p0, i64 %110
  %112 = load <4 x i8>, ptr %111, align 4, !tbaa !7396
  %113 = sext <4 x i8> %112 to <4 x i16>
  %114 = mul <4 x i16> %32, %113
  %115 = add <4 x i16> %114, %30
  %116 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %115, <4 x i16> zeroinitializer)
  %117 = add <4 x i16> %116, %21
  %118 = ashr <4 x i16> %117, %18
  %119 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %118, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %120 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %119, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %121 = trunc <4 x i16> %120 to <4 x i8>
  %122 = getelementptr inbounds i8, ptr %T_cast, i64 %110
  store <4 x i8> %121, ptr %122, align 4, !tbaa !7398
  %123 = add nsw i64 %27, 28
  %124 = getelementptr inbounds i8, ptr %p0, i64 %123
  %125 = load <4 x i8>, ptr %124, align 4, !tbaa !7396
  %126 = sext <4 x i8> %125 to <4 x i16>
  %127 = mul <4 x i16> %32, %126
  %128 = add <4 x i16> %127, %30
  %129 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %128, <4 x i16> zeroinitializer)
  %130 = add <4 x i16> %129, %21
  %131 = ashr <4 x i16> %130, %18
  %132 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %131, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %133 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %132, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %134 = trunc <4 x i16> %133 to <4 x i8>
  %135 = getelementptr inbounds i8, ptr %T_cast, i64 %123
  store <4 x i8> %134, ptr %135, align 4, !tbaa !7398
  %136 = add nsw i64 %27, 32
  %137 = getelementptr inbounds i8, ptr %p0, i64 %136
  %138 = load <4 x i8>, ptr %137, align 4, !tbaa !7396
  %139 = sext <4 x i8> %138 to <4 x i16>
  %140 = mul <4 x i16> %32, %139
  %141 = add <4 x i16> %140, %30
  %142 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %141, <4 x i16> zeroinitializer)
  %143 = add <4 x i16> %142, %21
  %144 = ashr <4 x i16> %143, %18
  %145 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %144, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %146 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %145, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %147 = trunc <4 x i16> %146 to <4 x i8>
  %148 = getelementptr inbounds i8, ptr %T_cast, i64 %136
  store <4 x i8> %147, ptr %148, align 4, !tbaa !7398
  %149 = add nsw i64 %27, 36
  %150 = getelementptr inbounds i8, ptr %p0, i64 %149
  %151 = load <4 x i8>, ptr %150, align 4, !tbaa !7396
  %152 = sext <4 x i8> %151 to <4 x i16>
  %153 = mul <4 x i16> %32, %152
  %154 = add <4 x i16> %153, %30
  %155 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %154, <4 x i16> zeroinitializer)
  %156 = add <4 x i16> %155, %21
  %157 = ashr <4 x i16> %156, %18
  %158 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %157, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %159 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %158, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %160 = trunc <4 x i16> %159 to <4 x i8>
  %161 = getelementptr inbounds i8, ptr %T_cast, i64 %149
  store <4 x i8> %160, ptr %161, align 4, !tbaa !7398
  %162 = add nsw i64 %27, 40
  %163 = getelementptr inbounds i8, ptr %p0, i64 %162
  %164 = load <4 x i8>, ptr %163, align 4, !tbaa !7396
  %165 = sext <4 x i8> %164 to <4 x i16>
  %166 = mul <4 x i16> %32, %165
  %167 = add <4 x i16> %166, %30
  %168 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %167, <4 x i16> zeroinitializer)
  %169 = add <4 x i16> %168, %21
  %170 = ashr <4 x i16> %169, %18
  %171 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %170, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %172 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %171, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %173 = trunc <4 x i16> %172 to <4 x i8>
  %174 = getelementptr inbounds i8, ptr %T_cast, i64 %162
  store <4 x i8> %173, ptr %174, align 4, !tbaa !7398
  %175 = add nsw i64 %27, 44
  %176 = getelementptr inbounds i8, ptr %p0, i64 %175
  %177 = load <4 x i8>, ptr %176, align 4, !tbaa !7396
  %178 = sext <4 x i8> %177 to <4 x i16>
  %179 = mul <4 x i16> %32, %178
  %180 = add <4 x i16> %179, %30
  %181 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %180, <4 x i16> zeroinitializer)
  %182 = add <4 x i16> %181, %21
  %183 = ashr <4 x i16> %182, %18
  %184 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %183, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %185 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %184, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %186 = trunc <4 x i16> %185 to <4 x i8>
  %187 = getelementptr inbounds i8, ptr %T_cast, i64 %175
  store <4 x i8> %186, ptr %187, align 4, !tbaa !7398
  %188 = add nsw i64 %27, 48
  %189 = getelementptr inbounds i8, ptr %p0, i64 %188
  %190 = load <4 x i8>, ptr %189, align 4, !tbaa !7396
  %191 = sext <4 x i8> %190 to <4 x i16>
  %192 = mul <4 x i16> %32, %191
  %193 = add <4 x i16> %192, %30
  %194 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %193, <4 x i16> zeroinitializer)
  %195 = add <4 x i16> %194, %21
  %196 = ashr <4 x i16> %195, %18
  %197 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %196, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %198 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %197, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %199 = trunc <4 x i16> %198 to <4 x i8>
  %200 = getelementptr inbounds i8, ptr %T_cast, i64 %188
  store <4 x i8> %199, ptr %200, align 4, !tbaa !7398
  %201 = add nsw i64 %27, 52
  %202 = getelementptr inbounds i8, ptr %p0, i64 %201
  %203 = load <4 x i8>, ptr %202, align 4, !tbaa !7396
  %204 = sext <4 x i8> %203 to <4 x i16>
  %205 = mul <4 x i16> %32, %204
  %206 = add <4 x i16> %205, %30
  %207 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %206, <4 x i16> zeroinitializer)
  %208 = add <4 x i16> %207, %21
  %209 = ashr <4 x i16> %208, %18
  %210 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %209, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %211 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %210, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %212 = trunc <4 x i16> %211 to <4 x i8>
  %213 = getelementptr inbounds i8, ptr %T_cast, i64 %201
  store <4 x i8> %212, ptr %213, align 4, !tbaa !7398
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %24, %lftr.wideiv
  br i1 %exitcond.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.preheader, %parallel_closure_entry
  ret i32 0
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_nn_relu_add_right_shift_clip_cast_6_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.10, align 8
  store ptr %0, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.10, ptr %6, i64 0, i32 1
  store ptr %1, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.10, ptr %6, i64 0, i32 2
  store ptr %2, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.10, ptr %6, i64 0, i32 3
  store ptr %3, ptr %9, align 8
  %10 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.10, ptr %6, i64 0, i32 4
  store ptr %4, ptr %10, align 8
  %11 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.10, ptr %6, i64 0, i32 5
  store ptr %5, ptr %11, align 8
  %12 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %13 = call i32 %12(ptr nonnull @__tvm_parallel_lambda.598, ptr nonnull %6, i32 0)
  ret i32 %13
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.598(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_cast = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.10, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.10, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.10, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 895
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 896)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 896)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_begin_ax3.preheader.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.lr.ph:                    ; preds = %parallel_closure_entry
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.10, ptr %1, i64 0, i32 5
  %p4 = load ptr, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.10, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %15, align 8
  %16 = load i16, ptr %p4, align 64, !tbaa !7400
  %17 = insertelement <4 x i16> undef, i16 %16, i64 0
  %18 = shufflevector <4 x i16> %17, <4 x i16> undef, <4 x i32> zeroinitializer
  %19 = load i16, ptr %p3, align 64, !tbaa !7412
  %20 = insertelement <4 x i16> undef, i16 %19, i64 0
  %21 = shufflevector <4 x i16> %20, <4 x i16> undef, <4 x i32> zeroinitializer
  %22 = tail call i32 @llvm.smin.i32(i32 %11, i32 896)
  %smin = sext i32 %22 to i64
  %23 = add i32 %10, %22
  %24 = sub i32 %23, %12
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.lr.ph, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ %smin, %for_begin_ax3.preheader.lr.ph ], [ %indvars.iv.next, %for_begin_ax3.preheader ]
  %25 = trunc i64 %indvars.iv to i32
  %26 = sdiv i32 %25, 7
  %cse_var_2 = shl nsw i32 %26, 2
  %27 = mul nsw i64 %indvars.iv, 28
  %28 = sext i32 %cse_var_2 to i64
  %29 = getelementptr inbounds i16, ptr %p2, i64 %28
  %30 = load <4 x i16>, ptr %29, align 8, !tbaa !7424
  %31 = getelementptr inbounds i16, ptr %p1, i64 %28
  %32 = load <4 x i16>, ptr %31, align 8, !tbaa !7426
  %33 = getelementptr inbounds i8, ptr %p0, i64 %27
  %34 = load <4 x i8>, ptr %33, align 4, !tbaa !7428
  %35 = sext <4 x i8> %34 to <4 x i16>
  %36 = mul <4 x i16> %32, %35
  %37 = add <4 x i16> %36, %30
  %38 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %37, <4 x i16> zeroinitializer)
  %39 = add <4 x i16> %38, %21
  %40 = ashr <4 x i16> %39, %18
  %41 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %40, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %42 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %41, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %43 = trunc <4 x i16> %42 to <4 x i8>
  %44 = getelementptr inbounds i8, ptr %T_cast, i64 %27
  store <4 x i8> %43, ptr %44, align 4, !tbaa !7430
  %45 = add nsw i64 %27, 4
  %46 = getelementptr inbounds i8, ptr %p0, i64 %45
  %47 = load <4 x i8>, ptr %46, align 4, !tbaa !7428
  %48 = sext <4 x i8> %47 to <4 x i16>
  %49 = mul <4 x i16> %32, %48
  %50 = add <4 x i16> %49, %30
  %51 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %50, <4 x i16> zeroinitializer)
  %52 = add <4 x i16> %51, %21
  %53 = ashr <4 x i16> %52, %18
  %54 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %53, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %55 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %54, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %56 = trunc <4 x i16> %55 to <4 x i8>
  %57 = getelementptr inbounds i8, ptr %T_cast, i64 %45
  store <4 x i8> %56, ptr %57, align 4, !tbaa !7430
  %58 = add nsw i64 %27, 8
  %59 = getelementptr inbounds i8, ptr %p0, i64 %58
  %60 = load <4 x i8>, ptr %59, align 4, !tbaa !7428
  %61 = sext <4 x i8> %60 to <4 x i16>
  %62 = mul <4 x i16> %32, %61
  %63 = add <4 x i16> %62, %30
  %64 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %63, <4 x i16> zeroinitializer)
  %65 = add <4 x i16> %64, %21
  %66 = ashr <4 x i16> %65, %18
  %67 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %66, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %68 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %67, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %69 = trunc <4 x i16> %68 to <4 x i8>
  %70 = getelementptr inbounds i8, ptr %T_cast, i64 %58
  store <4 x i8> %69, ptr %70, align 4, !tbaa !7430
  %71 = add nsw i64 %27, 12
  %72 = getelementptr inbounds i8, ptr %p0, i64 %71
  %73 = load <4 x i8>, ptr %72, align 4, !tbaa !7428
  %74 = sext <4 x i8> %73 to <4 x i16>
  %75 = mul <4 x i16> %32, %74
  %76 = add <4 x i16> %75, %30
  %77 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %76, <4 x i16> zeroinitializer)
  %78 = add <4 x i16> %77, %21
  %79 = ashr <4 x i16> %78, %18
  %80 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %79, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %81 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %80, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %82 = trunc <4 x i16> %81 to <4 x i8>
  %83 = getelementptr inbounds i8, ptr %T_cast, i64 %71
  store <4 x i8> %82, ptr %83, align 4, !tbaa !7430
  %84 = add nsw i64 %27, 16
  %85 = getelementptr inbounds i8, ptr %p0, i64 %84
  %86 = load <4 x i8>, ptr %85, align 4, !tbaa !7428
  %87 = sext <4 x i8> %86 to <4 x i16>
  %88 = mul <4 x i16> %32, %87
  %89 = add <4 x i16> %88, %30
  %90 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %89, <4 x i16> zeroinitializer)
  %91 = add <4 x i16> %90, %21
  %92 = ashr <4 x i16> %91, %18
  %93 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %92, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %94 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %93, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %95 = trunc <4 x i16> %94 to <4 x i8>
  %96 = getelementptr inbounds i8, ptr %T_cast, i64 %84
  store <4 x i8> %95, ptr %96, align 4, !tbaa !7430
  %97 = add nsw i64 %27, 20
  %98 = getelementptr inbounds i8, ptr %p0, i64 %97
  %99 = load <4 x i8>, ptr %98, align 4, !tbaa !7428
  %100 = sext <4 x i8> %99 to <4 x i16>
  %101 = mul <4 x i16> %32, %100
  %102 = add <4 x i16> %101, %30
  %103 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %102, <4 x i16> zeroinitializer)
  %104 = add <4 x i16> %103, %21
  %105 = ashr <4 x i16> %104, %18
  %106 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %105, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %107 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %106, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %108 = trunc <4 x i16> %107 to <4 x i8>
  %109 = getelementptr inbounds i8, ptr %T_cast, i64 %97
  store <4 x i8> %108, ptr %109, align 4, !tbaa !7430
  %110 = add nsw i64 %27, 24
  %111 = getelementptr inbounds i8, ptr %p0, i64 %110
  %112 = load <4 x i8>, ptr %111, align 4, !tbaa !7428
  %113 = sext <4 x i8> %112 to <4 x i16>
  %114 = mul <4 x i16> %32, %113
  %115 = add <4 x i16> %114, %30
  %116 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %115, <4 x i16> zeroinitializer)
  %117 = add <4 x i16> %116, %21
  %118 = ashr <4 x i16> %117, %18
  %119 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %118, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %120 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %119, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %121 = trunc <4 x i16> %120 to <4 x i8>
  %122 = getelementptr inbounds i8, ptr %T_cast, i64 %110
  store <4 x i8> %121, ptr %122, align 4, !tbaa !7430
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %24, %lftr.wideiv
  br i1 %exitcond.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.preheader, %parallel_closure_entry
  ret i32 0
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.11, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.11, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.11, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.11, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.11, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.653, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.653(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_cast = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.11, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.11, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.11, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 3583
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 3584)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 3584)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_begin_ax3.preheader.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.lr.ph:                    ; preds = %parallel_closure_entry
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.11, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %14, align 8
  %15 = load i16, ptr %p3, align 64, !tbaa !7432
  %16 = insertelement <4 x i16> undef, i16 %15, i64 0
  %17 = shufflevector <4 x i16> %16, <4 x i16> undef, <4 x i32> zeroinitializer
  %18 = tail call i32 @llvm.smin.i32(i32 %11, i32 3584)
  %smin = sext i32 %18 to i64
  %19 = add i32 %10, %18
  %20 = sub i32 %19, %12
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.lr.ph, %for_end_ax3
  %indvars.iv5 = phi i64 [ %smin, %for_begin_ax3.preheader.lr.ph ], [ %indvars.iv.next6, %for_end_ax3 ]
  %21 = trunc i64 %indvars.iv5 to i32
  %22 = sdiv i32 %21, 56
  %cse_var_2 = shl nsw i32 %22, 2
  %23 = mul nsw i64 %indvars.iv5, 224
  %24 = sext i32 %cse_var_2 to i64
  %25 = getelementptr inbounds i16, ptr %p2, i64 %24
  %26 = load <4 x i16>, ptr %25, align 8, !tbaa !7444
  %27 = getelementptr inbounds i16, ptr %p1, i64 %24
  %28 = load <4 x i16>, ptr %27, align 8, !tbaa !7446
  br label %for_body_ax3

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_body_ax3:                                     ; preds = %for_body_ax3, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next.1, %for_body_ax3 ]
  %29 = shl nuw nsw i64 %indvars.iv, 2
  %30 = add nsw i64 %29, %23
  %31 = getelementptr inbounds i8, ptr %p0, i64 %30
  %32 = load <4 x i8>, ptr %31, align 4, !tbaa !7448
  %33 = sext <4 x i8> %32 to <4 x i16>
  %34 = mul <4 x i16> %28, %33
  %35 = add <4 x i16> %34, %26
  %36 = ashr <4 x i16> %35, %17
  %37 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %36, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %38 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %37, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %39 = trunc <4 x i16> %38 to <4 x i8>
  %40 = getelementptr inbounds i8, ptr %T_cast, i64 %30
  store <4 x i8> %39, ptr %40, align 4, !tbaa !7450
  %indvars.iv.next = shl i64 %indvars.iv, 2
  %41 = or i64 %indvars.iv.next, 4
  %42 = add nsw i64 %41, %23
  %43 = getelementptr inbounds i8, ptr %p0, i64 %42
  %44 = load <4 x i8>, ptr %43, align 4, !tbaa !7448
  %45 = sext <4 x i8> %44 to <4 x i16>
  %46 = mul <4 x i16> %28, %45
  %47 = add <4 x i16> %46, %26
  %48 = ashr <4 x i16> %47, %17
  %49 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %48, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %50 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %49, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %51 = trunc <4 x i16> %50 to <4 x i8>
  %52 = getelementptr inbounds i8, ptr %T_cast, i64 %42
  store <4 x i8> %51, ptr %52, align 4, !tbaa !7450
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 56
  br i1 %exitcond.not.1, label %for_end_ax3, label %for_body_ax3, !prof !7452

for_end_ax3:                                      ; preds = %for_body_ax3
  %indvars.iv.next6 = add nsw i64 %indvars.iv5, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next6 to i32
  %exitcond7.not = icmp eq i32 %20, %lftr.wideiv
  br i1 %exitcond7.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_1_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.12, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.12, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.12, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.12, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.12, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.708, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.708(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_cast = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.12, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.12, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.12, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 3583
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 3584)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 3584)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_begin_ax3.preheader.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.lr.ph:                    ; preds = %parallel_closure_entry
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.12, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %14, align 8
  %15 = load i16, ptr %p3, align 64, !tbaa !7453
  %16 = insertelement <4 x i16> undef, i16 %15, i64 0
  %17 = shufflevector <4 x i16> %16, <4 x i16> undef, <4 x i32> zeroinitializer
  %18 = tail call i32 @llvm.smin.i32(i32 %11, i32 3584)
  %smin = sext i32 %18 to i64
  %19 = add i32 %10, %18
  %20 = sub i32 %19, %12
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.lr.ph, %for_end_ax3
  %indvars.iv5 = phi i64 [ %smin, %for_begin_ax3.preheader.lr.ph ], [ %indvars.iv.next6, %for_end_ax3 ]
  %21 = trunc i64 %indvars.iv5 to i32
  %22 = sdiv i32 %21, 28
  %cse_var_2 = shl nsw i32 %22, 2
  %23 = mul nsw i64 %indvars.iv5, 112
  %24 = sext i32 %cse_var_2 to i64
  %25 = getelementptr inbounds i16, ptr %p2, i64 %24
  %26 = load <4 x i16>, ptr %25, align 8, !tbaa !7465
  %27 = getelementptr inbounds i16, ptr %p1, i64 %24
  %28 = load <4 x i16>, ptr %27, align 8, !tbaa !7467
  br label %for_body_ax3

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_body_ax3:                                     ; preds = %for_body_ax3, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next.1, %for_body_ax3 ]
  %29 = shl nuw nsw i64 %indvars.iv, 2
  %30 = add nsw i64 %29, %23
  %31 = getelementptr inbounds i8, ptr %p0, i64 %30
  %32 = load <4 x i8>, ptr %31, align 4, !tbaa !7469
  %33 = sext <4 x i8> %32 to <4 x i16>
  %34 = mul <4 x i16> %28, %33
  %35 = add <4 x i16> %34, %26
  %36 = ashr <4 x i16> %35, %17
  %37 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %36, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %38 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %37, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %39 = trunc <4 x i16> %38 to <4 x i8>
  %40 = getelementptr inbounds i8, ptr %T_cast, i64 %30
  store <4 x i8> %39, ptr %40, align 4, !tbaa !7471
  %indvars.iv.next = shl i64 %indvars.iv, 2
  %41 = or i64 %indvars.iv.next, 4
  %42 = add nsw i64 %41, %23
  %43 = getelementptr inbounds i8, ptr %p0, i64 %42
  %44 = load <4 x i8>, ptr %43, align 4, !tbaa !7469
  %45 = sext <4 x i8> %44 to <4 x i16>
  %46 = mul <4 x i16> %28, %45
  %47 = add <4 x i16> %46, %26
  %48 = ashr <4 x i16> %47, %17
  %49 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %48, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %50 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %49, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %51 = trunc <4 x i16> %50 to <4 x i8>
  %52 = getelementptr inbounds i8, ptr %T_cast, i64 %42
  store <4 x i8> %51, ptr %52, align 4, !tbaa !7471
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 28
  br i1 %exitcond.not.1, label %for_end_ax3, label %for_body_ax3, !prof !7452

for_end_ax3:                                      ; preds = %for_body_ax3
  %indvars.iv.next6 = add nsw i64 %indvars.iv5, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next6 to i32
  %exitcond7.not = icmp eq i32 %20, %lftr.wideiv
  br i1 %exitcond7.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_2_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.13, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.13, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.13, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.13, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.13, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.763, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.763(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_cast = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.13, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.13, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.13, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 3583
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 3584)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 3584)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_begin_ax3.preheader.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.lr.ph:                    ; preds = %parallel_closure_entry
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.13, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %14, align 8
  %15 = load i16, ptr %p3, align 64, !tbaa !7473
  %16 = insertelement <4 x i16> undef, i16 %15, i64 0
  %17 = shufflevector <4 x i16> %16, <4 x i16> undef, <4 x i32> zeroinitializer
  %18 = tail call i32 @llvm.smin.i32(i32 %11, i32 3584)
  %smin = sext i32 %18 to i64
  %19 = add i32 %10, %18
  %20 = sub i32 %19, %12
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.lr.ph, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ %smin, %for_begin_ax3.preheader.lr.ph ], [ %indvars.iv.next, %for_begin_ax3.preheader ]
  %21 = trunc i64 %indvars.iv to i32
  %22 = sdiv i32 %21, 14
  %cse_var_2 = shl nsw i32 %22, 2
  %23 = mul nsw i64 %indvars.iv, 56
  %24 = sext i32 %cse_var_2 to i64
  %25 = getelementptr inbounds i16, ptr %p2, i64 %24
  %26 = load <4 x i16>, ptr %25, align 8, !tbaa !7485
  %27 = getelementptr inbounds i16, ptr %p1, i64 %24
  %28 = load <4 x i16>, ptr %27, align 8, !tbaa !7487
  %29 = getelementptr inbounds i8, ptr %p0, i64 %23
  %30 = load <4 x i8>, ptr %29, align 4, !tbaa !7489
  %31 = sext <4 x i8> %30 to <4 x i16>
  %32 = mul <4 x i16> %28, %31
  %33 = add <4 x i16> %32, %26
  %34 = ashr <4 x i16> %33, %17
  %35 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %34, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %36 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %35, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %37 = trunc <4 x i16> %36 to <4 x i8>
  %38 = getelementptr inbounds i8, ptr %T_cast, i64 %23
  store <4 x i8> %37, ptr %38, align 4, !tbaa !7491
  %39 = or i64 %23, 4
  %40 = getelementptr inbounds i8, ptr %p0, i64 %39
  %41 = load <4 x i8>, ptr %40, align 4, !tbaa !7489
  %42 = sext <4 x i8> %41 to <4 x i16>
  %43 = mul <4 x i16> %28, %42
  %44 = add <4 x i16> %43, %26
  %45 = ashr <4 x i16> %44, %17
  %46 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %45, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %47 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %46, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %48 = trunc <4 x i16> %47 to <4 x i8>
  %49 = getelementptr inbounds i8, ptr %T_cast, i64 %39
  store <4 x i8> %48, ptr %49, align 4, !tbaa !7491
  %50 = add nsw i64 %23, 8
  %51 = getelementptr inbounds i8, ptr %p0, i64 %50
  %52 = load <4 x i8>, ptr %51, align 4, !tbaa !7489
  %53 = sext <4 x i8> %52 to <4 x i16>
  %54 = mul <4 x i16> %28, %53
  %55 = add <4 x i16> %54, %26
  %56 = ashr <4 x i16> %55, %17
  %57 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %56, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %58 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %57, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %59 = trunc <4 x i16> %58 to <4 x i8>
  %60 = getelementptr inbounds i8, ptr %T_cast, i64 %50
  store <4 x i8> %59, ptr %60, align 4, !tbaa !7491
  %61 = add nsw i64 %23, 12
  %62 = getelementptr inbounds i8, ptr %p0, i64 %61
  %63 = load <4 x i8>, ptr %62, align 4, !tbaa !7489
  %64 = sext <4 x i8> %63 to <4 x i16>
  %65 = mul <4 x i16> %28, %64
  %66 = add <4 x i16> %65, %26
  %67 = ashr <4 x i16> %66, %17
  %68 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %67, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %69 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %68, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %70 = trunc <4 x i16> %69 to <4 x i8>
  %71 = getelementptr inbounds i8, ptr %T_cast, i64 %61
  store <4 x i8> %70, ptr %71, align 4, !tbaa !7491
  %72 = add nsw i64 %23, 16
  %73 = getelementptr inbounds i8, ptr %p0, i64 %72
  %74 = load <4 x i8>, ptr %73, align 4, !tbaa !7489
  %75 = sext <4 x i8> %74 to <4 x i16>
  %76 = mul <4 x i16> %28, %75
  %77 = add <4 x i16> %76, %26
  %78 = ashr <4 x i16> %77, %17
  %79 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %78, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %80 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %79, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %81 = trunc <4 x i16> %80 to <4 x i8>
  %82 = getelementptr inbounds i8, ptr %T_cast, i64 %72
  store <4 x i8> %81, ptr %82, align 4, !tbaa !7491
  %83 = add nsw i64 %23, 20
  %84 = getelementptr inbounds i8, ptr %p0, i64 %83
  %85 = load <4 x i8>, ptr %84, align 4, !tbaa !7489
  %86 = sext <4 x i8> %85 to <4 x i16>
  %87 = mul <4 x i16> %28, %86
  %88 = add <4 x i16> %87, %26
  %89 = ashr <4 x i16> %88, %17
  %90 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %89, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %91 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %90, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %92 = trunc <4 x i16> %91 to <4 x i8>
  %93 = getelementptr inbounds i8, ptr %T_cast, i64 %83
  store <4 x i8> %92, ptr %93, align 4, !tbaa !7491
  %94 = add nsw i64 %23, 24
  %95 = getelementptr inbounds i8, ptr %p0, i64 %94
  %96 = load <4 x i8>, ptr %95, align 4, !tbaa !7489
  %97 = sext <4 x i8> %96 to <4 x i16>
  %98 = mul <4 x i16> %28, %97
  %99 = add <4 x i16> %98, %26
  %100 = ashr <4 x i16> %99, %17
  %101 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %100, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %102 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %101, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %103 = trunc <4 x i16> %102 to <4 x i8>
  %104 = getelementptr inbounds i8, ptr %T_cast, i64 %94
  store <4 x i8> %103, ptr %104, align 4, !tbaa !7491
  %105 = add nsw i64 %23, 28
  %106 = getelementptr inbounds i8, ptr %p0, i64 %105
  %107 = load <4 x i8>, ptr %106, align 4, !tbaa !7489
  %108 = sext <4 x i8> %107 to <4 x i16>
  %109 = mul <4 x i16> %28, %108
  %110 = add <4 x i16> %109, %26
  %111 = ashr <4 x i16> %110, %17
  %112 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %111, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %113 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %112, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %114 = trunc <4 x i16> %113 to <4 x i8>
  %115 = getelementptr inbounds i8, ptr %T_cast, i64 %105
  store <4 x i8> %114, ptr %115, align 4, !tbaa !7491
  %116 = add nsw i64 %23, 32
  %117 = getelementptr inbounds i8, ptr %p0, i64 %116
  %118 = load <4 x i8>, ptr %117, align 4, !tbaa !7489
  %119 = sext <4 x i8> %118 to <4 x i16>
  %120 = mul <4 x i16> %28, %119
  %121 = add <4 x i16> %120, %26
  %122 = ashr <4 x i16> %121, %17
  %123 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %122, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %124 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %123, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %125 = trunc <4 x i16> %124 to <4 x i8>
  %126 = getelementptr inbounds i8, ptr %T_cast, i64 %116
  store <4 x i8> %125, ptr %126, align 4, !tbaa !7491
  %127 = add nsw i64 %23, 36
  %128 = getelementptr inbounds i8, ptr %p0, i64 %127
  %129 = load <4 x i8>, ptr %128, align 4, !tbaa !7489
  %130 = sext <4 x i8> %129 to <4 x i16>
  %131 = mul <4 x i16> %28, %130
  %132 = add <4 x i16> %131, %26
  %133 = ashr <4 x i16> %132, %17
  %134 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %133, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %135 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %134, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %136 = trunc <4 x i16> %135 to <4 x i8>
  %137 = getelementptr inbounds i8, ptr %T_cast, i64 %127
  store <4 x i8> %136, ptr %137, align 4, !tbaa !7491
  %138 = add nsw i64 %23, 40
  %139 = getelementptr inbounds i8, ptr %p0, i64 %138
  %140 = load <4 x i8>, ptr %139, align 4, !tbaa !7489
  %141 = sext <4 x i8> %140 to <4 x i16>
  %142 = mul <4 x i16> %28, %141
  %143 = add <4 x i16> %142, %26
  %144 = ashr <4 x i16> %143, %17
  %145 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %144, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %146 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %145, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %147 = trunc <4 x i16> %146 to <4 x i8>
  %148 = getelementptr inbounds i8, ptr %T_cast, i64 %138
  store <4 x i8> %147, ptr %148, align 4, !tbaa !7491
  %149 = add nsw i64 %23, 44
  %150 = getelementptr inbounds i8, ptr %p0, i64 %149
  %151 = load <4 x i8>, ptr %150, align 4, !tbaa !7489
  %152 = sext <4 x i8> %151 to <4 x i16>
  %153 = mul <4 x i16> %28, %152
  %154 = add <4 x i16> %153, %26
  %155 = ashr <4 x i16> %154, %17
  %156 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %155, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %157 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %156, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %158 = trunc <4 x i16> %157 to <4 x i8>
  %159 = getelementptr inbounds i8, ptr %T_cast, i64 %149
  store <4 x i8> %158, ptr %159, align 4, !tbaa !7491
  %160 = add nsw i64 %23, 48
  %161 = getelementptr inbounds i8, ptr %p0, i64 %160
  %162 = load <4 x i8>, ptr %161, align 4, !tbaa !7489
  %163 = sext <4 x i8> %162 to <4 x i16>
  %164 = mul <4 x i16> %28, %163
  %165 = add <4 x i16> %164, %26
  %166 = ashr <4 x i16> %165, %17
  %167 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %166, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %168 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %167, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %169 = trunc <4 x i16> %168 to <4 x i8>
  %170 = getelementptr inbounds i8, ptr %T_cast, i64 %160
  store <4 x i8> %169, ptr %170, align 4, !tbaa !7491
  %171 = add nsw i64 %23, 52
  %172 = getelementptr inbounds i8, ptr %p0, i64 %171
  %173 = load <4 x i8>, ptr %172, align 4, !tbaa !7489
  %174 = sext <4 x i8> %173 to <4 x i16>
  %175 = mul <4 x i16> %28, %174
  %176 = add <4 x i16> %175, %26
  %177 = ashr <4 x i16> %176, %17
  %178 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %177, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %179 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %178, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %180 = trunc <4 x i16> %179 to <4 x i8>
  %181 = getelementptr inbounds i8, ptr %T_cast, i64 %171
  store <4 x i8> %180, ptr %181, align 4, !tbaa !7491
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %20, %lftr.wideiv
  br i1 %exitcond.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.preheader, %parallel_closure_entry
  ret i32 0
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_add_right_shift_clip_cast_3_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.14, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.14, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.14, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.14, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.14, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.818, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.818(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_cast = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.14, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.14, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.14, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 3583
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 3584)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 3584)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_begin_ax3.preheader.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.lr.ph:                    ; preds = %parallel_closure_entry
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.14, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %14, align 8
  %15 = load i16, ptr %p3, align 64, !tbaa !7493
  %16 = insertelement <4 x i16> undef, i16 %15, i64 0
  %17 = shufflevector <4 x i16> %16, <4 x i16> undef, <4 x i32> zeroinitializer
  %18 = tail call i32 @llvm.smin.i32(i32 %11, i32 3584)
  %smin = sext i32 %18 to i64
  %19 = add i32 %10, %18
  %20 = sub i32 %19, %12
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.lr.ph, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ %smin, %for_begin_ax3.preheader.lr.ph ], [ %indvars.iv.next, %for_begin_ax3.preheader ]
  %21 = trunc i64 %indvars.iv to i32
  %22 = sdiv i32 %21, 7
  %cse_var_2 = shl nsw i32 %22, 2
  %23 = mul nsw i64 %indvars.iv, 28
  %24 = sext i32 %cse_var_2 to i64
  %25 = getelementptr inbounds i16, ptr %p2, i64 %24
  %26 = load <4 x i16>, ptr %25, align 8, !tbaa !7505
  %27 = getelementptr inbounds i16, ptr %p1, i64 %24
  %28 = load <4 x i16>, ptr %27, align 8, !tbaa !7507
  %29 = getelementptr inbounds i8, ptr %p0, i64 %23
  %30 = load <4 x i8>, ptr %29, align 4, !tbaa !7509
  %31 = sext <4 x i8> %30 to <4 x i16>
  %32 = mul <4 x i16> %28, %31
  %33 = add <4 x i16> %32, %26
  %34 = ashr <4 x i16> %33, %17
  %35 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %34, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %36 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %35, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %37 = trunc <4 x i16> %36 to <4 x i8>
  %38 = getelementptr inbounds i8, ptr %T_cast, i64 %23
  store <4 x i8> %37, ptr %38, align 4, !tbaa !7511
  %39 = add nsw i64 %23, 4
  %40 = getelementptr inbounds i8, ptr %p0, i64 %39
  %41 = load <4 x i8>, ptr %40, align 4, !tbaa !7509
  %42 = sext <4 x i8> %41 to <4 x i16>
  %43 = mul <4 x i16> %28, %42
  %44 = add <4 x i16> %43, %26
  %45 = ashr <4 x i16> %44, %17
  %46 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %45, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %47 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %46, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %48 = trunc <4 x i16> %47 to <4 x i8>
  %49 = getelementptr inbounds i8, ptr %T_cast, i64 %39
  store <4 x i8> %48, ptr %49, align 4, !tbaa !7511
  %50 = add nsw i64 %23, 8
  %51 = getelementptr inbounds i8, ptr %p0, i64 %50
  %52 = load <4 x i8>, ptr %51, align 4, !tbaa !7509
  %53 = sext <4 x i8> %52 to <4 x i16>
  %54 = mul <4 x i16> %28, %53
  %55 = add <4 x i16> %54, %26
  %56 = ashr <4 x i16> %55, %17
  %57 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %56, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %58 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %57, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %59 = trunc <4 x i16> %58 to <4 x i8>
  %60 = getelementptr inbounds i8, ptr %T_cast, i64 %50
  store <4 x i8> %59, ptr %60, align 4, !tbaa !7511
  %61 = add nsw i64 %23, 12
  %62 = getelementptr inbounds i8, ptr %p0, i64 %61
  %63 = load <4 x i8>, ptr %62, align 4, !tbaa !7509
  %64 = sext <4 x i8> %63 to <4 x i16>
  %65 = mul <4 x i16> %28, %64
  %66 = add <4 x i16> %65, %26
  %67 = ashr <4 x i16> %66, %17
  %68 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %67, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %69 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %68, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %70 = trunc <4 x i16> %69 to <4 x i8>
  %71 = getelementptr inbounds i8, ptr %T_cast, i64 %61
  store <4 x i8> %70, ptr %71, align 4, !tbaa !7511
  %72 = add nsw i64 %23, 16
  %73 = getelementptr inbounds i8, ptr %p0, i64 %72
  %74 = load <4 x i8>, ptr %73, align 4, !tbaa !7509
  %75 = sext <4 x i8> %74 to <4 x i16>
  %76 = mul <4 x i16> %28, %75
  %77 = add <4 x i16> %76, %26
  %78 = ashr <4 x i16> %77, %17
  %79 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %78, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %80 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %79, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %81 = trunc <4 x i16> %80 to <4 x i8>
  %82 = getelementptr inbounds i8, ptr %T_cast, i64 %72
  store <4 x i8> %81, ptr %82, align 4, !tbaa !7511
  %83 = add nsw i64 %23, 20
  %84 = getelementptr inbounds i8, ptr %p0, i64 %83
  %85 = load <4 x i8>, ptr %84, align 4, !tbaa !7509
  %86 = sext <4 x i8> %85 to <4 x i16>
  %87 = mul <4 x i16> %28, %86
  %88 = add <4 x i16> %87, %26
  %89 = ashr <4 x i16> %88, %17
  %90 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %89, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %91 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %90, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %92 = trunc <4 x i16> %91 to <4 x i8>
  %93 = getelementptr inbounds i8, ptr %T_cast, i64 %83
  store <4 x i8> %92, ptr %93, align 4, !tbaa !7511
  %94 = add nsw i64 %23, 24
  %95 = getelementptr inbounds i8, ptr %p0, i64 %94
  %96 = load <4 x i8>, ptr %95, align 4, !tbaa !7509
  %97 = sext <4 x i8> %96 to <4 x i16>
  %98 = mul <4 x i16> %28, %97
  %99 = add <4 x i16> %98, %26
  %100 = ashr <4 x i16> %99, %17
  %101 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %100, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %102 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %101, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %103 = trunc <4 x i16> %102 to <4 x i8>
  %104 = getelementptr inbounds i8, ptr %T_cast, i64 %94
  store <4 x i8> %103, ptr %104, align 4, !tbaa !7511
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %20, %lftr.wideiv
  br i1 %exitcond.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.preheader, %parallel_closure_entry
  ret i32 0
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_cast_multiply_left_shift_add_right_shift_clip_cast_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.15, align 8
  store ptr %0, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.15, ptr %6, i64 0, i32 1
  store ptr %1, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.15, ptr %6, i64 0, i32 2
  store ptr %2, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.15, ptr %6, i64 0, i32 3
  store ptr %3, ptr %9, align 8
  %10 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.15, ptr %6, i64 0, i32 4
  store ptr %4, ptr %10, align 8
  %11 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.15, ptr %6, i64 0, i32 5
  store ptr %5, ptr %11, align 8
  %12 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %13 = call i32 %12(ptr nonnull @__tvm_parallel_lambda.879, ptr nonnull %6, i32 0)
  ret i32 %13
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.879(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_cast = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.15, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.15, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.15, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 3583
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 3584)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 3584)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_begin_ax3.preheader.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.lr.ph:                    ; preds = %parallel_closure_entry
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.15, ptr %1, i64 0, i32 5
  %p4 = load ptr, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.15, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %15, align 8
  %16 = load i16, ptr %p4, align 64, !tbaa !7513
  %17 = insertelement <4 x i16> undef, i16 %16, i64 0
  %18 = shufflevector <4 x i16> %17, <4 x i16> undef, <4 x i32> zeroinitializer
  %19 = load i16, ptr %p2, align 64, !tbaa !7525
  %20 = insertelement <4 x i16> undef, i16 %19, i64 0
  %21 = shufflevector <4 x i16> %20, <4 x i16> undef, <4 x i32> zeroinitializer
  %22 = tail call i32 @llvm.smin.i32(i32 %11, i32 3584)
  %smin = sext i32 %22 to i64
  %23 = add i32 %10, %22
  %24 = sub i32 %23, %12
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.lr.ph, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ %smin, %for_begin_ax3.preheader.lr.ph ], [ %indvars.iv.next, %for_begin_ax3.preheader ]
  %25 = trunc i64 %indvars.iv to i32
  %26 = sdiv i32 %25, 7
  %cse_var_2 = shl nsw i32 %26, 2
  %27 = mul nsw i64 %indvars.iv, 28
  %28 = sext i32 %cse_var_2 to i64
  %29 = getelementptr inbounds i16, ptr %p3, i64 %28
  %30 = load <4 x i16>, ptr %29, align 8, !tbaa !7537
  %31 = getelementptr inbounds i16, ptr %p1, i64 %28
  %32 = load <4 x i16>, ptr %31, align 8, !tbaa !7539
  %33 = getelementptr inbounds i8, ptr %p0, i64 %27
  %34 = load <4 x i8>, ptr %33, align 4, !tbaa !7541
  %35 = sext <4 x i8> %34 to <4 x i16>
  %36 = mul <4 x i16> %32, %35
  %37 = shl <4 x i16> %36, %21
  %38 = add <4 x i16> %37, %30
  %39 = ashr <4 x i16> %38, %18
  %40 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %39, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %41 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %40, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %42 = trunc <4 x i16> %41 to <4 x i8>
  %43 = getelementptr inbounds i8, ptr %T_cast, i64 %27
  store <4 x i8> %42, ptr %43, align 4, !tbaa !7543
  %44 = add nsw i64 %27, 4
  %45 = getelementptr inbounds i8, ptr %p0, i64 %44
  %46 = load <4 x i8>, ptr %45, align 4, !tbaa !7541
  %47 = sext <4 x i8> %46 to <4 x i16>
  %48 = mul <4 x i16> %32, %47
  %49 = shl <4 x i16> %48, %21
  %50 = add <4 x i16> %49, %30
  %51 = ashr <4 x i16> %50, %18
  %52 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %51, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %53 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %52, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %54 = trunc <4 x i16> %53 to <4 x i8>
  %55 = getelementptr inbounds i8, ptr %T_cast, i64 %44
  store <4 x i8> %54, ptr %55, align 4, !tbaa !7543
  %56 = add nsw i64 %27, 8
  %57 = getelementptr inbounds i8, ptr %p0, i64 %56
  %58 = load <4 x i8>, ptr %57, align 4, !tbaa !7541
  %59 = sext <4 x i8> %58 to <4 x i16>
  %60 = mul <4 x i16> %32, %59
  %61 = shl <4 x i16> %60, %21
  %62 = add <4 x i16> %61, %30
  %63 = ashr <4 x i16> %62, %18
  %64 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %63, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %65 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %64, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %66 = trunc <4 x i16> %65 to <4 x i8>
  %67 = getelementptr inbounds i8, ptr %T_cast, i64 %56
  store <4 x i8> %66, ptr %67, align 4, !tbaa !7543
  %68 = add nsw i64 %27, 12
  %69 = getelementptr inbounds i8, ptr %p0, i64 %68
  %70 = load <4 x i8>, ptr %69, align 4, !tbaa !7541
  %71 = sext <4 x i8> %70 to <4 x i16>
  %72 = mul <4 x i16> %32, %71
  %73 = shl <4 x i16> %72, %21
  %74 = add <4 x i16> %73, %30
  %75 = ashr <4 x i16> %74, %18
  %76 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %75, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %77 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %76, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %78 = trunc <4 x i16> %77 to <4 x i8>
  %79 = getelementptr inbounds i8, ptr %T_cast, i64 %68
  store <4 x i8> %78, ptr %79, align 4, !tbaa !7543
  %80 = add nsw i64 %27, 16
  %81 = getelementptr inbounds i8, ptr %p0, i64 %80
  %82 = load <4 x i8>, ptr %81, align 4, !tbaa !7541
  %83 = sext <4 x i8> %82 to <4 x i16>
  %84 = mul <4 x i16> %32, %83
  %85 = shl <4 x i16> %84, %21
  %86 = add <4 x i16> %85, %30
  %87 = ashr <4 x i16> %86, %18
  %88 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %87, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %89 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %88, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %90 = trunc <4 x i16> %89 to <4 x i8>
  %91 = getelementptr inbounds i8, ptr %T_cast, i64 %80
  store <4 x i8> %90, ptr %91, align 4, !tbaa !7543
  %92 = add nsw i64 %27, 20
  %93 = getelementptr inbounds i8, ptr %p0, i64 %92
  %94 = load <4 x i8>, ptr %93, align 4, !tbaa !7541
  %95 = sext <4 x i8> %94 to <4 x i16>
  %96 = mul <4 x i16> %32, %95
  %97 = shl <4 x i16> %96, %21
  %98 = add <4 x i16> %97, %30
  %99 = ashr <4 x i16> %98, %18
  %100 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %99, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %101 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %100, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %102 = trunc <4 x i16> %101 to <4 x i8>
  %103 = getelementptr inbounds i8, ptr %T_cast, i64 %92
  store <4 x i8> %102, ptr %103, align 4, !tbaa !7543
  %104 = add nsw i64 %27, 24
  %105 = getelementptr inbounds i8, ptr %p0, i64 %104
  %106 = load <4 x i8>, ptr %105, align 4, !tbaa !7541
  %107 = sext <4 x i8> %106 to <4 x i16>
  %108 = mul <4 x i16> %32, %107
  %109 = shl <4 x i16> %108, %21
  %110 = add <4 x i16> %109, %30
  %111 = ashr <4 x i16> %110, %18
  %112 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %111, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %113 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %112, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %114 = trunc <4 x i16> %113 to <4 x i8>
  %115 = getelementptr inbounds i8, ptr %T_cast, i64 %104
  store <4 x i8> %114, ptr %115, align 4, !tbaa !7543
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %24, %lftr.wideiv
  br i1 %exitcond.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.preheader, %parallel_closure_entry
  ret i32 0
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.16, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.16, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.903, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.903(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.16, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 223
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 224)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 224)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 224)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv4 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next5, %for_end_ax3 ]
  %15 = mul nsw i64 %indvars.iv4, 224
  %16 = mul nsw i64 %indvars.iv4, 672
  br label %for_body_ax3

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_body_ax3:                                     ; preds = %for_begin_ax3.preheader, %for_body_ax3
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %for_body_ax3 ]
  %17 = add nsw i64 %indvars.iv, %15
  %18 = getelementptr inbounds float, ptr %p0, i64 %17
  %19 = load float, ptr %18, align 4, !tbaa !7545
  %20 = add nsw i64 %17, 50176
  %21 = getelementptr inbounds float, ptr %p0, i64 %20
  %22 = load float, ptr %21, align 4, !tbaa !7545
  %23 = add nsw i64 %17, 100352
  %24 = getelementptr inbounds float, ptr %p0, i64 %23
  %25 = load float, ptr %24, align 4, !tbaa !7545
  %26 = insertelement <3 x float> undef, float %19, i64 0
  %27 = insertelement <3 x float> %26, float %22, i64 1
  %28 = insertelement <3 x float> %27, float %25, i64 2
  %29 = mul nuw nsw i64 %indvars.iv, 3
  %30 = add nsw i64 %29, %16
  %31 = getelementptr inbounds float, ptr %T_layout_trans, i64 %30
  store <3 x float> %28, ptr %31, align 4, !tbaa !7547
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 224
  br i1 %exitcond.not, label %for_end_ax3, label %for_body_ax3, !prof !59

for_end_ax3:                                      ; preds = %for_body_ax3
  %indvars.iv.next5 = add nsw i64 %indvars.iv4, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next5 to i32
  %exitcond6.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond6.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59
}

; Function Attrs: mustprogress nofree noinline nosync nounwind willreturn memory(argmem: readwrite)
define internal fastcc void @tvmgen_default_fused_layout_transform_reshape_squeeze_compute_(ptr noalias nocapture writeonly align 64 %0, ptr noalias nocapture readonly align 64 %1) unnamed_addr #4 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 64 dereferenceable(8192) %0, ptr noundef nonnull align 64 dereferenceable(8192) %1, i64 8192, i1 false)
  ret void
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_multiply_add_nn_relu_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3) unnamed_addr #2 {
entry:
  %4 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.17, align 8
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.17, ptr %4, i64 0, i32 1
  store ptr %1, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.17, ptr %4, i64 0, i32 2
  store ptr %2, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.17, ptr %4, i64 0, i32 3
  store ptr %3, ptr %7, align 8
  %8 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %9 = call i32 %8(ptr nonnull @__tvm_parallel_lambda.973, ptr nonnull %4, i32 0)
  ret i32 %9
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.973(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_relu = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.17, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.17, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.17, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 223
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 224)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 224)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %14 = tail call i32 @llvm.smin.i32(i32 %11, i32 224)
  %smin = sext i32 %14 to i64
  %15 = add i32 %10, %14
  %16 = sub i32 %15, %12
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv9 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next10, %for_end_ax3 ]
  %17 = trunc i64 %indvars.iv9 to i32
  %18 = sdiv i32 %17, 112
  %19 = shl nsw i32 %18, 5
  %20 = mul nsw i64 %indvars.iv9, 3584
  %21 = sext i32 %19 to i64
  %.phi.trans.insert = getelementptr inbounds float, ptr %p1, i64 %21
  %.pre = load <16 x float>, ptr %.phi.trans.insert, align 64, !tbaa !7549
  %.phi.trans.insert12 = getelementptr inbounds float, ptr %p2, i64 %21
  %.pre13 = load <16 x float>, ptr %.phi.trans.insert12, align 64, !tbaa !7551
  %22 = or i64 %21, 16
  %23 = getelementptr inbounds float, ptr %p1, i64 %22
  %24 = load <16 x float>, ptr %23, align 64, !tbaa !7549
  %25 = getelementptr inbounds float, ptr %p2, i64 %22
  %26 = load <16 x float>, ptr %25, align 64, !tbaa !7551
  br label %for_begin_ax4.outer.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_begin_ax4.outer.preheader:                    ; preds = %for_begin_ax3.preheader, %for_begin_ax4.outer.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %for_begin_ax4.outer.preheader ]
  %27 = shl nsw i64 %indvars.iv, 5
  %28 = add nsw i64 %27, %20
  %29 = getelementptr inbounds float, ptr %p0, i64 %28
  %30 = load <16 x float>, ptr %29, align 64, !tbaa !7553
  %31 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %30, <16 x float> %.pre, <16 x float> %.pre13)
  %32 = fcmp ogt <16 x float> %31, zeroinitializer
  %33 = select <16 x i1> %32, <16 x float> %31, <16 x float> zeroinitializer
  %34 = getelementptr inbounds float, ptr %T_relu, i64 %28
  store <16 x float> %33, ptr %34, align 64, !tbaa !7555
  %35 = or i64 %28, 16
  %36 = getelementptr inbounds float, ptr %p0, i64 %35
  %37 = load <16 x float>, ptr %36, align 64, !tbaa !7553
  %38 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %37, <16 x float> %24, <16 x float> %26)
  %39 = fcmp ogt <16 x float> %38, zeroinitializer
  %40 = select <16 x i1> %39, <16 x float> %38, <16 x float> zeroinitializer
  %41 = getelementptr inbounds float, ptr %T_relu, i64 %35
  store <16 x float> %40, ptr %41, align 64, !tbaa !7555
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 112
  br i1 %exitcond.not, label %for_end_ax3, label %for_begin_ax4.outer.preheader, !prof !59

for_end_ax3:                                      ; preds = %for_begin_ax4.outer.preheader
  %indvars.iv.next10 = add nsw i64 %indvars.iv9, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next10 to i32
  %exitcond11.not = icmp eq i32 %16, %lftr.wideiv
  br i1 %exitcond11.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <16 x float> @llvm.fmuladd.v16f32(<16 x float>, <16 x float>, <16 x float>) #5

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_multiply_round_clip_cast_layout_transform_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.18, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.18, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.998, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.998(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.18, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 895
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 896)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 896)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 896)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv4 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next5, %for_end_ax3 ]
  %15 = trunc i64 %indvars.iv4 to i32
  %16 = srem i32 %15, 448
  %.lhs.trunc = trunc i32 %16 to i16
  %17 = sdiv i16 %.lhs.trunc, 56
  %.sext = sext i16 %17 to i32
  %18 = shl nsw i32 %.sext, 2
  %19 = srem i32 %15, 56
  %20 = mul nsw i32 %19, 1792
  %21 = sdiv i32 %15, 448
  %22 = mul nsw i32 %21, 100352
  %23 = add nsw i32 %22, %20
  %24 = add i32 %23, %18
  %25 = mul nsw i64 %indvars.iv4, 224
  br label %for_body_ax3

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_body_ax3:                                     ; preds = %for_begin_ax3.preheader, %for_body_ax3
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %for_body_ax3 ]
  %indvars.iv.tr = trunc i64 %indvars.iv to i32
  %26 = shl i32 %indvars.iv.tr, 5
  %27 = add i32 %24, %26
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds float, ptr %p0, i64 %28
  %30 = load <4 x float>, ptr %29, align 16, !tbaa !7557
  %31 = fmul <4 x float> %30, <float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01>
  %32 = tail call <4 x float> @llvm.round.v4f32(<4 x float> %31)
  %33 = fcmp olt <4 x float> %32, <float 1.270000e+02, float 1.270000e+02, float 1.270000e+02, float 1.270000e+02>
  %34 = select <4 x i1> %33, <4 x float> %32, <4 x float> <float 1.270000e+02, float 1.270000e+02, float 1.270000e+02, float 1.270000e+02>
  %35 = fcmp ogt <4 x float> %34, <float -1.270000e+02, float -1.270000e+02, float -1.270000e+02, float -1.270000e+02>
  %36 = select <4 x i1> %35, <4 x float> %34, <4 x float> <float -1.270000e+02, float -1.270000e+02, float -1.270000e+02, float -1.270000e+02>
  %37 = fptosi <4 x float> %36 to <4 x i8>
  %38 = shl nuw nsw i64 %indvars.iv, 2
  %39 = add nsw i64 %38, %25
  %40 = getelementptr inbounds i8, ptr %T_layout_trans, i64 %39
  store <4 x i8> %37, ptr %40, align 4, !tbaa !7559
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 56
  br i1 %exitcond.not, label %for_end_ax3, label %for_body_ax3, !prof !59

for_end_ax3:                                      ; preds = %for_body_ax3
  %indvars.iv.next5 = add nsw i64 %indvars.iv4, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next5 to i32
  %exitcond6.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond6.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x float> @llvm.round.v4f32(<4 x float>) #5

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_adaptive_avg_pool2d_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2) unnamed_addr #2 {
entry:
  %3 = alloca %closure_loop_parallel_ax0.ax1.fused, align 8
  %4 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.19, align 8
  %5 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %adaptive_pool_sum = tail call ptr %5(i32 1, i32 %0, i64 8192, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %adaptive_pool_sum, i64 64) ]
  %6 = icmp eq ptr %adaptive_pool_sum, null
  br i1 %6, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end2, %call_end, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %9, %if_end ], [ %13, %call_end ], [ %., %call_end2 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %adaptive_pool_sum, ptr %4, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.19, ptr %4, i64 0, i32 1
  store ptr %1, ptr %7, align 8
  %8 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %9 = call i32 %8(ptr nonnull @__tvm_parallel_lambda.1023, ptr nonnull %4, i32 0)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %call_end, label %common.ret, !prof !18

call_end:                                         ; preds = %if_end
  store ptr %2, ptr %3, align 8
  %11 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused, ptr %3, i64 0, i32 1
  store ptr %adaptive_pool_sum, ptr %11, align 8
  %12 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %13 = call i32 %12(ptr nonnull @__tvm_parallel_lambda.1024, ptr nonnull %3, i32 0)
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %call_end2, label %common.ret, !prof !18

call_end2:                                        ; preds = %call_end
  %15 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %16 = call i32 %15(i32 1, i32 %0, ptr nonnull %adaptive_pool_sum)
  %.not = icmp ne i32 %16, 0
  %. = sext i1 %.not to i32
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1023(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %adaptive_pool_sum = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.19, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 511
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 512)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 512)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax4.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax4.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 512)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax4.preheader

for_begin_ax4.preheader:                          ; preds = %for_begin_ax4.preheader.preheader, %for_end_ax4
  %indvars.iv11 = phi i64 [ %smin, %for_begin_ax4.preheader.preheader ], [ %indvars.iv.next12, %for_end_ax4 ]
  %ax0.ax1.fused.ax2.fused7 = phi i32 [ %10, %for_begin_ax4.preheader.preheader ], [ %264, %for_end_ax4 ]
  %15 = shl nsw i32 %ax0.ax1.fused.ax2.fused7, 2
  %16 = mul nsw i64 %indvars.iv11, 196
  %17 = sext i32 %15 to i64
  br label %for_body_ax4

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax4, %parallel_closure_entry
  ret i32 0

for_body_ax4:                                     ; preds = %for_begin_ax4.preheader, %for_body_ax4
  %indvars.iv = phi i64 [ 0, %for_begin_ax4.preheader ], [ %indvars.iv.next, %for_body_ax4 ]
  %18 = add nuw nsw i64 %indvars.iv, %17
  %19 = getelementptr inbounds float, ptr %adaptive_pool_sum, i64 %18
  %20 = add nsw i64 %indvars.iv, %16
  %21 = getelementptr inbounds float, ptr %p0, i64 %20
  %22 = load float, ptr %21, align 4, !tbaa !7561
  %23 = fadd float %22, 0.000000e+00
  %24 = shl i64 %20, 32
  %sext = add i64 %24, 17179869184
  %25 = ashr exact i64 %sext, 32
  %26 = getelementptr inbounds float, ptr %p0, i64 %25
  %27 = load float, ptr %26, align 4, !tbaa !7561
  %28 = fadd float %27, %23
  %29 = shl i64 %20, 32
  %sext14 = add i64 %29, 34359738368
  %30 = ashr exact i64 %sext14, 32
  %31 = getelementptr inbounds float, ptr %p0, i64 %30
  %32 = load float, ptr %31, align 4, !tbaa !7561
  %33 = fadd float %32, %28
  %34 = shl i64 %20, 32
  %sext15 = add i64 %34, 51539607552
  %35 = ashr exact i64 %sext15, 32
  %36 = getelementptr inbounds float, ptr %p0, i64 %35
  %37 = load float, ptr %36, align 4, !tbaa !7561
  %38 = fadd float %37, %33
  %39 = shl i64 %20, 32
  %sext16 = add i64 %39, 68719476736
  %40 = ashr exact i64 %sext16, 32
  %41 = getelementptr inbounds float, ptr %p0, i64 %40
  %42 = load float, ptr %41, align 4, !tbaa !7561
  %43 = fadd float %42, %38
  %44 = shl i64 %20, 32
  %sext17 = add i64 %44, 85899345920
  %45 = ashr exact i64 %sext17, 32
  %46 = getelementptr inbounds float, ptr %p0, i64 %45
  %47 = load float, ptr %46, align 4, !tbaa !7561
  %48 = fadd float %47, %43
  %49 = shl i64 %20, 32
  %sext18 = add i64 %49, 103079215104
  %50 = ashr exact i64 %sext18, 32
  %51 = getelementptr inbounds float, ptr %p0, i64 %50
  %52 = load float, ptr %51, align 4, !tbaa !7561
  %53 = fadd float %52, %48
  %54 = shl i64 %20, 32
  %sext19 = add i64 %54, 120259084288
  %55 = ashr exact i64 %sext19, 32
  %56 = getelementptr inbounds float, ptr %p0, i64 %55
  %57 = load float, ptr %56, align 4, !tbaa !7561
  %58 = fadd float %57, %53
  %59 = shl i64 %20, 32
  %sext20 = add i64 %59, 137438953472
  %60 = ashr exact i64 %sext20, 32
  %61 = getelementptr inbounds float, ptr %p0, i64 %60
  %62 = load float, ptr %61, align 4, !tbaa !7561
  %63 = fadd float %62, %58
  %64 = shl i64 %20, 32
  %sext21 = add i64 %64, 154618822656
  %65 = ashr exact i64 %sext21, 32
  %66 = getelementptr inbounds float, ptr %p0, i64 %65
  %67 = load float, ptr %66, align 4, !tbaa !7561
  %68 = fadd float %67, %63
  %69 = shl i64 %20, 32
  %sext22 = add i64 %69, 171798691840
  %70 = ashr exact i64 %sext22, 32
  %71 = getelementptr inbounds float, ptr %p0, i64 %70
  %72 = load float, ptr %71, align 4, !tbaa !7561
  %73 = fadd float %72, %68
  %74 = shl i64 %20, 32
  %sext23 = add i64 %74, 188978561024
  %75 = ashr exact i64 %sext23, 32
  %76 = getelementptr inbounds float, ptr %p0, i64 %75
  %77 = load float, ptr %76, align 4, !tbaa !7561
  %78 = fadd float %77, %73
  %79 = shl i64 %20, 32
  %sext24 = add i64 %79, 206158430208
  %80 = ashr exact i64 %sext24, 32
  %81 = getelementptr inbounds float, ptr %p0, i64 %80
  %82 = load float, ptr %81, align 4, !tbaa !7561
  %83 = fadd float %82, %78
  %84 = shl i64 %20, 32
  %sext25 = add i64 %84, 223338299392
  %85 = ashr exact i64 %sext25, 32
  %86 = getelementptr inbounds float, ptr %p0, i64 %85
  %87 = load float, ptr %86, align 4, !tbaa !7561
  %88 = fadd float %87, %83
  %89 = shl i64 %20, 32
  %sext26 = add i64 %89, 240518168576
  %90 = ashr exact i64 %sext26, 32
  %91 = getelementptr inbounds float, ptr %p0, i64 %90
  %92 = load float, ptr %91, align 4, !tbaa !7561
  %93 = fadd float %92, %88
  %94 = shl i64 %20, 32
  %sext27 = add i64 %94, 257698037760
  %95 = ashr exact i64 %sext27, 32
  %96 = getelementptr inbounds float, ptr %p0, i64 %95
  %97 = load float, ptr %96, align 4, !tbaa !7561
  %98 = fadd float %97, %93
  %99 = shl i64 %20, 32
  %sext28 = add i64 %99, 274877906944
  %100 = ashr exact i64 %sext28, 32
  %101 = getelementptr inbounds float, ptr %p0, i64 %100
  %102 = load float, ptr %101, align 4, !tbaa !7561
  %103 = fadd float %102, %98
  %104 = shl i64 %20, 32
  %sext29 = add i64 %104, 292057776128
  %105 = ashr exact i64 %sext29, 32
  %106 = getelementptr inbounds float, ptr %p0, i64 %105
  %107 = load float, ptr %106, align 4, !tbaa !7561
  %108 = fadd float %107, %103
  %109 = shl i64 %20, 32
  %sext30 = add i64 %109, 309237645312
  %110 = ashr exact i64 %sext30, 32
  %111 = getelementptr inbounds float, ptr %p0, i64 %110
  %112 = load float, ptr %111, align 4, !tbaa !7561
  %113 = fadd float %112, %108
  %114 = shl i64 %20, 32
  %sext31 = add i64 %114, 326417514496
  %115 = ashr exact i64 %sext31, 32
  %116 = getelementptr inbounds float, ptr %p0, i64 %115
  %117 = load float, ptr %116, align 4, !tbaa !7561
  %118 = fadd float %117, %113
  %119 = shl i64 %20, 32
  %sext32 = add i64 %119, 343597383680
  %120 = ashr exact i64 %sext32, 32
  %121 = getelementptr inbounds float, ptr %p0, i64 %120
  %122 = load float, ptr %121, align 4, !tbaa !7561
  %123 = fadd float %122, %118
  %124 = shl i64 %20, 32
  %sext33 = add i64 %124, 360777252864
  %125 = ashr exact i64 %sext33, 32
  %126 = getelementptr inbounds float, ptr %p0, i64 %125
  %127 = load float, ptr %126, align 4, !tbaa !7561
  %128 = fadd float %127, %123
  %129 = shl i64 %20, 32
  %sext34 = add i64 %129, 377957122048
  %130 = ashr exact i64 %sext34, 32
  %131 = getelementptr inbounds float, ptr %p0, i64 %130
  %132 = load float, ptr %131, align 4, !tbaa !7561
  %133 = fadd float %132, %128
  %134 = shl i64 %20, 32
  %sext35 = add i64 %134, 395136991232
  %135 = ashr exact i64 %sext35, 32
  %136 = getelementptr inbounds float, ptr %p0, i64 %135
  %137 = load float, ptr %136, align 4, !tbaa !7561
  %138 = fadd float %137, %133
  %139 = shl i64 %20, 32
  %sext36 = add i64 %139, 412316860416
  %140 = ashr exact i64 %sext36, 32
  %141 = getelementptr inbounds float, ptr %p0, i64 %140
  %142 = load float, ptr %141, align 4, !tbaa !7561
  %143 = fadd float %142, %138
  %144 = shl i64 %20, 32
  %sext37 = add i64 %144, 429496729600
  %145 = ashr exact i64 %sext37, 32
  %146 = getelementptr inbounds float, ptr %p0, i64 %145
  %147 = load float, ptr %146, align 4, !tbaa !7561
  %148 = fadd float %147, %143
  %149 = shl i64 %20, 32
  %sext38 = add i64 %149, 446676598784
  %150 = ashr exact i64 %sext38, 32
  %151 = getelementptr inbounds float, ptr %p0, i64 %150
  %152 = load float, ptr %151, align 4, !tbaa !7561
  %153 = fadd float %152, %148
  %154 = shl i64 %20, 32
  %sext39 = add i64 %154, 463856467968
  %155 = ashr exact i64 %sext39, 32
  %156 = getelementptr inbounds float, ptr %p0, i64 %155
  %157 = load float, ptr %156, align 4, !tbaa !7561
  %158 = fadd float %157, %153
  %159 = shl i64 %20, 32
  %sext40 = add i64 %159, 481036337152
  %160 = ashr exact i64 %sext40, 32
  %161 = getelementptr inbounds float, ptr %p0, i64 %160
  %162 = load float, ptr %161, align 4, !tbaa !7561
  %163 = fadd float %162, %158
  %164 = shl i64 %20, 32
  %sext41 = add i64 %164, 498216206336
  %165 = ashr exact i64 %sext41, 32
  %166 = getelementptr inbounds float, ptr %p0, i64 %165
  %167 = load float, ptr %166, align 4, !tbaa !7561
  %168 = fadd float %167, %163
  %169 = shl i64 %20, 32
  %sext42 = add i64 %169, 515396075520
  %170 = ashr exact i64 %sext42, 32
  %171 = getelementptr inbounds float, ptr %p0, i64 %170
  %172 = load float, ptr %171, align 4, !tbaa !7561
  %173 = fadd float %172, %168
  %174 = shl i64 %20, 32
  %sext43 = add i64 %174, 532575944704
  %175 = ashr exact i64 %sext43, 32
  %176 = getelementptr inbounds float, ptr %p0, i64 %175
  %177 = load float, ptr %176, align 4, !tbaa !7561
  %178 = fadd float %177, %173
  %179 = shl i64 %20, 32
  %sext44 = add i64 %179, 549755813888
  %180 = ashr exact i64 %sext44, 32
  %181 = getelementptr inbounds float, ptr %p0, i64 %180
  %182 = load float, ptr %181, align 4, !tbaa !7561
  %183 = fadd float %182, %178
  %184 = shl i64 %20, 32
  %sext45 = add i64 %184, 566935683072
  %185 = ashr exact i64 %sext45, 32
  %186 = getelementptr inbounds float, ptr %p0, i64 %185
  %187 = load float, ptr %186, align 4, !tbaa !7561
  %188 = fadd float %187, %183
  %189 = shl i64 %20, 32
  %sext46 = add i64 %189, 584115552256
  %190 = ashr exact i64 %sext46, 32
  %191 = getelementptr inbounds float, ptr %p0, i64 %190
  %192 = load float, ptr %191, align 4, !tbaa !7561
  %193 = fadd float %192, %188
  %194 = shl i64 %20, 32
  %sext47 = add i64 %194, 601295421440
  %195 = ashr exact i64 %sext47, 32
  %196 = getelementptr inbounds float, ptr %p0, i64 %195
  %197 = load float, ptr %196, align 4, !tbaa !7561
  %198 = fadd float %197, %193
  %199 = shl i64 %20, 32
  %sext48 = add i64 %199, 618475290624
  %200 = ashr exact i64 %sext48, 32
  %201 = getelementptr inbounds float, ptr %p0, i64 %200
  %202 = load float, ptr %201, align 4, !tbaa !7561
  %203 = fadd float %202, %198
  %204 = shl i64 %20, 32
  %sext49 = add i64 %204, 635655159808
  %205 = ashr exact i64 %sext49, 32
  %206 = getelementptr inbounds float, ptr %p0, i64 %205
  %207 = load float, ptr %206, align 4, !tbaa !7561
  %208 = fadd float %207, %203
  %209 = shl i64 %20, 32
  %sext50 = add i64 %209, 652835028992
  %210 = ashr exact i64 %sext50, 32
  %211 = getelementptr inbounds float, ptr %p0, i64 %210
  %212 = load float, ptr %211, align 4, !tbaa !7561
  %213 = fadd float %212, %208
  %214 = shl i64 %20, 32
  %sext51 = add i64 %214, 670014898176
  %215 = ashr exact i64 %sext51, 32
  %216 = getelementptr inbounds float, ptr %p0, i64 %215
  %217 = load float, ptr %216, align 4, !tbaa !7561
  %218 = fadd float %217, %213
  %219 = shl i64 %20, 32
  %sext52 = add i64 %219, 687194767360
  %220 = ashr exact i64 %sext52, 32
  %221 = getelementptr inbounds float, ptr %p0, i64 %220
  %222 = load float, ptr %221, align 4, !tbaa !7561
  %223 = fadd float %222, %218
  %224 = shl i64 %20, 32
  %sext53 = add i64 %224, 704374636544
  %225 = ashr exact i64 %sext53, 32
  %226 = getelementptr inbounds float, ptr %p0, i64 %225
  %227 = load float, ptr %226, align 4, !tbaa !7561
  %228 = fadd float %227, %223
  %229 = shl i64 %20, 32
  %sext54 = add i64 %229, 721554505728
  %230 = ashr exact i64 %sext54, 32
  %231 = getelementptr inbounds float, ptr %p0, i64 %230
  %232 = load float, ptr %231, align 4, !tbaa !7561
  %233 = fadd float %232, %228
  %234 = shl i64 %20, 32
  %sext55 = add i64 %234, 738734374912
  %235 = ashr exact i64 %sext55, 32
  %236 = getelementptr inbounds float, ptr %p0, i64 %235
  %237 = load float, ptr %236, align 4, !tbaa !7561
  %238 = fadd float %237, %233
  %239 = shl i64 %20, 32
  %sext56 = add i64 %239, 755914244096
  %240 = ashr exact i64 %sext56, 32
  %241 = getelementptr inbounds float, ptr %p0, i64 %240
  %242 = load float, ptr %241, align 4, !tbaa !7561
  %243 = fadd float %242, %238
  %244 = shl i64 %20, 32
  %sext57 = add i64 %244, 773094113280
  %245 = ashr exact i64 %sext57, 32
  %246 = getelementptr inbounds float, ptr %p0, i64 %245
  %247 = load float, ptr %246, align 4, !tbaa !7561
  %248 = fadd float %247, %243
  %249 = shl i64 %20, 32
  %sext58 = add i64 %249, 790273982464
  %250 = ashr exact i64 %sext58, 32
  %251 = getelementptr inbounds float, ptr %p0, i64 %250
  %252 = load float, ptr %251, align 4, !tbaa !7561
  %253 = fadd float %252, %248
  %254 = shl i64 %20, 32
  %sext59 = add i64 %254, 807453851648
  %255 = ashr exact i64 %sext59, 32
  %256 = getelementptr inbounds float, ptr %p0, i64 %255
  %257 = load float, ptr %256, align 4, !tbaa !7561
  %258 = fadd float %257, %253
  %259 = shl i64 %20, 32
  %sext60 = add i64 %259, 824633720832
  %260 = ashr exact i64 %sext60, 32
  %261 = getelementptr inbounds float, ptr %p0, i64 %260
  %262 = load float, ptr %261, align 4, !tbaa !7561
  %263 = fadd float %262, %258
  store float %263, ptr %19, align 4, !tbaa !7563
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ax4, label %for_body_ax4, !prof !59

for_end_ax4:                                      ; preds = %for_body_ax4
  %indvars.iv.next12 = add nsw i64 %indvars.iv11, 1
  %264 = add nsw i32 %ax0.ax1.fused.ax2.fused7, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next12 to i32
  %exitcond13.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond13.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax4.preheader, !prof !59
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1024(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %adaptive_pool_avg = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused, ptr %1, i64 0, i32 1
  %adaptive_pool_sum = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 511
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 512)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 512)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax4.preheader.preheader, label %for_end_ax0.ax1.fused, !prof !18

for_begin_ax4.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 512)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  %15 = xor i32 %12, -1
  %16 = add i32 %8, %15
  %17 = zext i32 %16 to i64
  %18 = add nuw nsw i64 %17, 1
  %min.iters.check = icmp ult i32 %16, 3
  br i1 %min.iters.check, label %for_begin_ax4.preheader.preheader11, label %vector.ph

vector.ph:                                        ; preds = %for_begin_ax4.preheader.preheader
  %n.vec = and i64 %18, 8589934588
  %ind.end = add nsw i64 %n.vec, %smin
  %.cast = trunc i64 %n.vec to i32
  %ind.end5 = add i32 %10, %.cast
  %invariant.gep = getelementptr float, ptr %adaptive_pool_avg, i64 -3
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %.cast7 = trunc i64 %index to i32
  %offset.idx = add i32 %10, %.cast7
  %19 = shl nsw i32 %offset.idx, 2
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds float, ptr %adaptive_pool_sum, i64 %20
  %wide.vec = load <16 x float>, ptr %21, align 4, !tbaa !7563
  %strided.vec = shufflevector <16 x float> %wide.vec, <16 x float> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec8 = shufflevector <16 x float> %wide.vec, <16 x float> poison, <4 x i32> <i32 1, i32 5, i32 9, i32 13>
  %strided.vec9 = shufflevector <16 x float> %wide.vec, <16 x float> poison, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %strided.vec10 = shufflevector <16 x float> %wide.vec, <16 x float> poison, <4 x i32> <i32 3, i32 7, i32 11, i32 15>
  %22 = fmul <4 x float> %strided.vec, <float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000>
  %23 = fmul <4 x float> %strided.vec8, <float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000>
  %24 = fmul <4 x float> %strided.vec9, <float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000>
  %25 = or i64 %20, 3
  %26 = fmul <4 x float> %strided.vec10, <float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000>
  %gep = getelementptr float, ptr %invariant.gep, i64 %25
  %27 = shufflevector <4 x float> %22, <4 x float> %23, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %28 = shufflevector <4 x float> %24, <4 x float> %26, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %interleaved.vec = shufflevector <8 x float> %27, <8 x float> %28, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 1, i32 5, i32 9, i32 13, i32 2, i32 6, i32 10, i32 14, i32 3, i32 7, i32 11, i32 15>
  store <16 x float> %interleaved.vec, ptr %gep, align 4, !tbaa !7565
  %index.next = add nuw i64 %index, 4
  %29 = icmp eq i64 %index.next, %n.vec
  br i1 %29, label %middle.block, label %vector.body, !prof !7567, !llvm.loop !7568

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %18, %n.vec
  br i1 %cmp.n, label %for_end_ax0.ax1.fused, label %for_begin_ax4.preheader.preheader11

for_begin_ax4.preheader.preheader11:              ; preds = %for_begin_ax4.preheader.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ %smin, %for_begin_ax4.preheader.preheader ], [ %ind.end, %middle.block ]
  %ax0.ax1.fused2.ph = phi i32 [ %10, %for_begin_ax4.preheader.preheader ], [ %ind.end5, %middle.block ]
  br label %for_begin_ax4.preheader

for_begin_ax4.preheader:                          ; preds = %for_begin_ax4.preheader.preheader11, %for_begin_ax4.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for_begin_ax4.preheader ], [ %indvars.iv.ph, %for_begin_ax4.preheader.preheader11 ]
  %ax0.ax1.fused2 = phi i32 [ %36, %for_begin_ax4.preheader ], [ %ax0.ax1.fused2.ph, %for_begin_ax4.preheader.preheader11 ]
  %30 = shl nsw i32 %ax0.ax1.fused2, 2
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds float, ptr %adaptive_pool_sum, i64 %31
  %33 = getelementptr inbounds float, ptr %adaptive_pool_avg, i64 %31
  %34 = load <4 x float>, ptr %32, align 4, !tbaa !7563
  %35 = fmul <4 x float> %34, <float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000>
  store <4 x float> %35, ptr %33, align 4, !tbaa !7565
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %36 = add nsw i32 %ax0.ax1.fused2, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond.not, label %for_end_ax0.ax1.fused, label %for_begin_ax4.preheader, !prof !7571, !llvm.loop !7572

for_end_ax0.ax1.fused:                            ; preds = %for_begin_ax4.preheader, %middle.block, %parallel_closure_entry
  ret i32 0
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3) unnamed_addr #2 {
entry:
  %4 = alloca %closure_loop_parallel_n.oc_chunk.fused.oh.fused, align 8
  %5 = alloca %closure_loop_parallel_i0.i1.fused.i2.fused, align 8
  %6 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pad = tail call ptr %6(i32 1, i32 %0, i64 629292, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pad, i64 64) ]
  %7 = icmp eq ptr %data_pad, null
  br i1 %7, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end2, %call_end, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %10, %if_end ], [ %16, %call_end ], [ %., %call_end2 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %data_pad, ptr %5, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused, ptr %5, i64 0, i32 1
  store ptr %1, ptr %8, align 8
  %9 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %10 = call i32 %9(ptr nonnull @__tvm_parallel_lambda.1062, ptr nonnull %5, i32 0)
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %call_end, label %common.ret, !prof !18

call_end:                                         ; preds = %if_end
  store i32 %0, ptr %4, align 8
  %12 = getelementptr inbounds %closure_loop_parallel_n.oc_chunk.fused.oh.fused, ptr %4, i64 0, i32 1
  store ptr %data_pad, ptr %12, align 8
  %13 = getelementptr inbounds %closure_loop_parallel_n.oc_chunk.fused.oh.fused, ptr %4, i64 0, i32 2
  store ptr %2, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_n.oc_chunk.fused.oh.fused, ptr %4, i64 0, i32 3
  store ptr %3, ptr %14, align 8
  %15 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %16 = call i32 %15(ptr nonnull @__tvm_parallel_lambda.1063, ptr nonnull %4, i32 0)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %call_end2, label %common.ret, !prof !18

call_end2:                                        ; preds = %call_end
  %18 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %19 = call i32 %18(i32 1, i32 %0, ptr nonnull %data_pad)
  %.not = icmp ne i32 %19, 0
  %. = sext i1 %.not to i32
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1062(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 228
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 229)
  %9 = mul nsw i32 %5, %task_id
  %.fr4 = freeze i32 %9
  %10 = tail call i32 @llvm.smin.i32(i32 %.fr4, i32 229)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_i3.preheader.preheader, label %for_end_i0.i1.fused.i2.fused, !prof !18

for_begin_i3.preheader.preheader:                 ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %.fr4, i32 229)
  %smin = sext i32 %12 to i64
  %13 = sub i32 %8, %10
  br label %for_begin_i3.preheader

for_begin_i3.preheader:                           ; preds = %for_begin_i3.preheader.preheader, %for_end_i3
  %indvars.iv10 = phi i64 [ %smin, %for_begin_i3.preheader.preheader ], [ %indvars.iv.next11, %for_end_i3 ]
  %indvar = phi i32 [ 0, %for_begin_i3.preheader.preheader ], [ %indvar.next, %for_end_i3 ]
  %14 = trunc i64 %indvars.iv10 to i32
  %15 = add i32 %14, -3
  %16 = icmp ult i32 %15, 224
  %17 = mul nsw i64 %indvars.iv10, 687
  %18 = mul i64 %indvars.iv10, 672
  %19 = add i64 %18, 4294965271
  br i1 %16, label %for_body_i3, label %for_body_i3.us.preheader

for_body_i3.us.preheader:                         ; preds = %for_begin_i3.preheader
  %20 = add i32 %10, %indvar
  %21 = mul i32 %20, 687
  %22 = sext i32 %21 to i64
  %23 = shl nsw i64 %22, 2
  %scevgep = getelementptr i8, ptr %data_pad, i64 %23
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(2748) %scevgep, i8 0, i64 2748, i1 false), !tbaa !7573
  br label %for_end_i3

for_end_i0.i1.fused.i2.fused:                     ; preds = %for_end_i3, %parallel_closure_entry
  ret i32 0

for_body_i3:                                      ; preds = %for_begin_i3.preheader, %if_end.1
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %if_end.1 ], [ 0, %for_begin_i3.preheader ]
  %24 = mul nuw nsw i64 %indvars.iv, 3
  %25 = trunc i64 %indvars.iv to i32
  %26 = add nsw i32 %25, -3
  %27 = icmp ult i32 %26, 224
  br i1 %27, label %if_then, label %if_end

for_end_i3:                                       ; preds = %if_end, %for_body_i3.us.preheader
  %indvars.iv.next11 = add nsw i64 %indvars.iv10, 1
  %indvar.next = add nuw i32 %indvar, 1
  %exitcond12.not = icmp eq i32 %indvar.next, %13
  br i1 %exitcond12.not, label %for_end_i0.i1.fused.i2.fused, label %for_begin_i3.preheader, !prof !59

if_then:                                          ; preds = %for_body_i3
  %28 = add nsw i64 %19, %24
  %sext = shl i64 %28, 32
  %29 = ashr exact i64 %sext, 32
  %30 = getelementptr inbounds float, ptr %p0, i64 %29
  %31 = load <3 x float>, ptr %30, align 4, !tbaa !7575
  br label %if_end

if_end:                                           ; preds = %for_body_i3, %if_then
  %32 = phi <3 x float> [ %31, %if_then ], [ zeroinitializer, %for_body_i3 ]
  %33 = add nsw i64 %24, %17
  %34 = getelementptr inbounds float, ptr %data_pad, i64 %33
  store <3 x float> %32, ptr %34, align 4, !tbaa !7573
  %indvars.iv.next = or i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 229
  br i1 %exitcond.not, label %for_end_i3, label %for_body_i3.1, !prof !59

for_body_i3.1:                                    ; preds = %if_end
  %35 = mul nuw nsw i64 %indvars.iv.next, 3
  %36 = trunc i64 %indvars.iv.next to i32
  %37 = add nsw i32 %36, -3
  %38 = icmp ult i32 %37, 224
  br i1 %38, label %if_then.1, label %if_end.1

if_then.1:                                        ; preds = %for_body_i3.1
  %39 = add nsw i64 %19, %35
  %sext.1 = shl i64 %39, 32
  %40 = ashr exact i64 %sext.1, 32
  %41 = getelementptr inbounds float, ptr %p0, i64 %40
  %42 = load <3 x float>, ptr %41, align 4, !tbaa !7575
  br label %if_end.1

if_end.1:                                         ; preds = %if_then.1, %for_body_i3.1
  %43 = phi <3 x float> [ %42, %if_then.1 ], [ zeroinitializer, %for_body_i3.1 ]
  %44 = add nsw i64 %35, %17
  %45 = getelementptr inbounds float, ptr %data_pad, i64 %44
  store <3 x float> %43, ptr %45, align 4, !tbaa !7573
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  br label %for_body_i3
}

define private i32 @__tvm_parallel_lambda.1063(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #0 {
parallel_closure_entry:
  %dev_id = load i32, ptr %1, align 4
  %2 = getelementptr inbounds %closure_loop_parallel_n.oc_chunk.fused.oh.fused, ptr %1, i64 0, i32 1
  %data_pad = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_n.oc_chunk.fused.oh.fused, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_n.oc_chunk.fused.oh.fused, ptr %1, i64 0, i32 3
  %conv2d_NCHWc = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 223
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 224)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 224)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_body_n.oc_chunk.fused.oh.fused.preheader, label %common.ret, !prof !18

for_body_n.oc_chunk.fused.oh.fused.preheader:     ; preds = %parallel_closure_entry
  %14 = tail call i32 @llvm.smin.i32(i32 %11, i32 224)
  %smin = sext i32 %14 to i64
  %15 = add i32 %10, %14
  %16 = sub i32 %15, %12
  br label %for_body_n.oc_chunk.fused.oh.fused

for_begin_n.oc_chunk.fused.oh.fused:              ; preds = %for_end_ow.outer
  %indvars.iv.next101 = add nsw i64 %indvars.iv100, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next101 to i32
  %exitcond102.not = icmp eq i32 %16, %lftr.wideiv
  br i1 %exitcond102.not, label %common.ret, label %for_body_n.oc_chunk.fused.oh.fused, !prof !59

for_body_n.oc_chunk.fused.oh.fused:               ; preds = %for_body_n.oc_chunk.fused.oh.fused.preheader, %for_begin_n.oc_chunk.fused.oh.fused
  %indvars.iv100 = phi i64 [ %smin, %for_body_n.oc_chunk.fused.oh.fused.preheader ], [ %indvars.iv.next101, %for_begin_n.oc_chunk.fused.oh.fused ]
  %17 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %conv2d_NCHWc.global = tail call ptr %17(i32 1, i32 %dev_id, i64 1024, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %conv2d_NCHWc.global, i64 64) ]
  %18 = icmp eq ptr %conv2d_NCHWc.global, null
  br i1 %18, label %common.ret, label %for_begin_ow.outer.preheader, !prof !18

for_begin_ow.outer.preheader:                     ; preds = %for_body_n.oc_chunk.fused.oh.fused
  %19 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 1
  %20 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 2
  %21 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 3
  %22 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 4
  %23 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 5
  %24 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 6
  %25 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 7
  %26 = trunc i64 %indvars.iv100 to i32
  %27 = sdiv i32 %26, 112
  %28 = mul nsw i32 %27, 4704
  %29 = srem i32 %26, 112
  %30 = mul nsw i32 %29, 1374
  %31 = mul nsw i64 %indvars.iv100, 3584
  %32 = sext i32 %28 to i64
  %33 = sext i32 %30 to i64
  br label %for_body_ow.outer

common.ret:                                       ; preds = %for_begin_n.oc_chunk.fused.oh.fused, %for_body_n.oc_chunk.fused.oh.fused, %for_end_ow.outer, %parallel_closure_entry
  %common.ret.op = phi i32 [ 0, %parallel_closure_entry ], [ -1, %for_end_ow.outer ], [ -1, %for_body_n.oc_chunk.fused.oh.fused ], [ 0, %for_begin_n.oc_chunk.fused.oh.fused ]
  ret i32 %common.ret.op

for_body_ow.outer:                                ; preds = %for_begin_ow.outer.preheader, %for_begin_ow.inner.preheader
  %indvars.iv96 = phi i64 [ 0, %for_begin_ow.outer.preheader ], [ %indvars.iv.next97, %for_begin_ow.inner.preheader ]
  %34 = mul nuw nsw i64 %indvars.iv96, 48
  %35 = add nsw i64 %34, %33
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 64 dereferenceable(1024) %conv2d_NCHWc.global, i8 0, i64 1024, i1 false)
  br label %for_begin_kw.preheader

for_end_ow.outer:                                 ; preds = %for_begin_ow.inner.preheader
  %36 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %37 = tail call i32 %36(i32 1, i32 %dev_id, ptr nonnull %conv2d_NCHWc.global)
  %.not = icmp eq i32 %37, 0
  br i1 %.not, label %for_begin_n.oc_chunk.fused.oh.fused, label %common.ret, !prof !59

for_begin_ow.inner.preheader:                     ; preds = %for_end_kw
  store <32 x float> %80, ptr %conv2d_NCHWc.global, align 64, !tbaa !7577
  store <32 x float> %86, ptr %19, align 64, !tbaa !7583
  store <32 x float> %92, ptr %20, align 64, !tbaa !7585
  store <32 x float> %98, ptr %21, align 64, !tbaa !7588
  store <32 x float> %104, ptr %22, align 64, !tbaa !7590
  store <32 x float> %110, ptr %23, align 64, !tbaa !7594
  store <32 x float> %116, ptr %24, align 64, !tbaa !7596
  store <32 x float> %122, ptr %25, align 64, !tbaa !7599
  %38 = shl nsw i64 %indvars.iv96, 8
  %39 = add nsw i64 %38, %31
  %40 = getelementptr inbounds float, ptr %conv2d_NCHWc, i64 %39
  store <32 x float> %80, ptr %40, align 64, !tbaa !7601
  %41 = or i64 %39, 32
  %42 = getelementptr inbounds float, ptr %conv2d_NCHWc, i64 %41
  store <32 x float> %86, ptr %42, align 64, !tbaa !7601
  %43 = or i64 %39, 64
  %44 = getelementptr inbounds float, ptr %conv2d_NCHWc, i64 %43
  store <32 x float> %92, ptr %44, align 64, !tbaa !7601
  %45 = or i64 %39, 96
  %46 = getelementptr inbounds float, ptr %conv2d_NCHWc, i64 %45
  store <32 x float> %98, ptr %46, align 64, !tbaa !7601
  %47 = or i64 %39, 128
  %48 = getelementptr inbounds float, ptr %conv2d_NCHWc, i64 %47
  store <32 x float> %104, ptr %48, align 64, !tbaa !7601
  %49 = or i64 %39, 160
  %50 = getelementptr inbounds float, ptr %conv2d_NCHWc, i64 %49
  store <32 x float> %110, ptr %50, align 64, !tbaa !7601
  %51 = or i64 %39, 192
  %52 = getelementptr inbounds float, ptr %conv2d_NCHWc, i64 %51
  store <32 x float> %116, ptr %52, align 64, !tbaa !7601
  %53 = or i64 %39, 224
  %54 = getelementptr inbounds float, ptr %conv2d_NCHWc, i64 %53
  store <32 x float> %122, ptr %54, align 64, !tbaa !7601
  %indvars.iv.next97 = add nuw nsw i64 %indvars.iv96, 1
  %exitcond99.not = icmp eq i64 %indvars.iv.next97, 14
  br i1 %exitcond99.not, label %for_end_ow.outer, label %for_body_ow.outer, !prof !59

for_begin_kw.preheader:                           ; preds = %for_body_ow.outer, %for_end_kw
  %indvars.iv88 = phi i64 [ 0, %for_body_ow.outer ], [ %indvars.iv.next89, %for_end_kw ]
  %.lcssa19.lcssa4263 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %80, %for_end_kw ]
  %.lcssa421.lcssa4462 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %86, %for_end_kw ]
  %.lcssa622.lcssa4661 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %92, %for_end_kw ]
  %.lcssa824.lcssa4760 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %98, %for_end_kw ]
  %.lcssa1026.lcssa4959 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %104, %for_end_kw ]
  %.lcssa1228.lcssa5158 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %110, %for_end_kw ]
  %.lcssa1430.lcssa5357 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %116, %for_end_kw ]
  %.lcssa1632.lcssa5556 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %122, %for_end_kw ]
  %55 = mul nuw nsw i64 %indvars.iv88, 672
  %56 = add nsw i64 %55, %32
  %57 = mul nuw nsw i64 %indvars.iv88, 687
  %58 = add nsw i64 %35, %57
  br label %for_begin_ic.inner.preheader

for_begin_ic.inner.preheader:                     ; preds = %for_begin_kw.preheader, %for_end_ic.inner
  %indvars.iv84 = phi i64 [ 0, %for_begin_kw.preheader ], [ %indvars.iv.next85, %for_end_ic.inner ]
  %.lcssa1940 = phi <32 x float> [ %.lcssa19.lcssa4263, %for_begin_kw.preheader ], [ %80, %for_end_ic.inner ]
  %.lcssa42139 = phi <32 x float> [ %.lcssa421.lcssa4462, %for_begin_kw.preheader ], [ %86, %for_end_ic.inner ]
  %.lcssa62238 = phi <32 x float> [ %.lcssa622.lcssa4661, %for_begin_kw.preheader ], [ %92, %for_end_ic.inner ]
  %.lcssa82437 = phi <32 x float> [ %.lcssa824.lcssa4760, %for_begin_kw.preheader ], [ %98, %for_end_ic.inner ]
  %.lcssa102636 = phi <32 x float> [ %.lcssa1026.lcssa4959, %for_begin_kw.preheader ], [ %104, %for_end_ic.inner ]
  %.lcssa122835 = phi <32 x float> [ %.lcssa1228.lcssa5158, %for_begin_kw.preheader ], [ %110, %for_end_ic.inner ]
  %.lcssa143034 = phi <32 x float> [ %.lcssa1430.lcssa5357, %for_begin_kw.preheader ], [ %116, %for_end_ic.inner ]
  %.lcssa163233 = phi <32 x float> [ %.lcssa1632.lcssa5556, %for_begin_kw.preheader ], [ %122, %for_end_ic.inner ]
  %59 = mul nuw nsw i64 %indvars.iv84, 96
  %60 = add nsw i64 %56, %59
  %61 = mul nuw nsw i64 %indvars.iv84, 3
  %62 = add nsw i64 %58, %61
  br label %for_body_ic.inner

for_end_kw:                                       ; preds = %for_end_ic.inner
  %indvars.iv.next89 = add nuw nsw i64 %indvars.iv88, 1
  %exitcond91.not = icmp eq i64 %indvars.iv.next89, 7
  br i1 %exitcond91.not, label %for_begin_ow.inner.preheader, label %for_begin_kw.preheader, !prof !59

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %63 = phi <32 x float> [ %.lcssa1940, %for_begin_ic.inner.preheader ], [ %80, %for_body_ic.inner ]
  %64 = phi <32 x float> [ %.lcssa42139, %for_begin_ic.inner.preheader ], [ %86, %for_body_ic.inner ]
  %65 = phi <32 x float> [ %.lcssa62238, %for_begin_ic.inner.preheader ], [ %92, %for_body_ic.inner ]
  %66 = phi <32 x float> [ %.lcssa82437, %for_begin_ic.inner.preheader ], [ %98, %for_body_ic.inner ]
  %67 = phi <32 x float> [ %.lcssa102636, %for_begin_ic.inner.preheader ], [ %104, %for_body_ic.inner ]
  %68 = phi <32 x float> [ %.lcssa122835, %for_begin_ic.inner.preheader ], [ %110, %for_body_ic.inner ]
  %69 = phi <32 x float> [ %.lcssa143034, %for_begin_ic.inner.preheader ], [ %116, %for_body_ic.inner ]
  %70 = phi <32 x float> [ %.lcssa163233, %for_begin_ic.inner.preheader ], [ %122, %for_body_ic.inner ]
  %71 = shl nuw nsw i64 %indvars.iv, 5
  %72 = add nsw i64 %60, %71
  %73 = add nsw i64 %62, %indvars.iv
  %74 = getelementptr inbounds float, ptr %data_pad, i64 %73
  %75 = load float, ptr %74, align 4, !tbaa !7573
  %76 = insertelement <32 x float> undef, float %75, i64 0
  %77 = shufflevector <32 x float> %76, <32 x float> undef, <32 x i32> zeroinitializer
  %78 = getelementptr inbounds float, ptr %p1, i64 %72
  %79 = load <32 x float>, ptr %78, align 64, !tbaa !7603
  %80 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %77, <32 x float> %79, <32 x float> %63)
  %81 = add nsw i64 %73, 6
  %82 = getelementptr inbounds float, ptr %data_pad, i64 %81
  %83 = load float, ptr %82, align 4, !tbaa !7573
  %84 = insertelement <32 x float> undef, float %83, i64 0
  %85 = shufflevector <32 x float> %84, <32 x float> undef, <32 x i32> zeroinitializer
  %86 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %85, <32 x float> %79, <32 x float> %64)
  %87 = add nsw i64 %73, 12
  %88 = getelementptr inbounds float, ptr %data_pad, i64 %87
  %89 = load float, ptr %88, align 4, !tbaa !7573
  %90 = insertelement <32 x float> undef, float %89, i64 0
  %91 = shufflevector <32 x float> %90, <32 x float> undef, <32 x i32> zeroinitializer
  %92 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %91, <32 x float> %79, <32 x float> %65)
  %93 = add nsw i64 %73, 18
  %94 = getelementptr inbounds float, ptr %data_pad, i64 %93
  %95 = load float, ptr %94, align 4, !tbaa !7573
  %96 = insertelement <32 x float> undef, float %95, i64 0
  %97 = shufflevector <32 x float> %96, <32 x float> undef, <32 x i32> zeroinitializer
  %98 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %97, <32 x float> %79, <32 x float> %66)
  %99 = add nsw i64 %73, 24
  %100 = getelementptr inbounds float, ptr %data_pad, i64 %99
  %101 = load float, ptr %100, align 4, !tbaa !7573
  %102 = insertelement <32 x float> undef, float %101, i64 0
  %103 = shufflevector <32 x float> %102, <32 x float> undef, <32 x i32> zeroinitializer
  %104 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %103, <32 x float> %79, <32 x float> %67)
  %105 = add nsw i64 %73, 30
  %106 = getelementptr inbounds float, ptr %data_pad, i64 %105
  %107 = load float, ptr %106, align 4, !tbaa !7573
  %108 = insertelement <32 x float> undef, float %107, i64 0
  %109 = shufflevector <32 x float> %108, <32 x float> undef, <32 x i32> zeroinitializer
  %110 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %109, <32 x float> %79, <32 x float> %68)
  %111 = add nsw i64 %73, 36
  %112 = getelementptr inbounds float, ptr %data_pad, i64 %111
  %113 = load float, ptr %112, align 4, !tbaa !7573
  %114 = insertelement <32 x float> undef, float %113, i64 0
  %115 = shufflevector <32 x float> %114, <32 x float> undef, <32 x i32> zeroinitializer
  %116 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %115, <32 x float> %79, <32 x float> %69)
  %117 = add nsw i64 %73, 42
  %118 = getelementptr inbounds float, ptr %data_pad, i64 %117
  %119 = load float, ptr %118, align 4, !tbaa !7573
  %120 = insertelement <32 x float> undef, float %119, i64 0
  %121 = shufflevector <32 x float> %120, <32 x float> undef, <32 x i32> zeroinitializer
  %122 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %121, <32 x float> %79, <32 x float> %70)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !59

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next85 = add nuw nsw i64 %indvars.iv84, 1
  %exitcond87.not = icmp eq i64 %indvars.iv.next85, 7
  br i1 %exitcond87.not, label %for_end_kw, label %for_begin_ic.inner.preheader, !prof !59
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <32 x float> @llvm.fmuladd.v32f32(<32 x float>, <32 x float>, <32 x float>) #5

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1113, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1113(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %conv2d_NCHWc.global1 = alloca [56 x <4 x i16>], align 16
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 895
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 896)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_begin_ow.c.outer.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_begin_ow.c.outer.preheader.preheader:         ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %smin = sext i32 %15 to i64
  %16 = add i32 %9, %15
  %17 = sub i32 %16, %11
  %18 = load i16, ptr %p3, align 64, !tbaa !7605
  %19 = insertelement <4 x i16> undef, i16 %18, i64 0
  %20 = shufflevector <4 x i16> %19, <4 x i16> undef, <4 x i32> zeroinitializer
  %21 = load i16, ptr %p2, align 64, !tbaa !7617
  %22 = insertelement <4 x i16> undef, i16 %21, i64 0
  %23 = shufflevector <4 x i16> %22, <4 x i16> undef, <4 x i32> zeroinitializer
  br label %for_begin_ow.c.outer.preheader

for_begin_ow.c.outer.preheader:                   ; preds = %for_begin_ow.c.outer.preheader.preheader, %for_end_ax3.inner.1
  %indvars.iv190 = phi i64 [ %smin, %for_begin_ow.c.outer.preheader.preheader ], [ %indvars.iv.next191, %for_end_ax3.inner.1 ]
  %24 = trunc i64 %indvars.iv190 to i32
  %25 = sdiv i32 %24, 56
  %26 = shl nsw i32 %25, 8
  %27 = srem i32 %24, 56
  %28 = mul nsw i32 %27, 224
  %29 = sext i32 %26 to i64
  %30 = sext i32 %28 to i64
  br label %for_body_ow.c.outer

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_end_ax3.inner.1, %parallel_closure_entry
  ret i32 0

for_begin_ax3.outer.preheader:                    ; preds = %for_end_ic.outer
  %31 = mul nsw i64 %indvars.iv190, 224
  br label %for_body_ax3.inner

for_body_ow.c.outer:                              ; preds = %for_begin_ow.c.outer.preheader, %for_end_ic.outer
  %32 = phi i1 [ true, %for_begin_ow.c.outer.preheader ], [ false, %for_end_ic.outer ]
  %indvars.iv179 = phi i64 [ 0, %for_begin_ow.c.outer.preheader ], [ 1, %for_end_ic.outer ]
  %33 = mul nuw nsw i64 %indvars.iv179, 28
  %34 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %33
  store <4 x i16> zeroinitializer, ptr %34, align 16, !tbaa !7629
  %35 = or i64 %33, 1
  %36 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %35
  store <4 x i16> zeroinitializer, ptr %36, align 8, !tbaa !7629
  %37 = or i64 %33, 2
  %38 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %37
  store <4 x i16> zeroinitializer, ptr %38, align 16, !tbaa !7629
  %39 = or i64 %33, 3
  %40 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %39
  store <4 x i16> zeroinitializer, ptr %40, align 8, !tbaa !7629
  %41 = add nuw nsw i64 %33, 4
  %42 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %41
  store <4 x i16> zeroinitializer, ptr %42, align 16, !tbaa !7629
  %43 = add nuw nsw i64 %33, 5
  %44 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %43
  store <4 x i16> zeroinitializer, ptr %44, align 8, !tbaa !7629
  %45 = add nuw nsw i64 %33, 6
  %46 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %45
  store <4 x i16> zeroinitializer, ptr %46, align 16, !tbaa !7629
  %47 = add nuw nsw i64 %33, 7
  %48 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %47
  store <4 x i16> zeroinitializer, ptr %48, align 8, !tbaa !7629
  %49 = add nuw nsw i64 %33, 8
  %50 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %49
  store <4 x i16> zeroinitializer, ptr %50, align 16, !tbaa !7629
  %51 = add nuw nsw i64 %33, 9
  %52 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %51
  store <4 x i16> zeroinitializer, ptr %52, align 8, !tbaa !7629
  %53 = add nuw nsw i64 %33, 10
  %54 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %53
  store <4 x i16> zeroinitializer, ptr %54, align 16, !tbaa !7629
  %55 = add nuw nsw i64 %33, 11
  %56 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %55
  store <4 x i16> zeroinitializer, ptr %56, align 8, !tbaa !7629
  %57 = add nuw nsw i64 %33, 12
  %58 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %57
  store <4 x i16> zeroinitializer, ptr %58, align 16, !tbaa !7629
  %59 = add nuw nsw i64 %33, 13
  %60 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %59
  %61 = add nuw nsw i64 %33, 14
  %62 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %61
  %63 = add nuw nsw i64 %33, 15
  %64 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %63
  %65 = add nuw nsw i64 %33, 16
  %66 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %65
  %67 = add nuw nsw i64 %33, 17
  %68 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %67
  %69 = add nuw nsw i64 %33, 18
  %70 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %69
  %71 = add nuw nsw i64 %33, 19
  %72 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %71
  %73 = add nuw nsw i64 %33, 20
  %74 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %73
  %75 = add nuw nsw i64 %33, 21
  %76 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %75
  %77 = add nuw nsw i64 %33, 22
  %78 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %77
  %79 = add nuw nsw i64 %33, 23
  %80 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %79
  %81 = add nuw nsw i64 %33, 24
  %82 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %81
  %83 = add nuw nsw i64 %33, 25
  %84 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %83
  %85 = add nuw nsw i64 %33, 26
  %86 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %85
  %87 = add nuw nsw i64 %33, 27
  %88 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %87
  %89 = mul nuw nsw i64 %indvars.iv179, 112
  %90 = add nsw i64 %89, %30
  br label %for_begin_ic.inner.preheader

for_begin_ic.inner.preheader:                     ; preds = %for_body_ow.c.outer, %for_end_ic.inner
  %indvars.iv175 = phi i64 [ 0, %for_body_ow.c.outer ], [ %indvars.iv.next176, %for_end_ic.inner ]
  %.lcssa58139 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %135, %for_end_ic.inner ]
  %.lcssa359138 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %143, %for_end_ic.inner ]
  %.lcssa561137 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %151, %for_end_ic.inner ]
  %.lcssa763136 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %159, %for_end_ic.inner ]
  %.lcssa965135 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %167, %for_end_ic.inner ]
  %.lcssa1167134 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %175, %for_end_ic.inner ]
  %.lcssa1369133 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %183, %for_end_ic.inner ]
  %.lcssa1571132 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %191, %for_end_ic.inner ]
  %.lcssa1773131 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %199, %for_end_ic.inner ]
  %.lcssa1975130 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %207, %for_end_ic.inner ]
  %.lcssa2177129 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %215, %for_end_ic.inner ]
  %.lcssa2379128 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %223, %for_end_ic.inner ]
  %.lcssa2581127 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %231, %for_end_ic.inner ]
  %.lcssa2783126 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %239, %for_end_ic.inner ]
  %.lcssa2985125 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %247, %for_end_ic.inner ]
  %.lcssa3187124 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %255, %for_end_ic.inner ]
  %.lcssa3389123 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %263, %for_end_ic.inner ]
  %.lcssa3591122 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %271, %for_end_ic.inner ]
  %.lcssa3793121 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %279, %for_end_ic.inner ]
  %.lcssa3995120 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %287, %for_end_ic.inner ]
  %.lcssa4197119 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %295, %for_end_ic.inner ]
  %.lcssa4399118 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %303, %for_end_ic.inner ]
  %.lcssa45101117 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %311, %for_end_ic.inner ]
  %.lcssa47103116 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %319, %for_end_ic.inner ]
  %.lcssa49105115 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %327, %for_end_ic.inner ]
  %.lcssa51107114 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %335, %for_end_ic.inner ]
  %.lcssa53109113 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %343, %for_end_ic.inner ]
  %.lcssa55111112 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %351, %for_end_ic.inner ]
  %91 = shl nsw i64 %indvars.iv175, 4
  %92 = add nuw nsw i64 %91, %29
  %93 = mul nuw nsw i64 %indvars.iv175, 12544
  %94 = add nsw i64 %90, %93
  br label %for_body_ic.inner

for_end_ic.outer:                                 ; preds = %for_end_ic.inner
  store <4 x i16> %135, ptr %34, align 16, !tbaa !7629
  store <4 x i16> %143, ptr %36, align 8, !tbaa !7629
  store <4 x i16> %151, ptr %38, align 16, !tbaa !7629
  store <4 x i16> %159, ptr %40, align 8, !tbaa !7629
  store <4 x i16> %167, ptr %42, align 16, !tbaa !7629
  store <4 x i16> %175, ptr %44, align 8, !tbaa !7629
  store <4 x i16> %183, ptr %46, align 16, !tbaa !7629
  store <4 x i16> %191, ptr %48, align 8, !tbaa !7629
  store <4 x i16> %199, ptr %50, align 16, !tbaa !7629
  store <4 x i16> %207, ptr %52, align 8, !tbaa !7629
  store <4 x i16> %215, ptr %54, align 16, !tbaa !7629
  store <4 x i16> %223, ptr %56, align 8, !tbaa !7629
  store <4 x i16> %231, ptr %58, align 16, !tbaa !7629
  store <4 x i16> %239, ptr %60, align 8, !tbaa !7629
  store <4 x i16> %247, ptr %62, align 16, !tbaa !7629
  store <4 x i16> %255, ptr %64, align 8, !tbaa !7629
  store <4 x i16> %263, ptr %66, align 16, !tbaa !7629
  store <4 x i16> %271, ptr %68, align 8, !tbaa !7629
  store <4 x i16> %279, ptr %70, align 16, !tbaa !7629
  store <4 x i16> %287, ptr %72, align 8, !tbaa !7629
  store <4 x i16> %295, ptr %74, align 16, !tbaa !7629
  store <4 x i16> %303, ptr %76, align 8, !tbaa !7629
  store <4 x i16> %311, ptr %78, align 16, !tbaa !7629
  store <4 x i16> %319, ptr %80, align 8, !tbaa !7629
  store <4 x i16> %327, ptr %82, align 16, !tbaa !7629
  store <4 x i16> %335, ptr %84, align 8, !tbaa !7629
  store <4 x i16> %343, ptr %86, align 16, !tbaa !7629
  store <4 x i16> %351, ptr %88, align 8, !tbaa !7629
  br i1 %32, label %for_body_ow.c.outer, label %for_begin_ax3.outer.preheader, !prof !18

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %95 = phi <4 x i16> [ %.lcssa58139, %for_begin_ic.inner.preheader ], [ %135, %for_body_ic.inner ]
  %96 = phi <4 x i16> [ %.lcssa359138, %for_begin_ic.inner.preheader ], [ %143, %for_body_ic.inner ]
  %97 = phi <4 x i16> [ %.lcssa561137, %for_begin_ic.inner.preheader ], [ %151, %for_body_ic.inner ]
  %98 = phi <4 x i16> [ %.lcssa763136, %for_begin_ic.inner.preheader ], [ %159, %for_body_ic.inner ]
  %99 = phi <4 x i16> [ %.lcssa965135, %for_begin_ic.inner.preheader ], [ %167, %for_body_ic.inner ]
  %100 = phi <4 x i16> [ %.lcssa1167134, %for_begin_ic.inner.preheader ], [ %175, %for_body_ic.inner ]
  %101 = phi <4 x i16> [ %.lcssa1369133, %for_begin_ic.inner.preheader ], [ %183, %for_body_ic.inner ]
  %102 = phi <4 x i16> [ %.lcssa1571132, %for_begin_ic.inner.preheader ], [ %191, %for_body_ic.inner ]
  %103 = phi <4 x i16> [ %.lcssa1773131, %for_begin_ic.inner.preheader ], [ %199, %for_body_ic.inner ]
  %104 = phi <4 x i16> [ %.lcssa1975130, %for_begin_ic.inner.preheader ], [ %207, %for_body_ic.inner ]
  %105 = phi <4 x i16> [ %.lcssa2177129, %for_begin_ic.inner.preheader ], [ %215, %for_body_ic.inner ]
  %106 = phi <4 x i16> [ %.lcssa2379128, %for_begin_ic.inner.preheader ], [ %223, %for_body_ic.inner ]
  %107 = phi <4 x i16> [ %.lcssa2581127, %for_begin_ic.inner.preheader ], [ %231, %for_body_ic.inner ]
  %108 = phi <4 x i16> [ %.lcssa2783126, %for_begin_ic.inner.preheader ], [ %239, %for_body_ic.inner ]
  %109 = phi <4 x i16> [ %.lcssa2985125, %for_begin_ic.inner.preheader ], [ %247, %for_body_ic.inner ]
  %110 = phi <4 x i16> [ %.lcssa3187124, %for_begin_ic.inner.preheader ], [ %255, %for_body_ic.inner ]
  %111 = phi <4 x i16> [ %.lcssa3389123, %for_begin_ic.inner.preheader ], [ %263, %for_body_ic.inner ]
  %112 = phi <4 x i16> [ %.lcssa3591122, %for_begin_ic.inner.preheader ], [ %271, %for_body_ic.inner ]
  %113 = phi <4 x i16> [ %.lcssa3793121, %for_begin_ic.inner.preheader ], [ %279, %for_body_ic.inner ]
  %114 = phi <4 x i16> [ %.lcssa3995120, %for_begin_ic.inner.preheader ], [ %287, %for_body_ic.inner ]
  %115 = phi <4 x i16> [ %.lcssa4197119, %for_begin_ic.inner.preheader ], [ %295, %for_body_ic.inner ]
  %116 = phi <4 x i16> [ %.lcssa4399118, %for_begin_ic.inner.preheader ], [ %303, %for_body_ic.inner ]
  %117 = phi <4 x i16> [ %.lcssa45101117, %for_begin_ic.inner.preheader ], [ %311, %for_body_ic.inner ]
  %118 = phi <4 x i16> [ %.lcssa47103116, %for_begin_ic.inner.preheader ], [ %319, %for_body_ic.inner ]
  %119 = phi <4 x i16> [ %.lcssa49105115, %for_begin_ic.inner.preheader ], [ %327, %for_body_ic.inner ]
  %120 = phi <4 x i16> [ %.lcssa51107114, %for_begin_ic.inner.preheader ], [ %335, %for_body_ic.inner ]
  %121 = phi <4 x i16> [ %.lcssa53109113, %for_begin_ic.inner.preheader ], [ %343, %for_body_ic.inner ]
  %122 = phi <4 x i16> [ %.lcssa55111112, %for_begin_ic.inner.preheader ], [ %351, %for_body_ic.inner ]
  %123 = shl nuw nsw i64 %indvars.iv, 2
  %124 = add nuw nsw i64 %92, %123
  %125 = add nsw i64 %94, %indvars.iv
  %126 = getelementptr inbounds i8, ptr %p1, i64 %124
  %127 = load <4 x i8>, ptr %126, align 4, !tbaa !7631
  %128 = sext <4 x i8> %127 to <4 x i16>
  %129 = getelementptr inbounds i8, ptr %p0, i64 %125
  %130 = load i8, ptr %129, align 1, !tbaa !7633
  %131 = insertelement <4 x i8> undef, i8 %130, i64 0
  %132 = shufflevector <4 x i8> %131, <4 x i8> undef, <4 x i32> zeroinitializer
  %133 = sext <4 x i8> %132 to <4 x i16>
  %134 = mul nsw <4 x i16> %133, %128
  %135 = add <4 x i16> %134, %95
  %136 = add nsw i64 %125, 4
  %137 = getelementptr inbounds i8, ptr %p0, i64 %136
  %138 = load i8, ptr %137, align 1, !tbaa !7633
  %139 = insertelement <4 x i8> undef, i8 %138, i64 0
  %140 = shufflevector <4 x i8> %139, <4 x i8> undef, <4 x i32> zeroinitializer
  %141 = sext <4 x i8> %140 to <4 x i16>
  %142 = mul nsw <4 x i16> %141, %128
  %143 = add <4 x i16> %142, %96
  %144 = add nsw i64 %125, 8
  %145 = getelementptr inbounds i8, ptr %p0, i64 %144
  %146 = load i8, ptr %145, align 1, !tbaa !7633
  %147 = insertelement <4 x i8> undef, i8 %146, i64 0
  %148 = shufflevector <4 x i8> %147, <4 x i8> undef, <4 x i32> zeroinitializer
  %149 = sext <4 x i8> %148 to <4 x i16>
  %150 = mul nsw <4 x i16> %149, %128
  %151 = add <4 x i16> %150, %97
  %152 = add nsw i64 %125, 12
  %153 = getelementptr inbounds i8, ptr %p0, i64 %152
  %154 = load i8, ptr %153, align 1, !tbaa !7633
  %155 = insertelement <4 x i8> undef, i8 %154, i64 0
  %156 = shufflevector <4 x i8> %155, <4 x i8> undef, <4 x i32> zeroinitializer
  %157 = sext <4 x i8> %156 to <4 x i16>
  %158 = mul nsw <4 x i16> %157, %128
  %159 = add <4 x i16> %158, %98
  %160 = add nsw i64 %125, 16
  %161 = getelementptr inbounds i8, ptr %p0, i64 %160
  %162 = load i8, ptr %161, align 1, !tbaa !7633
  %163 = insertelement <4 x i8> undef, i8 %162, i64 0
  %164 = shufflevector <4 x i8> %163, <4 x i8> undef, <4 x i32> zeroinitializer
  %165 = sext <4 x i8> %164 to <4 x i16>
  %166 = mul nsw <4 x i16> %165, %128
  %167 = add <4 x i16> %166, %99
  %168 = add nsw i64 %125, 20
  %169 = getelementptr inbounds i8, ptr %p0, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !7633
  %171 = insertelement <4 x i8> undef, i8 %170, i64 0
  %172 = shufflevector <4 x i8> %171, <4 x i8> undef, <4 x i32> zeroinitializer
  %173 = sext <4 x i8> %172 to <4 x i16>
  %174 = mul nsw <4 x i16> %173, %128
  %175 = add <4 x i16> %174, %100
  %176 = add nsw i64 %125, 24
  %177 = getelementptr inbounds i8, ptr %p0, i64 %176
  %178 = load i8, ptr %177, align 1, !tbaa !7633
  %179 = insertelement <4 x i8> undef, i8 %178, i64 0
  %180 = shufflevector <4 x i8> %179, <4 x i8> undef, <4 x i32> zeroinitializer
  %181 = sext <4 x i8> %180 to <4 x i16>
  %182 = mul nsw <4 x i16> %181, %128
  %183 = add <4 x i16> %182, %101
  %184 = add nsw i64 %125, 28
  %185 = getelementptr inbounds i8, ptr %p0, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !7633
  %187 = insertelement <4 x i8> undef, i8 %186, i64 0
  %188 = shufflevector <4 x i8> %187, <4 x i8> undef, <4 x i32> zeroinitializer
  %189 = sext <4 x i8> %188 to <4 x i16>
  %190 = mul nsw <4 x i16> %189, %128
  %191 = add <4 x i16> %190, %102
  %192 = add nsw i64 %125, 32
  %193 = getelementptr inbounds i8, ptr %p0, i64 %192
  %194 = load i8, ptr %193, align 1, !tbaa !7633
  %195 = insertelement <4 x i8> undef, i8 %194, i64 0
  %196 = shufflevector <4 x i8> %195, <4 x i8> undef, <4 x i32> zeroinitializer
  %197 = sext <4 x i8> %196 to <4 x i16>
  %198 = mul nsw <4 x i16> %197, %128
  %199 = add <4 x i16> %198, %103
  %200 = add nsw i64 %125, 36
  %201 = getelementptr inbounds i8, ptr %p0, i64 %200
  %202 = load i8, ptr %201, align 1, !tbaa !7633
  %203 = insertelement <4 x i8> undef, i8 %202, i64 0
  %204 = shufflevector <4 x i8> %203, <4 x i8> undef, <4 x i32> zeroinitializer
  %205 = sext <4 x i8> %204 to <4 x i16>
  %206 = mul nsw <4 x i16> %205, %128
  %207 = add <4 x i16> %206, %104
  %208 = add nsw i64 %125, 40
  %209 = getelementptr inbounds i8, ptr %p0, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !7633
  %211 = insertelement <4 x i8> undef, i8 %210, i64 0
  %212 = shufflevector <4 x i8> %211, <4 x i8> undef, <4 x i32> zeroinitializer
  %213 = sext <4 x i8> %212 to <4 x i16>
  %214 = mul nsw <4 x i16> %213, %128
  %215 = add <4 x i16> %214, %105
  %216 = add nsw i64 %125, 44
  %217 = getelementptr inbounds i8, ptr %p0, i64 %216
  %218 = load i8, ptr %217, align 1, !tbaa !7633
  %219 = insertelement <4 x i8> undef, i8 %218, i64 0
  %220 = shufflevector <4 x i8> %219, <4 x i8> undef, <4 x i32> zeroinitializer
  %221 = sext <4 x i8> %220 to <4 x i16>
  %222 = mul nsw <4 x i16> %221, %128
  %223 = add <4 x i16> %222, %106
  %224 = add nsw i64 %125, 48
  %225 = getelementptr inbounds i8, ptr %p0, i64 %224
  %226 = load i8, ptr %225, align 1, !tbaa !7633
  %227 = insertelement <4 x i8> undef, i8 %226, i64 0
  %228 = shufflevector <4 x i8> %227, <4 x i8> undef, <4 x i32> zeroinitializer
  %229 = sext <4 x i8> %228 to <4 x i16>
  %230 = mul nsw <4 x i16> %229, %128
  %231 = add <4 x i16> %230, %107
  %232 = add nsw i64 %125, 52
  %233 = getelementptr inbounds i8, ptr %p0, i64 %232
  %234 = load i8, ptr %233, align 1, !tbaa !7633
  %235 = insertelement <4 x i8> undef, i8 %234, i64 0
  %236 = shufflevector <4 x i8> %235, <4 x i8> undef, <4 x i32> zeroinitializer
  %237 = sext <4 x i8> %236 to <4 x i16>
  %238 = mul nsw <4 x i16> %237, %128
  %239 = add <4 x i16> %238, %108
  %240 = add nsw i64 %125, 56
  %241 = getelementptr inbounds i8, ptr %p0, i64 %240
  %242 = load i8, ptr %241, align 1, !tbaa !7633
  %243 = insertelement <4 x i8> undef, i8 %242, i64 0
  %244 = shufflevector <4 x i8> %243, <4 x i8> undef, <4 x i32> zeroinitializer
  %245 = sext <4 x i8> %244 to <4 x i16>
  %246 = mul nsw <4 x i16> %245, %128
  %247 = add <4 x i16> %246, %109
  %248 = add nsw i64 %125, 60
  %249 = getelementptr inbounds i8, ptr %p0, i64 %248
  %250 = load i8, ptr %249, align 1, !tbaa !7633
  %251 = insertelement <4 x i8> undef, i8 %250, i64 0
  %252 = shufflevector <4 x i8> %251, <4 x i8> undef, <4 x i32> zeroinitializer
  %253 = sext <4 x i8> %252 to <4 x i16>
  %254 = mul nsw <4 x i16> %253, %128
  %255 = add <4 x i16> %254, %110
  %256 = add nsw i64 %125, 64
  %257 = getelementptr inbounds i8, ptr %p0, i64 %256
  %258 = load i8, ptr %257, align 1, !tbaa !7633
  %259 = insertelement <4 x i8> undef, i8 %258, i64 0
  %260 = shufflevector <4 x i8> %259, <4 x i8> undef, <4 x i32> zeroinitializer
  %261 = sext <4 x i8> %260 to <4 x i16>
  %262 = mul nsw <4 x i16> %261, %128
  %263 = add <4 x i16> %262, %111
  %264 = add nsw i64 %125, 68
  %265 = getelementptr inbounds i8, ptr %p0, i64 %264
  %266 = load i8, ptr %265, align 1, !tbaa !7633
  %267 = insertelement <4 x i8> undef, i8 %266, i64 0
  %268 = shufflevector <4 x i8> %267, <4 x i8> undef, <4 x i32> zeroinitializer
  %269 = sext <4 x i8> %268 to <4 x i16>
  %270 = mul nsw <4 x i16> %269, %128
  %271 = add <4 x i16> %270, %112
  %272 = add nsw i64 %125, 72
  %273 = getelementptr inbounds i8, ptr %p0, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !7633
  %275 = insertelement <4 x i8> undef, i8 %274, i64 0
  %276 = shufflevector <4 x i8> %275, <4 x i8> undef, <4 x i32> zeroinitializer
  %277 = sext <4 x i8> %276 to <4 x i16>
  %278 = mul nsw <4 x i16> %277, %128
  %279 = add <4 x i16> %278, %113
  %280 = add nsw i64 %125, 76
  %281 = getelementptr inbounds i8, ptr %p0, i64 %280
  %282 = load i8, ptr %281, align 1, !tbaa !7633
  %283 = insertelement <4 x i8> undef, i8 %282, i64 0
  %284 = shufflevector <4 x i8> %283, <4 x i8> undef, <4 x i32> zeroinitializer
  %285 = sext <4 x i8> %284 to <4 x i16>
  %286 = mul nsw <4 x i16> %285, %128
  %287 = add <4 x i16> %286, %114
  %288 = add nsw i64 %125, 80
  %289 = getelementptr inbounds i8, ptr %p0, i64 %288
  %290 = load i8, ptr %289, align 1, !tbaa !7633
  %291 = insertelement <4 x i8> undef, i8 %290, i64 0
  %292 = shufflevector <4 x i8> %291, <4 x i8> undef, <4 x i32> zeroinitializer
  %293 = sext <4 x i8> %292 to <4 x i16>
  %294 = mul nsw <4 x i16> %293, %128
  %295 = add <4 x i16> %294, %115
  %296 = add nsw i64 %125, 84
  %297 = getelementptr inbounds i8, ptr %p0, i64 %296
  %298 = load i8, ptr %297, align 1, !tbaa !7633
  %299 = insertelement <4 x i8> undef, i8 %298, i64 0
  %300 = shufflevector <4 x i8> %299, <4 x i8> undef, <4 x i32> zeroinitializer
  %301 = sext <4 x i8> %300 to <4 x i16>
  %302 = mul nsw <4 x i16> %301, %128
  %303 = add <4 x i16> %302, %116
  %304 = add nsw i64 %125, 88
  %305 = getelementptr inbounds i8, ptr %p0, i64 %304
  %306 = load i8, ptr %305, align 1, !tbaa !7633
  %307 = insertelement <4 x i8> undef, i8 %306, i64 0
  %308 = shufflevector <4 x i8> %307, <4 x i8> undef, <4 x i32> zeroinitializer
  %309 = sext <4 x i8> %308 to <4 x i16>
  %310 = mul nsw <4 x i16> %309, %128
  %311 = add <4 x i16> %310, %117
  %312 = add nsw i64 %125, 92
  %313 = getelementptr inbounds i8, ptr %p0, i64 %312
  %314 = load i8, ptr %313, align 1, !tbaa !7633
  %315 = insertelement <4 x i8> undef, i8 %314, i64 0
  %316 = shufflevector <4 x i8> %315, <4 x i8> undef, <4 x i32> zeroinitializer
  %317 = sext <4 x i8> %316 to <4 x i16>
  %318 = mul nsw <4 x i16> %317, %128
  %319 = add <4 x i16> %318, %118
  %320 = add nsw i64 %125, 96
  %321 = getelementptr inbounds i8, ptr %p0, i64 %320
  %322 = load i8, ptr %321, align 1, !tbaa !7633
  %323 = insertelement <4 x i8> undef, i8 %322, i64 0
  %324 = shufflevector <4 x i8> %323, <4 x i8> undef, <4 x i32> zeroinitializer
  %325 = sext <4 x i8> %324 to <4 x i16>
  %326 = mul nsw <4 x i16> %325, %128
  %327 = add <4 x i16> %326, %119
  %328 = add nsw i64 %125, 100
  %329 = getelementptr inbounds i8, ptr %p0, i64 %328
  %330 = load i8, ptr %329, align 1, !tbaa !7633
  %331 = insertelement <4 x i8> undef, i8 %330, i64 0
  %332 = shufflevector <4 x i8> %331, <4 x i8> undef, <4 x i32> zeroinitializer
  %333 = sext <4 x i8> %332 to <4 x i16>
  %334 = mul nsw <4 x i16> %333, %128
  %335 = add <4 x i16> %334, %120
  %336 = add nsw i64 %125, 104
  %337 = getelementptr inbounds i8, ptr %p0, i64 %336
  %338 = load i8, ptr %337, align 1, !tbaa !7633
  %339 = insertelement <4 x i8> undef, i8 %338, i64 0
  %340 = shufflevector <4 x i8> %339, <4 x i8> undef, <4 x i32> zeroinitializer
  %341 = sext <4 x i8> %340 to <4 x i16>
  %342 = mul nsw <4 x i16> %341, %128
  %343 = add <4 x i16> %342, %121
  %344 = add nsw i64 %125, 108
  %345 = getelementptr inbounds i8, ptr %p0, i64 %344
  %346 = load i8, ptr %345, align 1, !tbaa !7633
  %347 = insertelement <4 x i8> undef, i8 %346, i64 0
  %348 = shufflevector <4 x i8> %347, <4 x i8> undef, <4 x i32> zeroinitializer
  %349 = sext <4 x i8> %348 to <4 x i16>
  %350 = mul nsw <4 x i16> %349, %128
  %351 = add <4 x i16> %350, %122
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !59

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next176 = add nuw nsw i64 %indvars.iv175, 1
  %exitcond178.not = icmp eq i64 %indvars.iv.next176, 16
  br i1 %exitcond178.not, label %for_end_ic.outer, label %for_begin_ic.inner.preheader, !prof !59

for_body_ax3.inner:                               ; preds = %for_body_ax3.inner, %for_begin_ax3.outer.preheader
  %indvars.iv183 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next184.1275, %for_body_ax3.inner ]
  %352 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv183
  %353 = load <4 x i16>, ptr %352, align 16, !tbaa !7629
  %354 = add <4 x i16> %23, %353
  %355 = ashr <4 x i16> %354, %20
  %356 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %355, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %357 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %356, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %358 = trunc <4 x i16> %357 to <4 x i8>
  %359 = shl nuw nsw i64 %indvars.iv183, 2
  %360 = add nsw i64 %31, %359
  %361 = getelementptr inbounds i8, ptr %T_cast, i64 %360
  store <4 x i8> %358, ptr %361, align 4, !tbaa !7635
  %indvars.iv.next184 = or i64 %indvars.iv183, 1
  %362 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv.next184
  %363 = load <4 x i16>, ptr %362, align 8, !tbaa !7629
  %364 = add <4 x i16> %23, %363
  %365 = ashr <4 x i16> %364, %20
  %366 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %365, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %367 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %366, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %368 = trunc <4 x i16> %367 to <4 x i8>
  %369 = shl nuw nsw i64 %indvars.iv.next184, 2
  %370 = add nsw i64 %31, %369
  %371 = getelementptr inbounds i8, ptr %T_cast, i64 %370
  store <4 x i8> %368, ptr %371, align 4, !tbaa !7635
  %indvars.iv.next184.1275 = add nuw nsw i64 %indvars.iv183, 2
  %exitcond186.not.1 = icmp eq i64 %indvars.iv.next184.1275, 28
  br i1 %exitcond186.not.1, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !7452

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %372 = add nsw i64 %31, 112
  br label %for_body_ax3.inner.1

for_body_ax3.inner.1:                             ; preds = %for_body_ax3.inner.1, %for_end_ax3.inner
  %indvars.iv183.1 = phi i64 [ 0, %for_end_ax3.inner ], [ %indvars.iv.next184.1.1, %for_body_ax3.inner.1 ]
  %373 = add nuw nsw i64 %indvars.iv183.1, 28
  %374 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %373
  %375 = load <4 x i16>, ptr %374, align 16, !tbaa !7629
  %376 = add <4 x i16> %23, %375
  %377 = ashr <4 x i16> %376, %20
  %378 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %377, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %379 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %378, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %380 = trunc <4 x i16> %379 to <4 x i8>
  %381 = shl nuw nsw i64 %indvars.iv183.1, 2
  %382 = add nsw i64 %372, %381
  %383 = getelementptr inbounds i8, ptr %T_cast, i64 %382
  store <4 x i8> %380, ptr %383, align 4, !tbaa !7635
  %384 = add nuw nsw i64 %indvars.iv183.1, 29
  %385 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %384
  %386 = load <4 x i16>, ptr %385, align 8, !tbaa !7629
  %387 = add <4 x i16> %23, %386
  %388 = ashr <4 x i16> %387, %20
  %389 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %388, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %390 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %389, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %391 = trunc <4 x i16> %390 to <4 x i8>
  %indvars.iv.next184.1 = shl i64 %indvars.iv183.1, 2
  %392 = or i64 %indvars.iv.next184.1, 4
  %393 = add nsw i64 %372, %392
  %394 = getelementptr inbounds i8, ptr %T_cast, i64 %393
  store <4 x i8> %391, ptr %394, align 4, !tbaa !7635
  %indvars.iv.next184.1.1 = add nuw nsw i64 %indvars.iv183.1, 2
  %exitcond186.1.not.1 = icmp eq i64 %indvars.iv.next184.1.1, 28
  br i1 %exitcond186.1.not.1, label %for_end_ax3.inner.1, label %for_body_ax3.inner.1, !prof !7452

for_end_ax3.inner.1:                              ; preds = %for_body_ax3.inner.1
  %indvars.iv.next191 = add nsw i64 %indvars.iv190, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next191 to i32
  %exitcond192.not = icmp eq i32 %17, %lftr.wideiv
  br i1 %exitcond192.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_begin_ow.c.outer.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_1_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.21, align 8
  %7 = alloca %closure_loop_parallel_i0.i1.fused.i2.fused.20, align 8
  %8 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pad = tail call ptr %8(i32 1, i32 %0, i64 215296, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pad, i64 64) ]
  %9 = icmp eq ptr %data_pad, null
  br i1 %9, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end2, %call_end, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %12, %if_end ], [ %19, %call_end ], [ %., %call_end2 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %data_pad, ptr %7, align 8
  %10 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.20, ptr %7, i64 0, i32 1
  store ptr %1, ptr %10, align 8
  %11 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %12 = call i32 %11(ptr nonnull @__tvm_parallel_lambda.1163, ptr nonnull %7, i32 0)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %call_end, label %common.ret, !prof !18

call_end:                                         ; preds = %if_end
  store ptr %data_pad, ptr %6, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.21, ptr %6, i64 0, i32 1
  store ptr %2, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.21, ptr %6, i64 0, i32 2
  store ptr %3, ptr %15, align 8
  %16 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.21, ptr %6, i64 0, i32 3
  store ptr %4, ptr %16, align 8
  %17 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.21, ptr %6, i64 0, i32 4
  store ptr %5, ptr %17, align 8
  %18 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %19 = call i32 %18(ptr nonnull @__tvm_parallel_lambda.1164, ptr nonnull %6, i32 0)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %call_end2, label %common.ret, !prof !18

call_end2:                                        ; preds = %call_end
  %21 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %22 = call i32 %21(i32 1, i32 %0, ptr nonnull %data_pad)
  %.not = icmp ne i32 %22, 0
  %. = sext i1 %.not to i32
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1163(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.20, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 927
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 928)
  %9 = mul nsw i32 %5, %task_id
  %.fr1 = freeze i32 %9
  %10 = tail call i32 @llvm.smin.i32(i32 %.fr1, i32 928)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_i3.preheader.preheader, label %for_end_i0.i1.fused.i2.fused, !prof !18

for_begin_i3.preheader.preheader:                 ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %.fr1, i32 928)
  %smin = sext i32 %12 to i64
  %13 = sub i32 %8, %10
  br label %for_begin_i3.preheader

for_begin_i3.preheader:                           ; preds = %for_begin_i3.preheader.preheader, %for_end_i3
  %indvars.iv9 = phi i64 [ %smin, %for_begin_i3.preheader.preheader ], [ %indvars.iv.next10, %for_end_i3 ]
  %indvar = phi i32 [ 0, %for_begin_i3.preheader.preheader ], [ %indvar.next, %for_end_i3 ]
  %14 = trunc i64 %indvars.iv9 to i32
  %cse_var_2 = srem i32 %14, 58
  %15 = add nsw i32 %cse_var_2, -1
  %16 = icmp ult i32 %15, 56
  %17 = mul nsw i64 %indvars.iv9, 232
  %18 = mul nuw nsw i32 %cse_var_2, 224
  %19 = sdiv i32 %14, 58
  %20 = mul nsw i32 %19, 12544
  %21 = add nsw i32 %18, -228
  %22 = add i32 %21, %20
  br i1 %16, label %for_body_i3.us, label %for_body_i3.preheader

for_body_i3.preheader:                            ; preds = %for_begin_i3.preheader
  %23 = add i32 %10, %indvar
  %24 = mul i32 %23, 232
  %25 = sext i32 %24 to i64
  %scevgep = getelementptr i8, ptr %data_pad, i64 %25
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(232) %scevgep, i8 0, i64 232, i1 false), !tbaa !7637
  br label %for_end_i3

for_body_i3.us:                                   ; preds = %for_begin_i3.preheader, %if_end.us.1
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %if_end.us.1 ], [ 0, %for_begin_i3.preheader ]
  %26 = shl nuw nsw i64 %indvars.iv, 2
  %27 = trunc i64 %indvars.iv to i32
  %cond = icmp eq i32 %27, 0
  br i1 %cond, label %if_end.us, label %if_then.us

if_then.us:                                       ; preds = %for_body_i3.us
  %28 = trunc i64 %26 to i32
  %29 = add i32 %22, %28
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, ptr %p0, i64 %30
  %32 = load <4 x i8>, ptr %31, align 4, !tbaa !7639
  br label %if_end.us

if_end.us:                                        ; preds = %for_body_i3.us, %if_then.us
  %33 = phi <4 x i8> [ %32, %if_then.us ], [ zeroinitializer, %for_body_i3.us ]
  %34 = add nsw i64 %26, %17
  %35 = getelementptr inbounds i8, ptr %data_pad, i64 %34
  store <4 x i8> %33, ptr %35, align 4, !tbaa !7637
  %indvars.iv.next = or i64 %indvars.iv, 1
  %36 = shl nuw nsw i64 %indvars.iv.next, 2
  %37 = trunc i64 %indvars.iv.next to i32
  %cond12 = icmp eq i32 %37, 57
  br i1 %cond12, label %if_end.us.1, label %if_then.us.1

if_then.us.1:                                     ; preds = %if_end.us
  %38 = trunc i64 %36 to i32
  %39 = add i32 %22, %38
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, ptr %p0, i64 %40
  %42 = load <4 x i8>, ptr %41, align 4, !tbaa !7639
  br label %if_end.us.1

if_end.us.1:                                      ; preds = %if_end.us, %if_then.us.1
  %43 = phi <4 x i8> [ %42, %if_then.us.1 ], [ zeroinitializer, %if_end.us ]
  %44 = add nsw i64 %36, %17
  %45 = getelementptr inbounds i8, ptr %data_pad, i64 %44
  store <4 x i8> %43, ptr %45, align 4, !tbaa !7637
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 58
  br i1 %exitcond.not.1, label %for_end_i3, label %for_body_i3.us, !prof !7452

for_end_i0.i1.fused.i2.fused:                     ; preds = %for_end_i3, %parallel_closure_entry
  ret i32 0

for_end_i3:                                       ; preds = %if_end.us.1, %for_body_i3.preheader
  %indvars.iv.next10 = add nsw i64 %indvars.iv9, 1
  %indvar.next = add nuw i32 %indvar, 1
  %exitcond11.not = icmp eq i32 %indvar.next, %13
  br i1 %exitcond11.not, label %for_end_i0.i1.fused.i2.fused, label %for_begin_i3.preheader, !prof !59
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1164(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %conv2d_NCHWc2 = alloca [56 x <4 x i16>], align 16
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.21, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.21, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 895
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 896)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_begin_ow.outer.preheader.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ow.outer.preheader.lr.ph:               ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.21, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.21, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = load i16, ptr %p3, align 64, !tbaa !7641
  %16 = insertelement <4 x i16> undef, i16 %15, i64 0
  %17 = shufflevector <4 x i16> %16, <4 x i16> undef, <4 x i32> zeroinitializer
  %18 = load i16, ptr %p2, align 64, !tbaa !7653
  %19 = insertelement <4 x i16> undef, i16 %18, i64 0
  %20 = shufflevector <4 x i16> %19, <4 x i16> undef, <4 x i32> zeroinitializer
  %21 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %smin = sext i32 %21 to i64
  %22 = add i32 %9, %21
  %23 = sub i32 %22, %11
  br label %for_begin_ow.outer.preheader

for_begin_ow.outer.preheader:                     ; preds = %for_begin_ow.outer.preheader.lr.ph, %for_end_ax3.inner.1
  %indvars.iv371 = phi i64 [ %smin, %for_begin_ow.outer.preheader.lr.ph ], [ %indvars.iv.next372, %for_end_ax3.inner.1 ]
  %24 = trunc i64 %indvars.iv371 to i32
  %25 = sdiv i32 %24, 56
  %26 = mul nsw i32 %25, 2304
  %27 = srem i32 %24, 56
  %28 = sext i32 %26 to i64
  br label %for_body_ow.outer

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3.inner.1, %parallel_closure_entry
  ret i32 0

for_begin_ax3.outer.preheader:                    ; preds = %for_begin_ow.inner.preheader
  %29 = mul nsw i64 %indvars.iv371, 224
  br label %for_body_ax3.inner

for_body_ow.outer:                                ; preds = %for_begin_ow.outer.preheader, %for_begin_ow.inner.preheader
  %30 = phi i1 [ true, %for_begin_ow.outer.preheader ], [ false, %for_begin_ow.inner.preheader ]
  %indvar = phi i64 [ 0, %for_begin_ow.outer.preheader ], [ 1, %for_begin_ow.inner.preheader ]
  %31 = mul nuw nsw i64 %indvar, 224
  %scevgep = getelementptr i8, ptr %conv2d_NCHWc2, i64 %31
  %32 = mul nuw nsw i64 %indvar, 112
  br label %for_begin_kh.preheader

for_begin_ow.inner.preheader:                     ; preds = %for_end_kh
  store <4 x i16> %85, ptr %scevgep, align 16
  %conv2d_NCHWc.global1.sroa.3.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 8
  store <4 x i16> %93, ptr %conv2d_NCHWc.global1.sroa.3.0.scevgep.sroa_idx, align 8
  %conv2d_NCHWc.global1.sroa.5.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 16
  store <4 x i16> %101, ptr %conv2d_NCHWc.global1.sroa.5.0.scevgep.sroa_idx, align 16
  %conv2d_NCHWc.global1.sroa.7.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 24
  store <4 x i16> %109, ptr %conv2d_NCHWc.global1.sroa.7.0.scevgep.sroa_idx, align 8
  %conv2d_NCHWc.global1.sroa.9.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 32
  store <4 x i16> %117, ptr %conv2d_NCHWc.global1.sroa.9.0.scevgep.sroa_idx, align 16
  %conv2d_NCHWc.global1.sroa.11.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 40
  store <4 x i16> %125, ptr %conv2d_NCHWc.global1.sroa.11.0.scevgep.sroa_idx, align 8
  %conv2d_NCHWc.global1.sroa.13.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 48
  store <4 x i16> %133, ptr %conv2d_NCHWc.global1.sroa.13.0.scevgep.sroa_idx, align 16
  %conv2d_NCHWc.global1.sroa.15.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 56
  store <4 x i16> %141, ptr %conv2d_NCHWc.global1.sroa.15.0.scevgep.sroa_idx, align 8
  %conv2d_NCHWc.global1.sroa.17.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 64
  store <4 x i16> %149, ptr %conv2d_NCHWc.global1.sroa.17.0.scevgep.sroa_idx, align 16
  %conv2d_NCHWc.global1.sroa.19.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 72
  store <4 x i16> %157, ptr %conv2d_NCHWc.global1.sroa.19.0.scevgep.sroa_idx, align 8
  %conv2d_NCHWc.global1.sroa.21.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 80
  store <4 x i16> %165, ptr %conv2d_NCHWc.global1.sroa.21.0.scevgep.sroa_idx, align 16
  %conv2d_NCHWc.global1.sroa.23.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 88
  store <4 x i16> %173, ptr %conv2d_NCHWc.global1.sroa.23.0.scevgep.sroa_idx, align 8
  %conv2d_NCHWc.global1.sroa.25.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 96
  store <4 x i16> %181, ptr %conv2d_NCHWc.global1.sroa.25.0.scevgep.sroa_idx, align 16
  %conv2d_NCHWc.global1.sroa.27.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 104
  store <4 x i16> %189, ptr %conv2d_NCHWc.global1.sroa.27.0.scevgep.sroa_idx, align 8
  %conv2d_NCHWc.global1.sroa.29.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 112
  store <4 x i16> %197, ptr %conv2d_NCHWc.global1.sroa.29.0.scevgep.sroa_idx, align 16
  %conv2d_NCHWc.global1.sroa.31.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 120
  store <4 x i16> %205, ptr %conv2d_NCHWc.global1.sroa.31.0.scevgep.sroa_idx, align 8
  %conv2d_NCHWc.global1.sroa.33.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 128
  store <4 x i16> %213, ptr %conv2d_NCHWc.global1.sroa.33.0.scevgep.sroa_idx, align 16
  %conv2d_NCHWc.global1.sroa.35.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 136
  store <4 x i16> %221, ptr %conv2d_NCHWc.global1.sroa.35.0.scevgep.sroa_idx, align 8
  %conv2d_NCHWc.global1.sroa.37.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 144
  store <4 x i16> %229, ptr %conv2d_NCHWc.global1.sroa.37.0.scevgep.sroa_idx, align 16
  %conv2d_NCHWc.global1.sroa.39.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 152
  store <4 x i16> %237, ptr %conv2d_NCHWc.global1.sroa.39.0.scevgep.sroa_idx, align 8
  %conv2d_NCHWc.global1.sroa.41.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 160
  store <4 x i16> %245, ptr %conv2d_NCHWc.global1.sroa.41.0.scevgep.sroa_idx, align 16
  %conv2d_NCHWc.global1.sroa.43.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 168
  store <4 x i16> %253, ptr %conv2d_NCHWc.global1.sroa.43.0.scevgep.sroa_idx, align 8
  %conv2d_NCHWc.global1.sroa.45.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 176
  store <4 x i16> %261, ptr %conv2d_NCHWc.global1.sroa.45.0.scevgep.sroa_idx, align 16
  %conv2d_NCHWc.global1.sroa.47.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 184
  store <4 x i16> %269, ptr %conv2d_NCHWc.global1.sroa.47.0.scevgep.sroa_idx, align 8
  %conv2d_NCHWc.global1.sroa.49.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 192
  store <4 x i16> %277, ptr %conv2d_NCHWc.global1.sroa.49.0.scevgep.sroa_idx, align 16
  %conv2d_NCHWc.global1.sroa.51.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 200
  store <4 x i16> %285, ptr %conv2d_NCHWc.global1.sroa.51.0.scevgep.sroa_idx, align 8
  %conv2d_NCHWc.global1.sroa.53.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 208
  store <4 x i16> %293, ptr %conv2d_NCHWc.global1.sroa.53.0.scevgep.sroa_idx, align 16
  %conv2d_NCHWc.global1.sroa.55.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 216
  store <4 x i16> %301, ptr %conv2d_NCHWc.global1.sroa.55.0.scevgep.sroa_idx, align 8
  br i1 %30, label %for_body_ow.outer, label %for_begin_ax3.outer.preheader, !prof !18

for_begin_kh.preheader:                           ; preds = %for_body_ow.outer, %for_end_kh
  %indvars.iv356 = phi i64 [ 0, %for_body_ow.outer ], [ %indvars.iv.next357, %for_end_kh ]
  %.lcssa58.lcssa141.lcssa225306 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %85, %for_end_kh ]
  %.lcssa360.lcssa143.lcssa227305 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %93, %for_end_kh ]
  %.lcssa561.lcssa145.lcssa229304 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %101, %for_end_kh ]
  %.lcssa763.lcssa146.lcssa231303 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %109, %for_end_kh ]
  %.lcssa965.lcssa148.lcssa232302 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %117, %for_end_kh ]
  %.lcssa1167.lcssa150.lcssa234301 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %125, %for_end_kh ]
  %.lcssa1369.lcssa152.lcssa236300 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %133, %for_end_kh ]
  %.lcssa1571.lcssa154.lcssa238299 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %141, %for_end_kh ]
  %.lcssa1773.lcssa156.lcssa240298 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %149, %for_end_kh ]
  %.lcssa1975.lcssa158.lcssa242297 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %157, %for_end_kh ]
  %.lcssa2177.lcssa160.lcssa244296 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %165, %for_end_kh ]
  %.lcssa2379.lcssa162.lcssa246295 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %173, %for_end_kh ]
  %.lcssa2581.lcssa164.lcssa248294 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %181, %for_end_kh ]
  %.lcssa2783.lcssa166.lcssa250293 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %189, %for_end_kh ]
  %.lcssa2985.lcssa168.lcssa252292 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %197, %for_end_kh ]
  %.lcssa3187.lcssa170.lcssa254291 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %205, %for_end_kh ]
  %.lcssa3389.lcssa172.lcssa256290 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %213, %for_end_kh ]
  %.lcssa3591.lcssa174.lcssa258289 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %221, %for_end_kh ]
  %.lcssa3793.lcssa176.lcssa260288 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %229, %for_end_kh ]
  %.lcssa3995.lcssa178.lcssa262287 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %237, %for_end_kh ]
  %.lcssa4197.lcssa180.lcssa264286 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %245, %for_end_kh ]
  %.lcssa4399.lcssa182.lcssa266285 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %253, %for_end_kh ]
  %.lcssa45101.lcssa184.lcssa268284 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %261, %for_end_kh ]
  %.lcssa47103.lcssa186.lcssa270283 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %269, %for_end_kh ]
  %.lcssa49105.lcssa188.lcssa272282 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %277, %for_end_kh ]
  %.lcssa51107.lcssa190.lcssa274281 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %285, %for_end_kh ]
  %.lcssa53109.lcssa192.lcssa276280 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %293, %for_end_kh ]
  %.lcssa55111.lcssa194.lcssa278279 = phi <4 x i16> [ zeroinitializer, %for_body_ow.outer ], [ %301, %for_end_kh ]
  %33 = mul nuw nsw i64 %indvars.iv356, 144
  %34 = add nsw i64 %33, %28
  %35 = mul nuw nsw i64 %indvars.iv356, 13456
  %36 = add nuw nsw i64 %35, %32
  br label %for_begin_kw.preheader

for_begin_kw.preheader:                           ; preds = %for_begin_kh.preheader, %for_end_kw
  %indvars.iv351 = phi i64 [ 0, %for_begin_kh.preheader ], [ %indvars.iv.next352, %for_end_kw ]
  %.lcssa58.lcssa141222 = phi <4 x i16> [ %.lcssa58.lcssa141.lcssa225306, %for_begin_kh.preheader ], [ %85, %for_end_kw ]
  %.lcssa360.lcssa143221 = phi <4 x i16> [ %.lcssa360.lcssa143.lcssa227305, %for_begin_kh.preheader ], [ %93, %for_end_kw ]
  %.lcssa561.lcssa145220 = phi <4 x i16> [ %.lcssa561.lcssa145.lcssa229304, %for_begin_kh.preheader ], [ %101, %for_end_kw ]
  %.lcssa763.lcssa146219 = phi <4 x i16> [ %.lcssa763.lcssa146.lcssa231303, %for_begin_kh.preheader ], [ %109, %for_end_kw ]
  %.lcssa965.lcssa148218 = phi <4 x i16> [ %.lcssa965.lcssa148.lcssa232302, %for_begin_kh.preheader ], [ %117, %for_end_kw ]
  %.lcssa1167.lcssa150217 = phi <4 x i16> [ %.lcssa1167.lcssa150.lcssa234301, %for_begin_kh.preheader ], [ %125, %for_end_kw ]
  %.lcssa1369.lcssa152216 = phi <4 x i16> [ %.lcssa1369.lcssa152.lcssa236300, %for_begin_kh.preheader ], [ %133, %for_end_kw ]
  %.lcssa1571.lcssa154215 = phi <4 x i16> [ %.lcssa1571.lcssa154.lcssa238299, %for_begin_kh.preheader ], [ %141, %for_end_kw ]
  %.lcssa1773.lcssa156214 = phi <4 x i16> [ %.lcssa1773.lcssa156.lcssa240298, %for_begin_kh.preheader ], [ %149, %for_end_kw ]
  %.lcssa1975.lcssa158213 = phi <4 x i16> [ %.lcssa1975.lcssa158.lcssa242297, %for_begin_kh.preheader ], [ %157, %for_end_kw ]
  %.lcssa2177.lcssa160212 = phi <4 x i16> [ %.lcssa2177.lcssa160.lcssa244296, %for_begin_kh.preheader ], [ %165, %for_end_kw ]
  %.lcssa2379.lcssa162211 = phi <4 x i16> [ %.lcssa2379.lcssa162.lcssa246295, %for_begin_kh.preheader ], [ %173, %for_end_kw ]
  %.lcssa2581.lcssa164210 = phi <4 x i16> [ %.lcssa2581.lcssa164.lcssa248294, %for_begin_kh.preheader ], [ %181, %for_end_kw ]
  %.lcssa2783.lcssa166209 = phi <4 x i16> [ %.lcssa2783.lcssa166.lcssa250293, %for_begin_kh.preheader ], [ %189, %for_end_kw ]
  %.lcssa2985.lcssa168208 = phi <4 x i16> [ %.lcssa2985.lcssa168.lcssa252292, %for_begin_kh.preheader ], [ %197, %for_end_kw ]
  %.lcssa3187.lcssa170207 = phi <4 x i16> [ %.lcssa3187.lcssa170.lcssa254291, %for_begin_kh.preheader ], [ %205, %for_end_kw ]
  %.lcssa3389.lcssa172206 = phi <4 x i16> [ %.lcssa3389.lcssa172.lcssa256290, %for_begin_kh.preheader ], [ %213, %for_end_kw ]
  %.lcssa3591.lcssa174205 = phi <4 x i16> [ %.lcssa3591.lcssa174.lcssa258289, %for_begin_kh.preheader ], [ %221, %for_end_kw ]
  %.lcssa3793.lcssa176204 = phi <4 x i16> [ %.lcssa3793.lcssa176.lcssa260288, %for_begin_kh.preheader ], [ %229, %for_end_kw ]
  %.lcssa3995.lcssa178203 = phi <4 x i16> [ %.lcssa3995.lcssa178.lcssa262287, %for_begin_kh.preheader ], [ %237, %for_end_kw ]
  %.lcssa4197.lcssa180202 = phi <4 x i16> [ %.lcssa4197.lcssa180.lcssa264286, %for_begin_kh.preheader ], [ %245, %for_end_kw ]
  %.lcssa4399.lcssa182201 = phi <4 x i16> [ %.lcssa4399.lcssa182.lcssa266285, %for_begin_kh.preheader ], [ %253, %for_end_kw ]
  %.lcssa45101.lcssa184200 = phi <4 x i16> [ %.lcssa45101.lcssa184.lcssa268284, %for_begin_kh.preheader ], [ %261, %for_end_kw ]
  %.lcssa47103.lcssa186199 = phi <4 x i16> [ %.lcssa47103.lcssa186.lcssa270283, %for_begin_kh.preheader ], [ %269, %for_end_kw ]
  %.lcssa49105.lcssa188198 = phi <4 x i16> [ %.lcssa49105.lcssa188.lcssa272282, %for_begin_kh.preheader ], [ %277, %for_end_kw ]
  %.lcssa51107.lcssa190197 = phi <4 x i16> [ %.lcssa51107.lcssa190.lcssa274281, %for_begin_kh.preheader ], [ %285, %for_end_kw ]
  %.lcssa53109.lcssa192196 = phi <4 x i16> [ %.lcssa53109.lcssa192.lcssa276280, %for_begin_kh.preheader ], [ %293, %for_end_kw ]
  %.lcssa55111.lcssa194195 = phi <4 x i16> [ %.lcssa55111.lcssa194.lcssa278279, %for_begin_kh.preheader ], [ %301, %for_end_kw ]
  %indvars354 = trunc i64 %indvars.iv351 to i32
  %37 = mul nuw nsw i64 %indvars.iv351, 48
  %38 = add nsw i64 %34, %37
  %reass.add = add nsw i32 %27, %indvars354
  %reass.mul = mul i32 %reass.add, 232
  %39 = sext i32 %reass.mul to i64
  %40 = add nsw i64 %36, %39
  br label %for_begin_ic.inner.preheader

for_end_kh:                                       ; preds = %for_end_kw
  %indvars.iv.next357 = add nuw nsw i64 %indvars.iv356, 1
  %exitcond359.not = icmp eq i64 %indvars.iv.next357, 16
  br i1 %exitcond359.not, label %for_begin_ow.inner.preheader, label %for_begin_kh.preheader, !prof !59

for_begin_ic.inner.preheader:                     ; preds = %for_begin_kw.preheader, %for_end_ic.inner
  %indvars.iv347 = phi i64 [ 0, %for_begin_kw.preheader ], [ %indvars.iv.next348, %for_end_ic.inner ]
  %.lcssa58139 = phi <4 x i16> [ %.lcssa58.lcssa141222, %for_begin_kw.preheader ], [ %85, %for_end_ic.inner ]
  %.lcssa360138 = phi <4 x i16> [ %.lcssa360.lcssa143221, %for_begin_kw.preheader ], [ %93, %for_end_ic.inner ]
  %.lcssa561137 = phi <4 x i16> [ %.lcssa561.lcssa145220, %for_begin_kw.preheader ], [ %101, %for_end_ic.inner ]
  %.lcssa763136 = phi <4 x i16> [ %.lcssa763.lcssa146219, %for_begin_kw.preheader ], [ %109, %for_end_ic.inner ]
  %.lcssa965135 = phi <4 x i16> [ %.lcssa965.lcssa148218, %for_begin_kw.preheader ], [ %117, %for_end_ic.inner ]
  %.lcssa1167134 = phi <4 x i16> [ %.lcssa1167.lcssa150217, %for_begin_kw.preheader ], [ %125, %for_end_ic.inner ]
  %.lcssa1369133 = phi <4 x i16> [ %.lcssa1369.lcssa152216, %for_begin_kw.preheader ], [ %133, %for_end_ic.inner ]
  %.lcssa1571132 = phi <4 x i16> [ %.lcssa1571.lcssa154215, %for_begin_kw.preheader ], [ %141, %for_end_ic.inner ]
  %.lcssa1773131 = phi <4 x i16> [ %.lcssa1773.lcssa156214, %for_begin_kw.preheader ], [ %149, %for_end_ic.inner ]
  %.lcssa1975130 = phi <4 x i16> [ %.lcssa1975.lcssa158213, %for_begin_kw.preheader ], [ %157, %for_end_ic.inner ]
  %.lcssa2177129 = phi <4 x i16> [ %.lcssa2177.lcssa160212, %for_begin_kw.preheader ], [ %165, %for_end_ic.inner ]
  %.lcssa2379128 = phi <4 x i16> [ %.lcssa2379.lcssa162211, %for_begin_kw.preheader ], [ %173, %for_end_ic.inner ]
  %.lcssa2581127 = phi <4 x i16> [ %.lcssa2581.lcssa164210, %for_begin_kw.preheader ], [ %181, %for_end_ic.inner ]
  %.lcssa2783126 = phi <4 x i16> [ %.lcssa2783.lcssa166209, %for_begin_kw.preheader ], [ %189, %for_end_ic.inner ]
  %.lcssa2985125 = phi <4 x i16> [ %.lcssa2985.lcssa168208, %for_begin_kw.preheader ], [ %197, %for_end_ic.inner ]
  %.lcssa3187124 = phi <4 x i16> [ %.lcssa3187.lcssa170207, %for_begin_kw.preheader ], [ %205, %for_end_ic.inner ]
  %.lcssa3389123 = phi <4 x i16> [ %.lcssa3389.lcssa172206, %for_begin_kw.preheader ], [ %213, %for_end_ic.inner ]
  %.lcssa3591122 = phi <4 x i16> [ %.lcssa3591.lcssa174205, %for_begin_kw.preheader ], [ %221, %for_end_ic.inner ]
  %.lcssa3793121 = phi <4 x i16> [ %.lcssa3793.lcssa176204, %for_begin_kw.preheader ], [ %229, %for_end_ic.inner ]
  %.lcssa3995120 = phi <4 x i16> [ %.lcssa3995.lcssa178203, %for_begin_kw.preheader ], [ %237, %for_end_ic.inner ]
  %.lcssa4197119 = phi <4 x i16> [ %.lcssa4197.lcssa180202, %for_begin_kw.preheader ], [ %245, %for_end_ic.inner ]
  %.lcssa4399118 = phi <4 x i16> [ %.lcssa4399.lcssa182201, %for_begin_kw.preheader ], [ %253, %for_end_ic.inner ]
  %.lcssa45101117 = phi <4 x i16> [ %.lcssa45101.lcssa184200, %for_begin_kw.preheader ], [ %261, %for_end_ic.inner ]
  %.lcssa47103116 = phi <4 x i16> [ %.lcssa47103.lcssa186199, %for_begin_kw.preheader ], [ %269, %for_end_ic.inner ]
  %.lcssa49105115 = phi <4 x i16> [ %.lcssa49105.lcssa188198, %for_begin_kw.preheader ], [ %277, %for_end_ic.inner ]
  %.lcssa51107114 = phi <4 x i16> [ %.lcssa51107.lcssa190197, %for_begin_kw.preheader ], [ %285, %for_end_ic.inner ]
  %.lcssa53109113 = phi <4 x i16> [ %.lcssa53109.lcssa192196, %for_begin_kw.preheader ], [ %293, %for_end_ic.inner ]
  %.lcssa55111112 = phi <4 x i16> [ %.lcssa55111.lcssa194195, %for_begin_kw.preheader ], [ %301, %for_end_ic.inner ]
  %41 = shl nsw i64 %indvars.iv347, 4
  %42 = add nsw i64 %38, %41
  %43 = shl nsw i64 %indvars.iv347, 2
  %44 = add nsw i64 %40, %43
  br label %for_body_ic.inner

for_end_kw:                                       ; preds = %for_end_ic.inner
  %indvars.iv.next352 = add nuw nsw i64 %indvars.iv351, 1
  %exitcond355.not = icmp eq i64 %indvars.iv.next352, 3
  br i1 %exitcond355.not, label %for_end_kh, label %for_begin_kw.preheader, !prof !59

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %45 = phi <4 x i16> [ %.lcssa58139, %for_begin_ic.inner.preheader ], [ %85, %for_body_ic.inner ]
  %46 = phi <4 x i16> [ %.lcssa360138, %for_begin_ic.inner.preheader ], [ %93, %for_body_ic.inner ]
  %47 = phi <4 x i16> [ %.lcssa561137, %for_begin_ic.inner.preheader ], [ %101, %for_body_ic.inner ]
  %48 = phi <4 x i16> [ %.lcssa763136, %for_begin_ic.inner.preheader ], [ %109, %for_body_ic.inner ]
  %49 = phi <4 x i16> [ %.lcssa965135, %for_begin_ic.inner.preheader ], [ %117, %for_body_ic.inner ]
  %50 = phi <4 x i16> [ %.lcssa1167134, %for_begin_ic.inner.preheader ], [ %125, %for_body_ic.inner ]
  %51 = phi <4 x i16> [ %.lcssa1369133, %for_begin_ic.inner.preheader ], [ %133, %for_body_ic.inner ]
  %52 = phi <4 x i16> [ %.lcssa1571132, %for_begin_ic.inner.preheader ], [ %141, %for_body_ic.inner ]
  %53 = phi <4 x i16> [ %.lcssa1773131, %for_begin_ic.inner.preheader ], [ %149, %for_body_ic.inner ]
  %54 = phi <4 x i16> [ %.lcssa1975130, %for_begin_ic.inner.preheader ], [ %157, %for_body_ic.inner ]
  %55 = phi <4 x i16> [ %.lcssa2177129, %for_begin_ic.inner.preheader ], [ %165, %for_body_ic.inner ]
  %56 = phi <4 x i16> [ %.lcssa2379128, %for_begin_ic.inner.preheader ], [ %173, %for_body_ic.inner ]
  %57 = phi <4 x i16> [ %.lcssa2581127, %for_begin_ic.inner.preheader ], [ %181, %for_body_ic.inner ]
  %58 = phi <4 x i16> [ %.lcssa2783126, %for_begin_ic.inner.preheader ], [ %189, %for_body_ic.inner ]
  %59 = phi <4 x i16> [ %.lcssa2985125, %for_begin_ic.inner.preheader ], [ %197, %for_body_ic.inner ]
  %60 = phi <4 x i16> [ %.lcssa3187124, %for_begin_ic.inner.preheader ], [ %205, %for_body_ic.inner ]
  %61 = phi <4 x i16> [ %.lcssa3389123, %for_begin_ic.inner.preheader ], [ %213, %for_body_ic.inner ]
  %62 = phi <4 x i16> [ %.lcssa3591122, %for_begin_ic.inner.preheader ], [ %221, %for_body_ic.inner ]
  %63 = phi <4 x i16> [ %.lcssa3793121, %for_begin_ic.inner.preheader ], [ %229, %for_body_ic.inner ]
  %64 = phi <4 x i16> [ %.lcssa3995120, %for_begin_ic.inner.preheader ], [ %237, %for_body_ic.inner ]
  %65 = phi <4 x i16> [ %.lcssa4197119, %for_begin_ic.inner.preheader ], [ %245, %for_body_ic.inner ]
  %66 = phi <4 x i16> [ %.lcssa4399118, %for_begin_ic.inner.preheader ], [ %253, %for_body_ic.inner ]
  %67 = phi <4 x i16> [ %.lcssa45101117, %for_begin_ic.inner.preheader ], [ %261, %for_body_ic.inner ]
  %68 = phi <4 x i16> [ %.lcssa47103116, %for_begin_ic.inner.preheader ], [ %269, %for_body_ic.inner ]
  %69 = phi <4 x i16> [ %.lcssa49105115, %for_begin_ic.inner.preheader ], [ %277, %for_body_ic.inner ]
  %70 = phi <4 x i16> [ %.lcssa51107114, %for_begin_ic.inner.preheader ], [ %285, %for_body_ic.inner ]
  %71 = phi <4 x i16> [ %.lcssa53109113, %for_begin_ic.inner.preheader ], [ %293, %for_body_ic.inner ]
  %72 = phi <4 x i16> [ %.lcssa55111112, %for_begin_ic.inner.preheader ], [ %301, %for_body_ic.inner ]
  %73 = shl nuw nsw i64 %indvars.iv, 2
  %74 = add nsw i64 %42, %73
  %75 = add nsw i64 %44, %indvars.iv
  %76 = getelementptr inbounds i8, ptr %p1, i64 %74
  %77 = load <4 x i8>, ptr %76, align 4, !tbaa !7665
  %78 = sext <4 x i8> %77 to <4 x i16>
  %79 = getelementptr inbounds i8, ptr %data_pad, i64 %75
  %80 = load i8, ptr %79, align 1, !tbaa !7637
  %81 = insertelement <4 x i8> undef, i8 %80, i64 0
  %82 = shufflevector <4 x i8> %81, <4 x i8> undef, <4 x i32> zeroinitializer
  %83 = sext <4 x i8> %82 to <4 x i16>
  %84 = mul nsw <4 x i16> %83, %78
  %85 = add <4 x i16> %84, %45
  %86 = add nsw i64 %75, 4
  %87 = getelementptr inbounds i8, ptr %data_pad, i64 %86
  %88 = load i8, ptr %87, align 1, !tbaa !7637
  %89 = insertelement <4 x i8> undef, i8 %88, i64 0
  %90 = shufflevector <4 x i8> %89, <4 x i8> undef, <4 x i32> zeroinitializer
  %91 = sext <4 x i8> %90 to <4 x i16>
  %92 = mul nsw <4 x i16> %91, %78
  %93 = add <4 x i16> %92, %46
  %94 = add nsw i64 %75, 8
  %95 = getelementptr inbounds i8, ptr %data_pad, i64 %94
  %96 = load i8, ptr %95, align 1, !tbaa !7637
  %97 = insertelement <4 x i8> undef, i8 %96, i64 0
  %98 = shufflevector <4 x i8> %97, <4 x i8> undef, <4 x i32> zeroinitializer
  %99 = sext <4 x i8> %98 to <4 x i16>
  %100 = mul nsw <4 x i16> %99, %78
  %101 = add <4 x i16> %100, %47
  %102 = add nsw i64 %75, 12
  %103 = getelementptr inbounds i8, ptr %data_pad, i64 %102
  %104 = load i8, ptr %103, align 1, !tbaa !7637
  %105 = insertelement <4 x i8> undef, i8 %104, i64 0
  %106 = shufflevector <4 x i8> %105, <4 x i8> undef, <4 x i32> zeroinitializer
  %107 = sext <4 x i8> %106 to <4 x i16>
  %108 = mul nsw <4 x i16> %107, %78
  %109 = add <4 x i16> %108, %48
  %110 = add nsw i64 %75, 16
  %111 = getelementptr inbounds i8, ptr %data_pad, i64 %110
  %112 = load i8, ptr %111, align 1, !tbaa !7637
  %113 = insertelement <4 x i8> undef, i8 %112, i64 0
  %114 = shufflevector <4 x i8> %113, <4 x i8> undef, <4 x i32> zeroinitializer
  %115 = sext <4 x i8> %114 to <4 x i16>
  %116 = mul nsw <4 x i16> %115, %78
  %117 = add <4 x i16> %116, %49
  %118 = add nsw i64 %75, 20
  %119 = getelementptr inbounds i8, ptr %data_pad, i64 %118
  %120 = load i8, ptr %119, align 1, !tbaa !7637
  %121 = insertelement <4 x i8> undef, i8 %120, i64 0
  %122 = shufflevector <4 x i8> %121, <4 x i8> undef, <4 x i32> zeroinitializer
  %123 = sext <4 x i8> %122 to <4 x i16>
  %124 = mul nsw <4 x i16> %123, %78
  %125 = add <4 x i16> %124, %50
  %126 = add nsw i64 %75, 24
  %127 = getelementptr inbounds i8, ptr %data_pad, i64 %126
  %128 = load i8, ptr %127, align 1, !tbaa !7637
  %129 = insertelement <4 x i8> undef, i8 %128, i64 0
  %130 = shufflevector <4 x i8> %129, <4 x i8> undef, <4 x i32> zeroinitializer
  %131 = sext <4 x i8> %130 to <4 x i16>
  %132 = mul nsw <4 x i16> %131, %78
  %133 = add <4 x i16> %132, %51
  %134 = add nsw i64 %75, 28
  %135 = getelementptr inbounds i8, ptr %data_pad, i64 %134
  %136 = load i8, ptr %135, align 1, !tbaa !7637
  %137 = insertelement <4 x i8> undef, i8 %136, i64 0
  %138 = shufflevector <4 x i8> %137, <4 x i8> undef, <4 x i32> zeroinitializer
  %139 = sext <4 x i8> %138 to <4 x i16>
  %140 = mul nsw <4 x i16> %139, %78
  %141 = add <4 x i16> %140, %52
  %142 = add nsw i64 %75, 32
  %143 = getelementptr inbounds i8, ptr %data_pad, i64 %142
  %144 = load i8, ptr %143, align 1, !tbaa !7637
  %145 = insertelement <4 x i8> undef, i8 %144, i64 0
  %146 = shufflevector <4 x i8> %145, <4 x i8> undef, <4 x i32> zeroinitializer
  %147 = sext <4 x i8> %146 to <4 x i16>
  %148 = mul nsw <4 x i16> %147, %78
  %149 = add <4 x i16> %148, %53
  %150 = add nsw i64 %75, 36
  %151 = getelementptr inbounds i8, ptr %data_pad, i64 %150
  %152 = load i8, ptr %151, align 1, !tbaa !7637
  %153 = insertelement <4 x i8> undef, i8 %152, i64 0
  %154 = shufflevector <4 x i8> %153, <4 x i8> undef, <4 x i32> zeroinitializer
  %155 = sext <4 x i8> %154 to <4 x i16>
  %156 = mul nsw <4 x i16> %155, %78
  %157 = add <4 x i16> %156, %54
  %158 = add nsw i64 %75, 40
  %159 = getelementptr inbounds i8, ptr %data_pad, i64 %158
  %160 = load i8, ptr %159, align 1, !tbaa !7637
  %161 = insertelement <4 x i8> undef, i8 %160, i64 0
  %162 = shufflevector <4 x i8> %161, <4 x i8> undef, <4 x i32> zeroinitializer
  %163 = sext <4 x i8> %162 to <4 x i16>
  %164 = mul nsw <4 x i16> %163, %78
  %165 = add <4 x i16> %164, %55
  %166 = add nsw i64 %75, 44
  %167 = getelementptr inbounds i8, ptr %data_pad, i64 %166
  %168 = load i8, ptr %167, align 1, !tbaa !7637
  %169 = insertelement <4 x i8> undef, i8 %168, i64 0
  %170 = shufflevector <4 x i8> %169, <4 x i8> undef, <4 x i32> zeroinitializer
  %171 = sext <4 x i8> %170 to <4 x i16>
  %172 = mul nsw <4 x i16> %171, %78
  %173 = add <4 x i16> %172, %56
  %174 = add nsw i64 %75, 48
  %175 = getelementptr inbounds i8, ptr %data_pad, i64 %174
  %176 = load i8, ptr %175, align 1, !tbaa !7637
  %177 = insertelement <4 x i8> undef, i8 %176, i64 0
  %178 = shufflevector <4 x i8> %177, <4 x i8> undef, <4 x i32> zeroinitializer
  %179 = sext <4 x i8> %178 to <4 x i16>
  %180 = mul nsw <4 x i16> %179, %78
  %181 = add <4 x i16> %180, %57
  %182 = add nsw i64 %75, 52
  %183 = getelementptr inbounds i8, ptr %data_pad, i64 %182
  %184 = load i8, ptr %183, align 1, !tbaa !7637
  %185 = insertelement <4 x i8> undef, i8 %184, i64 0
  %186 = shufflevector <4 x i8> %185, <4 x i8> undef, <4 x i32> zeroinitializer
  %187 = sext <4 x i8> %186 to <4 x i16>
  %188 = mul nsw <4 x i16> %187, %78
  %189 = add <4 x i16> %188, %58
  %190 = add nsw i64 %75, 56
  %191 = getelementptr inbounds i8, ptr %data_pad, i64 %190
  %192 = load i8, ptr %191, align 1, !tbaa !7637
  %193 = insertelement <4 x i8> undef, i8 %192, i64 0
  %194 = shufflevector <4 x i8> %193, <4 x i8> undef, <4 x i32> zeroinitializer
  %195 = sext <4 x i8> %194 to <4 x i16>
  %196 = mul nsw <4 x i16> %195, %78
  %197 = add <4 x i16> %196, %59
  %198 = add nsw i64 %75, 60
  %199 = getelementptr inbounds i8, ptr %data_pad, i64 %198
  %200 = load i8, ptr %199, align 1, !tbaa !7637
  %201 = insertelement <4 x i8> undef, i8 %200, i64 0
  %202 = shufflevector <4 x i8> %201, <4 x i8> undef, <4 x i32> zeroinitializer
  %203 = sext <4 x i8> %202 to <4 x i16>
  %204 = mul nsw <4 x i16> %203, %78
  %205 = add <4 x i16> %204, %60
  %206 = add nsw i64 %75, 64
  %207 = getelementptr inbounds i8, ptr %data_pad, i64 %206
  %208 = load i8, ptr %207, align 1, !tbaa !7637
  %209 = insertelement <4 x i8> undef, i8 %208, i64 0
  %210 = shufflevector <4 x i8> %209, <4 x i8> undef, <4 x i32> zeroinitializer
  %211 = sext <4 x i8> %210 to <4 x i16>
  %212 = mul nsw <4 x i16> %211, %78
  %213 = add <4 x i16> %212, %61
  %214 = add nsw i64 %75, 68
  %215 = getelementptr inbounds i8, ptr %data_pad, i64 %214
  %216 = load i8, ptr %215, align 1, !tbaa !7637
  %217 = insertelement <4 x i8> undef, i8 %216, i64 0
  %218 = shufflevector <4 x i8> %217, <4 x i8> undef, <4 x i32> zeroinitializer
  %219 = sext <4 x i8> %218 to <4 x i16>
  %220 = mul nsw <4 x i16> %219, %78
  %221 = add <4 x i16> %220, %62
  %222 = add nsw i64 %75, 72
  %223 = getelementptr inbounds i8, ptr %data_pad, i64 %222
  %224 = load i8, ptr %223, align 1, !tbaa !7637
  %225 = insertelement <4 x i8> undef, i8 %224, i64 0
  %226 = shufflevector <4 x i8> %225, <4 x i8> undef, <4 x i32> zeroinitializer
  %227 = sext <4 x i8> %226 to <4 x i16>
  %228 = mul nsw <4 x i16> %227, %78
  %229 = add <4 x i16> %228, %63
  %230 = add nsw i64 %75, 76
  %231 = getelementptr inbounds i8, ptr %data_pad, i64 %230
  %232 = load i8, ptr %231, align 1, !tbaa !7637
  %233 = insertelement <4 x i8> undef, i8 %232, i64 0
  %234 = shufflevector <4 x i8> %233, <4 x i8> undef, <4 x i32> zeroinitializer
  %235 = sext <4 x i8> %234 to <4 x i16>
  %236 = mul nsw <4 x i16> %235, %78
  %237 = add <4 x i16> %236, %64
  %238 = add nsw i64 %75, 80
  %239 = getelementptr inbounds i8, ptr %data_pad, i64 %238
  %240 = load i8, ptr %239, align 1, !tbaa !7637
  %241 = insertelement <4 x i8> undef, i8 %240, i64 0
  %242 = shufflevector <4 x i8> %241, <4 x i8> undef, <4 x i32> zeroinitializer
  %243 = sext <4 x i8> %242 to <4 x i16>
  %244 = mul nsw <4 x i16> %243, %78
  %245 = add <4 x i16> %244, %65
  %246 = add nsw i64 %75, 84
  %247 = getelementptr inbounds i8, ptr %data_pad, i64 %246
  %248 = load i8, ptr %247, align 1, !tbaa !7637
  %249 = insertelement <4 x i8> undef, i8 %248, i64 0
  %250 = shufflevector <4 x i8> %249, <4 x i8> undef, <4 x i32> zeroinitializer
  %251 = sext <4 x i8> %250 to <4 x i16>
  %252 = mul nsw <4 x i16> %251, %78
  %253 = add <4 x i16> %252, %66
  %254 = add nsw i64 %75, 88
  %255 = getelementptr inbounds i8, ptr %data_pad, i64 %254
  %256 = load i8, ptr %255, align 1, !tbaa !7637
  %257 = insertelement <4 x i8> undef, i8 %256, i64 0
  %258 = shufflevector <4 x i8> %257, <4 x i8> undef, <4 x i32> zeroinitializer
  %259 = sext <4 x i8> %258 to <4 x i16>
  %260 = mul nsw <4 x i16> %259, %78
  %261 = add <4 x i16> %260, %67
  %262 = add nsw i64 %75, 92
  %263 = getelementptr inbounds i8, ptr %data_pad, i64 %262
  %264 = load i8, ptr %263, align 1, !tbaa !7637
  %265 = insertelement <4 x i8> undef, i8 %264, i64 0
  %266 = shufflevector <4 x i8> %265, <4 x i8> undef, <4 x i32> zeroinitializer
  %267 = sext <4 x i8> %266 to <4 x i16>
  %268 = mul nsw <4 x i16> %267, %78
  %269 = add <4 x i16> %268, %68
  %270 = add nsw i64 %75, 96
  %271 = getelementptr inbounds i8, ptr %data_pad, i64 %270
  %272 = load i8, ptr %271, align 1, !tbaa !7637
  %273 = insertelement <4 x i8> undef, i8 %272, i64 0
  %274 = shufflevector <4 x i8> %273, <4 x i8> undef, <4 x i32> zeroinitializer
  %275 = sext <4 x i8> %274 to <4 x i16>
  %276 = mul nsw <4 x i16> %275, %78
  %277 = add <4 x i16> %276, %69
  %278 = add nsw i64 %75, 100
  %279 = getelementptr inbounds i8, ptr %data_pad, i64 %278
  %280 = load i8, ptr %279, align 1, !tbaa !7637
  %281 = insertelement <4 x i8> undef, i8 %280, i64 0
  %282 = shufflevector <4 x i8> %281, <4 x i8> undef, <4 x i32> zeroinitializer
  %283 = sext <4 x i8> %282 to <4 x i16>
  %284 = mul nsw <4 x i16> %283, %78
  %285 = add <4 x i16> %284, %70
  %286 = add nsw i64 %75, 104
  %287 = getelementptr inbounds i8, ptr %data_pad, i64 %286
  %288 = load i8, ptr %287, align 1, !tbaa !7637
  %289 = insertelement <4 x i8> undef, i8 %288, i64 0
  %290 = shufflevector <4 x i8> %289, <4 x i8> undef, <4 x i32> zeroinitializer
  %291 = sext <4 x i8> %290 to <4 x i16>
  %292 = mul nsw <4 x i16> %291, %78
  %293 = add <4 x i16> %292, %71
  %294 = add nsw i64 %75, 108
  %295 = getelementptr inbounds i8, ptr %data_pad, i64 %294
  %296 = load i8, ptr %295, align 1, !tbaa !7637
  %297 = insertelement <4 x i8> undef, i8 %296, i64 0
  %298 = shufflevector <4 x i8> %297, <4 x i8> undef, <4 x i32> zeroinitializer
  %299 = sext <4 x i8> %298 to <4 x i16>
  %300 = mul nsw <4 x i16> %299, %78
  %301 = add <4 x i16> %300, %72
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !59

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next348 = add nuw nsw i64 %indvars.iv347, 1
  %exitcond350.not = icmp eq i64 %indvars.iv.next348, 3
  br i1 %exitcond350.not, label %for_end_kw, label %for_begin_ic.inner.preheader, !prof !59

for_body_ax3.inner:                               ; preds = %for_body_ax3.inner, %for_begin_ax3.outer.preheader
  %indvars.iv364 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next365.1456, %for_body_ax3.inner ]
  %302 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc2, i64 %indvars.iv364
  %303 = load <4 x i16>, ptr %302, align 16, !tbaa !7667
  %304 = add <4 x i16> %20, %303
  %305 = ashr <4 x i16> %304, %17
  %306 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %305, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %307 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %306, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %308 = trunc <4 x i16> %307 to <4 x i8>
  %309 = shl nuw nsw i64 %indvars.iv364, 2
  %310 = add nsw i64 %29, %309
  %311 = getelementptr inbounds i8, ptr %T_cast, i64 %310
  store <4 x i8> %308, ptr %311, align 4, !tbaa !7669
  %indvars.iv.next365 = or i64 %indvars.iv364, 1
  %312 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc2, i64 %indvars.iv.next365
  %313 = load <4 x i16>, ptr %312, align 8, !tbaa !7667
  %314 = add <4 x i16> %20, %313
  %315 = ashr <4 x i16> %314, %17
  %316 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %315, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %317 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %316, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %318 = trunc <4 x i16> %317 to <4 x i8>
  %319 = shl nuw nsw i64 %indvars.iv.next365, 2
  %320 = add nsw i64 %29, %319
  %321 = getelementptr inbounds i8, ptr %T_cast, i64 %320
  store <4 x i8> %318, ptr %321, align 4, !tbaa !7669
  %indvars.iv.next365.1456 = add nuw nsw i64 %indvars.iv364, 2
  %exitcond367.not.1 = icmp eq i64 %indvars.iv.next365.1456, 28
  br i1 %exitcond367.not.1, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !7452

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %322 = add nsw i64 %29, 112
  br label %for_body_ax3.inner.1

for_body_ax3.inner.1:                             ; preds = %for_body_ax3.inner.1, %for_end_ax3.inner
  %indvars.iv364.1 = phi i64 [ 0, %for_end_ax3.inner ], [ %indvars.iv.next365.1.1, %for_body_ax3.inner.1 ]
  %323 = add nuw nsw i64 %indvars.iv364.1, 28
  %324 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc2, i64 %323
  %325 = load <4 x i16>, ptr %324, align 16, !tbaa !7667
  %326 = add <4 x i16> %20, %325
  %327 = ashr <4 x i16> %326, %17
  %328 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %327, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %329 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %328, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %330 = trunc <4 x i16> %329 to <4 x i8>
  %331 = shl nuw nsw i64 %indvars.iv364.1, 2
  %332 = add nsw i64 %322, %331
  %333 = getelementptr inbounds i8, ptr %T_cast, i64 %332
  store <4 x i8> %330, ptr %333, align 4, !tbaa !7669
  %334 = add nuw nsw i64 %indvars.iv364.1, 29
  %335 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc2, i64 %334
  %336 = load <4 x i16>, ptr %335, align 8, !tbaa !7667
  %337 = add <4 x i16> %20, %336
  %338 = ashr <4 x i16> %337, %17
  %339 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %338, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %340 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %339, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %341 = trunc <4 x i16> %340 to <4 x i8>
  %indvars.iv.next365.1 = shl i64 %indvars.iv364.1, 2
  %342 = or i64 %indvars.iv.next365.1, 4
  %343 = add nsw i64 %322, %342
  %344 = getelementptr inbounds i8, ptr %T_cast, i64 %343
  store <4 x i8> %341, ptr %344, align 4, !tbaa !7669
  %indvars.iv.next365.1.1 = add nuw nsw i64 %indvars.iv364.1, 2
  %exitcond367.1.not.1 = icmp eq i64 %indvars.iv.next365.1.1, 28
  br i1 %exitcond367.1.not.1, label %for_end_ax3.inner.1, label %for_body_ax3.inner.1, !prof !7452

for_end_ax3.inner.1:                              ; preds = %for_body_ax3.inner.1
  %indvars.iv.next372 = add nsw i64 %indvars.iv371, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next372 to i32
  %exitcond373.not = icmp eq i32 %23, %lftr.wideiv
  br i1 %exitcond373.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ow.outer.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_10_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1214, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1214(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %conv2d_NCHWc.global1 = alloca [28 x <4 x i16>], align 16
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 1791
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 1792)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 1792)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph:     ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 1
  %16 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 2
  %17 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 3
  %18 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 4
  %19 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 5
  %20 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 6
  %21 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 7
  %22 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 8
  %23 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 9
  %24 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 10
  %25 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 11
  %26 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 12
  %27 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 13
  %28 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 14
  %29 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 15
  %30 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 16
  %31 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 17
  %32 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 18
  %33 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 19
  %34 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 20
  %35 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 21
  %36 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 22
  %37 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 23
  %38 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 24
  %39 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 25
  %40 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 26
  %41 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 27
  %42 = load i16, ptr %p3, align 64, !tbaa !7671
  %43 = insertelement <4 x i16> undef, i16 %42, i64 0
  %44 = shufflevector <4 x i16> %43, <4 x i16> undef, <4 x i32> zeroinitializer
  %45 = load i16, ptr %p2, align 64, !tbaa !7683
  %46 = insertelement <4 x i16> undef, i16 %45, i64 0
  %47 = shufflevector <4 x i16> %46, <4 x i16> undef, <4 x i32> zeroinitializer
  %48 = tail call i32 @llvm.smin.i32(i32 %10, i32 1792)
  %smin = sext i32 %48 to i64
  %49 = add i32 %9, %48
  %50 = sub i32 %49, %11
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, %for_end_ax3.inner
  %indvars.iv182 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph ], [ %indvars.iv.next183, %for_end_ax3.inner ]
  %51 = trunc i64 %indvars.iv182 to i32
  %52 = srem i32 %51, 28
  %53 = mul nsw i32 %52, 112
  %54 = sdiv i32 %51, 28
  %55 = shl nsw i32 %54, 11
  %56 = sext i32 %53 to i64
  %57 = sext i32 %55 to i64
  br label %for_begin_ic.inner.preheader

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_end_ax3.inner, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_end_ic.inner
  store <4 x i16> %103, ptr %conv2d_NCHWc.global1, align 16, !tbaa !7695
  store <4 x i16> %111, ptr %15, align 8, !tbaa !7705
  store <4 x i16> %119, ptr %16, align 16, !tbaa !7707
  store <4 x i16> %127, ptr %17, align 8, !tbaa !7710
  store <4 x i16> %135, ptr %18, align 16, !tbaa !7712
  store <4 x i16> %143, ptr %19, align 8, !tbaa !7716
  store <4 x i16> %151, ptr %20, align 16, !tbaa !7718
  store <4 x i16> %159, ptr %21, align 8, !tbaa !7721
  store <4 x i16> %167, ptr %22, align 16, !tbaa !7723
  store <4 x i16> %175, ptr %23, align 8, !tbaa !7728
  store <4 x i16> %183, ptr %24, align 16, !tbaa !7730
  store <4 x i16> %191, ptr %25, align 8, !tbaa !7733
  store <4 x i16> %199, ptr %26, align 16, !tbaa !7735
  store <4 x i16> %207, ptr %27, align 8, !tbaa !7739
  store <4 x i16> %215, ptr %28, align 16, !tbaa !7741
  store <4 x i16> %223, ptr %29, align 8, !tbaa !7744
  store <4 x i16> %231, ptr %30, align 16, !tbaa !7746
  store <4 x i16> %239, ptr %31, align 8, !tbaa !7752
  store <4 x i16> %247, ptr %32, align 16, !tbaa !7754
  store <4 x i16> %255, ptr %33, align 8, !tbaa !7757
  store <4 x i16> %263, ptr %34, align 16, !tbaa !7759
  store <4 x i16> %271, ptr %35, align 8, !tbaa !7763
  store <4 x i16> %279, ptr %36, align 16, !tbaa !7765
  store <4 x i16> %287, ptr %37, align 8, !tbaa !7768
  store <4 x i16> %295, ptr %38, align 16, !tbaa !7770
  store <4 x i16> %303, ptr %39, align 8, !tbaa !7775
  store <4 x i16> %311, ptr %40, align 16, !tbaa !7777
  store <4 x i16> %319, ptr %41, align 8, !tbaa !7780
  %58 = mul nsw i64 %indvars.iv182, 112
  br label %for_body_ax3.inner

for_begin_ic.inner.preheader:                     ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ic.inner
  %indvars.iv174 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %indvars.iv.next175, %for_end_ic.inner ]
  %.lcssa57138 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %103, %for_end_ic.inner ]
  %.lcssa259137 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %111, %for_end_ic.inner ]
  %.lcssa460136 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %119, %for_end_ic.inner ]
  %.lcssa662135 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %127, %for_end_ic.inner ]
  %.lcssa864134 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %135, %for_end_ic.inner ]
  %.lcssa1066133 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %143, %for_end_ic.inner ]
  %.lcssa1268132 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %151, %for_end_ic.inner ]
  %.lcssa1470131 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %159, %for_end_ic.inner ]
  %.lcssa1672130 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %167, %for_end_ic.inner ]
  %.lcssa1874129 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %175, %for_end_ic.inner ]
  %.lcssa2076128 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %183, %for_end_ic.inner ]
  %.lcssa2278127 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %191, %for_end_ic.inner ]
  %.lcssa2480126 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %199, %for_end_ic.inner ]
  %.lcssa2682125 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %207, %for_end_ic.inner ]
  %.lcssa2884124 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %215, %for_end_ic.inner ]
  %.lcssa3086123 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %223, %for_end_ic.inner ]
  %.lcssa3288122 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %231, %for_end_ic.inner ]
  %.lcssa3490121 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %239, %for_end_ic.inner ]
  %.lcssa3692120 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %247, %for_end_ic.inner ]
  %.lcssa3894119 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %255, %for_end_ic.inner ]
  %.lcssa4096118 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %263, %for_end_ic.inner ]
  %.lcssa4298117 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %271, %for_end_ic.inner ]
  %.lcssa44100116 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %279, %for_end_ic.inner ]
  %.lcssa46102115 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %287, %for_end_ic.inner ]
  %.lcssa48104114 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %295, %for_end_ic.inner ]
  %.lcssa50106113 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %303, %for_end_ic.inner ]
  %.lcssa52108112 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %311, %for_end_ic.inner ]
  %.lcssa54110111 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %319, %for_end_ic.inner ]
  %59 = mul nuw nsw i64 %indvars.iv174, 3136
  %60 = add nsw i64 %59, %56
  %61 = shl nsw i64 %indvars.iv174, 4
  %62 = add nuw nsw i64 %61, %57
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %63 = phi <4 x i16> [ %.lcssa57138, %for_begin_ic.inner.preheader ], [ %103, %for_body_ic.inner ]
  %64 = phi <4 x i16> [ %.lcssa259137, %for_begin_ic.inner.preheader ], [ %111, %for_body_ic.inner ]
  %65 = phi <4 x i16> [ %.lcssa460136, %for_begin_ic.inner.preheader ], [ %119, %for_body_ic.inner ]
  %66 = phi <4 x i16> [ %.lcssa662135, %for_begin_ic.inner.preheader ], [ %127, %for_body_ic.inner ]
  %67 = phi <4 x i16> [ %.lcssa864134, %for_begin_ic.inner.preheader ], [ %135, %for_body_ic.inner ]
  %68 = phi <4 x i16> [ %.lcssa1066133, %for_begin_ic.inner.preheader ], [ %143, %for_body_ic.inner ]
  %69 = phi <4 x i16> [ %.lcssa1268132, %for_begin_ic.inner.preheader ], [ %151, %for_body_ic.inner ]
  %70 = phi <4 x i16> [ %.lcssa1470131, %for_begin_ic.inner.preheader ], [ %159, %for_body_ic.inner ]
  %71 = phi <4 x i16> [ %.lcssa1672130, %for_begin_ic.inner.preheader ], [ %167, %for_body_ic.inner ]
  %72 = phi <4 x i16> [ %.lcssa1874129, %for_begin_ic.inner.preheader ], [ %175, %for_body_ic.inner ]
  %73 = phi <4 x i16> [ %.lcssa2076128, %for_begin_ic.inner.preheader ], [ %183, %for_body_ic.inner ]
  %74 = phi <4 x i16> [ %.lcssa2278127, %for_begin_ic.inner.preheader ], [ %191, %for_body_ic.inner ]
  %75 = phi <4 x i16> [ %.lcssa2480126, %for_begin_ic.inner.preheader ], [ %199, %for_body_ic.inner ]
  %76 = phi <4 x i16> [ %.lcssa2682125, %for_begin_ic.inner.preheader ], [ %207, %for_body_ic.inner ]
  %77 = phi <4 x i16> [ %.lcssa2884124, %for_begin_ic.inner.preheader ], [ %215, %for_body_ic.inner ]
  %78 = phi <4 x i16> [ %.lcssa3086123, %for_begin_ic.inner.preheader ], [ %223, %for_body_ic.inner ]
  %79 = phi <4 x i16> [ %.lcssa3288122, %for_begin_ic.inner.preheader ], [ %231, %for_body_ic.inner ]
  %80 = phi <4 x i16> [ %.lcssa3490121, %for_begin_ic.inner.preheader ], [ %239, %for_body_ic.inner ]
  %81 = phi <4 x i16> [ %.lcssa3692120, %for_begin_ic.inner.preheader ], [ %247, %for_body_ic.inner ]
  %82 = phi <4 x i16> [ %.lcssa3894119, %for_begin_ic.inner.preheader ], [ %255, %for_body_ic.inner ]
  %83 = phi <4 x i16> [ %.lcssa4096118, %for_begin_ic.inner.preheader ], [ %263, %for_body_ic.inner ]
  %84 = phi <4 x i16> [ %.lcssa4298117, %for_begin_ic.inner.preheader ], [ %271, %for_body_ic.inner ]
  %85 = phi <4 x i16> [ %.lcssa44100116, %for_begin_ic.inner.preheader ], [ %279, %for_body_ic.inner ]
  %86 = phi <4 x i16> [ %.lcssa46102115, %for_begin_ic.inner.preheader ], [ %287, %for_body_ic.inner ]
  %87 = phi <4 x i16> [ %.lcssa48104114, %for_begin_ic.inner.preheader ], [ %295, %for_body_ic.inner ]
  %88 = phi <4 x i16> [ %.lcssa50106113, %for_begin_ic.inner.preheader ], [ %303, %for_body_ic.inner ]
  %89 = phi <4 x i16> [ %.lcssa52108112, %for_begin_ic.inner.preheader ], [ %311, %for_body_ic.inner ]
  %90 = phi <4 x i16> [ %.lcssa54110111, %for_begin_ic.inner.preheader ], [ %319, %for_body_ic.inner ]
  %91 = add nsw i64 %60, %indvars.iv
  %92 = shl nuw nsw i64 %indvars.iv, 2
  %93 = add nuw nsw i64 %62, %92
  %94 = getelementptr inbounds i8, ptr %p1, i64 %93
  %95 = load <4 x i8>, ptr %94, align 4, !tbaa !7782
  %96 = sext <4 x i8> %95 to <4 x i16>
  %97 = getelementptr inbounds i8, ptr %p0, i64 %91
  %98 = load i8, ptr %97, align 1, !tbaa !7784
  %99 = insertelement <4 x i8> undef, i8 %98, i64 0
  %100 = shufflevector <4 x i8> %99, <4 x i8> undef, <4 x i32> zeroinitializer
  %101 = sext <4 x i8> %100 to <4 x i16>
  %102 = mul nsw <4 x i16> %101, %96
  %103 = add <4 x i16> %102, %63
  %104 = add nsw i64 %91, 4
  %105 = getelementptr inbounds i8, ptr %p0, i64 %104
  %106 = load i8, ptr %105, align 1, !tbaa !7784
  %107 = insertelement <4 x i8> undef, i8 %106, i64 0
  %108 = shufflevector <4 x i8> %107, <4 x i8> undef, <4 x i32> zeroinitializer
  %109 = sext <4 x i8> %108 to <4 x i16>
  %110 = mul nsw <4 x i16> %109, %96
  %111 = add <4 x i16> %110, %64
  %112 = add nsw i64 %91, 8
  %113 = getelementptr inbounds i8, ptr %p0, i64 %112
  %114 = load i8, ptr %113, align 1, !tbaa !7784
  %115 = insertelement <4 x i8> undef, i8 %114, i64 0
  %116 = shufflevector <4 x i8> %115, <4 x i8> undef, <4 x i32> zeroinitializer
  %117 = sext <4 x i8> %116 to <4 x i16>
  %118 = mul nsw <4 x i16> %117, %96
  %119 = add <4 x i16> %118, %65
  %120 = add nsw i64 %91, 12
  %121 = getelementptr inbounds i8, ptr %p0, i64 %120
  %122 = load i8, ptr %121, align 1, !tbaa !7784
  %123 = insertelement <4 x i8> undef, i8 %122, i64 0
  %124 = shufflevector <4 x i8> %123, <4 x i8> undef, <4 x i32> zeroinitializer
  %125 = sext <4 x i8> %124 to <4 x i16>
  %126 = mul nsw <4 x i16> %125, %96
  %127 = add <4 x i16> %126, %66
  %128 = add nsw i64 %91, 16
  %129 = getelementptr inbounds i8, ptr %p0, i64 %128
  %130 = load i8, ptr %129, align 1, !tbaa !7784
  %131 = insertelement <4 x i8> undef, i8 %130, i64 0
  %132 = shufflevector <4 x i8> %131, <4 x i8> undef, <4 x i32> zeroinitializer
  %133 = sext <4 x i8> %132 to <4 x i16>
  %134 = mul nsw <4 x i16> %133, %96
  %135 = add <4 x i16> %134, %67
  %136 = add nsw i64 %91, 20
  %137 = getelementptr inbounds i8, ptr %p0, i64 %136
  %138 = load i8, ptr %137, align 1, !tbaa !7784
  %139 = insertelement <4 x i8> undef, i8 %138, i64 0
  %140 = shufflevector <4 x i8> %139, <4 x i8> undef, <4 x i32> zeroinitializer
  %141 = sext <4 x i8> %140 to <4 x i16>
  %142 = mul nsw <4 x i16> %141, %96
  %143 = add <4 x i16> %142, %68
  %144 = add nsw i64 %91, 24
  %145 = getelementptr inbounds i8, ptr %p0, i64 %144
  %146 = load i8, ptr %145, align 1, !tbaa !7784
  %147 = insertelement <4 x i8> undef, i8 %146, i64 0
  %148 = shufflevector <4 x i8> %147, <4 x i8> undef, <4 x i32> zeroinitializer
  %149 = sext <4 x i8> %148 to <4 x i16>
  %150 = mul nsw <4 x i16> %149, %96
  %151 = add <4 x i16> %150, %69
  %152 = add nsw i64 %91, 28
  %153 = getelementptr inbounds i8, ptr %p0, i64 %152
  %154 = load i8, ptr %153, align 1, !tbaa !7784
  %155 = insertelement <4 x i8> undef, i8 %154, i64 0
  %156 = shufflevector <4 x i8> %155, <4 x i8> undef, <4 x i32> zeroinitializer
  %157 = sext <4 x i8> %156 to <4 x i16>
  %158 = mul nsw <4 x i16> %157, %96
  %159 = add <4 x i16> %158, %70
  %160 = add nsw i64 %91, 32
  %161 = getelementptr inbounds i8, ptr %p0, i64 %160
  %162 = load i8, ptr %161, align 1, !tbaa !7784
  %163 = insertelement <4 x i8> undef, i8 %162, i64 0
  %164 = shufflevector <4 x i8> %163, <4 x i8> undef, <4 x i32> zeroinitializer
  %165 = sext <4 x i8> %164 to <4 x i16>
  %166 = mul nsw <4 x i16> %165, %96
  %167 = add <4 x i16> %166, %71
  %168 = add nsw i64 %91, 36
  %169 = getelementptr inbounds i8, ptr %p0, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !7784
  %171 = insertelement <4 x i8> undef, i8 %170, i64 0
  %172 = shufflevector <4 x i8> %171, <4 x i8> undef, <4 x i32> zeroinitializer
  %173 = sext <4 x i8> %172 to <4 x i16>
  %174 = mul nsw <4 x i16> %173, %96
  %175 = add <4 x i16> %174, %72
  %176 = add nsw i64 %91, 40
  %177 = getelementptr inbounds i8, ptr %p0, i64 %176
  %178 = load i8, ptr %177, align 1, !tbaa !7784
  %179 = insertelement <4 x i8> undef, i8 %178, i64 0
  %180 = shufflevector <4 x i8> %179, <4 x i8> undef, <4 x i32> zeroinitializer
  %181 = sext <4 x i8> %180 to <4 x i16>
  %182 = mul nsw <4 x i16> %181, %96
  %183 = add <4 x i16> %182, %73
  %184 = add nsw i64 %91, 44
  %185 = getelementptr inbounds i8, ptr %p0, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !7784
  %187 = insertelement <4 x i8> undef, i8 %186, i64 0
  %188 = shufflevector <4 x i8> %187, <4 x i8> undef, <4 x i32> zeroinitializer
  %189 = sext <4 x i8> %188 to <4 x i16>
  %190 = mul nsw <4 x i16> %189, %96
  %191 = add <4 x i16> %190, %74
  %192 = add nsw i64 %91, 48
  %193 = getelementptr inbounds i8, ptr %p0, i64 %192
  %194 = load i8, ptr %193, align 1, !tbaa !7784
  %195 = insertelement <4 x i8> undef, i8 %194, i64 0
  %196 = shufflevector <4 x i8> %195, <4 x i8> undef, <4 x i32> zeroinitializer
  %197 = sext <4 x i8> %196 to <4 x i16>
  %198 = mul nsw <4 x i16> %197, %96
  %199 = add <4 x i16> %198, %75
  %200 = add nsw i64 %91, 52
  %201 = getelementptr inbounds i8, ptr %p0, i64 %200
  %202 = load i8, ptr %201, align 1, !tbaa !7784
  %203 = insertelement <4 x i8> undef, i8 %202, i64 0
  %204 = shufflevector <4 x i8> %203, <4 x i8> undef, <4 x i32> zeroinitializer
  %205 = sext <4 x i8> %204 to <4 x i16>
  %206 = mul nsw <4 x i16> %205, %96
  %207 = add <4 x i16> %206, %76
  %208 = add nsw i64 %91, 56
  %209 = getelementptr inbounds i8, ptr %p0, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !7784
  %211 = insertelement <4 x i8> undef, i8 %210, i64 0
  %212 = shufflevector <4 x i8> %211, <4 x i8> undef, <4 x i32> zeroinitializer
  %213 = sext <4 x i8> %212 to <4 x i16>
  %214 = mul nsw <4 x i16> %213, %96
  %215 = add <4 x i16> %214, %77
  %216 = add nsw i64 %91, 60
  %217 = getelementptr inbounds i8, ptr %p0, i64 %216
  %218 = load i8, ptr %217, align 1, !tbaa !7784
  %219 = insertelement <4 x i8> undef, i8 %218, i64 0
  %220 = shufflevector <4 x i8> %219, <4 x i8> undef, <4 x i32> zeroinitializer
  %221 = sext <4 x i8> %220 to <4 x i16>
  %222 = mul nsw <4 x i16> %221, %96
  %223 = add <4 x i16> %222, %78
  %224 = add nsw i64 %91, 64
  %225 = getelementptr inbounds i8, ptr %p0, i64 %224
  %226 = load i8, ptr %225, align 1, !tbaa !7784
  %227 = insertelement <4 x i8> undef, i8 %226, i64 0
  %228 = shufflevector <4 x i8> %227, <4 x i8> undef, <4 x i32> zeroinitializer
  %229 = sext <4 x i8> %228 to <4 x i16>
  %230 = mul nsw <4 x i16> %229, %96
  %231 = add <4 x i16> %230, %79
  %232 = add nsw i64 %91, 68
  %233 = getelementptr inbounds i8, ptr %p0, i64 %232
  %234 = load i8, ptr %233, align 1, !tbaa !7784
  %235 = insertelement <4 x i8> undef, i8 %234, i64 0
  %236 = shufflevector <4 x i8> %235, <4 x i8> undef, <4 x i32> zeroinitializer
  %237 = sext <4 x i8> %236 to <4 x i16>
  %238 = mul nsw <4 x i16> %237, %96
  %239 = add <4 x i16> %238, %80
  %240 = add nsw i64 %91, 72
  %241 = getelementptr inbounds i8, ptr %p0, i64 %240
  %242 = load i8, ptr %241, align 1, !tbaa !7784
  %243 = insertelement <4 x i8> undef, i8 %242, i64 0
  %244 = shufflevector <4 x i8> %243, <4 x i8> undef, <4 x i32> zeroinitializer
  %245 = sext <4 x i8> %244 to <4 x i16>
  %246 = mul nsw <4 x i16> %245, %96
  %247 = add <4 x i16> %246, %81
  %248 = add nsw i64 %91, 76
  %249 = getelementptr inbounds i8, ptr %p0, i64 %248
  %250 = load i8, ptr %249, align 1, !tbaa !7784
  %251 = insertelement <4 x i8> undef, i8 %250, i64 0
  %252 = shufflevector <4 x i8> %251, <4 x i8> undef, <4 x i32> zeroinitializer
  %253 = sext <4 x i8> %252 to <4 x i16>
  %254 = mul nsw <4 x i16> %253, %96
  %255 = add <4 x i16> %254, %82
  %256 = add nsw i64 %91, 80
  %257 = getelementptr inbounds i8, ptr %p0, i64 %256
  %258 = load i8, ptr %257, align 1, !tbaa !7784
  %259 = insertelement <4 x i8> undef, i8 %258, i64 0
  %260 = shufflevector <4 x i8> %259, <4 x i8> undef, <4 x i32> zeroinitializer
  %261 = sext <4 x i8> %260 to <4 x i16>
  %262 = mul nsw <4 x i16> %261, %96
  %263 = add <4 x i16> %262, %83
  %264 = add nsw i64 %91, 84
  %265 = getelementptr inbounds i8, ptr %p0, i64 %264
  %266 = load i8, ptr %265, align 1, !tbaa !7784
  %267 = insertelement <4 x i8> undef, i8 %266, i64 0
  %268 = shufflevector <4 x i8> %267, <4 x i8> undef, <4 x i32> zeroinitializer
  %269 = sext <4 x i8> %268 to <4 x i16>
  %270 = mul nsw <4 x i16> %269, %96
  %271 = add <4 x i16> %270, %84
  %272 = add nsw i64 %91, 88
  %273 = getelementptr inbounds i8, ptr %p0, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !7784
  %275 = insertelement <4 x i8> undef, i8 %274, i64 0
  %276 = shufflevector <4 x i8> %275, <4 x i8> undef, <4 x i32> zeroinitializer
  %277 = sext <4 x i8> %276 to <4 x i16>
  %278 = mul nsw <4 x i16> %277, %96
  %279 = add <4 x i16> %278, %85
  %280 = add nsw i64 %91, 92
  %281 = getelementptr inbounds i8, ptr %p0, i64 %280
  %282 = load i8, ptr %281, align 1, !tbaa !7784
  %283 = insertelement <4 x i8> undef, i8 %282, i64 0
  %284 = shufflevector <4 x i8> %283, <4 x i8> undef, <4 x i32> zeroinitializer
  %285 = sext <4 x i8> %284 to <4 x i16>
  %286 = mul nsw <4 x i16> %285, %96
  %287 = add <4 x i16> %286, %86
  %288 = add nsw i64 %91, 96
  %289 = getelementptr inbounds i8, ptr %p0, i64 %288
  %290 = load i8, ptr %289, align 1, !tbaa !7784
  %291 = insertelement <4 x i8> undef, i8 %290, i64 0
  %292 = shufflevector <4 x i8> %291, <4 x i8> undef, <4 x i32> zeroinitializer
  %293 = sext <4 x i8> %292 to <4 x i16>
  %294 = mul nsw <4 x i16> %293, %96
  %295 = add <4 x i16> %294, %87
  %296 = add nsw i64 %91, 100
  %297 = getelementptr inbounds i8, ptr %p0, i64 %296
  %298 = load i8, ptr %297, align 1, !tbaa !7784
  %299 = insertelement <4 x i8> undef, i8 %298, i64 0
  %300 = shufflevector <4 x i8> %299, <4 x i8> undef, <4 x i32> zeroinitializer
  %301 = sext <4 x i8> %300 to <4 x i16>
  %302 = mul nsw <4 x i16> %301, %96
  %303 = add <4 x i16> %302, %88
  %304 = add nsw i64 %91, 104
  %305 = getelementptr inbounds i8, ptr %p0, i64 %304
  %306 = load i8, ptr %305, align 1, !tbaa !7784
  %307 = insertelement <4 x i8> undef, i8 %306, i64 0
  %308 = shufflevector <4 x i8> %307, <4 x i8> undef, <4 x i32> zeroinitializer
  %309 = sext <4 x i8> %308 to <4 x i16>
  %310 = mul nsw <4 x i16> %309, %96
  %311 = add <4 x i16> %310, %89
  %312 = add nsw i64 %91, 108
  %313 = getelementptr inbounds i8, ptr %p0, i64 %312
  %314 = load i8, ptr %313, align 1, !tbaa !7784
  %315 = insertelement <4 x i8> undef, i8 %314, i64 0
  %316 = shufflevector <4 x i8> %315, <4 x i8> undef, <4 x i32> zeroinitializer
  %317 = sext <4 x i8> %316 to <4 x i16>
  %318 = mul nsw <4 x i16> %317, %96
  %319 = add <4 x i16> %318, %90
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !59

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next175 = add nuw nsw i64 %indvars.iv174, 1
  %exitcond177.not = icmp eq i64 %indvars.iv.next175, 128
  br i1 %exitcond177.not, label %for_begin_ax3.inner.preheader, label %for_begin_ic.inner.preheader, !prof !59

for_body_ax3.inner:                               ; preds = %for_body_ax3.inner, %for_begin_ax3.inner.preheader
  %indvars.iv178 = phi i64 [ 0, %for_begin_ax3.inner.preheader ], [ %indvars.iv.next179.1, %for_body_ax3.inner ]
  %320 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv178
  %321 = load <4 x i16>, ptr %320, align 16, !tbaa !7786
  %322 = add <4 x i16> %47, %321
  %323 = ashr <4 x i16> %322, %44
  %324 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %323, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %325 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %324, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %326 = trunc <4 x i16> %325 to <4 x i8>
  %327 = shl nuw nsw i64 %indvars.iv178, 2
  %328 = add nsw i64 %327, %58
  %329 = getelementptr inbounds i8, ptr %T_cast, i64 %328
  store <4 x i8> %326, ptr %329, align 4, !tbaa !7787
  %indvars.iv.next179 = or i64 %indvars.iv178, 1
  %330 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv.next179
  %331 = load <4 x i16>, ptr %330, align 8, !tbaa !7786
  %332 = add <4 x i16> %47, %331
  %333 = ashr <4 x i16> %332, %44
  %334 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %333, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %335 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %334, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %336 = trunc <4 x i16> %335 to <4 x i8>
  %337 = shl nuw nsw i64 %indvars.iv.next179, 2
  %338 = add nsw i64 %337, %58
  %339 = getelementptr inbounds i8, ptr %T_cast, i64 %338
  store <4 x i8> %336, ptr %339, align 4, !tbaa !7787
  %indvars.iv.next179.1 = add nuw nsw i64 %indvars.iv178, 2
  %exitcond181.not.1 = icmp eq i64 %indvars.iv.next179.1, 28
  br i1 %exitcond181.not.1, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !7452

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %indvars.iv.next183 = add nsw i64 %indvars.iv182, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next183 to i32
  %exitcond184.not = icmp eq i32 %50, %lftr.wideiv
  br i1 %exitcond184.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_11_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.24, align 8
  %7 = alloca %closure_loop_parallel_i0.i1.fused.i2.fused.23, align 8
  %8 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pad = tail call ptr %8(i32 1, i32 %0, i64 215296, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pad, i64 64) ]
  %9 = icmp eq ptr %data_pad, null
  br i1 %9, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end2, %call_end, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %12, %if_end ], [ %19, %call_end ], [ %., %call_end2 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %data_pad, ptr %7, align 8
  %10 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.23, ptr %7, i64 0, i32 1
  store ptr %1, ptr %10, align 8
  %11 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %12 = call i32 %11(ptr nonnull @__tvm_parallel_lambda.1264, ptr nonnull %7, i32 0)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %call_end, label %common.ret, !prof !18

call_end:                                         ; preds = %if_end
  store ptr %data_pad, ptr %6, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.24, ptr %6, i64 0, i32 1
  store ptr %2, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.24, ptr %6, i64 0, i32 2
  store ptr %3, ptr %15, align 8
  %16 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.24, ptr %6, i64 0, i32 3
  store ptr %4, ptr %16, align 8
  %17 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.24, ptr %6, i64 0, i32 4
  store ptr %5, ptr %17, align 8
  %18 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %19 = call i32 %18(ptr nonnull @__tvm_parallel_lambda.1265, ptr nonnull %6, i32 0)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %call_end2, label %common.ret, !prof !18

call_end2:                                        ; preds = %call_end
  %21 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %22 = call i32 %21(i32 1, i32 %0, ptr nonnull %data_pad)
  %.not = icmp ne i32 %22, 0
  %. = sext i1 %.not to i32
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1264(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.23, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 1855
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 1856)
  %9 = mul nsw i32 %5, %task_id
  %.fr3 = freeze i32 %9
  %10 = tail call i32 @llvm.smin.i32(i32 %.fr3, i32 1856)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_i3.preheader.preheader, label %for_end_i0.i1.fused.i2.fused, !prof !18

for_begin_i3.preheader.preheader:                 ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %.fr3, i32 1856)
  %smin = sext i32 %12 to i64
  %13 = sub i32 %8, %10
  br label %for_begin_i3.preheader

for_begin_i3.preheader:                           ; preds = %for_begin_i3.preheader.preheader, %for_end_i3
  %indvars.iv10 = phi i64 [ %smin, %for_begin_i3.preheader.preheader ], [ %indvars.iv.next11, %for_end_i3 ]
  %indvar = phi i32 [ 0, %for_begin_i3.preheader.preheader ], [ %indvar.next, %for_end_i3 ]
  %14 = trunc i64 %indvars.iv10 to i32
  %cse_var_2 = srem i32 %14, 29
  %15 = icmp sgt i32 %cse_var_2, 0
  %16 = mul nsw i64 %indvars.iv10, 116
  %17 = mul nuw nsw i32 %cse_var_2, 112
  %18 = sdiv i32 %14, 29
  %19 = mul nsw i32 %18, 3136
  %20 = add nsw i32 %17, -116
  %21 = add i32 %20, %19
  br i1 %15, label %for_body_i3.peel.next, label %for_body_i3.us.preheader

for_body_i3.us.preheader:                         ; preds = %for_begin_i3.preheader
  %22 = add i32 %10, %indvar
  %23 = mul i32 %22, 116
  %24 = sext i32 %23 to i64
  %scevgep = getelementptr i8, ptr %data_pad, i64 %24
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(116) %scevgep, i8 0, i64 116, i1 false), !tbaa !7789
  br label %for_end_i3

for_body_i3.peel.next:                            ; preds = %for_begin_i3.preheader
  %25 = getelementptr inbounds i8, ptr %data_pad, i64 %16
  store <4 x i8> zeroinitializer, ptr %25, align 4, !tbaa !7789
  %26 = add i32 %21, 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, ptr %p0, i64 %27
  %29 = load <4 x i8>, ptr %28, align 4, !tbaa !7791
  %30 = add nsw i64 %16, 4
  %31 = getelementptr inbounds i8, ptr %data_pad, i64 %30
  store <4 x i8> %29, ptr %31, align 4, !tbaa !7789
  %32 = add i32 %21, 8
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, ptr %p0, i64 %33
  %35 = load <4 x i8>, ptr %34, align 4, !tbaa !7791
  %36 = add nsw i64 %16, 8
  %37 = getelementptr inbounds i8, ptr %data_pad, i64 %36
  store <4 x i8> %35, ptr %37, align 4, !tbaa !7789
  %38 = add i32 %21, 12
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, ptr %p0, i64 %39
  %41 = load <4 x i8>, ptr %40, align 4, !tbaa !7791
  %42 = add nsw i64 %16, 12
  %43 = getelementptr inbounds i8, ptr %data_pad, i64 %42
  store <4 x i8> %41, ptr %43, align 4, !tbaa !7789
  %44 = add i32 %21, 16
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, ptr %p0, i64 %45
  %47 = load <4 x i8>, ptr %46, align 4, !tbaa !7791
  %48 = add nsw i64 %16, 16
  %49 = getelementptr inbounds i8, ptr %data_pad, i64 %48
  store <4 x i8> %47, ptr %49, align 4, !tbaa !7789
  %50 = add i32 %21, 20
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, ptr %p0, i64 %51
  %53 = load <4 x i8>, ptr %52, align 4, !tbaa !7791
  %54 = add nsw i64 %16, 20
  %55 = getelementptr inbounds i8, ptr %data_pad, i64 %54
  store <4 x i8> %53, ptr %55, align 4, !tbaa !7789
  %56 = add i32 %21, 24
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, ptr %p0, i64 %57
  %59 = load <4 x i8>, ptr %58, align 4, !tbaa !7791
  %60 = add nsw i64 %16, 24
  %61 = getelementptr inbounds i8, ptr %data_pad, i64 %60
  store <4 x i8> %59, ptr %61, align 4, !tbaa !7789
  %62 = add i32 %21, 28
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i8, ptr %p0, i64 %63
  %65 = load <4 x i8>, ptr %64, align 4, !tbaa !7791
  %66 = add nsw i64 %16, 28
  %67 = getelementptr inbounds i8, ptr %data_pad, i64 %66
  store <4 x i8> %65, ptr %67, align 4, !tbaa !7789
  %68 = add i32 %21, 32
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, ptr %p0, i64 %69
  %71 = load <4 x i8>, ptr %70, align 4, !tbaa !7791
  %72 = add nsw i64 %16, 32
  %73 = getelementptr inbounds i8, ptr %data_pad, i64 %72
  store <4 x i8> %71, ptr %73, align 4, !tbaa !7789
  %74 = add i32 %21, 36
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8, ptr %p0, i64 %75
  %77 = load <4 x i8>, ptr %76, align 4, !tbaa !7791
  %78 = add nsw i64 %16, 36
  %79 = getelementptr inbounds i8, ptr %data_pad, i64 %78
  store <4 x i8> %77, ptr %79, align 4, !tbaa !7789
  %80 = add i32 %21, 40
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i8, ptr %p0, i64 %81
  %83 = load <4 x i8>, ptr %82, align 4, !tbaa !7791
  %84 = add nsw i64 %16, 40
  %85 = getelementptr inbounds i8, ptr %data_pad, i64 %84
  store <4 x i8> %83, ptr %85, align 4, !tbaa !7789
  %86 = add i32 %21, 44
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, ptr %p0, i64 %87
  %89 = load <4 x i8>, ptr %88, align 4, !tbaa !7791
  %90 = add nsw i64 %16, 44
  %91 = getelementptr inbounds i8, ptr %data_pad, i64 %90
  store <4 x i8> %89, ptr %91, align 4, !tbaa !7789
  %92 = add i32 %21, 48
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8, ptr %p0, i64 %93
  %95 = load <4 x i8>, ptr %94, align 4, !tbaa !7791
  %96 = add nsw i64 %16, 48
  %97 = getelementptr inbounds i8, ptr %data_pad, i64 %96
  store <4 x i8> %95, ptr %97, align 4, !tbaa !7789
  %98 = add i32 %21, 52
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i8, ptr %p0, i64 %99
  %101 = load <4 x i8>, ptr %100, align 4, !tbaa !7791
  %102 = add nsw i64 %16, 52
  %103 = getelementptr inbounds i8, ptr %data_pad, i64 %102
  store <4 x i8> %101, ptr %103, align 4, !tbaa !7789
  %104 = add i32 %21, 56
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8, ptr %p0, i64 %105
  %107 = load <4 x i8>, ptr %106, align 4, !tbaa !7791
  %108 = add nsw i64 %16, 56
  %109 = getelementptr inbounds i8, ptr %data_pad, i64 %108
  store <4 x i8> %107, ptr %109, align 4, !tbaa !7789
  %110 = add i32 %21, 60
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i8, ptr %p0, i64 %111
  %113 = load <4 x i8>, ptr %112, align 4, !tbaa !7791
  %114 = add nsw i64 %16, 60
  %115 = getelementptr inbounds i8, ptr %data_pad, i64 %114
  store <4 x i8> %113, ptr %115, align 4, !tbaa !7789
  %116 = add i32 %21, 64
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, ptr %p0, i64 %117
  %119 = load <4 x i8>, ptr %118, align 4, !tbaa !7791
  %120 = add nsw i64 %16, 64
  %121 = getelementptr inbounds i8, ptr %data_pad, i64 %120
  store <4 x i8> %119, ptr %121, align 4, !tbaa !7789
  %122 = add i32 %21, 68
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i8, ptr %p0, i64 %123
  %125 = load <4 x i8>, ptr %124, align 4, !tbaa !7791
  %126 = add nsw i64 %16, 68
  %127 = getelementptr inbounds i8, ptr %data_pad, i64 %126
  store <4 x i8> %125, ptr %127, align 4, !tbaa !7789
  %128 = add i32 %21, 72
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8, ptr %p0, i64 %129
  %131 = load <4 x i8>, ptr %130, align 4, !tbaa !7791
  %132 = add nsw i64 %16, 72
  %133 = getelementptr inbounds i8, ptr %data_pad, i64 %132
  store <4 x i8> %131, ptr %133, align 4, !tbaa !7789
  %134 = add i32 %21, 76
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i8, ptr %p0, i64 %135
  %137 = load <4 x i8>, ptr %136, align 4, !tbaa !7791
  %138 = add nsw i64 %16, 76
  %139 = getelementptr inbounds i8, ptr %data_pad, i64 %138
  store <4 x i8> %137, ptr %139, align 4, !tbaa !7789
  %140 = add i32 %21, 80
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds i8, ptr %p0, i64 %141
  %143 = load <4 x i8>, ptr %142, align 4, !tbaa !7791
  %144 = add nsw i64 %16, 80
  %145 = getelementptr inbounds i8, ptr %data_pad, i64 %144
  store <4 x i8> %143, ptr %145, align 4, !tbaa !7789
  %146 = add i32 %21, 84
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i8, ptr %p0, i64 %147
  %149 = load <4 x i8>, ptr %148, align 4, !tbaa !7791
  %150 = add nsw i64 %16, 84
  %151 = getelementptr inbounds i8, ptr %data_pad, i64 %150
  store <4 x i8> %149, ptr %151, align 4, !tbaa !7789
  %152 = add i32 %21, 88
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i8, ptr %p0, i64 %153
  %155 = load <4 x i8>, ptr %154, align 4, !tbaa !7791
  %156 = add nsw i64 %16, 88
  %157 = getelementptr inbounds i8, ptr %data_pad, i64 %156
  store <4 x i8> %155, ptr %157, align 4, !tbaa !7789
  %158 = add i32 %21, 92
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds i8, ptr %p0, i64 %159
  %161 = load <4 x i8>, ptr %160, align 4, !tbaa !7791
  %162 = add nsw i64 %16, 92
  %163 = getelementptr inbounds i8, ptr %data_pad, i64 %162
  store <4 x i8> %161, ptr %163, align 4, !tbaa !7789
  %164 = add i32 %21, 96
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds i8, ptr %p0, i64 %165
  %167 = load <4 x i8>, ptr %166, align 4, !tbaa !7791
  %168 = add nsw i64 %16, 96
  %169 = getelementptr inbounds i8, ptr %data_pad, i64 %168
  store <4 x i8> %167, ptr %169, align 4, !tbaa !7789
  %170 = add i32 %21, 100
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds i8, ptr %p0, i64 %171
  %173 = load <4 x i8>, ptr %172, align 4, !tbaa !7791
  %174 = add nsw i64 %16, 100
  %175 = getelementptr inbounds i8, ptr %data_pad, i64 %174
  store <4 x i8> %173, ptr %175, align 4, !tbaa !7789
  %176 = add i32 %21, 104
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i8, ptr %p0, i64 %177
  %179 = load <4 x i8>, ptr %178, align 4, !tbaa !7791
  %180 = add nsw i64 %16, 104
  %181 = getelementptr inbounds i8, ptr %data_pad, i64 %180
  store <4 x i8> %179, ptr %181, align 4, !tbaa !7789
  %182 = add i32 %21, 108
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i8, ptr %p0, i64 %183
  %185 = load <4 x i8>, ptr %184, align 4, !tbaa !7791
  %186 = add nsw i64 %16, 108
  %187 = getelementptr inbounds i8, ptr %data_pad, i64 %186
  store <4 x i8> %185, ptr %187, align 4, !tbaa !7789
  %188 = add i32 %21, 112
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds i8, ptr %p0, i64 %189
  %191 = load <4 x i8>, ptr %190, align 4, !tbaa !7791
  %192 = add nsw i64 %16, 112
  %193 = getelementptr inbounds i8, ptr %data_pad, i64 %192
  store <4 x i8> %191, ptr %193, align 4, !tbaa !7789
  br label %for_end_i3

for_end_i0.i1.fused.i2.fused:                     ; preds = %for_end_i3, %parallel_closure_entry
  ret i32 0

for_end_i3:                                       ; preds = %for_body_i3.peel.next, %for_body_i3.us.preheader
  %indvars.iv.next11 = add nsw i64 %indvars.iv10, 1
  %indvar.next = add nuw i32 %indvar, 1
  %exitcond12.not = icmp eq i32 %indvar.next, %13
  br i1 %exitcond12.not, label %for_end_i0.i1.fused.i2.fused, label %for_begin_i3.preheader, !prof !59
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1265(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.24, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.24, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 895
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 896)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_body_ax0.ax1.fused.ax2.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_body_ax0.ax1.fused.ax2.fused.lr.ph:           ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.24, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.24, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = load i16, ptr %p3, align 64, !tbaa !7793
  %16 = insertelement <4 x i16> undef, i16 %15, i64 0
  %17 = shufflevector <4 x i16> %16, <4 x i16> undef, <4 x i32> zeroinitializer
  %18 = load i16, ptr %p2, align 64, !tbaa !7805
  %19 = insertelement <4 x i16> undef, i16 %18, i64 0
  %20 = shufflevector <4 x i16> %19, <4 x i16> undef, <4 x i32> zeroinitializer
  %21 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %smin = sext i32 %21 to i64
  %22 = add i32 %9, %21
  %23 = sub i32 %22, %11
  br label %for_body_ax0.ax1.fused.ax2.fused

for_body_ax0.ax1.fused.ax2.fused:                 ; preds = %for_body_ax0.ax1.fused.ax2.fused.lr.ph, %for_begin_ax3.inner.preheader
  %indvars.iv191 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.fused.lr.ph ], [ %indvars.iv.next192, %for_begin_ax3.inner.preheader ]
  %24 = trunc i64 %indvars.iv191 to i32
  %25 = srem i32 %24, 14
  %26 = mul nsw i32 %25, 232
  %27 = sdiv i32 %24, 14
  %28 = mul nsw i32 %27, 9216
  %29 = sext i32 %28 to i64
  %30 = sext i32 %26 to i64
  br label %for_begin_kh.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.inner.preheader, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_end_kh
  %31 = mul nsw i64 %indvars.iv191, 56
  %32 = add <4 x i16> %20, %167
  %33 = ashr <4 x i16> %32, %17
  %34 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %33, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %35 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %34, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %36 = trunc <4 x i16> %35 to <4 x i8>
  %37 = getelementptr inbounds i8, ptr %T_cast, i64 %31
  store <4 x i8> %36, ptr %37, align 4, !tbaa !7817
  %38 = add <4 x i16> %20, %175
  %39 = ashr <4 x i16> %38, %17
  %40 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %39, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %41 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %40, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %42 = trunc <4 x i16> %41 to <4 x i8>
  %43 = or i64 %31, 4
  %44 = getelementptr inbounds i8, ptr %T_cast, i64 %43
  store <4 x i8> %42, ptr %44, align 4, !tbaa !7817
  %45 = add <4 x i16> %20, %183
  %46 = ashr <4 x i16> %45, %17
  %47 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %46, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %48 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %47, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %49 = trunc <4 x i16> %48 to <4 x i8>
  %50 = add nsw i64 %31, 8
  %51 = getelementptr inbounds i8, ptr %T_cast, i64 %50
  store <4 x i8> %49, ptr %51, align 4, !tbaa !7817
  %52 = add <4 x i16> %20, %191
  %53 = ashr <4 x i16> %52, %17
  %54 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %53, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %55 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %54, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %56 = trunc <4 x i16> %55 to <4 x i8>
  %57 = add nsw i64 %31, 12
  %58 = getelementptr inbounds i8, ptr %T_cast, i64 %57
  store <4 x i8> %56, ptr %58, align 4, !tbaa !7817
  %59 = add <4 x i16> %20, %199
  %60 = ashr <4 x i16> %59, %17
  %61 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %60, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %62 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %61, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %63 = trunc <4 x i16> %62 to <4 x i8>
  %64 = add nsw i64 %31, 16
  %65 = getelementptr inbounds i8, ptr %T_cast, i64 %64
  store <4 x i8> %63, ptr %65, align 4, !tbaa !7817
  %66 = add <4 x i16> %20, %207
  %67 = ashr <4 x i16> %66, %17
  %68 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %67, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %69 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %68, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %70 = trunc <4 x i16> %69 to <4 x i8>
  %71 = add nsw i64 %31, 20
  %72 = getelementptr inbounds i8, ptr %T_cast, i64 %71
  store <4 x i8> %70, ptr %72, align 4, !tbaa !7817
  %73 = add <4 x i16> %20, %215
  %74 = ashr <4 x i16> %73, %17
  %75 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %74, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %76 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %75, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %77 = trunc <4 x i16> %76 to <4 x i8>
  %78 = add nsw i64 %31, 24
  %79 = getelementptr inbounds i8, ptr %T_cast, i64 %78
  store <4 x i8> %77, ptr %79, align 4, !tbaa !7817
  %80 = add <4 x i16> %20, %223
  %81 = ashr <4 x i16> %80, %17
  %82 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %81, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %83 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %82, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %84 = trunc <4 x i16> %83 to <4 x i8>
  %85 = add nsw i64 %31, 28
  %86 = getelementptr inbounds i8, ptr %T_cast, i64 %85
  store <4 x i8> %84, ptr %86, align 4, !tbaa !7817
  %87 = add <4 x i16> %20, %231
  %88 = ashr <4 x i16> %87, %17
  %89 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %88, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %90 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %89, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %91 = trunc <4 x i16> %90 to <4 x i8>
  %92 = add nsw i64 %31, 32
  %93 = getelementptr inbounds i8, ptr %T_cast, i64 %92
  store <4 x i8> %91, ptr %93, align 4, !tbaa !7817
  %94 = add <4 x i16> %20, %239
  %95 = ashr <4 x i16> %94, %17
  %96 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %95, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %97 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %96, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %98 = trunc <4 x i16> %97 to <4 x i8>
  %99 = add nsw i64 %31, 36
  %100 = getelementptr inbounds i8, ptr %T_cast, i64 %99
  store <4 x i8> %98, ptr %100, align 4, !tbaa !7817
  %101 = add <4 x i16> %20, %247
  %102 = ashr <4 x i16> %101, %17
  %103 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %102, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %104 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %103, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %105 = trunc <4 x i16> %104 to <4 x i8>
  %106 = add nsw i64 %31, 40
  %107 = getelementptr inbounds i8, ptr %T_cast, i64 %106
  store <4 x i8> %105, ptr %107, align 4, !tbaa !7817
  %108 = add <4 x i16> %20, %255
  %109 = ashr <4 x i16> %108, %17
  %110 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %109, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %111 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %110, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %112 = trunc <4 x i16> %111 to <4 x i8>
  %113 = add nsw i64 %31, 44
  %114 = getelementptr inbounds i8, ptr %T_cast, i64 %113
  store <4 x i8> %112, ptr %114, align 4, !tbaa !7817
  %115 = add <4 x i16> %20, %263
  %116 = ashr <4 x i16> %115, %17
  %117 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %116, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %118 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %117, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %119 = trunc <4 x i16> %118 to <4 x i8>
  %120 = add nsw i64 %31, 48
  %121 = getelementptr inbounds i8, ptr %T_cast, i64 %120
  store <4 x i8> %119, ptr %121, align 4, !tbaa !7817
  %122 = add <4 x i16> %20, %271
  %123 = ashr <4 x i16> %122, %17
  %124 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %123, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %125 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %124, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %126 = trunc <4 x i16> %125 to <4 x i8>
  %127 = add nsw i64 %31, 52
  %128 = getelementptr inbounds i8, ptr %T_cast, i64 %127
  store <4 x i8> %126, ptr %128, align 4, !tbaa !7817
  %indvars.iv.next192 = add nsw i64 %indvars.iv191, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next192 to i32
  %exitcond193.not = icmp eq i32 %23, %lftr.wideiv
  br i1 %exitcond193.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_body_ax0.ax1.fused.ax2.fused, !prof !59

for_begin_kh.preheader:                           ; preds = %for_body_ax0.ax1.fused.ax2.fused, %for_end_kh
  %indvars.iv183 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.fused ], [ %indvars.iv.next184, %for_end_kh ]
  %.lcssa29.lcssa70.lcssa112151 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %167, %for_end_kh ]
  %.lcssa231.lcssa72.lcssa114150 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %175, %for_end_kh ]
  %.lcssa432.lcssa74.lcssa116149 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %183, %for_end_kh ]
  %.lcssa634.lcssa75.lcssa118148 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %191, %for_end_kh ]
  %.lcssa836.lcssa77.lcssa119147 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %199, %for_end_kh ]
  %.lcssa1038.lcssa79.lcssa121146 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %207, %for_end_kh ]
  %.lcssa1240.lcssa81.lcssa123145 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %215, %for_end_kh ]
  %.lcssa1442.lcssa83.lcssa125144 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %223, %for_end_kh ]
  %.lcssa1644.lcssa85.lcssa127143 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %231, %for_end_kh ]
  %.lcssa1846.lcssa87.lcssa129142 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %239, %for_end_kh ]
  %.lcssa2048.lcssa89.lcssa131141 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %247, %for_end_kh ]
  %.lcssa2250.lcssa91.lcssa133140 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %255, %for_end_kh ]
  %.lcssa2452.lcssa93.lcssa135139 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %263, %for_end_kh ]
  %.lcssa2654.lcssa95.lcssa137138 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %271, %for_end_kh ]
  %129 = mul nuw nsw i64 %indvars.iv183, 3364
  %130 = add nsw i64 %129, %30
  %131 = mul nuw nsw i64 %indvars.iv183, 144
  %132 = add nsw i64 %131, %29
  br label %for_begin_kw.preheader

for_begin_kw.preheader:                           ; preds = %for_begin_kh.preheader, %for_end_kw
  %indvars.iv179 = phi i64 [ 0, %for_begin_kh.preheader ], [ %indvars.iv.next180, %for_end_kw ]
  %.lcssa29.lcssa70109 = phi <4 x i16> [ %.lcssa29.lcssa70.lcssa112151, %for_begin_kh.preheader ], [ %167, %for_end_kw ]
  %.lcssa231.lcssa72108 = phi <4 x i16> [ %.lcssa231.lcssa72.lcssa114150, %for_begin_kh.preheader ], [ %175, %for_end_kw ]
  %.lcssa432.lcssa74107 = phi <4 x i16> [ %.lcssa432.lcssa74.lcssa116149, %for_begin_kh.preheader ], [ %183, %for_end_kw ]
  %.lcssa634.lcssa75106 = phi <4 x i16> [ %.lcssa634.lcssa75.lcssa118148, %for_begin_kh.preheader ], [ %191, %for_end_kw ]
  %.lcssa836.lcssa77105 = phi <4 x i16> [ %.lcssa836.lcssa77.lcssa119147, %for_begin_kh.preheader ], [ %199, %for_end_kw ]
  %.lcssa1038.lcssa79104 = phi <4 x i16> [ %.lcssa1038.lcssa79.lcssa121146, %for_begin_kh.preheader ], [ %207, %for_end_kw ]
  %.lcssa1240.lcssa81103 = phi <4 x i16> [ %.lcssa1240.lcssa81.lcssa123145, %for_begin_kh.preheader ], [ %215, %for_end_kw ]
  %.lcssa1442.lcssa83102 = phi <4 x i16> [ %.lcssa1442.lcssa83.lcssa125144, %for_begin_kh.preheader ], [ %223, %for_end_kw ]
  %.lcssa1644.lcssa85101 = phi <4 x i16> [ %.lcssa1644.lcssa85.lcssa127143, %for_begin_kh.preheader ], [ %231, %for_end_kw ]
  %.lcssa1846.lcssa87100 = phi <4 x i16> [ %.lcssa1846.lcssa87.lcssa129142, %for_begin_kh.preheader ], [ %239, %for_end_kw ]
  %.lcssa2048.lcssa8999 = phi <4 x i16> [ %.lcssa2048.lcssa89.lcssa131141, %for_begin_kh.preheader ], [ %247, %for_end_kw ]
  %.lcssa2250.lcssa9198 = phi <4 x i16> [ %.lcssa2250.lcssa91.lcssa133140, %for_begin_kh.preheader ], [ %255, %for_end_kw ]
  %.lcssa2452.lcssa9397 = phi <4 x i16> [ %.lcssa2452.lcssa93.lcssa135139, %for_begin_kh.preheader ], [ %263, %for_end_kw ]
  %.lcssa2654.lcssa9596 = phi <4 x i16> [ %.lcssa2654.lcssa95.lcssa137138, %for_begin_kh.preheader ], [ %271, %for_end_kw ]
  %133 = mul nuw nsw i64 %indvars.iv179, 116
  %134 = add nsw i64 %130, %133
  %135 = mul nuw nsw i64 %indvars.iv179, 48
  %136 = add nsw i64 %132, %135
  br label %for_begin_ic.inner.preheader

for_end_kh:                                       ; preds = %for_end_kw
  %indvars.iv.next184 = add nuw nsw i64 %indvars.iv183, 1
  %exitcond186.not = icmp eq i64 %indvars.iv.next184, 64
  br i1 %exitcond186.not, label %for_begin_ax3.inner.preheader, label %for_begin_kh.preheader, !prof !59

for_begin_ic.inner.preheader:                     ; preds = %for_begin_kw.preheader, %for_end_ic.inner
  %indvars.iv175 = phi i64 [ 0, %for_begin_kw.preheader ], [ %indvars.iv.next176, %for_end_ic.inner ]
  %.lcssa2968 = phi <4 x i16> [ %.lcssa29.lcssa70109, %for_begin_kw.preheader ], [ %167, %for_end_ic.inner ]
  %.lcssa23167 = phi <4 x i16> [ %.lcssa231.lcssa72108, %for_begin_kw.preheader ], [ %175, %for_end_ic.inner ]
  %.lcssa43266 = phi <4 x i16> [ %.lcssa432.lcssa74107, %for_begin_kw.preheader ], [ %183, %for_end_ic.inner ]
  %.lcssa63465 = phi <4 x i16> [ %.lcssa634.lcssa75106, %for_begin_kw.preheader ], [ %191, %for_end_ic.inner ]
  %.lcssa83664 = phi <4 x i16> [ %.lcssa836.lcssa77105, %for_begin_kw.preheader ], [ %199, %for_end_ic.inner ]
  %.lcssa103863 = phi <4 x i16> [ %.lcssa1038.lcssa79104, %for_begin_kw.preheader ], [ %207, %for_end_ic.inner ]
  %.lcssa124062 = phi <4 x i16> [ %.lcssa1240.lcssa81103, %for_begin_kw.preheader ], [ %215, %for_end_ic.inner ]
  %.lcssa144261 = phi <4 x i16> [ %.lcssa1442.lcssa83102, %for_begin_kw.preheader ], [ %223, %for_end_ic.inner ]
  %.lcssa164460 = phi <4 x i16> [ %.lcssa1644.lcssa85101, %for_begin_kw.preheader ], [ %231, %for_end_ic.inner ]
  %.lcssa184659 = phi <4 x i16> [ %.lcssa1846.lcssa87100, %for_begin_kw.preheader ], [ %239, %for_end_ic.inner ]
  %.lcssa204858 = phi <4 x i16> [ %.lcssa2048.lcssa8999, %for_begin_kw.preheader ], [ %247, %for_end_ic.inner ]
  %.lcssa225057 = phi <4 x i16> [ %.lcssa2250.lcssa9198, %for_begin_kw.preheader ], [ %255, %for_end_ic.inner ]
  %.lcssa245256 = phi <4 x i16> [ %.lcssa2452.lcssa9397, %for_begin_kw.preheader ], [ %263, %for_end_ic.inner ]
  %.lcssa265455 = phi <4 x i16> [ %.lcssa2654.lcssa9596, %for_begin_kw.preheader ], [ %271, %for_end_ic.inner ]
  %137 = shl nsw i64 %indvars.iv175, 2
  %138 = add nsw i64 %134, %137
  %139 = shl nsw i64 %indvars.iv175, 4
  %140 = add nsw i64 %136, %139
  br label %for_body_ic.inner

for_end_kw:                                       ; preds = %for_end_ic.inner
  %indvars.iv.next180 = add nuw nsw i64 %indvars.iv179, 1
  %exitcond182.not = icmp eq i64 %indvars.iv.next180, 3
  br i1 %exitcond182.not, label %for_end_kh, label %for_begin_kw.preheader, !prof !59

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %141 = phi <4 x i16> [ %.lcssa2968, %for_begin_ic.inner.preheader ], [ %167, %for_body_ic.inner ]
  %142 = phi <4 x i16> [ %.lcssa23167, %for_begin_ic.inner.preheader ], [ %175, %for_body_ic.inner ]
  %143 = phi <4 x i16> [ %.lcssa43266, %for_begin_ic.inner.preheader ], [ %183, %for_body_ic.inner ]
  %144 = phi <4 x i16> [ %.lcssa63465, %for_begin_ic.inner.preheader ], [ %191, %for_body_ic.inner ]
  %145 = phi <4 x i16> [ %.lcssa83664, %for_begin_ic.inner.preheader ], [ %199, %for_body_ic.inner ]
  %146 = phi <4 x i16> [ %.lcssa103863, %for_begin_ic.inner.preheader ], [ %207, %for_body_ic.inner ]
  %147 = phi <4 x i16> [ %.lcssa124062, %for_begin_ic.inner.preheader ], [ %215, %for_body_ic.inner ]
  %148 = phi <4 x i16> [ %.lcssa144261, %for_begin_ic.inner.preheader ], [ %223, %for_body_ic.inner ]
  %149 = phi <4 x i16> [ %.lcssa164460, %for_begin_ic.inner.preheader ], [ %231, %for_body_ic.inner ]
  %150 = phi <4 x i16> [ %.lcssa184659, %for_begin_ic.inner.preheader ], [ %239, %for_body_ic.inner ]
  %151 = phi <4 x i16> [ %.lcssa204858, %for_begin_ic.inner.preheader ], [ %247, %for_body_ic.inner ]
  %152 = phi <4 x i16> [ %.lcssa225057, %for_begin_ic.inner.preheader ], [ %255, %for_body_ic.inner ]
  %153 = phi <4 x i16> [ %.lcssa245256, %for_begin_ic.inner.preheader ], [ %263, %for_body_ic.inner ]
  %154 = phi <4 x i16> [ %.lcssa265455, %for_begin_ic.inner.preheader ], [ %271, %for_body_ic.inner ]
  %155 = add nsw i64 %138, %indvars.iv
  %156 = shl nuw nsw i64 %indvars.iv, 2
  %157 = add nsw i64 %140, %156
  %158 = getelementptr inbounds i8, ptr %p1, i64 %157
  %159 = load <4 x i8>, ptr %158, align 4, !tbaa !7819
  %160 = sext <4 x i8> %159 to <4 x i16>
  %161 = getelementptr inbounds i8, ptr %data_pad, i64 %155
  %162 = load i8, ptr %161, align 1, !tbaa !7789
  %163 = insertelement <4 x i8> undef, i8 %162, i64 0
  %164 = shufflevector <4 x i8> %163, <4 x i8> undef, <4 x i32> zeroinitializer
  %165 = sext <4 x i8> %164 to <4 x i16>
  %166 = mul nsw <4 x i16> %165, %160
  %167 = add <4 x i16> %166, %141
  %168 = add nsw i64 %155, 8
  %169 = getelementptr inbounds i8, ptr %data_pad, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !7789
  %171 = insertelement <4 x i8> undef, i8 %170, i64 0
  %172 = shufflevector <4 x i8> %171, <4 x i8> undef, <4 x i32> zeroinitializer
  %173 = sext <4 x i8> %172 to <4 x i16>
  %174 = mul nsw <4 x i16> %173, %160
  %175 = add <4 x i16> %174, %142
  %176 = add nsw i64 %155, 16
  %177 = getelementptr inbounds i8, ptr %data_pad, i64 %176
  %178 = load i8, ptr %177, align 1, !tbaa !7789
  %179 = insertelement <4 x i8> undef, i8 %178, i64 0
  %180 = shufflevector <4 x i8> %179, <4 x i8> undef, <4 x i32> zeroinitializer
  %181 = sext <4 x i8> %180 to <4 x i16>
  %182 = mul nsw <4 x i16> %181, %160
  %183 = add <4 x i16> %182, %143
  %184 = add nsw i64 %155, 24
  %185 = getelementptr inbounds i8, ptr %data_pad, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !7789
  %187 = insertelement <4 x i8> undef, i8 %186, i64 0
  %188 = shufflevector <4 x i8> %187, <4 x i8> undef, <4 x i32> zeroinitializer
  %189 = sext <4 x i8> %188 to <4 x i16>
  %190 = mul nsw <4 x i16> %189, %160
  %191 = add <4 x i16> %190, %144
  %192 = add nsw i64 %155, 32
  %193 = getelementptr inbounds i8, ptr %data_pad, i64 %192
  %194 = load i8, ptr %193, align 1, !tbaa !7789
  %195 = insertelement <4 x i8> undef, i8 %194, i64 0
  %196 = shufflevector <4 x i8> %195, <4 x i8> undef, <4 x i32> zeroinitializer
  %197 = sext <4 x i8> %196 to <4 x i16>
  %198 = mul nsw <4 x i16> %197, %160
  %199 = add <4 x i16> %198, %145
  %200 = add nsw i64 %155, 40
  %201 = getelementptr inbounds i8, ptr %data_pad, i64 %200
  %202 = load i8, ptr %201, align 1, !tbaa !7789
  %203 = insertelement <4 x i8> undef, i8 %202, i64 0
  %204 = shufflevector <4 x i8> %203, <4 x i8> undef, <4 x i32> zeroinitializer
  %205 = sext <4 x i8> %204 to <4 x i16>
  %206 = mul nsw <4 x i16> %205, %160
  %207 = add <4 x i16> %206, %146
  %208 = add nsw i64 %155, 48
  %209 = getelementptr inbounds i8, ptr %data_pad, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !7789
  %211 = insertelement <4 x i8> undef, i8 %210, i64 0
  %212 = shufflevector <4 x i8> %211, <4 x i8> undef, <4 x i32> zeroinitializer
  %213 = sext <4 x i8> %212 to <4 x i16>
  %214 = mul nsw <4 x i16> %213, %160
  %215 = add <4 x i16> %214, %147
  %216 = add nsw i64 %155, 56
  %217 = getelementptr inbounds i8, ptr %data_pad, i64 %216
  %218 = load i8, ptr %217, align 1, !tbaa !7789
  %219 = insertelement <4 x i8> undef, i8 %218, i64 0
  %220 = shufflevector <4 x i8> %219, <4 x i8> undef, <4 x i32> zeroinitializer
  %221 = sext <4 x i8> %220 to <4 x i16>
  %222 = mul nsw <4 x i16> %221, %160
  %223 = add <4 x i16> %222, %148
  %224 = add nsw i64 %155, 64
  %225 = getelementptr inbounds i8, ptr %data_pad, i64 %224
  %226 = load i8, ptr %225, align 1, !tbaa !7789
  %227 = insertelement <4 x i8> undef, i8 %226, i64 0
  %228 = shufflevector <4 x i8> %227, <4 x i8> undef, <4 x i32> zeroinitializer
  %229 = sext <4 x i8> %228 to <4 x i16>
  %230 = mul nsw <4 x i16> %229, %160
  %231 = add <4 x i16> %230, %149
  %232 = add nsw i64 %155, 72
  %233 = getelementptr inbounds i8, ptr %data_pad, i64 %232
  %234 = load i8, ptr %233, align 1, !tbaa !7789
  %235 = insertelement <4 x i8> undef, i8 %234, i64 0
  %236 = shufflevector <4 x i8> %235, <4 x i8> undef, <4 x i32> zeroinitializer
  %237 = sext <4 x i8> %236 to <4 x i16>
  %238 = mul nsw <4 x i16> %237, %160
  %239 = add <4 x i16> %238, %150
  %240 = add nsw i64 %155, 80
  %241 = getelementptr inbounds i8, ptr %data_pad, i64 %240
  %242 = load i8, ptr %241, align 1, !tbaa !7789
  %243 = insertelement <4 x i8> undef, i8 %242, i64 0
  %244 = shufflevector <4 x i8> %243, <4 x i8> undef, <4 x i32> zeroinitializer
  %245 = sext <4 x i8> %244 to <4 x i16>
  %246 = mul nsw <4 x i16> %245, %160
  %247 = add <4 x i16> %246, %151
  %248 = add nsw i64 %155, 88
  %249 = getelementptr inbounds i8, ptr %data_pad, i64 %248
  %250 = load i8, ptr %249, align 1, !tbaa !7789
  %251 = insertelement <4 x i8> undef, i8 %250, i64 0
  %252 = shufflevector <4 x i8> %251, <4 x i8> undef, <4 x i32> zeroinitializer
  %253 = sext <4 x i8> %252 to <4 x i16>
  %254 = mul nsw <4 x i16> %253, %160
  %255 = add <4 x i16> %254, %152
  %256 = add nsw i64 %155, 96
  %257 = getelementptr inbounds i8, ptr %data_pad, i64 %256
  %258 = load i8, ptr %257, align 1, !tbaa !7789
  %259 = insertelement <4 x i8> undef, i8 %258, i64 0
  %260 = shufflevector <4 x i8> %259, <4 x i8> undef, <4 x i32> zeroinitializer
  %261 = sext <4 x i8> %260 to <4 x i16>
  %262 = mul nsw <4 x i16> %261, %160
  %263 = add <4 x i16> %262, %153
  %264 = add nsw i64 %155, 104
  %265 = getelementptr inbounds i8, ptr %data_pad, i64 %264
  %266 = load i8, ptr %265, align 1, !tbaa !7789
  %267 = insertelement <4 x i8> undef, i8 %266, i64 0
  %268 = shufflevector <4 x i8> %267, <4 x i8> undef, <4 x i32> zeroinitializer
  %269 = sext <4 x i8> %268 to <4 x i16>
  %270 = mul nsw <4 x i16> %269, %160
  %271 = add <4 x i16> %270, %154
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !59

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next176 = add nuw nsw i64 %indvars.iv175, 1
  %exitcond178.not = icmp eq i64 %indvars.iv.next176, 3
  br i1 %exitcond178.not, label %for_end_kw, label %for_begin_ic.inner.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_12_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1315, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1315(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 1791
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 1792)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 1792)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph:     ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = load i16, ptr %p3, align 64, !tbaa !7821
  %16 = insertelement <4 x i16> undef, i16 %15, i64 0
  %17 = shufflevector <4 x i16> %16, <4 x i16> undef, <4 x i32> zeroinitializer
  %18 = load i16, ptr %p2, align 64, !tbaa !7833
  %19 = insertelement <4 x i16> undef, i16 %18, i64 0
  %20 = shufflevector <4 x i16> %19, <4 x i16> undef, <4 x i32> zeroinitializer
  %21 = tail call i32 @llvm.smin.i32(i32 %10, i32 1792)
  %smin = sext i32 %21 to i64
  %22 = add i32 %9, %21
  %23 = sub i32 %22, %11
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, %for_begin_ax2.inner.preheader
  %indvars.iv186 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph ], [ %indvars.iv.next187, %for_begin_ax2.inner.preheader ]
  %24 = trunc i64 %indvars.iv186 to i32
  %25 = srem i32 %24, 7
  %26 = mul nsw i32 %25, 112
  %27 = sdiv i32 %24, 7
  %28 = shl nsw i32 %27, 10
  %29 = sext i32 %26 to i64
  %30 = sext i32 %28 to i64
  br label %for_begin_ic.inner.preheader

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_begin_ax2.inner.preheader, %parallel_closure_entry
  ret i32 0

for_begin_ax2.inner.preheader:                    ; preds = %for_end_ic.inner
  %31 = mul nsw i64 %indvars.iv186, 112
  %32 = add <4 x i16> %20, %271
  %33 = ashr <4 x i16> %32, %17
  %34 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %33, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %35 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %34, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %36 = trunc <4 x i16> %35 to <4 x i8>
  %37 = getelementptr inbounds i8, ptr %T_cast, i64 %31
  store <4 x i8> %36, ptr %37, align 4, !tbaa !7845
  %38 = add <4 x i16> %20, %279
  %39 = ashr <4 x i16> %38, %17
  %40 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %39, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %41 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %40, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %42 = trunc <4 x i16> %41 to <4 x i8>
  %43 = or i64 %31, 4
  %44 = getelementptr inbounds i8, ptr %T_cast, i64 %43
  store <4 x i8> %42, ptr %44, align 4, !tbaa !7845
  %45 = add <4 x i16> %20, %287
  %46 = ashr <4 x i16> %45, %17
  %47 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %46, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %48 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %47, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %49 = trunc <4 x i16> %48 to <4 x i8>
  %50 = or i64 %31, 8
  %51 = getelementptr inbounds i8, ptr %T_cast, i64 %50
  store <4 x i8> %49, ptr %51, align 4, !tbaa !7845
  %52 = add <4 x i16> %20, %295
  %53 = ashr <4 x i16> %52, %17
  %54 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %53, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %55 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %54, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %56 = trunc <4 x i16> %55 to <4 x i8>
  %57 = or i64 %31, 12
  %58 = getelementptr inbounds i8, ptr %T_cast, i64 %57
  store <4 x i8> %56, ptr %58, align 4, !tbaa !7845
  %59 = add <4 x i16> %20, %303
  %60 = ashr <4 x i16> %59, %17
  %61 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %60, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %62 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %61, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %63 = trunc <4 x i16> %62 to <4 x i8>
  %64 = add nsw i64 %31, 16
  %65 = getelementptr inbounds i8, ptr %T_cast, i64 %64
  store <4 x i8> %63, ptr %65, align 4, !tbaa !7845
  %66 = add <4 x i16> %20, %311
  %67 = ashr <4 x i16> %66, %17
  %68 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %67, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %69 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %68, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %70 = trunc <4 x i16> %69 to <4 x i8>
  %71 = add nsw i64 %31, 20
  %72 = getelementptr inbounds i8, ptr %T_cast, i64 %71
  store <4 x i8> %70, ptr %72, align 4, !tbaa !7845
  %73 = add <4 x i16> %20, %319
  %74 = ashr <4 x i16> %73, %17
  %75 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %74, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %76 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %75, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %77 = trunc <4 x i16> %76 to <4 x i8>
  %78 = add nsw i64 %31, 24
  %79 = getelementptr inbounds i8, ptr %T_cast, i64 %78
  store <4 x i8> %77, ptr %79, align 4, !tbaa !7845
  %80 = add <4 x i16> %20, %327
  %81 = ashr <4 x i16> %80, %17
  %82 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %81, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %83 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %82, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %84 = trunc <4 x i16> %83 to <4 x i8>
  %85 = add nsw i64 %31, 28
  %86 = getelementptr inbounds i8, ptr %T_cast, i64 %85
  store <4 x i8> %84, ptr %86, align 4, !tbaa !7845
  %87 = add <4 x i16> %20, %335
  %88 = ashr <4 x i16> %87, %17
  %89 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %88, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %90 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %89, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %91 = trunc <4 x i16> %90 to <4 x i8>
  %92 = add nsw i64 %31, 32
  %93 = getelementptr inbounds i8, ptr %T_cast, i64 %92
  store <4 x i8> %91, ptr %93, align 4, !tbaa !7845
  %94 = add <4 x i16> %20, %343
  %95 = ashr <4 x i16> %94, %17
  %96 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %95, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %97 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %96, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %98 = trunc <4 x i16> %97 to <4 x i8>
  %99 = add nsw i64 %31, 36
  %100 = getelementptr inbounds i8, ptr %T_cast, i64 %99
  store <4 x i8> %98, ptr %100, align 4, !tbaa !7845
  %101 = add <4 x i16> %20, %351
  %102 = ashr <4 x i16> %101, %17
  %103 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %102, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %104 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %103, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %105 = trunc <4 x i16> %104 to <4 x i8>
  %106 = add nsw i64 %31, 40
  %107 = getelementptr inbounds i8, ptr %T_cast, i64 %106
  store <4 x i8> %105, ptr %107, align 4, !tbaa !7845
  %108 = add <4 x i16> %20, %359
  %109 = ashr <4 x i16> %108, %17
  %110 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %109, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %111 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %110, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %112 = trunc <4 x i16> %111 to <4 x i8>
  %113 = add nsw i64 %31, 44
  %114 = getelementptr inbounds i8, ptr %T_cast, i64 %113
  store <4 x i8> %112, ptr %114, align 4, !tbaa !7845
  %115 = add <4 x i16> %20, %367
  %116 = ashr <4 x i16> %115, %17
  %117 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %116, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %118 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %117, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %119 = trunc <4 x i16> %118 to <4 x i8>
  %120 = add nsw i64 %31, 48
  %121 = getelementptr inbounds i8, ptr %T_cast, i64 %120
  store <4 x i8> %119, ptr %121, align 4, !tbaa !7845
  %122 = add <4 x i16> %20, %375
  %123 = ashr <4 x i16> %122, %17
  %124 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %123, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %125 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %124, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %126 = trunc <4 x i16> %125 to <4 x i8>
  %127 = add nsw i64 %31, 52
  %128 = getelementptr inbounds i8, ptr %T_cast, i64 %127
  store <4 x i8> %126, ptr %128, align 4, !tbaa !7845
  %129 = add nsw i64 %31, 56
  %130 = add <4 x i16> %20, %383
  %131 = ashr <4 x i16> %130, %17
  %132 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %131, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %133 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %132, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %134 = trunc <4 x i16> %133 to <4 x i8>
  %135 = getelementptr inbounds i8, ptr %T_cast, i64 %129
  store <4 x i8> %134, ptr %135, align 4, !tbaa !7845
  %136 = add <4 x i16> %20, %391
  %137 = ashr <4 x i16> %136, %17
  %138 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %137, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %139 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %138, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %140 = trunc <4 x i16> %139 to <4 x i8>
  %141 = add nsw i64 %31, 60
  %142 = getelementptr inbounds i8, ptr %T_cast, i64 %141
  store <4 x i8> %140, ptr %142, align 4, !tbaa !7845
  %143 = add <4 x i16> %20, %399
  %144 = ashr <4 x i16> %143, %17
  %145 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %144, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %146 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %145, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %147 = trunc <4 x i16> %146 to <4 x i8>
  %148 = add nsw i64 %31, 64
  %149 = getelementptr inbounds i8, ptr %T_cast, i64 %148
  store <4 x i8> %147, ptr %149, align 4, !tbaa !7845
  %150 = add <4 x i16> %20, %407
  %151 = ashr <4 x i16> %150, %17
  %152 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %151, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %153 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %152, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %154 = trunc <4 x i16> %153 to <4 x i8>
  %155 = add nsw i64 %31, 68
  %156 = getelementptr inbounds i8, ptr %T_cast, i64 %155
  store <4 x i8> %154, ptr %156, align 4, !tbaa !7845
  %157 = add <4 x i16> %20, %415
  %158 = ashr <4 x i16> %157, %17
  %159 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %158, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %160 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %159, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %161 = trunc <4 x i16> %160 to <4 x i8>
  %162 = add nsw i64 %31, 72
  %163 = getelementptr inbounds i8, ptr %T_cast, i64 %162
  store <4 x i8> %161, ptr %163, align 4, !tbaa !7845
  %164 = add <4 x i16> %20, %423
  %165 = ashr <4 x i16> %164, %17
  %166 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %165, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %167 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %166, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %168 = trunc <4 x i16> %167 to <4 x i8>
  %169 = add nsw i64 %31, 76
  %170 = getelementptr inbounds i8, ptr %T_cast, i64 %169
  store <4 x i8> %168, ptr %170, align 4, !tbaa !7845
  %171 = add <4 x i16> %20, %431
  %172 = ashr <4 x i16> %171, %17
  %173 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %172, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %174 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %173, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %175 = trunc <4 x i16> %174 to <4 x i8>
  %176 = add nsw i64 %31, 80
  %177 = getelementptr inbounds i8, ptr %T_cast, i64 %176
  store <4 x i8> %175, ptr %177, align 4, !tbaa !7845
  %178 = add <4 x i16> %20, %439
  %179 = ashr <4 x i16> %178, %17
  %180 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %179, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %181 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %180, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %182 = trunc <4 x i16> %181 to <4 x i8>
  %183 = add nsw i64 %31, 84
  %184 = getelementptr inbounds i8, ptr %T_cast, i64 %183
  store <4 x i8> %182, ptr %184, align 4, !tbaa !7845
  %185 = add <4 x i16> %20, %447
  %186 = ashr <4 x i16> %185, %17
  %187 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %186, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %188 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %187, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %189 = trunc <4 x i16> %188 to <4 x i8>
  %190 = add nsw i64 %31, 88
  %191 = getelementptr inbounds i8, ptr %T_cast, i64 %190
  store <4 x i8> %189, ptr %191, align 4, !tbaa !7845
  %192 = add <4 x i16> %20, %455
  %193 = ashr <4 x i16> %192, %17
  %194 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %193, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %195 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %194, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %196 = trunc <4 x i16> %195 to <4 x i8>
  %197 = add nsw i64 %31, 92
  %198 = getelementptr inbounds i8, ptr %T_cast, i64 %197
  store <4 x i8> %196, ptr %198, align 4, !tbaa !7845
  %199 = add <4 x i16> %20, %463
  %200 = ashr <4 x i16> %199, %17
  %201 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %200, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %202 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %201, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %203 = trunc <4 x i16> %202 to <4 x i8>
  %204 = add nsw i64 %31, 96
  %205 = getelementptr inbounds i8, ptr %T_cast, i64 %204
  store <4 x i8> %203, ptr %205, align 4, !tbaa !7845
  %206 = add <4 x i16> %20, %471
  %207 = ashr <4 x i16> %206, %17
  %208 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %207, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %209 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %208, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %210 = trunc <4 x i16> %209 to <4 x i8>
  %211 = add nsw i64 %31, 100
  %212 = getelementptr inbounds i8, ptr %T_cast, i64 %211
  store <4 x i8> %210, ptr %212, align 4, !tbaa !7845
  %213 = add <4 x i16> %20, %479
  %214 = ashr <4 x i16> %213, %17
  %215 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %214, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %216 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %215, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %217 = trunc <4 x i16> %216 to <4 x i8>
  %218 = add nsw i64 %31, 104
  %219 = getelementptr inbounds i8, ptr %T_cast, i64 %218
  store <4 x i8> %217, ptr %219, align 4, !tbaa !7845
  %220 = add <4 x i16> %20, %487
  %221 = ashr <4 x i16> %220, %17
  %222 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %221, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %223 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %222, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %224 = trunc <4 x i16> %223 to <4 x i8>
  %225 = add nsw i64 %31, 108
  %226 = getelementptr inbounds i8, ptr %T_cast, i64 %225
  store <4 x i8> %224, ptr %226, align 4, !tbaa !7845
  %indvars.iv.next187 = add nsw i64 %indvars.iv186, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next187 to i32
  %exitcond188.not = icmp eq i32 %23, %lftr.wideiv
  br i1 %exitcond188.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !59

for_begin_ic.inner.preheader:                     ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ic.inner
  %indvars.iv175 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %indvars.iv.next176, %for_end_ic.inner ]
  %.lcssa57138 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %271, %for_end_ic.inner ]
  %.lcssa259137 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %279, %for_end_ic.inner ]
  %.lcssa460136 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %287, %for_end_ic.inner ]
  %.lcssa662135 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %295, %for_end_ic.inner ]
  %.lcssa864134 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %303, %for_end_ic.inner ]
  %.lcssa1066133 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %311, %for_end_ic.inner ]
  %.lcssa1268132 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %319, %for_end_ic.inner ]
  %.lcssa1470131 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %327, %for_end_ic.inner ]
  %.lcssa1672130 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %335, %for_end_ic.inner ]
  %.lcssa1874129 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %343, %for_end_ic.inner ]
  %.lcssa2076128 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %351, %for_end_ic.inner ]
  %.lcssa2278127 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %359, %for_end_ic.inner ]
  %.lcssa2480126 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %367, %for_end_ic.inner ]
  %.lcssa2682125 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %375, %for_end_ic.inner ]
  %.lcssa2884124 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %383, %for_end_ic.inner ]
  %.lcssa3086123 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %391, %for_end_ic.inner ]
  %.lcssa3288122 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %399, %for_end_ic.inner ]
  %.lcssa3490121 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %407, %for_end_ic.inner ]
  %.lcssa3692120 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %415, %for_end_ic.inner ]
  %.lcssa3894119 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %423, %for_end_ic.inner ]
  %.lcssa4096118 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %431, %for_end_ic.inner ]
  %.lcssa4298117 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %439, %for_end_ic.inner ]
  %.lcssa44100116 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %447, %for_end_ic.inner ]
  %.lcssa46102115 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %455, %for_end_ic.inner ]
  %.lcssa48104114 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %463, %for_end_ic.inner ]
  %.lcssa50106113 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %471, %for_end_ic.inner ]
  %.lcssa52108112 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %479, %for_end_ic.inner ]
  %.lcssa54110111 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %487, %for_end_ic.inner ]
  %227 = mul nuw nsw i64 %indvars.iv175, 784
  %228 = add nsw i64 %227, %29
  %229 = shl nsw i64 %indvars.iv175, 4
  %230 = add nuw nsw i64 %229, %30
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %231 = phi <4 x i16> [ %.lcssa57138, %for_begin_ic.inner.preheader ], [ %271, %for_body_ic.inner ]
  %232 = phi <4 x i16> [ %.lcssa259137, %for_begin_ic.inner.preheader ], [ %279, %for_body_ic.inner ]
  %233 = phi <4 x i16> [ %.lcssa460136, %for_begin_ic.inner.preheader ], [ %287, %for_body_ic.inner ]
  %234 = phi <4 x i16> [ %.lcssa662135, %for_begin_ic.inner.preheader ], [ %295, %for_body_ic.inner ]
  %235 = phi <4 x i16> [ %.lcssa864134, %for_begin_ic.inner.preheader ], [ %303, %for_body_ic.inner ]
  %236 = phi <4 x i16> [ %.lcssa1066133, %for_begin_ic.inner.preheader ], [ %311, %for_body_ic.inner ]
  %237 = phi <4 x i16> [ %.lcssa1268132, %for_begin_ic.inner.preheader ], [ %319, %for_body_ic.inner ]
  %238 = phi <4 x i16> [ %.lcssa1470131, %for_begin_ic.inner.preheader ], [ %327, %for_body_ic.inner ]
  %239 = phi <4 x i16> [ %.lcssa1672130, %for_begin_ic.inner.preheader ], [ %335, %for_body_ic.inner ]
  %240 = phi <4 x i16> [ %.lcssa1874129, %for_begin_ic.inner.preheader ], [ %343, %for_body_ic.inner ]
  %241 = phi <4 x i16> [ %.lcssa2076128, %for_begin_ic.inner.preheader ], [ %351, %for_body_ic.inner ]
  %242 = phi <4 x i16> [ %.lcssa2278127, %for_begin_ic.inner.preheader ], [ %359, %for_body_ic.inner ]
  %243 = phi <4 x i16> [ %.lcssa2480126, %for_begin_ic.inner.preheader ], [ %367, %for_body_ic.inner ]
  %244 = phi <4 x i16> [ %.lcssa2682125, %for_begin_ic.inner.preheader ], [ %375, %for_body_ic.inner ]
  %245 = phi <4 x i16> [ %.lcssa2884124, %for_begin_ic.inner.preheader ], [ %383, %for_body_ic.inner ]
  %246 = phi <4 x i16> [ %.lcssa3086123, %for_begin_ic.inner.preheader ], [ %391, %for_body_ic.inner ]
  %247 = phi <4 x i16> [ %.lcssa3288122, %for_begin_ic.inner.preheader ], [ %399, %for_body_ic.inner ]
  %248 = phi <4 x i16> [ %.lcssa3490121, %for_begin_ic.inner.preheader ], [ %407, %for_body_ic.inner ]
  %249 = phi <4 x i16> [ %.lcssa3692120, %for_begin_ic.inner.preheader ], [ %415, %for_body_ic.inner ]
  %250 = phi <4 x i16> [ %.lcssa3894119, %for_begin_ic.inner.preheader ], [ %423, %for_body_ic.inner ]
  %251 = phi <4 x i16> [ %.lcssa4096118, %for_begin_ic.inner.preheader ], [ %431, %for_body_ic.inner ]
  %252 = phi <4 x i16> [ %.lcssa4298117, %for_begin_ic.inner.preheader ], [ %439, %for_body_ic.inner ]
  %253 = phi <4 x i16> [ %.lcssa44100116, %for_begin_ic.inner.preheader ], [ %447, %for_body_ic.inner ]
  %254 = phi <4 x i16> [ %.lcssa46102115, %for_begin_ic.inner.preheader ], [ %455, %for_body_ic.inner ]
  %255 = phi <4 x i16> [ %.lcssa48104114, %for_begin_ic.inner.preheader ], [ %463, %for_body_ic.inner ]
  %256 = phi <4 x i16> [ %.lcssa50106113, %for_begin_ic.inner.preheader ], [ %471, %for_body_ic.inner ]
  %257 = phi <4 x i16> [ %.lcssa52108112, %for_begin_ic.inner.preheader ], [ %479, %for_body_ic.inner ]
  %258 = phi <4 x i16> [ %.lcssa54110111, %for_begin_ic.inner.preheader ], [ %487, %for_body_ic.inner ]
  %259 = add nsw i64 %228, %indvars.iv
  %260 = shl nuw nsw i64 %indvars.iv, 2
  %261 = add nuw nsw i64 %230, %260
  %262 = getelementptr inbounds i8, ptr %p1, i64 %261
  %263 = load <4 x i8>, ptr %262, align 4, !tbaa !7847
  %264 = sext <4 x i8> %263 to <4 x i16>
  %265 = getelementptr inbounds i8, ptr %p0, i64 %259
  %266 = load i8, ptr %265, align 1, !tbaa !7849
  %267 = insertelement <4 x i8> undef, i8 %266, i64 0
  %268 = shufflevector <4 x i8> %267, <4 x i8> undef, <4 x i32> zeroinitializer
  %269 = sext <4 x i8> %268 to <4 x i16>
  %270 = mul nsw <4 x i16> %269, %264
  %271 = add <4 x i16> %270, %231
  %272 = add nsw i64 %259, 4
  %273 = getelementptr inbounds i8, ptr %p0, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !7849
  %275 = insertelement <4 x i8> undef, i8 %274, i64 0
  %276 = shufflevector <4 x i8> %275, <4 x i8> undef, <4 x i32> zeroinitializer
  %277 = sext <4 x i8> %276 to <4 x i16>
  %278 = mul nsw <4 x i16> %277, %264
  %279 = add <4 x i16> %278, %232
  %280 = add nsw i64 %259, 8
  %281 = getelementptr inbounds i8, ptr %p0, i64 %280
  %282 = load i8, ptr %281, align 1, !tbaa !7849
  %283 = insertelement <4 x i8> undef, i8 %282, i64 0
  %284 = shufflevector <4 x i8> %283, <4 x i8> undef, <4 x i32> zeroinitializer
  %285 = sext <4 x i8> %284 to <4 x i16>
  %286 = mul nsw <4 x i16> %285, %264
  %287 = add <4 x i16> %286, %233
  %288 = add nsw i64 %259, 12
  %289 = getelementptr inbounds i8, ptr %p0, i64 %288
  %290 = load i8, ptr %289, align 1, !tbaa !7849
  %291 = insertelement <4 x i8> undef, i8 %290, i64 0
  %292 = shufflevector <4 x i8> %291, <4 x i8> undef, <4 x i32> zeroinitializer
  %293 = sext <4 x i8> %292 to <4 x i16>
  %294 = mul nsw <4 x i16> %293, %264
  %295 = add <4 x i16> %294, %234
  %296 = add nsw i64 %259, 16
  %297 = getelementptr inbounds i8, ptr %p0, i64 %296
  %298 = load i8, ptr %297, align 1, !tbaa !7849
  %299 = insertelement <4 x i8> undef, i8 %298, i64 0
  %300 = shufflevector <4 x i8> %299, <4 x i8> undef, <4 x i32> zeroinitializer
  %301 = sext <4 x i8> %300 to <4 x i16>
  %302 = mul nsw <4 x i16> %301, %264
  %303 = add <4 x i16> %302, %235
  %304 = add nsw i64 %259, 20
  %305 = getelementptr inbounds i8, ptr %p0, i64 %304
  %306 = load i8, ptr %305, align 1, !tbaa !7849
  %307 = insertelement <4 x i8> undef, i8 %306, i64 0
  %308 = shufflevector <4 x i8> %307, <4 x i8> undef, <4 x i32> zeroinitializer
  %309 = sext <4 x i8> %308 to <4 x i16>
  %310 = mul nsw <4 x i16> %309, %264
  %311 = add <4 x i16> %310, %236
  %312 = add nsw i64 %259, 24
  %313 = getelementptr inbounds i8, ptr %p0, i64 %312
  %314 = load i8, ptr %313, align 1, !tbaa !7849
  %315 = insertelement <4 x i8> undef, i8 %314, i64 0
  %316 = shufflevector <4 x i8> %315, <4 x i8> undef, <4 x i32> zeroinitializer
  %317 = sext <4 x i8> %316 to <4 x i16>
  %318 = mul nsw <4 x i16> %317, %264
  %319 = add <4 x i16> %318, %237
  %320 = add nsw i64 %259, 28
  %321 = getelementptr inbounds i8, ptr %p0, i64 %320
  %322 = load i8, ptr %321, align 1, !tbaa !7849
  %323 = insertelement <4 x i8> undef, i8 %322, i64 0
  %324 = shufflevector <4 x i8> %323, <4 x i8> undef, <4 x i32> zeroinitializer
  %325 = sext <4 x i8> %324 to <4 x i16>
  %326 = mul nsw <4 x i16> %325, %264
  %327 = add <4 x i16> %326, %238
  %328 = add nsw i64 %259, 32
  %329 = getelementptr inbounds i8, ptr %p0, i64 %328
  %330 = load i8, ptr %329, align 1, !tbaa !7849
  %331 = insertelement <4 x i8> undef, i8 %330, i64 0
  %332 = shufflevector <4 x i8> %331, <4 x i8> undef, <4 x i32> zeroinitializer
  %333 = sext <4 x i8> %332 to <4 x i16>
  %334 = mul nsw <4 x i16> %333, %264
  %335 = add <4 x i16> %334, %239
  %336 = add nsw i64 %259, 36
  %337 = getelementptr inbounds i8, ptr %p0, i64 %336
  %338 = load i8, ptr %337, align 1, !tbaa !7849
  %339 = insertelement <4 x i8> undef, i8 %338, i64 0
  %340 = shufflevector <4 x i8> %339, <4 x i8> undef, <4 x i32> zeroinitializer
  %341 = sext <4 x i8> %340 to <4 x i16>
  %342 = mul nsw <4 x i16> %341, %264
  %343 = add <4 x i16> %342, %240
  %344 = add nsw i64 %259, 40
  %345 = getelementptr inbounds i8, ptr %p0, i64 %344
  %346 = load i8, ptr %345, align 1, !tbaa !7849
  %347 = insertelement <4 x i8> undef, i8 %346, i64 0
  %348 = shufflevector <4 x i8> %347, <4 x i8> undef, <4 x i32> zeroinitializer
  %349 = sext <4 x i8> %348 to <4 x i16>
  %350 = mul nsw <4 x i16> %349, %264
  %351 = add <4 x i16> %350, %241
  %352 = add nsw i64 %259, 44
  %353 = getelementptr inbounds i8, ptr %p0, i64 %352
  %354 = load i8, ptr %353, align 1, !tbaa !7849
  %355 = insertelement <4 x i8> undef, i8 %354, i64 0
  %356 = shufflevector <4 x i8> %355, <4 x i8> undef, <4 x i32> zeroinitializer
  %357 = sext <4 x i8> %356 to <4 x i16>
  %358 = mul nsw <4 x i16> %357, %264
  %359 = add <4 x i16> %358, %242
  %360 = add nsw i64 %259, 48
  %361 = getelementptr inbounds i8, ptr %p0, i64 %360
  %362 = load i8, ptr %361, align 1, !tbaa !7849
  %363 = insertelement <4 x i8> undef, i8 %362, i64 0
  %364 = shufflevector <4 x i8> %363, <4 x i8> undef, <4 x i32> zeroinitializer
  %365 = sext <4 x i8> %364 to <4 x i16>
  %366 = mul nsw <4 x i16> %365, %264
  %367 = add <4 x i16> %366, %243
  %368 = add nsw i64 %259, 52
  %369 = getelementptr inbounds i8, ptr %p0, i64 %368
  %370 = load i8, ptr %369, align 1, !tbaa !7849
  %371 = insertelement <4 x i8> undef, i8 %370, i64 0
  %372 = shufflevector <4 x i8> %371, <4 x i8> undef, <4 x i32> zeroinitializer
  %373 = sext <4 x i8> %372 to <4 x i16>
  %374 = mul nsw <4 x i16> %373, %264
  %375 = add <4 x i16> %374, %244
  %376 = add nsw i64 %259, 56
  %377 = getelementptr inbounds i8, ptr %p0, i64 %376
  %378 = load i8, ptr %377, align 1, !tbaa !7849
  %379 = insertelement <4 x i8> undef, i8 %378, i64 0
  %380 = shufflevector <4 x i8> %379, <4 x i8> undef, <4 x i32> zeroinitializer
  %381 = sext <4 x i8> %380 to <4 x i16>
  %382 = mul nsw <4 x i16> %381, %264
  %383 = add <4 x i16> %382, %245
  %384 = add nsw i64 %259, 60
  %385 = getelementptr inbounds i8, ptr %p0, i64 %384
  %386 = load i8, ptr %385, align 1, !tbaa !7849
  %387 = insertelement <4 x i8> undef, i8 %386, i64 0
  %388 = shufflevector <4 x i8> %387, <4 x i8> undef, <4 x i32> zeroinitializer
  %389 = sext <4 x i8> %388 to <4 x i16>
  %390 = mul nsw <4 x i16> %389, %264
  %391 = add <4 x i16> %390, %246
  %392 = add nsw i64 %259, 64
  %393 = getelementptr inbounds i8, ptr %p0, i64 %392
  %394 = load i8, ptr %393, align 1, !tbaa !7849
  %395 = insertelement <4 x i8> undef, i8 %394, i64 0
  %396 = shufflevector <4 x i8> %395, <4 x i8> undef, <4 x i32> zeroinitializer
  %397 = sext <4 x i8> %396 to <4 x i16>
  %398 = mul nsw <4 x i16> %397, %264
  %399 = add <4 x i16> %398, %247
  %400 = add nsw i64 %259, 68
  %401 = getelementptr inbounds i8, ptr %p0, i64 %400
  %402 = load i8, ptr %401, align 1, !tbaa !7849
  %403 = insertelement <4 x i8> undef, i8 %402, i64 0
  %404 = shufflevector <4 x i8> %403, <4 x i8> undef, <4 x i32> zeroinitializer
  %405 = sext <4 x i8> %404 to <4 x i16>
  %406 = mul nsw <4 x i16> %405, %264
  %407 = add <4 x i16> %406, %248
  %408 = add nsw i64 %259, 72
  %409 = getelementptr inbounds i8, ptr %p0, i64 %408
  %410 = load i8, ptr %409, align 1, !tbaa !7849
  %411 = insertelement <4 x i8> undef, i8 %410, i64 0
  %412 = shufflevector <4 x i8> %411, <4 x i8> undef, <4 x i32> zeroinitializer
  %413 = sext <4 x i8> %412 to <4 x i16>
  %414 = mul nsw <4 x i16> %413, %264
  %415 = add <4 x i16> %414, %249
  %416 = add nsw i64 %259, 76
  %417 = getelementptr inbounds i8, ptr %p0, i64 %416
  %418 = load i8, ptr %417, align 1, !tbaa !7849
  %419 = insertelement <4 x i8> undef, i8 %418, i64 0
  %420 = shufflevector <4 x i8> %419, <4 x i8> undef, <4 x i32> zeroinitializer
  %421 = sext <4 x i8> %420 to <4 x i16>
  %422 = mul nsw <4 x i16> %421, %264
  %423 = add <4 x i16> %422, %250
  %424 = add nsw i64 %259, 80
  %425 = getelementptr inbounds i8, ptr %p0, i64 %424
  %426 = load i8, ptr %425, align 1, !tbaa !7849
  %427 = insertelement <4 x i8> undef, i8 %426, i64 0
  %428 = shufflevector <4 x i8> %427, <4 x i8> undef, <4 x i32> zeroinitializer
  %429 = sext <4 x i8> %428 to <4 x i16>
  %430 = mul nsw <4 x i16> %429, %264
  %431 = add <4 x i16> %430, %251
  %432 = add nsw i64 %259, 84
  %433 = getelementptr inbounds i8, ptr %p0, i64 %432
  %434 = load i8, ptr %433, align 1, !tbaa !7849
  %435 = insertelement <4 x i8> undef, i8 %434, i64 0
  %436 = shufflevector <4 x i8> %435, <4 x i8> undef, <4 x i32> zeroinitializer
  %437 = sext <4 x i8> %436 to <4 x i16>
  %438 = mul nsw <4 x i16> %437, %264
  %439 = add <4 x i16> %438, %252
  %440 = add nsw i64 %259, 88
  %441 = getelementptr inbounds i8, ptr %p0, i64 %440
  %442 = load i8, ptr %441, align 1, !tbaa !7849
  %443 = insertelement <4 x i8> undef, i8 %442, i64 0
  %444 = shufflevector <4 x i8> %443, <4 x i8> undef, <4 x i32> zeroinitializer
  %445 = sext <4 x i8> %444 to <4 x i16>
  %446 = mul nsw <4 x i16> %445, %264
  %447 = add <4 x i16> %446, %253
  %448 = add nsw i64 %259, 92
  %449 = getelementptr inbounds i8, ptr %p0, i64 %448
  %450 = load i8, ptr %449, align 1, !tbaa !7849
  %451 = insertelement <4 x i8> undef, i8 %450, i64 0
  %452 = shufflevector <4 x i8> %451, <4 x i8> undef, <4 x i32> zeroinitializer
  %453 = sext <4 x i8> %452 to <4 x i16>
  %454 = mul nsw <4 x i16> %453, %264
  %455 = add <4 x i16> %454, %254
  %456 = add nsw i64 %259, 96
  %457 = getelementptr inbounds i8, ptr %p0, i64 %456
  %458 = load i8, ptr %457, align 1, !tbaa !7849
  %459 = insertelement <4 x i8> undef, i8 %458, i64 0
  %460 = shufflevector <4 x i8> %459, <4 x i8> undef, <4 x i32> zeroinitializer
  %461 = sext <4 x i8> %460 to <4 x i16>
  %462 = mul nsw <4 x i16> %461, %264
  %463 = add <4 x i16> %462, %255
  %464 = add nsw i64 %259, 100
  %465 = getelementptr inbounds i8, ptr %p0, i64 %464
  %466 = load i8, ptr %465, align 1, !tbaa !7849
  %467 = insertelement <4 x i8> undef, i8 %466, i64 0
  %468 = shufflevector <4 x i8> %467, <4 x i8> undef, <4 x i32> zeroinitializer
  %469 = sext <4 x i8> %468 to <4 x i16>
  %470 = mul nsw <4 x i16> %469, %264
  %471 = add <4 x i16> %470, %256
  %472 = add nsw i64 %259, 104
  %473 = getelementptr inbounds i8, ptr %p0, i64 %472
  %474 = load i8, ptr %473, align 1, !tbaa !7849
  %475 = insertelement <4 x i8> undef, i8 %474, i64 0
  %476 = shufflevector <4 x i8> %475, <4 x i8> undef, <4 x i32> zeroinitializer
  %477 = sext <4 x i8> %476 to <4 x i16>
  %478 = mul nsw <4 x i16> %477, %264
  %479 = add <4 x i16> %478, %257
  %480 = add nsw i64 %259, 108
  %481 = getelementptr inbounds i8, ptr %p0, i64 %480
  %482 = load i8, ptr %481, align 1, !tbaa !7849
  %483 = insertelement <4 x i8> undef, i8 %482, i64 0
  %484 = shufflevector <4 x i8> %483, <4 x i8> undef, <4 x i32> zeroinitializer
  %485 = sext <4 x i8> %484 to <4 x i16>
  %486 = mul nsw <4 x i16> %485, %264
  %487 = add <4 x i16> %486, %258
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !59

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next176 = add nuw nsw i64 %indvars.iv175, 1
  %exitcond178.not = icmp eq i64 %indvars.iv.next176, 64
  br i1 %exitcond178.not, label %for_begin_ax2.inner.preheader, label %for_begin_ic.inner.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_13_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1365, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1365(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 1791
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 1792)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 1792)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph:     ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = load i16, ptr %p3, align 64, !tbaa !7851
  %16 = insertelement <4 x i16> undef, i16 %15, i64 0
  %17 = shufflevector <4 x i16> %16, <4 x i16> undef, <4 x i32> zeroinitializer
  %18 = load i16, ptr %p2, align 64, !tbaa !7863
  %19 = insertelement <4 x i16> undef, i16 %18, i64 0
  %20 = shufflevector <4 x i16> %19, <4 x i16> undef, <4 x i32> zeroinitializer
  %21 = tail call i32 @llvm.smin.i32(i32 %10, i32 1792)
  %smin = sext i32 %21 to i64
  %22 = add i32 %9, %21
  %23 = sub i32 %22, %11
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, %for_begin_ax2.inner.preheader
  %indvars.iv186 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph ], [ %indvars.iv.next187, %for_begin_ax2.inner.preheader ]
  %24 = trunc i64 %indvars.iv186 to i32
  %25 = srem i32 %24, 7
  %26 = mul nsw i32 %25, 448
  %27 = sdiv i32 %24, 7
  %28 = shl nsw i32 %27, 11
  %29 = sext i32 %26 to i64
  %30 = sext i32 %28 to i64
  br label %for_begin_ic.inner.preheader

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_begin_ax2.inner.preheader, %parallel_closure_entry
  ret i32 0

for_begin_ax2.inner.preheader:                    ; preds = %for_end_ic.inner
  %31 = mul nsw i64 %indvars.iv186, 112
  %32 = add <4 x i16> %20, %271
  %33 = ashr <4 x i16> %32, %17
  %34 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %33, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %35 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %34, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %36 = trunc <4 x i16> %35 to <4 x i8>
  %37 = getelementptr inbounds i8, ptr %T_cast, i64 %31
  store <4 x i8> %36, ptr %37, align 4, !tbaa !7875
  %38 = add <4 x i16> %20, %279
  %39 = ashr <4 x i16> %38, %17
  %40 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %39, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %41 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %40, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %42 = trunc <4 x i16> %41 to <4 x i8>
  %43 = or i64 %31, 4
  %44 = getelementptr inbounds i8, ptr %T_cast, i64 %43
  store <4 x i8> %42, ptr %44, align 4, !tbaa !7875
  %45 = add <4 x i16> %20, %287
  %46 = ashr <4 x i16> %45, %17
  %47 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %46, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %48 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %47, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %49 = trunc <4 x i16> %48 to <4 x i8>
  %50 = or i64 %31, 8
  %51 = getelementptr inbounds i8, ptr %T_cast, i64 %50
  store <4 x i8> %49, ptr %51, align 4, !tbaa !7875
  %52 = add <4 x i16> %20, %295
  %53 = ashr <4 x i16> %52, %17
  %54 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %53, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %55 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %54, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %56 = trunc <4 x i16> %55 to <4 x i8>
  %57 = or i64 %31, 12
  %58 = getelementptr inbounds i8, ptr %T_cast, i64 %57
  store <4 x i8> %56, ptr %58, align 4, !tbaa !7875
  %59 = add <4 x i16> %20, %303
  %60 = ashr <4 x i16> %59, %17
  %61 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %60, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %62 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %61, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %63 = trunc <4 x i16> %62 to <4 x i8>
  %64 = add nsw i64 %31, 16
  %65 = getelementptr inbounds i8, ptr %T_cast, i64 %64
  store <4 x i8> %63, ptr %65, align 4, !tbaa !7875
  %66 = add <4 x i16> %20, %311
  %67 = ashr <4 x i16> %66, %17
  %68 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %67, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %69 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %68, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %70 = trunc <4 x i16> %69 to <4 x i8>
  %71 = add nsw i64 %31, 20
  %72 = getelementptr inbounds i8, ptr %T_cast, i64 %71
  store <4 x i8> %70, ptr %72, align 4, !tbaa !7875
  %73 = add <4 x i16> %20, %319
  %74 = ashr <4 x i16> %73, %17
  %75 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %74, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %76 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %75, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %77 = trunc <4 x i16> %76 to <4 x i8>
  %78 = add nsw i64 %31, 24
  %79 = getelementptr inbounds i8, ptr %T_cast, i64 %78
  store <4 x i8> %77, ptr %79, align 4, !tbaa !7875
  %80 = add <4 x i16> %20, %327
  %81 = ashr <4 x i16> %80, %17
  %82 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %81, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %83 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %82, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %84 = trunc <4 x i16> %83 to <4 x i8>
  %85 = add nsw i64 %31, 28
  %86 = getelementptr inbounds i8, ptr %T_cast, i64 %85
  store <4 x i8> %84, ptr %86, align 4, !tbaa !7875
  %87 = add <4 x i16> %20, %335
  %88 = ashr <4 x i16> %87, %17
  %89 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %88, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %90 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %89, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %91 = trunc <4 x i16> %90 to <4 x i8>
  %92 = add nsw i64 %31, 32
  %93 = getelementptr inbounds i8, ptr %T_cast, i64 %92
  store <4 x i8> %91, ptr %93, align 4, !tbaa !7875
  %94 = add <4 x i16> %20, %343
  %95 = ashr <4 x i16> %94, %17
  %96 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %95, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %97 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %96, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %98 = trunc <4 x i16> %97 to <4 x i8>
  %99 = add nsw i64 %31, 36
  %100 = getelementptr inbounds i8, ptr %T_cast, i64 %99
  store <4 x i8> %98, ptr %100, align 4, !tbaa !7875
  %101 = add <4 x i16> %20, %351
  %102 = ashr <4 x i16> %101, %17
  %103 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %102, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %104 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %103, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %105 = trunc <4 x i16> %104 to <4 x i8>
  %106 = add nsw i64 %31, 40
  %107 = getelementptr inbounds i8, ptr %T_cast, i64 %106
  store <4 x i8> %105, ptr %107, align 4, !tbaa !7875
  %108 = add <4 x i16> %20, %359
  %109 = ashr <4 x i16> %108, %17
  %110 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %109, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %111 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %110, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %112 = trunc <4 x i16> %111 to <4 x i8>
  %113 = add nsw i64 %31, 44
  %114 = getelementptr inbounds i8, ptr %T_cast, i64 %113
  store <4 x i8> %112, ptr %114, align 4, !tbaa !7875
  %115 = add <4 x i16> %20, %367
  %116 = ashr <4 x i16> %115, %17
  %117 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %116, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %118 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %117, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %119 = trunc <4 x i16> %118 to <4 x i8>
  %120 = add nsw i64 %31, 48
  %121 = getelementptr inbounds i8, ptr %T_cast, i64 %120
  store <4 x i8> %119, ptr %121, align 4, !tbaa !7875
  %122 = add <4 x i16> %20, %375
  %123 = ashr <4 x i16> %122, %17
  %124 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %123, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %125 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %124, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %126 = trunc <4 x i16> %125 to <4 x i8>
  %127 = add nsw i64 %31, 52
  %128 = getelementptr inbounds i8, ptr %T_cast, i64 %127
  store <4 x i8> %126, ptr %128, align 4, !tbaa !7875
  %129 = add nsw i64 %31, 56
  %130 = add <4 x i16> %20, %383
  %131 = ashr <4 x i16> %130, %17
  %132 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %131, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %133 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %132, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %134 = trunc <4 x i16> %133 to <4 x i8>
  %135 = getelementptr inbounds i8, ptr %T_cast, i64 %129
  store <4 x i8> %134, ptr %135, align 4, !tbaa !7875
  %136 = add <4 x i16> %20, %391
  %137 = ashr <4 x i16> %136, %17
  %138 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %137, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %139 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %138, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %140 = trunc <4 x i16> %139 to <4 x i8>
  %141 = add nsw i64 %31, 60
  %142 = getelementptr inbounds i8, ptr %T_cast, i64 %141
  store <4 x i8> %140, ptr %142, align 4, !tbaa !7875
  %143 = add <4 x i16> %20, %399
  %144 = ashr <4 x i16> %143, %17
  %145 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %144, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %146 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %145, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %147 = trunc <4 x i16> %146 to <4 x i8>
  %148 = add nsw i64 %31, 64
  %149 = getelementptr inbounds i8, ptr %T_cast, i64 %148
  store <4 x i8> %147, ptr %149, align 4, !tbaa !7875
  %150 = add <4 x i16> %20, %407
  %151 = ashr <4 x i16> %150, %17
  %152 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %151, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %153 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %152, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %154 = trunc <4 x i16> %153 to <4 x i8>
  %155 = add nsw i64 %31, 68
  %156 = getelementptr inbounds i8, ptr %T_cast, i64 %155
  store <4 x i8> %154, ptr %156, align 4, !tbaa !7875
  %157 = add <4 x i16> %20, %415
  %158 = ashr <4 x i16> %157, %17
  %159 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %158, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %160 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %159, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %161 = trunc <4 x i16> %160 to <4 x i8>
  %162 = add nsw i64 %31, 72
  %163 = getelementptr inbounds i8, ptr %T_cast, i64 %162
  store <4 x i8> %161, ptr %163, align 4, !tbaa !7875
  %164 = add <4 x i16> %20, %423
  %165 = ashr <4 x i16> %164, %17
  %166 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %165, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %167 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %166, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %168 = trunc <4 x i16> %167 to <4 x i8>
  %169 = add nsw i64 %31, 76
  %170 = getelementptr inbounds i8, ptr %T_cast, i64 %169
  store <4 x i8> %168, ptr %170, align 4, !tbaa !7875
  %171 = add <4 x i16> %20, %431
  %172 = ashr <4 x i16> %171, %17
  %173 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %172, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %174 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %173, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %175 = trunc <4 x i16> %174 to <4 x i8>
  %176 = add nsw i64 %31, 80
  %177 = getelementptr inbounds i8, ptr %T_cast, i64 %176
  store <4 x i8> %175, ptr %177, align 4, !tbaa !7875
  %178 = add <4 x i16> %20, %439
  %179 = ashr <4 x i16> %178, %17
  %180 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %179, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %181 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %180, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %182 = trunc <4 x i16> %181 to <4 x i8>
  %183 = add nsw i64 %31, 84
  %184 = getelementptr inbounds i8, ptr %T_cast, i64 %183
  store <4 x i8> %182, ptr %184, align 4, !tbaa !7875
  %185 = add <4 x i16> %20, %447
  %186 = ashr <4 x i16> %185, %17
  %187 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %186, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %188 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %187, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %189 = trunc <4 x i16> %188 to <4 x i8>
  %190 = add nsw i64 %31, 88
  %191 = getelementptr inbounds i8, ptr %T_cast, i64 %190
  store <4 x i8> %189, ptr %191, align 4, !tbaa !7875
  %192 = add <4 x i16> %20, %455
  %193 = ashr <4 x i16> %192, %17
  %194 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %193, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %195 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %194, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %196 = trunc <4 x i16> %195 to <4 x i8>
  %197 = add nsw i64 %31, 92
  %198 = getelementptr inbounds i8, ptr %T_cast, i64 %197
  store <4 x i8> %196, ptr %198, align 4, !tbaa !7875
  %199 = add <4 x i16> %20, %463
  %200 = ashr <4 x i16> %199, %17
  %201 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %200, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %202 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %201, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %203 = trunc <4 x i16> %202 to <4 x i8>
  %204 = add nsw i64 %31, 96
  %205 = getelementptr inbounds i8, ptr %T_cast, i64 %204
  store <4 x i8> %203, ptr %205, align 4, !tbaa !7875
  %206 = add <4 x i16> %20, %471
  %207 = ashr <4 x i16> %206, %17
  %208 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %207, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %209 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %208, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %210 = trunc <4 x i16> %209 to <4 x i8>
  %211 = add nsw i64 %31, 100
  %212 = getelementptr inbounds i8, ptr %T_cast, i64 %211
  store <4 x i8> %210, ptr %212, align 4, !tbaa !7875
  %213 = add <4 x i16> %20, %479
  %214 = ashr <4 x i16> %213, %17
  %215 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %214, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %216 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %215, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %217 = trunc <4 x i16> %216 to <4 x i8>
  %218 = add nsw i64 %31, 104
  %219 = getelementptr inbounds i8, ptr %T_cast, i64 %218
  store <4 x i8> %217, ptr %219, align 4, !tbaa !7875
  %220 = add <4 x i16> %20, %487
  %221 = ashr <4 x i16> %220, %17
  %222 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %221, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %223 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %222, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %224 = trunc <4 x i16> %223 to <4 x i8>
  %225 = add nsw i64 %31, 108
  %226 = getelementptr inbounds i8, ptr %T_cast, i64 %225
  store <4 x i8> %224, ptr %226, align 4, !tbaa !7875
  %indvars.iv.next187 = add nsw i64 %indvars.iv186, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next187 to i32
  %exitcond188.not = icmp eq i32 %23, %lftr.wideiv
  br i1 %exitcond188.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !59

for_begin_ic.inner.preheader:                     ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ic.inner
  %indvars.iv175 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %indvars.iv.next176, %for_end_ic.inner ]
  %.lcssa57138 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %271, %for_end_ic.inner ]
  %.lcssa259137 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %279, %for_end_ic.inner ]
  %.lcssa460136 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %287, %for_end_ic.inner ]
  %.lcssa662135 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %295, %for_end_ic.inner ]
  %.lcssa864134 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %303, %for_end_ic.inner ]
  %.lcssa1066133 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %311, %for_end_ic.inner ]
  %.lcssa1268132 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %319, %for_end_ic.inner ]
  %.lcssa1470131 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %327, %for_end_ic.inner ]
  %.lcssa1672130 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %335, %for_end_ic.inner ]
  %.lcssa1874129 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %343, %for_end_ic.inner ]
  %.lcssa2076128 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %351, %for_end_ic.inner ]
  %.lcssa2278127 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %359, %for_end_ic.inner ]
  %.lcssa2480126 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %367, %for_end_ic.inner ]
  %.lcssa2682125 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %375, %for_end_ic.inner ]
  %.lcssa2884124 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %383, %for_end_ic.inner ]
  %.lcssa3086123 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %391, %for_end_ic.inner ]
  %.lcssa3288122 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %399, %for_end_ic.inner ]
  %.lcssa3490121 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %407, %for_end_ic.inner ]
  %.lcssa3692120 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %415, %for_end_ic.inner ]
  %.lcssa3894119 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %423, %for_end_ic.inner ]
  %.lcssa4096118 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %431, %for_end_ic.inner ]
  %.lcssa4298117 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %439, %for_end_ic.inner ]
  %.lcssa44100116 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %447, %for_end_ic.inner ]
  %.lcssa46102115 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %455, %for_end_ic.inner ]
  %.lcssa48104114 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %463, %for_end_ic.inner ]
  %.lcssa50106113 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %471, %for_end_ic.inner ]
  %.lcssa52108112 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %479, %for_end_ic.inner ]
  %.lcssa54110111 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %487, %for_end_ic.inner ]
  %227 = mul nuw nsw i64 %indvars.iv175, 3136
  %228 = add nsw i64 %227, %29
  %229 = shl nsw i64 %indvars.iv175, 4
  %230 = add nuw nsw i64 %229, %30
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %231 = phi <4 x i16> [ %.lcssa57138, %for_begin_ic.inner.preheader ], [ %271, %for_body_ic.inner ]
  %232 = phi <4 x i16> [ %.lcssa259137, %for_begin_ic.inner.preheader ], [ %279, %for_body_ic.inner ]
  %233 = phi <4 x i16> [ %.lcssa460136, %for_begin_ic.inner.preheader ], [ %287, %for_body_ic.inner ]
  %234 = phi <4 x i16> [ %.lcssa662135, %for_begin_ic.inner.preheader ], [ %295, %for_body_ic.inner ]
  %235 = phi <4 x i16> [ %.lcssa864134, %for_begin_ic.inner.preheader ], [ %303, %for_body_ic.inner ]
  %236 = phi <4 x i16> [ %.lcssa1066133, %for_begin_ic.inner.preheader ], [ %311, %for_body_ic.inner ]
  %237 = phi <4 x i16> [ %.lcssa1268132, %for_begin_ic.inner.preheader ], [ %319, %for_body_ic.inner ]
  %238 = phi <4 x i16> [ %.lcssa1470131, %for_begin_ic.inner.preheader ], [ %327, %for_body_ic.inner ]
  %239 = phi <4 x i16> [ %.lcssa1672130, %for_begin_ic.inner.preheader ], [ %335, %for_body_ic.inner ]
  %240 = phi <4 x i16> [ %.lcssa1874129, %for_begin_ic.inner.preheader ], [ %343, %for_body_ic.inner ]
  %241 = phi <4 x i16> [ %.lcssa2076128, %for_begin_ic.inner.preheader ], [ %351, %for_body_ic.inner ]
  %242 = phi <4 x i16> [ %.lcssa2278127, %for_begin_ic.inner.preheader ], [ %359, %for_body_ic.inner ]
  %243 = phi <4 x i16> [ %.lcssa2480126, %for_begin_ic.inner.preheader ], [ %367, %for_body_ic.inner ]
  %244 = phi <4 x i16> [ %.lcssa2682125, %for_begin_ic.inner.preheader ], [ %375, %for_body_ic.inner ]
  %245 = phi <4 x i16> [ %.lcssa2884124, %for_begin_ic.inner.preheader ], [ %383, %for_body_ic.inner ]
  %246 = phi <4 x i16> [ %.lcssa3086123, %for_begin_ic.inner.preheader ], [ %391, %for_body_ic.inner ]
  %247 = phi <4 x i16> [ %.lcssa3288122, %for_begin_ic.inner.preheader ], [ %399, %for_body_ic.inner ]
  %248 = phi <4 x i16> [ %.lcssa3490121, %for_begin_ic.inner.preheader ], [ %407, %for_body_ic.inner ]
  %249 = phi <4 x i16> [ %.lcssa3692120, %for_begin_ic.inner.preheader ], [ %415, %for_body_ic.inner ]
  %250 = phi <4 x i16> [ %.lcssa3894119, %for_begin_ic.inner.preheader ], [ %423, %for_body_ic.inner ]
  %251 = phi <4 x i16> [ %.lcssa4096118, %for_begin_ic.inner.preheader ], [ %431, %for_body_ic.inner ]
  %252 = phi <4 x i16> [ %.lcssa4298117, %for_begin_ic.inner.preheader ], [ %439, %for_body_ic.inner ]
  %253 = phi <4 x i16> [ %.lcssa44100116, %for_begin_ic.inner.preheader ], [ %447, %for_body_ic.inner ]
  %254 = phi <4 x i16> [ %.lcssa46102115, %for_begin_ic.inner.preheader ], [ %455, %for_body_ic.inner ]
  %255 = phi <4 x i16> [ %.lcssa48104114, %for_begin_ic.inner.preheader ], [ %463, %for_body_ic.inner ]
  %256 = phi <4 x i16> [ %.lcssa50106113, %for_begin_ic.inner.preheader ], [ %471, %for_body_ic.inner ]
  %257 = phi <4 x i16> [ %.lcssa52108112, %for_begin_ic.inner.preheader ], [ %479, %for_body_ic.inner ]
  %258 = phi <4 x i16> [ %.lcssa54110111, %for_begin_ic.inner.preheader ], [ %487, %for_body_ic.inner ]
  %259 = add nsw i64 %228, %indvars.iv
  %260 = shl nuw nsw i64 %indvars.iv, 2
  %261 = add nuw nsw i64 %230, %260
  %262 = getelementptr inbounds i8, ptr %p1, i64 %261
  %263 = load <4 x i8>, ptr %262, align 4, !tbaa !7877
  %264 = sext <4 x i8> %263 to <4 x i16>
  %265 = getelementptr inbounds i8, ptr %p0, i64 %259
  %266 = load i8, ptr %265, align 1, !tbaa !7879
  %267 = insertelement <4 x i8> undef, i8 %266, i64 0
  %268 = shufflevector <4 x i8> %267, <4 x i8> undef, <4 x i32> zeroinitializer
  %269 = sext <4 x i8> %268 to <4 x i16>
  %270 = mul nsw <4 x i16> %269, %264
  %271 = add <4 x i16> %270, %231
  %272 = add nsw i64 %259, 8
  %273 = getelementptr inbounds i8, ptr %p0, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !7879
  %275 = insertelement <4 x i8> undef, i8 %274, i64 0
  %276 = shufflevector <4 x i8> %275, <4 x i8> undef, <4 x i32> zeroinitializer
  %277 = sext <4 x i8> %276 to <4 x i16>
  %278 = mul nsw <4 x i16> %277, %264
  %279 = add <4 x i16> %278, %232
  %280 = add nsw i64 %259, 16
  %281 = getelementptr inbounds i8, ptr %p0, i64 %280
  %282 = load i8, ptr %281, align 1, !tbaa !7879
  %283 = insertelement <4 x i8> undef, i8 %282, i64 0
  %284 = shufflevector <4 x i8> %283, <4 x i8> undef, <4 x i32> zeroinitializer
  %285 = sext <4 x i8> %284 to <4 x i16>
  %286 = mul nsw <4 x i16> %285, %264
  %287 = add <4 x i16> %286, %233
  %288 = add nsw i64 %259, 24
  %289 = getelementptr inbounds i8, ptr %p0, i64 %288
  %290 = load i8, ptr %289, align 1, !tbaa !7879
  %291 = insertelement <4 x i8> undef, i8 %290, i64 0
  %292 = shufflevector <4 x i8> %291, <4 x i8> undef, <4 x i32> zeroinitializer
  %293 = sext <4 x i8> %292 to <4 x i16>
  %294 = mul nsw <4 x i16> %293, %264
  %295 = add <4 x i16> %294, %234
  %296 = add nsw i64 %259, 32
  %297 = getelementptr inbounds i8, ptr %p0, i64 %296
  %298 = load i8, ptr %297, align 1, !tbaa !7879
  %299 = insertelement <4 x i8> undef, i8 %298, i64 0
  %300 = shufflevector <4 x i8> %299, <4 x i8> undef, <4 x i32> zeroinitializer
  %301 = sext <4 x i8> %300 to <4 x i16>
  %302 = mul nsw <4 x i16> %301, %264
  %303 = add <4 x i16> %302, %235
  %304 = add nsw i64 %259, 40
  %305 = getelementptr inbounds i8, ptr %p0, i64 %304
  %306 = load i8, ptr %305, align 1, !tbaa !7879
  %307 = insertelement <4 x i8> undef, i8 %306, i64 0
  %308 = shufflevector <4 x i8> %307, <4 x i8> undef, <4 x i32> zeroinitializer
  %309 = sext <4 x i8> %308 to <4 x i16>
  %310 = mul nsw <4 x i16> %309, %264
  %311 = add <4 x i16> %310, %236
  %312 = add nsw i64 %259, 48
  %313 = getelementptr inbounds i8, ptr %p0, i64 %312
  %314 = load i8, ptr %313, align 1, !tbaa !7879
  %315 = insertelement <4 x i8> undef, i8 %314, i64 0
  %316 = shufflevector <4 x i8> %315, <4 x i8> undef, <4 x i32> zeroinitializer
  %317 = sext <4 x i8> %316 to <4 x i16>
  %318 = mul nsw <4 x i16> %317, %264
  %319 = add <4 x i16> %318, %237
  %320 = add nsw i64 %259, 56
  %321 = getelementptr inbounds i8, ptr %p0, i64 %320
  %322 = load i8, ptr %321, align 1, !tbaa !7879
  %323 = insertelement <4 x i8> undef, i8 %322, i64 0
  %324 = shufflevector <4 x i8> %323, <4 x i8> undef, <4 x i32> zeroinitializer
  %325 = sext <4 x i8> %324 to <4 x i16>
  %326 = mul nsw <4 x i16> %325, %264
  %327 = add <4 x i16> %326, %238
  %328 = add nsw i64 %259, 64
  %329 = getelementptr inbounds i8, ptr %p0, i64 %328
  %330 = load i8, ptr %329, align 1, !tbaa !7879
  %331 = insertelement <4 x i8> undef, i8 %330, i64 0
  %332 = shufflevector <4 x i8> %331, <4 x i8> undef, <4 x i32> zeroinitializer
  %333 = sext <4 x i8> %332 to <4 x i16>
  %334 = mul nsw <4 x i16> %333, %264
  %335 = add <4 x i16> %334, %239
  %336 = add nsw i64 %259, 72
  %337 = getelementptr inbounds i8, ptr %p0, i64 %336
  %338 = load i8, ptr %337, align 1, !tbaa !7879
  %339 = insertelement <4 x i8> undef, i8 %338, i64 0
  %340 = shufflevector <4 x i8> %339, <4 x i8> undef, <4 x i32> zeroinitializer
  %341 = sext <4 x i8> %340 to <4 x i16>
  %342 = mul nsw <4 x i16> %341, %264
  %343 = add <4 x i16> %342, %240
  %344 = add nsw i64 %259, 80
  %345 = getelementptr inbounds i8, ptr %p0, i64 %344
  %346 = load i8, ptr %345, align 1, !tbaa !7879
  %347 = insertelement <4 x i8> undef, i8 %346, i64 0
  %348 = shufflevector <4 x i8> %347, <4 x i8> undef, <4 x i32> zeroinitializer
  %349 = sext <4 x i8> %348 to <4 x i16>
  %350 = mul nsw <4 x i16> %349, %264
  %351 = add <4 x i16> %350, %241
  %352 = add nsw i64 %259, 88
  %353 = getelementptr inbounds i8, ptr %p0, i64 %352
  %354 = load i8, ptr %353, align 1, !tbaa !7879
  %355 = insertelement <4 x i8> undef, i8 %354, i64 0
  %356 = shufflevector <4 x i8> %355, <4 x i8> undef, <4 x i32> zeroinitializer
  %357 = sext <4 x i8> %356 to <4 x i16>
  %358 = mul nsw <4 x i16> %357, %264
  %359 = add <4 x i16> %358, %242
  %360 = add nsw i64 %259, 96
  %361 = getelementptr inbounds i8, ptr %p0, i64 %360
  %362 = load i8, ptr %361, align 1, !tbaa !7879
  %363 = insertelement <4 x i8> undef, i8 %362, i64 0
  %364 = shufflevector <4 x i8> %363, <4 x i8> undef, <4 x i32> zeroinitializer
  %365 = sext <4 x i8> %364 to <4 x i16>
  %366 = mul nsw <4 x i16> %365, %264
  %367 = add <4 x i16> %366, %243
  %368 = add nsw i64 %259, 104
  %369 = getelementptr inbounds i8, ptr %p0, i64 %368
  %370 = load i8, ptr %369, align 1, !tbaa !7879
  %371 = insertelement <4 x i8> undef, i8 %370, i64 0
  %372 = shufflevector <4 x i8> %371, <4 x i8> undef, <4 x i32> zeroinitializer
  %373 = sext <4 x i8> %372 to <4 x i16>
  %374 = mul nsw <4 x i16> %373, %264
  %375 = add <4 x i16> %374, %244
  %376 = add nsw i64 %259, 224
  %377 = getelementptr inbounds i8, ptr %p0, i64 %376
  %378 = load i8, ptr %377, align 1, !tbaa !7879
  %379 = insertelement <4 x i8> undef, i8 %378, i64 0
  %380 = shufflevector <4 x i8> %379, <4 x i8> undef, <4 x i32> zeroinitializer
  %381 = sext <4 x i8> %380 to <4 x i16>
  %382 = mul nsw <4 x i16> %381, %264
  %383 = add <4 x i16> %382, %245
  %384 = add nsw i64 %259, 232
  %385 = getelementptr inbounds i8, ptr %p0, i64 %384
  %386 = load i8, ptr %385, align 1, !tbaa !7879
  %387 = insertelement <4 x i8> undef, i8 %386, i64 0
  %388 = shufflevector <4 x i8> %387, <4 x i8> undef, <4 x i32> zeroinitializer
  %389 = sext <4 x i8> %388 to <4 x i16>
  %390 = mul nsw <4 x i16> %389, %264
  %391 = add <4 x i16> %390, %246
  %392 = add nsw i64 %259, 240
  %393 = getelementptr inbounds i8, ptr %p0, i64 %392
  %394 = load i8, ptr %393, align 1, !tbaa !7879
  %395 = insertelement <4 x i8> undef, i8 %394, i64 0
  %396 = shufflevector <4 x i8> %395, <4 x i8> undef, <4 x i32> zeroinitializer
  %397 = sext <4 x i8> %396 to <4 x i16>
  %398 = mul nsw <4 x i16> %397, %264
  %399 = add <4 x i16> %398, %247
  %400 = add nsw i64 %259, 248
  %401 = getelementptr inbounds i8, ptr %p0, i64 %400
  %402 = load i8, ptr %401, align 1, !tbaa !7879
  %403 = insertelement <4 x i8> undef, i8 %402, i64 0
  %404 = shufflevector <4 x i8> %403, <4 x i8> undef, <4 x i32> zeroinitializer
  %405 = sext <4 x i8> %404 to <4 x i16>
  %406 = mul nsw <4 x i16> %405, %264
  %407 = add <4 x i16> %406, %248
  %408 = add nsw i64 %259, 256
  %409 = getelementptr inbounds i8, ptr %p0, i64 %408
  %410 = load i8, ptr %409, align 1, !tbaa !7879
  %411 = insertelement <4 x i8> undef, i8 %410, i64 0
  %412 = shufflevector <4 x i8> %411, <4 x i8> undef, <4 x i32> zeroinitializer
  %413 = sext <4 x i8> %412 to <4 x i16>
  %414 = mul nsw <4 x i16> %413, %264
  %415 = add <4 x i16> %414, %249
  %416 = add nsw i64 %259, 264
  %417 = getelementptr inbounds i8, ptr %p0, i64 %416
  %418 = load i8, ptr %417, align 1, !tbaa !7879
  %419 = insertelement <4 x i8> undef, i8 %418, i64 0
  %420 = shufflevector <4 x i8> %419, <4 x i8> undef, <4 x i32> zeroinitializer
  %421 = sext <4 x i8> %420 to <4 x i16>
  %422 = mul nsw <4 x i16> %421, %264
  %423 = add <4 x i16> %422, %250
  %424 = add nsw i64 %259, 272
  %425 = getelementptr inbounds i8, ptr %p0, i64 %424
  %426 = load i8, ptr %425, align 1, !tbaa !7879
  %427 = insertelement <4 x i8> undef, i8 %426, i64 0
  %428 = shufflevector <4 x i8> %427, <4 x i8> undef, <4 x i32> zeroinitializer
  %429 = sext <4 x i8> %428 to <4 x i16>
  %430 = mul nsw <4 x i16> %429, %264
  %431 = add <4 x i16> %430, %251
  %432 = add nsw i64 %259, 280
  %433 = getelementptr inbounds i8, ptr %p0, i64 %432
  %434 = load i8, ptr %433, align 1, !tbaa !7879
  %435 = insertelement <4 x i8> undef, i8 %434, i64 0
  %436 = shufflevector <4 x i8> %435, <4 x i8> undef, <4 x i32> zeroinitializer
  %437 = sext <4 x i8> %436 to <4 x i16>
  %438 = mul nsw <4 x i16> %437, %264
  %439 = add <4 x i16> %438, %252
  %440 = add nsw i64 %259, 288
  %441 = getelementptr inbounds i8, ptr %p0, i64 %440
  %442 = load i8, ptr %441, align 1, !tbaa !7879
  %443 = insertelement <4 x i8> undef, i8 %442, i64 0
  %444 = shufflevector <4 x i8> %443, <4 x i8> undef, <4 x i32> zeroinitializer
  %445 = sext <4 x i8> %444 to <4 x i16>
  %446 = mul nsw <4 x i16> %445, %264
  %447 = add <4 x i16> %446, %253
  %448 = add nsw i64 %259, 296
  %449 = getelementptr inbounds i8, ptr %p0, i64 %448
  %450 = load i8, ptr %449, align 1, !tbaa !7879
  %451 = insertelement <4 x i8> undef, i8 %450, i64 0
  %452 = shufflevector <4 x i8> %451, <4 x i8> undef, <4 x i32> zeroinitializer
  %453 = sext <4 x i8> %452 to <4 x i16>
  %454 = mul nsw <4 x i16> %453, %264
  %455 = add <4 x i16> %454, %254
  %456 = add nsw i64 %259, 304
  %457 = getelementptr inbounds i8, ptr %p0, i64 %456
  %458 = load i8, ptr %457, align 1, !tbaa !7879
  %459 = insertelement <4 x i8> undef, i8 %458, i64 0
  %460 = shufflevector <4 x i8> %459, <4 x i8> undef, <4 x i32> zeroinitializer
  %461 = sext <4 x i8> %460 to <4 x i16>
  %462 = mul nsw <4 x i16> %461, %264
  %463 = add <4 x i16> %462, %255
  %464 = add nsw i64 %259, 312
  %465 = getelementptr inbounds i8, ptr %p0, i64 %464
  %466 = load i8, ptr %465, align 1, !tbaa !7879
  %467 = insertelement <4 x i8> undef, i8 %466, i64 0
  %468 = shufflevector <4 x i8> %467, <4 x i8> undef, <4 x i32> zeroinitializer
  %469 = sext <4 x i8> %468 to <4 x i16>
  %470 = mul nsw <4 x i16> %469, %264
  %471 = add <4 x i16> %470, %256
  %472 = add nsw i64 %259, 320
  %473 = getelementptr inbounds i8, ptr %p0, i64 %472
  %474 = load i8, ptr %473, align 1, !tbaa !7879
  %475 = insertelement <4 x i8> undef, i8 %474, i64 0
  %476 = shufflevector <4 x i8> %475, <4 x i8> undef, <4 x i32> zeroinitializer
  %477 = sext <4 x i8> %476 to <4 x i16>
  %478 = mul nsw <4 x i16> %477, %264
  %479 = add <4 x i16> %478, %257
  %480 = add nsw i64 %259, 328
  %481 = getelementptr inbounds i8, ptr %p0, i64 %480
  %482 = load i8, ptr %481, align 1, !tbaa !7879
  %483 = insertelement <4 x i8> undef, i8 %482, i64 0
  %484 = shufflevector <4 x i8> %483, <4 x i8> undef, <4 x i32> zeroinitializer
  %485 = sext <4 x i8> %484 to <4 x i16>
  %486 = mul nsw <4 x i16> %485, %264
  %487 = add <4 x i16> %486, %258
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !59

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next176 = add nuw nsw i64 %indvars.iv175, 1
  %exitcond178.not = icmp eq i64 %indvars.iv.next176, 128
  br i1 %exitcond178.not, label %for_begin_ax2.inner.preheader, label %for_begin_ic.inner.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_14_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1415, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1415(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 447
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 448)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 448)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph:     ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = load i16, ptr %p3, align 64, !tbaa !7881
  %16 = insertelement <4 x i16> undef, i16 %15, i64 0
  %17 = shufflevector <4 x i16> %16, <4 x i16> undef, <4 x i32> zeroinitializer
  %18 = load i16, ptr %p2, align 64, !tbaa !7893
  %19 = insertelement <4 x i16> undef, i16 %18, i64 0
  %20 = shufflevector <4 x i16> %19, <4 x i16> undef, <4 x i32> zeroinitializer
  %21 = tail call i32 @llvm.smin.i32(i32 %10, i32 448)
  %smin = sext i32 %21 to i64
  %22 = add i32 %9, %21
  %23 = sub i32 %22, %11
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, %for_begin_ax2.inner.preheader
  %indvars.iv186 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph ], [ %indvars.iv.next187, %for_begin_ax2.inner.preheader ]
  %24 = trunc i64 %indvars.iv186 to i32
  %25 = srem i32 %24, 7
  %26 = mul nsw i32 %25, 112
  %27 = sdiv i32 %24, 7
  %28 = shl nsw i32 %27, 12
  %29 = sext i32 %26 to i64
  %30 = sext i32 %28 to i64
  br label %for_begin_ic.inner.preheader

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_begin_ax2.inner.preheader, %parallel_closure_entry
  ret i32 0

for_begin_ax2.inner.preheader:                    ; preds = %for_end_ic.inner
  %31 = mul nsw i64 %indvars.iv186, 112
  %32 = add <4 x i16> %20, %271
  %33 = ashr <4 x i16> %32, %17
  %34 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %33, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %35 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %34, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %36 = trunc <4 x i16> %35 to <4 x i8>
  %37 = getelementptr inbounds i8, ptr %T_cast, i64 %31
  store <4 x i8> %36, ptr %37, align 4, !tbaa !7905
  %38 = add <4 x i16> %20, %279
  %39 = ashr <4 x i16> %38, %17
  %40 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %39, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %41 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %40, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %42 = trunc <4 x i16> %41 to <4 x i8>
  %43 = or i64 %31, 4
  %44 = getelementptr inbounds i8, ptr %T_cast, i64 %43
  store <4 x i8> %42, ptr %44, align 4, !tbaa !7905
  %45 = add <4 x i16> %20, %287
  %46 = ashr <4 x i16> %45, %17
  %47 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %46, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %48 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %47, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %49 = trunc <4 x i16> %48 to <4 x i8>
  %50 = or i64 %31, 8
  %51 = getelementptr inbounds i8, ptr %T_cast, i64 %50
  store <4 x i8> %49, ptr %51, align 4, !tbaa !7905
  %52 = add <4 x i16> %20, %295
  %53 = ashr <4 x i16> %52, %17
  %54 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %53, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %55 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %54, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %56 = trunc <4 x i16> %55 to <4 x i8>
  %57 = or i64 %31, 12
  %58 = getelementptr inbounds i8, ptr %T_cast, i64 %57
  store <4 x i8> %56, ptr %58, align 4, !tbaa !7905
  %59 = add <4 x i16> %20, %303
  %60 = ashr <4 x i16> %59, %17
  %61 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %60, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %62 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %61, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %63 = trunc <4 x i16> %62 to <4 x i8>
  %64 = add nsw i64 %31, 16
  %65 = getelementptr inbounds i8, ptr %T_cast, i64 %64
  store <4 x i8> %63, ptr %65, align 4, !tbaa !7905
  %66 = add <4 x i16> %20, %311
  %67 = ashr <4 x i16> %66, %17
  %68 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %67, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %69 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %68, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %70 = trunc <4 x i16> %69 to <4 x i8>
  %71 = add nsw i64 %31, 20
  %72 = getelementptr inbounds i8, ptr %T_cast, i64 %71
  store <4 x i8> %70, ptr %72, align 4, !tbaa !7905
  %73 = add <4 x i16> %20, %319
  %74 = ashr <4 x i16> %73, %17
  %75 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %74, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %76 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %75, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %77 = trunc <4 x i16> %76 to <4 x i8>
  %78 = add nsw i64 %31, 24
  %79 = getelementptr inbounds i8, ptr %T_cast, i64 %78
  store <4 x i8> %77, ptr %79, align 4, !tbaa !7905
  %80 = add <4 x i16> %20, %327
  %81 = ashr <4 x i16> %80, %17
  %82 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %81, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %83 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %82, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %84 = trunc <4 x i16> %83 to <4 x i8>
  %85 = add nsw i64 %31, 28
  %86 = getelementptr inbounds i8, ptr %T_cast, i64 %85
  store <4 x i8> %84, ptr %86, align 4, !tbaa !7905
  %87 = add <4 x i16> %20, %335
  %88 = ashr <4 x i16> %87, %17
  %89 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %88, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %90 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %89, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %91 = trunc <4 x i16> %90 to <4 x i8>
  %92 = add nsw i64 %31, 32
  %93 = getelementptr inbounds i8, ptr %T_cast, i64 %92
  store <4 x i8> %91, ptr %93, align 4, !tbaa !7905
  %94 = add <4 x i16> %20, %343
  %95 = ashr <4 x i16> %94, %17
  %96 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %95, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %97 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %96, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %98 = trunc <4 x i16> %97 to <4 x i8>
  %99 = add nsw i64 %31, 36
  %100 = getelementptr inbounds i8, ptr %T_cast, i64 %99
  store <4 x i8> %98, ptr %100, align 4, !tbaa !7905
  %101 = add <4 x i16> %20, %351
  %102 = ashr <4 x i16> %101, %17
  %103 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %102, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %104 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %103, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %105 = trunc <4 x i16> %104 to <4 x i8>
  %106 = add nsw i64 %31, 40
  %107 = getelementptr inbounds i8, ptr %T_cast, i64 %106
  store <4 x i8> %105, ptr %107, align 4, !tbaa !7905
  %108 = add <4 x i16> %20, %359
  %109 = ashr <4 x i16> %108, %17
  %110 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %109, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %111 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %110, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %112 = trunc <4 x i16> %111 to <4 x i8>
  %113 = add nsw i64 %31, 44
  %114 = getelementptr inbounds i8, ptr %T_cast, i64 %113
  store <4 x i8> %112, ptr %114, align 4, !tbaa !7905
  %115 = add <4 x i16> %20, %367
  %116 = ashr <4 x i16> %115, %17
  %117 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %116, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %118 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %117, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %119 = trunc <4 x i16> %118 to <4 x i8>
  %120 = add nsw i64 %31, 48
  %121 = getelementptr inbounds i8, ptr %T_cast, i64 %120
  store <4 x i8> %119, ptr %121, align 4, !tbaa !7905
  %122 = add <4 x i16> %20, %375
  %123 = ashr <4 x i16> %122, %17
  %124 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %123, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %125 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %124, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %126 = trunc <4 x i16> %125 to <4 x i8>
  %127 = add nsw i64 %31, 52
  %128 = getelementptr inbounds i8, ptr %T_cast, i64 %127
  store <4 x i8> %126, ptr %128, align 4, !tbaa !7905
  %129 = add nsw i64 %31, 56
  %130 = add <4 x i16> %20, %383
  %131 = ashr <4 x i16> %130, %17
  %132 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %131, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %133 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %132, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %134 = trunc <4 x i16> %133 to <4 x i8>
  %135 = getelementptr inbounds i8, ptr %T_cast, i64 %129
  store <4 x i8> %134, ptr %135, align 4, !tbaa !7905
  %136 = add <4 x i16> %20, %391
  %137 = ashr <4 x i16> %136, %17
  %138 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %137, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %139 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %138, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %140 = trunc <4 x i16> %139 to <4 x i8>
  %141 = add nsw i64 %31, 60
  %142 = getelementptr inbounds i8, ptr %T_cast, i64 %141
  store <4 x i8> %140, ptr %142, align 4, !tbaa !7905
  %143 = add <4 x i16> %20, %399
  %144 = ashr <4 x i16> %143, %17
  %145 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %144, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %146 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %145, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %147 = trunc <4 x i16> %146 to <4 x i8>
  %148 = add nsw i64 %31, 64
  %149 = getelementptr inbounds i8, ptr %T_cast, i64 %148
  store <4 x i8> %147, ptr %149, align 4, !tbaa !7905
  %150 = add <4 x i16> %20, %407
  %151 = ashr <4 x i16> %150, %17
  %152 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %151, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %153 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %152, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %154 = trunc <4 x i16> %153 to <4 x i8>
  %155 = add nsw i64 %31, 68
  %156 = getelementptr inbounds i8, ptr %T_cast, i64 %155
  store <4 x i8> %154, ptr %156, align 4, !tbaa !7905
  %157 = add <4 x i16> %20, %415
  %158 = ashr <4 x i16> %157, %17
  %159 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %158, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %160 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %159, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %161 = trunc <4 x i16> %160 to <4 x i8>
  %162 = add nsw i64 %31, 72
  %163 = getelementptr inbounds i8, ptr %T_cast, i64 %162
  store <4 x i8> %161, ptr %163, align 4, !tbaa !7905
  %164 = add <4 x i16> %20, %423
  %165 = ashr <4 x i16> %164, %17
  %166 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %165, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %167 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %166, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %168 = trunc <4 x i16> %167 to <4 x i8>
  %169 = add nsw i64 %31, 76
  %170 = getelementptr inbounds i8, ptr %T_cast, i64 %169
  store <4 x i8> %168, ptr %170, align 4, !tbaa !7905
  %171 = add <4 x i16> %20, %431
  %172 = ashr <4 x i16> %171, %17
  %173 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %172, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %174 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %173, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %175 = trunc <4 x i16> %174 to <4 x i8>
  %176 = add nsw i64 %31, 80
  %177 = getelementptr inbounds i8, ptr %T_cast, i64 %176
  store <4 x i8> %175, ptr %177, align 4, !tbaa !7905
  %178 = add <4 x i16> %20, %439
  %179 = ashr <4 x i16> %178, %17
  %180 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %179, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %181 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %180, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %182 = trunc <4 x i16> %181 to <4 x i8>
  %183 = add nsw i64 %31, 84
  %184 = getelementptr inbounds i8, ptr %T_cast, i64 %183
  store <4 x i8> %182, ptr %184, align 4, !tbaa !7905
  %185 = add <4 x i16> %20, %447
  %186 = ashr <4 x i16> %185, %17
  %187 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %186, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %188 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %187, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %189 = trunc <4 x i16> %188 to <4 x i8>
  %190 = add nsw i64 %31, 88
  %191 = getelementptr inbounds i8, ptr %T_cast, i64 %190
  store <4 x i8> %189, ptr %191, align 4, !tbaa !7905
  %192 = add <4 x i16> %20, %455
  %193 = ashr <4 x i16> %192, %17
  %194 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %193, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %195 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %194, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %196 = trunc <4 x i16> %195 to <4 x i8>
  %197 = add nsw i64 %31, 92
  %198 = getelementptr inbounds i8, ptr %T_cast, i64 %197
  store <4 x i8> %196, ptr %198, align 4, !tbaa !7905
  %199 = add <4 x i16> %20, %463
  %200 = ashr <4 x i16> %199, %17
  %201 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %200, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %202 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %201, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %203 = trunc <4 x i16> %202 to <4 x i8>
  %204 = add nsw i64 %31, 96
  %205 = getelementptr inbounds i8, ptr %T_cast, i64 %204
  store <4 x i8> %203, ptr %205, align 4, !tbaa !7905
  %206 = add <4 x i16> %20, %471
  %207 = ashr <4 x i16> %206, %17
  %208 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %207, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %209 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %208, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %210 = trunc <4 x i16> %209 to <4 x i8>
  %211 = add nsw i64 %31, 100
  %212 = getelementptr inbounds i8, ptr %T_cast, i64 %211
  store <4 x i8> %210, ptr %212, align 4, !tbaa !7905
  %213 = add <4 x i16> %20, %479
  %214 = ashr <4 x i16> %213, %17
  %215 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %214, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %216 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %215, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %217 = trunc <4 x i16> %216 to <4 x i8>
  %218 = add nsw i64 %31, 104
  %219 = getelementptr inbounds i8, ptr %T_cast, i64 %218
  store <4 x i8> %217, ptr %219, align 4, !tbaa !7905
  %220 = add <4 x i16> %20, %487
  %221 = ashr <4 x i16> %220, %17
  %222 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %221, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %223 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %222, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %224 = trunc <4 x i16> %223 to <4 x i8>
  %225 = add nsw i64 %31, 108
  %226 = getelementptr inbounds i8, ptr %T_cast, i64 %225
  store <4 x i8> %224, ptr %226, align 4, !tbaa !7905
  %indvars.iv.next187 = add nsw i64 %indvars.iv186, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next187 to i32
  %exitcond188.not = icmp eq i32 %23, %lftr.wideiv
  br i1 %exitcond188.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !59

for_begin_ic.inner.preheader:                     ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ic.inner
  %indvars.iv175 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %indvars.iv.next176, %for_end_ic.inner ]
  %.lcssa57138 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %271, %for_end_ic.inner ]
  %.lcssa259137 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %279, %for_end_ic.inner ]
  %.lcssa460136 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %287, %for_end_ic.inner ]
  %.lcssa662135 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %295, %for_end_ic.inner ]
  %.lcssa864134 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %303, %for_end_ic.inner ]
  %.lcssa1066133 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %311, %for_end_ic.inner ]
  %.lcssa1268132 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %319, %for_end_ic.inner ]
  %.lcssa1470131 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %327, %for_end_ic.inner ]
  %.lcssa1672130 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %335, %for_end_ic.inner ]
  %.lcssa1874129 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %343, %for_end_ic.inner ]
  %.lcssa2076128 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %351, %for_end_ic.inner ]
  %.lcssa2278127 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %359, %for_end_ic.inner ]
  %.lcssa2480126 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %367, %for_end_ic.inner ]
  %.lcssa2682125 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %375, %for_end_ic.inner ]
  %.lcssa2884124 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %383, %for_end_ic.inner ]
  %.lcssa3086123 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %391, %for_end_ic.inner ]
  %.lcssa3288122 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %399, %for_end_ic.inner ]
  %.lcssa3490121 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %407, %for_end_ic.inner ]
  %.lcssa3692120 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %415, %for_end_ic.inner ]
  %.lcssa3894119 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %423, %for_end_ic.inner ]
  %.lcssa4096118 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %431, %for_end_ic.inner ]
  %.lcssa4298117 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %439, %for_end_ic.inner ]
  %.lcssa44100116 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %447, %for_end_ic.inner ]
  %.lcssa46102115 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %455, %for_end_ic.inner ]
  %.lcssa48104114 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %463, %for_end_ic.inner ]
  %.lcssa50106113 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %471, %for_end_ic.inner ]
  %.lcssa52108112 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %479, %for_end_ic.inner ]
  %.lcssa54110111 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %487, %for_end_ic.inner ]
  %227 = mul nuw nsw i64 %indvars.iv175, 784
  %228 = add nsw i64 %227, %29
  %229 = shl nsw i64 %indvars.iv175, 4
  %230 = add nuw nsw i64 %229, %30
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %231 = phi <4 x i16> [ %.lcssa57138, %for_begin_ic.inner.preheader ], [ %271, %for_body_ic.inner ]
  %232 = phi <4 x i16> [ %.lcssa259137, %for_begin_ic.inner.preheader ], [ %279, %for_body_ic.inner ]
  %233 = phi <4 x i16> [ %.lcssa460136, %for_begin_ic.inner.preheader ], [ %287, %for_body_ic.inner ]
  %234 = phi <4 x i16> [ %.lcssa662135, %for_begin_ic.inner.preheader ], [ %295, %for_body_ic.inner ]
  %235 = phi <4 x i16> [ %.lcssa864134, %for_begin_ic.inner.preheader ], [ %303, %for_body_ic.inner ]
  %236 = phi <4 x i16> [ %.lcssa1066133, %for_begin_ic.inner.preheader ], [ %311, %for_body_ic.inner ]
  %237 = phi <4 x i16> [ %.lcssa1268132, %for_begin_ic.inner.preheader ], [ %319, %for_body_ic.inner ]
  %238 = phi <4 x i16> [ %.lcssa1470131, %for_begin_ic.inner.preheader ], [ %327, %for_body_ic.inner ]
  %239 = phi <4 x i16> [ %.lcssa1672130, %for_begin_ic.inner.preheader ], [ %335, %for_body_ic.inner ]
  %240 = phi <4 x i16> [ %.lcssa1874129, %for_begin_ic.inner.preheader ], [ %343, %for_body_ic.inner ]
  %241 = phi <4 x i16> [ %.lcssa2076128, %for_begin_ic.inner.preheader ], [ %351, %for_body_ic.inner ]
  %242 = phi <4 x i16> [ %.lcssa2278127, %for_begin_ic.inner.preheader ], [ %359, %for_body_ic.inner ]
  %243 = phi <4 x i16> [ %.lcssa2480126, %for_begin_ic.inner.preheader ], [ %367, %for_body_ic.inner ]
  %244 = phi <4 x i16> [ %.lcssa2682125, %for_begin_ic.inner.preheader ], [ %375, %for_body_ic.inner ]
  %245 = phi <4 x i16> [ %.lcssa2884124, %for_begin_ic.inner.preheader ], [ %383, %for_body_ic.inner ]
  %246 = phi <4 x i16> [ %.lcssa3086123, %for_begin_ic.inner.preheader ], [ %391, %for_body_ic.inner ]
  %247 = phi <4 x i16> [ %.lcssa3288122, %for_begin_ic.inner.preheader ], [ %399, %for_body_ic.inner ]
  %248 = phi <4 x i16> [ %.lcssa3490121, %for_begin_ic.inner.preheader ], [ %407, %for_body_ic.inner ]
  %249 = phi <4 x i16> [ %.lcssa3692120, %for_begin_ic.inner.preheader ], [ %415, %for_body_ic.inner ]
  %250 = phi <4 x i16> [ %.lcssa3894119, %for_begin_ic.inner.preheader ], [ %423, %for_body_ic.inner ]
  %251 = phi <4 x i16> [ %.lcssa4096118, %for_begin_ic.inner.preheader ], [ %431, %for_body_ic.inner ]
  %252 = phi <4 x i16> [ %.lcssa4298117, %for_begin_ic.inner.preheader ], [ %439, %for_body_ic.inner ]
  %253 = phi <4 x i16> [ %.lcssa44100116, %for_begin_ic.inner.preheader ], [ %447, %for_body_ic.inner ]
  %254 = phi <4 x i16> [ %.lcssa46102115, %for_begin_ic.inner.preheader ], [ %455, %for_body_ic.inner ]
  %255 = phi <4 x i16> [ %.lcssa48104114, %for_begin_ic.inner.preheader ], [ %463, %for_body_ic.inner ]
  %256 = phi <4 x i16> [ %.lcssa50106113, %for_begin_ic.inner.preheader ], [ %471, %for_body_ic.inner ]
  %257 = phi <4 x i16> [ %.lcssa52108112, %for_begin_ic.inner.preheader ], [ %479, %for_body_ic.inner ]
  %258 = phi <4 x i16> [ %.lcssa54110111, %for_begin_ic.inner.preheader ], [ %487, %for_body_ic.inner ]
  %259 = add nsw i64 %228, %indvars.iv
  %260 = shl nuw nsw i64 %indvars.iv, 2
  %261 = add nuw nsw i64 %230, %260
  %262 = getelementptr inbounds i8, ptr %p1, i64 %261
  %263 = load <4 x i8>, ptr %262, align 4, !tbaa !7907
  %264 = sext <4 x i8> %263 to <4 x i16>
  %265 = getelementptr inbounds i8, ptr %p0, i64 %259
  %266 = load i8, ptr %265, align 1, !tbaa !7909
  %267 = insertelement <4 x i8> undef, i8 %266, i64 0
  %268 = shufflevector <4 x i8> %267, <4 x i8> undef, <4 x i32> zeroinitializer
  %269 = sext <4 x i8> %268 to <4 x i16>
  %270 = mul nsw <4 x i16> %269, %264
  %271 = add <4 x i16> %270, %231
  %272 = add nsw i64 %259, 4
  %273 = getelementptr inbounds i8, ptr %p0, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !7909
  %275 = insertelement <4 x i8> undef, i8 %274, i64 0
  %276 = shufflevector <4 x i8> %275, <4 x i8> undef, <4 x i32> zeroinitializer
  %277 = sext <4 x i8> %276 to <4 x i16>
  %278 = mul nsw <4 x i16> %277, %264
  %279 = add <4 x i16> %278, %232
  %280 = add nsw i64 %259, 8
  %281 = getelementptr inbounds i8, ptr %p0, i64 %280
  %282 = load i8, ptr %281, align 1, !tbaa !7909
  %283 = insertelement <4 x i8> undef, i8 %282, i64 0
  %284 = shufflevector <4 x i8> %283, <4 x i8> undef, <4 x i32> zeroinitializer
  %285 = sext <4 x i8> %284 to <4 x i16>
  %286 = mul nsw <4 x i16> %285, %264
  %287 = add <4 x i16> %286, %233
  %288 = add nsw i64 %259, 12
  %289 = getelementptr inbounds i8, ptr %p0, i64 %288
  %290 = load i8, ptr %289, align 1, !tbaa !7909
  %291 = insertelement <4 x i8> undef, i8 %290, i64 0
  %292 = shufflevector <4 x i8> %291, <4 x i8> undef, <4 x i32> zeroinitializer
  %293 = sext <4 x i8> %292 to <4 x i16>
  %294 = mul nsw <4 x i16> %293, %264
  %295 = add <4 x i16> %294, %234
  %296 = add nsw i64 %259, 16
  %297 = getelementptr inbounds i8, ptr %p0, i64 %296
  %298 = load i8, ptr %297, align 1, !tbaa !7909
  %299 = insertelement <4 x i8> undef, i8 %298, i64 0
  %300 = shufflevector <4 x i8> %299, <4 x i8> undef, <4 x i32> zeroinitializer
  %301 = sext <4 x i8> %300 to <4 x i16>
  %302 = mul nsw <4 x i16> %301, %264
  %303 = add <4 x i16> %302, %235
  %304 = add nsw i64 %259, 20
  %305 = getelementptr inbounds i8, ptr %p0, i64 %304
  %306 = load i8, ptr %305, align 1, !tbaa !7909
  %307 = insertelement <4 x i8> undef, i8 %306, i64 0
  %308 = shufflevector <4 x i8> %307, <4 x i8> undef, <4 x i32> zeroinitializer
  %309 = sext <4 x i8> %308 to <4 x i16>
  %310 = mul nsw <4 x i16> %309, %264
  %311 = add <4 x i16> %310, %236
  %312 = add nsw i64 %259, 24
  %313 = getelementptr inbounds i8, ptr %p0, i64 %312
  %314 = load i8, ptr %313, align 1, !tbaa !7909
  %315 = insertelement <4 x i8> undef, i8 %314, i64 0
  %316 = shufflevector <4 x i8> %315, <4 x i8> undef, <4 x i32> zeroinitializer
  %317 = sext <4 x i8> %316 to <4 x i16>
  %318 = mul nsw <4 x i16> %317, %264
  %319 = add <4 x i16> %318, %237
  %320 = add nsw i64 %259, 28
  %321 = getelementptr inbounds i8, ptr %p0, i64 %320
  %322 = load i8, ptr %321, align 1, !tbaa !7909
  %323 = insertelement <4 x i8> undef, i8 %322, i64 0
  %324 = shufflevector <4 x i8> %323, <4 x i8> undef, <4 x i32> zeroinitializer
  %325 = sext <4 x i8> %324 to <4 x i16>
  %326 = mul nsw <4 x i16> %325, %264
  %327 = add <4 x i16> %326, %238
  %328 = add nsw i64 %259, 32
  %329 = getelementptr inbounds i8, ptr %p0, i64 %328
  %330 = load i8, ptr %329, align 1, !tbaa !7909
  %331 = insertelement <4 x i8> undef, i8 %330, i64 0
  %332 = shufflevector <4 x i8> %331, <4 x i8> undef, <4 x i32> zeroinitializer
  %333 = sext <4 x i8> %332 to <4 x i16>
  %334 = mul nsw <4 x i16> %333, %264
  %335 = add <4 x i16> %334, %239
  %336 = add nsw i64 %259, 36
  %337 = getelementptr inbounds i8, ptr %p0, i64 %336
  %338 = load i8, ptr %337, align 1, !tbaa !7909
  %339 = insertelement <4 x i8> undef, i8 %338, i64 0
  %340 = shufflevector <4 x i8> %339, <4 x i8> undef, <4 x i32> zeroinitializer
  %341 = sext <4 x i8> %340 to <4 x i16>
  %342 = mul nsw <4 x i16> %341, %264
  %343 = add <4 x i16> %342, %240
  %344 = add nsw i64 %259, 40
  %345 = getelementptr inbounds i8, ptr %p0, i64 %344
  %346 = load i8, ptr %345, align 1, !tbaa !7909
  %347 = insertelement <4 x i8> undef, i8 %346, i64 0
  %348 = shufflevector <4 x i8> %347, <4 x i8> undef, <4 x i32> zeroinitializer
  %349 = sext <4 x i8> %348 to <4 x i16>
  %350 = mul nsw <4 x i16> %349, %264
  %351 = add <4 x i16> %350, %241
  %352 = add nsw i64 %259, 44
  %353 = getelementptr inbounds i8, ptr %p0, i64 %352
  %354 = load i8, ptr %353, align 1, !tbaa !7909
  %355 = insertelement <4 x i8> undef, i8 %354, i64 0
  %356 = shufflevector <4 x i8> %355, <4 x i8> undef, <4 x i32> zeroinitializer
  %357 = sext <4 x i8> %356 to <4 x i16>
  %358 = mul nsw <4 x i16> %357, %264
  %359 = add <4 x i16> %358, %242
  %360 = add nsw i64 %259, 48
  %361 = getelementptr inbounds i8, ptr %p0, i64 %360
  %362 = load i8, ptr %361, align 1, !tbaa !7909
  %363 = insertelement <4 x i8> undef, i8 %362, i64 0
  %364 = shufflevector <4 x i8> %363, <4 x i8> undef, <4 x i32> zeroinitializer
  %365 = sext <4 x i8> %364 to <4 x i16>
  %366 = mul nsw <4 x i16> %365, %264
  %367 = add <4 x i16> %366, %243
  %368 = add nsw i64 %259, 52
  %369 = getelementptr inbounds i8, ptr %p0, i64 %368
  %370 = load i8, ptr %369, align 1, !tbaa !7909
  %371 = insertelement <4 x i8> undef, i8 %370, i64 0
  %372 = shufflevector <4 x i8> %371, <4 x i8> undef, <4 x i32> zeroinitializer
  %373 = sext <4 x i8> %372 to <4 x i16>
  %374 = mul nsw <4 x i16> %373, %264
  %375 = add <4 x i16> %374, %244
  %376 = add nsw i64 %259, 56
  %377 = getelementptr inbounds i8, ptr %p0, i64 %376
  %378 = load i8, ptr %377, align 1, !tbaa !7909
  %379 = insertelement <4 x i8> undef, i8 %378, i64 0
  %380 = shufflevector <4 x i8> %379, <4 x i8> undef, <4 x i32> zeroinitializer
  %381 = sext <4 x i8> %380 to <4 x i16>
  %382 = mul nsw <4 x i16> %381, %264
  %383 = add <4 x i16> %382, %245
  %384 = add nsw i64 %259, 60
  %385 = getelementptr inbounds i8, ptr %p0, i64 %384
  %386 = load i8, ptr %385, align 1, !tbaa !7909
  %387 = insertelement <4 x i8> undef, i8 %386, i64 0
  %388 = shufflevector <4 x i8> %387, <4 x i8> undef, <4 x i32> zeroinitializer
  %389 = sext <4 x i8> %388 to <4 x i16>
  %390 = mul nsw <4 x i16> %389, %264
  %391 = add <4 x i16> %390, %246
  %392 = add nsw i64 %259, 64
  %393 = getelementptr inbounds i8, ptr %p0, i64 %392
  %394 = load i8, ptr %393, align 1, !tbaa !7909
  %395 = insertelement <4 x i8> undef, i8 %394, i64 0
  %396 = shufflevector <4 x i8> %395, <4 x i8> undef, <4 x i32> zeroinitializer
  %397 = sext <4 x i8> %396 to <4 x i16>
  %398 = mul nsw <4 x i16> %397, %264
  %399 = add <4 x i16> %398, %247
  %400 = add nsw i64 %259, 68
  %401 = getelementptr inbounds i8, ptr %p0, i64 %400
  %402 = load i8, ptr %401, align 1, !tbaa !7909
  %403 = insertelement <4 x i8> undef, i8 %402, i64 0
  %404 = shufflevector <4 x i8> %403, <4 x i8> undef, <4 x i32> zeroinitializer
  %405 = sext <4 x i8> %404 to <4 x i16>
  %406 = mul nsw <4 x i16> %405, %264
  %407 = add <4 x i16> %406, %248
  %408 = add nsw i64 %259, 72
  %409 = getelementptr inbounds i8, ptr %p0, i64 %408
  %410 = load i8, ptr %409, align 1, !tbaa !7909
  %411 = insertelement <4 x i8> undef, i8 %410, i64 0
  %412 = shufflevector <4 x i8> %411, <4 x i8> undef, <4 x i32> zeroinitializer
  %413 = sext <4 x i8> %412 to <4 x i16>
  %414 = mul nsw <4 x i16> %413, %264
  %415 = add <4 x i16> %414, %249
  %416 = add nsw i64 %259, 76
  %417 = getelementptr inbounds i8, ptr %p0, i64 %416
  %418 = load i8, ptr %417, align 1, !tbaa !7909
  %419 = insertelement <4 x i8> undef, i8 %418, i64 0
  %420 = shufflevector <4 x i8> %419, <4 x i8> undef, <4 x i32> zeroinitializer
  %421 = sext <4 x i8> %420 to <4 x i16>
  %422 = mul nsw <4 x i16> %421, %264
  %423 = add <4 x i16> %422, %250
  %424 = add nsw i64 %259, 80
  %425 = getelementptr inbounds i8, ptr %p0, i64 %424
  %426 = load i8, ptr %425, align 1, !tbaa !7909
  %427 = insertelement <4 x i8> undef, i8 %426, i64 0
  %428 = shufflevector <4 x i8> %427, <4 x i8> undef, <4 x i32> zeroinitializer
  %429 = sext <4 x i8> %428 to <4 x i16>
  %430 = mul nsw <4 x i16> %429, %264
  %431 = add <4 x i16> %430, %251
  %432 = add nsw i64 %259, 84
  %433 = getelementptr inbounds i8, ptr %p0, i64 %432
  %434 = load i8, ptr %433, align 1, !tbaa !7909
  %435 = insertelement <4 x i8> undef, i8 %434, i64 0
  %436 = shufflevector <4 x i8> %435, <4 x i8> undef, <4 x i32> zeroinitializer
  %437 = sext <4 x i8> %436 to <4 x i16>
  %438 = mul nsw <4 x i16> %437, %264
  %439 = add <4 x i16> %438, %252
  %440 = add nsw i64 %259, 88
  %441 = getelementptr inbounds i8, ptr %p0, i64 %440
  %442 = load i8, ptr %441, align 1, !tbaa !7909
  %443 = insertelement <4 x i8> undef, i8 %442, i64 0
  %444 = shufflevector <4 x i8> %443, <4 x i8> undef, <4 x i32> zeroinitializer
  %445 = sext <4 x i8> %444 to <4 x i16>
  %446 = mul nsw <4 x i16> %445, %264
  %447 = add <4 x i16> %446, %253
  %448 = add nsw i64 %259, 92
  %449 = getelementptr inbounds i8, ptr %p0, i64 %448
  %450 = load i8, ptr %449, align 1, !tbaa !7909
  %451 = insertelement <4 x i8> undef, i8 %450, i64 0
  %452 = shufflevector <4 x i8> %451, <4 x i8> undef, <4 x i32> zeroinitializer
  %453 = sext <4 x i8> %452 to <4 x i16>
  %454 = mul nsw <4 x i16> %453, %264
  %455 = add <4 x i16> %454, %254
  %456 = add nsw i64 %259, 96
  %457 = getelementptr inbounds i8, ptr %p0, i64 %456
  %458 = load i8, ptr %457, align 1, !tbaa !7909
  %459 = insertelement <4 x i8> undef, i8 %458, i64 0
  %460 = shufflevector <4 x i8> %459, <4 x i8> undef, <4 x i32> zeroinitializer
  %461 = sext <4 x i8> %460 to <4 x i16>
  %462 = mul nsw <4 x i16> %461, %264
  %463 = add <4 x i16> %462, %255
  %464 = add nsw i64 %259, 100
  %465 = getelementptr inbounds i8, ptr %p0, i64 %464
  %466 = load i8, ptr %465, align 1, !tbaa !7909
  %467 = insertelement <4 x i8> undef, i8 %466, i64 0
  %468 = shufflevector <4 x i8> %467, <4 x i8> undef, <4 x i32> zeroinitializer
  %469 = sext <4 x i8> %468 to <4 x i16>
  %470 = mul nsw <4 x i16> %469, %264
  %471 = add <4 x i16> %470, %256
  %472 = add nsw i64 %259, 104
  %473 = getelementptr inbounds i8, ptr %p0, i64 %472
  %474 = load i8, ptr %473, align 1, !tbaa !7909
  %475 = insertelement <4 x i8> undef, i8 %474, i64 0
  %476 = shufflevector <4 x i8> %475, <4 x i8> undef, <4 x i32> zeroinitializer
  %477 = sext <4 x i8> %476 to <4 x i16>
  %478 = mul nsw <4 x i16> %477, %264
  %479 = add <4 x i16> %478, %257
  %480 = add nsw i64 %259, 108
  %481 = getelementptr inbounds i8, ptr %p0, i64 %480
  %482 = load i8, ptr %481, align 1, !tbaa !7909
  %483 = insertelement <4 x i8> undef, i8 %482, i64 0
  %484 = shufflevector <4 x i8> %483, <4 x i8> undef, <4 x i32> zeroinitializer
  %485 = sext <4 x i8> %484 to <4 x i16>
  %486 = mul nsw <4 x i16> %485, %264
  %487 = add <4 x i16> %486, %258
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !59

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next176 = add nuw nsw i64 %indvars.iv175, 1
  %exitcond178.not = icmp eq i64 %indvars.iv.next176, 256
  br i1 %exitcond178.not, label %for_begin_ax2.inner.preheader, label %for_begin_ic.inner.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_15_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.29, align 8
  %7 = alloca %closure_loop_parallel_i0.i1.fused.i2.fused.28, align 8
  %8 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pad = tail call ptr %8(i32 1, i32 %0, i64 65536, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pad, i64 64) ]
  %9 = icmp eq ptr %data_pad, null
  br i1 %9, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end2, %call_end, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %12, %if_end ], [ %19, %call_end ], [ %., %call_end2 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %data_pad, ptr %7, align 8
  %10 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.28, ptr %7, i64 0, i32 1
  store ptr %1, ptr %10, align 8
  %11 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %12 = call i32 %11(ptr nonnull @__tvm_parallel_lambda.1465, ptr nonnull %7, i32 0)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %call_end, label %common.ret, !prof !18

call_end:                                         ; preds = %if_end
  store ptr %data_pad, ptr %6, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.29, ptr %6, i64 0, i32 1
  store ptr %2, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.29, ptr %6, i64 0, i32 2
  store ptr %3, ptr %15, align 8
  %16 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.29, ptr %6, i64 0, i32 3
  store ptr %4, ptr %16, align 8
  %17 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.29, ptr %6, i64 0, i32 4
  store ptr %5, ptr %17, align 8
  %18 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %19 = call i32 %18(ptr nonnull @__tvm_parallel_lambda.1466, ptr nonnull %6, i32 0)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %call_end2, label %common.ret, !prof !18

call_end2:                                        ; preds = %call_end
  %21 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %22 = call i32 %21(i32 1, i32 %0, ptr nonnull %data_pad)
  %.not = icmp ne i32 %22, 0
  %. = sext i1 %.not to i32
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1465(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.28, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 1023
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 1024)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 1024)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_i3.preheader.preheader, label %for_end_i0.i1.fused.i2.fused, !prof !18

for_begin_i3.preheader.preheader:                 ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 1024)
  %smin = sext i32 %12 to i64
  %13 = sub i32 %8, %10
  br label %for_begin_i3.preheader

for_begin_i3.preheader:                           ; preds = %for_begin_i3.preheader.preheader, %for_end_i3
  %indvars.iv = phi i64 [ %smin, %for_begin_i3.preheader.preheader ], [ %indvars.iv.next, %for_end_i3 ]
  %indvar = phi i32 [ 0, %for_begin_i3.preheader.preheader ], [ %indvar.next, %for_end_i3 ]
  %14 = trunc i64 %indvars.iv to i32
  %cse_var_2 = and i32 %14, 15
  %15 = icmp ne i32 %cse_var_2, 15
  %16 = icmp ne i32 %cse_var_2, 0
  %17 = and i1 %16, %15
  %.fr = freeze i1 %17
  br i1 %.fr, label %if_end.15, label %for_body_i3.us.preheader

for_body_i3.us.preheader:                         ; preds = %for_begin_i3.preheader
  %18 = add i32 %10, %indvar
  %19 = shl i32 %18, 6
  %20 = sext i32 %19 to i64
  %scevgep = getelementptr i8, ptr %data_pad, i64 %20
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(64) %scevgep, i8 0, i64 64, i1 false), !tbaa !7911
  br label %for_end_i3

for_end_i0.i1.fused.i2.fused:                     ; preds = %for_end_i3, %parallel_closure_entry
  ret i32 0

for_end_i3:                                       ; preds = %for_body_i3.us.preheader, %if_end.15
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %indvar.next = add nuw i32 %indvar, 1
  %exitcond.not = icmp eq i32 %indvar.next, %13
  br i1 %exitcond.not, label %for_end_i0.i1.fused.i2.fused, label %for_begin_i3.preheader, !prof !59

if_end.15:                                        ; preds = %for_begin_i3.preheader
  %21 = mul nuw nsw i32 %cse_var_2, 56
  %22 = add nsw i32 %21, -60
  %23 = ashr i32 %14, 4
  %24 = mul nsw i32 %23, 784
  %25 = add i32 %22, %24
  %26 = shl nsw i32 %14, 6
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, ptr %data_pad, i64 %27
  store <4 x i8> zeroinitializer, ptr %28, align 4, !tbaa !7911
  %29 = add i32 %25, 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, ptr %p0, i64 %30
  %32 = load <4 x i8>, ptr %31, align 4, !tbaa !7913
  %33 = or i64 %27, 4
  %34 = getelementptr inbounds i8, ptr %data_pad, i64 %33
  store <4 x i8> %32, ptr %34, align 4, !tbaa !7911
  %35 = add i32 %25, 8
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, ptr %p0, i64 %36
  %38 = load <4 x i8>, ptr %37, align 4, !tbaa !7913
  %39 = or i64 %27, 8
  %40 = getelementptr inbounds i8, ptr %data_pad, i64 %39
  store <4 x i8> %38, ptr %40, align 4, !tbaa !7911
  %41 = add i32 %25, 12
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, ptr %p0, i64 %42
  %44 = load <4 x i8>, ptr %43, align 4, !tbaa !7913
  %45 = or i64 %27, 12
  %46 = getelementptr inbounds i8, ptr %data_pad, i64 %45
  store <4 x i8> %44, ptr %46, align 4, !tbaa !7911
  %47 = add i32 %25, 16
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, ptr %p0, i64 %48
  %50 = load <4 x i8>, ptr %49, align 4, !tbaa !7913
  %51 = or i64 %27, 16
  %52 = getelementptr inbounds i8, ptr %data_pad, i64 %51
  store <4 x i8> %50, ptr %52, align 4, !tbaa !7911
  %53 = add i32 %25, 20
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, ptr %p0, i64 %54
  %56 = load <4 x i8>, ptr %55, align 4, !tbaa !7913
  %57 = or i64 %27, 20
  %58 = getelementptr inbounds i8, ptr %data_pad, i64 %57
  store <4 x i8> %56, ptr %58, align 4, !tbaa !7911
  %59 = add i32 %25, 24
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8, ptr %p0, i64 %60
  %62 = load <4 x i8>, ptr %61, align 4, !tbaa !7913
  %63 = or i64 %27, 24
  %64 = getelementptr inbounds i8, ptr %data_pad, i64 %63
  store <4 x i8> %62, ptr %64, align 4, !tbaa !7911
  %65 = add i32 %25, 28
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, ptr %p0, i64 %66
  %68 = load <4 x i8>, ptr %67, align 4, !tbaa !7913
  %69 = or i64 %27, 28
  %70 = getelementptr inbounds i8, ptr %data_pad, i64 %69
  store <4 x i8> %68, ptr %70, align 4, !tbaa !7911
  %71 = add i32 %25, 32
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, ptr %p0, i64 %72
  %74 = load <4 x i8>, ptr %73, align 4, !tbaa !7913
  %75 = or i64 %27, 32
  %76 = getelementptr inbounds i8, ptr %data_pad, i64 %75
  store <4 x i8> %74, ptr %76, align 4, !tbaa !7911
  %77 = add i32 %25, 36
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8, ptr %p0, i64 %78
  %80 = load <4 x i8>, ptr %79, align 4, !tbaa !7913
  %81 = or i64 %27, 36
  %82 = getelementptr inbounds i8, ptr %data_pad, i64 %81
  store <4 x i8> %80, ptr %82, align 4, !tbaa !7911
  %83 = add i32 %25, 40
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, ptr %p0, i64 %84
  %86 = load <4 x i8>, ptr %85, align 4, !tbaa !7913
  %87 = or i64 %27, 40
  %88 = getelementptr inbounds i8, ptr %data_pad, i64 %87
  store <4 x i8> %86, ptr %88, align 4, !tbaa !7911
  %89 = add i32 %25, 44
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i8, ptr %p0, i64 %90
  %92 = load <4 x i8>, ptr %91, align 4, !tbaa !7913
  %93 = or i64 %27, 44
  %94 = getelementptr inbounds i8, ptr %data_pad, i64 %93
  store <4 x i8> %92, ptr %94, align 4, !tbaa !7911
  %95 = add i32 %25, 48
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, ptr %p0, i64 %96
  %98 = load <4 x i8>, ptr %97, align 4, !tbaa !7913
  %99 = or i64 %27, 48
  %100 = getelementptr inbounds i8, ptr %data_pad, i64 %99
  store <4 x i8> %98, ptr %100, align 4, !tbaa !7911
  %101 = add i32 %25, 52
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i8, ptr %p0, i64 %102
  %104 = load <4 x i8>, ptr %103, align 4, !tbaa !7913
  %105 = or i64 %27, 52
  %106 = getelementptr inbounds i8, ptr %data_pad, i64 %105
  store <4 x i8> %104, ptr %106, align 4, !tbaa !7911
  %107 = add i32 %25, 56
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, ptr %p0, i64 %108
  %110 = load <4 x i8>, ptr %109, align 4, !tbaa !7913
  %111 = or i64 %27, 56
  %112 = getelementptr inbounds i8, ptr %data_pad, i64 %111
  store <4 x i8> %110, ptr %112, align 4, !tbaa !7911
  %113 = or i64 %27, 60
  %114 = getelementptr inbounds i8, ptr %data_pad, i64 %113
  store <4 x i8> zeroinitializer, ptr %114, align 4, !tbaa !7911
  br label %for_end_i3
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1466(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.29, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.29, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 895
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 896)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_body_ax0.ax1.fused.ax2.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_body_ax0.ax1.fused.ax2.fused.lr.ph:           ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.29, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.29, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = load i16, ptr %p3, align 64, !tbaa !7915
  %16 = insertelement <4 x i16> undef, i16 %15, i64 0
  %17 = shufflevector <4 x i16> %16, <4 x i16> undef, <4 x i32> zeroinitializer
  %18 = load i16, ptr %p2, align 64, !tbaa !7927
  %19 = insertelement <4 x i16> undef, i16 %18, i64 0
  %20 = shufflevector <4 x i16> %19, <4 x i16> undef, <4 x i32> zeroinitializer
  %21 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %smin = sext i32 %21 to i64
  %22 = add i32 %9, %21
  %23 = sub i32 %22, %11
  br label %for_body_ax0.ax1.fused.ax2.fused

for_body_ax0.ax1.fused.ax2.fused:                 ; preds = %for_body_ax0.ax1.fused.ax2.fused.lr.ph, %for_begin_ax3.inner.preheader
  %indvars.iv193 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.fused.lr.ph ], [ %indvars.iv.next194, %for_begin_ax3.inner.preheader ]
  %24 = trunc i64 %indvars.iv193 to i32
  %25 = srem i32 %24, 14
  %26 = sdiv i32 %24, 14
  %27 = mul nsw i32 %26, 9216
  %28 = sext i32 %27 to i64
  br label %for_begin_kh.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.inner.preheader, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_end_kh
  %29 = mul nsw i64 %indvars.iv193, 56
  %30 = add <4 x i16> %20, %164
  %31 = ashr <4 x i16> %30, %17
  %32 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %31, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %33 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %32, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %34 = trunc <4 x i16> %33 to <4 x i8>
  %35 = getelementptr inbounds i8, ptr %T_cast, i64 %29
  store <4 x i8> %34, ptr %35, align 4, !tbaa !7939
  %36 = add <4 x i16> %20, %172
  %37 = ashr <4 x i16> %36, %17
  %38 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %37, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %39 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %38, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %40 = trunc <4 x i16> %39 to <4 x i8>
  %41 = or i64 %29, 4
  %42 = getelementptr inbounds i8, ptr %T_cast, i64 %41
  store <4 x i8> %40, ptr %42, align 4, !tbaa !7939
  %43 = add <4 x i16> %20, %180
  %44 = ashr <4 x i16> %43, %17
  %45 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %44, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %46 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %45, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %47 = trunc <4 x i16> %46 to <4 x i8>
  %48 = add nsw i64 %29, 8
  %49 = getelementptr inbounds i8, ptr %T_cast, i64 %48
  store <4 x i8> %47, ptr %49, align 4, !tbaa !7939
  %50 = add <4 x i16> %20, %188
  %51 = ashr <4 x i16> %50, %17
  %52 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %51, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %53 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %52, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %54 = trunc <4 x i16> %53 to <4 x i8>
  %55 = add nsw i64 %29, 12
  %56 = getelementptr inbounds i8, ptr %T_cast, i64 %55
  store <4 x i8> %54, ptr %56, align 4, !tbaa !7939
  %57 = add <4 x i16> %20, %196
  %58 = ashr <4 x i16> %57, %17
  %59 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %58, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %60 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %59, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %61 = trunc <4 x i16> %60 to <4 x i8>
  %62 = add nsw i64 %29, 16
  %63 = getelementptr inbounds i8, ptr %T_cast, i64 %62
  store <4 x i8> %61, ptr %63, align 4, !tbaa !7939
  %64 = add <4 x i16> %20, %204
  %65 = ashr <4 x i16> %64, %17
  %66 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %65, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %67 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %66, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %68 = trunc <4 x i16> %67 to <4 x i8>
  %69 = add nsw i64 %29, 20
  %70 = getelementptr inbounds i8, ptr %T_cast, i64 %69
  store <4 x i8> %68, ptr %70, align 4, !tbaa !7939
  %71 = add <4 x i16> %20, %212
  %72 = ashr <4 x i16> %71, %17
  %73 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %72, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %74 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %73, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %75 = trunc <4 x i16> %74 to <4 x i8>
  %76 = add nsw i64 %29, 24
  %77 = getelementptr inbounds i8, ptr %T_cast, i64 %76
  store <4 x i8> %75, ptr %77, align 4, !tbaa !7939
  %78 = add <4 x i16> %20, %220
  %79 = ashr <4 x i16> %78, %17
  %80 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %79, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %81 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %80, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %82 = trunc <4 x i16> %81 to <4 x i8>
  %83 = add nsw i64 %29, 28
  %84 = getelementptr inbounds i8, ptr %T_cast, i64 %83
  store <4 x i8> %82, ptr %84, align 4, !tbaa !7939
  %85 = add <4 x i16> %20, %228
  %86 = ashr <4 x i16> %85, %17
  %87 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %86, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %88 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %87, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %89 = trunc <4 x i16> %88 to <4 x i8>
  %90 = add nsw i64 %29, 32
  %91 = getelementptr inbounds i8, ptr %T_cast, i64 %90
  store <4 x i8> %89, ptr %91, align 4, !tbaa !7939
  %92 = add <4 x i16> %20, %236
  %93 = ashr <4 x i16> %92, %17
  %94 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %93, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %95 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %94, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %96 = trunc <4 x i16> %95 to <4 x i8>
  %97 = add nsw i64 %29, 36
  %98 = getelementptr inbounds i8, ptr %T_cast, i64 %97
  store <4 x i8> %96, ptr %98, align 4, !tbaa !7939
  %99 = add <4 x i16> %20, %244
  %100 = ashr <4 x i16> %99, %17
  %101 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %100, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %102 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %101, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %103 = trunc <4 x i16> %102 to <4 x i8>
  %104 = add nsw i64 %29, 40
  %105 = getelementptr inbounds i8, ptr %T_cast, i64 %104
  store <4 x i8> %103, ptr %105, align 4, !tbaa !7939
  %106 = add <4 x i16> %20, %252
  %107 = ashr <4 x i16> %106, %17
  %108 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %107, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %109 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %108, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %110 = trunc <4 x i16> %109 to <4 x i8>
  %111 = add nsw i64 %29, 44
  %112 = getelementptr inbounds i8, ptr %T_cast, i64 %111
  store <4 x i8> %110, ptr %112, align 4, !tbaa !7939
  %113 = add <4 x i16> %20, %260
  %114 = ashr <4 x i16> %113, %17
  %115 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %114, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %116 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %115, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %117 = trunc <4 x i16> %116 to <4 x i8>
  %118 = add nsw i64 %29, 48
  %119 = getelementptr inbounds i8, ptr %T_cast, i64 %118
  store <4 x i8> %117, ptr %119, align 4, !tbaa !7939
  %120 = add <4 x i16> %20, %268
  %121 = ashr <4 x i16> %120, %17
  %122 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %121, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %123 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %122, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %124 = trunc <4 x i16> %123 to <4 x i8>
  %125 = add nsw i64 %29, 52
  %126 = getelementptr inbounds i8, ptr %T_cast, i64 %125
  store <4 x i8> %124, ptr %126, align 4, !tbaa !7939
  %indvars.iv.next194 = add nsw i64 %indvars.iv193, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next194 to i32
  %exitcond195.not = icmp eq i32 %23, %lftr.wideiv
  br i1 %exitcond195.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_body_ax0.ax1.fused.ax2.fused, !prof !59

for_begin_kh.preheader:                           ; preds = %for_body_ax0.ax1.fused.ax2.fused, %for_end_kh
  %indvars.iv185 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.fused ], [ %indvars.iv.next186, %for_end_kh ]
  %.lcssa29.lcssa70.lcssa112151 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %164, %for_end_kh ]
  %.lcssa231.lcssa72.lcssa114150 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %172, %for_end_kh ]
  %.lcssa432.lcssa74.lcssa116149 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %180, %for_end_kh ]
  %.lcssa634.lcssa75.lcssa118148 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %188, %for_end_kh ]
  %.lcssa836.lcssa77.lcssa119147 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %196, %for_end_kh ]
  %.lcssa1038.lcssa79.lcssa121146 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %204, %for_end_kh ]
  %.lcssa1240.lcssa81.lcssa123145 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %212, %for_end_kh ]
  %.lcssa1442.lcssa83.lcssa125144 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %220, %for_end_kh ]
  %.lcssa1644.lcssa85.lcssa127143 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %228, %for_end_kh ]
  %.lcssa1846.lcssa87.lcssa129142 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %236, %for_end_kh ]
  %.lcssa2048.lcssa89.lcssa131141 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %244, %for_end_kh ]
  %.lcssa2250.lcssa91.lcssa133140 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %252, %for_end_kh ]
  %.lcssa2452.lcssa93.lcssa135139 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %260, %for_end_kh ]
  %.lcssa2654.lcssa95.lcssa137138 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %268, %for_end_kh ]
  %127 = shl nsw i64 %indvars.iv185, 10
  %128 = mul nuw nsw i64 %indvars.iv185, 144
  %129 = add nsw i64 %128, %28
  br label %for_begin_kw.preheader

for_begin_kw.preheader:                           ; preds = %for_begin_kh.preheader, %for_end_kw
  %indvars.iv179 = phi i64 [ 0, %for_begin_kh.preheader ], [ %indvars.iv.next180, %for_end_kw ]
  %.lcssa29.lcssa70109 = phi <4 x i16> [ %.lcssa29.lcssa70.lcssa112151, %for_begin_kh.preheader ], [ %164, %for_end_kw ]
  %.lcssa231.lcssa72108 = phi <4 x i16> [ %.lcssa231.lcssa72.lcssa114150, %for_begin_kh.preheader ], [ %172, %for_end_kw ]
  %.lcssa432.lcssa74107 = phi <4 x i16> [ %.lcssa432.lcssa74.lcssa116149, %for_begin_kh.preheader ], [ %180, %for_end_kw ]
  %.lcssa634.lcssa75106 = phi <4 x i16> [ %.lcssa634.lcssa75.lcssa118148, %for_begin_kh.preheader ], [ %188, %for_end_kw ]
  %.lcssa836.lcssa77105 = phi <4 x i16> [ %.lcssa836.lcssa77.lcssa119147, %for_begin_kh.preheader ], [ %196, %for_end_kw ]
  %.lcssa1038.lcssa79104 = phi <4 x i16> [ %.lcssa1038.lcssa79.lcssa121146, %for_begin_kh.preheader ], [ %204, %for_end_kw ]
  %.lcssa1240.lcssa81103 = phi <4 x i16> [ %.lcssa1240.lcssa81.lcssa123145, %for_begin_kh.preheader ], [ %212, %for_end_kw ]
  %.lcssa1442.lcssa83102 = phi <4 x i16> [ %.lcssa1442.lcssa83.lcssa125144, %for_begin_kh.preheader ], [ %220, %for_end_kw ]
  %.lcssa1644.lcssa85101 = phi <4 x i16> [ %.lcssa1644.lcssa85.lcssa127143, %for_begin_kh.preheader ], [ %228, %for_end_kw ]
  %.lcssa1846.lcssa87100 = phi <4 x i16> [ %.lcssa1846.lcssa87.lcssa129142, %for_begin_kh.preheader ], [ %236, %for_end_kw ]
  %.lcssa2048.lcssa8999 = phi <4 x i16> [ %.lcssa2048.lcssa89.lcssa131141, %for_begin_kh.preheader ], [ %244, %for_end_kw ]
  %.lcssa2250.lcssa9198 = phi <4 x i16> [ %.lcssa2250.lcssa91.lcssa133140, %for_begin_kh.preheader ], [ %252, %for_end_kw ]
  %.lcssa2452.lcssa9397 = phi <4 x i16> [ %.lcssa2452.lcssa93.lcssa135139, %for_begin_kh.preheader ], [ %260, %for_end_kw ]
  %.lcssa2654.lcssa9596 = phi <4 x i16> [ %.lcssa2654.lcssa95.lcssa137138, %for_begin_kh.preheader ], [ %268, %for_end_kw ]
  %indvars183 = trunc i64 %indvars.iv179 to i32
  %reass.add = add nsw i32 %25, %indvars183
  %reass.mul = shl i32 %reass.add, 6
  %130 = sext i32 %reass.mul to i64
  %131 = add nsw i64 %127, %130
  %132 = mul nuw nsw i64 %indvars.iv179, 48
  %133 = add nsw i64 %129, %132
  br label %for_begin_ic.inner.preheader

for_end_kh:                                       ; preds = %for_end_kw
  %indvars.iv.next186 = add nuw nsw i64 %indvars.iv185, 1
  %exitcond188.not = icmp eq i64 %indvars.iv.next186, 64
  br i1 %exitcond188.not, label %for_begin_ax3.inner.preheader, label %for_begin_kh.preheader, !prof !59

for_begin_ic.inner.preheader:                     ; preds = %for_begin_kw.preheader, %for_end_ic.inner
  %indvars.iv175 = phi i64 [ 0, %for_begin_kw.preheader ], [ %indvars.iv.next176, %for_end_ic.inner ]
  %.lcssa2968 = phi <4 x i16> [ %.lcssa29.lcssa70109, %for_begin_kw.preheader ], [ %164, %for_end_ic.inner ]
  %.lcssa23167 = phi <4 x i16> [ %.lcssa231.lcssa72108, %for_begin_kw.preheader ], [ %172, %for_end_ic.inner ]
  %.lcssa43266 = phi <4 x i16> [ %.lcssa432.lcssa74107, %for_begin_kw.preheader ], [ %180, %for_end_ic.inner ]
  %.lcssa63465 = phi <4 x i16> [ %.lcssa634.lcssa75106, %for_begin_kw.preheader ], [ %188, %for_end_ic.inner ]
  %.lcssa83664 = phi <4 x i16> [ %.lcssa836.lcssa77105, %for_begin_kw.preheader ], [ %196, %for_end_ic.inner ]
  %.lcssa103863 = phi <4 x i16> [ %.lcssa1038.lcssa79104, %for_begin_kw.preheader ], [ %204, %for_end_ic.inner ]
  %.lcssa124062 = phi <4 x i16> [ %.lcssa1240.lcssa81103, %for_begin_kw.preheader ], [ %212, %for_end_ic.inner ]
  %.lcssa144261 = phi <4 x i16> [ %.lcssa1442.lcssa83102, %for_begin_kw.preheader ], [ %220, %for_end_ic.inner ]
  %.lcssa164460 = phi <4 x i16> [ %.lcssa1644.lcssa85101, %for_begin_kw.preheader ], [ %228, %for_end_ic.inner ]
  %.lcssa184659 = phi <4 x i16> [ %.lcssa1846.lcssa87100, %for_begin_kw.preheader ], [ %236, %for_end_ic.inner ]
  %.lcssa204858 = phi <4 x i16> [ %.lcssa2048.lcssa8999, %for_begin_kw.preheader ], [ %244, %for_end_ic.inner ]
  %.lcssa225057 = phi <4 x i16> [ %.lcssa2250.lcssa9198, %for_begin_kw.preheader ], [ %252, %for_end_ic.inner ]
  %.lcssa245256 = phi <4 x i16> [ %.lcssa2452.lcssa9397, %for_begin_kw.preheader ], [ %260, %for_end_ic.inner ]
  %.lcssa265455 = phi <4 x i16> [ %.lcssa2654.lcssa9596, %for_begin_kw.preheader ], [ %268, %for_end_ic.inner ]
  %134 = shl nsw i64 %indvars.iv175, 2
  %135 = add nsw i64 %131, %134
  %136 = shl nsw i64 %indvars.iv175, 4
  %137 = add nsw i64 %133, %136
  br label %for_body_ic.inner

for_end_kw:                                       ; preds = %for_end_ic.inner
  %indvars.iv.next180 = add nuw nsw i64 %indvars.iv179, 1
  %exitcond184.not = icmp eq i64 %indvars.iv.next180, 3
  br i1 %exitcond184.not, label %for_end_kh, label %for_begin_kw.preheader, !prof !59

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %138 = phi <4 x i16> [ %.lcssa2968, %for_begin_ic.inner.preheader ], [ %164, %for_body_ic.inner ]
  %139 = phi <4 x i16> [ %.lcssa23167, %for_begin_ic.inner.preheader ], [ %172, %for_body_ic.inner ]
  %140 = phi <4 x i16> [ %.lcssa43266, %for_begin_ic.inner.preheader ], [ %180, %for_body_ic.inner ]
  %141 = phi <4 x i16> [ %.lcssa63465, %for_begin_ic.inner.preheader ], [ %188, %for_body_ic.inner ]
  %142 = phi <4 x i16> [ %.lcssa83664, %for_begin_ic.inner.preheader ], [ %196, %for_body_ic.inner ]
  %143 = phi <4 x i16> [ %.lcssa103863, %for_begin_ic.inner.preheader ], [ %204, %for_body_ic.inner ]
  %144 = phi <4 x i16> [ %.lcssa124062, %for_begin_ic.inner.preheader ], [ %212, %for_body_ic.inner ]
  %145 = phi <4 x i16> [ %.lcssa144261, %for_begin_ic.inner.preheader ], [ %220, %for_body_ic.inner ]
  %146 = phi <4 x i16> [ %.lcssa164460, %for_begin_ic.inner.preheader ], [ %228, %for_body_ic.inner ]
  %147 = phi <4 x i16> [ %.lcssa184659, %for_begin_ic.inner.preheader ], [ %236, %for_body_ic.inner ]
  %148 = phi <4 x i16> [ %.lcssa204858, %for_begin_ic.inner.preheader ], [ %244, %for_body_ic.inner ]
  %149 = phi <4 x i16> [ %.lcssa225057, %for_begin_ic.inner.preheader ], [ %252, %for_body_ic.inner ]
  %150 = phi <4 x i16> [ %.lcssa245256, %for_begin_ic.inner.preheader ], [ %260, %for_body_ic.inner ]
  %151 = phi <4 x i16> [ %.lcssa265455, %for_begin_ic.inner.preheader ], [ %268, %for_body_ic.inner ]
  %152 = add nsw i64 %135, %indvars.iv
  %153 = shl nuw nsw i64 %indvars.iv, 2
  %154 = add nsw i64 %137, %153
  %155 = getelementptr inbounds i8, ptr %p1, i64 %154
  %156 = load <4 x i8>, ptr %155, align 4, !tbaa !7941
  %157 = sext <4 x i8> %156 to <4 x i16>
  %158 = getelementptr inbounds i8, ptr %data_pad, i64 %152
  %159 = load i8, ptr %158, align 1, !tbaa !7911
  %160 = insertelement <4 x i8> undef, i8 %159, i64 0
  %161 = shufflevector <4 x i8> %160, <4 x i8> undef, <4 x i32> zeroinitializer
  %162 = sext <4 x i8> %161 to <4 x i16>
  %163 = mul nsw <4 x i16> %162, %157
  %164 = add <4 x i16> %163, %138
  %165 = add nsw i64 %152, 4
  %166 = getelementptr inbounds i8, ptr %data_pad, i64 %165
  %167 = load i8, ptr %166, align 1, !tbaa !7911
  %168 = insertelement <4 x i8> undef, i8 %167, i64 0
  %169 = shufflevector <4 x i8> %168, <4 x i8> undef, <4 x i32> zeroinitializer
  %170 = sext <4 x i8> %169 to <4 x i16>
  %171 = mul nsw <4 x i16> %170, %157
  %172 = add <4 x i16> %171, %139
  %173 = add nsw i64 %152, 8
  %174 = getelementptr inbounds i8, ptr %data_pad, i64 %173
  %175 = load i8, ptr %174, align 1, !tbaa !7911
  %176 = insertelement <4 x i8> undef, i8 %175, i64 0
  %177 = shufflevector <4 x i8> %176, <4 x i8> undef, <4 x i32> zeroinitializer
  %178 = sext <4 x i8> %177 to <4 x i16>
  %179 = mul nsw <4 x i16> %178, %157
  %180 = add <4 x i16> %179, %140
  %181 = add nsw i64 %152, 12
  %182 = getelementptr inbounds i8, ptr %data_pad, i64 %181
  %183 = load i8, ptr %182, align 1, !tbaa !7911
  %184 = insertelement <4 x i8> undef, i8 %183, i64 0
  %185 = shufflevector <4 x i8> %184, <4 x i8> undef, <4 x i32> zeroinitializer
  %186 = sext <4 x i8> %185 to <4 x i16>
  %187 = mul nsw <4 x i16> %186, %157
  %188 = add <4 x i16> %187, %141
  %189 = add nsw i64 %152, 16
  %190 = getelementptr inbounds i8, ptr %data_pad, i64 %189
  %191 = load i8, ptr %190, align 1, !tbaa !7911
  %192 = insertelement <4 x i8> undef, i8 %191, i64 0
  %193 = shufflevector <4 x i8> %192, <4 x i8> undef, <4 x i32> zeroinitializer
  %194 = sext <4 x i8> %193 to <4 x i16>
  %195 = mul nsw <4 x i16> %194, %157
  %196 = add <4 x i16> %195, %142
  %197 = add nsw i64 %152, 20
  %198 = getelementptr inbounds i8, ptr %data_pad, i64 %197
  %199 = load i8, ptr %198, align 1, !tbaa !7911
  %200 = insertelement <4 x i8> undef, i8 %199, i64 0
  %201 = shufflevector <4 x i8> %200, <4 x i8> undef, <4 x i32> zeroinitializer
  %202 = sext <4 x i8> %201 to <4 x i16>
  %203 = mul nsw <4 x i16> %202, %157
  %204 = add <4 x i16> %203, %143
  %205 = add nsw i64 %152, 24
  %206 = getelementptr inbounds i8, ptr %data_pad, i64 %205
  %207 = load i8, ptr %206, align 1, !tbaa !7911
  %208 = insertelement <4 x i8> undef, i8 %207, i64 0
  %209 = shufflevector <4 x i8> %208, <4 x i8> undef, <4 x i32> zeroinitializer
  %210 = sext <4 x i8> %209 to <4 x i16>
  %211 = mul nsw <4 x i16> %210, %157
  %212 = add <4 x i16> %211, %144
  %213 = add nsw i64 %152, 28
  %214 = getelementptr inbounds i8, ptr %data_pad, i64 %213
  %215 = load i8, ptr %214, align 1, !tbaa !7911
  %216 = insertelement <4 x i8> undef, i8 %215, i64 0
  %217 = shufflevector <4 x i8> %216, <4 x i8> undef, <4 x i32> zeroinitializer
  %218 = sext <4 x i8> %217 to <4 x i16>
  %219 = mul nsw <4 x i16> %218, %157
  %220 = add <4 x i16> %219, %145
  %221 = add nsw i64 %152, 32
  %222 = getelementptr inbounds i8, ptr %data_pad, i64 %221
  %223 = load i8, ptr %222, align 1, !tbaa !7911
  %224 = insertelement <4 x i8> undef, i8 %223, i64 0
  %225 = shufflevector <4 x i8> %224, <4 x i8> undef, <4 x i32> zeroinitializer
  %226 = sext <4 x i8> %225 to <4 x i16>
  %227 = mul nsw <4 x i16> %226, %157
  %228 = add <4 x i16> %227, %146
  %229 = add nsw i64 %152, 36
  %230 = getelementptr inbounds i8, ptr %data_pad, i64 %229
  %231 = load i8, ptr %230, align 1, !tbaa !7911
  %232 = insertelement <4 x i8> undef, i8 %231, i64 0
  %233 = shufflevector <4 x i8> %232, <4 x i8> undef, <4 x i32> zeroinitializer
  %234 = sext <4 x i8> %233 to <4 x i16>
  %235 = mul nsw <4 x i16> %234, %157
  %236 = add <4 x i16> %235, %147
  %237 = add nsw i64 %152, 40
  %238 = getelementptr inbounds i8, ptr %data_pad, i64 %237
  %239 = load i8, ptr %238, align 1, !tbaa !7911
  %240 = insertelement <4 x i8> undef, i8 %239, i64 0
  %241 = shufflevector <4 x i8> %240, <4 x i8> undef, <4 x i32> zeroinitializer
  %242 = sext <4 x i8> %241 to <4 x i16>
  %243 = mul nsw <4 x i16> %242, %157
  %244 = add <4 x i16> %243, %148
  %245 = add nsw i64 %152, 44
  %246 = getelementptr inbounds i8, ptr %data_pad, i64 %245
  %247 = load i8, ptr %246, align 1, !tbaa !7911
  %248 = insertelement <4 x i8> undef, i8 %247, i64 0
  %249 = shufflevector <4 x i8> %248, <4 x i8> undef, <4 x i32> zeroinitializer
  %250 = sext <4 x i8> %249 to <4 x i16>
  %251 = mul nsw <4 x i16> %250, %157
  %252 = add <4 x i16> %251, %149
  %253 = add nsw i64 %152, 48
  %254 = getelementptr inbounds i8, ptr %data_pad, i64 %253
  %255 = load i8, ptr %254, align 1, !tbaa !7911
  %256 = insertelement <4 x i8> undef, i8 %255, i64 0
  %257 = shufflevector <4 x i8> %256, <4 x i8> undef, <4 x i32> zeroinitializer
  %258 = sext <4 x i8> %257 to <4 x i16>
  %259 = mul nsw <4 x i16> %258, %157
  %260 = add <4 x i16> %259, %150
  %261 = add nsw i64 %152, 52
  %262 = getelementptr inbounds i8, ptr %data_pad, i64 %261
  %263 = load i8, ptr %262, align 1, !tbaa !7911
  %264 = insertelement <4 x i8> undef, i8 %263, i64 0
  %265 = shufflevector <4 x i8> %264, <4 x i8> undef, <4 x i32> zeroinitializer
  %266 = sext <4 x i8> %265 to <4 x i16>
  %267 = mul nsw <4 x i16> %266, %157
  %268 = add <4 x i16> %267, %151
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !59

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next176 = add nuw nsw i64 %indvars.iv175, 1
  %exitcond178.not = icmp eq i64 %indvars.iv.next176, 3
  br i1 %exitcond178.not, label %for_end_kw, label %for_begin_ic.inner.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_16_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1516, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1516(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 895
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 896)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph:     ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = load i16, ptr %p3, align 64, !tbaa !7943
  %16 = insertelement <4 x i16> undef, i16 %15, i64 0
  %17 = shufflevector <4 x i16> %16, <4 x i16> undef, <4 x i32> zeroinitializer
  %18 = load i16, ptr %p2, align 64, !tbaa !7955
  %19 = insertelement <4 x i16> undef, i16 %18, i64 0
  %20 = shufflevector <4 x i16> %19, <4 x i16> undef, <4 x i32> zeroinitializer
  %21 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %smin = sext i32 %21 to i64
  %22 = add i32 %9, %21
  %23 = sub i32 %22, %11
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, %for_begin_ax2.inner.preheader
  %indvars.iv186 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph ], [ %indvars.iv.next187, %for_begin_ax2.inner.preheader ]
  %24 = trunc i64 %indvars.iv186 to i32
  %25 = srem i32 %24, 7
  %26 = mul nsw i32 %25, 112
  %27 = sdiv i32 %24, 7
  %28 = shl nsw i32 %27, 12
  %29 = sext i32 %26 to i64
  %30 = sext i32 %28 to i64
  br label %for_begin_ic.inner.preheader

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_begin_ax2.inner.preheader, %parallel_closure_entry
  ret i32 0

for_begin_ax2.inner.preheader:                    ; preds = %for_end_ic.inner
  %31 = mul nsw i64 %indvars.iv186, 112
  %32 = add <4 x i16> %20, %271
  %33 = ashr <4 x i16> %32, %17
  %34 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %33, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %35 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %34, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %36 = trunc <4 x i16> %35 to <4 x i8>
  %37 = getelementptr inbounds i8, ptr %T_cast, i64 %31
  store <4 x i8> %36, ptr %37, align 4, !tbaa !7967
  %38 = add <4 x i16> %20, %279
  %39 = ashr <4 x i16> %38, %17
  %40 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %39, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %41 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %40, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %42 = trunc <4 x i16> %41 to <4 x i8>
  %43 = or i64 %31, 4
  %44 = getelementptr inbounds i8, ptr %T_cast, i64 %43
  store <4 x i8> %42, ptr %44, align 4, !tbaa !7967
  %45 = add <4 x i16> %20, %287
  %46 = ashr <4 x i16> %45, %17
  %47 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %46, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %48 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %47, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %49 = trunc <4 x i16> %48 to <4 x i8>
  %50 = or i64 %31, 8
  %51 = getelementptr inbounds i8, ptr %T_cast, i64 %50
  store <4 x i8> %49, ptr %51, align 4, !tbaa !7967
  %52 = add <4 x i16> %20, %295
  %53 = ashr <4 x i16> %52, %17
  %54 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %53, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %55 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %54, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %56 = trunc <4 x i16> %55 to <4 x i8>
  %57 = or i64 %31, 12
  %58 = getelementptr inbounds i8, ptr %T_cast, i64 %57
  store <4 x i8> %56, ptr %58, align 4, !tbaa !7967
  %59 = add <4 x i16> %20, %303
  %60 = ashr <4 x i16> %59, %17
  %61 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %60, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %62 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %61, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %63 = trunc <4 x i16> %62 to <4 x i8>
  %64 = add nsw i64 %31, 16
  %65 = getelementptr inbounds i8, ptr %T_cast, i64 %64
  store <4 x i8> %63, ptr %65, align 4, !tbaa !7967
  %66 = add <4 x i16> %20, %311
  %67 = ashr <4 x i16> %66, %17
  %68 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %67, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %69 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %68, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %70 = trunc <4 x i16> %69 to <4 x i8>
  %71 = add nsw i64 %31, 20
  %72 = getelementptr inbounds i8, ptr %T_cast, i64 %71
  store <4 x i8> %70, ptr %72, align 4, !tbaa !7967
  %73 = add <4 x i16> %20, %319
  %74 = ashr <4 x i16> %73, %17
  %75 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %74, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %76 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %75, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %77 = trunc <4 x i16> %76 to <4 x i8>
  %78 = add nsw i64 %31, 24
  %79 = getelementptr inbounds i8, ptr %T_cast, i64 %78
  store <4 x i8> %77, ptr %79, align 4, !tbaa !7967
  %80 = add <4 x i16> %20, %327
  %81 = ashr <4 x i16> %80, %17
  %82 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %81, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %83 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %82, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %84 = trunc <4 x i16> %83 to <4 x i8>
  %85 = add nsw i64 %31, 28
  %86 = getelementptr inbounds i8, ptr %T_cast, i64 %85
  store <4 x i8> %84, ptr %86, align 4, !tbaa !7967
  %87 = add <4 x i16> %20, %335
  %88 = ashr <4 x i16> %87, %17
  %89 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %88, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %90 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %89, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %91 = trunc <4 x i16> %90 to <4 x i8>
  %92 = add nsw i64 %31, 32
  %93 = getelementptr inbounds i8, ptr %T_cast, i64 %92
  store <4 x i8> %91, ptr %93, align 4, !tbaa !7967
  %94 = add <4 x i16> %20, %343
  %95 = ashr <4 x i16> %94, %17
  %96 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %95, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %97 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %96, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %98 = trunc <4 x i16> %97 to <4 x i8>
  %99 = add nsw i64 %31, 36
  %100 = getelementptr inbounds i8, ptr %T_cast, i64 %99
  store <4 x i8> %98, ptr %100, align 4, !tbaa !7967
  %101 = add <4 x i16> %20, %351
  %102 = ashr <4 x i16> %101, %17
  %103 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %102, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %104 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %103, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %105 = trunc <4 x i16> %104 to <4 x i8>
  %106 = add nsw i64 %31, 40
  %107 = getelementptr inbounds i8, ptr %T_cast, i64 %106
  store <4 x i8> %105, ptr %107, align 4, !tbaa !7967
  %108 = add <4 x i16> %20, %359
  %109 = ashr <4 x i16> %108, %17
  %110 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %109, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %111 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %110, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %112 = trunc <4 x i16> %111 to <4 x i8>
  %113 = add nsw i64 %31, 44
  %114 = getelementptr inbounds i8, ptr %T_cast, i64 %113
  store <4 x i8> %112, ptr %114, align 4, !tbaa !7967
  %115 = add <4 x i16> %20, %367
  %116 = ashr <4 x i16> %115, %17
  %117 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %116, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %118 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %117, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %119 = trunc <4 x i16> %118 to <4 x i8>
  %120 = add nsw i64 %31, 48
  %121 = getelementptr inbounds i8, ptr %T_cast, i64 %120
  store <4 x i8> %119, ptr %121, align 4, !tbaa !7967
  %122 = add <4 x i16> %20, %375
  %123 = ashr <4 x i16> %122, %17
  %124 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %123, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %125 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %124, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %126 = trunc <4 x i16> %125 to <4 x i8>
  %127 = add nsw i64 %31, 52
  %128 = getelementptr inbounds i8, ptr %T_cast, i64 %127
  store <4 x i8> %126, ptr %128, align 4, !tbaa !7967
  %129 = add nsw i64 %31, 56
  %130 = add <4 x i16> %20, %383
  %131 = ashr <4 x i16> %130, %17
  %132 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %131, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %133 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %132, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %134 = trunc <4 x i16> %133 to <4 x i8>
  %135 = getelementptr inbounds i8, ptr %T_cast, i64 %129
  store <4 x i8> %134, ptr %135, align 4, !tbaa !7967
  %136 = add <4 x i16> %20, %391
  %137 = ashr <4 x i16> %136, %17
  %138 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %137, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %139 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %138, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %140 = trunc <4 x i16> %139 to <4 x i8>
  %141 = add nsw i64 %31, 60
  %142 = getelementptr inbounds i8, ptr %T_cast, i64 %141
  store <4 x i8> %140, ptr %142, align 4, !tbaa !7967
  %143 = add <4 x i16> %20, %399
  %144 = ashr <4 x i16> %143, %17
  %145 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %144, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %146 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %145, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %147 = trunc <4 x i16> %146 to <4 x i8>
  %148 = add nsw i64 %31, 64
  %149 = getelementptr inbounds i8, ptr %T_cast, i64 %148
  store <4 x i8> %147, ptr %149, align 4, !tbaa !7967
  %150 = add <4 x i16> %20, %407
  %151 = ashr <4 x i16> %150, %17
  %152 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %151, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %153 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %152, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %154 = trunc <4 x i16> %153 to <4 x i8>
  %155 = add nsw i64 %31, 68
  %156 = getelementptr inbounds i8, ptr %T_cast, i64 %155
  store <4 x i8> %154, ptr %156, align 4, !tbaa !7967
  %157 = add <4 x i16> %20, %415
  %158 = ashr <4 x i16> %157, %17
  %159 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %158, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %160 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %159, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %161 = trunc <4 x i16> %160 to <4 x i8>
  %162 = add nsw i64 %31, 72
  %163 = getelementptr inbounds i8, ptr %T_cast, i64 %162
  store <4 x i8> %161, ptr %163, align 4, !tbaa !7967
  %164 = add <4 x i16> %20, %423
  %165 = ashr <4 x i16> %164, %17
  %166 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %165, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %167 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %166, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %168 = trunc <4 x i16> %167 to <4 x i8>
  %169 = add nsw i64 %31, 76
  %170 = getelementptr inbounds i8, ptr %T_cast, i64 %169
  store <4 x i8> %168, ptr %170, align 4, !tbaa !7967
  %171 = add <4 x i16> %20, %431
  %172 = ashr <4 x i16> %171, %17
  %173 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %172, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %174 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %173, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %175 = trunc <4 x i16> %174 to <4 x i8>
  %176 = add nsw i64 %31, 80
  %177 = getelementptr inbounds i8, ptr %T_cast, i64 %176
  store <4 x i8> %175, ptr %177, align 4, !tbaa !7967
  %178 = add <4 x i16> %20, %439
  %179 = ashr <4 x i16> %178, %17
  %180 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %179, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %181 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %180, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %182 = trunc <4 x i16> %181 to <4 x i8>
  %183 = add nsw i64 %31, 84
  %184 = getelementptr inbounds i8, ptr %T_cast, i64 %183
  store <4 x i8> %182, ptr %184, align 4, !tbaa !7967
  %185 = add <4 x i16> %20, %447
  %186 = ashr <4 x i16> %185, %17
  %187 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %186, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %188 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %187, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %189 = trunc <4 x i16> %188 to <4 x i8>
  %190 = add nsw i64 %31, 88
  %191 = getelementptr inbounds i8, ptr %T_cast, i64 %190
  store <4 x i8> %189, ptr %191, align 4, !tbaa !7967
  %192 = add <4 x i16> %20, %455
  %193 = ashr <4 x i16> %192, %17
  %194 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %193, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %195 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %194, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %196 = trunc <4 x i16> %195 to <4 x i8>
  %197 = add nsw i64 %31, 92
  %198 = getelementptr inbounds i8, ptr %T_cast, i64 %197
  store <4 x i8> %196, ptr %198, align 4, !tbaa !7967
  %199 = add <4 x i16> %20, %463
  %200 = ashr <4 x i16> %199, %17
  %201 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %200, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %202 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %201, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %203 = trunc <4 x i16> %202 to <4 x i8>
  %204 = add nsw i64 %31, 96
  %205 = getelementptr inbounds i8, ptr %T_cast, i64 %204
  store <4 x i8> %203, ptr %205, align 4, !tbaa !7967
  %206 = add <4 x i16> %20, %471
  %207 = ashr <4 x i16> %206, %17
  %208 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %207, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %209 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %208, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %210 = trunc <4 x i16> %209 to <4 x i8>
  %211 = add nsw i64 %31, 100
  %212 = getelementptr inbounds i8, ptr %T_cast, i64 %211
  store <4 x i8> %210, ptr %212, align 4, !tbaa !7967
  %213 = add <4 x i16> %20, %479
  %214 = ashr <4 x i16> %213, %17
  %215 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %214, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %216 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %215, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %217 = trunc <4 x i16> %216 to <4 x i8>
  %218 = add nsw i64 %31, 104
  %219 = getelementptr inbounds i8, ptr %T_cast, i64 %218
  store <4 x i8> %217, ptr %219, align 4, !tbaa !7967
  %220 = add <4 x i16> %20, %487
  %221 = ashr <4 x i16> %220, %17
  %222 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %221, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %223 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %222, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %224 = trunc <4 x i16> %223 to <4 x i8>
  %225 = add nsw i64 %31, 108
  %226 = getelementptr inbounds i8, ptr %T_cast, i64 %225
  store <4 x i8> %224, ptr %226, align 4, !tbaa !7967
  %indvars.iv.next187 = add nsw i64 %indvars.iv186, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next187 to i32
  %exitcond188.not = icmp eq i32 %23, %lftr.wideiv
  br i1 %exitcond188.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !59

for_begin_ic.inner.preheader:                     ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ic.inner
  %indvars.iv175 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %indvars.iv.next176, %for_end_ic.inner ]
  %.lcssa57138 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %271, %for_end_ic.inner ]
  %.lcssa259137 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %279, %for_end_ic.inner ]
  %.lcssa460136 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %287, %for_end_ic.inner ]
  %.lcssa662135 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %295, %for_end_ic.inner ]
  %.lcssa864134 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %303, %for_end_ic.inner ]
  %.lcssa1066133 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %311, %for_end_ic.inner ]
  %.lcssa1268132 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %319, %for_end_ic.inner ]
  %.lcssa1470131 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %327, %for_end_ic.inner ]
  %.lcssa1672130 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %335, %for_end_ic.inner ]
  %.lcssa1874129 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %343, %for_end_ic.inner ]
  %.lcssa2076128 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %351, %for_end_ic.inner ]
  %.lcssa2278127 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %359, %for_end_ic.inner ]
  %.lcssa2480126 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %367, %for_end_ic.inner ]
  %.lcssa2682125 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %375, %for_end_ic.inner ]
  %.lcssa2884124 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %383, %for_end_ic.inner ]
  %.lcssa3086123 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %391, %for_end_ic.inner ]
  %.lcssa3288122 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %399, %for_end_ic.inner ]
  %.lcssa3490121 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %407, %for_end_ic.inner ]
  %.lcssa3692120 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %415, %for_end_ic.inner ]
  %.lcssa3894119 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %423, %for_end_ic.inner ]
  %.lcssa4096118 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %431, %for_end_ic.inner ]
  %.lcssa4298117 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %439, %for_end_ic.inner ]
  %.lcssa44100116 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %447, %for_end_ic.inner ]
  %.lcssa46102115 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %455, %for_end_ic.inner ]
  %.lcssa48104114 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %463, %for_end_ic.inner ]
  %.lcssa50106113 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %471, %for_end_ic.inner ]
  %.lcssa52108112 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %479, %for_end_ic.inner ]
  %.lcssa54110111 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %487, %for_end_ic.inner ]
  %227 = mul nuw nsw i64 %indvars.iv175, 784
  %228 = add nsw i64 %227, %29
  %229 = shl nsw i64 %indvars.iv175, 4
  %230 = add nuw nsw i64 %229, %30
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %231 = phi <4 x i16> [ %.lcssa57138, %for_begin_ic.inner.preheader ], [ %271, %for_body_ic.inner ]
  %232 = phi <4 x i16> [ %.lcssa259137, %for_begin_ic.inner.preheader ], [ %279, %for_body_ic.inner ]
  %233 = phi <4 x i16> [ %.lcssa460136, %for_begin_ic.inner.preheader ], [ %287, %for_body_ic.inner ]
  %234 = phi <4 x i16> [ %.lcssa662135, %for_begin_ic.inner.preheader ], [ %295, %for_body_ic.inner ]
  %235 = phi <4 x i16> [ %.lcssa864134, %for_begin_ic.inner.preheader ], [ %303, %for_body_ic.inner ]
  %236 = phi <4 x i16> [ %.lcssa1066133, %for_begin_ic.inner.preheader ], [ %311, %for_body_ic.inner ]
  %237 = phi <4 x i16> [ %.lcssa1268132, %for_begin_ic.inner.preheader ], [ %319, %for_body_ic.inner ]
  %238 = phi <4 x i16> [ %.lcssa1470131, %for_begin_ic.inner.preheader ], [ %327, %for_body_ic.inner ]
  %239 = phi <4 x i16> [ %.lcssa1672130, %for_begin_ic.inner.preheader ], [ %335, %for_body_ic.inner ]
  %240 = phi <4 x i16> [ %.lcssa1874129, %for_begin_ic.inner.preheader ], [ %343, %for_body_ic.inner ]
  %241 = phi <4 x i16> [ %.lcssa2076128, %for_begin_ic.inner.preheader ], [ %351, %for_body_ic.inner ]
  %242 = phi <4 x i16> [ %.lcssa2278127, %for_begin_ic.inner.preheader ], [ %359, %for_body_ic.inner ]
  %243 = phi <4 x i16> [ %.lcssa2480126, %for_begin_ic.inner.preheader ], [ %367, %for_body_ic.inner ]
  %244 = phi <4 x i16> [ %.lcssa2682125, %for_begin_ic.inner.preheader ], [ %375, %for_body_ic.inner ]
  %245 = phi <4 x i16> [ %.lcssa2884124, %for_begin_ic.inner.preheader ], [ %383, %for_body_ic.inner ]
  %246 = phi <4 x i16> [ %.lcssa3086123, %for_begin_ic.inner.preheader ], [ %391, %for_body_ic.inner ]
  %247 = phi <4 x i16> [ %.lcssa3288122, %for_begin_ic.inner.preheader ], [ %399, %for_body_ic.inner ]
  %248 = phi <4 x i16> [ %.lcssa3490121, %for_begin_ic.inner.preheader ], [ %407, %for_body_ic.inner ]
  %249 = phi <4 x i16> [ %.lcssa3692120, %for_begin_ic.inner.preheader ], [ %415, %for_body_ic.inner ]
  %250 = phi <4 x i16> [ %.lcssa3894119, %for_begin_ic.inner.preheader ], [ %423, %for_body_ic.inner ]
  %251 = phi <4 x i16> [ %.lcssa4096118, %for_begin_ic.inner.preheader ], [ %431, %for_body_ic.inner ]
  %252 = phi <4 x i16> [ %.lcssa4298117, %for_begin_ic.inner.preheader ], [ %439, %for_body_ic.inner ]
  %253 = phi <4 x i16> [ %.lcssa44100116, %for_begin_ic.inner.preheader ], [ %447, %for_body_ic.inner ]
  %254 = phi <4 x i16> [ %.lcssa46102115, %for_begin_ic.inner.preheader ], [ %455, %for_body_ic.inner ]
  %255 = phi <4 x i16> [ %.lcssa48104114, %for_begin_ic.inner.preheader ], [ %463, %for_body_ic.inner ]
  %256 = phi <4 x i16> [ %.lcssa50106113, %for_begin_ic.inner.preheader ], [ %471, %for_body_ic.inner ]
  %257 = phi <4 x i16> [ %.lcssa52108112, %for_begin_ic.inner.preheader ], [ %479, %for_body_ic.inner ]
  %258 = phi <4 x i16> [ %.lcssa54110111, %for_begin_ic.inner.preheader ], [ %487, %for_body_ic.inner ]
  %259 = add nsw i64 %228, %indvars.iv
  %260 = shl nuw nsw i64 %indvars.iv, 2
  %261 = add nuw nsw i64 %230, %260
  %262 = getelementptr inbounds i8, ptr %p1, i64 %261
  %263 = load <4 x i8>, ptr %262, align 4, !tbaa !7969
  %264 = sext <4 x i8> %263 to <4 x i16>
  %265 = getelementptr inbounds i8, ptr %p0, i64 %259
  %266 = load i8, ptr %265, align 1, !tbaa !7971
  %267 = insertelement <4 x i8> undef, i8 %266, i64 0
  %268 = shufflevector <4 x i8> %267, <4 x i8> undef, <4 x i32> zeroinitializer
  %269 = sext <4 x i8> %268 to <4 x i16>
  %270 = mul nsw <4 x i16> %269, %264
  %271 = add <4 x i16> %270, %231
  %272 = add nsw i64 %259, 4
  %273 = getelementptr inbounds i8, ptr %p0, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !7971
  %275 = insertelement <4 x i8> undef, i8 %274, i64 0
  %276 = shufflevector <4 x i8> %275, <4 x i8> undef, <4 x i32> zeroinitializer
  %277 = sext <4 x i8> %276 to <4 x i16>
  %278 = mul nsw <4 x i16> %277, %264
  %279 = add <4 x i16> %278, %232
  %280 = add nsw i64 %259, 8
  %281 = getelementptr inbounds i8, ptr %p0, i64 %280
  %282 = load i8, ptr %281, align 1, !tbaa !7971
  %283 = insertelement <4 x i8> undef, i8 %282, i64 0
  %284 = shufflevector <4 x i8> %283, <4 x i8> undef, <4 x i32> zeroinitializer
  %285 = sext <4 x i8> %284 to <4 x i16>
  %286 = mul nsw <4 x i16> %285, %264
  %287 = add <4 x i16> %286, %233
  %288 = add nsw i64 %259, 12
  %289 = getelementptr inbounds i8, ptr %p0, i64 %288
  %290 = load i8, ptr %289, align 1, !tbaa !7971
  %291 = insertelement <4 x i8> undef, i8 %290, i64 0
  %292 = shufflevector <4 x i8> %291, <4 x i8> undef, <4 x i32> zeroinitializer
  %293 = sext <4 x i8> %292 to <4 x i16>
  %294 = mul nsw <4 x i16> %293, %264
  %295 = add <4 x i16> %294, %234
  %296 = add nsw i64 %259, 16
  %297 = getelementptr inbounds i8, ptr %p0, i64 %296
  %298 = load i8, ptr %297, align 1, !tbaa !7971
  %299 = insertelement <4 x i8> undef, i8 %298, i64 0
  %300 = shufflevector <4 x i8> %299, <4 x i8> undef, <4 x i32> zeroinitializer
  %301 = sext <4 x i8> %300 to <4 x i16>
  %302 = mul nsw <4 x i16> %301, %264
  %303 = add <4 x i16> %302, %235
  %304 = add nsw i64 %259, 20
  %305 = getelementptr inbounds i8, ptr %p0, i64 %304
  %306 = load i8, ptr %305, align 1, !tbaa !7971
  %307 = insertelement <4 x i8> undef, i8 %306, i64 0
  %308 = shufflevector <4 x i8> %307, <4 x i8> undef, <4 x i32> zeroinitializer
  %309 = sext <4 x i8> %308 to <4 x i16>
  %310 = mul nsw <4 x i16> %309, %264
  %311 = add <4 x i16> %310, %236
  %312 = add nsw i64 %259, 24
  %313 = getelementptr inbounds i8, ptr %p0, i64 %312
  %314 = load i8, ptr %313, align 1, !tbaa !7971
  %315 = insertelement <4 x i8> undef, i8 %314, i64 0
  %316 = shufflevector <4 x i8> %315, <4 x i8> undef, <4 x i32> zeroinitializer
  %317 = sext <4 x i8> %316 to <4 x i16>
  %318 = mul nsw <4 x i16> %317, %264
  %319 = add <4 x i16> %318, %237
  %320 = add nsw i64 %259, 28
  %321 = getelementptr inbounds i8, ptr %p0, i64 %320
  %322 = load i8, ptr %321, align 1, !tbaa !7971
  %323 = insertelement <4 x i8> undef, i8 %322, i64 0
  %324 = shufflevector <4 x i8> %323, <4 x i8> undef, <4 x i32> zeroinitializer
  %325 = sext <4 x i8> %324 to <4 x i16>
  %326 = mul nsw <4 x i16> %325, %264
  %327 = add <4 x i16> %326, %238
  %328 = add nsw i64 %259, 32
  %329 = getelementptr inbounds i8, ptr %p0, i64 %328
  %330 = load i8, ptr %329, align 1, !tbaa !7971
  %331 = insertelement <4 x i8> undef, i8 %330, i64 0
  %332 = shufflevector <4 x i8> %331, <4 x i8> undef, <4 x i32> zeroinitializer
  %333 = sext <4 x i8> %332 to <4 x i16>
  %334 = mul nsw <4 x i16> %333, %264
  %335 = add <4 x i16> %334, %239
  %336 = add nsw i64 %259, 36
  %337 = getelementptr inbounds i8, ptr %p0, i64 %336
  %338 = load i8, ptr %337, align 1, !tbaa !7971
  %339 = insertelement <4 x i8> undef, i8 %338, i64 0
  %340 = shufflevector <4 x i8> %339, <4 x i8> undef, <4 x i32> zeroinitializer
  %341 = sext <4 x i8> %340 to <4 x i16>
  %342 = mul nsw <4 x i16> %341, %264
  %343 = add <4 x i16> %342, %240
  %344 = add nsw i64 %259, 40
  %345 = getelementptr inbounds i8, ptr %p0, i64 %344
  %346 = load i8, ptr %345, align 1, !tbaa !7971
  %347 = insertelement <4 x i8> undef, i8 %346, i64 0
  %348 = shufflevector <4 x i8> %347, <4 x i8> undef, <4 x i32> zeroinitializer
  %349 = sext <4 x i8> %348 to <4 x i16>
  %350 = mul nsw <4 x i16> %349, %264
  %351 = add <4 x i16> %350, %241
  %352 = add nsw i64 %259, 44
  %353 = getelementptr inbounds i8, ptr %p0, i64 %352
  %354 = load i8, ptr %353, align 1, !tbaa !7971
  %355 = insertelement <4 x i8> undef, i8 %354, i64 0
  %356 = shufflevector <4 x i8> %355, <4 x i8> undef, <4 x i32> zeroinitializer
  %357 = sext <4 x i8> %356 to <4 x i16>
  %358 = mul nsw <4 x i16> %357, %264
  %359 = add <4 x i16> %358, %242
  %360 = add nsw i64 %259, 48
  %361 = getelementptr inbounds i8, ptr %p0, i64 %360
  %362 = load i8, ptr %361, align 1, !tbaa !7971
  %363 = insertelement <4 x i8> undef, i8 %362, i64 0
  %364 = shufflevector <4 x i8> %363, <4 x i8> undef, <4 x i32> zeroinitializer
  %365 = sext <4 x i8> %364 to <4 x i16>
  %366 = mul nsw <4 x i16> %365, %264
  %367 = add <4 x i16> %366, %243
  %368 = add nsw i64 %259, 52
  %369 = getelementptr inbounds i8, ptr %p0, i64 %368
  %370 = load i8, ptr %369, align 1, !tbaa !7971
  %371 = insertelement <4 x i8> undef, i8 %370, i64 0
  %372 = shufflevector <4 x i8> %371, <4 x i8> undef, <4 x i32> zeroinitializer
  %373 = sext <4 x i8> %372 to <4 x i16>
  %374 = mul nsw <4 x i16> %373, %264
  %375 = add <4 x i16> %374, %244
  %376 = add nsw i64 %259, 56
  %377 = getelementptr inbounds i8, ptr %p0, i64 %376
  %378 = load i8, ptr %377, align 1, !tbaa !7971
  %379 = insertelement <4 x i8> undef, i8 %378, i64 0
  %380 = shufflevector <4 x i8> %379, <4 x i8> undef, <4 x i32> zeroinitializer
  %381 = sext <4 x i8> %380 to <4 x i16>
  %382 = mul nsw <4 x i16> %381, %264
  %383 = add <4 x i16> %382, %245
  %384 = add nsw i64 %259, 60
  %385 = getelementptr inbounds i8, ptr %p0, i64 %384
  %386 = load i8, ptr %385, align 1, !tbaa !7971
  %387 = insertelement <4 x i8> undef, i8 %386, i64 0
  %388 = shufflevector <4 x i8> %387, <4 x i8> undef, <4 x i32> zeroinitializer
  %389 = sext <4 x i8> %388 to <4 x i16>
  %390 = mul nsw <4 x i16> %389, %264
  %391 = add <4 x i16> %390, %246
  %392 = add nsw i64 %259, 64
  %393 = getelementptr inbounds i8, ptr %p0, i64 %392
  %394 = load i8, ptr %393, align 1, !tbaa !7971
  %395 = insertelement <4 x i8> undef, i8 %394, i64 0
  %396 = shufflevector <4 x i8> %395, <4 x i8> undef, <4 x i32> zeroinitializer
  %397 = sext <4 x i8> %396 to <4 x i16>
  %398 = mul nsw <4 x i16> %397, %264
  %399 = add <4 x i16> %398, %247
  %400 = add nsw i64 %259, 68
  %401 = getelementptr inbounds i8, ptr %p0, i64 %400
  %402 = load i8, ptr %401, align 1, !tbaa !7971
  %403 = insertelement <4 x i8> undef, i8 %402, i64 0
  %404 = shufflevector <4 x i8> %403, <4 x i8> undef, <4 x i32> zeroinitializer
  %405 = sext <4 x i8> %404 to <4 x i16>
  %406 = mul nsw <4 x i16> %405, %264
  %407 = add <4 x i16> %406, %248
  %408 = add nsw i64 %259, 72
  %409 = getelementptr inbounds i8, ptr %p0, i64 %408
  %410 = load i8, ptr %409, align 1, !tbaa !7971
  %411 = insertelement <4 x i8> undef, i8 %410, i64 0
  %412 = shufflevector <4 x i8> %411, <4 x i8> undef, <4 x i32> zeroinitializer
  %413 = sext <4 x i8> %412 to <4 x i16>
  %414 = mul nsw <4 x i16> %413, %264
  %415 = add <4 x i16> %414, %249
  %416 = add nsw i64 %259, 76
  %417 = getelementptr inbounds i8, ptr %p0, i64 %416
  %418 = load i8, ptr %417, align 1, !tbaa !7971
  %419 = insertelement <4 x i8> undef, i8 %418, i64 0
  %420 = shufflevector <4 x i8> %419, <4 x i8> undef, <4 x i32> zeroinitializer
  %421 = sext <4 x i8> %420 to <4 x i16>
  %422 = mul nsw <4 x i16> %421, %264
  %423 = add <4 x i16> %422, %250
  %424 = add nsw i64 %259, 80
  %425 = getelementptr inbounds i8, ptr %p0, i64 %424
  %426 = load i8, ptr %425, align 1, !tbaa !7971
  %427 = insertelement <4 x i8> undef, i8 %426, i64 0
  %428 = shufflevector <4 x i8> %427, <4 x i8> undef, <4 x i32> zeroinitializer
  %429 = sext <4 x i8> %428 to <4 x i16>
  %430 = mul nsw <4 x i16> %429, %264
  %431 = add <4 x i16> %430, %251
  %432 = add nsw i64 %259, 84
  %433 = getelementptr inbounds i8, ptr %p0, i64 %432
  %434 = load i8, ptr %433, align 1, !tbaa !7971
  %435 = insertelement <4 x i8> undef, i8 %434, i64 0
  %436 = shufflevector <4 x i8> %435, <4 x i8> undef, <4 x i32> zeroinitializer
  %437 = sext <4 x i8> %436 to <4 x i16>
  %438 = mul nsw <4 x i16> %437, %264
  %439 = add <4 x i16> %438, %252
  %440 = add nsw i64 %259, 88
  %441 = getelementptr inbounds i8, ptr %p0, i64 %440
  %442 = load i8, ptr %441, align 1, !tbaa !7971
  %443 = insertelement <4 x i8> undef, i8 %442, i64 0
  %444 = shufflevector <4 x i8> %443, <4 x i8> undef, <4 x i32> zeroinitializer
  %445 = sext <4 x i8> %444 to <4 x i16>
  %446 = mul nsw <4 x i16> %445, %264
  %447 = add <4 x i16> %446, %253
  %448 = add nsw i64 %259, 92
  %449 = getelementptr inbounds i8, ptr %p0, i64 %448
  %450 = load i8, ptr %449, align 1, !tbaa !7971
  %451 = insertelement <4 x i8> undef, i8 %450, i64 0
  %452 = shufflevector <4 x i8> %451, <4 x i8> undef, <4 x i32> zeroinitializer
  %453 = sext <4 x i8> %452 to <4 x i16>
  %454 = mul nsw <4 x i16> %453, %264
  %455 = add <4 x i16> %454, %254
  %456 = add nsw i64 %259, 96
  %457 = getelementptr inbounds i8, ptr %p0, i64 %456
  %458 = load i8, ptr %457, align 1, !tbaa !7971
  %459 = insertelement <4 x i8> undef, i8 %458, i64 0
  %460 = shufflevector <4 x i8> %459, <4 x i8> undef, <4 x i32> zeroinitializer
  %461 = sext <4 x i8> %460 to <4 x i16>
  %462 = mul nsw <4 x i16> %461, %264
  %463 = add <4 x i16> %462, %255
  %464 = add nsw i64 %259, 100
  %465 = getelementptr inbounds i8, ptr %p0, i64 %464
  %466 = load i8, ptr %465, align 1, !tbaa !7971
  %467 = insertelement <4 x i8> undef, i8 %466, i64 0
  %468 = shufflevector <4 x i8> %467, <4 x i8> undef, <4 x i32> zeroinitializer
  %469 = sext <4 x i8> %468 to <4 x i16>
  %470 = mul nsw <4 x i16> %469, %264
  %471 = add <4 x i16> %470, %256
  %472 = add nsw i64 %259, 104
  %473 = getelementptr inbounds i8, ptr %p0, i64 %472
  %474 = load i8, ptr %473, align 1, !tbaa !7971
  %475 = insertelement <4 x i8> undef, i8 %474, i64 0
  %476 = shufflevector <4 x i8> %475, <4 x i8> undef, <4 x i32> zeroinitializer
  %477 = sext <4 x i8> %476 to <4 x i16>
  %478 = mul nsw <4 x i16> %477, %264
  %479 = add <4 x i16> %478, %257
  %480 = add nsw i64 %259, 108
  %481 = getelementptr inbounds i8, ptr %p0, i64 %480
  %482 = load i8, ptr %481, align 1, !tbaa !7971
  %483 = insertelement <4 x i8> undef, i8 %482, i64 0
  %484 = shufflevector <4 x i8> %483, <4 x i8> undef, <4 x i32> zeroinitializer
  %485 = sext <4 x i8> %484 to <4 x i16>
  %486 = mul nsw <4 x i16> %485, %264
  %487 = add <4 x i16> %486, %258
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !59

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next176 = add nuw nsw i64 %indvars.iv175, 1
  %exitcond178.not = icmp eq i64 %indvars.iv.next176, 256
  br i1 %exitcond178.not, label %for_begin_ax2.inner.preheader, label %for_begin_ic.inner.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_17_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.32, align 8
  %7 = alloca %closure_loop_parallel_i0.i1.fused.i2.fused.31, align 8
  %8 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pad = tail call ptr %8(i32 1, i32 %0, i64 115200, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pad, i64 64) ]
  %9 = icmp eq ptr %data_pad, null
  br i1 %9, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end2, %call_end, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %12, %if_end ], [ %19, %call_end ], [ %., %call_end2 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %data_pad, ptr %7, align 8
  %10 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.31, ptr %7, i64 0, i32 1
  store ptr %1, ptr %10, align 8
  %11 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %12 = call i32 %11(ptr nonnull @__tvm_parallel_lambda.1566, ptr nonnull %7, i32 0)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %call_end, label %common.ret, !prof !18

call_end:                                         ; preds = %if_end
  store ptr %data_pad, ptr %6, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.32, ptr %6, i64 0, i32 1
  store ptr %2, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.32, ptr %6, i64 0, i32 2
  store ptr %3, ptr %15, align 8
  %16 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.32, ptr %6, i64 0, i32 3
  store ptr %4, ptr %16, align 8
  %17 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.32, ptr %6, i64 0, i32 4
  store ptr %5, ptr %17, align 8
  %18 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %19 = call i32 %18(ptr nonnull @__tvm_parallel_lambda.1567, ptr nonnull %6, i32 0)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %call_end2, label %common.ret, !prof !18

call_end2:                                        ; preds = %call_end
  %21 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %22 = call i32 %21(i32 1, i32 %0, ptr nonnull %data_pad)
  %.not = icmp ne i32 %22, 0
  %. = sext i1 %.not to i32
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1566(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.31, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 1919
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 1920)
  %9 = mul nsw i32 %5, %task_id
  %.fr3 = freeze i32 %9
  %10 = tail call i32 @llvm.smin.i32(i32 %.fr3, i32 1920)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_i3.preheader.preheader, label %for_end_i0.i1.fused.i2.fused, !prof !18

for_begin_i3.preheader.preheader:                 ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %.fr3, i32 1920)
  %smin = sext i32 %12 to i64
  %13 = sub i32 %8, %10
  br label %for_begin_i3.preheader

for_begin_i3.preheader:                           ; preds = %for_begin_i3.preheader.preheader, %for_end_i3
  %indvars.iv = phi i64 [ %smin, %for_begin_i3.preheader.preheader ], [ %indvars.iv.next, %for_end_i3 ]
  %indvar = phi i32 [ 0, %for_begin_i3.preheader.preheader ], [ %indvar.next, %for_end_i3 ]
  %14 = trunc i64 %indvars.iv to i32
  %cse_var_2 = srem i32 %14, 15
  %15 = sdiv i32 %14, 15
  %16 = icmp sgt i32 %cse_var_2, 0
  br i1 %16, label %if_end.14, label %for_body_i3.us.preheader

for_body_i3.us.preheader:                         ; preds = %for_begin_i3.preheader
  %17 = add i32 %10, %indvar
  %18 = mul i32 %17, 60
  %19 = sext i32 %18 to i64
  %scevgep = getelementptr i8, ptr %data_pad, i64 %19
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(60) %scevgep, i8 0, i64 60, i1 false), !tbaa !7973
  br label %for_end_i3

for_end_i0.i1.fused.i2.fused:                     ; preds = %for_end_i3, %parallel_closure_entry
  ret i32 0

for_end_i3:                                       ; preds = %for_body_i3.us.preheader, %if_end.14
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %indvar.next = add nuw i32 %indvar, 1
  %exitcond.not = icmp eq i32 %indvar.next, %13
  br i1 %exitcond.not, label %for_end_i0.i1.fused.i2.fused, label %for_begin_i3.preheader, !prof !59

if_end.14:                                        ; preds = %for_begin_i3.preheader
  %20 = mul nuw nsw i32 %cse_var_2, 56
  %21 = add nsw i32 %20, -60
  %22 = mul nsw i32 %15, 784
  %23 = add i32 %21, %22
  %24 = mul nsw i64 %indvars.iv, 60
  %25 = getelementptr inbounds i8, ptr %data_pad, i64 %24
  store <4 x i8> zeroinitializer, ptr %25, align 4, !tbaa !7973
  %26 = add i32 %23, 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, ptr %p0, i64 %27
  %29 = load <4 x i8>, ptr %28, align 4, !tbaa !7975
  %30 = add nsw i64 %24, 4
  %31 = getelementptr inbounds i8, ptr %data_pad, i64 %30
  store <4 x i8> %29, ptr %31, align 4, !tbaa !7973
  %32 = add i32 %23, 8
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, ptr %p0, i64 %33
  %35 = load <4 x i8>, ptr %34, align 4, !tbaa !7975
  %36 = add nsw i64 %24, 8
  %37 = getelementptr inbounds i8, ptr %data_pad, i64 %36
  store <4 x i8> %35, ptr %37, align 4, !tbaa !7973
  %38 = add i32 %23, 12
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, ptr %p0, i64 %39
  %41 = load <4 x i8>, ptr %40, align 4, !tbaa !7975
  %42 = add nsw i64 %24, 12
  %43 = getelementptr inbounds i8, ptr %data_pad, i64 %42
  store <4 x i8> %41, ptr %43, align 4, !tbaa !7973
  %44 = add i32 %23, 16
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, ptr %p0, i64 %45
  %47 = load <4 x i8>, ptr %46, align 4, !tbaa !7975
  %48 = add nsw i64 %24, 16
  %49 = getelementptr inbounds i8, ptr %data_pad, i64 %48
  store <4 x i8> %47, ptr %49, align 4, !tbaa !7973
  %50 = add i32 %23, 20
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, ptr %p0, i64 %51
  %53 = load <4 x i8>, ptr %52, align 4, !tbaa !7975
  %54 = add nsw i64 %24, 20
  %55 = getelementptr inbounds i8, ptr %data_pad, i64 %54
  store <4 x i8> %53, ptr %55, align 4, !tbaa !7973
  %56 = add i32 %23, 24
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, ptr %p0, i64 %57
  %59 = load <4 x i8>, ptr %58, align 4, !tbaa !7975
  %60 = add nsw i64 %24, 24
  %61 = getelementptr inbounds i8, ptr %data_pad, i64 %60
  store <4 x i8> %59, ptr %61, align 4, !tbaa !7973
  %62 = add i32 %23, 28
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i8, ptr %p0, i64 %63
  %65 = load <4 x i8>, ptr %64, align 4, !tbaa !7975
  %66 = add nsw i64 %24, 28
  %67 = getelementptr inbounds i8, ptr %data_pad, i64 %66
  store <4 x i8> %65, ptr %67, align 4, !tbaa !7973
  %68 = add i32 %23, 32
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, ptr %p0, i64 %69
  %71 = load <4 x i8>, ptr %70, align 4, !tbaa !7975
  %72 = add nsw i64 %24, 32
  %73 = getelementptr inbounds i8, ptr %data_pad, i64 %72
  store <4 x i8> %71, ptr %73, align 4, !tbaa !7973
  %74 = add i32 %23, 36
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8, ptr %p0, i64 %75
  %77 = load <4 x i8>, ptr %76, align 4, !tbaa !7975
  %78 = add nsw i64 %24, 36
  %79 = getelementptr inbounds i8, ptr %data_pad, i64 %78
  store <4 x i8> %77, ptr %79, align 4, !tbaa !7973
  %80 = add i32 %23, 40
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i8, ptr %p0, i64 %81
  %83 = load <4 x i8>, ptr %82, align 4, !tbaa !7975
  %84 = add nsw i64 %24, 40
  %85 = getelementptr inbounds i8, ptr %data_pad, i64 %84
  store <4 x i8> %83, ptr %85, align 4, !tbaa !7973
  %86 = add i32 %23, 44
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, ptr %p0, i64 %87
  %89 = load <4 x i8>, ptr %88, align 4, !tbaa !7975
  %90 = add nsw i64 %24, 44
  %91 = getelementptr inbounds i8, ptr %data_pad, i64 %90
  store <4 x i8> %89, ptr %91, align 4, !tbaa !7973
  %92 = add i32 %23, 48
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8, ptr %p0, i64 %93
  %95 = load <4 x i8>, ptr %94, align 4, !tbaa !7975
  %96 = add nsw i64 %24, 48
  %97 = getelementptr inbounds i8, ptr %data_pad, i64 %96
  store <4 x i8> %95, ptr %97, align 4, !tbaa !7973
  %98 = add i32 %23, 52
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i8, ptr %p0, i64 %99
  %101 = load <4 x i8>, ptr %100, align 4, !tbaa !7975
  %102 = add nsw i64 %24, 52
  %103 = getelementptr inbounds i8, ptr %data_pad, i64 %102
  store <4 x i8> %101, ptr %103, align 4, !tbaa !7973
  %104 = add i32 %23, 56
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8, ptr %p0, i64 %105
  %107 = load <4 x i8>, ptr %106, align 4, !tbaa !7975
  %108 = add nsw i64 %24, 56
  %109 = getelementptr inbounds i8, ptr %data_pad, i64 %108
  store <4 x i8> %107, ptr %109, align 4, !tbaa !7973
  br label %for_end_i3
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1567(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.32, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.32, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 895
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 896)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_body_ax0.ax1.fused.ax2.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_body_ax0.ax1.fused.ax2.fused.lr.ph:           ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.32, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.32, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = load i16, ptr %p3, align 64, !tbaa !7977
  %16 = insertelement <4 x i16> undef, i16 %15, i64 0
  %17 = shufflevector <4 x i16> %16, <4 x i16> undef, <4 x i32> zeroinitializer
  %18 = load i16, ptr %p2, align 64, !tbaa !7989
  %19 = insertelement <4 x i16> undef, i16 %18, i64 0
  %20 = shufflevector <4 x i16> %19, <4 x i16> undef, <4 x i32> zeroinitializer
  %21 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %smin = sext i32 %21 to i64
  %22 = add i32 %9, %21
  %23 = sub i32 %22, %11
  br label %for_body_ax0.ax1.fused.ax2.fused

for_body_ax0.ax1.fused.ax2.fused:                 ; preds = %for_body_ax0.ax1.fused.ax2.fused.lr.ph, %for_begin_ax3.inner.preheader
  %indvars.iv104 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.fused.lr.ph ], [ %indvars.iv.next105, %for_begin_ax3.inner.preheader ]
  %24 = trunc i64 %indvars.iv104 to i32
  %25 = srem i32 %24, 7
  %26 = mul nsw i32 %25, 120
  %27 = sdiv i32 %24, 7
  %28 = mul nsw i32 %27, 18432
  %29 = sext i32 %28 to i64
  %30 = sext i32 %26 to i64
  br label %for_begin_kh.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.inner.preheader, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_end_kh
  %31 = mul nsw i64 %indvars.iv104, 28
  %32 = add <4 x i16> %20, %281
  %33 = ashr <4 x i16> %32, %17
  %34 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %33, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %35 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %34, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %36 = trunc <4 x i16> %35 to <4 x i8>
  %37 = getelementptr inbounds i8, ptr %T_cast, i64 %31
  store <4 x i8> %36, ptr %37, align 4, !tbaa !8001
  %38 = add <4 x i16> %20, %289
  %39 = ashr <4 x i16> %38, %17
  %40 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %39, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %41 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %40, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %42 = trunc <4 x i16> %41 to <4 x i8>
  %43 = add nsw i64 %31, 4
  %44 = getelementptr inbounds i8, ptr %T_cast, i64 %43
  store <4 x i8> %42, ptr %44, align 4, !tbaa !8001
  %45 = add <4 x i16> %20, %297
  %46 = ashr <4 x i16> %45, %17
  %47 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %46, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %48 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %47, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %49 = trunc <4 x i16> %48 to <4 x i8>
  %50 = add nsw i64 %31, 8
  %51 = getelementptr inbounds i8, ptr %T_cast, i64 %50
  store <4 x i8> %49, ptr %51, align 4, !tbaa !8001
  %52 = add <4 x i16> %20, %305
  %53 = ashr <4 x i16> %52, %17
  %54 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %53, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %55 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %54, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %56 = trunc <4 x i16> %55 to <4 x i8>
  %57 = add nsw i64 %31, 12
  %58 = getelementptr inbounds i8, ptr %T_cast, i64 %57
  store <4 x i8> %56, ptr %58, align 4, !tbaa !8001
  %59 = add <4 x i16> %20, %313
  %60 = ashr <4 x i16> %59, %17
  %61 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %60, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %62 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %61, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %63 = trunc <4 x i16> %62 to <4 x i8>
  %64 = add nsw i64 %31, 16
  %65 = getelementptr inbounds i8, ptr %T_cast, i64 %64
  store <4 x i8> %63, ptr %65, align 4, !tbaa !8001
  %66 = add <4 x i16> %20, %321
  %67 = ashr <4 x i16> %66, %17
  %68 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %67, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %69 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %68, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %70 = trunc <4 x i16> %69 to <4 x i8>
  %71 = add nsw i64 %31, 20
  %72 = getelementptr inbounds i8, ptr %T_cast, i64 %71
  store <4 x i8> %70, ptr %72, align 4, !tbaa !8001
  %73 = add <4 x i16> %20, %329
  %74 = ashr <4 x i16> %73, %17
  %75 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %74, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %76 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %75, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %77 = trunc <4 x i16> %76 to <4 x i8>
  %78 = add nsw i64 %31, 24
  %79 = getelementptr inbounds i8, ptr %T_cast, i64 %78
  store <4 x i8> %77, ptr %79, align 4, !tbaa !8001
  %indvars.iv.next105 = add nsw i64 %indvars.iv104, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next105 to i32
  %exitcond106.not = icmp eq i32 %23, %lftr.wideiv
  br i1 %exitcond106.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_body_ax0.ax1.fused.ax2.fused, !prof !59

for_begin_kh.preheader:                           ; preds = %for_body_ax0.ax1.fused.ax2.fused, %for_end_kh
  %indvars.iv96 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.fused ], [ %indvars.iv.next97, %for_end_kh ]
  %.lcssa15.lcssa35.lcssa5674 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %281, %for_end_kh ]
  %.lcssa217.lcssa37.lcssa5873 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %289, %for_end_kh ]
  %.lcssa418.lcssa39.lcssa6072 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %297, %for_end_kh ]
  %.lcssa620.lcssa40.lcssa6271 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %305, %for_end_kh ]
  %.lcssa822.lcssa42.lcssa6370 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %313, %for_end_kh ]
  %.lcssa1024.lcssa44.lcssa6569 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %321, %for_end_kh ]
  %.lcssa1226.lcssa46.lcssa6768 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %329, %for_end_kh ]
  %80 = mul nuw nsw i64 %indvars.iv96, 900
  %81 = add nsw i64 %80, %30
  %82 = mul nuw nsw i64 %indvars.iv96, 144
  %83 = add nsw i64 %82, %29
  br label %for_begin_kw.preheader

for_begin_kw.preheader:                           ; preds = %for_begin_kh.preheader, %for_end_kw
  %indvars.iv92 = phi i64 [ 0, %for_begin_kh.preheader ], [ %indvars.iv.next93, %for_end_kw ]
  %.lcssa15.lcssa3553 = phi <4 x i16> [ %.lcssa15.lcssa35.lcssa5674, %for_begin_kh.preheader ], [ %281, %for_end_kw ]
  %.lcssa217.lcssa3752 = phi <4 x i16> [ %.lcssa217.lcssa37.lcssa5873, %for_begin_kh.preheader ], [ %289, %for_end_kw ]
  %.lcssa418.lcssa3951 = phi <4 x i16> [ %.lcssa418.lcssa39.lcssa6072, %for_begin_kh.preheader ], [ %297, %for_end_kw ]
  %.lcssa620.lcssa4050 = phi <4 x i16> [ %.lcssa620.lcssa40.lcssa6271, %for_begin_kh.preheader ], [ %305, %for_end_kw ]
  %.lcssa822.lcssa4249 = phi <4 x i16> [ %.lcssa822.lcssa42.lcssa6370, %for_begin_kh.preheader ], [ %313, %for_end_kw ]
  %.lcssa1024.lcssa4448 = phi <4 x i16> [ %.lcssa1024.lcssa44.lcssa6569, %for_begin_kh.preheader ], [ %321, %for_end_kw ]
  %.lcssa1226.lcssa4647 = phi <4 x i16> [ %.lcssa1226.lcssa46.lcssa6768, %for_begin_kh.preheader ], [ %329, %for_end_kw ]
  %84 = mul nuw nsw i64 %indvars.iv92, 60
  %85 = add nsw i64 %81, %84
  %86 = mul nuw nsw i64 %indvars.iv92, 48
  %87 = add nsw i64 %83, %86
  br label %for_begin_ic.inner.preheader

for_end_kh:                                       ; preds = %for_end_kw
  %indvars.iv.next97 = add nuw nsw i64 %indvars.iv96, 1
  %exitcond99.not = icmp eq i64 %indvars.iv.next97, 128
  br i1 %exitcond99.not, label %for_begin_ax3.inner.preheader, label %for_begin_kh.preheader, !prof !59

for_begin_ic.inner.preheader:                     ; preds = %for_begin_kw.preheader, %for_begin_ic.inner.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_kw.preheader ], [ %indvars.iv.next, %for_begin_ic.inner.preheader ]
  %.lcssa1533 = phi <4 x i16> [ %.lcssa15.lcssa3553, %for_begin_kw.preheader ], [ %281, %for_begin_ic.inner.preheader ]
  %.lcssa21732 = phi <4 x i16> [ %.lcssa217.lcssa3752, %for_begin_kw.preheader ], [ %289, %for_begin_ic.inner.preheader ]
  %.lcssa41831 = phi <4 x i16> [ %.lcssa418.lcssa3951, %for_begin_kw.preheader ], [ %297, %for_begin_ic.inner.preheader ]
  %.lcssa62030 = phi <4 x i16> [ %.lcssa620.lcssa4050, %for_begin_kw.preheader ], [ %305, %for_begin_ic.inner.preheader ]
  %.lcssa82229 = phi <4 x i16> [ %.lcssa822.lcssa4249, %for_begin_kw.preheader ], [ %313, %for_begin_ic.inner.preheader ]
  %.lcssa102428 = phi <4 x i16> [ %.lcssa1024.lcssa4448, %for_begin_kw.preheader ], [ %321, %for_begin_ic.inner.preheader ]
  %.lcssa122627 = phi <4 x i16> [ %.lcssa1226.lcssa4647, %for_begin_kw.preheader ], [ %329, %for_begin_ic.inner.preheader ]
  %88 = shl nsw i64 %indvars.iv, 2
  %89 = add nsw i64 %85, %88
  %90 = shl nsw i64 %indvars.iv, 4
  %91 = add nsw i64 %87, %90
  %92 = getelementptr inbounds i8, ptr %p1, i64 %91
  %93 = load <4 x i8>, ptr %92, align 4, !tbaa !8003
  %94 = sext <4 x i8> %93 to <4 x i16>
  %95 = getelementptr inbounds i8, ptr %data_pad, i64 %89
  %96 = load i8, ptr %95, align 1, !tbaa !7973
  %97 = insertelement <4 x i8> undef, i8 %96, i64 0
  %98 = shufflevector <4 x i8> %97, <4 x i8> undef, <4 x i32> zeroinitializer
  %99 = sext <4 x i8> %98 to <4 x i16>
  %100 = mul nsw <4 x i16> %99, %94
  %101 = add <4 x i16> %100, %.lcssa1533
  %102 = add nsw i64 %89, 8
  %103 = getelementptr inbounds i8, ptr %data_pad, i64 %102
  %104 = load i8, ptr %103, align 1, !tbaa !7973
  %105 = insertelement <4 x i8> undef, i8 %104, i64 0
  %106 = shufflevector <4 x i8> %105, <4 x i8> undef, <4 x i32> zeroinitializer
  %107 = sext <4 x i8> %106 to <4 x i16>
  %108 = mul nsw <4 x i16> %107, %94
  %109 = add <4 x i16> %108, %.lcssa21732
  %110 = add nsw i64 %89, 16
  %111 = getelementptr inbounds i8, ptr %data_pad, i64 %110
  %112 = load i8, ptr %111, align 1, !tbaa !7973
  %113 = insertelement <4 x i8> undef, i8 %112, i64 0
  %114 = shufflevector <4 x i8> %113, <4 x i8> undef, <4 x i32> zeroinitializer
  %115 = sext <4 x i8> %114 to <4 x i16>
  %116 = mul nsw <4 x i16> %115, %94
  %117 = add <4 x i16> %116, %.lcssa41831
  %118 = add nsw i64 %89, 24
  %119 = getelementptr inbounds i8, ptr %data_pad, i64 %118
  %120 = load i8, ptr %119, align 1, !tbaa !7973
  %121 = insertelement <4 x i8> undef, i8 %120, i64 0
  %122 = shufflevector <4 x i8> %121, <4 x i8> undef, <4 x i32> zeroinitializer
  %123 = sext <4 x i8> %122 to <4 x i16>
  %124 = mul nsw <4 x i16> %123, %94
  %125 = add <4 x i16> %124, %.lcssa62030
  %126 = add nsw i64 %89, 32
  %127 = getelementptr inbounds i8, ptr %data_pad, i64 %126
  %128 = load i8, ptr %127, align 1, !tbaa !7973
  %129 = insertelement <4 x i8> undef, i8 %128, i64 0
  %130 = shufflevector <4 x i8> %129, <4 x i8> undef, <4 x i32> zeroinitializer
  %131 = sext <4 x i8> %130 to <4 x i16>
  %132 = mul nsw <4 x i16> %131, %94
  %133 = add <4 x i16> %132, %.lcssa82229
  %134 = add nsw i64 %89, 40
  %135 = getelementptr inbounds i8, ptr %data_pad, i64 %134
  %136 = load i8, ptr %135, align 1, !tbaa !7973
  %137 = insertelement <4 x i8> undef, i8 %136, i64 0
  %138 = shufflevector <4 x i8> %137, <4 x i8> undef, <4 x i32> zeroinitializer
  %139 = sext <4 x i8> %138 to <4 x i16>
  %140 = mul nsw <4 x i16> %139, %94
  %141 = add <4 x i16> %140, %.lcssa102428
  %142 = add nsw i64 %89, 48
  %143 = getelementptr inbounds i8, ptr %data_pad, i64 %142
  %144 = load i8, ptr %143, align 1, !tbaa !7973
  %145 = insertelement <4 x i8> undef, i8 %144, i64 0
  %146 = shufflevector <4 x i8> %145, <4 x i8> undef, <4 x i32> zeroinitializer
  %147 = sext <4 x i8> %146 to <4 x i16>
  %148 = mul nsw <4 x i16> %147, %94
  %149 = add <4 x i16> %148, %.lcssa122627
  %150 = or i64 %89, 1
  %151 = or i64 %91, 4
  %152 = getelementptr inbounds i8, ptr %p1, i64 %151
  %153 = load <4 x i8>, ptr %152, align 4, !tbaa !8003
  %154 = sext <4 x i8> %153 to <4 x i16>
  %155 = getelementptr inbounds i8, ptr %data_pad, i64 %150
  %156 = load i8, ptr %155, align 1, !tbaa !7973
  %157 = insertelement <4 x i8> undef, i8 %156, i64 0
  %158 = shufflevector <4 x i8> %157, <4 x i8> undef, <4 x i32> zeroinitializer
  %159 = sext <4 x i8> %158 to <4 x i16>
  %160 = mul nsw <4 x i16> %159, %154
  %161 = add <4 x i16> %160, %101
  %162 = add nsw i64 %89, 9
  %163 = getelementptr inbounds i8, ptr %data_pad, i64 %162
  %164 = load i8, ptr %163, align 1, !tbaa !7973
  %165 = insertelement <4 x i8> undef, i8 %164, i64 0
  %166 = shufflevector <4 x i8> %165, <4 x i8> undef, <4 x i32> zeroinitializer
  %167 = sext <4 x i8> %166 to <4 x i16>
  %168 = mul nsw <4 x i16> %167, %154
  %169 = add <4 x i16> %168, %109
  %170 = add nsw i64 %89, 17
  %171 = getelementptr inbounds i8, ptr %data_pad, i64 %170
  %172 = load i8, ptr %171, align 1, !tbaa !7973
  %173 = insertelement <4 x i8> undef, i8 %172, i64 0
  %174 = shufflevector <4 x i8> %173, <4 x i8> undef, <4 x i32> zeroinitializer
  %175 = sext <4 x i8> %174 to <4 x i16>
  %176 = mul nsw <4 x i16> %175, %154
  %177 = add <4 x i16> %176, %117
  %178 = add nsw i64 %89, 25
  %179 = getelementptr inbounds i8, ptr %data_pad, i64 %178
  %180 = load i8, ptr %179, align 1, !tbaa !7973
  %181 = insertelement <4 x i8> undef, i8 %180, i64 0
  %182 = shufflevector <4 x i8> %181, <4 x i8> undef, <4 x i32> zeroinitializer
  %183 = sext <4 x i8> %182 to <4 x i16>
  %184 = mul nsw <4 x i16> %183, %154
  %185 = add <4 x i16> %184, %125
  %186 = add nsw i64 %89, 33
  %187 = getelementptr inbounds i8, ptr %data_pad, i64 %186
  %188 = load i8, ptr %187, align 1, !tbaa !7973
  %189 = insertelement <4 x i8> undef, i8 %188, i64 0
  %190 = shufflevector <4 x i8> %189, <4 x i8> undef, <4 x i32> zeroinitializer
  %191 = sext <4 x i8> %190 to <4 x i16>
  %192 = mul nsw <4 x i16> %191, %154
  %193 = add <4 x i16> %192, %133
  %194 = add nsw i64 %89, 41
  %195 = getelementptr inbounds i8, ptr %data_pad, i64 %194
  %196 = load i8, ptr %195, align 1, !tbaa !7973
  %197 = insertelement <4 x i8> undef, i8 %196, i64 0
  %198 = shufflevector <4 x i8> %197, <4 x i8> undef, <4 x i32> zeroinitializer
  %199 = sext <4 x i8> %198 to <4 x i16>
  %200 = mul nsw <4 x i16> %199, %154
  %201 = add <4 x i16> %200, %141
  %202 = add nsw i64 %89, 49
  %203 = getelementptr inbounds i8, ptr %data_pad, i64 %202
  %204 = load i8, ptr %203, align 1, !tbaa !7973
  %205 = insertelement <4 x i8> undef, i8 %204, i64 0
  %206 = shufflevector <4 x i8> %205, <4 x i8> undef, <4 x i32> zeroinitializer
  %207 = sext <4 x i8> %206 to <4 x i16>
  %208 = mul nsw <4 x i16> %207, %154
  %209 = add <4 x i16> %208, %149
  %210 = or i64 %89, 2
  %211 = or i64 %91, 8
  %212 = getelementptr inbounds i8, ptr %p1, i64 %211
  %213 = load <4 x i8>, ptr %212, align 4, !tbaa !8003
  %214 = sext <4 x i8> %213 to <4 x i16>
  %215 = getelementptr inbounds i8, ptr %data_pad, i64 %210
  %216 = load i8, ptr %215, align 1, !tbaa !7973
  %217 = insertelement <4 x i8> undef, i8 %216, i64 0
  %218 = shufflevector <4 x i8> %217, <4 x i8> undef, <4 x i32> zeroinitializer
  %219 = sext <4 x i8> %218 to <4 x i16>
  %220 = mul nsw <4 x i16> %219, %214
  %221 = add <4 x i16> %220, %161
  %222 = add nsw i64 %89, 10
  %223 = getelementptr inbounds i8, ptr %data_pad, i64 %222
  %224 = load i8, ptr %223, align 1, !tbaa !7973
  %225 = insertelement <4 x i8> undef, i8 %224, i64 0
  %226 = shufflevector <4 x i8> %225, <4 x i8> undef, <4 x i32> zeroinitializer
  %227 = sext <4 x i8> %226 to <4 x i16>
  %228 = mul nsw <4 x i16> %227, %214
  %229 = add <4 x i16> %228, %169
  %230 = add nsw i64 %89, 18
  %231 = getelementptr inbounds i8, ptr %data_pad, i64 %230
  %232 = load i8, ptr %231, align 1, !tbaa !7973
  %233 = insertelement <4 x i8> undef, i8 %232, i64 0
  %234 = shufflevector <4 x i8> %233, <4 x i8> undef, <4 x i32> zeroinitializer
  %235 = sext <4 x i8> %234 to <4 x i16>
  %236 = mul nsw <4 x i16> %235, %214
  %237 = add <4 x i16> %236, %177
  %238 = add nsw i64 %89, 26
  %239 = getelementptr inbounds i8, ptr %data_pad, i64 %238
  %240 = load i8, ptr %239, align 1, !tbaa !7973
  %241 = insertelement <4 x i8> undef, i8 %240, i64 0
  %242 = shufflevector <4 x i8> %241, <4 x i8> undef, <4 x i32> zeroinitializer
  %243 = sext <4 x i8> %242 to <4 x i16>
  %244 = mul nsw <4 x i16> %243, %214
  %245 = add <4 x i16> %244, %185
  %246 = add nsw i64 %89, 34
  %247 = getelementptr inbounds i8, ptr %data_pad, i64 %246
  %248 = load i8, ptr %247, align 1, !tbaa !7973
  %249 = insertelement <4 x i8> undef, i8 %248, i64 0
  %250 = shufflevector <4 x i8> %249, <4 x i8> undef, <4 x i32> zeroinitializer
  %251 = sext <4 x i8> %250 to <4 x i16>
  %252 = mul nsw <4 x i16> %251, %214
  %253 = add <4 x i16> %252, %193
  %254 = add nsw i64 %89, 42
  %255 = getelementptr inbounds i8, ptr %data_pad, i64 %254
  %256 = load i8, ptr %255, align 1, !tbaa !7973
  %257 = insertelement <4 x i8> undef, i8 %256, i64 0
  %258 = shufflevector <4 x i8> %257, <4 x i8> undef, <4 x i32> zeroinitializer
  %259 = sext <4 x i8> %258 to <4 x i16>
  %260 = mul nsw <4 x i16> %259, %214
  %261 = add <4 x i16> %260, %201
  %262 = add nsw i64 %89, 50
  %263 = getelementptr inbounds i8, ptr %data_pad, i64 %262
  %264 = load i8, ptr %263, align 1, !tbaa !7973
  %265 = insertelement <4 x i8> undef, i8 %264, i64 0
  %266 = shufflevector <4 x i8> %265, <4 x i8> undef, <4 x i32> zeroinitializer
  %267 = sext <4 x i8> %266 to <4 x i16>
  %268 = mul nsw <4 x i16> %267, %214
  %269 = add <4 x i16> %268, %209
  %270 = or i64 %89, 3
  %271 = or i64 %91, 12
  %272 = getelementptr inbounds i8, ptr %p1, i64 %271
  %273 = load <4 x i8>, ptr %272, align 4, !tbaa !8003
  %274 = sext <4 x i8> %273 to <4 x i16>
  %275 = getelementptr inbounds i8, ptr %data_pad, i64 %270
  %276 = load i8, ptr %275, align 1, !tbaa !7973
  %277 = insertelement <4 x i8> undef, i8 %276, i64 0
  %278 = shufflevector <4 x i8> %277, <4 x i8> undef, <4 x i32> zeroinitializer
  %279 = sext <4 x i8> %278 to <4 x i16>
  %280 = mul nsw <4 x i16> %279, %274
  %281 = add <4 x i16> %280, %221
  %282 = add nsw i64 %89, 11
  %283 = getelementptr inbounds i8, ptr %data_pad, i64 %282
  %284 = load i8, ptr %283, align 1, !tbaa !7973
  %285 = insertelement <4 x i8> undef, i8 %284, i64 0
  %286 = shufflevector <4 x i8> %285, <4 x i8> undef, <4 x i32> zeroinitializer
  %287 = sext <4 x i8> %286 to <4 x i16>
  %288 = mul nsw <4 x i16> %287, %274
  %289 = add <4 x i16> %288, %229
  %290 = add nsw i64 %89, 19
  %291 = getelementptr inbounds i8, ptr %data_pad, i64 %290
  %292 = load i8, ptr %291, align 1, !tbaa !7973
  %293 = insertelement <4 x i8> undef, i8 %292, i64 0
  %294 = shufflevector <4 x i8> %293, <4 x i8> undef, <4 x i32> zeroinitializer
  %295 = sext <4 x i8> %294 to <4 x i16>
  %296 = mul nsw <4 x i16> %295, %274
  %297 = add <4 x i16> %296, %237
  %298 = add nsw i64 %89, 27
  %299 = getelementptr inbounds i8, ptr %data_pad, i64 %298
  %300 = load i8, ptr %299, align 1, !tbaa !7973
  %301 = insertelement <4 x i8> undef, i8 %300, i64 0
  %302 = shufflevector <4 x i8> %301, <4 x i8> undef, <4 x i32> zeroinitializer
  %303 = sext <4 x i8> %302 to <4 x i16>
  %304 = mul nsw <4 x i16> %303, %274
  %305 = add <4 x i16> %304, %245
  %306 = add nsw i64 %89, 35
  %307 = getelementptr inbounds i8, ptr %data_pad, i64 %306
  %308 = load i8, ptr %307, align 1, !tbaa !7973
  %309 = insertelement <4 x i8> undef, i8 %308, i64 0
  %310 = shufflevector <4 x i8> %309, <4 x i8> undef, <4 x i32> zeroinitializer
  %311 = sext <4 x i8> %310 to <4 x i16>
  %312 = mul nsw <4 x i16> %311, %274
  %313 = add <4 x i16> %312, %253
  %314 = add nsw i64 %89, 43
  %315 = getelementptr inbounds i8, ptr %data_pad, i64 %314
  %316 = load i8, ptr %315, align 1, !tbaa !7973
  %317 = insertelement <4 x i8> undef, i8 %316, i64 0
  %318 = shufflevector <4 x i8> %317, <4 x i8> undef, <4 x i32> zeroinitializer
  %319 = sext <4 x i8> %318 to <4 x i16>
  %320 = mul nsw <4 x i16> %319, %274
  %321 = add <4 x i16> %320, %261
  %322 = add nsw i64 %89, 51
  %323 = getelementptr inbounds i8, ptr %data_pad, i64 %322
  %324 = load i8, ptr %323, align 1, !tbaa !7973
  %325 = insertelement <4 x i8> undef, i8 %324, i64 0
  %326 = shufflevector <4 x i8> %325, <4 x i8> undef, <4 x i32> zeroinitializer
  %327 = sext <4 x i8> %326 to <4 x i16>
  %328 = mul nsw <4 x i16> %327, %274
  %329 = add <4 x i16> %328, %269
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for_end_kw, label %for_begin_ic.inner.preheader, !prof !59

for_end_kw:                                       ; preds = %for_begin_ic.inner.preheader
  %indvars.iv.next93 = add nuw nsw i64 %indvars.iv92, 1
  %exitcond95.not = icmp eq i64 %indvars.iv.next93, 3
  br i1 %exitcond95.not, label %for_end_kh, label %for_begin_kw.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_18_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.33, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.33, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.33, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.33, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.33, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1617, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1617(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.33, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.33, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 3583
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 3584)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 3584)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph:     ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.33, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.33, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = load i16, ptr %p3, align 64, !tbaa !8005
  %16 = insertelement <4 x i16> undef, i16 %15, i64 0
  %17 = shufflevector <4 x i16> %16, <4 x i16> undef, <4 x i32> zeroinitializer
  %18 = load i16, ptr %p2, align 64, !tbaa !8017
  %19 = insertelement <4 x i16> undef, i16 %18, i64 0
  %20 = shufflevector <4 x i16> %19, <4 x i16> undef, <4 x i32> zeroinitializer
  %21 = tail call i32 @llvm.smin.i32(i32 %10, i32 3584)
  %smin = sext i32 %21 to i64
  %22 = add i32 %9, %21
  %23 = sub i32 %22, %11
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, %for_begin_ax3.inner.preheader
  %indvars.iv53 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph ], [ %indvars.iv.next54, %for_begin_ax3.inner.preheader ]
  %24 = trunc i64 %indvars.iv53 to i32
  %25 = srem i32 %24, 7
  %26 = mul nsw i32 %25, 28
  %27 = sdiv i32 %24, 7
  %28 = shl nsw i32 %27, 11
  %29 = sext i32 %26 to i64
  %30 = sext i32 %28 to i64
  br label %for_begin_ic.inner.preheader

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_begin_ax3.inner.preheader, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_begin_ic.inner.preheader
  %31 = mul nsw i64 %indvars.iv53, 28
  %32 = add <4 x i16> %20, %273
  %33 = ashr <4 x i16> %32, %17
  %34 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %33, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %35 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %34, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %36 = trunc <4 x i16> %35 to <4 x i8>
  %37 = getelementptr inbounds i8, ptr %T_cast, i64 %31
  store <4 x i8> %36, ptr %37, align 4, !tbaa !8029
  %38 = add <4 x i16> %20, %281
  %39 = ashr <4 x i16> %38, %17
  %40 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %39, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %41 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %40, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %42 = trunc <4 x i16> %41 to <4 x i8>
  %43 = add nsw i64 %31, 4
  %44 = getelementptr inbounds i8, ptr %T_cast, i64 %43
  store <4 x i8> %42, ptr %44, align 4, !tbaa !8029
  %45 = add <4 x i16> %20, %289
  %46 = ashr <4 x i16> %45, %17
  %47 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %46, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %48 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %47, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %49 = trunc <4 x i16> %48 to <4 x i8>
  %50 = add nsw i64 %31, 8
  %51 = getelementptr inbounds i8, ptr %T_cast, i64 %50
  store <4 x i8> %49, ptr %51, align 4, !tbaa !8029
  %52 = add <4 x i16> %20, %297
  %53 = ashr <4 x i16> %52, %17
  %54 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %53, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %55 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %54, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %56 = trunc <4 x i16> %55 to <4 x i8>
  %57 = add nsw i64 %31, 12
  %58 = getelementptr inbounds i8, ptr %T_cast, i64 %57
  store <4 x i8> %56, ptr %58, align 4, !tbaa !8029
  %59 = add <4 x i16> %20, %305
  %60 = ashr <4 x i16> %59, %17
  %61 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %60, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %62 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %61, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %63 = trunc <4 x i16> %62 to <4 x i8>
  %64 = add nsw i64 %31, 16
  %65 = getelementptr inbounds i8, ptr %T_cast, i64 %64
  store <4 x i8> %63, ptr %65, align 4, !tbaa !8029
  %66 = add <4 x i16> %20, %313
  %67 = ashr <4 x i16> %66, %17
  %68 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %67, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %69 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %68, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %70 = trunc <4 x i16> %69 to <4 x i8>
  %71 = add nsw i64 %31, 20
  %72 = getelementptr inbounds i8, ptr %T_cast, i64 %71
  store <4 x i8> %70, ptr %72, align 4, !tbaa !8029
  %73 = add <4 x i16> %20, %321
  %74 = ashr <4 x i16> %73, %17
  %75 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %74, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %76 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %75, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %77 = trunc <4 x i16> %76 to <4 x i8>
  %78 = add nsw i64 %31, 24
  %79 = getelementptr inbounds i8, ptr %T_cast, i64 %78
  store <4 x i8> %77, ptr %79, align 4, !tbaa !8029
  %indvars.iv.next54 = add nsw i64 %indvars.iv53, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next54 to i32
  %exitcond55.not = icmp eq i32 %23, %lftr.wideiv
  br i1 %exitcond55.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !59

for_begin_ic.inner.preheader:                     ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused, %for_begin_ic.inner.preheader
  %indvars.iv = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %indvars.iv.next, %for_begin_ic.inner.preheader ]
  %.lcssa1533 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %273, %for_begin_ic.inner.preheader ]
  %.lcssa21732 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %281, %for_begin_ic.inner.preheader ]
  %.lcssa41831 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %289, %for_begin_ic.inner.preheader ]
  %.lcssa62030 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %297, %for_begin_ic.inner.preheader ]
  %.lcssa82229 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %305, %for_begin_ic.inner.preheader ]
  %.lcssa102428 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %313, %for_begin_ic.inner.preheader ]
  %.lcssa122627 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %321, %for_begin_ic.inner.preheader ]
  %80 = mul nuw nsw i64 %indvars.iv, 196
  %81 = add nsw i64 %80, %29
  %82 = shl nsw i64 %indvars.iv, 4
  %83 = add nuw nsw i64 %82, %30
  %84 = getelementptr inbounds i8, ptr %p1, i64 %83
  %85 = load <4 x i8>, ptr %84, align 4, !tbaa !8031
  %86 = sext <4 x i8> %85 to <4 x i16>
  %87 = getelementptr inbounds i8, ptr %p0, i64 %81
  %88 = load i8, ptr %87, align 1, !tbaa !8033
  %89 = insertelement <4 x i8> undef, i8 %88, i64 0
  %90 = shufflevector <4 x i8> %89, <4 x i8> undef, <4 x i32> zeroinitializer
  %91 = sext <4 x i8> %90 to <4 x i16>
  %92 = mul nsw <4 x i16> %91, %86
  %93 = add <4 x i16> %92, %.lcssa1533
  %94 = add nsw i64 %81, 4
  %95 = getelementptr inbounds i8, ptr %p0, i64 %94
  %96 = load i8, ptr %95, align 1, !tbaa !8033
  %97 = insertelement <4 x i8> undef, i8 %96, i64 0
  %98 = shufflevector <4 x i8> %97, <4 x i8> undef, <4 x i32> zeroinitializer
  %99 = sext <4 x i8> %98 to <4 x i16>
  %100 = mul nsw <4 x i16> %99, %86
  %101 = add <4 x i16> %100, %.lcssa21732
  %102 = add nsw i64 %81, 8
  %103 = getelementptr inbounds i8, ptr %p0, i64 %102
  %104 = load i8, ptr %103, align 1, !tbaa !8033
  %105 = insertelement <4 x i8> undef, i8 %104, i64 0
  %106 = shufflevector <4 x i8> %105, <4 x i8> undef, <4 x i32> zeroinitializer
  %107 = sext <4 x i8> %106 to <4 x i16>
  %108 = mul nsw <4 x i16> %107, %86
  %109 = add <4 x i16> %108, %.lcssa41831
  %110 = add nsw i64 %81, 12
  %111 = getelementptr inbounds i8, ptr %p0, i64 %110
  %112 = load i8, ptr %111, align 1, !tbaa !8033
  %113 = insertelement <4 x i8> undef, i8 %112, i64 0
  %114 = shufflevector <4 x i8> %113, <4 x i8> undef, <4 x i32> zeroinitializer
  %115 = sext <4 x i8> %114 to <4 x i16>
  %116 = mul nsw <4 x i16> %115, %86
  %117 = add <4 x i16> %116, %.lcssa62030
  %118 = add nsw i64 %81, 16
  %119 = getelementptr inbounds i8, ptr %p0, i64 %118
  %120 = load i8, ptr %119, align 1, !tbaa !8033
  %121 = insertelement <4 x i8> undef, i8 %120, i64 0
  %122 = shufflevector <4 x i8> %121, <4 x i8> undef, <4 x i32> zeroinitializer
  %123 = sext <4 x i8> %122 to <4 x i16>
  %124 = mul nsw <4 x i16> %123, %86
  %125 = add <4 x i16> %124, %.lcssa82229
  %126 = add nsw i64 %81, 20
  %127 = getelementptr inbounds i8, ptr %p0, i64 %126
  %128 = load i8, ptr %127, align 1, !tbaa !8033
  %129 = insertelement <4 x i8> undef, i8 %128, i64 0
  %130 = shufflevector <4 x i8> %129, <4 x i8> undef, <4 x i32> zeroinitializer
  %131 = sext <4 x i8> %130 to <4 x i16>
  %132 = mul nsw <4 x i16> %131, %86
  %133 = add <4 x i16> %132, %.lcssa102428
  %134 = add nsw i64 %81, 24
  %135 = getelementptr inbounds i8, ptr %p0, i64 %134
  %136 = load i8, ptr %135, align 1, !tbaa !8033
  %137 = insertelement <4 x i8> undef, i8 %136, i64 0
  %138 = shufflevector <4 x i8> %137, <4 x i8> undef, <4 x i32> zeroinitializer
  %139 = sext <4 x i8> %138 to <4 x i16>
  %140 = mul nsw <4 x i16> %139, %86
  %141 = add <4 x i16> %140, %.lcssa122627
  %142 = or i64 %81, 1
  %143 = or i64 %83, 4
  %144 = getelementptr inbounds i8, ptr %p1, i64 %143
  %145 = load <4 x i8>, ptr %144, align 4, !tbaa !8031
  %146 = sext <4 x i8> %145 to <4 x i16>
  %147 = getelementptr inbounds i8, ptr %p0, i64 %142
  %148 = load i8, ptr %147, align 1, !tbaa !8033
  %149 = insertelement <4 x i8> undef, i8 %148, i64 0
  %150 = shufflevector <4 x i8> %149, <4 x i8> undef, <4 x i32> zeroinitializer
  %151 = sext <4 x i8> %150 to <4 x i16>
  %152 = mul nsw <4 x i16> %151, %146
  %153 = add <4 x i16> %152, %93
  %154 = add nsw i64 %81, 5
  %155 = getelementptr inbounds i8, ptr %p0, i64 %154
  %156 = load i8, ptr %155, align 1, !tbaa !8033
  %157 = insertelement <4 x i8> undef, i8 %156, i64 0
  %158 = shufflevector <4 x i8> %157, <4 x i8> undef, <4 x i32> zeroinitializer
  %159 = sext <4 x i8> %158 to <4 x i16>
  %160 = mul nsw <4 x i16> %159, %146
  %161 = add <4 x i16> %160, %101
  %162 = add nsw i64 %81, 9
  %163 = getelementptr inbounds i8, ptr %p0, i64 %162
  %164 = load i8, ptr %163, align 1, !tbaa !8033
  %165 = insertelement <4 x i8> undef, i8 %164, i64 0
  %166 = shufflevector <4 x i8> %165, <4 x i8> undef, <4 x i32> zeroinitializer
  %167 = sext <4 x i8> %166 to <4 x i16>
  %168 = mul nsw <4 x i16> %167, %146
  %169 = add <4 x i16> %168, %109
  %170 = add nsw i64 %81, 13
  %171 = getelementptr inbounds i8, ptr %p0, i64 %170
  %172 = load i8, ptr %171, align 1, !tbaa !8033
  %173 = insertelement <4 x i8> undef, i8 %172, i64 0
  %174 = shufflevector <4 x i8> %173, <4 x i8> undef, <4 x i32> zeroinitializer
  %175 = sext <4 x i8> %174 to <4 x i16>
  %176 = mul nsw <4 x i16> %175, %146
  %177 = add <4 x i16> %176, %117
  %178 = add nsw i64 %81, 17
  %179 = getelementptr inbounds i8, ptr %p0, i64 %178
  %180 = load i8, ptr %179, align 1, !tbaa !8033
  %181 = insertelement <4 x i8> undef, i8 %180, i64 0
  %182 = shufflevector <4 x i8> %181, <4 x i8> undef, <4 x i32> zeroinitializer
  %183 = sext <4 x i8> %182 to <4 x i16>
  %184 = mul nsw <4 x i16> %183, %146
  %185 = add <4 x i16> %184, %125
  %186 = add nsw i64 %81, 21
  %187 = getelementptr inbounds i8, ptr %p0, i64 %186
  %188 = load i8, ptr %187, align 1, !tbaa !8033
  %189 = insertelement <4 x i8> undef, i8 %188, i64 0
  %190 = shufflevector <4 x i8> %189, <4 x i8> undef, <4 x i32> zeroinitializer
  %191 = sext <4 x i8> %190 to <4 x i16>
  %192 = mul nsw <4 x i16> %191, %146
  %193 = add <4 x i16> %192, %133
  %194 = add nsw i64 %81, 25
  %195 = getelementptr inbounds i8, ptr %p0, i64 %194
  %196 = load i8, ptr %195, align 1, !tbaa !8033
  %197 = insertelement <4 x i8> undef, i8 %196, i64 0
  %198 = shufflevector <4 x i8> %197, <4 x i8> undef, <4 x i32> zeroinitializer
  %199 = sext <4 x i8> %198 to <4 x i16>
  %200 = mul nsw <4 x i16> %199, %146
  %201 = add <4 x i16> %200, %141
  %202 = or i64 %81, 2
  %203 = or i64 %83, 8
  %204 = getelementptr inbounds i8, ptr %p1, i64 %203
  %205 = load <4 x i8>, ptr %204, align 4, !tbaa !8031
  %206 = sext <4 x i8> %205 to <4 x i16>
  %207 = getelementptr inbounds i8, ptr %p0, i64 %202
  %208 = load i8, ptr %207, align 1, !tbaa !8033
  %209 = insertelement <4 x i8> undef, i8 %208, i64 0
  %210 = shufflevector <4 x i8> %209, <4 x i8> undef, <4 x i32> zeroinitializer
  %211 = sext <4 x i8> %210 to <4 x i16>
  %212 = mul nsw <4 x i16> %211, %206
  %213 = add <4 x i16> %212, %153
  %214 = add nsw i64 %81, 6
  %215 = getelementptr inbounds i8, ptr %p0, i64 %214
  %216 = load i8, ptr %215, align 1, !tbaa !8033
  %217 = insertelement <4 x i8> undef, i8 %216, i64 0
  %218 = shufflevector <4 x i8> %217, <4 x i8> undef, <4 x i32> zeroinitializer
  %219 = sext <4 x i8> %218 to <4 x i16>
  %220 = mul nsw <4 x i16> %219, %206
  %221 = add <4 x i16> %220, %161
  %222 = add nsw i64 %81, 10
  %223 = getelementptr inbounds i8, ptr %p0, i64 %222
  %224 = load i8, ptr %223, align 1, !tbaa !8033
  %225 = insertelement <4 x i8> undef, i8 %224, i64 0
  %226 = shufflevector <4 x i8> %225, <4 x i8> undef, <4 x i32> zeroinitializer
  %227 = sext <4 x i8> %226 to <4 x i16>
  %228 = mul nsw <4 x i16> %227, %206
  %229 = add <4 x i16> %228, %169
  %230 = add nsw i64 %81, 14
  %231 = getelementptr inbounds i8, ptr %p0, i64 %230
  %232 = load i8, ptr %231, align 1, !tbaa !8033
  %233 = insertelement <4 x i8> undef, i8 %232, i64 0
  %234 = shufflevector <4 x i8> %233, <4 x i8> undef, <4 x i32> zeroinitializer
  %235 = sext <4 x i8> %234 to <4 x i16>
  %236 = mul nsw <4 x i16> %235, %206
  %237 = add <4 x i16> %236, %177
  %238 = add nsw i64 %81, 18
  %239 = getelementptr inbounds i8, ptr %p0, i64 %238
  %240 = load i8, ptr %239, align 1, !tbaa !8033
  %241 = insertelement <4 x i8> undef, i8 %240, i64 0
  %242 = shufflevector <4 x i8> %241, <4 x i8> undef, <4 x i32> zeroinitializer
  %243 = sext <4 x i8> %242 to <4 x i16>
  %244 = mul nsw <4 x i16> %243, %206
  %245 = add <4 x i16> %244, %185
  %246 = add nsw i64 %81, 22
  %247 = getelementptr inbounds i8, ptr %p0, i64 %246
  %248 = load i8, ptr %247, align 1, !tbaa !8033
  %249 = insertelement <4 x i8> undef, i8 %248, i64 0
  %250 = shufflevector <4 x i8> %249, <4 x i8> undef, <4 x i32> zeroinitializer
  %251 = sext <4 x i8> %250 to <4 x i16>
  %252 = mul nsw <4 x i16> %251, %206
  %253 = add <4 x i16> %252, %193
  %254 = add nsw i64 %81, 26
  %255 = getelementptr inbounds i8, ptr %p0, i64 %254
  %256 = load i8, ptr %255, align 1, !tbaa !8033
  %257 = insertelement <4 x i8> undef, i8 %256, i64 0
  %258 = shufflevector <4 x i8> %257, <4 x i8> undef, <4 x i32> zeroinitializer
  %259 = sext <4 x i8> %258 to <4 x i16>
  %260 = mul nsw <4 x i16> %259, %206
  %261 = add <4 x i16> %260, %201
  %262 = or i64 %81, 3
  %263 = or i64 %83, 12
  %264 = getelementptr inbounds i8, ptr %p1, i64 %263
  %265 = load <4 x i8>, ptr %264, align 4, !tbaa !8031
  %266 = sext <4 x i8> %265 to <4 x i16>
  %267 = getelementptr inbounds i8, ptr %p0, i64 %262
  %268 = load i8, ptr %267, align 1, !tbaa !8033
  %269 = insertelement <4 x i8> undef, i8 %268, i64 0
  %270 = shufflevector <4 x i8> %269, <4 x i8> undef, <4 x i32> zeroinitializer
  %271 = sext <4 x i8> %270 to <4 x i16>
  %272 = mul nsw <4 x i16> %271, %266
  %273 = add <4 x i16> %272, %213
  %274 = add nsw i64 %81, 7
  %275 = getelementptr inbounds i8, ptr %p0, i64 %274
  %276 = load i8, ptr %275, align 1, !tbaa !8033
  %277 = insertelement <4 x i8> undef, i8 %276, i64 0
  %278 = shufflevector <4 x i8> %277, <4 x i8> undef, <4 x i32> zeroinitializer
  %279 = sext <4 x i8> %278 to <4 x i16>
  %280 = mul nsw <4 x i16> %279, %266
  %281 = add <4 x i16> %280, %221
  %282 = add nsw i64 %81, 11
  %283 = getelementptr inbounds i8, ptr %p0, i64 %282
  %284 = load i8, ptr %283, align 1, !tbaa !8033
  %285 = insertelement <4 x i8> undef, i8 %284, i64 0
  %286 = shufflevector <4 x i8> %285, <4 x i8> undef, <4 x i32> zeroinitializer
  %287 = sext <4 x i8> %286 to <4 x i16>
  %288 = mul nsw <4 x i16> %287, %266
  %289 = add <4 x i16> %288, %229
  %290 = add nsw i64 %81, 15
  %291 = getelementptr inbounds i8, ptr %p0, i64 %290
  %292 = load i8, ptr %291, align 1, !tbaa !8033
  %293 = insertelement <4 x i8> undef, i8 %292, i64 0
  %294 = shufflevector <4 x i8> %293, <4 x i8> undef, <4 x i32> zeroinitializer
  %295 = sext <4 x i8> %294 to <4 x i16>
  %296 = mul nsw <4 x i16> %295, %266
  %297 = add <4 x i16> %296, %237
  %298 = add nsw i64 %81, 19
  %299 = getelementptr inbounds i8, ptr %p0, i64 %298
  %300 = load i8, ptr %299, align 1, !tbaa !8033
  %301 = insertelement <4 x i8> undef, i8 %300, i64 0
  %302 = shufflevector <4 x i8> %301, <4 x i8> undef, <4 x i32> zeroinitializer
  %303 = sext <4 x i8> %302 to <4 x i16>
  %304 = mul nsw <4 x i16> %303, %266
  %305 = add <4 x i16> %304, %245
  %306 = add nsw i64 %81, 23
  %307 = getelementptr inbounds i8, ptr %p0, i64 %306
  %308 = load i8, ptr %307, align 1, !tbaa !8033
  %309 = insertelement <4 x i8> undef, i8 %308, i64 0
  %310 = shufflevector <4 x i8> %309, <4 x i8> undef, <4 x i32> zeroinitializer
  %311 = sext <4 x i8> %310 to <4 x i16>
  %312 = mul nsw <4 x i16> %311, %266
  %313 = add <4 x i16> %312, %253
  %314 = add nsw i64 %81, 27
  %315 = getelementptr inbounds i8, ptr %p0, i64 %314
  %316 = load i8, ptr %315, align 1, !tbaa !8033
  %317 = insertelement <4 x i8> undef, i8 %316, i64 0
  %318 = shufflevector <4 x i8> %317, <4 x i8> undef, <4 x i32> zeroinitializer
  %319 = sext <4 x i8> %318 to <4 x i16>
  %320 = mul nsw <4 x i16> %319, %266
  %321 = add <4 x i16> %320, %261
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 128
  br i1 %exitcond.not, label %for_begin_ax3.inner.preheader, label %for_begin_ic.inner.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_19_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.34, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.34, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.34, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.34, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.34, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1667, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1667(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.34, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.34, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 3583
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 3584)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 3584)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph:     ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.34, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.34, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = load i16, ptr %p3, align 64, !tbaa !8035
  %16 = insertelement <4 x i16> undef, i16 %15, i64 0
  %17 = shufflevector <4 x i16> %16, <4 x i16> undef, <4 x i32> zeroinitializer
  %18 = load i16, ptr %p2, align 64, !tbaa !8047
  %19 = insertelement <4 x i16> undef, i16 %18, i64 0
  %20 = shufflevector <4 x i16> %19, <4 x i16> undef, <4 x i32> zeroinitializer
  %21 = tail call i32 @llvm.smin.i32(i32 %10, i32 3584)
  %smin = sext i32 %21 to i64
  %22 = add i32 %9, %21
  %23 = sub i32 %22, %11
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, %for_begin_ax3.inner.preheader
  %indvars.iv53 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph ], [ %indvars.iv.next54, %for_begin_ax3.inner.preheader ]
  %24 = trunc i64 %indvars.iv53 to i32
  %25 = srem i32 %24, 7
  %26 = mul nsw i32 %25, 112
  %27 = sdiv i32 %24, 7
  %28 = shl nsw i32 %27, 12
  %29 = sext i32 %26 to i64
  %30 = sext i32 %28 to i64
  br label %for_begin_ic.inner.preheader

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_begin_ax3.inner.preheader, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_begin_ic.inner.preheader
  %31 = mul nsw i64 %indvars.iv53, 28
  %32 = add <4 x i16> %20, %273
  %33 = ashr <4 x i16> %32, %17
  %34 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %33, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %35 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %34, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %36 = trunc <4 x i16> %35 to <4 x i8>
  %37 = getelementptr inbounds i8, ptr %T_cast, i64 %31
  store <4 x i8> %36, ptr %37, align 4, !tbaa !8059
  %38 = add <4 x i16> %20, %281
  %39 = ashr <4 x i16> %38, %17
  %40 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %39, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %41 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %40, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %42 = trunc <4 x i16> %41 to <4 x i8>
  %43 = add nsw i64 %31, 4
  %44 = getelementptr inbounds i8, ptr %T_cast, i64 %43
  store <4 x i8> %42, ptr %44, align 4, !tbaa !8059
  %45 = add <4 x i16> %20, %289
  %46 = ashr <4 x i16> %45, %17
  %47 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %46, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %48 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %47, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %49 = trunc <4 x i16> %48 to <4 x i8>
  %50 = add nsw i64 %31, 8
  %51 = getelementptr inbounds i8, ptr %T_cast, i64 %50
  store <4 x i8> %49, ptr %51, align 4, !tbaa !8059
  %52 = add <4 x i16> %20, %297
  %53 = ashr <4 x i16> %52, %17
  %54 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %53, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %55 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %54, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %56 = trunc <4 x i16> %55 to <4 x i8>
  %57 = add nsw i64 %31, 12
  %58 = getelementptr inbounds i8, ptr %T_cast, i64 %57
  store <4 x i8> %56, ptr %58, align 4, !tbaa !8059
  %59 = add <4 x i16> %20, %305
  %60 = ashr <4 x i16> %59, %17
  %61 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %60, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %62 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %61, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %63 = trunc <4 x i16> %62 to <4 x i8>
  %64 = add nsw i64 %31, 16
  %65 = getelementptr inbounds i8, ptr %T_cast, i64 %64
  store <4 x i8> %63, ptr %65, align 4, !tbaa !8059
  %66 = add <4 x i16> %20, %313
  %67 = ashr <4 x i16> %66, %17
  %68 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %67, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %69 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %68, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %70 = trunc <4 x i16> %69 to <4 x i8>
  %71 = add nsw i64 %31, 20
  %72 = getelementptr inbounds i8, ptr %T_cast, i64 %71
  store <4 x i8> %70, ptr %72, align 4, !tbaa !8059
  %73 = add <4 x i16> %20, %321
  %74 = ashr <4 x i16> %73, %17
  %75 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %74, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %76 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %75, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %77 = trunc <4 x i16> %76 to <4 x i8>
  %78 = add nsw i64 %31, 24
  %79 = getelementptr inbounds i8, ptr %T_cast, i64 %78
  store <4 x i8> %77, ptr %79, align 4, !tbaa !8059
  %indvars.iv.next54 = add nsw i64 %indvars.iv53, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next54 to i32
  %exitcond55.not = icmp eq i32 %23, %lftr.wideiv
  br i1 %exitcond55.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !59

for_begin_ic.inner.preheader:                     ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused, %for_begin_ic.inner.preheader
  %indvars.iv = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %indvars.iv.next, %for_begin_ic.inner.preheader ]
  %.lcssa1533 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %273, %for_begin_ic.inner.preheader ]
  %.lcssa21732 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %281, %for_begin_ic.inner.preheader ]
  %.lcssa41831 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %289, %for_begin_ic.inner.preheader ]
  %.lcssa62030 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %297, %for_begin_ic.inner.preheader ]
  %.lcssa82229 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %305, %for_begin_ic.inner.preheader ]
  %.lcssa102428 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %313, %for_begin_ic.inner.preheader ]
  %.lcssa122627 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %321, %for_begin_ic.inner.preheader ]
  %80 = mul nuw nsw i64 %indvars.iv, 784
  %81 = add nsw i64 %80, %29
  %82 = shl nsw i64 %indvars.iv, 4
  %83 = add nuw nsw i64 %82, %30
  %84 = getelementptr inbounds i8, ptr %p1, i64 %83
  %85 = load <4 x i8>, ptr %84, align 4, !tbaa !8061
  %86 = sext <4 x i8> %85 to <4 x i16>
  %87 = getelementptr inbounds i8, ptr %p0, i64 %81
  %88 = load i8, ptr %87, align 1, !tbaa !8063
  %89 = insertelement <4 x i8> undef, i8 %88, i64 0
  %90 = shufflevector <4 x i8> %89, <4 x i8> undef, <4 x i32> zeroinitializer
  %91 = sext <4 x i8> %90 to <4 x i16>
  %92 = mul nsw <4 x i16> %91, %86
  %93 = add <4 x i16> %92, %.lcssa1533
  %94 = or i64 %81, 8
  %95 = getelementptr inbounds i8, ptr %p0, i64 %94
  %96 = load i8, ptr %95, align 1, !tbaa !8063
  %97 = insertelement <4 x i8> undef, i8 %96, i64 0
  %98 = shufflevector <4 x i8> %97, <4 x i8> undef, <4 x i32> zeroinitializer
  %99 = sext <4 x i8> %98 to <4 x i16>
  %100 = mul nsw <4 x i16> %99, %86
  %101 = add <4 x i16> %100, %.lcssa21732
  %102 = add nsw i64 %81, 16
  %103 = getelementptr inbounds i8, ptr %p0, i64 %102
  %104 = load i8, ptr %103, align 1, !tbaa !8063
  %105 = insertelement <4 x i8> undef, i8 %104, i64 0
  %106 = shufflevector <4 x i8> %105, <4 x i8> undef, <4 x i32> zeroinitializer
  %107 = sext <4 x i8> %106 to <4 x i16>
  %108 = mul nsw <4 x i16> %107, %86
  %109 = add <4 x i16> %108, %.lcssa41831
  %110 = add nsw i64 %81, 24
  %111 = getelementptr inbounds i8, ptr %p0, i64 %110
  %112 = load i8, ptr %111, align 1, !tbaa !8063
  %113 = insertelement <4 x i8> undef, i8 %112, i64 0
  %114 = shufflevector <4 x i8> %113, <4 x i8> undef, <4 x i32> zeroinitializer
  %115 = sext <4 x i8> %114 to <4 x i16>
  %116 = mul nsw <4 x i16> %115, %86
  %117 = add <4 x i16> %116, %.lcssa62030
  %118 = add nsw i64 %81, 32
  %119 = getelementptr inbounds i8, ptr %p0, i64 %118
  %120 = load i8, ptr %119, align 1, !tbaa !8063
  %121 = insertelement <4 x i8> undef, i8 %120, i64 0
  %122 = shufflevector <4 x i8> %121, <4 x i8> undef, <4 x i32> zeroinitializer
  %123 = sext <4 x i8> %122 to <4 x i16>
  %124 = mul nsw <4 x i16> %123, %86
  %125 = add <4 x i16> %124, %.lcssa82229
  %126 = add nsw i64 %81, 40
  %127 = getelementptr inbounds i8, ptr %p0, i64 %126
  %128 = load i8, ptr %127, align 1, !tbaa !8063
  %129 = insertelement <4 x i8> undef, i8 %128, i64 0
  %130 = shufflevector <4 x i8> %129, <4 x i8> undef, <4 x i32> zeroinitializer
  %131 = sext <4 x i8> %130 to <4 x i16>
  %132 = mul nsw <4 x i16> %131, %86
  %133 = add <4 x i16> %132, %.lcssa102428
  %134 = add nsw i64 %81, 48
  %135 = getelementptr inbounds i8, ptr %p0, i64 %134
  %136 = load i8, ptr %135, align 1, !tbaa !8063
  %137 = insertelement <4 x i8> undef, i8 %136, i64 0
  %138 = shufflevector <4 x i8> %137, <4 x i8> undef, <4 x i32> zeroinitializer
  %139 = sext <4 x i8> %138 to <4 x i16>
  %140 = mul nsw <4 x i16> %139, %86
  %141 = add <4 x i16> %140, %.lcssa122627
  %142 = or i64 %81, 1
  %143 = or i64 %83, 4
  %144 = getelementptr inbounds i8, ptr %p1, i64 %143
  %145 = load <4 x i8>, ptr %144, align 4, !tbaa !8061
  %146 = sext <4 x i8> %145 to <4 x i16>
  %147 = getelementptr inbounds i8, ptr %p0, i64 %142
  %148 = load i8, ptr %147, align 1, !tbaa !8063
  %149 = insertelement <4 x i8> undef, i8 %148, i64 0
  %150 = shufflevector <4 x i8> %149, <4 x i8> undef, <4 x i32> zeroinitializer
  %151 = sext <4 x i8> %150 to <4 x i16>
  %152 = mul nsw <4 x i16> %151, %146
  %153 = add <4 x i16> %152, %93
  %154 = or i64 %81, 9
  %155 = getelementptr inbounds i8, ptr %p0, i64 %154
  %156 = load i8, ptr %155, align 1, !tbaa !8063
  %157 = insertelement <4 x i8> undef, i8 %156, i64 0
  %158 = shufflevector <4 x i8> %157, <4 x i8> undef, <4 x i32> zeroinitializer
  %159 = sext <4 x i8> %158 to <4 x i16>
  %160 = mul nsw <4 x i16> %159, %146
  %161 = add <4 x i16> %160, %101
  %162 = add nsw i64 %81, 17
  %163 = getelementptr inbounds i8, ptr %p0, i64 %162
  %164 = load i8, ptr %163, align 1, !tbaa !8063
  %165 = insertelement <4 x i8> undef, i8 %164, i64 0
  %166 = shufflevector <4 x i8> %165, <4 x i8> undef, <4 x i32> zeroinitializer
  %167 = sext <4 x i8> %166 to <4 x i16>
  %168 = mul nsw <4 x i16> %167, %146
  %169 = add <4 x i16> %168, %109
  %170 = add nsw i64 %81, 25
  %171 = getelementptr inbounds i8, ptr %p0, i64 %170
  %172 = load i8, ptr %171, align 1, !tbaa !8063
  %173 = insertelement <4 x i8> undef, i8 %172, i64 0
  %174 = shufflevector <4 x i8> %173, <4 x i8> undef, <4 x i32> zeroinitializer
  %175 = sext <4 x i8> %174 to <4 x i16>
  %176 = mul nsw <4 x i16> %175, %146
  %177 = add <4 x i16> %176, %117
  %178 = add nsw i64 %81, 33
  %179 = getelementptr inbounds i8, ptr %p0, i64 %178
  %180 = load i8, ptr %179, align 1, !tbaa !8063
  %181 = insertelement <4 x i8> undef, i8 %180, i64 0
  %182 = shufflevector <4 x i8> %181, <4 x i8> undef, <4 x i32> zeroinitializer
  %183 = sext <4 x i8> %182 to <4 x i16>
  %184 = mul nsw <4 x i16> %183, %146
  %185 = add <4 x i16> %184, %125
  %186 = add nsw i64 %81, 41
  %187 = getelementptr inbounds i8, ptr %p0, i64 %186
  %188 = load i8, ptr %187, align 1, !tbaa !8063
  %189 = insertelement <4 x i8> undef, i8 %188, i64 0
  %190 = shufflevector <4 x i8> %189, <4 x i8> undef, <4 x i32> zeroinitializer
  %191 = sext <4 x i8> %190 to <4 x i16>
  %192 = mul nsw <4 x i16> %191, %146
  %193 = add <4 x i16> %192, %133
  %194 = add nsw i64 %81, 49
  %195 = getelementptr inbounds i8, ptr %p0, i64 %194
  %196 = load i8, ptr %195, align 1, !tbaa !8063
  %197 = insertelement <4 x i8> undef, i8 %196, i64 0
  %198 = shufflevector <4 x i8> %197, <4 x i8> undef, <4 x i32> zeroinitializer
  %199 = sext <4 x i8> %198 to <4 x i16>
  %200 = mul nsw <4 x i16> %199, %146
  %201 = add <4 x i16> %200, %141
  %202 = or i64 %81, 2
  %203 = or i64 %83, 8
  %204 = getelementptr inbounds i8, ptr %p1, i64 %203
  %205 = load <4 x i8>, ptr %204, align 4, !tbaa !8061
  %206 = sext <4 x i8> %205 to <4 x i16>
  %207 = getelementptr inbounds i8, ptr %p0, i64 %202
  %208 = load i8, ptr %207, align 1, !tbaa !8063
  %209 = insertelement <4 x i8> undef, i8 %208, i64 0
  %210 = shufflevector <4 x i8> %209, <4 x i8> undef, <4 x i32> zeroinitializer
  %211 = sext <4 x i8> %210 to <4 x i16>
  %212 = mul nsw <4 x i16> %211, %206
  %213 = add <4 x i16> %212, %153
  %214 = or i64 %81, 10
  %215 = getelementptr inbounds i8, ptr %p0, i64 %214
  %216 = load i8, ptr %215, align 1, !tbaa !8063
  %217 = insertelement <4 x i8> undef, i8 %216, i64 0
  %218 = shufflevector <4 x i8> %217, <4 x i8> undef, <4 x i32> zeroinitializer
  %219 = sext <4 x i8> %218 to <4 x i16>
  %220 = mul nsw <4 x i16> %219, %206
  %221 = add <4 x i16> %220, %161
  %222 = add nsw i64 %81, 18
  %223 = getelementptr inbounds i8, ptr %p0, i64 %222
  %224 = load i8, ptr %223, align 1, !tbaa !8063
  %225 = insertelement <4 x i8> undef, i8 %224, i64 0
  %226 = shufflevector <4 x i8> %225, <4 x i8> undef, <4 x i32> zeroinitializer
  %227 = sext <4 x i8> %226 to <4 x i16>
  %228 = mul nsw <4 x i16> %227, %206
  %229 = add <4 x i16> %228, %169
  %230 = add nsw i64 %81, 26
  %231 = getelementptr inbounds i8, ptr %p0, i64 %230
  %232 = load i8, ptr %231, align 1, !tbaa !8063
  %233 = insertelement <4 x i8> undef, i8 %232, i64 0
  %234 = shufflevector <4 x i8> %233, <4 x i8> undef, <4 x i32> zeroinitializer
  %235 = sext <4 x i8> %234 to <4 x i16>
  %236 = mul nsw <4 x i16> %235, %206
  %237 = add <4 x i16> %236, %177
  %238 = add nsw i64 %81, 34
  %239 = getelementptr inbounds i8, ptr %p0, i64 %238
  %240 = load i8, ptr %239, align 1, !tbaa !8063
  %241 = insertelement <4 x i8> undef, i8 %240, i64 0
  %242 = shufflevector <4 x i8> %241, <4 x i8> undef, <4 x i32> zeroinitializer
  %243 = sext <4 x i8> %242 to <4 x i16>
  %244 = mul nsw <4 x i16> %243, %206
  %245 = add <4 x i16> %244, %185
  %246 = add nsw i64 %81, 42
  %247 = getelementptr inbounds i8, ptr %p0, i64 %246
  %248 = load i8, ptr %247, align 1, !tbaa !8063
  %249 = insertelement <4 x i8> undef, i8 %248, i64 0
  %250 = shufflevector <4 x i8> %249, <4 x i8> undef, <4 x i32> zeroinitializer
  %251 = sext <4 x i8> %250 to <4 x i16>
  %252 = mul nsw <4 x i16> %251, %206
  %253 = add <4 x i16> %252, %193
  %254 = add nsw i64 %81, 50
  %255 = getelementptr inbounds i8, ptr %p0, i64 %254
  %256 = load i8, ptr %255, align 1, !tbaa !8063
  %257 = insertelement <4 x i8> undef, i8 %256, i64 0
  %258 = shufflevector <4 x i8> %257, <4 x i8> undef, <4 x i32> zeroinitializer
  %259 = sext <4 x i8> %258 to <4 x i16>
  %260 = mul nsw <4 x i16> %259, %206
  %261 = add <4 x i16> %260, %201
  %262 = or i64 %81, 3
  %263 = or i64 %83, 12
  %264 = getelementptr inbounds i8, ptr %p1, i64 %263
  %265 = load <4 x i8>, ptr %264, align 4, !tbaa !8061
  %266 = sext <4 x i8> %265 to <4 x i16>
  %267 = getelementptr inbounds i8, ptr %p0, i64 %262
  %268 = load i8, ptr %267, align 1, !tbaa !8063
  %269 = insertelement <4 x i8> undef, i8 %268, i64 0
  %270 = shufflevector <4 x i8> %269, <4 x i8> undef, <4 x i32> zeroinitializer
  %271 = sext <4 x i8> %270 to <4 x i16>
  %272 = mul nsw <4 x i16> %271, %266
  %273 = add <4 x i16> %272, %213
  %274 = or i64 %81, 11
  %275 = getelementptr inbounds i8, ptr %p0, i64 %274
  %276 = load i8, ptr %275, align 1, !tbaa !8063
  %277 = insertelement <4 x i8> undef, i8 %276, i64 0
  %278 = shufflevector <4 x i8> %277, <4 x i8> undef, <4 x i32> zeroinitializer
  %279 = sext <4 x i8> %278 to <4 x i16>
  %280 = mul nsw <4 x i16> %279, %266
  %281 = add <4 x i16> %280, %221
  %282 = add nsw i64 %81, 19
  %283 = getelementptr inbounds i8, ptr %p0, i64 %282
  %284 = load i8, ptr %283, align 1, !tbaa !8063
  %285 = insertelement <4 x i8> undef, i8 %284, i64 0
  %286 = shufflevector <4 x i8> %285, <4 x i8> undef, <4 x i32> zeroinitializer
  %287 = sext <4 x i8> %286 to <4 x i16>
  %288 = mul nsw <4 x i16> %287, %266
  %289 = add <4 x i16> %288, %229
  %290 = add nsw i64 %81, 27
  %291 = getelementptr inbounds i8, ptr %p0, i64 %290
  %292 = load i8, ptr %291, align 1, !tbaa !8063
  %293 = insertelement <4 x i8> undef, i8 %292, i64 0
  %294 = shufflevector <4 x i8> %293, <4 x i8> undef, <4 x i32> zeroinitializer
  %295 = sext <4 x i8> %294 to <4 x i16>
  %296 = mul nsw <4 x i16> %295, %266
  %297 = add <4 x i16> %296, %237
  %298 = add nsw i64 %81, 35
  %299 = getelementptr inbounds i8, ptr %p0, i64 %298
  %300 = load i8, ptr %299, align 1, !tbaa !8063
  %301 = insertelement <4 x i8> undef, i8 %300, i64 0
  %302 = shufflevector <4 x i8> %301, <4 x i8> undef, <4 x i32> zeroinitializer
  %303 = sext <4 x i8> %302 to <4 x i16>
  %304 = mul nsw <4 x i16> %303, %266
  %305 = add <4 x i16> %304, %245
  %306 = add nsw i64 %81, 43
  %307 = getelementptr inbounds i8, ptr %p0, i64 %306
  %308 = load i8, ptr %307, align 1, !tbaa !8063
  %309 = insertelement <4 x i8> undef, i8 %308, i64 0
  %310 = shufflevector <4 x i8> %309, <4 x i8> undef, <4 x i32> zeroinitializer
  %311 = sext <4 x i8> %310 to <4 x i16>
  %312 = mul nsw <4 x i16> %311, %266
  %313 = add <4 x i16> %312, %253
  %314 = add nsw i64 %81, 51
  %315 = getelementptr inbounds i8, ptr %p0, i64 %314
  %316 = load i8, ptr %315, align 1, !tbaa !8063
  %317 = insertelement <4 x i8> undef, i8 %316, i64 0
  %318 = shufflevector <4 x i8> %317, <4 x i8> undef, <4 x i32> zeroinitializer
  %319 = sext <4 x i8> %318 to <4 x i16>
  %320 = mul nsw <4 x i16> %319, %266
  %321 = add <4 x i16> %320, %261
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 256
  br i1 %exitcond.not, label %for_begin_ax3.inner.preheader, label %for_begin_ic.inner.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_2_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.35, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.35, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.35, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.35, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.35, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1717, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1717(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %conv2d_NCHWc.global1 = alloca [56 x <4 x i16>], align 16
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.35, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.35, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 3583
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 3584)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 3584)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_begin_ow.c.outer.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_begin_ow.c.outer.preheader.preheader:         ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.35, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.35, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = tail call i32 @llvm.smin.i32(i32 %10, i32 3584)
  %smin = sext i32 %15 to i64
  %16 = add i32 %9, %15
  %17 = sub i32 %16, %11
  %18 = load i16, ptr %p3, align 64, !tbaa !8065
  %19 = insertelement <4 x i16> undef, i16 %18, i64 0
  %20 = shufflevector <4 x i16> %19, <4 x i16> undef, <4 x i32> zeroinitializer
  %21 = load i16, ptr %p2, align 64, !tbaa !8077
  %22 = insertelement <4 x i16> undef, i16 %21, i64 0
  %23 = shufflevector <4 x i16> %22, <4 x i16> undef, <4 x i32> zeroinitializer
  br label %for_begin_ow.c.outer.preheader

for_begin_ow.c.outer.preheader:                   ; preds = %for_begin_ow.c.outer.preheader.preheader, %for_end_ax3.inner.1
  %indvars.iv190 = phi i64 [ %smin, %for_begin_ow.c.outer.preheader.preheader ], [ %indvars.iv.next191, %for_end_ax3.inner.1 ]
  %24 = trunc i64 %indvars.iv190 to i32
  %25 = sdiv i32 %24, 56
  %26 = shl nsw i32 %25, 8
  %27 = srem i32 %24, 56
  %28 = mul nsw i32 %27, 224
  %29 = sext i32 %26 to i64
  %30 = sext i32 %28 to i64
  br label %for_body_ow.c.outer

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_end_ax3.inner.1, %parallel_closure_entry
  ret i32 0

for_begin_ax3.outer.preheader:                    ; preds = %for_end_ic.outer
  %31 = mul nsw i64 %indvars.iv190, 224
  br label %for_body_ax3.inner

for_body_ow.c.outer:                              ; preds = %for_begin_ow.c.outer.preheader, %for_end_ic.outer
  %32 = phi i1 [ true, %for_begin_ow.c.outer.preheader ], [ false, %for_end_ic.outer ]
  %indvars.iv179 = phi i64 [ 0, %for_begin_ow.c.outer.preheader ], [ 1, %for_end_ic.outer ]
  %33 = mul nuw nsw i64 %indvars.iv179, 28
  %34 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %33
  store <4 x i16> zeroinitializer, ptr %34, align 16, !tbaa !8089
  %35 = or i64 %33, 1
  %36 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %35
  store <4 x i16> zeroinitializer, ptr %36, align 8, !tbaa !8089
  %37 = or i64 %33, 2
  %38 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %37
  store <4 x i16> zeroinitializer, ptr %38, align 16, !tbaa !8089
  %39 = or i64 %33, 3
  %40 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %39
  store <4 x i16> zeroinitializer, ptr %40, align 8, !tbaa !8089
  %41 = add nuw nsw i64 %33, 4
  %42 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %41
  store <4 x i16> zeroinitializer, ptr %42, align 16, !tbaa !8089
  %43 = add nuw nsw i64 %33, 5
  %44 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %43
  store <4 x i16> zeroinitializer, ptr %44, align 8, !tbaa !8089
  %45 = add nuw nsw i64 %33, 6
  %46 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %45
  store <4 x i16> zeroinitializer, ptr %46, align 16, !tbaa !8089
  %47 = add nuw nsw i64 %33, 7
  %48 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %47
  store <4 x i16> zeroinitializer, ptr %48, align 8, !tbaa !8089
  %49 = add nuw nsw i64 %33, 8
  %50 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %49
  store <4 x i16> zeroinitializer, ptr %50, align 16, !tbaa !8089
  %51 = add nuw nsw i64 %33, 9
  %52 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %51
  store <4 x i16> zeroinitializer, ptr %52, align 8, !tbaa !8089
  %53 = add nuw nsw i64 %33, 10
  %54 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %53
  store <4 x i16> zeroinitializer, ptr %54, align 16, !tbaa !8089
  %55 = add nuw nsw i64 %33, 11
  %56 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %55
  store <4 x i16> zeroinitializer, ptr %56, align 8, !tbaa !8089
  %57 = add nuw nsw i64 %33, 12
  %58 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %57
  store <4 x i16> zeroinitializer, ptr %58, align 16, !tbaa !8089
  %59 = add nuw nsw i64 %33, 13
  %60 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %59
  %61 = add nuw nsw i64 %33, 14
  %62 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %61
  %63 = add nuw nsw i64 %33, 15
  %64 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %63
  %65 = add nuw nsw i64 %33, 16
  %66 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %65
  %67 = add nuw nsw i64 %33, 17
  %68 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %67
  %69 = add nuw nsw i64 %33, 18
  %70 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %69
  %71 = add nuw nsw i64 %33, 19
  %72 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %71
  %73 = add nuw nsw i64 %33, 20
  %74 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %73
  %75 = add nuw nsw i64 %33, 21
  %76 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %75
  %77 = add nuw nsw i64 %33, 22
  %78 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %77
  %79 = add nuw nsw i64 %33, 23
  %80 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %79
  %81 = add nuw nsw i64 %33, 24
  %82 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %81
  %83 = add nuw nsw i64 %33, 25
  %84 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %83
  %85 = add nuw nsw i64 %33, 26
  %86 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %85
  %87 = add nuw nsw i64 %33, 27
  %88 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %87
  %89 = mul nuw nsw i64 %indvars.iv179, 112
  %90 = add nsw i64 %89, %30
  br label %for_begin_ic.inner.preheader

for_begin_ic.inner.preheader:                     ; preds = %for_body_ow.c.outer, %for_end_ic.inner
  %indvars.iv175 = phi i64 [ 0, %for_body_ow.c.outer ], [ %indvars.iv.next176, %for_end_ic.inner ]
  %.lcssa58139 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %135, %for_end_ic.inner ]
  %.lcssa359138 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %143, %for_end_ic.inner ]
  %.lcssa561137 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %151, %for_end_ic.inner ]
  %.lcssa763136 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %159, %for_end_ic.inner ]
  %.lcssa965135 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %167, %for_end_ic.inner ]
  %.lcssa1167134 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %175, %for_end_ic.inner ]
  %.lcssa1369133 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %183, %for_end_ic.inner ]
  %.lcssa1571132 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %191, %for_end_ic.inner ]
  %.lcssa1773131 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %199, %for_end_ic.inner ]
  %.lcssa1975130 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %207, %for_end_ic.inner ]
  %.lcssa2177129 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %215, %for_end_ic.inner ]
  %.lcssa2379128 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %223, %for_end_ic.inner ]
  %.lcssa2581127 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %231, %for_end_ic.inner ]
  %.lcssa2783126 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %239, %for_end_ic.inner ]
  %.lcssa2985125 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %247, %for_end_ic.inner ]
  %.lcssa3187124 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %255, %for_end_ic.inner ]
  %.lcssa3389123 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %263, %for_end_ic.inner ]
  %.lcssa3591122 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %271, %for_end_ic.inner ]
  %.lcssa3793121 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %279, %for_end_ic.inner ]
  %.lcssa3995120 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %287, %for_end_ic.inner ]
  %.lcssa4197119 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %295, %for_end_ic.inner ]
  %.lcssa4399118 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %303, %for_end_ic.inner ]
  %.lcssa45101117 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %311, %for_end_ic.inner ]
  %.lcssa47103116 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %319, %for_end_ic.inner ]
  %.lcssa49105115 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %327, %for_end_ic.inner ]
  %.lcssa51107114 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %335, %for_end_ic.inner ]
  %.lcssa53109113 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %343, %for_end_ic.inner ]
  %.lcssa55111112 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %351, %for_end_ic.inner ]
  %91 = shl nsw i64 %indvars.iv175, 4
  %92 = add nuw nsw i64 %91, %29
  %93 = mul nuw nsw i64 %indvars.iv175, 12544
  %94 = add nsw i64 %90, %93
  br label %for_body_ic.inner

for_end_ic.outer:                                 ; preds = %for_end_ic.inner
  store <4 x i16> %135, ptr %34, align 16, !tbaa !8089
  store <4 x i16> %143, ptr %36, align 8, !tbaa !8089
  store <4 x i16> %151, ptr %38, align 16, !tbaa !8089
  store <4 x i16> %159, ptr %40, align 8, !tbaa !8089
  store <4 x i16> %167, ptr %42, align 16, !tbaa !8089
  store <4 x i16> %175, ptr %44, align 8, !tbaa !8089
  store <4 x i16> %183, ptr %46, align 16, !tbaa !8089
  store <4 x i16> %191, ptr %48, align 8, !tbaa !8089
  store <4 x i16> %199, ptr %50, align 16, !tbaa !8089
  store <4 x i16> %207, ptr %52, align 8, !tbaa !8089
  store <4 x i16> %215, ptr %54, align 16, !tbaa !8089
  store <4 x i16> %223, ptr %56, align 8, !tbaa !8089
  store <4 x i16> %231, ptr %58, align 16, !tbaa !8089
  store <4 x i16> %239, ptr %60, align 8, !tbaa !8089
  store <4 x i16> %247, ptr %62, align 16, !tbaa !8089
  store <4 x i16> %255, ptr %64, align 8, !tbaa !8089
  store <4 x i16> %263, ptr %66, align 16, !tbaa !8089
  store <4 x i16> %271, ptr %68, align 8, !tbaa !8089
  store <4 x i16> %279, ptr %70, align 16, !tbaa !8089
  store <4 x i16> %287, ptr %72, align 8, !tbaa !8089
  store <4 x i16> %295, ptr %74, align 16, !tbaa !8089
  store <4 x i16> %303, ptr %76, align 8, !tbaa !8089
  store <4 x i16> %311, ptr %78, align 16, !tbaa !8089
  store <4 x i16> %319, ptr %80, align 8, !tbaa !8089
  store <4 x i16> %327, ptr %82, align 16, !tbaa !8089
  store <4 x i16> %335, ptr %84, align 8, !tbaa !8089
  store <4 x i16> %343, ptr %86, align 16, !tbaa !8089
  store <4 x i16> %351, ptr %88, align 8, !tbaa !8089
  br i1 %32, label %for_body_ow.c.outer, label %for_begin_ax3.outer.preheader, !prof !18

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %95 = phi <4 x i16> [ %.lcssa58139, %for_begin_ic.inner.preheader ], [ %135, %for_body_ic.inner ]
  %96 = phi <4 x i16> [ %.lcssa359138, %for_begin_ic.inner.preheader ], [ %143, %for_body_ic.inner ]
  %97 = phi <4 x i16> [ %.lcssa561137, %for_begin_ic.inner.preheader ], [ %151, %for_body_ic.inner ]
  %98 = phi <4 x i16> [ %.lcssa763136, %for_begin_ic.inner.preheader ], [ %159, %for_body_ic.inner ]
  %99 = phi <4 x i16> [ %.lcssa965135, %for_begin_ic.inner.preheader ], [ %167, %for_body_ic.inner ]
  %100 = phi <4 x i16> [ %.lcssa1167134, %for_begin_ic.inner.preheader ], [ %175, %for_body_ic.inner ]
  %101 = phi <4 x i16> [ %.lcssa1369133, %for_begin_ic.inner.preheader ], [ %183, %for_body_ic.inner ]
  %102 = phi <4 x i16> [ %.lcssa1571132, %for_begin_ic.inner.preheader ], [ %191, %for_body_ic.inner ]
  %103 = phi <4 x i16> [ %.lcssa1773131, %for_begin_ic.inner.preheader ], [ %199, %for_body_ic.inner ]
  %104 = phi <4 x i16> [ %.lcssa1975130, %for_begin_ic.inner.preheader ], [ %207, %for_body_ic.inner ]
  %105 = phi <4 x i16> [ %.lcssa2177129, %for_begin_ic.inner.preheader ], [ %215, %for_body_ic.inner ]
  %106 = phi <4 x i16> [ %.lcssa2379128, %for_begin_ic.inner.preheader ], [ %223, %for_body_ic.inner ]
  %107 = phi <4 x i16> [ %.lcssa2581127, %for_begin_ic.inner.preheader ], [ %231, %for_body_ic.inner ]
  %108 = phi <4 x i16> [ %.lcssa2783126, %for_begin_ic.inner.preheader ], [ %239, %for_body_ic.inner ]
  %109 = phi <4 x i16> [ %.lcssa2985125, %for_begin_ic.inner.preheader ], [ %247, %for_body_ic.inner ]
  %110 = phi <4 x i16> [ %.lcssa3187124, %for_begin_ic.inner.preheader ], [ %255, %for_body_ic.inner ]
  %111 = phi <4 x i16> [ %.lcssa3389123, %for_begin_ic.inner.preheader ], [ %263, %for_body_ic.inner ]
  %112 = phi <4 x i16> [ %.lcssa3591122, %for_begin_ic.inner.preheader ], [ %271, %for_body_ic.inner ]
  %113 = phi <4 x i16> [ %.lcssa3793121, %for_begin_ic.inner.preheader ], [ %279, %for_body_ic.inner ]
  %114 = phi <4 x i16> [ %.lcssa3995120, %for_begin_ic.inner.preheader ], [ %287, %for_body_ic.inner ]
  %115 = phi <4 x i16> [ %.lcssa4197119, %for_begin_ic.inner.preheader ], [ %295, %for_body_ic.inner ]
  %116 = phi <4 x i16> [ %.lcssa4399118, %for_begin_ic.inner.preheader ], [ %303, %for_body_ic.inner ]
  %117 = phi <4 x i16> [ %.lcssa45101117, %for_begin_ic.inner.preheader ], [ %311, %for_body_ic.inner ]
  %118 = phi <4 x i16> [ %.lcssa47103116, %for_begin_ic.inner.preheader ], [ %319, %for_body_ic.inner ]
  %119 = phi <4 x i16> [ %.lcssa49105115, %for_begin_ic.inner.preheader ], [ %327, %for_body_ic.inner ]
  %120 = phi <4 x i16> [ %.lcssa51107114, %for_begin_ic.inner.preheader ], [ %335, %for_body_ic.inner ]
  %121 = phi <4 x i16> [ %.lcssa53109113, %for_begin_ic.inner.preheader ], [ %343, %for_body_ic.inner ]
  %122 = phi <4 x i16> [ %.lcssa55111112, %for_begin_ic.inner.preheader ], [ %351, %for_body_ic.inner ]
  %123 = shl nuw nsw i64 %indvars.iv, 2
  %124 = add nuw nsw i64 %92, %123
  %125 = add nsw i64 %94, %indvars.iv
  %126 = getelementptr inbounds i8, ptr %p1, i64 %124
  %127 = load <4 x i8>, ptr %126, align 4, !tbaa !8091
  %128 = sext <4 x i8> %127 to <4 x i16>
  %129 = getelementptr inbounds i8, ptr %p0, i64 %125
  %130 = load i8, ptr %129, align 1, !tbaa !8093
  %131 = insertelement <4 x i8> undef, i8 %130, i64 0
  %132 = shufflevector <4 x i8> %131, <4 x i8> undef, <4 x i32> zeroinitializer
  %133 = sext <4 x i8> %132 to <4 x i16>
  %134 = mul nsw <4 x i16> %133, %128
  %135 = add <4 x i16> %134, %95
  %136 = add nsw i64 %125, 4
  %137 = getelementptr inbounds i8, ptr %p0, i64 %136
  %138 = load i8, ptr %137, align 1, !tbaa !8093
  %139 = insertelement <4 x i8> undef, i8 %138, i64 0
  %140 = shufflevector <4 x i8> %139, <4 x i8> undef, <4 x i32> zeroinitializer
  %141 = sext <4 x i8> %140 to <4 x i16>
  %142 = mul nsw <4 x i16> %141, %128
  %143 = add <4 x i16> %142, %96
  %144 = add nsw i64 %125, 8
  %145 = getelementptr inbounds i8, ptr %p0, i64 %144
  %146 = load i8, ptr %145, align 1, !tbaa !8093
  %147 = insertelement <4 x i8> undef, i8 %146, i64 0
  %148 = shufflevector <4 x i8> %147, <4 x i8> undef, <4 x i32> zeroinitializer
  %149 = sext <4 x i8> %148 to <4 x i16>
  %150 = mul nsw <4 x i16> %149, %128
  %151 = add <4 x i16> %150, %97
  %152 = add nsw i64 %125, 12
  %153 = getelementptr inbounds i8, ptr %p0, i64 %152
  %154 = load i8, ptr %153, align 1, !tbaa !8093
  %155 = insertelement <4 x i8> undef, i8 %154, i64 0
  %156 = shufflevector <4 x i8> %155, <4 x i8> undef, <4 x i32> zeroinitializer
  %157 = sext <4 x i8> %156 to <4 x i16>
  %158 = mul nsw <4 x i16> %157, %128
  %159 = add <4 x i16> %158, %98
  %160 = add nsw i64 %125, 16
  %161 = getelementptr inbounds i8, ptr %p0, i64 %160
  %162 = load i8, ptr %161, align 1, !tbaa !8093
  %163 = insertelement <4 x i8> undef, i8 %162, i64 0
  %164 = shufflevector <4 x i8> %163, <4 x i8> undef, <4 x i32> zeroinitializer
  %165 = sext <4 x i8> %164 to <4 x i16>
  %166 = mul nsw <4 x i16> %165, %128
  %167 = add <4 x i16> %166, %99
  %168 = add nsw i64 %125, 20
  %169 = getelementptr inbounds i8, ptr %p0, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !8093
  %171 = insertelement <4 x i8> undef, i8 %170, i64 0
  %172 = shufflevector <4 x i8> %171, <4 x i8> undef, <4 x i32> zeroinitializer
  %173 = sext <4 x i8> %172 to <4 x i16>
  %174 = mul nsw <4 x i16> %173, %128
  %175 = add <4 x i16> %174, %100
  %176 = add nsw i64 %125, 24
  %177 = getelementptr inbounds i8, ptr %p0, i64 %176
  %178 = load i8, ptr %177, align 1, !tbaa !8093
  %179 = insertelement <4 x i8> undef, i8 %178, i64 0
  %180 = shufflevector <4 x i8> %179, <4 x i8> undef, <4 x i32> zeroinitializer
  %181 = sext <4 x i8> %180 to <4 x i16>
  %182 = mul nsw <4 x i16> %181, %128
  %183 = add <4 x i16> %182, %101
  %184 = add nsw i64 %125, 28
  %185 = getelementptr inbounds i8, ptr %p0, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !8093
  %187 = insertelement <4 x i8> undef, i8 %186, i64 0
  %188 = shufflevector <4 x i8> %187, <4 x i8> undef, <4 x i32> zeroinitializer
  %189 = sext <4 x i8> %188 to <4 x i16>
  %190 = mul nsw <4 x i16> %189, %128
  %191 = add <4 x i16> %190, %102
  %192 = add nsw i64 %125, 32
  %193 = getelementptr inbounds i8, ptr %p0, i64 %192
  %194 = load i8, ptr %193, align 1, !tbaa !8093
  %195 = insertelement <4 x i8> undef, i8 %194, i64 0
  %196 = shufflevector <4 x i8> %195, <4 x i8> undef, <4 x i32> zeroinitializer
  %197 = sext <4 x i8> %196 to <4 x i16>
  %198 = mul nsw <4 x i16> %197, %128
  %199 = add <4 x i16> %198, %103
  %200 = add nsw i64 %125, 36
  %201 = getelementptr inbounds i8, ptr %p0, i64 %200
  %202 = load i8, ptr %201, align 1, !tbaa !8093
  %203 = insertelement <4 x i8> undef, i8 %202, i64 0
  %204 = shufflevector <4 x i8> %203, <4 x i8> undef, <4 x i32> zeroinitializer
  %205 = sext <4 x i8> %204 to <4 x i16>
  %206 = mul nsw <4 x i16> %205, %128
  %207 = add <4 x i16> %206, %104
  %208 = add nsw i64 %125, 40
  %209 = getelementptr inbounds i8, ptr %p0, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !8093
  %211 = insertelement <4 x i8> undef, i8 %210, i64 0
  %212 = shufflevector <4 x i8> %211, <4 x i8> undef, <4 x i32> zeroinitializer
  %213 = sext <4 x i8> %212 to <4 x i16>
  %214 = mul nsw <4 x i16> %213, %128
  %215 = add <4 x i16> %214, %105
  %216 = add nsw i64 %125, 44
  %217 = getelementptr inbounds i8, ptr %p0, i64 %216
  %218 = load i8, ptr %217, align 1, !tbaa !8093
  %219 = insertelement <4 x i8> undef, i8 %218, i64 0
  %220 = shufflevector <4 x i8> %219, <4 x i8> undef, <4 x i32> zeroinitializer
  %221 = sext <4 x i8> %220 to <4 x i16>
  %222 = mul nsw <4 x i16> %221, %128
  %223 = add <4 x i16> %222, %106
  %224 = add nsw i64 %125, 48
  %225 = getelementptr inbounds i8, ptr %p0, i64 %224
  %226 = load i8, ptr %225, align 1, !tbaa !8093
  %227 = insertelement <4 x i8> undef, i8 %226, i64 0
  %228 = shufflevector <4 x i8> %227, <4 x i8> undef, <4 x i32> zeroinitializer
  %229 = sext <4 x i8> %228 to <4 x i16>
  %230 = mul nsw <4 x i16> %229, %128
  %231 = add <4 x i16> %230, %107
  %232 = add nsw i64 %125, 52
  %233 = getelementptr inbounds i8, ptr %p0, i64 %232
  %234 = load i8, ptr %233, align 1, !tbaa !8093
  %235 = insertelement <4 x i8> undef, i8 %234, i64 0
  %236 = shufflevector <4 x i8> %235, <4 x i8> undef, <4 x i32> zeroinitializer
  %237 = sext <4 x i8> %236 to <4 x i16>
  %238 = mul nsw <4 x i16> %237, %128
  %239 = add <4 x i16> %238, %108
  %240 = add nsw i64 %125, 56
  %241 = getelementptr inbounds i8, ptr %p0, i64 %240
  %242 = load i8, ptr %241, align 1, !tbaa !8093
  %243 = insertelement <4 x i8> undef, i8 %242, i64 0
  %244 = shufflevector <4 x i8> %243, <4 x i8> undef, <4 x i32> zeroinitializer
  %245 = sext <4 x i8> %244 to <4 x i16>
  %246 = mul nsw <4 x i16> %245, %128
  %247 = add <4 x i16> %246, %109
  %248 = add nsw i64 %125, 60
  %249 = getelementptr inbounds i8, ptr %p0, i64 %248
  %250 = load i8, ptr %249, align 1, !tbaa !8093
  %251 = insertelement <4 x i8> undef, i8 %250, i64 0
  %252 = shufflevector <4 x i8> %251, <4 x i8> undef, <4 x i32> zeroinitializer
  %253 = sext <4 x i8> %252 to <4 x i16>
  %254 = mul nsw <4 x i16> %253, %128
  %255 = add <4 x i16> %254, %110
  %256 = add nsw i64 %125, 64
  %257 = getelementptr inbounds i8, ptr %p0, i64 %256
  %258 = load i8, ptr %257, align 1, !tbaa !8093
  %259 = insertelement <4 x i8> undef, i8 %258, i64 0
  %260 = shufflevector <4 x i8> %259, <4 x i8> undef, <4 x i32> zeroinitializer
  %261 = sext <4 x i8> %260 to <4 x i16>
  %262 = mul nsw <4 x i16> %261, %128
  %263 = add <4 x i16> %262, %111
  %264 = add nsw i64 %125, 68
  %265 = getelementptr inbounds i8, ptr %p0, i64 %264
  %266 = load i8, ptr %265, align 1, !tbaa !8093
  %267 = insertelement <4 x i8> undef, i8 %266, i64 0
  %268 = shufflevector <4 x i8> %267, <4 x i8> undef, <4 x i32> zeroinitializer
  %269 = sext <4 x i8> %268 to <4 x i16>
  %270 = mul nsw <4 x i16> %269, %128
  %271 = add <4 x i16> %270, %112
  %272 = add nsw i64 %125, 72
  %273 = getelementptr inbounds i8, ptr %p0, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !8093
  %275 = insertelement <4 x i8> undef, i8 %274, i64 0
  %276 = shufflevector <4 x i8> %275, <4 x i8> undef, <4 x i32> zeroinitializer
  %277 = sext <4 x i8> %276 to <4 x i16>
  %278 = mul nsw <4 x i16> %277, %128
  %279 = add <4 x i16> %278, %113
  %280 = add nsw i64 %125, 76
  %281 = getelementptr inbounds i8, ptr %p0, i64 %280
  %282 = load i8, ptr %281, align 1, !tbaa !8093
  %283 = insertelement <4 x i8> undef, i8 %282, i64 0
  %284 = shufflevector <4 x i8> %283, <4 x i8> undef, <4 x i32> zeroinitializer
  %285 = sext <4 x i8> %284 to <4 x i16>
  %286 = mul nsw <4 x i16> %285, %128
  %287 = add <4 x i16> %286, %114
  %288 = add nsw i64 %125, 80
  %289 = getelementptr inbounds i8, ptr %p0, i64 %288
  %290 = load i8, ptr %289, align 1, !tbaa !8093
  %291 = insertelement <4 x i8> undef, i8 %290, i64 0
  %292 = shufflevector <4 x i8> %291, <4 x i8> undef, <4 x i32> zeroinitializer
  %293 = sext <4 x i8> %292 to <4 x i16>
  %294 = mul nsw <4 x i16> %293, %128
  %295 = add <4 x i16> %294, %115
  %296 = add nsw i64 %125, 84
  %297 = getelementptr inbounds i8, ptr %p0, i64 %296
  %298 = load i8, ptr %297, align 1, !tbaa !8093
  %299 = insertelement <4 x i8> undef, i8 %298, i64 0
  %300 = shufflevector <4 x i8> %299, <4 x i8> undef, <4 x i32> zeroinitializer
  %301 = sext <4 x i8> %300 to <4 x i16>
  %302 = mul nsw <4 x i16> %301, %128
  %303 = add <4 x i16> %302, %116
  %304 = add nsw i64 %125, 88
  %305 = getelementptr inbounds i8, ptr %p0, i64 %304
  %306 = load i8, ptr %305, align 1, !tbaa !8093
  %307 = insertelement <4 x i8> undef, i8 %306, i64 0
  %308 = shufflevector <4 x i8> %307, <4 x i8> undef, <4 x i32> zeroinitializer
  %309 = sext <4 x i8> %308 to <4 x i16>
  %310 = mul nsw <4 x i16> %309, %128
  %311 = add <4 x i16> %310, %117
  %312 = add nsw i64 %125, 92
  %313 = getelementptr inbounds i8, ptr %p0, i64 %312
  %314 = load i8, ptr %313, align 1, !tbaa !8093
  %315 = insertelement <4 x i8> undef, i8 %314, i64 0
  %316 = shufflevector <4 x i8> %315, <4 x i8> undef, <4 x i32> zeroinitializer
  %317 = sext <4 x i8> %316 to <4 x i16>
  %318 = mul nsw <4 x i16> %317, %128
  %319 = add <4 x i16> %318, %118
  %320 = add nsw i64 %125, 96
  %321 = getelementptr inbounds i8, ptr %p0, i64 %320
  %322 = load i8, ptr %321, align 1, !tbaa !8093
  %323 = insertelement <4 x i8> undef, i8 %322, i64 0
  %324 = shufflevector <4 x i8> %323, <4 x i8> undef, <4 x i32> zeroinitializer
  %325 = sext <4 x i8> %324 to <4 x i16>
  %326 = mul nsw <4 x i16> %325, %128
  %327 = add <4 x i16> %326, %119
  %328 = add nsw i64 %125, 100
  %329 = getelementptr inbounds i8, ptr %p0, i64 %328
  %330 = load i8, ptr %329, align 1, !tbaa !8093
  %331 = insertelement <4 x i8> undef, i8 %330, i64 0
  %332 = shufflevector <4 x i8> %331, <4 x i8> undef, <4 x i32> zeroinitializer
  %333 = sext <4 x i8> %332 to <4 x i16>
  %334 = mul nsw <4 x i16> %333, %128
  %335 = add <4 x i16> %334, %120
  %336 = add nsw i64 %125, 104
  %337 = getelementptr inbounds i8, ptr %p0, i64 %336
  %338 = load i8, ptr %337, align 1, !tbaa !8093
  %339 = insertelement <4 x i8> undef, i8 %338, i64 0
  %340 = shufflevector <4 x i8> %339, <4 x i8> undef, <4 x i32> zeroinitializer
  %341 = sext <4 x i8> %340 to <4 x i16>
  %342 = mul nsw <4 x i16> %341, %128
  %343 = add <4 x i16> %342, %121
  %344 = add nsw i64 %125, 108
  %345 = getelementptr inbounds i8, ptr %p0, i64 %344
  %346 = load i8, ptr %345, align 1, !tbaa !8093
  %347 = insertelement <4 x i8> undef, i8 %346, i64 0
  %348 = shufflevector <4 x i8> %347, <4 x i8> undef, <4 x i32> zeroinitializer
  %349 = sext <4 x i8> %348 to <4 x i16>
  %350 = mul nsw <4 x i16> %349, %128
  %351 = add <4 x i16> %350, %122
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !59

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next176 = add nuw nsw i64 %indvars.iv175, 1
  %exitcond178.not = icmp eq i64 %indvars.iv.next176, 16
  br i1 %exitcond178.not, label %for_end_ic.outer, label %for_begin_ic.inner.preheader, !prof !59

for_body_ax3.inner:                               ; preds = %for_body_ax3.inner, %for_begin_ax3.outer.preheader
  %indvars.iv183 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next184.1275, %for_body_ax3.inner ]
  %352 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv183
  %353 = load <4 x i16>, ptr %352, align 16, !tbaa !8089
  %354 = add <4 x i16> %23, %353
  %355 = ashr <4 x i16> %354, %20
  %356 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %355, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %357 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %356, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %358 = trunc <4 x i16> %357 to <4 x i8>
  %359 = shl nuw nsw i64 %indvars.iv183, 2
  %360 = add nsw i64 %31, %359
  %361 = getelementptr inbounds i8, ptr %T_cast, i64 %360
  store <4 x i8> %358, ptr %361, align 4, !tbaa !8095
  %indvars.iv.next184 = or i64 %indvars.iv183, 1
  %362 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv.next184
  %363 = load <4 x i16>, ptr %362, align 8, !tbaa !8089
  %364 = add <4 x i16> %23, %363
  %365 = ashr <4 x i16> %364, %20
  %366 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %365, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %367 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %366, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %368 = trunc <4 x i16> %367 to <4 x i8>
  %369 = shl nuw nsw i64 %indvars.iv.next184, 2
  %370 = add nsw i64 %31, %369
  %371 = getelementptr inbounds i8, ptr %T_cast, i64 %370
  store <4 x i8> %368, ptr %371, align 4, !tbaa !8095
  %indvars.iv.next184.1275 = add nuw nsw i64 %indvars.iv183, 2
  %exitcond186.not.1 = icmp eq i64 %indvars.iv.next184.1275, 28
  br i1 %exitcond186.not.1, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !7452

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %372 = add nsw i64 %31, 112
  br label %for_body_ax3.inner.1

for_body_ax3.inner.1:                             ; preds = %for_body_ax3.inner.1, %for_end_ax3.inner
  %indvars.iv183.1 = phi i64 [ 0, %for_end_ax3.inner ], [ %indvars.iv.next184.1.1, %for_body_ax3.inner.1 ]
  %373 = add nuw nsw i64 %indvars.iv183.1, 28
  %374 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %373
  %375 = load <4 x i16>, ptr %374, align 16, !tbaa !8089
  %376 = add <4 x i16> %23, %375
  %377 = ashr <4 x i16> %376, %20
  %378 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %377, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %379 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %378, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %380 = trunc <4 x i16> %379 to <4 x i8>
  %381 = shl nuw nsw i64 %indvars.iv183.1, 2
  %382 = add nsw i64 %372, %381
  %383 = getelementptr inbounds i8, ptr %T_cast, i64 %382
  store <4 x i8> %380, ptr %383, align 4, !tbaa !8095
  %384 = add nuw nsw i64 %indvars.iv183.1, 29
  %385 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %384
  %386 = load <4 x i16>, ptr %385, align 8, !tbaa !8089
  %387 = add <4 x i16> %23, %386
  %388 = ashr <4 x i16> %387, %20
  %389 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %388, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %390 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %389, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %391 = trunc <4 x i16> %390 to <4 x i8>
  %indvars.iv.next184.1 = shl i64 %indvars.iv183.1, 2
  %392 = or i64 %indvars.iv.next184.1, 4
  %393 = add nsw i64 %372, %392
  %394 = getelementptr inbounds i8, ptr %T_cast, i64 %393
  store <4 x i8> %391, ptr %394, align 4, !tbaa !8095
  %indvars.iv.next184.1.1 = add nuw nsw i64 %indvars.iv183.1, 2
  %exitcond186.1.not.1 = icmp eq i64 %indvars.iv.next184.1.1, 28
  br i1 %exitcond186.1.not.1, label %for_end_ax3.inner.1, label %for_body_ax3.inner.1, !prof !7452

for_end_ax3.inner.1:                              ; preds = %for_body_ax3.inner.1
  %indvars.iv.next191 = add nsw i64 %indvars.iv190, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next191 to i32
  %exitcond192.not = icmp eq i32 %17, %lftr.wideiv
  br i1 %exitcond192.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_begin_ow.c.outer.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_20_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.36, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.36, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.36, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.36, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.36, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1767, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1767(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.36, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.36, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 895
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 896)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph:     ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.36, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.36, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = load i16, ptr %p3, align 64, !tbaa !8097
  %16 = insertelement <4 x i16> undef, i16 %15, i64 0
  %17 = shufflevector <4 x i16> %16, <4 x i16> undef, <4 x i32> zeroinitializer
  %18 = load i16, ptr %p2, align 64, !tbaa !8109
  %19 = insertelement <4 x i16> undef, i16 %18, i64 0
  %20 = shufflevector <4 x i16> %19, <4 x i16> undef, <4 x i32> zeroinitializer
  %21 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %smin = sext i32 %21 to i64
  %22 = add i32 %9, %21
  %23 = sub i32 %22, %11
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, %for_begin_ax3.inner.preheader
  %indvars.iv53 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph ], [ %indvars.iv.next54, %for_begin_ax3.inner.preheader ]
  %24 = trunc i64 %indvars.iv53 to i32
  %25 = srem i32 %24, 7
  %26 = mul nsw i32 %25, 28
  %27 = sdiv i32 %24, 7
  %28 = shl nsw i32 %27, 13
  %29 = sext i32 %26 to i64
  %30 = sext i32 %28 to i64
  br label %for_begin_ic.inner.preheader

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_begin_ax3.inner.preheader, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_begin_ic.inner.preheader
  %31 = mul nsw i64 %indvars.iv53, 28
  %32 = add <4 x i16> %20, %273
  %33 = ashr <4 x i16> %32, %17
  %34 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %33, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %35 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %34, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %36 = trunc <4 x i16> %35 to <4 x i8>
  %37 = getelementptr inbounds i8, ptr %T_cast, i64 %31
  store <4 x i8> %36, ptr %37, align 4, !tbaa !8121
  %38 = add <4 x i16> %20, %281
  %39 = ashr <4 x i16> %38, %17
  %40 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %39, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %41 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %40, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %42 = trunc <4 x i16> %41 to <4 x i8>
  %43 = add nsw i64 %31, 4
  %44 = getelementptr inbounds i8, ptr %T_cast, i64 %43
  store <4 x i8> %42, ptr %44, align 4, !tbaa !8121
  %45 = add <4 x i16> %20, %289
  %46 = ashr <4 x i16> %45, %17
  %47 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %46, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %48 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %47, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %49 = trunc <4 x i16> %48 to <4 x i8>
  %50 = add nsw i64 %31, 8
  %51 = getelementptr inbounds i8, ptr %T_cast, i64 %50
  store <4 x i8> %49, ptr %51, align 4, !tbaa !8121
  %52 = add <4 x i16> %20, %297
  %53 = ashr <4 x i16> %52, %17
  %54 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %53, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %55 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %54, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %56 = trunc <4 x i16> %55 to <4 x i8>
  %57 = add nsw i64 %31, 12
  %58 = getelementptr inbounds i8, ptr %T_cast, i64 %57
  store <4 x i8> %56, ptr %58, align 4, !tbaa !8121
  %59 = add <4 x i16> %20, %305
  %60 = ashr <4 x i16> %59, %17
  %61 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %60, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %62 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %61, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %63 = trunc <4 x i16> %62 to <4 x i8>
  %64 = add nsw i64 %31, 16
  %65 = getelementptr inbounds i8, ptr %T_cast, i64 %64
  store <4 x i8> %63, ptr %65, align 4, !tbaa !8121
  %66 = add <4 x i16> %20, %313
  %67 = ashr <4 x i16> %66, %17
  %68 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %67, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %69 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %68, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %70 = trunc <4 x i16> %69 to <4 x i8>
  %71 = add nsw i64 %31, 20
  %72 = getelementptr inbounds i8, ptr %T_cast, i64 %71
  store <4 x i8> %70, ptr %72, align 4, !tbaa !8121
  %73 = add <4 x i16> %20, %321
  %74 = ashr <4 x i16> %73, %17
  %75 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %74, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %76 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %75, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %77 = trunc <4 x i16> %76 to <4 x i8>
  %78 = add nsw i64 %31, 24
  %79 = getelementptr inbounds i8, ptr %T_cast, i64 %78
  store <4 x i8> %77, ptr %79, align 4, !tbaa !8121
  %indvars.iv.next54 = add nsw i64 %indvars.iv53, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next54 to i32
  %exitcond55.not = icmp eq i32 %23, %lftr.wideiv
  br i1 %exitcond55.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !59

for_begin_ic.inner.preheader:                     ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused, %for_begin_ic.inner.preheader
  %indvars.iv = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %indvars.iv.next, %for_begin_ic.inner.preheader ]
  %.lcssa1533 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %273, %for_begin_ic.inner.preheader ]
  %.lcssa21732 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %281, %for_begin_ic.inner.preheader ]
  %.lcssa41831 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %289, %for_begin_ic.inner.preheader ]
  %.lcssa62030 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %297, %for_begin_ic.inner.preheader ]
  %.lcssa82229 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %305, %for_begin_ic.inner.preheader ]
  %.lcssa102428 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %313, %for_begin_ic.inner.preheader ]
  %.lcssa122627 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %321, %for_begin_ic.inner.preheader ]
  %80 = mul nuw nsw i64 %indvars.iv, 196
  %81 = add nsw i64 %80, %29
  %82 = shl nsw i64 %indvars.iv, 4
  %83 = add nuw nsw i64 %82, %30
  %84 = getelementptr inbounds i8, ptr %p1, i64 %83
  %85 = load <4 x i8>, ptr %84, align 4, !tbaa !8123
  %86 = sext <4 x i8> %85 to <4 x i16>
  %87 = getelementptr inbounds i8, ptr %p0, i64 %81
  %88 = load i8, ptr %87, align 1, !tbaa !8125
  %89 = insertelement <4 x i8> undef, i8 %88, i64 0
  %90 = shufflevector <4 x i8> %89, <4 x i8> undef, <4 x i32> zeroinitializer
  %91 = sext <4 x i8> %90 to <4 x i16>
  %92 = mul nsw <4 x i16> %91, %86
  %93 = add <4 x i16> %92, %.lcssa1533
  %94 = add nsw i64 %81, 4
  %95 = getelementptr inbounds i8, ptr %p0, i64 %94
  %96 = load i8, ptr %95, align 1, !tbaa !8125
  %97 = insertelement <4 x i8> undef, i8 %96, i64 0
  %98 = shufflevector <4 x i8> %97, <4 x i8> undef, <4 x i32> zeroinitializer
  %99 = sext <4 x i8> %98 to <4 x i16>
  %100 = mul nsw <4 x i16> %99, %86
  %101 = add <4 x i16> %100, %.lcssa21732
  %102 = add nsw i64 %81, 8
  %103 = getelementptr inbounds i8, ptr %p0, i64 %102
  %104 = load i8, ptr %103, align 1, !tbaa !8125
  %105 = insertelement <4 x i8> undef, i8 %104, i64 0
  %106 = shufflevector <4 x i8> %105, <4 x i8> undef, <4 x i32> zeroinitializer
  %107 = sext <4 x i8> %106 to <4 x i16>
  %108 = mul nsw <4 x i16> %107, %86
  %109 = add <4 x i16> %108, %.lcssa41831
  %110 = add nsw i64 %81, 12
  %111 = getelementptr inbounds i8, ptr %p0, i64 %110
  %112 = load i8, ptr %111, align 1, !tbaa !8125
  %113 = insertelement <4 x i8> undef, i8 %112, i64 0
  %114 = shufflevector <4 x i8> %113, <4 x i8> undef, <4 x i32> zeroinitializer
  %115 = sext <4 x i8> %114 to <4 x i16>
  %116 = mul nsw <4 x i16> %115, %86
  %117 = add <4 x i16> %116, %.lcssa62030
  %118 = add nsw i64 %81, 16
  %119 = getelementptr inbounds i8, ptr %p0, i64 %118
  %120 = load i8, ptr %119, align 1, !tbaa !8125
  %121 = insertelement <4 x i8> undef, i8 %120, i64 0
  %122 = shufflevector <4 x i8> %121, <4 x i8> undef, <4 x i32> zeroinitializer
  %123 = sext <4 x i8> %122 to <4 x i16>
  %124 = mul nsw <4 x i16> %123, %86
  %125 = add <4 x i16> %124, %.lcssa82229
  %126 = add nsw i64 %81, 20
  %127 = getelementptr inbounds i8, ptr %p0, i64 %126
  %128 = load i8, ptr %127, align 1, !tbaa !8125
  %129 = insertelement <4 x i8> undef, i8 %128, i64 0
  %130 = shufflevector <4 x i8> %129, <4 x i8> undef, <4 x i32> zeroinitializer
  %131 = sext <4 x i8> %130 to <4 x i16>
  %132 = mul nsw <4 x i16> %131, %86
  %133 = add <4 x i16> %132, %.lcssa102428
  %134 = add nsw i64 %81, 24
  %135 = getelementptr inbounds i8, ptr %p0, i64 %134
  %136 = load i8, ptr %135, align 1, !tbaa !8125
  %137 = insertelement <4 x i8> undef, i8 %136, i64 0
  %138 = shufflevector <4 x i8> %137, <4 x i8> undef, <4 x i32> zeroinitializer
  %139 = sext <4 x i8> %138 to <4 x i16>
  %140 = mul nsw <4 x i16> %139, %86
  %141 = add <4 x i16> %140, %.lcssa122627
  %142 = or i64 %81, 1
  %143 = or i64 %83, 4
  %144 = getelementptr inbounds i8, ptr %p1, i64 %143
  %145 = load <4 x i8>, ptr %144, align 4, !tbaa !8123
  %146 = sext <4 x i8> %145 to <4 x i16>
  %147 = getelementptr inbounds i8, ptr %p0, i64 %142
  %148 = load i8, ptr %147, align 1, !tbaa !8125
  %149 = insertelement <4 x i8> undef, i8 %148, i64 0
  %150 = shufflevector <4 x i8> %149, <4 x i8> undef, <4 x i32> zeroinitializer
  %151 = sext <4 x i8> %150 to <4 x i16>
  %152 = mul nsw <4 x i16> %151, %146
  %153 = add <4 x i16> %152, %93
  %154 = add nsw i64 %81, 5
  %155 = getelementptr inbounds i8, ptr %p0, i64 %154
  %156 = load i8, ptr %155, align 1, !tbaa !8125
  %157 = insertelement <4 x i8> undef, i8 %156, i64 0
  %158 = shufflevector <4 x i8> %157, <4 x i8> undef, <4 x i32> zeroinitializer
  %159 = sext <4 x i8> %158 to <4 x i16>
  %160 = mul nsw <4 x i16> %159, %146
  %161 = add <4 x i16> %160, %101
  %162 = add nsw i64 %81, 9
  %163 = getelementptr inbounds i8, ptr %p0, i64 %162
  %164 = load i8, ptr %163, align 1, !tbaa !8125
  %165 = insertelement <4 x i8> undef, i8 %164, i64 0
  %166 = shufflevector <4 x i8> %165, <4 x i8> undef, <4 x i32> zeroinitializer
  %167 = sext <4 x i8> %166 to <4 x i16>
  %168 = mul nsw <4 x i16> %167, %146
  %169 = add <4 x i16> %168, %109
  %170 = add nsw i64 %81, 13
  %171 = getelementptr inbounds i8, ptr %p0, i64 %170
  %172 = load i8, ptr %171, align 1, !tbaa !8125
  %173 = insertelement <4 x i8> undef, i8 %172, i64 0
  %174 = shufflevector <4 x i8> %173, <4 x i8> undef, <4 x i32> zeroinitializer
  %175 = sext <4 x i8> %174 to <4 x i16>
  %176 = mul nsw <4 x i16> %175, %146
  %177 = add <4 x i16> %176, %117
  %178 = add nsw i64 %81, 17
  %179 = getelementptr inbounds i8, ptr %p0, i64 %178
  %180 = load i8, ptr %179, align 1, !tbaa !8125
  %181 = insertelement <4 x i8> undef, i8 %180, i64 0
  %182 = shufflevector <4 x i8> %181, <4 x i8> undef, <4 x i32> zeroinitializer
  %183 = sext <4 x i8> %182 to <4 x i16>
  %184 = mul nsw <4 x i16> %183, %146
  %185 = add <4 x i16> %184, %125
  %186 = add nsw i64 %81, 21
  %187 = getelementptr inbounds i8, ptr %p0, i64 %186
  %188 = load i8, ptr %187, align 1, !tbaa !8125
  %189 = insertelement <4 x i8> undef, i8 %188, i64 0
  %190 = shufflevector <4 x i8> %189, <4 x i8> undef, <4 x i32> zeroinitializer
  %191 = sext <4 x i8> %190 to <4 x i16>
  %192 = mul nsw <4 x i16> %191, %146
  %193 = add <4 x i16> %192, %133
  %194 = add nsw i64 %81, 25
  %195 = getelementptr inbounds i8, ptr %p0, i64 %194
  %196 = load i8, ptr %195, align 1, !tbaa !8125
  %197 = insertelement <4 x i8> undef, i8 %196, i64 0
  %198 = shufflevector <4 x i8> %197, <4 x i8> undef, <4 x i32> zeroinitializer
  %199 = sext <4 x i8> %198 to <4 x i16>
  %200 = mul nsw <4 x i16> %199, %146
  %201 = add <4 x i16> %200, %141
  %202 = or i64 %81, 2
  %203 = or i64 %83, 8
  %204 = getelementptr inbounds i8, ptr %p1, i64 %203
  %205 = load <4 x i8>, ptr %204, align 4, !tbaa !8123
  %206 = sext <4 x i8> %205 to <4 x i16>
  %207 = getelementptr inbounds i8, ptr %p0, i64 %202
  %208 = load i8, ptr %207, align 1, !tbaa !8125
  %209 = insertelement <4 x i8> undef, i8 %208, i64 0
  %210 = shufflevector <4 x i8> %209, <4 x i8> undef, <4 x i32> zeroinitializer
  %211 = sext <4 x i8> %210 to <4 x i16>
  %212 = mul nsw <4 x i16> %211, %206
  %213 = add <4 x i16> %212, %153
  %214 = add nsw i64 %81, 6
  %215 = getelementptr inbounds i8, ptr %p0, i64 %214
  %216 = load i8, ptr %215, align 1, !tbaa !8125
  %217 = insertelement <4 x i8> undef, i8 %216, i64 0
  %218 = shufflevector <4 x i8> %217, <4 x i8> undef, <4 x i32> zeroinitializer
  %219 = sext <4 x i8> %218 to <4 x i16>
  %220 = mul nsw <4 x i16> %219, %206
  %221 = add <4 x i16> %220, %161
  %222 = add nsw i64 %81, 10
  %223 = getelementptr inbounds i8, ptr %p0, i64 %222
  %224 = load i8, ptr %223, align 1, !tbaa !8125
  %225 = insertelement <4 x i8> undef, i8 %224, i64 0
  %226 = shufflevector <4 x i8> %225, <4 x i8> undef, <4 x i32> zeroinitializer
  %227 = sext <4 x i8> %226 to <4 x i16>
  %228 = mul nsw <4 x i16> %227, %206
  %229 = add <4 x i16> %228, %169
  %230 = add nsw i64 %81, 14
  %231 = getelementptr inbounds i8, ptr %p0, i64 %230
  %232 = load i8, ptr %231, align 1, !tbaa !8125
  %233 = insertelement <4 x i8> undef, i8 %232, i64 0
  %234 = shufflevector <4 x i8> %233, <4 x i8> undef, <4 x i32> zeroinitializer
  %235 = sext <4 x i8> %234 to <4 x i16>
  %236 = mul nsw <4 x i16> %235, %206
  %237 = add <4 x i16> %236, %177
  %238 = add nsw i64 %81, 18
  %239 = getelementptr inbounds i8, ptr %p0, i64 %238
  %240 = load i8, ptr %239, align 1, !tbaa !8125
  %241 = insertelement <4 x i8> undef, i8 %240, i64 0
  %242 = shufflevector <4 x i8> %241, <4 x i8> undef, <4 x i32> zeroinitializer
  %243 = sext <4 x i8> %242 to <4 x i16>
  %244 = mul nsw <4 x i16> %243, %206
  %245 = add <4 x i16> %244, %185
  %246 = add nsw i64 %81, 22
  %247 = getelementptr inbounds i8, ptr %p0, i64 %246
  %248 = load i8, ptr %247, align 1, !tbaa !8125
  %249 = insertelement <4 x i8> undef, i8 %248, i64 0
  %250 = shufflevector <4 x i8> %249, <4 x i8> undef, <4 x i32> zeroinitializer
  %251 = sext <4 x i8> %250 to <4 x i16>
  %252 = mul nsw <4 x i16> %251, %206
  %253 = add <4 x i16> %252, %193
  %254 = add nsw i64 %81, 26
  %255 = getelementptr inbounds i8, ptr %p0, i64 %254
  %256 = load i8, ptr %255, align 1, !tbaa !8125
  %257 = insertelement <4 x i8> undef, i8 %256, i64 0
  %258 = shufflevector <4 x i8> %257, <4 x i8> undef, <4 x i32> zeroinitializer
  %259 = sext <4 x i8> %258 to <4 x i16>
  %260 = mul nsw <4 x i16> %259, %206
  %261 = add <4 x i16> %260, %201
  %262 = or i64 %81, 3
  %263 = or i64 %83, 12
  %264 = getelementptr inbounds i8, ptr %p1, i64 %263
  %265 = load <4 x i8>, ptr %264, align 4, !tbaa !8123
  %266 = sext <4 x i8> %265 to <4 x i16>
  %267 = getelementptr inbounds i8, ptr %p0, i64 %262
  %268 = load i8, ptr %267, align 1, !tbaa !8125
  %269 = insertelement <4 x i8> undef, i8 %268, i64 0
  %270 = shufflevector <4 x i8> %269, <4 x i8> undef, <4 x i32> zeroinitializer
  %271 = sext <4 x i8> %270 to <4 x i16>
  %272 = mul nsw <4 x i16> %271, %266
  %273 = add <4 x i16> %272, %213
  %274 = add nsw i64 %81, 7
  %275 = getelementptr inbounds i8, ptr %p0, i64 %274
  %276 = load i8, ptr %275, align 1, !tbaa !8125
  %277 = insertelement <4 x i8> undef, i8 %276, i64 0
  %278 = shufflevector <4 x i8> %277, <4 x i8> undef, <4 x i32> zeroinitializer
  %279 = sext <4 x i8> %278 to <4 x i16>
  %280 = mul nsw <4 x i16> %279, %266
  %281 = add <4 x i16> %280, %221
  %282 = add nsw i64 %81, 11
  %283 = getelementptr inbounds i8, ptr %p0, i64 %282
  %284 = load i8, ptr %283, align 1, !tbaa !8125
  %285 = insertelement <4 x i8> undef, i8 %284, i64 0
  %286 = shufflevector <4 x i8> %285, <4 x i8> undef, <4 x i32> zeroinitializer
  %287 = sext <4 x i8> %286 to <4 x i16>
  %288 = mul nsw <4 x i16> %287, %266
  %289 = add <4 x i16> %288, %229
  %290 = add nsw i64 %81, 15
  %291 = getelementptr inbounds i8, ptr %p0, i64 %290
  %292 = load i8, ptr %291, align 1, !tbaa !8125
  %293 = insertelement <4 x i8> undef, i8 %292, i64 0
  %294 = shufflevector <4 x i8> %293, <4 x i8> undef, <4 x i32> zeroinitializer
  %295 = sext <4 x i8> %294 to <4 x i16>
  %296 = mul nsw <4 x i16> %295, %266
  %297 = add <4 x i16> %296, %237
  %298 = add nsw i64 %81, 19
  %299 = getelementptr inbounds i8, ptr %p0, i64 %298
  %300 = load i8, ptr %299, align 1, !tbaa !8125
  %301 = insertelement <4 x i8> undef, i8 %300, i64 0
  %302 = shufflevector <4 x i8> %301, <4 x i8> undef, <4 x i32> zeroinitializer
  %303 = sext <4 x i8> %302 to <4 x i16>
  %304 = mul nsw <4 x i16> %303, %266
  %305 = add <4 x i16> %304, %245
  %306 = add nsw i64 %81, 23
  %307 = getelementptr inbounds i8, ptr %p0, i64 %306
  %308 = load i8, ptr %307, align 1, !tbaa !8125
  %309 = insertelement <4 x i8> undef, i8 %308, i64 0
  %310 = shufflevector <4 x i8> %309, <4 x i8> undef, <4 x i32> zeroinitializer
  %311 = sext <4 x i8> %310 to <4 x i16>
  %312 = mul nsw <4 x i16> %311, %266
  %313 = add <4 x i16> %312, %253
  %314 = add nsw i64 %81, 27
  %315 = getelementptr inbounds i8, ptr %p0, i64 %314
  %316 = load i8, ptr %315, align 1, !tbaa !8125
  %317 = insertelement <4 x i8> undef, i8 %316, i64 0
  %318 = shufflevector <4 x i8> %317, <4 x i8> undef, <4 x i32> zeroinitializer
  %319 = sext <4 x i8> %318 to <4 x i16>
  %320 = mul nsw <4 x i16> %319, %266
  %321 = add <4 x i16> %320, %261
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 512
  br i1 %exitcond.not, label %for_begin_ax3.inner.preheader, label %for_begin_ic.inner.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_21_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.38, align 8
  %7 = alloca %closure_loop_parallel_i0.i1.fused.i2.fused.37, align 8
  %8 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pad = tail call ptr %8(i32 1, i32 %0, i64 41472, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pad, i64 64) ]
  %9 = icmp eq ptr %data_pad, null
  br i1 %9, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end2, %call_end, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %12, %if_end ], [ %19, %call_end ], [ %., %call_end2 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %data_pad, ptr %7, align 8
  %10 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.37, ptr %7, i64 0, i32 1
  store ptr %1, ptr %10, align 8
  %11 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %12 = call i32 %11(ptr nonnull @__tvm_parallel_lambda.1817, ptr nonnull %7, i32 0)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %call_end, label %common.ret, !prof !18

call_end:                                         ; preds = %if_end
  store ptr %data_pad, ptr %6, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.38, ptr %6, i64 0, i32 1
  store ptr %2, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.38, ptr %6, i64 0, i32 2
  store ptr %3, ptr %15, align 8
  %16 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.38, ptr %6, i64 0, i32 3
  store ptr %4, ptr %16, align 8
  %17 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.38, ptr %6, i64 0, i32 4
  store ptr %5, ptr %17, align 8
  %18 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %19 = call i32 %18(ptr nonnull @__tvm_parallel_lambda.1818, ptr nonnull %6, i32 0)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %call_end2, label %common.ret, !prof !18

call_end2:                                        ; preds = %call_end
  %21 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %22 = call i32 %21(i32 1, i32 %0, ptr nonnull %data_pad)
  %.not = icmp ne i32 %22, 0
  %. = sext i1 %.not to i32
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1817(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.37, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 1151
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 1152)
  %9 = mul nsw i32 %5, %task_id
  %.fr4 = freeze i32 %9
  %10 = tail call i32 @llvm.smin.i32(i32 %.fr4, i32 1152)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_i3.preheader.preheader, label %for_end_i0.i1.fused.i2.fused, !prof !18

for_begin_i3.preheader.preheader:                 ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %.fr4, i32 1152)
  %smin = sext i32 %12 to i64
  %13 = sub i32 %8, %10
  br label %for_begin_i3.preheader

for_begin_i3.preheader:                           ; preds = %for_begin_i3.preheader.preheader, %for_end_i3
  %indvars.iv = phi i64 [ %smin, %for_begin_i3.preheader.preheader ], [ %indvars.iv.next, %for_end_i3 ]
  %indvar = phi i32 [ 0, %for_begin_i3.preheader.preheader ], [ %indvar.next, %for_end_i3 ]
  %14 = trunc i64 %indvars.iv to i32
  %cse_var_2 = srem i32 %14, 9
  %15 = sdiv i32 %14, 9
  %16 = add nsw i32 %cse_var_2, -1
  %17 = icmp ult i32 %16, 7
  br i1 %17, label %if_end.8, label %for_body_i3.us.preheader

for_body_i3.us.preheader:                         ; preds = %for_begin_i3.preheader
  %18 = add i32 %10, %indvar
  %19 = mul i32 %18, 36
  %20 = sext i32 %19 to i64
  %scevgep = getelementptr i8, ptr %data_pad, i64 %20
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(36) %scevgep, i8 0, i64 36, i1 false), !tbaa !8127
  br label %for_end_i3

for_end_i0.i1.fused.i2.fused:                     ; preds = %for_end_i3, %parallel_closure_entry
  ret i32 0

for_end_i3:                                       ; preds = %for_body_i3.us.preheader, %if_end.8
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %indvar.next = add nuw i32 %indvar, 1
  %exitcond.not = icmp eq i32 %indvar.next, %13
  br i1 %exitcond.not, label %for_end_i0.i1.fused.i2.fused, label %for_begin_i3.preheader, !prof !59

if_end.8:                                         ; preds = %for_begin_i3.preheader
  %21 = mul nuw nsw i32 %cse_var_2, 28
  %22 = add nsw i32 %21, -32
  %23 = mul nsw i32 %15, 196
  %24 = add i32 %22, %23
  %25 = mul nsw i64 %indvars.iv, 36
  %26 = getelementptr inbounds i8, ptr %data_pad, i64 %25
  store <4 x i8> zeroinitializer, ptr %26, align 4, !tbaa !8127
  %27 = add i32 %24, 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, ptr %p0, i64 %28
  %30 = load <4 x i8>, ptr %29, align 4, !tbaa !8129
  %31 = add nsw i64 %25, 4
  %32 = getelementptr inbounds i8, ptr %data_pad, i64 %31
  store <4 x i8> %30, ptr %32, align 4, !tbaa !8127
  %33 = add i32 %24, 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8, ptr %p0, i64 %34
  %36 = load <4 x i8>, ptr %35, align 4, !tbaa !8129
  %37 = add nsw i64 %25, 8
  %38 = getelementptr inbounds i8, ptr %data_pad, i64 %37
  store <4 x i8> %36, ptr %38, align 4, !tbaa !8127
  %39 = add i32 %24, 12
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, ptr %p0, i64 %40
  %42 = load <4 x i8>, ptr %41, align 4, !tbaa !8129
  %43 = add nsw i64 %25, 12
  %44 = getelementptr inbounds i8, ptr %data_pad, i64 %43
  store <4 x i8> %42, ptr %44, align 4, !tbaa !8127
  %45 = add i32 %24, 16
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, ptr %p0, i64 %46
  %48 = load <4 x i8>, ptr %47, align 4, !tbaa !8129
  %49 = add nsw i64 %25, 16
  %50 = getelementptr inbounds i8, ptr %data_pad, i64 %49
  store <4 x i8> %48, ptr %50, align 4, !tbaa !8127
  %51 = add i32 %24, 20
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, ptr %p0, i64 %52
  %54 = load <4 x i8>, ptr %53, align 4, !tbaa !8129
  %55 = add nsw i64 %25, 20
  %56 = getelementptr inbounds i8, ptr %data_pad, i64 %55
  store <4 x i8> %54, ptr %56, align 4, !tbaa !8127
  %57 = add i32 %24, 24
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, ptr %p0, i64 %58
  %60 = load <4 x i8>, ptr %59, align 4, !tbaa !8129
  %61 = add nsw i64 %25, 24
  %62 = getelementptr inbounds i8, ptr %data_pad, i64 %61
  store <4 x i8> %60, ptr %62, align 4, !tbaa !8127
  %63 = add i32 %24, 28
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i8, ptr %p0, i64 %64
  %66 = load <4 x i8>, ptr %65, align 4, !tbaa !8129
  %67 = add nsw i64 %25, 28
  %68 = getelementptr inbounds i8, ptr %data_pad, i64 %67
  store <4 x i8> %66, ptr %68, align 4, !tbaa !8127
  %69 = add nsw i64 %25, 32
  %70 = getelementptr inbounds i8, ptr %data_pad, i64 %69
  store <4 x i8> zeroinitializer, ptr %70, align 4, !tbaa !8127
  br label %for_end_i3
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1818(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.38, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.38, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 895
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 896)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_body_ax0.ax1.fused.ax2.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_body_ax0.ax1.fused.ax2.fused.lr.ph:           ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.38, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.38, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = load i16, ptr %p3, align 64, !tbaa !8131
  %16 = insertelement <4 x i16> undef, i16 %15, i64 0
  %17 = shufflevector <4 x i16> %16, <4 x i16> undef, <4 x i32> zeroinitializer
  %18 = load i16, ptr %p2, align 64, !tbaa !8143
  %19 = insertelement <4 x i16> undef, i16 %18, i64 0
  %20 = shufflevector <4 x i16> %19, <4 x i16> undef, <4 x i32> zeroinitializer
  %21 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %smin = sext i32 %21 to i64
  %22 = add i32 %9, %21
  %23 = sub i32 %22, %11
  br label %for_body_ax0.ax1.fused.ax2.fused

for_body_ax0.ax1.fused.ax2.fused:                 ; preds = %for_body_ax0.ax1.fused.ax2.fused.lr.ph, %for_begin_ax3.inner.preheader
  %indvars.iv105 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.fused.lr.ph ], [ %indvars.iv.next106, %for_begin_ax3.inner.preheader ]
  %24 = trunc i64 %indvars.iv105 to i32
  %25 = srem i32 %24, 7
  %26 = sdiv i32 %24, 7
  %27 = mul nsw i32 %26, 18432
  %28 = sext i32 %27 to i64
  br label %for_begin_kh.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.inner.preheader, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_end_kh
  %29 = mul nsw i64 %indvars.iv105, 28
  %30 = add <4 x i16> %20, %278
  %31 = ashr <4 x i16> %30, %17
  %32 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %31, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %33 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %32, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %34 = trunc <4 x i16> %33 to <4 x i8>
  %35 = getelementptr inbounds i8, ptr %T_cast, i64 %29
  store <4 x i8> %34, ptr %35, align 4, !tbaa !8155
  %36 = add <4 x i16> %20, %286
  %37 = ashr <4 x i16> %36, %17
  %38 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %37, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %39 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %38, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %40 = trunc <4 x i16> %39 to <4 x i8>
  %41 = add nsw i64 %29, 4
  %42 = getelementptr inbounds i8, ptr %T_cast, i64 %41
  store <4 x i8> %40, ptr %42, align 4, !tbaa !8155
  %43 = add <4 x i16> %20, %294
  %44 = ashr <4 x i16> %43, %17
  %45 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %44, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %46 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %45, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %47 = trunc <4 x i16> %46 to <4 x i8>
  %48 = add nsw i64 %29, 8
  %49 = getelementptr inbounds i8, ptr %T_cast, i64 %48
  store <4 x i8> %47, ptr %49, align 4, !tbaa !8155
  %50 = add <4 x i16> %20, %302
  %51 = ashr <4 x i16> %50, %17
  %52 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %51, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %53 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %52, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %54 = trunc <4 x i16> %53 to <4 x i8>
  %55 = add nsw i64 %29, 12
  %56 = getelementptr inbounds i8, ptr %T_cast, i64 %55
  store <4 x i8> %54, ptr %56, align 4, !tbaa !8155
  %57 = add <4 x i16> %20, %310
  %58 = ashr <4 x i16> %57, %17
  %59 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %58, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %60 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %59, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %61 = trunc <4 x i16> %60 to <4 x i8>
  %62 = add nsw i64 %29, 16
  %63 = getelementptr inbounds i8, ptr %T_cast, i64 %62
  store <4 x i8> %61, ptr %63, align 4, !tbaa !8155
  %64 = add <4 x i16> %20, %318
  %65 = ashr <4 x i16> %64, %17
  %66 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %65, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %67 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %66, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %68 = trunc <4 x i16> %67 to <4 x i8>
  %69 = add nsw i64 %29, 20
  %70 = getelementptr inbounds i8, ptr %T_cast, i64 %69
  store <4 x i8> %68, ptr %70, align 4, !tbaa !8155
  %71 = add <4 x i16> %20, %326
  %72 = ashr <4 x i16> %71, %17
  %73 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %72, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %74 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %73, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %75 = trunc <4 x i16> %74 to <4 x i8>
  %76 = add nsw i64 %29, 24
  %77 = getelementptr inbounds i8, ptr %T_cast, i64 %76
  store <4 x i8> %75, ptr %77, align 4, !tbaa !8155
  %indvars.iv.next106 = add nsw i64 %indvars.iv105, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next106 to i32
  %exitcond107.not = icmp eq i32 %23, %lftr.wideiv
  br i1 %exitcond107.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_body_ax0.ax1.fused.ax2.fused, !prof !59

for_begin_kh.preheader:                           ; preds = %for_body_ax0.ax1.fused.ax2.fused, %for_end_kh
  %indvars.iv97 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.fused ], [ %indvars.iv.next98, %for_end_kh ]
  %.lcssa15.lcssa35.lcssa5674 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %278, %for_end_kh ]
  %.lcssa217.lcssa37.lcssa5873 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %286, %for_end_kh ]
  %.lcssa418.lcssa39.lcssa6072 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %294, %for_end_kh ]
  %.lcssa620.lcssa40.lcssa6271 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %302, %for_end_kh ]
  %.lcssa822.lcssa42.lcssa6370 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %310, %for_end_kh ]
  %.lcssa1024.lcssa44.lcssa6569 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %318, %for_end_kh ]
  %.lcssa1226.lcssa46.lcssa6768 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %326, %for_end_kh ]
  %78 = mul nuw nsw i64 %indvars.iv97, 324
  %79 = mul nuw nsw i64 %indvars.iv97, 144
  %80 = add nsw i64 %79, %28
  br label %for_begin_kw.preheader

for_begin_kw.preheader:                           ; preds = %for_begin_kh.preheader, %for_end_kw
  %indvars.iv92 = phi i64 [ 0, %for_begin_kh.preheader ], [ %indvars.iv.next93, %for_end_kw ]
  %.lcssa15.lcssa3553 = phi <4 x i16> [ %.lcssa15.lcssa35.lcssa5674, %for_begin_kh.preheader ], [ %278, %for_end_kw ]
  %.lcssa217.lcssa3752 = phi <4 x i16> [ %.lcssa217.lcssa37.lcssa5873, %for_begin_kh.preheader ], [ %286, %for_end_kw ]
  %.lcssa418.lcssa3951 = phi <4 x i16> [ %.lcssa418.lcssa39.lcssa6072, %for_begin_kh.preheader ], [ %294, %for_end_kw ]
  %.lcssa620.lcssa4050 = phi <4 x i16> [ %.lcssa620.lcssa40.lcssa6271, %for_begin_kh.preheader ], [ %302, %for_end_kw ]
  %.lcssa822.lcssa4249 = phi <4 x i16> [ %.lcssa822.lcssa42.lcssa6370, %for_begin_kh.preheader ], [ %310, %for_end_kw ]
  %.lcssa1024.lcssa4448 = phi <4 x i16> [ %.lcssa1024.lcssa44.lcssa6569, %for_begin_kh.preheader ], [ %318, %for_end_kw ]
  %.lcssa1226.lcssa4647 = phi <4 x i16> [ %.lcssa1226.lcssa46.lcssa6768, %for_begin_kh.preheader ], [ %326, %for_end_kw ]
  %indvars95 = trunc i64 %indvars.iv92 to i32
  %reass.add = add nsw i32 %25, %indvars95
  %reass.mul = mul i32 %reass.add, 36
  %81 = sext i32 %reass.mul to i64
  %82 = add nsw i64 %78, %81
  %83 = mul nuw nsw i64 %indvars.iv92, 48
  %84 = add nsw i64 %80, %83
  br label %for_begin_ic.inner.preheader

for_end_kh:                                       ; preds = %for_end_kw
  %indvars.iv.next98 = add nuw nsw i64 %indvars.iv97, 1
  %exitcond100.not = icmp eq i64 %indvars.iv.next98, 128
  br i1 %exitcond100.not, label %for_begin_ax3.inner.preheader, label %for_begin_kh.preheader, !prof !59

for_begin_ic.inner.preheader:                     ; preds = %for_begin_kw.preheader, %for_begin_ic.inner.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_kw.preheader ], [ %indvars.iv.next, %for_begin_ic.inner.preheader ]
  %.lcssa1533 = phi <4 x i16> [ %.lcssa15.lcssa3553, %for_begin_kw.preheader ], [ %278, %for_begin_ic.inner.preheader ]
  %.lcssa21732 = phi <4 x i16> [ %.lcssa217.lcssa3752, %for_begin_kw.preheader ], [ %286, %for_begin_ic.inner.preheader ]
  %.lcssa41831 = phi <4 x i16> [ %.lcssa418.lcssa3951, %for_begin_kw.preheader ], [ %294, %for_begin_ic.inner.preheader ]
  %.lcssa62030 = phi <4 x i16> [ %.lcssa620.lcssa4050, %for_begin_kw.preheader ], [ %302, %for_begin_ic.inner.preheader ]
  %.lcssa82229 = phi <4 x i16> [ %.lcssa822.lcssa4249, %for_begin_kw.preheader ], [ %310, %for_begin_ic.inner.preheader ]
  %.lcssa102428 = phi <4 x i16> [ %.lcssa1024.lcssa4448, %for_begin_kw.preheader ], [ %318, %for_begin_ic.inner.preheader ]
  %.lcssa122627 = phi <4 x i16> [ %.lcssa1226.lcssa4647, %for_begin_kw.preheader ], [ %326, %for_begin_ic.inner.preheader ]
  %85 = shl nsw i64 %indvars.iv, 2
  %86 = add nsw i64 %82, %85
  %87 = shl nsw i64 %indvars.iv, 4
  %88 = add nsw i64 %84, %87
  %89 = getelementptr inbounds i8, ptr %p1, i64 %88
  %90 = load <4 x i8>, ptr %89, align 4, !tbaa !8157
  %91 = sext <4 x i8> %90 to <4 x i16>
  %92 = getelementptr inbounds i8, ptr %data_pad, i64 %86
  %93 = load i8, ptr %92, align 1, !tbaa !8127
  %94 = insertelement <4 x i8> undef, i8 %93, i64 0
  %95 = shufflevector <4 x i8> %94, <4 x i8> undef, <4 x i32> zeroinitializer
  %96 = sext <4 x i8> %95 to <4 x i16>
  %97 = mul nsw <4 x i16> %96, %91
  %98 = add <4 x i16> %97, %.lcssa1533
  %99 = add nsw i64 %86, 4
  %100 = getelementptr inbounds i8, ptr %data_pad, i64 %99
  %101 = load i8, ptr %100, align 1, !tbaa !8127
  %102 = insertelement <4 x i8> undef, i8 %101, i64 0
  %103 = shufflevector <4 x i8> %102, <4 x i8> undef, <4 x i32> zeroinitializer
  %104 = sext <4 x i8> %103 to <4 x i16>
  %105 = mul nsw <4 x i16> %104, %91
  %106 = add <4 x i16> %105, %.lcssa21732
  %107 = add nsw i64 %86, 8
  %108 = getelementptr inbounds i8, ptr %data_pad, i64 %107
  %109 = load i8, ptr %108, align 1, !tbaa !8127
  %110 = insertelement <4 x i8> undef, i8 %109, i64 0
  %111 = shufflevector <4 x i8> %110, <4 x i8> undef, <4 x i32> zeroinitializer
  %112 = sext <4 x i8> %111 to <4 x i16>
  %113 = mul nsw <4 x i16> %112, %91
  %114 = add <4 x i16> %113, %.lcssa41831
  %115 = add nsw i64 %86, 12
  %116 = getelementptr inbounds i8, ptr %data_pad, i64 %115
  %117 = load i8, ptr %116, align 1, !tbaa !8127
  %118 = insertelement <4 x i8> undef, i8 %117, i64 0
  %119 = shufflevector <4 x i8> %118, <4 x i8> undef, <4 x i32> zeroinitializer
  %120 = sext <4 x i8> %119 to <4 x i16>
  %121 = mul nsw <4 x i16> %120, %91
  %122 = add <4 x i16> %121, %.lcssa62030
  %123 = add nsw i64 %86, 16
  %124 = getelementptr inbounds i8, ptr %data_pad, i64 %123
  %125 = load i8, ptr %124, align 1, !tbaa !8127
  %126 = insertelement <4 x i8> undef, i8 %125, i64 0
  %127 = shufflevector <4 x i8> %126, <4 x i8> undef, <4 x i32> zeroinitializer
  %128 = sext <4 x i8> %127 to <4 x i16>
  %129 = mul nsw <4 x i16> %128, %91
  %130 = add <4 x i16> %129, %.lcssa82229
  %131 = add nsw i64 %86, 20
  %132 = getelementptr inbounds i8, ptr %data_pad, i64 %131
  %133 = load i8, ptr %132, align 1, !tbaa !8127
  %134 = insertelement <4 x i8> undef, i8 %133, i64 0
  %135 = shufflevector <4 x i8> %134, <4 x i8> undef, <4 x i32> zeroinitializer
  %136 = sext <4 x i8> %135 to <4 x i16>
  %137 = mul nsw <4 x i16> %136, %91
  %138 = add <4 x i16> %137, %.lcssa102428
  %139 = add nsw i64 %86, 24
  %140 = getelementptr inbounds i8, ptr %data_pad, i64 %139
  %141 = load i8, ptr %140, align 1, !tbaa !8127
  %142 = insertelement <4 x i8> undef, i8 %141, i64 0
  %143 = shufflevector <4 x i8> %142, <4 x i8> undef, <4 x i32> zeroinitializer
  %144 = sext <4 x i8> %143 to <4 x i16>
  %145 = mul nsw <4 x i16> %144, %91
  %146 = add <4 x i16> %145, %.lcssa122627
  %147 = or i64 %86, 1
  %148 = or i64 %88, 4
  %149 = getelementptr inbounds i8, ptr %p1, i64 %148
  %150 = load <4 x i8>, ptr %149, align 4, !tbaa !8157
  %151 = sext <4 x i8> %150 to <4 x i16>
  %152 = getelementptr inbounds i8, ptr %data_pad, i64 %147
  %153 = load i8, ptr %152, align 1, !tbaa !8127
  %154 = insertelement <4 x i8> undef, i8 %153, i64 0
  %155 = shufflevector <4 x i8> %154, <4 x i8> undef, <4 x i32> zeroinitializer
  %156 = sext <4 x i8> %155 to <4 x i16>
  %157 = mul nsw <4 x i16> %156, %151
  %158 = add <4 x i16> %157, %98
  %159 = add nsw i64 %86, 5
  %160 = getelementptr inbounds i8, ptr %data_pad, i64 %159
  %161 = load i8, ptr %160, align 1, !tbaa !8127
  %162 = insertelement <4 x i8> undef, i8 %161, i64 0
  %163 = shufflevector <4 x i8> %162, <4 x i8> undef, <4 x i32> zeroinitializer
  %164 = sext <4 x i8> %163 to <4 x i16>
  %165 = mul nsw <4 x i16> %164, %151
  %166 = add <4 x i16> %165, %106
  %167 = add nsw i64 %86, 9
  %168 = getelementptr inbounds i8, ptr %data_pad, i64 %167
  %169 = load i8, ptr %168, align 1, !tbaa !8127
  %170 = insertelement <4 x i8> undef, i8 %169, i64 0
  %171 = shufflevector <4 x i8> %170, <4 x i8> undef, <4 x i32> zeroinitializer
  %172 = sext <4 x i8> %171 to <4 x i16>
  %173 = mul nsw <4 x i16> %172, %151
  %174 = add <4 x i16> %173, %114
  %175 = add nsw i64 %86, 13
  %176 = getelementptr inbounds i8, ptr %data_pad, i64 %175
  %177 = load i8, ptr %176, align 1, !tbaa !8127
  %178 = insertelement <4 x i8> undef, i8 %177, i64 0
  %179 = shufflevector <4 x i8> %178, <4 x i8> undef, <4 x i32> zeroinitializer
  %180 = sext <4 x i8> %179 to <4 x i16>
  %181 = mul nsw <4 x i16> %180, %151
  %182 = add <4 x i16> %181, %122
  %183 = add nsw i64 %86, 17
  %184 = getelementptr inbounds i8, ptr %data_pad, i64 %183
  %185 = load i8, ptr %184, align 1, !tbaa !8127
  %186 = insertelement <4 x i8> undef, i8 %185, i64 0
  %187 = shufflevector <4 x i8> %186, <4 x i8> undef, <4 x i32> zeroinitializer
  %188 = sext <4 x i8> %187 to <4 x i16>
  %189 = mul nsw <4 x i16> %188, %151
  %190 = add <4 x i16> %189, %130
  %191 = add nsw i64 %86, 21
  %192 = getelementptr inbounds i8, ptr %data_pad, i64 %191
  %193 = load i8, ptr %192, align 1, !tbaa !8127
  %194 = insertelement <4 x i8> undef, i8 %193, i64 0
  %195 = shufflevector <4 x i8> %194, <4 x i8> undef, <4 x i32> zeroinitializer
  %196 = sext <4 x i8> %195 to <4 x i16>
  %197 = mul nsw <4 x i16> %196, %151
  %198 = add <4 x i16> %197, %138
  %199 = add nsw i64 %86, 25
  %200 = getelementptr inbounds i8, ptr %data_pad, i64 %199
  %201 = load i8, ptr %200, align 1, !tbaa !8127
  %202 = insertelement <4 x i8> undef, i8 %201, i64 0
  %203 = shufflevector <4 x i8> %202, <4 x i8> undef, <4 x i32> zeroinitializer
  %204 = sext <4 x i8> %203 to <4 x i16>
  %205 = mul nsw <4 x i16> %204, %151
  %206 = add <4 x i16> %205, %146
  %207 = or i64 %86, 2
  %208 = or i64 %88, 8
  %209 = getelementptr inbounds i8, ptr %p1, i64 %208
  %210 = load <4 x i8>, ptr %209, align 4, !tbaa !8157
  %211 = sext <4 x i8> %210 to <4 x i16>
  %212 = getelementptr inbounds i8, ptr %data_pad, i64 %207
  %213 = load i8, ptr %212, align 1, !tbaa !8127
  %214 = insertelement <4 x i8> undef, i8 %213, i64 0
  %215 = shufflevector <4 x i8> %214, <4 x i8> undef, <4 x i32> zeroinitializer
  %216 = sext <4 x i8> %215 to <4 x i16>
  %217 = mul nsw <4 x i16> %216, %211
  %218 = add <4 x i16> %217, %158
  %219 = add nsw i64 %86, 6
  %220 = getelementptr inbounds i8, ptr %data_pad, i64 %219
  %221 = load i8, ptr %220, align 1, !tbaa !8127
  %222 = insertelement <4 x i8> undef, i8 %221, i64 0
  %223 = shufflevector <4 x i8> %222, <4 x i8> undef, <4 x i32> zeroinitializer
  %224 = sext <4 x i8> %223 to <4 x i16>
  %225 = mul nsw <4 x i16> %224, %211
  %226 = add <4 x i16> %225, %166
  %227 = add nsw i64 %86, 10
  %228 = getelementptr inbounds i8, ptr %data_pad, i64 %227
  %229 = load i8, ptr %228, align 1, !tbaa !8127
  %230 = insertelement <4 x i8> undef, i8 %229, i64 0
  %231 = shufflevector <4 x i8> %230, <4 x i8> undef, <4 x i32> zeroinitializer
  %232 = sext <4 x i8> %231 to <4 x i16>
  %233 = mul nsw <4 x i16> %232, %211
  %234 = add <4 x i16> %233, %174
  %235 = add nsw i64 %86, 14
  %236 = getelementptr inbounds i8, ptr %data_pad, i64 %235
  %237 = load i8, ptr %236, align 1, !tbaa !8127
  %238 = insertelement <4 x i8> undef, i8 %237, i64 0
  %239 = shufflevector <4 x i8> %238, <4 x i8> undef, <4 x i32> zeroinitializer
  %240 = sext <4 x i8> %239 to <4 x i16>
  %241 = mul nsw <4 x i16> %240, %211
  %242 = add <4 x i16> %241, %182
  %243 = add nsw i64 %86, 18
  %244 = getelementptr inbounds i8, ptr %data_pad, i64 %243
  %245 = load i8, ptr %244, align 1, !tbaa !8127
  %246 = insertelement <4 x i8> undef, i8 %245, i64 0
  %247 = shufflevector <4 x i8> %246, <4 x i8> undef, <4 x i32> zeroinitializer
  %248 = sext <4 x i8> %247 to <4 x i16>
  %249 = mul nsw <4 x i16> %248, %211
  %250 = add <4 x i16> %249, %190
  %251 = add nsw i64 %86, 22
  %252 = getelementptr inbounds i8, ptr %data_pad, i64 %251
  %253 = load i8, ptr %252, align 1, !tbaa !8127
  %254 = insertelement <4 x i8> undef, i8 %253, i64 0
  %255 = shufflevector <4 x i8> %254, <4 x i8> undef, <4 x i32> zeroinitializer
  %256 = sext <4 x i8> %255 to <4 x i16>
  %257 = mul nsw <4 x i16> %256, %211
  %258 = add <4 x i16> %257, %198
  %259 = add nsw i64 %86, 26
  %260 = getelementptr inbounds i8, ptr %data_pad, i64 %259
  %261 = load i8, ptr %260, align 1, !tbaa !8127
  %262 = insertelement <4 x i8> undef, i8 %261, i64 0
  %263 = shufflevector <4 x i8> %262, <4 x i8> undef, <4 x i32> zeroinitializer
  %264 = sext <4 x i8> %263 to <4 x i16>
  %265 = mul nsw <4 x i16> %264, %211
  %266 = add <4 x i16> %265, %206
  %267 = or i64 %86, 3
  %268 = or i64 %88, 12
  %269 = getelementptr inbounds i8, ptr %p1, i64 %268
  %270 = load <4 x i8>, ptr %269, align 4, !tbaa !8157
  %271 = sext <4 x i8> %270 to <4 x i16>
  %272 = getelementptr inbounds i8, ptr %data_pad, i64 %267
  %273 = load i8, ptr %272, align 1, !tbaa !8127
  %274 = insertelement <4 x i8> undef, i8 %273, i64 0
  %275 = shufflevector <4 x i8> %274, <4 x i8> undef, <4 x i32> zeroinitializer
  %276 = sext <4 x i8> %275 to <4 x i16>
  %277 = mul nsw <4 x i16> %276, %271
  %278 = add <4 x i16> %277, %218
  %279 = add nsw i64 %86, 7
  %280 = getelementptr inbounds i8, ptr %data_pad, i64 %279
  %281 = load i8, ptr %280, align 1, !tbaa !8127
  %282 = insertelement <4 x i8> undef, i8 %281, i64 0
  %283 = shufflevector <4 x i8> %282, <4 x i8> undef, <4 x i32> zeroinitializer
  %284 = sext <4 x i8> %283 to <4 x i16>
  %285 = mul nsw <4 x i16> %284, %271
  %286 = add <4 x i16> %285, %226
  %287 = add nsw i64 %86, 11
  %288 = getelementptr inbounds i8, ptr %data_pad, i64 %287
  %289 = load i8, ptr %288, align 1, !tbaa !8127
  %290 = insertelement <4 x i8> undef, i8 %289, i64 0
  %291 = shufflevector <4 x i8> %290, <4 x i8> undef, <4 x i32> zeroinitializer
  %292 = sext <4 x i8> %291 to <4 x i16>
  %293 = mul nsw <4 x i16> %292, %271
  %294 = add <4 x i16> %293, %234
  %295 = add nsw i64 %86, 15
  %296 = getelementptr inbounds i8, ptr %data_pad, i64 %295
  %297 = load i8, ptr %296, align 1, !tbaa !8127
  %298 = insertelement <4 x i8> undef, i8 %297, i64 0
  %299 = shufflevector <4 x i8> %298, <4 x i8> undef, <4 x i32> zeroinitializer
  %300 = sext <4 x i8> %299 to <4 x i16>
  %301 = mul nsw <4 x i16> %300, %271
  %302 = add <4 x i16> %301, %242
  %303 = add nsw i64 %86, 19
  %304 = getelementptr inbounds i8, ptr %data_pad, i64 %303
  %305 = load i8, ptr %304, align 1, !tbaa !8127
  %306 = insertelement <4 x i8> undef, i8 %305, i64 0
  %307 = shufflevector <4 x i8> %306, <4 x i8> undef, <4 x i32> zeroinitializer
  %308 = sext <4 x i8> %307 to <4 x i16>
  %309 = mul nsw <4 x i16> %308, %271
  %310 = add <4 x i16> %309, %250
  %311 = add nsw i64 %86, 23
  %312 = getelementptr inbounds i8, ptr %data_pad, i64 %311
  %313 = load i8, ptr %312, align 1, !tbaa !8127
  %314 = insertelement <4 x i8> undef, i8 %313, i64 0
  %315 = shufflevector <4 x i8> %314, <4 x i8> undef, <4 x i32> zeroinitializer
  %316 = sext <4 x i8> %315 to <4 x i16>
  %317 = mul nsw <4 x i16> %316, %271
  %318 = add <4 x i16> %317, %258
  %319 = add nsw i64 %86, 27
  %320 = getelementptr inbounds i8, ptr %data_pad, i64 %319
  %321 = load i8, ptr %320, align 1, !tbaa !8127
  %322 = insertelement <4 x i8> undef, i8 %321, i64 0
  %323 = shufflevector <4 x i8> %322, <4 x i8> undef, <4 x i32> zeroinitializer
  %324 = sext <4 x i8> %323 to <4 x i16>
  %325 = mul nsw <4 x i16> %324, %271
  %326 = add <4 x i16> %325, %266
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for_end_kw, label %for_begin_ic.inner.preheader, !prof !59

for_end_kw:                                       ; preds = %for_begin_ic.inner.preheader
  %indvars.iv.next93 = add nuw nsw i64 %indvars.iv92, 1
  %exitcond96.not = icmp eq i64 %indvars.iv.next93, 3
  br i1 %exitcond96.not, label %for_end_kh, label %for_begin_kw.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_3_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.39, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.39, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.39, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.39, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.39, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1868, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1868(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %conv2d_NCHWc.global1 = alloca [56 x <4 x i16>], align 16
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.39, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.39, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 895
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 896)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_begin_ow.c.outer.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_begin_ow.c.outer.preheader.preheader:         ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.39, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.39, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %smin = sext i32 %15 to i64
  %16 = add i32 %9, %15
  %17 = sub i32 %16, %11
  %18 = load i16, ptr %p3, align 64, !tbaa !8159
  %19 = insertelement <4 x i16> undef, i16 %18, i64 0
  %20 = shufflevector <4 x i16> %19, <4 x i16> undef, <4 x i32> zeroinitializer
  %21 = load i16, ptr %p2, align 64, !tbaa !8171
  %22 = insertelement <4 x i16> undef, i16 %21, i64 0
  %23 = shufflevector <4 x i16> %22, <4 x i16> undef, <4 x i32> zeroinitializer
  br label %for_begin_ow.c.outer.preheader

for_begin_ow.c.outer.preheader:                   ; preds = %for_begin_ow.c.outer.preheader.preheader, %for_end_ax3.inner.1
  %indvars.iv190 = phi i64 [ %smin, %for_begin_ow.c.outer.preheader.preheader ], [ %indvars.iv.next191, %for_end_ax3.inner.1 ]
  %24 = trunc i64 %indvars.iv190 to i32
  %25 = sdiv i32 %24, 56
  %26 = shl nsw i32 %25, 10
  %27 = srem i32 %24, 56
  %28 = mul nsw i32 %27, 224
  %29 = sext i32 %26 to i64
  %30 = sext i32 %28 to i64
  br label %for_body_ow.c.outer

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_end_ax3.inner.1, %parallel_closure_entry
  ret i32 0

for_begin_ax3.outer.preheader:                    ; preds = %for_end_ic.outer
  %31 = mul nsw i64 %indvars.iv190, 224
  br label %for_body_ax3.inner

for_body_ow.c.outer:                              ; preds = %for_begin_ow.c.outer.preheader, %for_end_ic.outer
  %32 = phi i1 [ true, %for_begin_ow.c.outer.preheader ], [ false, %for_end_ic.outer ]
  %indvars.iv179 = phi i64 [ 0, %for_begin_ow.c.outer.preheader ], [ 1, %for_end_ic.outer ]
  %33 = mul nuw nsw i64 %indvars.iv179, 28
  %34 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %33
  store <4 x i16> zeroinitializer, ptr %34, align 16, !tbaa !8183
  %35 = or i64 %33, 1
  %36 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %35
  store <4 x i16> zeroinitializer, ptr %36, align 8, !tbaa !8183
  %37 = or i64 %33, 2
  %38 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %37
  store <4 x i16> zeroinitializer, ptr %38, align 16, !tbaa !8183
  %39 = or i64 %33, 3
  %40 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %39
  store <4 x i16> zeroinitializer, ptr %40, align 8, !tbaa !8183
  %41 = add nuw nsw i64 %33, 4
  %42 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %41
  store <4 x i16> zeroinitializer, ptr %42, align 16, !tbaa !8183
  %43 = add nuw nsw i64 %33, 5
  %44 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %43
  store <4 x i16> zeroinitializer, ptr %44, align 8, !tbaa !8183
  %45 = add nuw nsw i64 %33, 6
  %46 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %45
  store <4 x i16> zeroinitializer, ptr %46, align 16, !tbaa !8183
  %47 = add nuw nsw i64 %33, 7
  %48 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %47
  store <4 x i16> zeroinitializer, ptr %48, align 8, !tbaa !8183
  %49 = add nuw nsw i64 %33, 8
  %50 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %49
  store <4 x i16> zeroinitializer, ptr %50, align 16, !tbaa !8183
  %51 = add nuw nsw i64 %33, 9
  %52 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %51
  store <4 x i16> zeroinitializer, ptr %52, align 8, !tbaa !8183
  %53 = add nuw nsw i64 %33, 10
  %54 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %53
  store <4 x i16> zeroinitializer, ptr %54, align 16, !tbaa !8183
  %55 = add nuw nsw i64 %33, 11
  %56 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %55
  store <4 x i16> zeroinitializer, ptr %56, align 8, !tbaa !8183
  %57 = add nuw nsw i64 %33, 12
  %58 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %57
  store <4 x i16> zeroinitializer, ptr %58, align 16, !tbaa !8183
  %59 = add nuw nsw i64 %33, 13
  %60 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %59
  %61 = add nuw nsw i64 %33, 14
  %62 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %61
  %63 = add nuw nsw i64 %33, 15
  %64 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %63
  %65 = add nuw nsw i64 %33, 16
  %66 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %65
  %67 = add nuw nsw i64 %33, 17
  %68 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %67
  %69 = add nuw nsw i64 %33, 18
  %70 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %69
  %71 = add nuw nsw i64 %33, 19
  %72 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %71
  %73 = add nuw nsw i64 %33, 20
  %74 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %73
  %75 = add nuw nsw i64 %33, 21
  %76 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %75
  %77 = add nuw nsw i64 %33, 22
  %78 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %77
  %79 = add nuw nsw i64 %33, 23
  %80 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %79
  %81 = add nuw nsw i64 %33, 24
  %82 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %81
  %83 = add nuw nsw i64 %33, 25
  %84 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %83
  %85 = add nuw nsw i64 %33, 26
  %86 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %85
  %87 = add nuw nsw i64 %33, 27
  %88 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %87
  %89 = mul nuw nsw i64 %indvars.iv179, 112
  %90 = add nsw i64 %89, %30
  br label %for_begin_ic.inner.preheader

for_begin_ic.inner.preheader:                     ; preds = %for_body_ow.c.outer, %for_end_ic.inner
  %indvars.iv175 = phi i64 [ 0, %for_body_ow.c.outer ], [ %indvars.iv.next176, %for_end_ic.inner ]
  %.lcssa58139 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %135, %for_end_ic.inner ]
  %.lcssa359138 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %143, %for_end_ic.inner ]
  %.lcssa561137 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %151, %for_end_ic.inner ]
  %.lcssa763136 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %159, %for_end_ic.inner ]
  %.lcssa965135 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %167, %for_end_ic.inner ]
  %.lcssa1167134 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %175, %for_end_ic.inner ]
  %.lcssa1369133 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %183, %for_end_ic.inner ]
  %.lcssa1571132 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %191, %for_end_ic.inner ]
  %.lcssa1773131 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %199, %for_end_ic.inner ]
  %.lcssa1975130 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %207, %for_end_ic.inner ]
  %.lcssa2177129 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %215, %for_end_ic.inner ]
  %.lcssa2379128 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %223, %for_end_ic.inner ]
  %.lcssa2581127 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %231, %for_end_ic.inner ]
  %.lcssa2783126 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %239, %for_end_ic.inner ]
  %.lcssa2985125 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %247, %for_end_ic.inner ]
  %.lcssa3187124 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %255, %for_end_ic.inner ]
  %.lcssa3389123 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %263, %for_end_ic.inner ]
  %.lcssa3591122 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %271, %for_end_ic.inner ]
  %.lcssa3793121 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %279, %for_end_ic.inner ]
  %.lcssa3995120 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %287, %for_end_ic.inner ]
  %.lcssa4197119 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %295, %for_end_ic.inner ]
  %.lcssa4399118 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %303, %for_end_ic.inner ]
  %.lcssa45101117 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %311, %for_end_ic.inner ]
  %.lcssa47103116 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %319, %for_end_ic.inner ]
  %.lcssa49105115 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %327, %for_end_ic.inner ]
  %.lcssa51107114 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %335, %for_end_ic.inner ]
  %.lcssa53109113 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %343, %for_end_ic.inner ]
  %.lcssa55111112 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %351, %for_end_ic.inner ]
  %91 = shl nsw i64 %indvars.iv175, 4
  %92 = add nuw nsw i64 %91, %29
  %93 = mul nuw nsw i64 %indvars.iv175, 12544
  %94 = add nsw i64 %90, %93
  br label %for_body_ic.inner

for_end_ic.outer:                                 ; preds = %for_end_ic.inner
  store <4 x i16> %135, ptr %34, align 16, !tbaa !8183
  store <4 x i16> %143, ptr %36, align 8, !tbaa !8183
  store <4 x i16> %151, ptr %38, align 16, !tbaa !8183
  store <4 x i16> %159, ptr %40, align 8, !tbaa !8183
  store <4 x i16> %167, ptr %42, align 16, !tbaa !8183
  store <4 x i16> %175, ptr %44, align 8, !tbaa !8183
  store <4 x i16> %183, ptr %46, align 16, !tbaa !8183
  store <4 x i16> %191, ptr %48, align 8, !tbaa !8183
  store <4 x i16> %199, ptr %50, align 16, !tbaa !8183
  store <4 x i16> %207, ptr %52, align 8, !tbaa !8183
  store <4 x i16> %215, ptr %54, align 16, !tbaa !8183
  store <4 x i16> %223, ptr %56, align 8, !tbaa !8183
  store <4 x i16> %231, ptr %58, align 16, !tbaa !8183
  store <4 x i16> %239, ptr %60, align 8, !tbaa !8183
  store <4 x i16> %247, ptr %62, align 16, !tbaa !8183
  store <4 x i16> %255, ptr %64, align 8, !tbaa !8183
  store <4 x i16> %263, ptr %66, align 16, !tbaa !8183
  store <4 x i16> %271, ptr %68, align 8, !tbaa !8183
  store <4 x i16> %279, ptr %70, align 16, !tbaa !8183
  store <4 x i16> %287, ptr %72, align 8, !tbaa !8183
  store <4 x i16> %295, ptr %74, align 16, !tbaa !8183
  store <4 x i16> %303, ptr %76, align 8, !tbaa !8183
  store <4 x i16> %311, ptr %78, align 16, !tbaa !8183
  store <4 x i16> %319, ptr %80, align 8, !tbaa !8183
  store <4 x i16> %327, ptr %82, align 16, !tbaa !8183
  store <4 x i16> %335, ptr %84, align 8, !tbaa !8183
  store <4 x i16> %343, ptr %86, align 16, !tbaa !8183
  store <4 x i16> %351, ptr %88, align 8, !tbaa !8183
  br i1 %32, label %for_body_ow.c.outer, label %for_begin_ax3.outer.preheader, !prof !18

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %95 = phi <4 x i16> [ %.lcssa58139, %for_begin_ic.inner.preheader ], [ %135, %for_body_ic.inner ]
  %96 = phi <4 x i16> [ %.lcssa359138, %for_begin_ic.inner.preheader ], [ %143, %for_body_ic.inner ]
  %97 = phi <4 x i16> [ %.lcssa561137, %for_begin_ic.inner.preheader ], [ %151, %for_body_ic.inner ]
  %98 = phi <4 x i16> [ %.lcssa763136, %for_begin_ic.inner.preheader ], [ %159, %for_body_ic.inner ]
  %99 = phi <4 x i16> [ %.lcssa965135, %for_begin_ic.inner.preheader ], [ %167, %for_body_ic.inner ]
  %100 = phi <4 x i16> [ %.lcssa1167134, %for_begin_ic.inner.preheader ], [ %175, %for_body_ic.inner ]
  %101 = phi <4 x i16> [ %.lcssa1369133, %for_begin_ic.inner.preheader ], [ %183, %for_body_ic.inner ]
  %102 = phi <4 x i16> [ %.lcssa1571132, %for_begin_ic.inner.preheader ], [ %191, %for_body_ic.inner ]
  %103 = phi <4 x i16> [ %.lcssa1773131, %for_begin_ic.inner.preheader ], [ %199, %for_body_ic.inner ]
  %104 = phi <4 x i16> [ %.lcssa1975130, %for_begin_ic.inner.preheader ], [ %207, %for_body_ic.inner ]
  %105 = phi <4 x i16> [ %.lcssa2177129, %for_begin_ic.inner.preheader ], [ %215, %for_body_ic.inner ]
  %106 = phi <4 x i16> [ %.lcssa2379128, %for_begin_ic.inner.preheader ], [ %223, %for_body_ic.inner ]
  %107 = phi <4 x i16> [ %.lcssa2581127, %for_begin_ic.inner.preheader ], [ %231, %for_body_ic.inner ]
  %108 = phi <4 x i16> [ %.lcssa2783126, %for_begin_ic.inner.preheader ], [ %239, %for_body_ic.inner ]
  %109 = phi <4 x i16> [ %.lcssa2985125, %for_begin_ic.inner.preheader ], [ %247, %for_body_ic.inner ]
  %110 = phi <4 x i16> [ %.lcssa3187124, %for_begin_ic.inner.preheader ], [ %255, %for_body_ic.inner ]
  %111 = phi <4 x i16> [ %.lcssa3389123, %for_begin_ic.inner.preheader ], [ %263, %for_body_ic.inner ]
  %112 = phi <4 x i16> [ %.lcssa3591122, %for_begin_ic.inner.preheader ], [ %271, %for_body_ic.inner ]
  %113 = phi <4 x i16> [ %.lcssa3793121, %for_begin_ic.inner.preheader ], [ %279, %for_body_ic.inner ]
  %114 = phi <4 x i16> [ %.lcssa3995120, %for_begin_ic.inner.preheader ], [ %287, %for_body_ic.inner ]
  %115 = phi <4 x i16> [ %.lcssa4197119, %for_begin_ic.inner.preheader ], [ %295, %for_body_ic.inner ]
  %116 = phi <4 x i16> [ %.lcssa4399118, %for_begin_ic.inner.preheader ], [ %303, %for_body_ic.inner ]
  %117 = phi <4 x i16> [ %.lcssa45101117, %for_begin_ic.inner.preheader ], [ %311, %for_body_ic.inner ]
  %118 = phi <4 x i16> [ %.lcssa47103116, %for_begin_ic.inner.preheader ], [ %319, %for_body_ic.inner ]
  %119 = phi <4 x i16> [ %.lcssa49105115, %for_begin_ic.inner.preheader ], [ %327, %for_body_ic.inner ]
  %120 = phi <4 x i16> [ %.lcssa51107114, %for_begin_ic.inner.preheader ], [ %335, %for_body_ic.inner ]
  %121 = phi <4 x i16> [ %.lcssa53109113, %for_begin_ic.inner.preheader ], [ %343, %for_body_ic.inner ]
  %122 = phi <4 x i16> [ %.lcssa55111112, %for_begin_ic.inner.preheader ], [ %351, %for_body_ic.inner ]
  %123 = shl nuw nsw i64 %indvars.iv, 2
  %124 = add nuw nsw i64 %92, %123
  %125 = add nsw i64 %94, %indvars.iv
  %126 = getelementptr inbounds i8, ptr %p1, i64 %124
  %127 = load <4 x i8>, ptr %126, align 4, !tbaa !8185
  %128 = sext <4 x i8> %127 to <4 x i16>
  %129 = getelementptr inbounds i8, ptr %p0, i64 %125
  %130 = load i8, ptr %129, align 1, !tbaa !8187
  %131 = insertelement <4 x i8> undef, i8 %130, i64 0
  %132 = shufflevector <4 x i8> %131, <4 x i8> undef, <4 x i32> zeroinitializer
  %133 = sext <4 x i8> %132 to <4 x i16>
  %134 = mul nsw <4 x i16> %133, %128
  %135 = add <4 x i16> %134, %95
  %136 = add nsw i64 %125, 4
  %137 = getelementptr inbounds i8, ptr %p0, i64 %136
  %138 = load i8, ptr %137, align 1, !tbaa !8187
  %139 = insertelement <4 x i8> undef, i8 %138, i64 0
  %140 = shufflevector <4 x i8> %139, <4 x i8> undef, <4 x i32> zeroinitializer
  %141 = sext <4 x i8> %140 to <4 x i16>
  %142 = mul nsw <4 x i16> %141, %128
  %143 = add <4 x i16> %142, %96
  %144 = add nsw i64 %125, 8
  %145 = getelementptr inbounds i8, ptr %p0, i64 %144
  %146 = load i8, ptr %145, align 1, !tbaa !8187
  %147 = insertelement <4 x i8> undef, i8 %146, i64 0
  %148 = shufflevector <4 x i8> %147, <4 x i8> undef, <4 x i32> zeroinitializer
  %149 = sext <4 x i8> %148 to <4 x i16>
  %150 = mul nsw <4 x i16> %149, %128
  %151 = add <4 x i16> %150, %97
  %152 = add nsw i64 %125, 12
  %153 = getelementptr inbounds i8, ptr %p0, i64 %152
  %154 = load i8, ptr %153, align 1, !tbaa !8187
  %155 = insertelement <4 x i8> undef, i8 %154, i64 0
  %156 = shufflevector <4 x i8> %155, <4 x i8> undef, <4 x i32> zeroinitializer
  %157 = sext <4 x i8> %156 to <4 x i16>
  %158 = mul nsw <4 x i16> %157, %128
  %159 = add <4 x i16> %158, %98
  %160 = add nsw i64 %125, 16
  %161 = getelementptr inbounds i8, ptr %p0, i64 %160
  %162 = load i8, ptr %161, align 1, !tbaa !8187
  %163 = insertelement <4 x i8> undef, i8 %162, i64 0
  %164 = shufflevector <4 x i8> %163, <4 x i8> undef, <4 x i32> zeroinitializer
  %165 = sext <4 x i8> %164 to <4 x i16>
  %166 = mul nsw <4 x i16> %165, %128
  %167 = add <4 x i16> %166, %99
  %168 = add nsw i64 %125, 20
  %169 = getelementptr inbounds i8, ptr %p0, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !8187
  %171 = insertelement <4 x i8> undef, i8 %170, i64 0
  %172 = shufflevector <4 x i8> %171, <4 x i8> undef, <4 x i32> zeroinitializer
  %173 = sext <4 x i8> %172 to <4 x i16>
  %174 = mul nsw <4 x i16> %173, %128
  %175 = add <4 x i16> %174, %100
  %176 = add nsw i64 %125, 24
  %177 = getelementptr inbounds i8, ptr %p0, i64 %176
  %178 = load i8, ptr %177, align 1, !tbaa !8187
  %179 = insertelement <4 x i8> undef, i8 %178, i64 0
  %180 = shufflevector <4 x i8> %179, <4 x i8> undef, <4 x i32> zeroinitializer
  %181 = sext <4 x i8> %180 to <4 x i16>
  %182 = mul nsw <4 x i16> %181, %128
  %183 = add <4 x i16> %182, %101
  %184 = add nsw i64 %125, 28
  %185 = getelementptr inbounds i8, ptr %p0, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !8187
  %187 = insertelement <4 x i8> undef, i8 %186, i64 0
  %188 = shufflevector <4 x i8> %187, <4 x i8> undef, <4 x i32> zeroinitializer
  %189 = sext <4 x i8> %188 to <4 x i16>
  %190 = mul nsw <4 x i16> %189, %128
  %191 = add <4 x i16> %190, %102
  %192 = add nsw i64 %125, 32
  %193 = getelementptr inbounds i8, ptr %p0, i64 %192
  %194 = load i8, ptr %193, align 1, !tbaa !8187
  %195 = insertelement <4 x i8> undef, i8 %194, i64 0
  %196 = shufflevector <4 x i8> %195, <4 x i8> undef, <4 x i32> zeroinitializer
  %197 = sext <4 x i8> %196 to <4 x i16>
  %198 = mul nsw <4 x i16> %197, %128
  %199 = add <4 x i16> %198, %103
  %200 = add nsw i64 %125, 36
  %201 = getelementptr inbounds i8, ptr %p0, i64 %200
  %202 = load i8, ptr %201, align 1, !tbaa !8187
  %203 = insertelement <4 x i8> undef, i8 %202, i64 0
  %204 = shufflevector <4 x i8> %203, <4 x i8> undef, <4 x i32> zeroinitializer
  %205 = sext <4 x i8> %204 to <4 x i16>
  %206 = mul nsw <4 x i16> %205, %128
  %207 = add <4 x i16> %206, %104
  %208 = add nsw i64 %125, 40
  %209 = getelementptr inbounds i8, ptr %p0, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !8187
  %211 = insertelement <4 x i8> undef, i8 %210, i64 0
  %212 = shufflevector <4 x i8> %211, <4 x i8> undef, <4 x i32> zeroinitializer
  %213 = sext <4 x i8> %212 to <4 x i16>
  %214 = mul nsw <4 x i16> %213, %128
  %215 = add <4 x i16> %214, %105
  %216 = add nsw i64 %125, 44
  %217 = getelementptr inbounds i8, ptr %p0, i64 %216
  %218 = load i8, ptr %217, align 1, !tbaa !8187
  %219 = insertelement <4 x i8> undef, i8 %218, i64 0
  %220 = shufflevector <4 x i8> %219, <4 x i8> undef, <4 x i32> zeroinitializer
  %221 = sext <4 x i8> %220 to <4 x i16>
  %222 = mul nsw <4 x i16> %221, %128
  %223 = add <4 x i16> %222, %106
  %224 = add nsw i64 %125, 48
  %225 = getelementptr inbounds i8, ptr %p0, i64 %224
  %226 = load i8, ptr %225, align 1, !tbaa !8187
  %227 = insertelement <4 x i8> undef, i8 %226, i64 0
  %228 = shufflevector <4 x i8> %227, <4 x i8> undef, <4 x i32> zeroinitializer
  %229 = sext <4 x i8> %228 to <4 x i16>
  %230 = mul nsw <4 x i16> %229, %128
  %231 = add <4 x i16> %230, %107
  %232 = add nsw i64 %125, 52
  %233 = getelementptr inbounds i8, ptr %p0, i64 %232
  %234 = load i8, ptr %233, align 1, !tbaa !8187
  %235 = insertelement <4 x i8> undef, i8 %234, i64 0
  %236 = shufflevector <4 x i8> %235, <4 x i8> undef, <4 x i32> zeroinitializer
  %237 = sext <4 x i8> %236 to <4 x i16>
  %238 = mul nsw <4 x i16> %237, %128
  %239 = add <4 x i16> %238, %108
  %240 = add nsw i64 %125, 56
  %241 = getelementptr inbounds i8, ptr %p0, i64 %240
  %242 = load i8, ptr %241, align 1, !tbaa !8187
  %243 = insertelement <4 x i8> undef, i8 %242, i64 0
  %244 = shufflevector <4 x i8> %243, <4 x i8> undef, <4 x i32> zeroinitializer
  %245 = sext <4 x i8> %244 to <4 x i16>
  %246 = mul nsw <4 x i16> %245, %128
  %247 = add <4 x i16> %246, %109
  %248 = add nsw i64 %125, 60
  %249 = getelementptr inbounds i8, ptr %p0, i64 %248
  %250 = load i8, ptr %249, align 1, !tbaa !8187
  %251 = insertelement <4 x i8> undef, i8 %250, i64 0
  %252 = shufflevector <4 x i8> %251, <4 x i8> undef, <4 x i32> zeroinitializer
  %253 = sext <4 x i8> %252 to <4 x i16>
  %254 = mul nsw <4 x i16> %253, %128
  %255 = add <4 x i16> %254, %110
  %256 = add nsw i64 %125, 64
  %257 = getelementptr inbounds i8, ptr %p0, i64 %256
  %258 = load i8, ptr %257, align 1, !tbaa !8187
  %259 = insertelement <4 x i8> undef, i8 %258, i64 0
  %260 = shufflevector <4 x i8> %259, <4 x i8> undef, <4 x i32> zeroinitializer
  %261 = sext <4 x i8> %260 to <4 x i16>
  %262 = mul nsw <4 x i16> %261, %128
  %263 = add <4 x i16> %262, %111
  %264 = add nsw i64 %125, 68
  %265 = getelementptr inbounds i8, ptr %p0, i64 %264
  %266 = load i8, ptr %265, align 1, !tbaa !8187
  %267 = insertelement <4 x i8> undef, i8 %266, i64 0
  %268 = shufflevector <4 x i8> %267, <4 x i8> undef, <4 x i32> zeroinitializer
  %269 = sext <4 x i8> %268 to <4 x i16>
  %270 = mul nsw <4 x i16> %269, %128
  %271 = add <4 x i16> %270, %112
  %272 = add nsw i64 %125, 72
  %273 = getelementptr inbounds i8, ptr %p0, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !8187
  %275 = insertelement <4 x i8> undef, i8 %274, i64 0
  %276 = shufflevector <4 x i8> %275, <4 x i8> undef, <4 x i32> zeroinitializer
  %277 = sext <4 x i8> %276 to <4 x i16>
  %278 = mul nsw <4 x i16> %277, %128
  %279 = add <4 x i16> %278, %113
  %280 = add nsw i64 %125, 76
  %281 = getelementptr inbounds i8, ptr %p0, i64 %280
  %282 = load i8, ptr %281, align 1, !tbaa !8187
  %283 = insertelement <4 x i8> undef, i8 %282, i64 0
  %284 = shufflevector <4 x i8> %283, <4 x i8> undef, <4 x i32> zeroinitializer
  %285 = sext <4 x i8> %284 to <4 x i16>
  %286 = mul nsw <4 x i16> %285, %128
  %287 = add <4 x i16> %286, %114
  %288 = add nsw i64 %125, 80
  %289 = getelementptr inbounds i8, ptr %p0, i64 %288
  %290 = load i8, ptr %289, align 1, !tbaa !8187
  %291 = insertelement <4 x i8> undef, i8 %290, i64 0
  %292 = shufflevector <4 x i8> %291, <4 x i8> undef, <4 x i32> zeroinitializer
  %293 = sext <4 x i8> %292 to <4 x i16>
  %294 = mul nsw <4 x i16> %293, %128
  %295 = add <4 x i16> %294, %115
  %296 = add nsw i64 %125, 84
  %297 = getelementptr inbounds i8, ptr %p0, i64 %296
  %298 = load i8, ptr %297, align 1, !tbaa !8187
  %299 = insertelement <4 x i8> undef, i8 %298, i64 0
  %300 = shufflevector <4 x i8> %299, <4 x i8> undef, <4 x i32> zeroinitializer
  %301 = sext <4 x i8> %300 to <4 x i16>
  %302 = mul nsw <4 x i16> %301, %128
  %303 = add <4 x i16> %302, %116
  %304 = add nsw i64 %125, 88
  %305 = getelementptr inbounds i8, ptr %p0, i64 %304
  %306 = load i8, ptr %305, align 1, !tbaa !8187
  %307 = insertelement <4 x i8> undef, i8 %306, i64 0
  %308 = shufflevector <4 x i8> %307, <4 x i8> undef, <4 x i32> zeroinitializer
  %309 = sext <4 x i8> %308 to <4 x i16>
  %310 = mul nsw <4 x i16> %309, %128
  %311 = add <4 x i16> %310, %117
  %312 = add nsw i64 %125, 92
  %313 = getelementptr inbounds i8, ptr %p0, i64 %312
  %314 = load i8, ptr %313, align 1, !tbaa !8187
  %315 = insertelement <4 x i8> undef, i8 %314, i64 0
  %316 = shufflevector <4 x i8> %315, <4 x i8> undef, <4 x i32> zeroinitializer
  %317 = sext <4 x i8> %316 to <4 x i16>
  %318 = mul nsw <4 x i16> %317, %128
  %319 = add <4 x i16> %318, %118
  %320 = add nsw i64 %125, 96
  %321 = getelementptr inbounds i8, ptr %p0, i64 %320
  %322 = load i8, ptr %321, align 1, !tbaa !8187
  %323 = insertelement <4 x i8> undef, i8 %322, i64 0
  %324 = shufflevector <4 x i8> %323, <4 x i8> undef, <4 x i32> zeroinitializer
  %325 = sext <4 x i8> %324 to <4 x i16>
  %326 = mul nsw <4 x i16> %325, %128
  %327 = add <4 x i16> %326, %119
  %328 = add nsw i64 %125, 100
  %329 = getelementptr inbounds i8, ptr %p0, i64 %328
  %330 = load i8, ptr %329, align 1, !tbaa !8187
  %331 = insertelement <4 x i8> undef, i8 %330, i64 0
  %332 = shufflevector <4 x i8> %331, <4 x i8> undef, <4 x i32> zeroinitializer
  %333 = sext <4 x i8> %332 to <4 x i16>
  %334 = mul nsw <4 x i16> %333, %128
  %335 = add <4 x i16> %334, %120
  %336 = add nsw i64 %125, 104
  %337 = getelementptr inbounds i8, ptr %p0, i64 %336
  %338 = load i8, ptr %337, align 1, !tbaa !8187
  %339 = insertelement <4 x i8> undef, i8 %338, i64 0
  %340 = shufflevector <4 x i8> %339, <4 x i8> undef, <4 x i32> zeroinitializer
  %341 = sext <4 x i8> %340 to <4 x i16>
  %342 = mul nsw <4 x i16> %341, %128
  %343 = add <4 x i16> %342, %121
  %344 = add nsw i64 %125, 108
  %345 = getelementptr inbounds i8, ptr %p0, i64 %344
  %346 = load i8, ptr %345, align 1, !tbaa !8187
  %347 = insertelement <4 x i8> undef, i8 %346, i64 0
  %348 = shufflevector <4 x i8> %347, <4 x i8> undef, <4 x i32> zeroinitializer
  %349 = sext <4 x i8> %348 to <4 x i16>
  %350 = mul nsw <4 x i16> %349, %128
  %351 = add <4 x i16> %350, %122
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !59

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next176 = add nuw nsw i64 %indvars.iv175, 1
  %exitcond178.not = icmp eq i64 %indvars.iv.next176, 64
  br i1 %exitcond178.not, label %for_end_ic.outer, label %for_begin_ic.inner.preheader, !prof !59

for_body_ax3.inner:                               ; preds = %for_body_ax3.inner, %for_begin_ax3.outer.preheader
  %indvars.iv183 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next184.1275, %for_body_ax3.inner ]
  %352 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv183
  %353 = load <4 x i16>, ptr %352, align 16, !tbaa !8183
  %354 = add <4 x i16> %23, %353
  %355 = ashr <4 x i16> %354, %20
  %356 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %355, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %357 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %356, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %358 = trunc <4 x i16> %357 to <4 x i8>
  %359 = shl nuw nsw i64 %indvars.iv183, 2
  %360 = add nsw i64 %31, %359
  %361 = getelementptr inbounds i8, ptr %T_cast, i64 %360
  store <4 x i8> %358, ptr %361, align 4, !tbaa !8189
  %indvars.iv.next184 = or i64 %indvars.iv183, 1
  %362 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv.next184
  %363 = load <4 x i16>, ptr %362, align 8, !tbaa !8183
  %364 = add <4 x i16> %23, %363
  %365 = ashr <4 x i16> %364, %20
  %366 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %365, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %367 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %366, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %368 = trunc <4 x i16> %367 to <4 x i8>
  %369 = shl nuw nsw i64 %indvars.iv.next184, 2
  %370 = add nsw i64 %31, %369
  %371 = getelementptr inbounds i8, ptr %T_cast, i64 %370
  store <4 x i8> %368, ptr %371, align 4, !tbaa !8189
  %indvars.iv.next184.1275 = add nuw nsw i64 %indvars.iv183, 2
  %exitcond186.not.1 = icmp eq i64 %indvars.iv.next184.1275, 28
  br i1 %exitcond186.not.1, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !7452

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %372 = add nsw i64 %31, 112
  br label %for_body_ax3.inner.1

for_body_ax3.inner.1:                             ; preds = %for_body_ax3.inner.1, %for_end_ax3.inner
  %indvars.iv183.1 = phi i64 [ 0, %for_end_ax3.inner ], [ %indvars.iv.next184.1.1, %for_body_ax3.inner.1 ]
  %373 = add nuw nsw i64 %indvars.iv183.1, 28
  %374 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %373
  %375 = load <4 x i16>, ptr %374, align 16, !tbaa !8183
  %376 = add <4 x i16> %23, %375
  %377 = ashr <4 x i16> %376, %20
  %378 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %377, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %379 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %378, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %380 = trunc <4 x i16> %379 to <4 x i8>
  %381 = shl nuw nsw i64 %indvars.iv183.1, 2
  %382 = add nsw i64 %372, %381
  %383 = getelementptr inbounds i8, ptr %T_cast, i64 %382
  store <4 x i8> %380, ptr %383, align 4, !tbaa !8189
  %384 = add nuw nsw i64 %indvars.iv183.1, 29
  %385 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %384
  %386 = load <4 x i16>, ptr %385, align 8, !tbaa !8183
  %387 = add <4 x i16> %23, %386
  %388 = ashr <4 x i16> %387, %20
  %389 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %388, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %390 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %389, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %391 = trunc <4 x i16> %390 to <4 x i8>
  %indvars.iv.next184.1 = shl i64 %indvars.iv183.1, 2
  %392 = or i64 %indvars.iv.next184.1, 4
  %393 = add nsw i64 %372, %392
  %394 = getelementptr inbounds i8, ptr %T_cast, i64 %393
  store <4 x i8> %391, ptr %394, align 4, !tbaa !8189
  %indvars.iv.next184.1.1 = add nuw nsw i64 %indvars.iv183.1, 2
  %exitcond186.1.not.1 = icmp eq i64 %indvars.iv.next184.1.1, 28
  br i1 %exitcond186.1.not.1, label %for_end_ax3.inner.1, label %for_body_ax3.inner.1, !prof !7452

for_end_ax3.inner.1:                              ; preds = %for_body_ax3.inner.1
  %indvars.iv.next191 = add nsw i64 %indvars.iv190, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next191 to i32
  %exitcond192.not = icmp eq i32 %17, %lftr.wideiv
  br i1 %exitcond192.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_begin_ow.c.outer.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_4_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.40, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.40, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.40, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.40, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.40, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1918, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1918(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %conv2d_NCHWc.global1 = alloca [56 x <4 x i16>], align 16
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.40, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.40, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 1791
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 1792)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 1792)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_begin_ow.c.outer.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_begin_ow.c.outer.preheader.preheader:         ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.40, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.40, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = tail call i32 @llvm.smin.i32(i32 %10, i32 1792)
  %smin = sext i32 %15 to i64
  %16 = add i32 %9, %15
  %17 = sub i32 %16, %11
  %18 = load i16, ptr %p3, align 64, !tbaa !8191
  %19 = insertelement <4 x i16> undef, i16 %18, i64 0
  %20 = shufflevector <4 x i16> %19, <4 x i16> undef, <4 x i32> zeroinitializer
  %21 = load i16, ptr %p2, align 64, !tbaa !8203
  %22 = insertelement <4 x i16> undef, i16 %21, i64 0
  %23 = shufflevector <4 x i16> %22, <4 x i16> undef, <4 x i32> zeroinitializer
  br label %for_begin_ow.c.outer.preheader

for_begin_ow.c.outer.preheader:                   ; preds = %for_begin_ow.c.outer.preheader.preheader, %for_end_ax3.inner.1
  %indvars.iv190 = phi i64 [ %smin, %for_begin_ow.c.outer.preheader.preheader ], [ %indvars.iv.next191, %for_end_ax3.inner.1 ]
  %24 = trunc i64 %indvars.iv190 to i32
  %25 = sdiv i32 %24, 56
  %26 = shl nsw i32 %25, 10
  %27 = srem i32 %24, 56
  %28 = mul nsw i32 %27, 224
  %29 = sext i32 %26 to i64
  %30 = sext i32 %28 to i64
  br label %for_body_ow.c.outer

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_end_ax3.inner.1, %parallel_closure_entry
  ret i32 0

for_begin_ax3.outer.preheader:                    ; preds = %for_end_ic.outer
  %31 = mul nsw i64 %indvars.iv190, 224
  br label %for_body_ax3.inner

for_body_ow.c.outer:                              ; preds = %for_begin_ow.c.outer.preheader, %for_end_ic.outer
  %32 = phi i1 [ true, %for_begin_ow.c.outer.preheader ], [ false, %for_end_ic.outer ]
  %indvars.iv179 = phi i64 [ 0, %for_begin_ow.c.outer.preheader ], [ 1, %for_end_ic.outer ]
  %33 = mul nuw nsw i64 %indvars.iv179, 28
  %34 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %33
  store <4 x i16> zeroinitializer, ptr %34, align 16, !tbaa !8215
  %35 = or i64 %33, 1
  %36 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %35
  store <4 x i16> zeroinitializer, ptr %36, align 8, !tbaa !8215
  %37 = or i64 %33, 2
  %38 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %37
  store <4 x i16> zeroinitializer, ptr %38, align 16, !tbaa !8215
  %39 = or i64 %33, 3
  %40 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %39
  store <4 x i16> zeroinitializer, ptr %40, align 8, !tbaa !8215
  %41 = add nuw nsw i64 %33, 4
  %42 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %41
  store <4 x i16> zeroinitializer, ptr %42, align 16, !tbaa !8215
  %43 = add nuw nsw i64 %33, 5
  %44 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %43
  store <4 x i16> zeroinitializer, ptr %44, align 8, !tbaa !8215
  %45 = add nuw nsw i64 %33, 6
  %46 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %45
  store <4 x i16> zeroinitializer, ptr %46, align 16, !tbaa !8215
  %47 = add nuw nsw i64 %33, 7
  %48 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %47
  store <4 x i16> zeroinitializer, ptr %48, align 8, !tbaa !8215
  %49 = add nuw nsw i64 %33, 8
  %50 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %49
  store <4 x i16> zeroinitializer, ptr %50, align 16, !tbaa !8215
  %51 = add nuw nsw i64 %33, 9
  %52 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %51
  store <4 x i16> zeroinitializer, ptr %52, align 8, !tbaa !8215
  %53 = add nuw nsw i64 %33, 10
  %54 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %53
  store <4 x i16> zeroinitializer, ptr %54, align 16, !tbaa !8215
  %55 = add nuw nsw i64 %33, 11
  %56 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %55
  store <4 x i16> zeroinitializer, ptr %56, align 8, !tbaa !8215
  %57 = add nuw nsw i64 %33, 12
  %58 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %57
  store <4 x i16> zeroinitializer, ptr %58, align 16, !tbaa !8215
  %59 = add nuw nsw i64 %33, 13
  %60 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %59
  %61 = add nuw nsw i64 %33, 14
  %62 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %61
  %63 = add nuw nsw i64 %33, 15
  %64 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %63
  %65 = add nuw nsw i64 %33, 16
  %66 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %65
  %67 = add nuw nsw i64 %33, 17
  %68 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %67
  %69 = add nuw nsw i64 %33, 18
  %70 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %69
  %71 = add nuw nsw i64 %33, 19
  %72 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %71
  %73 = add nuw nsw i64 %33, 20
  %74 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %73
  %75 = add nuw nsw i64 %33, 21
  %76 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %75
  %77 = add nuw nsw i64 %33, 22
  %78 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %77
  %79 = add nuw nsw i64 %33, 23
  %80 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %79
  %81 = add nuw nsw i64 %33, 24
  %82 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %81
  %83 = add nuw nsw i64 %33, 25
  %84 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %83
  %85 = add nuw nsw i64 %33, 26
  %86 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %85
  %87 = add nuw nsw i64 %33, 27
  %88 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %87
  %89 = mul nuw nsw i64 %indvars.iv179, 112
  %90 = add nsw i64 %89, %30
  br label %for_begin_ic.inner.preheader

for_begin_ic.inner.preheader:                     ; preds = %for_body_ow.c.outer, %for_end_ic.inner
  %indvars.iv175 = phi i64 [ 0, %for_body_ow.c.outer ], [ %indvars.iv.next176, %for_end_ic.inner ]
  %.lcssa58139 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %135, %for_end_ic.inner ]
  %.lcssa359138 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %143, %for_end_ic.inner ]
  %.lcssa561137 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %151, %for_end_ic.inner ]
  %.lcssa763136 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %159, %for_end_ic.inner ]
  %.lcssa965135 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %167, %for_end_ic.inner ]
  %.lcssa1167134 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %175, %for_end_ic.inner ]
  %.lcssa1369133 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %183, %for_end_ic.inner ]
  %.lcssa1571132 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %191, %for_end_ic.inner ]
  %.lcssa1773131 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %199, %for_end_ic.inner ]
  %.lcssa1975130 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %207, %for_end_ic.inner ]
  %.lcssa2177129 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %215, %for_end_ic.inner ]
  %.lcssa2379128 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %223, %for_end_ic.inner ]
  %.lcssa2581127 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %231, %for_end_ic.inner ]
  %.lcssa2783126 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %239, %for_end_ic.inner ]
  %.lcssa2985125 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %247, %for_end_ic.inner ]
  %.lcssa3187124 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %255, %for_end_ic.inner ]
  %.lcssa3389123 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %263, %for_end_ic.inner ]
  %.lcssa3591122 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %271, %for_end_ic.inner ]
  %.lcssa3793121 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %279, %for_end_ic.inner ]
  %.lcssa3995120 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %287, %for_end_ic.inner ]
  %.lcssa4197119 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %295, %for_end_ic.inner ]
  %.lcssa4399118 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %303, %for_end_ic.inner ]
  %.lcssa45101117 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %311, %for_end_ic.inner ]
  %.lcssa47103116 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %319, %for_end_ic.inner ]
  %.lcssa49105115 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %327, %for_end_ic.inner ]
  %.lcssa51107114 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %335, %for_end_ic.inner ]
  %.lcssa53109113 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %343, %for_end_ic.inner ]
  %.lcssa55111112 = phi <4 x i16> [ zeroinitializer, %for_body_ow.c.outer ], [ %351, %for_end_ic.inner ]
  %91 = shl nsw i64 %indvars.iv175, 4
  %92 = add nuw nsw i64 %91, %29
  %93 = mul nuw nsw i64 %indvars.iv175, 12544
  %94 = add nsw i64 %90, %93
  br label %for_body_ic.inner

for_end_ic.outer:                                 ; preds = %for_end_ic.inner
  store <4 x i16> %135, ptr %34, align 16, !tbaa !8215
  store <4 x i16> %143, ptr %36, align 8, !tbaa !8215
  store <4 x i16> %151, ptr %38, align 16, !tbaa !8215
  store <4 x i16> %159, ptr %40, align 8, !tbaa !8215
  store <4 x i16> %167, ptr %42, align 16, !tbaa !8215
  store <4 x i16> %175, ptr %44, align 8, !tbaa !8215
  store <4 x i16> %183, ptr %46, align 16, !tbaa !8215
  store <4 x i16> %191, ptr %48, align 8, !tbaa !8215
  store <4 x i16> %199, ptr %50, align 16, !tbaa !8215
  store <4 x i16> %207, ptr %52, align 8, !tbaa !8215
  store <4 x i16> %215, ptr %54, align 16, !tbaa !8215
  store <4 x i16> %223, ptr %56, align 8, !tbaa !8215
  store <4 x i16> %231, ptr %58, align 16, !tbaa !8215
  store <4 x i16> %239, ptr %60, align 8, !tbaa !8215
  store <4 x i16> %247, ptr %62, align 16, !tbaa !8215
  store <4 x i16> %255, ptr %64, align 8, !tbaa !8215
  store <4 x i16> %263, ptr %66, align 16, !tbaa !8215
  store <4 x i16> %271, ptr %68, align 8, !tbaa !8215
  store <4 x i16> %279, ptr %70, align 16, !tbaa !8215
  store <4 x i16> %287, ptr %72, align 8, !tbaa !8215
  store <4 x i16> %295, ptr %74, align 16, !tbaa !8215
  store <4 x i16> %303, ptr %76, align 8, !tbaa !8215
  store <4 x i16> %311, ptr %78, align 16, !tbaa !8215
  store <4 x i16> %319, ptr %80, align 8, !tbaa !8215
  store <4 x i16> %327, ptr %82, align 16, !tbaa !8215
  store <4 x i16> %335, ptr %84, align 8, !tbaa !8215
  store <4 x i16> %343, ptr %86, align 16, !tbaa !8215
  store <4 x i16> %351, ptr %88, align 8, !tbaa !8215
  br i1 %32, label %for_body_ow.c.outer, label %for_begin_ax3.outer.preheader, !prof !18

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %95 = phi <4 x i16> [ %.lcssa58139, %for_begin_ic.inner.preheader ], [ %135, %for_body_ic.inner ]
  %96 = phi <4 x i16> [ %.lcssa359138, %for_begin_ic.inner.preheader ], [ %143, %for_body_ic.inner ]
  %97 = phi <4 x i16> [ %.lcssa561137, %for_begin_ic.inner.preheader ], [ %151, %for_body_ic.inner ]
  %98 = phi <4 x i16> [ %.lcssa763136, %for_begin_ic.inner.preheader ], [ %159, %for_body_ic.inner ]
  %99 = phi <4 x i16> [ %.lcssa965135, %for_begin_ic.inner.preheader ], [ %167, %for_body_ic.inner ]
  %100 = phi <4 x i16> [ %.lcssa1167134, %for_begin_ic.inner.preheader ], [ %175, %for_body_ic.inner ]
  %101 = phi <4 x i16> [ %.lcssa1369133, %for_begin_ic.inner.preheader ], [ %183, %for_body_ic.inner ]
  %102 = phi <4 x i16> [ %.lcssa1571132, %for_begin_ic.inner.preheader ], [ %191, %for_body_ic.inner ]
  %103 = phi <4 x i16> [ %.lcssa1773131, %for_begin_ic.inner.preheader ], [ %199, %for_body_ic.inner ]
  %104 = phi <4 x i16> [ %.lcssa1975130, %for_begin_ic.inner.preheader ], [ %207, %for_body_ic.inner ]
  %105 = phi <4 x i16> [ %.lcssa2177129, %for_begin_ic.inner.preheader ], [ %215, %for_body_ic.inner ]
  %106 = phi <4 x i16> [ %.lcssa2379128, %for_begin_ic.inner.preheader ], [ %223, %for_body_ic.inner ]
  %107 = phi <4 x i16> [ %.lcssa2581127, %for_begin_ic.inner.preheader ], [ %231, %for_body_ic.inner ]
  %108 = phi <4 x i16> [ %.lcssa2783126, %for_begin_ic.inner.preheader ], [ %239, %for_body_ic.inner ]
  %109 = phi <4 x i16> [ %.lcssa2985125, %for_begin_ic.inner.preheader ], [ %247, %for_body_ic.inner ]
  %110 = phi <4 x i16> [ %.lcssa3187124, %for_begin_ic.inner.preheader ], [ %255, %for_body_ic.inner ]
  %111 = phi <4 x i16> [ %.lcssa3389123, %for_begin_ic.inner.preheader ], [ %263, %for_body_ic.inner ]
  %112 = phi <4 x i16> [ %.lcssa3591122, %for_begin_ic.inner.preheader ], [ %271, %for_body_ic.inner ]
  %113 = phi <4 x i16> [ %.lcssa3793121, %for_begin_ic.inner.preheader ], [ %279, %for_body_ic.inner ]
  %114 = phi <4 x i16> [ %.lcssa3995120, %for_begin_ic.inner.preheader ], [ %287, %for_body_ic.inner ]
  %115 = phi <4 x i16> [ %.lcssa4197119, %for_begin_ic.inner.preheader ], [ %295, %for_body_ic.inner ]
  %116 = phi <4 x i16> [ %.lcssa4399118, %for_begin_ic.inner.preheader ], [ %303, %for_body_ic.inner ]
  %117 = phi <4 x i16> [ %.lcssa45101117, %for_begin_ic.inner.preheader ], [ %311, %for_body_ic.inner ]
  %118 = phi <4 x i16> [ %.lcssa47103116, %for_begin_ic.inner.preheader ], [ %319, %for_body_ic.inner ]
  %119 = phi <4 x i16> [ %.lcssa49105115, %for_begin_ic.inner.preheader ], [ %327, %for_body_ic.inner ]
  %120 = phi <4 x i16> [ %.lcssa51107114, %for_begin_ic.inner.preheader ], [ %335, %for_body_ic.inner ]
  %121 = phi <4 x i16> [ %.lcssa53109113, %for_begin_ic.inner.preheader ], [ %343, %for_body_ic.inner ]
  %122 = phi <4 x i16> [ %.lcssa55111112, %for_begin_ic.inner.preheader ], [ %351, %for_body_ic.inner ]
  %123 = shl nuw nsw i64 %indvars.iv, 2
  %124 = add nuw nsw i64 %92, %123
  %125 = add nsw i64 %94, %indvars.iv
  %126 = getelementptr inbounds i8, ptr %p1, i64 %124
  %127 = load <4 x i8>, ptr %126, align 4, !tbaa !8217
  %128 = sext <4 x i8> %127 to <4 x i16>
  %129 = getelementptr inbounds i8, ptr %p0, i64 %125
  %130 = load i8, ptr %129, align 1, !tbaa !8219
  %131 = insertelement <4 x i8> undef, i8 %130, i64 0
  %132 = shufflevector <4 x i8> %131, <4 x i8> undef, <4 x i32> zeroinitializer
  %133 = sext <4 x i8> %132 to <4 x i16>
  %134 = mul nsw <4 x i16> %133, %128
  %135 = add <4 x i16> %134, %95
  %136 = add nsw i64 %125, 4
  %137 = getelementptr inbounds i8, ptr %p0, i64 %136
  %138 = load i8, ptr %137, align 1, !tbaa !8219
  %139 = insertelement <4 x i8> undef, i8 %138, i64 0
  %140 = shufflevector <4 x i8> %139, <4 x i8> undef, <4 x i32> zeroinitializer
  %141 = sext <4 x i8> %140 to <4 x i16>
  %142 = mul nsw <4 x i16> %141, %128
  %143 = add <4 x i16> %142, %96
  %144 = add nsw i64 %125, 8
  %145 = getelementptr inbounds i8, ptr %p0, i64 %144
  %146 = load i8, ptr %145, align 1, !tbaa !8219
  %147 = insertelement <4 x i8> undef, i8 %146, i64 0
  %148 = shufflevector <4 x i8> %147, <4 x i8> undef, <4 x i32> zeroinitializer
  %149 = sext <4 x i8> %148 to <4 x i16>
  %150 = mul nsw <4 x i16> %149, %128
  %151 = add <4 x i16> %150, %97
  %152 = add nsw i64 %125, 12
  %153 = getelementptr inbounds i8, ptr %p0, i64 %152
  %154 = load i8, ptr %153, align 1, !tbaa !8219
  %155 = insertelement <4 x i8> undef, i8 %154, i64 0
  %156 = shufflevector <4 x i8> %155, <4 x i8> undef, <4 x i32> zeroinitializer
  %157 = sext <4 x i8> %156 to <4 x i16>
  %158 = mul nsw <4 x i16> %157, %128
  %159 = add <4 x i16> %158, %98
  %160 = add nsw i64 %125, 16
  %161 = getelementptr inbounds i8, ptr %p0, i64 %160
  %162 = load i8, ptr %161, align 1, !tbaa !8219
  %163 = insertelement <4 x i8> undef, i8 %162, i64 0
  %164 = shufflevector <4 x i8> %163, <4 x i8> undef, <4 x i32> zeroinitializer
  %165 = sext <4 x i8> %164 to <4 x i16>
  %166 = mul nsw <4 x i16> %165, %128
  %167 = add <4 x i16> %166, %99
  %168 = add nsw i64 %125, 20
  %169 = getelementptr inbounds i8, ptr %p0, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !8219
  %171 = insertelement <4 x i8> undef, i8 %170, i64 0
  %172 = shufflevector <4 x i8> %171, <4 x i8> undef, <4 x i32> zeroinitializer
  %173 = sext <4 x i8> %172 to <4 x i16>
  %174 = mul nsw <4 x i16> %173, %128
  %175 = add <4 x i16> %174, %100
  %176 = add nsw i64 %125, 24
  %177 = getelementptr inbounds i8, ptr %p0, i64 %176
  %178 = load i8, ptr %177, align 1, !tbaa !8219
  %179 = insertelement <4 x i8> undef, i8 %178, i64 0
  %180 = shufflevector <4 x i8> %179, <4 x i8> undef, <4 x i32> zeroinitializer
  %181 = sext <4 x i8> %180 to <4 x i16>
  %182 = mul nsw <4 x i16> %181, %128
  %183 = add <4 x i16> %182, %101
  %184 = add nsw i64 %125, 28
  %185 = getelementptr inbounds i8, ptr %p0, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !8219
  %187 = insertelement <4 x i8> undef, i8 %186, i64 0
  %188 = shufflevector <4 x i8> %187, <4 x i8> undef, <4 x i32> zeroinitializer
  %189 = sext <4 x i8> %188 to <4 x i16>
  %190 = mul nsw <4 x i16> %189, %128
  %191 = add <4 x i16> %190, %102
  %192 = add nsw i64 %125, 32
  %193 = getelementptr inbounds i8, ptr %p0, i64 %192
  %194 = load i8, ptr %193, align 1, !tbaa !8219
  %195 = insertelement <4 x i8> undef, i8 %194, i64 0
  %196 = shufflevector <4 x i8> %195, <4 x i8> undef, <4 x i32> zeroinitializer
  %197 = sext <4 x i8> %196 to <4 x i16>
  %198 = mul nsw <4 x i16> %197, %128
  %199 = add <4 x i16> %198, %103
  %200 = add nsw i64 %125, 36
  %201 = getelementptr inbounds i8, ptr %p0, i64 %200
  %202 = load i8, ptr %201, align 1, !tbaa !8219
  %203 = insertelement <4 x i8> undef, i8 %202, i64 0
  %204 = shufflevector <4 x i8> %203, <4 x i8> undef, <4 x i32> zeroinitializer
  %205 = sext <4 x i8> %204 to <4 x i16>
  %206 = mul nsw <4 x i16> %205, %128
  %207 = add <4 x i16> %206, %104
  %208 = add nsw i64 %125, 40
  %209 = getelementptr inbounds i8, ptr %p0, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !8219
  %211 = insertelement <4 x i8> undef, i8 %210, i64 0
  %212 = shufflevector <4 x i8> %211, <4 x i8> undef, <4 x i32> zeroinitializer
  %213 = sext <4 x i8> %212 to <4 x i16>
  %214 = mul nsw <4 x i16> %213, %128
  %215 = add <4 x i16> %214, %105
  %216 = add nsw i64 %125, 44
  %217 = getelementptr inbounds i8, ptr %p0, i64 %216
  %218 = load i8, ptr %217, align 1, !tbaa !8219
  %219 = insertelement <4 x i8> undef, i8 %218, i64 0
  %220 = shufflevector <4 x i8> %219, <4 x i8> undef, <4 x i32> zeroinitializer
  %221 = sext <4 x i8> %220 to <4 x i16>
  %222 = mul nsw <4 x i16> %221, %128
  %223 = add <4 x i16> %222, %106
  %224 = add nsw i64 %125, 48
  %225 = getelementptr inbounds i8, ptr %p0, i64 %224
  %226 = load i8, ptr %225, align 1, !tbaa !8219
  %227 = insertelement <4 x i8> undef, i8 %226, i64 0
  %228 = shufflevector <4 x i8> %227, <4 x i8> undef, <4 x i32> zeroinitializer
  %229 = sext <4 x i8> %228 to <4 x i16>
  %230 = mul nsw <4 x i16> %229, %128
  %231 = add <4 x i16> %230, %107
  %232 = add nsw i64 %125, 52
  %233 = getelementptr inbounds i8, ptr %p0, i64 %232
  %234 = load i8, ptr %233, align 1, !tbaa !8219
  %235 = insertelement <4 x i8> undef, i8 %234, i64 0
  %236 = shufflevector <4 x i8> %235, <4 x i8> undef, <4 x i32> zeroinitializer
  %237 = sext <4 x i8> %236 to <4 x i16>
  %238 = mul nsw <4 x i16> %237, %128
  %239 = add <4 x i16> %238, %108
  %240 = add nsw i64 %125, 56
  %241 = getelementptr inbounds i8, ptr %p0, i64 %240
  %242 = load i8, ptr %241, align 1, !tbaa !8219
  %243 = insertelement <4 x i8> undef, i8 %242, i64 0
  %244 = shufflevector <4 x i8> %243, <4 x i8> undef, <4 x i32> zeroinitializer
  %245 = sext <4 x i8> %244 to <4 x i16>
  %246 = mul nsw <4 x i16> %245, %128
  %247 = add <4 x i16> %246, %109
  %248 = add nsw i64 %125, 60
  %249 = getelementptr inbounds i8, ptr %p0, i64 %248
  %250 = load i8, ptr %249, align 1, !tbaa !8219
  %251 = insertelement <4 x i8> undef, i8 %250, i64 0
  %252 = shufflevector <4 x i8> %251, <4 x i8> undef, <4 x i32> zeroinitializer
  %253 = sext <4 x i8> %252 to <4 x i16>
  %254 = mul nsw <4 x i16> %253, %128
  %255 = add <4 x i16> %254, %110
  %256 = add nsw i64 %125, 64
  %257 = getelementptr inbounds i8, ptr %p0, i64 %256
  %258 = load i8, ptr %257, align 1, !tbaa !8219
  %259 = insertelement <4 x i8> undef, i8 %258, i64 0
  %260 = shufflevector <4 x i8> %259, <4 x i8> undef, <4 x i32> zeroinitializer
  %261 = sext <4 x i8> %260 to <4 x i16>
  %262 = mul nsw <4 x i16> %261, %128
  %263 = add <4 x i16> %262, %111
  %264 = add nsw i64 %125, 68
  %265 = getelementptr inbounds i8, ptr %p0, i64 %264
  %266 = load i8, ptr %265, align 1, !tbaa !8219
  %267 = insertelement <4 x i8> undef, i8 %266, i64 0
  %268 = shufflevector <4 x i8> %267, <4 x i8> undef, <4 x i32> zeroinitializer
  %269 = sext <4 x i8> %268 to <4 x i16>
  %270 = mul nsw <4 x i16> %269, %128
  %271 = add <4 x i16> %270, %112
  %272 = add nsw i64 %125, 72
  %273 = getelementptr inbounds i8, ptr %p0, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !8219
  %275 = insertelement <4 x i8> undef, i8 %274, i64 0
  %276 = shufflevector <4 x i8> %275, <4 x i8> undef, <4 x i32> zeroinitializer
  %277 = sext <4 x i8> %276 to <4 x i16>
  %278 = mul nsw <4 x i16> %277, %128
  %279 = add <4 x i16> %278, %113
  %280 = add nsw i64 %125, 76
  %281 = getelementptr inbounds i8, ptr %p0, i64 %280
  %282 = load i8, ptr %281, align 1, !tbaa !8219
  %283 = insertelement <4 x i8> undef, i8 %282, i64 0
  %284 = shufflevector <4 x i8> %283, <4 x i8> undef, <4 x i32> zeroinitializer
  %285 = sext <4 x i8> %284 to <4 x i16>
  %286 = mul nsw <4 x i16> %285, %128
  %287 = add <4 x i16> %286, %114
  %288 = add nsw i64 %125, 80
  %289 = getelementptr inbounds i8, ptr %p0, i64 %288
  %290 = load i8, ptr %289, align 1, !tbaa !8219
  %291 = insertelement <4 x i8> undef, i8 %290, i64 0
  %292 = shufflevector <4 x i8> %291, <4 x i8> undef, <4 x i32> zeroinitializer
  %293 = sext <4 x i8> %292 to <4 x i16>
  %294 = mul nsw <4 x i16> %293, %128
  %295 = add <4 x i16> %294, %115
  %296 = add nsw i64 %125, 84
  %297 = getelementptr inbounds i8, ptr %p0, i64 %296
  %298 = load i8, ptr %297, align 1, !tbaa !8219
  %299 = insertelement <4 x i8> undef, i8 %298, i64 0
  %300 = shufflevector <4 x i8> %299, <4 x i8> undef, <4 x i32> zeroinitializer
  %301 = sext <4 x i8> %300 to <4 x i16>
  %302 = mul nsw <4 x i16> %301, %128
  %303 = add <4 x i16> %302, %116
  %304 = add nsw i64 %125, 88
  %305 = getelementptr inbounds i8, ptr %p0, i64 %304
  %306 = load i8, ptr %305, align 1, !tbaa !8219
  %307 = insertelement <4 x i8> undef, i8 %306, i64 0
  %308 = shufflevector <4 x i8> %307, <4 x i8> undef, <4 x i32> zeroinitializer
  %309 = sext <4 x i8> %308 to <4 x i16>
  %310 = mul nsw <4 x i16> %309, %128
  %311 = add <4 x i16> %310, %117
  %312 = add nsw i64 %125, 92
  %313 = getelementptr inbounds i8, ptr %p0, i64 %312
  %314 = load i8, ptr %313, align 1, !tbaa !8219
  %315 = insertelement <4 x i8> undef, i8 %314, i64 0
  %316 = shufflevector <4 x i8> %315, <4 x i8> undef, <4 x i32> zeroinitializer
  %317 = sext <4 x i8> %316 to <4 x i16>
  %318 = mul nsw <4 x i16> %317, %128
  %319 = add <4 x i16> %318, %118
  %320 = add nsw i64 %125, 96
  %321 = getelementptr inbounds i8, ptr %p0, i64 %320
  %322 = load i8, ptr %321, align 1, !tbaa !8219
  %323 = insertelement <4 x i8> undef, i8 %322, i64 0
  %324 = shufflevector <4 x i8> %323, <4 x i8> undef, <4 x i32> zeroinitializer
  %325 = sext <4 x i8> %324 to <4 x i16>
  %326 = mul nsw <4 x i16> %325, %128
  %327 = add <4 x i16> %326, %119
  %328 = add nsw i64 %125, 100
  %329 = getelementptr inbounds i8, ptr %p0, i64 %328
  %330 = load i8, ptr %329, align 1, !tbaa !8219
  %331 = insertelement <4 x i8> undef, i8 %330, i64 0
  %332 = shufflevector <4 x i8> %331, <4 x i8> undef, <4 x i32> zeroinitializer
  %333 = sext <4 x i8> %332 to <4 x i16>
  %334 = mul nsw <4 x i16> %333, %128
  %335 = add <4 x i16> %334, %120
  %336 = add nsw i64 %125, 104
  %337 = getelementptr inbounds i8, ptr %p0, i64 %336
  %338 = load i8, ptr %337, align 1, !tbaa !8219
  %339 = insertelement <4 x i8> undef, i8 %338, i64 0
  %340 = shufflevector <4 x i8> %339, <4 x i8> undef, <4 x i32> zeroinitializer
  %341 = sext <4 x i8> %340 to <4 x i16>
  %342 = mul nsw <4 x i16> %341, %128
  %343 = add <4 x i16> %342, %121
  %344 = add nsw i64 %125, 108
  %345 = getelementptr inbounds i8, ptr %p0, i64 %344
  %346 = load i8, ptr %345, align 1, !tbaa !8219
  %347 = insertelement <4 x i8> undef, i8 %346, i64 0
  %348 = shufflevector <4 x i8> %347, <4 x i8> undef, <4 x i32> zeroinitializer
  %349 = sext <4 x i8> %348 to <4 x i16>
  %350 = mul nsw <4 x i16> %349, %128
  %351 = add <4 x i16> %350, %122
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !59

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next176 = add nuw nsw i64 %indvars.iv175, 1
  %exitcond178.not = icmp eq i64 %indvars.iv.next176, 64
  br i1 %exitcond178.not, label %for_end_ic.outer, label %for_begin_ic.inner.preheader, !prof !59

for_body_ax3.inner:                               ; preds = %for_body_ax3.inner, %for_begin_ax3.outer.preheader
  %indvars.iv183 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next184.1275, %for_body_ax3.inner ]
  %352 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv183
  %353 = load <4 x i16>, ptr %352, align 16, !tbaa !8215
  %354 = add <4 x i16> %23, %353
  %355 = ashr <4 x i16> %354, %20
  %356 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %355, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %357 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %356, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %358 = trunc <4 x i16> %357 to <4 x i8>
  %359 = shl nuw nsw i64 %indvars.iv183, 2
  %360 = add nsw i64 %31, %359
  %361 = getelementptr inbounds i8, ptr %T_cast, i64 %360
  store <4 x i8> %358, ptr %361, align 4, !tbaa !8221
  %indvars.iv.next184 = or i64 %indvars.iv183, 1
  %362 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv.next184
  %363 = load <4 x i16>, ptr %362, align 8, !tbaa !8215
  %364 = add <4 x i16> %23, %363
  %365 = ashr <4 x i16> %364, %20
  %366 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %365, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %367 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %366, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %368 = trunc <4 x i16> %367 to <4 x i8>
  %369 = shl nuw nsw i64 %indvars.iv.next184, 2
  %370 = add nsw i64 %31, %369
  %371 = getelementptr inbounds i8, ptr %T_cast, i64 %370
  store <4 x i8> %368, ptr %371, align 4, !tbaa !8221
  %indvars.iv.next184.1275 = add nuw nsw i64 %indvars.iv183, 2
  %exitcond186.not.1 = icmp eq i64 %indvars.iv.next184.1275, 28
  br i1 %exitcond186.not.1, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !7452

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %372 = add nsw i64 %31, 112
  br label %for_body_ax3.inner.1

for_body_ax3.inner.1:                             ; preds = %for_body_ax3.inner.1, %for_end_ax3.inner
  %indvars.iv183.1 = phi i64 [ 0, %for_end_ax3.inner ], [ %indvars.iv.next184.1.1, %for_body_ax3.inner.1 ]
  %373 = add nuw nsw i64 %indvars.iv183.1, 28
  %374 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %373
  %375 = load <4 x i16>, ptr %374, align 16, !tbaa !8215
  %376 = add <4 x i16> %23, %375
  %377 = ashr <4 x i16> %376, %20
  %378 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %377, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %379 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %378, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %380 = trunc <4 x i16> %379 to <4 x i8>
  %381 = shl nuw nsw i64 %indvars.iv183.1, 2
  %382 = add nsw i64 %372, %381
  %383 = getelementptr inbounds i8, ptr %T_cast, i64 %382
  store <4 x i8> %380, ptr %383, align 4, !tbaa !8221
  %384 = add nuw nsw i64 %indvars.iv183.1, 29
  %385 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %384
  %386 = load <4 x i16>, ptr %385, align 8, !tbaa !8215
  %387 = add <4 x i16> %23, %386
  %388 = ashr <4 x i16> %387, %20
  %389 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %388, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %390 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %389, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %391 = trunc <4 x i16> %390 to <4 x i8>
  %indvars.iv.next184.1 = shl i64 %indvars.iv183.1, 2
  %392 = or i64 %indvars.iv.next184.1, 4
  %393 = add nsw i64 %372, %392
  %394 = getelementptr inbounds i8, ptr %T_cast, i64 %393
  store <4 x i8> %391, ptr %394, align 4, !tbaa !8221
  %indvars.iv.next184.1.1 = add nuw nsw i64 %indvars.iv183.1, 2
  %exitcond186.1.not.1 = icmp eq i64 %indvars.iv.next184.1.1, 28
  br i1 %exitcond186.1.not.1, label %for_end_ax3.inner.1, label %for_body_ax3.inner.1, !prof !7452

for_end_ax3.inner.1:                              ; preds = %for_body_ax3.inner.1
  %indvars.iv.next191 = add nsw i64 %indvars.iv190, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next191 to i32
  %exitcond192.not = icmp eq i32 %17, %lftr.wideiv
  br i1 %exitcond192.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_begin_ow.c.outer.preheader, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_5_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.42, align 8
  %7 = alloca %closure_loop_parallel_i0.i1.fused.i2.fused.41, align 8
  %8 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pad = tail call ptr %8(i32 1, i32 %0, i64 415872, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pad, i64 64) ]
  %9 = icmp eq ptr %data_pad, null
  br i1 %9, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end2, %call_end, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %12, %if_end ], [ %19, %call_end ], [ %., %call_end2 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %data_pad, ptr %7, align 8
  %10 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.41, ptr %7, i64 0, i32 1
  store ptr %1, ptr %10, align 8
  %11 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %12 = call i32 %11(ptr nonnull @__tvm_parallel_lambda.1968, ptr nonnull %7, i32 0)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %call_end, label %common.ret, !prof !18

call_end:                                         ; preds = %if_end
  store ptr %data_pad, ptr %6, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.42, ptr %6, i64 0, i32 1
  store ptr %2, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.42, ptr %6, i64 0, i32 2
  store ptr %3, ptr %15, align 8
  %16 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.42, ptr %6, i64 0, i32 3
  store ptr %4, ptr %16, align 8
  %17 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.42, ptr %6, i64 0, i32 4
  store ptr %5, ptr %17, align 8
  %18 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %19 = call i32 %18(ptr nonnull @__tvm_parallel_lambda.1969, ptr nonnull %6, i32 0)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %call_end2, label %common.ret, !prof !18

call_end2:                                        ; preds = %call_end
  %21 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %22 = call i32 %21(i32 1, i32 %0, ptr nonnull %data_pad)
  %.not = icmp ne i32 %22, 0
  %. = sext i1 %.not to i32
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1968(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.41, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 1823
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 1824)
  %9 = mul nsw i32 %5, %task_id
  %.fr3 = freeze i32 %9
  %10 = tail call i32 @llvm.smin.i32(i32 %.fr3, i32 1824)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_i3.preheader.preheader, label %for_end_i0.i1.fused.i2.fused, !prof !18

for_begin_i3.preheader.preheader:                 ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %.fr3, i32 1824)
  %smin = sext i32 %12 to i64
  %13 = sub i32 %8, %10
  br label %for_begin_i3.preheader

for_begin_i3.preheader:                           ; preds = %for_begin_i3.preheader.preheader, %for_end_i3
  %indvars.iv10 = phi i64 [ %smin, %for_begin_i3.preheader.preheader ], [ %indvars.iv.next11, %for_end_i3 ]
  %indvar = phi i32 [ 0, %for_begin_i3.preheader.preheader ], [ %indvar.next, %for_end_i3 ]
  %14 = trunc i64 %indvars.iv10 to i32
  %cse_var_2 = srem i32 %14, 57
  %15 = icmp sgt i32 %cse_var_2, 0
  %16 = mul nsw i64 %indvars.iv10, 228
  %17 = mul nuw nsw i32 %cse_var_2, 224
  %18 = sdiv i32 %14, 57
  %19 = mul nsw i32 %18, 12544
  %20 = add nsw i32 %17, -228
  %21 = add i32 %20, %19
  br i1 %15, label %for_body_i3.peel.next, label %for_body_i3.us.preheader

for_body_i3.us.preheader:                         ; preds = %for_begin_i3.preheader
  %22 = add i32 %10, %indvar
  %23 = mul i32 %22, 228
  %24 = sext i32 %23 to i64
  %scevgep = getelementptr i8, ptr %data_pad, i64 %24
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(228) %scevgep, i8 0, i64 228, i1 false), !tbaa !8223
  br label %for_end_i3

for_body_i3.peel.next:                            ; preds = %for_begin_i3.preheader
  %25 = getelementptr inbounds i8, ptr %data_pad, i64 %16
  store <4 x i8> zeroinitializer, ptr %25, align 4, !tbaa !8223
  br label %if_end

for_end_i0.i1.fused.i2.fused:                     ; preds = %for_end_i3, %parallel_closure_entry
  ret i32 0

for_end_i3:                                       ; preds = %if_end, %for_body_i3.us.preheader
  %indvars.iv.next11 = add nsw i64 %indvars.iv10, 1
  %indvar.next = add nuw i32 %indvar, 1
  %exitcond12.not = icmp eq i32 %indvar.next, %13
  br i1 %exitcond12.not, label %for_end_i0.i1.fused.i2.fused, label %for_begin_i3.preheader, !prof !59

if_end:                                           ; preds = %if_end, %for_body_i3.peel.next
  %indvars.iv = phi i64 [ 1, %for_body_i3.peel.next ], [ %indvars.iv.next.1, %if_end ]
  %26 = shl nuw nsw i64 %indvars.iv, 2
  %27 = trunc i64 %26 to i32
  %28 = add i32 %21, %27
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, ptr %p0, i64 %29
  %31 = load <4 x i8>, ptr %30, align 4, !tbaa !8225
  %32 = add nsw i64 %26, %16
  %33 = getelementptr inbounds i8, ptr %data_pad, i64 %32
  store <4 x i8> %31, ptr %33, align 4, !tbaa !8223
  %indvars.iv.next = shl i64 %indvars.iv, 2
  %34 = add i64 %indvars.iv.next, 4
  %35 = trunc i64 %34 to i32
  %36 = add i32 %21, %35
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, ptr %p0, i64 %37
  %39 = load <4 x i8>, ptr %38, align 4, !tbaa !8225
  %40 = add nsw i64 %34, %16
  %41 = getelementptr inbounds i8, ptr %data_pad, i64 %40
  store <4 x i8> %39, ptr %41, align 4, !tbaa !8223
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 57
  br i1 %exitcond.not.1, label %for_end_i3, label %if_end, !prof !7452, !llvm.loop !8227
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1969(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %conv2d_NCHWc.global1 = alloca [28 x <4 x i16>], align 16
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.42, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.42, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 895
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 896)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_body_ax0.ax1.fused.ax2.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_body_ax0.ax1.fused.ax2.fused.lr.ph:           ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.42, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.42, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 1
  %16 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 2
  %17 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 3
  %18 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 4
  %19 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 5
  %20 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 6
  %21 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 7
  %22 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 8
  %23 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 9
  %24 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 10
  %25 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 11
  %26 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 12
  %27 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 13
  %28 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 14
  %29 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 15
  %30 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 16
  %31 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 17
  %32 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 18
  %33 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 19
  %34 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 20
  %35 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 21
  %36 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 22
  %37 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 23
  %38 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 24
  %39 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 25
  %40 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 26
  %41 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 27
  %42 = load i16, ptr %p3, align 64, !tbaa !8229
  %43 = insertelement <4 x i16> undef, i16 %42, i64 0
  %44 = shufflevector <4 x i16> %43, <4 x i16> undef, <4 x i32> zeroinitializer
  %45 = load i16, ptr %p2, align 64, !tbaa !8241
  %46 = insertelement <4 x i16> undef, i16 %45, i64 0
  %47 = shufflevector <4 x i16> %46, <4 x i16> undef, <4 x i32> zeroinitializer
  %48 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %smin = sext i32 %48 to i64
  %49 = add i32 %9, %48
  %50 = sub i32 %49, %11
  br label %for_body_ax0.ax1.fused.ax2.fused

for_body_ax0.ax1.fused.ax2.fused:                 ; preds = %for_body_ax0.ax1.fused.ax2.fused.lr.ph, %for_end_ax3.inner
  %indvars.iv359 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.fused.lr.ph ], [ %indvars.iv.next360, %for_end_ax3.inner ]
  %51 = trunc i64 %indvars.iv359 to i32
  %52 = srem i32 %51, 28
  %53 = mul nsw i32 %52, 456
  %54 = sdiv i32 %51, 28
  %55 = mul nsw i32 %54, 4608
  %56 = sext i32 %55 to i64
  %57 = sext i32 %53 to i64
  br label %for_begin_kh.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3.inner, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_end_kh
  store <4 x i16> %111, ptr %conv2d_NCHWc.global1, align 16, !tbaa !8253
  store <4 x i16> %119, ptr %15, align 8, !tbaa !8263
  store <4 x i16> %127, ptr %16, align 16, !tbaa !8265
  store <4 x i16> %135, ptr %17, align 8, !tbaa !8268
  store <4 x i16> %143, ptr %18, align 16, !tbaa !8270
  store <4 x i16> %151, ptr %19, align 8, !tbaa !8274
  store <4 x i16> %159, ptr %20, align 16, !tbaa !8276
  store <4 x i16> %167, ptr %21, align 8, !tbaa !8279
  store <4 x i16> %175, ptr %22, align 16, !tbaa !8281
  store <4 x i16> %183, ptr %23, align 8, !tbaa !8286
  store <4 x i16> %191, ptr %24, align 16, !tbaa !8288
  store <4 x i16> %199, ptr %25, align 8, !tbaa !8291
  store <4 x i16> %207, ptr %26, align 16, !tbaa !8293
  store <4 x i16> %215, ptr %27, align 8, !tbaa !8297
  store <4 x i16> %223, ptr %28, align 16, !tbaa !8299
  store <4 x i16> %231, ptr %29, align 8, !tbaa !8302
  store <4 x i16> %239, ptr %30, align 16, !tbaa !8304
  store <4 x i16> %247, ptr %31, align 8, !tbaa !8310
  store <4 x i16> %255, ptr %32, align 16, !tbaa !8312
  store <4 x i16> %263, ptr %33, align 8, !tbaa !8315
  store <4 x i16> %271, ptr %34, align 16, !tbaa !8317
  store <4 x i16> %279, ptr %35, align 8, !tbaa !8321
  store <4 x i16> %287, ptr %36, align 16, !tbaa !8323
  store <4 x i16> %295, ptr %37, align 8, !tbaa !8326
  store <4 x i16> %303, ptr %38, align 16, !tbaa !8328
  store <4 x i16> %311, ptr %39, align 8, !tbaa !8333
  store <4 x i16> %319, ptr %40, align 16, !tbaa !8335
  store <4 x i16> %327, ptr %41, align 8, !tbaa !8338
  %58 = mul nsw i64 %indvars.iv359, 112
  br label %for_body_ax3.inner

for_begin_kh.preheader:                           ; preds = %for_body_ax0.ax1.fused.ax2.fused, %for_end_kh
  %indvars.iv351 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.fused ], [ %indvars.iv.next352, %for_end_kh ]
  %.lcssa57.lcssa140.lcssa224305 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %111, %for_end_kh ]
  %.lcssa259.lcssa142.lcssa226304 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %119, %for_end_kh ]
  %.lcssa460.lcssa144.lcssa228303 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %127, %for_end_kh ]
  %.lcssa662.lcssa145.lcssa230302 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %135, %for_end_kh ]
  %.lcssa864.lcssa147.lcssa231301 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %143, %for_end_kh ]
  %.lcssa1066.lcssa149.lcssa233300 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %151, %for_end_kh ]
  %.lcssa1268.lcssa151.lcssa235299 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %159, %for_end_kh ]
  %.lcssa1470.lcssa153.lcssa237298 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %167, %for_end_kh ]
  %.lcssa1672.lcssa155.lcssa239297 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %175, %for_end_kh ]
  %.lcssa1874.lcssa157.lcssa241296 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %183, %for_end_kh ]
  %.lcssa2076.lcssa159.lcssa243295 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %191, %for_end_kh ]
  %.lcssa2278.lcssa161.lcssa245294 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %199, %for_end_kh ]
  %.lcssa2480.lcssa163.lcssa247293 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %207, %for_end_kh ]
  %.lcssa2682.lcssa165.lcssa249292 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %215, %for_end_kh ]
  %.lcssa2884.lcssa167.lcssa251291 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %223, %for_end_kh ]
  %.lcssa3086.lcssa169.lcssa253290 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %231, %for_end_kh ]
  %.lcssa3288.lcssa171.lcssa255289 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %239, %for_end_kh ]
  %.lcssa3490.lcssa173.lcssa257288 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %247, %for_end_kh ]
  %.lcssa3692.lcssa175.lcssa259287 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %255, %for_end_kh ]
  %.lcssa3894.lcssa177.lcssa261286 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %263, %for_end_kh ]
  %.lcssa4096.lcssa179.lcssa263285 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %271, %for_end_kh ]
  %.lcssa4298.lcssa181.lcssa265284 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %279, %for_end_kh ]
  %.lcssa44100.lcssa183.lcssa267283 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %287, %for_end_kh ]
  %.lcssa46102.lcssa185.lcssa269282 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %295, %for_end_kh ]
  %.lcssa48104.lcssa187.lcssa271281 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %303, %for_end_kh ]
  %.lcssa50106.lcssa189.lcssa273280 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %311, %for_end_kh ]
  %.lcssa52108.lcssa191.lcssa275279 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %319, %for_end_kh ]
  %.lcssa54110.lcssa193.lcssa277278 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %327, %for_end_kh ]
  %59 = mul nuw nsw i64 %indvars.iv351, 12996
  %60 = add nsw i64 %59, %57
  %61 = mul nuw nsw i64 %indvars.iv351, 144
  %62 = add nsw i64 %61, %56
  br label %for_begin_kw.preheader

for_begin_kw.preheader:                           ; preds = %for_begin_kh.preheader, %for_end_kw
  %indvars.iv347 = phi i64 [ 0, %for_begin_kh.preheader ], [ %indvars.iv.next348, %for_end_kw ]
  %.lcssa57.lcssa140221 = phi <4 x i16> [ %.lcssa57.lcssa140.lcssa224305, %for_begin_kh.preheader ], [ %111, %for_end_kw ]
  %.lcssa259.lcssa142220 = phi <4 x i16> [ %.lcssa259.lcssa142.lcssa226304, %for_begin_kh.preheader ], [ %119, %for_end_kw ]
  %.lcssa460.lcssa144219 = phi <4 x i16> [ %.lcssa460.lcssa144.lcssa228303, %for_begin_kh.preheader ], [ %127, %for_end_kw ]
  %.lcssa662.lcssa145218 = phi <4 x i16> [ %.lcssa662.lcssa145.lcssa230302, %for_begin_kh.preheader ], [ %135, %for_end_kw ]
  %.lcssa864.lcssa147217 = phi <4 x i16> [ %.lcssa864.lcssa147.lcssa231301, %for_begin_kh.preheader ], [ %143, %for_end_kw ]
  %.lcssa1066.lcssa149216 = phi <4 x i16> [ %.lcssa1066.lcssa149.lcssa233300, %for_begin_kh.preheader ], [ %151, %for_end_kw ]
  %.lcssa1268.lcssa151215 = phi <4 x i16> [ %.lcssa1268.lcssa151.lcssa235299, %for_begin_kh.preheader ], [ %159, %for_end_kw ]
  %.lcssa1470.lcssa153214 = phi <4 x i16> [ %.lcssa1470.lcssa153.lcssa237298, %for_begin_kh.preheader ], [ %167, %for_end_kw ]
  %.lcssa1672.lcssa155213 = phi <4 x i16> [ %.lcssa1672.lcssa155.lcssa239297, %for_begin_kh.preheader ], [ %175, %for_end_kw ]
  %.lcssa1874.lcssa157212 = phi <4 x i16> [ %.lcssa1874.lcssa157.lcssa241296, %for_begin_kh.preheader ], [ %183, %for_end_kw ]
  %.lcssa2076.lcssa159211 = phi <4 x i16> [ %.lcssa2076.lcssa159.lcssa243295, %for_begin_kh.preheader ], [ %191, %for_end_kw ]
  %.lcssa2278.lcssa161210 = phi <4 x i16> [ %.lcssa2278.lcssa161.lcssa245294, %for_begin_kh.preheader ], [ %199, %for_end_kw ]
  %.lcssa2480.lcssa163209 = phi <4 x i16> [ %.lcssa2480.lcssa163.lcssa247293, %for_begin_kh.preheader ], [ %207, %for_end_kw ]
  %.lcssa2682.lcssa165208 = phi <4 x i16> [ %.lcssa2682.lcssa165.lcssa249292, %for_begin_kh.preheader ], [ %215, %for_end_kw ]
  %.lcssa2884.lcssa167207 = phi <4 x i16> [ %.lcssa2884.lcssa167.lcssa251291, %for_begin_kh.preheader ], [ %223, %for_end_kw ]
  %.lcssa3086.lcssa169206 = phi <4 x i16> [ %.lcssa3086.lcssa169.lcssa253290, %for_begin_kh.preheader ], [ %231, %for_end_kw ]
  %.lcssa3288.lcssa171205 = phi <4 x i16> [ %.lcssa3288.lcssa171.lcssa255289, %for_begin_kh.preheader ], [ %239, %for_end_kw ]
  %.lcssa3490.lcssa173204 = phi <4 x i16> [ %.lcssa3490.lcssa173.lcssa257288, %for_begin_kh.preheader ], [ %247, %for_end_kw ]
  %.lcssa3692.lcssa175203 = phi <4 x i16> [ %.lcssa3692.lcssa175.lcssa259287, %for_begin_kh.preheader ], [ %255, %for_end_kw ]
  %.lcssa3894.lcssa177202 = phi <4 x i16> [ %.lcssa3894.lcssa177.lcssa261286, %for_begin_kh.preheader ], [ %263, %for_end_kw ]
  %.lcssa4096.lcssa179201 = phi <4 x i16> [ %.lcssa4096.lcssa179.lcssa263285, %for_begin_kh.preheader ], [ %271, %for_end_kw ]
  %.lcssa4298.lcssa181200 = phi <4 x i16> [ %.lcssa4298.lcssa181.lcssa265284, %for_begin_kh.preheader ], [ %279, %for_end_kw ]
  %.lcssa44100.lcssa183199 = phi <4 x i16> [ %.lcssa44100.lcssa183.lcssa267283, %for_begin_kh.preheader ], [ %287, %for_end_kw ]
  %.lcssa46102.lcssa185198 = phi <4 x i16> [ %.lcssa46102.lcssa185.lcssa269282, %for_begin_kh.preheader ], [ %295, %for_end_kw ]
  %.lcssa48104.lcssa187197 = phi <4 x i16> [ %.lcssa48104.lcssa187.lcssa271281, %for_begin_kh.preheader ], [ %303, %for_end_kw ]
  %.lcssa50106.lcssa189196 = phi <4 x i16> [ %.lcssa50106.lcssa189.lcssa273280, %for_begin_kh.preheader ], [ %311, %for_end_kw ]
  %.lcssa52108.lcssa191195 = phi <4 x i16> [ %.lcssa52108.lcssa191.lcssa275279, %for_begin_kh.preheader ], [ %319, %for_end_kw ]
  %.lcssa54110.lcssa193194 = phi <4 x i16> [ %.lcssa54110.lcssa193.lcssa277278, %for_begin_kh.preheader ], [ %327, %for_end_kw ]
  %63 = mul nuw nsw i64 %indvars.iv347, 228
  %64 = add nsw i64 %60, %63
  %65 = mul nuw nsw i64 %indvars.iv347, 48
  %66 = add nsw i64 %62, %65
  br label %for_begin_ic.inner.preheader

for_end_kh:                                       ; preds = %for_end_kw
  %indvars.iv.next352 = add nuw nsw i64 %indvars.iv351, 1
  %exitcond354.not = icmp eq i64 %indvars.iv.next352, 32
  br i1 %exitcond354.not, label %for_begin_ax3.inner.preheader, label %for_begin_kh.preheader, !prof !59

for_begin_ic.inner.preheader:                     ; preds = %for_begin_kw.preheader, %for_end_ic.inner
  %indvars.iv343 = phi i64 [ 0, %for_begin_kw.preheader ], [ %indvars.iv.next344, %for_end_ic.inner ]
  %.lcssa57138 = phi <4 x i16> [ %.lcssa57.lcssa140221, %for_begin_kw.preheader ], [ %111, %for_end_ic.inner ]
  %.lcssa259137 = phi <4 x i16> [ %.lcssa259.lcssa142220, %for_begin_kw.preheader ], [ %119, %for_end_ic.inner ]
  %.lcssa460136 = phi <4 x i16> [ %.lcssa460.lcssa144219, %for_begin_kw.preheader ], [ %127, %for_end_ic.inner ]
  %.lcssa662135 = phi <4 x i16> [ %.lcssa662.lcssa145218, %for_begin_kw.preheader ], [ %135, %for_end_ic.inner ]
  %.lcssa864134 = phi <4 x i16> [ %.lcssa864.lcssa147217, %for_begin_kw.preheader ], [ %143, %for_end_ic.inner ]
  %.lcssa1066133 = phi <4 x i16> [ %.lcssa1066.lcssa149216, %for_begin_kw.preheader ], [ %151, %for_end_ic.inner ]
  %.lcssa1268132 = phi <4 x i16> [ %.lcssa1268.lcssa151215, %for_begin_kw.preheader ], [ %159, %for_end_ic.inner ]
  %.lcssa1470131 = phi <4 x i16> [ %.lcssa1470.lcssa153214, %for_begin_kw.preheader ], [ %167, %for_end_ic.inner ]
  %.lcssa1672130 = phi <4 x i16> [ %.lcssa1672.lcssa155213, %for_begin_kw.preheader ], [ %175, %for_end_ic.inner ]
  %.lcssa1874129 = phi <4 x i16> [ %.lcssa1874.lcssa157212, %for_begin_kw.preheader ], [ %183, %for_end_ic.inner ]
  %.lcssa2076128 = phi <4 x i16> [ %.lcssa2076.lcssa159211, %for_begin_kw.preheader ], [ %191, %for_end_ic.inner ]
  %.lcssa2278127 = phi <4 x i16> [ %.lcssa2278.lcssa161210, %for_begin_kw.preheader ], [ %199, %for_end_ic.inner ]
  %.lcssa2480126 = phi <4 x i16> [ %.lcssa2480.lcssa163209, %for_begin_kw.preheader ], [ %207, %for_end_ic.inner ]
  %.lcssa2682125 = phi <4 x i16> [ %.lcssa2682.lcssa165208, %for_begin_kw.preheader ], [ %215, %for_end_ic.inner ]
  %.lcssa2884124 = phi <4 x i16> [ %.lcssa2884.lcssa167207, %for_begin_kw.preheader ], [ %223, %for_end_ic.inner ]
  %.lcssa3086123 = phi <4 x i16> [ %.lcssa3086.lcssa169206, %for_begin_kw.preheader ], [ %231, %for_end_ic.inner ]
  %.lcssa3288122 = phi <4 x i16> [ %.lcssa3288.lcssa171205, %for_begin_kw.preheader ], [ %239, %for_end_ic.inner ]
  %.lcssa3490121 = phi <4 x i16> [ %.lcssa3490.lcssa173204, %for_begin_kw.preheader ], [ %247, %for_end_ic.inner ]
  %.lcssa3692120 = phi <4 x i16> [ %.lcssa3692.lcssa175203, %for_begin_kw.preheader ], [ %255, %for_end_ic.inner ]
  %.lcssa3894119 = phi <4 x i16> [ %.lcssa3894.lcssa177202, %for_begin_kw.preheader ], [ %263, %for_end_ic.inner ]
  %.lcssa4096118 = phi <4 x i16> [ %.lcssa4096.lcssa179201, %for_begin_kw.preheader ], [ %271, %for_end_ic.inner ]
  %.lcssa4298117 = phi <4 x i16> [ %.lcssa4298.lcssa181200, %for_begin_kw.preheader ], [ %279, %for_end_ic.inner ]
  %.lcssa44100116 = phi <4 x i16> [ %.lcssa44100.lcssa183199, %for_begin_kw.preheader ], [ %287, %for_end_ic.inner ]
  %.lcssa46102115 = phi <4 x i16> [ %.lcssa46102.lcssa185198, %for_begin_kw.preheader ], [ %295, %for_end_ic.inner ]
  %.lcssa48104114 = phi <4 x i16> [ %.lcssa48104.lcssa187197, %for_begin_kw.preheader ], [ %303, %for_end_ic.inner ]
  %.lcssa50106113 = phi <4 x i16> [ %.lcssa50106.lcssa189196, %for_begin_kw.preheader ], [ %311, %for_end_ic.inner ]
  %.lcssa52108112 = phi <4 x i16> [ %.lcssa52108.lcssa191195, %for_begin_kw.preheader ], [ %319, %for_end_ic.inner ]
  %.lcssa54110111 = phi <4 x i16> [ %.lcssa54110.lcssa193194, %for_begin_kw.preheader ], [ %327, %for_end_ic.inner ]
  %67 = shl nsw i64 %indvars.iv343, 2
  %68 = add nsw i64 %64, %67
  %69 = shl nsw i64 %indvars.iv343, 4
  %70 = add nsw i64 %66, %69
  br label %for_body_ic.inner

for_end_kw:                                       ; preds = %for_end_ic.inner
  %indvars.iv.next348 = add nuw nsw i64 %indvars.iv347, 1
  %exitcond350.not = icmp eq i64 %indvars.iv.next348, 3
  br i1 %exitcond350.not, label %for_end_kh, label %for_begin_kw.preheader, !prof !59

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %71 = phi <4 x i16> [ %.lcssa57138, %for_begin_ic.inner.preheader ], [ %111, %for_body_ic.inner ]
  %72 = phi <4 x i16> [ %.lcssa259137, %for_begin_ic.inner.preheader ], [ %119, %for_body_ic.inner ]
  %73 = phi <4 x i16> [ %.lcssa460136, %for_begin_ic.inner.preheader ], [ %127, %for_body_ic.inner ]
  %74 = phi <4 x i16> [ %.lcssa662135, %for_begin_ic.inner.preheader ], [ %135, %for_body_ic.inner ]
  %75 = phi <4 x i16> [ %.lcssa864134, %for_begin_ic.inner.preheader ], [ %143, %for_body_ic.inner ]
  %76 = phi <4 x i16> [ %.lcssa1066133, %for_begin_ic.inner.preheader ], [ %151, %for_body_ic.inner ]
  %77 = phi <4 x i16> [ %.lcssa1268132, %for_begin_ic.inner.preheader ], [ %159, %for_body_ic.inner ]
  %78 = phi <4 x i16> [ %.lcssa1470131, %for_begin_ic.inner.preheader ], [ %167, %for_body_ic.inner ]
  %79 = phi <4 x i16> [ %.lcssa1672130, %for_begin_ic.inner.preheader ], [ %175, %for_body_ic.inner ]
  %80 = phi <4 x i16> [ %.lcssa1874129, %for_begin_ic.inner.preheader ], [ %183, %for_body_ic.inner ]
  %81 = phi <4 x i16> [ %.lcssa2076128, %for_begin_ic.inner.preheader ], [ %191, %for_body_ic.inner ]
  %82 = phi <4 x i16> [ %.lcssa2278127, %for_begin_ic.inner.preheader ], [ %199, %for_body_ic.inner ]
  %83 = phi <4 x i16> [ %.lcssa2480126, %for_begin_ic.inner.preheader ], [ %207, %for_body_ic.inner ]
  %84 = phi <4 x i16> [ %.lcssa2682125, %for_begin_ic.inner.preheader ], [ %215, %for_body_ic.inner ]
  %85 = phi <4 x i16> [ %.lcssa2884124, %for_begin_ic.inner.preheader ], [ %223, %for_body_ic.inner ]
  %86 = phi <4 x i16> [ %.lcssa3086123, %for_begin_ic.inner.preheader ], [ %231, %for_body_ic.inner ]
  %87 = phi <4 x i16> [ %.lcssa3288122, %for_begin_ic.inner.preheader ], [ %239, %for_body_ic.inner ]
  %88 = phi <4 x i16> [ %.lcssa3490121, %for_begin_ic.inner.preheader ], [ %247, %for_body_ic.inner ]
  %89 = phi <4 x i16> [ %.lcssa3692120, %for_begin_ic.inner.preheader ], [ %255, %for_body_ic.inner ]
  %90 = phi <4 x i16> [ %.lcssa3894119, %for_begin_ic.inner.preheader ], [ %263, %for_body_ic.inner ]
  %91 = phi <4 x i16> [ %.lcssa4096118, %for_begin_ic.inner.preheader ], [ %271, %for_body_ic.inner ]
  %92 = phi <4 x i16> [ %.lcssa4298117, %for_begin_ic.inner.preheader ], [ %279, %for_body_ic.inner ]
  %93 = phi <4 x i16> [ %.lcssa44100116, %for_begin_ic.inner.preheader ], [ %287, %for_body_ic.inner ]
  %94 = phi <4 x i16> [ %.lcssa46102115, %for_begin_ic.inner.preheader ], [ %295, %for_body_ic.inner ]
  %95 = phi <4 x i16> [ %.lcssa48104114, %for_begin_ic.inner.preheader ], [ %303, %for_body_ic.inner ]
  %96 = phi <4 x i16> [ %.lcssa50106113, %for_begin_ic.inner.preheader ], [ %311, %for_body_ic.inner ]
  %97 = phi <4 x i16> [ %.lcssa52108112, %for_begin_ic.inner.preheader ], [ %319, %for_body_ic.inner ]
  %98 = phi <4 x i16> [ %.lcssa54110111, %for_begin_ic.inner.preheader ], [ %327, %for_body_ic.inner ]
  %99 = add nsw i64 %68, %indvars.iv
  %100 = shl nuw nsw i64 %indvars.iv, 2
  %101 = add nuw nsw i64 %70, %100
  %102 = getelementptr inbounds i8, ptr %p1, i64 %101
  %103 = load <4 x i8>, ptr %102, align 4, !tbaa !8340
  %104 = sext <4 x i8> %103 to <4 x i16>
  %105 = getelementptr inbounds i8, ptr %data_pad, i64 %99
  %106 = load i8, ptr %105, align 1, !tbaa !8223
  %107 = insertelement <4 x i8> undef, i8 %106, i64 0
  %108 = shufflevector <4 x i8> %107, <4 x i8> undef, <4 x i32> zeroinitializer
  %109 = sext <4 x i8> %108 to <4 x i16>
  %110 = mul nsw <4 x i16> %109, %104
  %111 = add <4 x i16> %110, %71
  %112 = add nsw i64 %99, 8
  %113 = getelementptr inbounds i8, ptr %data_pad, i64 %112
  %114 = load i8, ptr %113, align 1, !tbaa !8223
  %115 = insertelement <4 x i8> undef, i8 %114, i64 0
  %116 = shufflevector <4 x i8> %115, <4 x i8> undef, <4 x i32> zeroinitializer
  %117 = sext <4 x i8> %116 to <4 x i16>
  %118 = mul nsw <4 x i16> %117, %104
  %119 = add <4 x i16> %118, %72
  %120 = add nsw i64 %99, 16
  %121 = getelementptr inbounds i8, ptr %data_pad, i64 %120
  %122 = load i8, ptr %121, align 1, !tbaa !8223
  %123 = insertelement <4 x i8> undef, i8 %122, i64 0
  %124 = shufflevector <4 x i8> %123, <4 x i8> undef, <4 x i32> zeroinitializer
  %125 = sext <4 x i8> %124 to <4 x i16>
  %126 = mul nsw <4 x i16> %125, %104
  %127 = add <4 x i16> %126, %73
  %128 = add nsw i64 %99, 24
  %129 = getelementptr inbounds i8, ptr %data_pad, i64 %128
  %130 = load i8, ptr %129, align 1, !tbaa !8223
  %131 = insertelement <4 x i8> undef, i8 %130, i64 0
  %132 = shufflevector <4 x i8> %131, <4 x i8> undef, <4 x i32> zeroinitializer
  %133 = sext <4 x i8> %132 to <4 x i16>
  %134 = mul nsw <4 x i16> %133, %104
  %135 = add <4 x i16> %134, %74
  %136 = add nsw i64 %99, 32
  %137 = getelementptr inbounds i8, ptr %data_pad, i64 %136
  %138 = load i8, ptr %137, align 1, !tbaa !8223
  %139 = insertelement <4 x i8> undef, i8 %138, i64 0
  %140 = shufflevector <4 x i8> %139, <4 x i8> undef, <4 x i32> zeroinitializer
  %141 = sext <4 x i8> %140 to <4 x i16>
  %142 = mul nsw <4 x i16> %141, %104
  %143 = add <4 x i16> %142, %75
  %144 = add nsw i64 %99, 40
  %145 = getelementptr inbounds i8, ptr %data_pad, i64 %144
  %146 = load i8, ptr %145, align 1, !tbaa !8223
  %147 = insertelement <4 x i8> undef, i8 %146, i64 0
  %148 = shufflevector <4 x i8> %147, <4 x i8> undef, <4 x i32> zeroinitializer
  %149 = sext <4 x i8> %148 to <4 x i16>
  %150 = mul nsw <4 x i16> %149, %104
  %151 = add <4 x i16> %150, %76
  %152 = add nsw i64 %99, 48
  %153 = getelementptr inbounds i8, ptr %data_pad, i64 %152
  %154 = load i8, ptr %153, align 1, !tbaa !8223
  %155 = insertelement <4 x i8> undef, i8 %154, i64 0
  %156 = shufflevector <4 x i8> %155, <4 x i8> undef, <4 x i32> zeroinitializer
  %157 = sext <4 x i8> %156 to <4 x i16>
  %158 = mul nsw <4 x i16> %157, %104
  %159 = add <4 x i16> %158, %77
  %160 = add nsw i64 %99, 56
  %161 = getelementptr inbounds i8, ptr %data_pad, i64 %160
  %162 = load i8, ptr %161, align 1, !tbaa !8223
  %163 = insertelement <4 x i8> undef, i8 %162, i64 0
  %164 = shufflevector <4 x i8> %163, <4 x i8> undef, <4 x i32> zeroinitializer
  %165 = sext <4 x i8> %164 to <4 x i16>
  %166 = mul nsw <4 x i16> %165, %104
  %167 = add <4 x i16> %166, %78
  %168 = add nsw i64 %99, 64
  %169 = getelementptr inbounds i8, ptr %data_pad, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !8223
  %171 = insertelement <4 x i8> undef, i8 %170, i64 0
  %172 = shufflevector <4 x i8> %171, <4 x i8> undef, <4 x i32> zeroinitializer
  %173 = sext <4 x i8> %172 to <4 x i16>
  %174 = mul nsw <4 x i16> %173, %104
  %175 = add <4 x i16> %174, %79
  %176 = add nsw i64 %99, 72
  %177 = getelementptr inbounds i8, ptr %data_pad, i64 %176
  %178 = load i8, ptr %177, align 1, !tbaa !8223
  %179 = insertelement <4 x i8> undef, i8 %178, i64 0
  %180 = shufflevector <4 x i8> %179, <4 x i8> undef, <4 x i32> zeroinitializer
  %181 = sext <4 x i8> %180 to <4 x i16>
  %182 = mul nsw <4 x i16> %181, %104
  %183 = add <4 x i16> %182, %80
  %184 = add nsw i64 %99, 80
  %185 = getelementptr inbounds i8, ptr %data_pad, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !8223
  %187 = insertelement <4 x i8> undef, i8 %186, i64 0
  %188 = shufflevector <4 x i8> %187, <4 x i8> undef, <4 x i32> zeroinitializer
  %189 = sext <4 x i8> %188 to <4 x i16>
  %190 = mul nsw <4 x i16> %189, %104
  %191 = add <4 x i16> %190, %81
  %192 = add nsw i64 %99, 88
  %193 = getelementptr inbounds i8, ptr %data_pad, i64 %192
  %194 = load i8, ptr %193, align 1, !tbaa !8223
  %195 = insertelement <4 x i8> undef, i8 %194, i64 0
  %196 = shufflevector <4 x i8> %195, <4 x i8> undef, <4 x i32> zeroinitializer
  %197 = sext <4 x i8> %196 to <4 x i16>
  %198 = mul nsw <4 x i16> %197, %104
  %199 = add <4 x i16> %198, %82
  %200 = add nsw i64 %99, 96
  %201 = getelementptr inbounds i8, ptr %data_pad, i64 %200
  %202 = load i8, ptr %201, align 1, !tbaa !8223
  %203 = insertelement <4 x i8> undef, i8 %202, i64 0
  %204 = shufflevector <4 x i8> %203, <4 x i8> undef, <4 x i32> zeroinitializer
  %205 = sext <4 x i8> %204 to <4 x i16>
  %206 = mul nsw <4 x i16> %205, %104
  %207 = add <4 x i16> %206, %83
  %208 = add nsw i64 %99, 104
  %209 = getelementptr inbounds i8, ptr %data_pad, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !8223
  %211 = insertelement <4 x i8> undef, i8 %210, i64 0
  %212 = shufflevector <4 x i8> %211, <4 x i8> undef, <4 x i32> zeroinitializer
  %213 = sext <4 x i8> %212 to <4 x i16>
  %214 = mul nsw <4 x i16> %213, %104
  %215 = add <4 x i16> %214, %84
  %216 = add nsw i64 %99, 112
  %217 = getelementptr inbounds i8, ptr %data_pad, i64 %216
  %218 = load i8, ptr %217, align 1, !tbaa !8223
  %219 = insertelement <4 x i8> undef, i8 %218, i64 0
  %220 = shufflevector <4 x i8> %219, <4 x i8> undef, <4 x i32> zeroinitializer
  %221 = sext <4 x i8> %220 to <4 x i16>
  %222 = mul nsw <4 x i16> %221, %104
  %223 = add <4 x i16> %222, %85
  %224 = add nsw i64 %99, 120
  %225 = getelementptr inbounds i8, ptr %data_pad, i64 %224
  %226 = load i8, ptr %225, align 1, !tbaa !8223
  %227 = insertelement <4 x i8> undef, i8 %226, i64 0
  %228 = shufflevector <4 x i8> %227, <4 x i8> undef, <4 x i32> zeroinitializer
  %229 = sext <4 x i8> %228 to <4 x i16>
  %230 = mul nsw <4 x i16> %229, %104
  %231 = add <4 x i16> %230, %86
  %232 = add nsw i64 %99, 128
  %233 = getelementptr inbounds i8, ptr %data_pad, i64 %232
  %234 = load i8, ptr %233, align 1, !tbaa !8223
  %235 = insertelement <4 x i8> undef, i8 %234, i64 0
  %236 = shufflevector <4 x i8> %235, <4 x i8> undef, <4 x i32> zeroinitializer
  %237 = sext <4 x i8> %236 to <4 x i16>
  %238 = mul nsw <4 x i16> %237, %104
  %239 = add <4 x i16> %238, %87
  %240 = add nsw i64 %99, 136
  %241 = getelementptr inbounds i8, ptr %data_pad, i64 %240
  %242 = load i8, ptr %241, align 1, !tbaa !8223
  %243 = insertelement <4 x i8> undef, i8 %242, i64 0
  %244 = shufflevector <4 x i8> %243, <4 x i8> undef, <4 x i32> zeroinitializer
  %245 = sext <4 x i8> %244 to <4 x i16>
  %246 = mul nsw <4 x i16> %245, %104
  %247 = add <4 x i16> %246, %88
  %248 = add nsw i64 %99, 144
  %249 = getelementptr inbounds i8, ptr %data_pad, i64 %248
  %250 = load i8, ptr %249, align 1, !tbaa !8223
  %251 = insertelement <4 x i8> undef, i8 %250, i64 0
  %252 = shufflevector <4 x i8> %251, <4 x i8> undef, <4 x i32> zeroinitializer
  %253 = sext <4 x i8> %252 to <4 x i16>
  %254 = mul nsw <4 x i16> %253, %104
  %255 = add <4 x i16> %254, %89
  %256 = add nsw i64 %99, 152
  %257 = getelementptr inbounds i8, ptr %data_pad, i64 %256
  %258 = load i8, ptr %257, align 1, !tbaa !8223
  %259 = insertelement <4 x i8> undef, i8 %258, i64 0
  %260 = shufflevector <4 x i8> %259, <4 x i8> undef, <4 x i32> zeroinitializer
  %261 = sext <4 x i8> %260 to <4 x i16>
  %262 = mul nsw <4 x i16> %261, %104
  %263 = add <4 x i16> %262, %90
  %264 = add nsw i64 %99, 160
  %265 = getelementptr inbounds i8, ptr %data_pad, i64 %264
  %266 = load i8, ptr %265, align 1, !tbaa !8223
  %267 = insertelement <4 x i8> undef, i8 %266, i64 0
  %268 = shufflevector <4 x i8> %267, <4 x i8> undef, <4 x i32> zeroinitializer
  %269 = sext <4 x i8> %268 to <4 x i16>
  %270 = mul nsw <4 x i16> %269, %104
  %271 = add <4 x i16> %270, %91
  %272 = add nsw i64 %99, 168
  %273 = getelementptr inbounds i8, ptr %data_pad, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !8223
  %275 = insertelement <4 x i8> undef, i8 %274, i64 0
  %276 = shufflevector <4 x i8> %275, <4 x i8> undef, <4 x i32> zeroinitializer
  %277 = sext <4 x i8> %276 to <4 x i16>
  %278 = mul nsw <4 x i16> %277, %104
  %279 = add <4 x i16> %278, %92
  %280 = add nsw i64 %99, 176
  %281 = getelementptr inbounds i8, ptr %data_pad, i64 %280
  %282 = load i8, ptr %281, align 1, !tbaa !8223
  %283 = insertelement <4 x i8> undef, i8 %282, i64 0
  %284 = shufflevector <4 x i8> %283, <4 x i8> undef, <4 x i32> zeroinitializer
  %285 = sext <4 x i8> %284 to <4 x i16>
  %286 = mul nsw <4 x i16> %285, %104
  %287 = add <4 x i16> %286, %93
  %288 = add nsw i64 %99, 184
  %289 = getelementptr inbounds i8, ptr %data_pad, i64 %288
  %290 = load i8, ptr %289, align 1, !tbaa !8223
  %291 = insertelement <4 x i8> undef, i8 %290, i64 0
  %292 = shufflevector <4 x i8> %291, <4 x i8> undef, <4 x i32> zeroinitializer
  %293 = sext <4 x i8> %292 to <4 x i16>
  %294 = mul nsw <4 x i16> %293, %104
  %295 = add <4 x i16> %294, %94
  %296 = add nsw i64 %99, 192
  %297 = getelementptr inbounds i8, ptr %data_pad, i64 %296
  %298 = load i8, ptr %297, align 1, !tbaa !8223
  %299 = insertelement <4 x i8> undef, i8 %298, i64 0
  %300 = shufflevector <4 x i8> %299, <4 x i8> undef, <4 x i32> zeroinitializer
  %301 = sext <4 x i8> %300 to <4 x i16>
  %302 = mul nsw <4 x i16> %301, %104
  %303 = add <4 x i16> %302, %95
  %304 = add nsw i64 %99, 200
  %305 = getelementptr inbounds i8, ptr %data_pad, i64 %304
  %306 = load i8, ptr %305, align 1, !tbaa !8223
  %307 = insertelement <4 x i8> undef, i8 %306, i64 0
  %308 = shufflevector <4 x i8> %307, <4 x i8> undef, <4 x i32> zeroinitializer
  %309 = sext <4 x i8> %308 to <4 x i16>
  %310 = mul nsw <4 x i16> %309, %104
  %311 = add <4 x i16> %310, %96
  %312 = add nsw i64 %99, 208
  %313 = getelementptr inbounds i8, ptr %data_pad, i64 %312
  %314 = load i8, ptr %313, align 1, !tbaa !8223
  %315 = insertelement <4 x i8> undef, i8 %314, i64 0
  %316 = shufflevector <4 x i8> %315, <4 x i8> undef, <4 x i32> zeroinitializer
  %317 = sext <4 x i8> %316 to <4 x i16>
  %318 = mul nsw <4 x i16> %317, %104
  %319 = add <4 x i16> %318, %97
  %320 = add nsw i64 %99, 216
  %321 = getelementptr inbounds i8, ptr %data_pad, i64 %320
  %322 = load i8, ptr %321, align 1, !tbaa !8223
  %323 = insertelement <4 x i8> undef, i8 %322, i64 0
  %324 = shufflevector <4 x i8> %323, <4 x i8> undef, <4 x i32> zeroinitializer
  %325 = sext <4 x i8> %324 to <4 x i16>
  %326 = mul nsw <4 x i16> %325, %104
  %327 = add <4 x i16> %326, %98
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !59

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next344 = add nuw nsw i64 %indvars.iv343, 1
  %exitcond346.not = icmp eq i64 %indvars.iv.next344, 3
  br i1 %exitcond346.not, label %for_end_kw, label %for_begin_ic.inner.preheader, !prof !59

for_body_ax3.inner:                               ; preds = %for_body_ax3.inner, %for_begin_ax3.inner.preheader
  %indvars.iv355 = phi i64 [ 0, %for_begin_ax3.inner.preheader ], [ %indvars.iv.next356.1, %for_body_ax3.inner ]
  %328 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv355
  %329 = load <4 x i16>, ptr %328, align 16, !tbaa !8342
  %330 = add <4 x i16> %47, %329
  %331 = ashr <4 x i16> %330, %44
  %332 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %331, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %333 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %332, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %334 = trunc <4 x i16> %333 to <4 x i8>
  %335 = shl nuw nsw i64 %indvars.iv355, 2
  %336 = add nsw i64 %335, %58
  %337 = getelementptr inbounds i8, ptr %T_cast, i64 %336
  store <4 x i8> %334, ptr %337, align 4, !tbaa !8343
  %indvars.iv.next356 = or i64 %indvars.iv355, 1
  %338 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv.next356
  %339 = load <4 x i16>, ptr %338, align 8, !tbaa !8342
  %340 = add <4 x i16> %47, %339
  %341 = ashr <4 x i16> %340, %44
  %342 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %341, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %343 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %342, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %344 = trunc <4 x i16> %343 to <4 x i8>
  %345 = shl nuw nsw i64 %indvars.iv.next356, 2
  %346 = add nsw i64 %345, %58
  %347 = getelementptr inbounds i8, ptr %T_cast, i64 %346
  store <4 x i8> %344, ptr %347, align 4, !tbaa !8343
  %indvars.iv.next356.1 = add nuw nsw i64 %indvars.iv355, 2
  %exitcond358.not.1 = icmp eq i64 %indvars.iv.next356.1, 28
  br i1 %exitcond358.not.1, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !7452

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %indvars.iv.next360 = add nsw i64 %indvars.iv359, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next360 to i32
  %exitcond361.not = icmp eq i32 %50, %lftr.wideiv
  br i1 %exitcond361.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_body_ax0.ax1.fused.ax2.fused, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_6_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.43, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.43, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.43, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.43, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.43, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.2019, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.2019(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %conv2d_NCHWc.global1 = alloca [28 x <4 x i16>], align 16
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.43, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.43, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 3583
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 3584)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 3584)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph:     ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.43, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.43, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 1
  %16 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 2
  %17 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 3
  %18 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 4
  %19 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 5
  %20 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 6
  %21 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 7
  %22 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 8
  %23 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 9
  %24 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 10
  %25 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 11
  %26 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 12
  %27 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 13
  %28 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 14
  %29 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 15
  %30 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 16
  %31 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 17
  %32 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 18
  %33 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 19
  %34 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 20
  %35 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 21
  %36 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 22
  %37 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 23
  %38 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 24
  %39 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 25
  %40 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 26
  %41 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 27
  %42 = load i16, ptr %p3, align 64, !tbaa !8345
  %43 = insertelement <4 x i16> undef, i16 %42, i64 0
  %44 = shufflevector <4 x i16> %43, <4 x i16> undef, <4 x i32> zeroinitializer
  %45 = load i16, ptr %p2, align 64, !tbaa !8357
  %46 = insertelement <4 x i16> undef, i16 %45, i64 0
  %47 = shufflevector <4 x i16> %46, <4 x i16> undef, <4 x i32> zeroinitializer
  %48 = tail call i32 @llvm.smin.i32(i32 %10, i32 3584)
  %smin = sext i32 %48 to i64
  %49 = add i32 %9, %48
  %50 = sub i32 %49, %11
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, %for_end_ax3.inner
  %indvars.iv182 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph ], [ %indvars.iv.next183, %for_end_ax3.inner ]
  %51 = trunc i64 %indvars.iv182 to i32
  %52 = srem i32 %51, 28
  %53 = mul nsw i32 %52, 112
  %54 = sdiv i32 %51, 28
  %55 = shl nsw i32 %54, 9
  %56 = sext i32 %53 to i64
  %57 = sext i32 %55 to i64
  br label %for_begin_ic.inner.preheader

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_end_ax3.inner, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_end_ic.inner
  store <4 x i16> %103, ptr %conv2d_NCHWc.global1, align 16, !tbaa !8369
  store <4 x i16> %111, ptr %15, align 8, !tbaa !8379
  store <4 x i16> %119, ptr %16, align 16, !tbaa !8381
  store <4 x i16> %127, ptr %17, align 8, !tbaa !8384
  store <4 x i16> %135, ptr %18, align 16, !tbaa !8386
  store <4 x i16> %143, ptr %19, align 8, !tbaa !8390
  store <4 x i16> %151, ptr %20, align 16, !tbaa !8392
  store <4 x i16> %159, ptr %21, align 8, !tbaa !8395
  store <4 x i16> %167, ptr %22, align 16, !tbaa !8397
  store <4 x i16> %175, ptr %23, align 8, !tbaa !8402
  store <4 x i16> %183, ptr %24, align 16, !tbaa !8404
  store <4 x i16> %191, ptr %25, align 8, !tbaa !8407
  store <4 x i16> %199, ptr %26, align 16, !tbaa !8409
  store <4 x i16> %207, ptr %27, align 8, !tbaa !8413
  store <4 x i16> %215, ptr %28, align 16, !tbaa !8415
  store <4 x i16> %223, ptr %29, align 8, !tbaa !8418
  store <4 x i16> %231, ptr %30, align 16, !tbaa !8420
  store <4 x i16> %239, ptr %31, align 8, !tbaa !8426
  store <4 x i16> %247, ptr %32, align 16, !tbaa !8428
  store <4 x i16> %255, ptr %33, align 8, !tbaa !8431
  store <4 x i16> %263, ptr %34, align 16, !tbaa !8433
  store <4 x i16> %271, ptr %35, align 8, !tbaa !8437
  store <4 x i16> %279, ptr %36, align 16, !tbaa !8439
  store <4 x i16> %287, ptr %37, align 8, !tbaa !8442
  store <4 x i16> %295, ptr %38, align 16, !tbaa !8444
  store <4 x i16> %303, ptr %39, align 8, !tbaa !8449
  store <4 x i16> %311, ptr %40, align 16, !tbaa !8451
  store <4 x i16> %319, ptr %41, align 8, !tbaa !8454
  %58 = mul nsw i64 %indvars.iv182, 112
  br label %for_body_ax3.inner

for_begin_ic.inner.preheader:                     ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ic.inner
  %indvars.iv174 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %indvars.iv.next175, %for_end_ic.inner ]
  %.lcssa57138 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %103, %for_end_ic.inner ]
  %.lcssa259137 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %111, %for_end_ic.inner ]
  %.lcssa460136 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %119, %for_end_ic.inner ]
  %.lcssa662135 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %127, %for_end_ic.inner ]
  %.lcssa864134 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %135, %for_end_ic.inner ]
  %.lcssa1066133 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %143, %for_end_ic.inner ]
  %.lcssa1268132 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %151, %for_end_ic.inner ]
  %.lcssa1470131 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %159, %for_end_ic.inner ]
  %.lcssa1672130 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %167, %for_end_ic.inner ]
  %.lcssa1874129 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %175, %for_end_ic.inner ]
  %.lcssa2076128 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %183, %for_end_ic.inner ]
  %.lcssa2278127 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %191, %for_end_ic.inner ]
  %.lcssa2480126 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %199, %for_end_ic.inner ]
  %.lcssa2682125 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %207, %for_end_ic.inner ]
  %.lcssa2884124 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %215, %for_end_ic.inner ]
  %.lcssa3086123 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %223, %for_end_ic.inner ]
  %.lcssa3288122 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %231, %for_end_ic.inner ]
  %.lcssa3490121 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %239, %for_end_ic.inner ]
  %.lcssa3692120 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %247, %for_end_ic.inner ]
  %.lcssa3894119 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %255, %for_end_ic.inner ]
  %.lcssa4096118 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %263, %for_end_ic.inner ]
  %.lcssa4298117 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %271, %for_end_ic.inner ]
  %.lcssa44100116 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %279, %for_end_ic.inner ]
  %.lcssa46102115 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %287, %for_end_ic.inner ]
  %.lcssa48104114 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %295, %for_end_ic.inner ]
  %.lcssa50106113 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %303, %for_end_ic.inner ]
  %.lcssa52108112 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %311, %for_end_ic.inner ]
  %.lcssa54110111 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %319, %for_end_ic.inner ]
  %59 = mul nuw nsw i64 %indvars.iv174, 3136
  %60 = add nsw i64 %59, %56
  %61 = shl nsw i64 %indvars.iv174, 4
  %62 = add nuw nsw i64 %61, %57
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %63 = phi <4 x i16> [ %.lcssa57138, %for_begin_ic.inner.preheader ], [ %103, %for_body_ic.inner ]
  %64 = phi <4 x i16> [ %.lcssa259137, %for_begin_ic.inner.preheader ], [ %111, %for_body_ic.inner ]
  %65 = phi <4 x i16> [ %.lcssa460136, %for_begin_ic.inner.preheader ], [ %119, %for_body_ic.inner ]
  %66 = phi <4 x i16> [ %.lcssa662135, %for_begin_ic.inner.preheader ], [ %127, %for_body_ic.inner ]
  %67 = phi <4 x i16> [ %.lcssa864134, %for_begin_ic.inner.preheader ], [ %135, %for_body_ic.inner ]
  %68 = phi <4 x i16> [ %.lcssa1066133, %for_begin_ic.inner.preheader ], [ %143, %for_body_ic.inner ]
  %69 = phi <4 x i16> [ %.lcssa1268132, %for_begin_ic.inner.preheader ], [ %151, %for_body_ic.inner ]
  %70 = phi <4 x i16> [ %.lcssa1470131, %for_begin_ic.inner.preheader ], [ %159, %for_body_ic.inner ]
  %71 = phi <4 x i16> [ %.lcssa1672130, %for_begin_ic.inner.preheader ], [ %167, %for_body_ic.inner ]
  %72 = phi <4 x i16> [ %.lcssa1874129, %for_begin_ic.inner.preheader ], [ %175, %for_body_ic.inner ]
  %73 = phi <4 x i16> [ %.lcssa2076128, %for_begin_ic.inner.preheader ], [ %183, %for_body_ic.inner ]
  %74 = phi <4 x i16> [ %.lcssa2278127, %for_begin_ic.inner.preheader ], [ %191, %for_body_ic.inner ]
  %75 = phi <4 x i16> [ %.lcssa2480126, %for_begin_ic.inner.preheader ], [ %199, %for_body_ic.inner ]
  %76 = phi <4 x i16> [ %.lcssa2682125, %for_begin_ic.inner.preheader ], [ %207, %for_body_ic.inner ]
  %77 = phi <4 x i16> [ %.lcssa2884124, %for_begin_ic.inner.preheader ], [ %215, %for_body_ic.inner ]
  %78 = phi <4 x i16> [ %.lcssa3086123, %for_begin_ic.inner.preheader ], [ %223, %for_body_ic.inner ]
  %79 = phi <4 x i16> [ %.lcssa3288122, %for_begin_ic.inner.preheader ], [ %231, %for_body_ic.inner ]
  %80 = phi <4 x i16> [ %.lcssa3490121, %for_begin_ic.inner.preheader ], [ %239, %for_body_ic.inner ]
  %81 = phi <4 x i16> [ %.lcssa3692120, %for_begin_ic.inner.preheader ], [ %247, %for_body_ic.inner ]
  %82 = phi <4 x i16> [ %.lcssa3894119, %for_begin_ic.inner.preheader ], [ %255, %for_body_ic.inner ]
  %83 = phi <4 x i16> [ %.lcssa4096118, %for_begin_ic.inner.preheader ], [ %263, %for_body_ic.inner ]
  %84 = phi <4 x i16> [ %.lcssa4298117, %for_begin_ic.inner.preheader ], [ %271, %for_body_ic.inner ]
  %85 = phi <4 x i16> [ %.lcssa44100116, %for_begin_ic.inner.preheader ], [ %279, %for_body_ic.inner ]
  %86 = phi <4 x i16> [ %.lcssa46102115, %for_begin_ic.inner.preheader ], [ %287, %for_body_ic.inner ]
  %87 = phi <4 x i16> [ %.lcssa48104114, %for_begin_ic.inner.preheader ], [ %295, %for_body_ic.inner ]
  %88 = phi <4 x i16> [ %.lcssa50106113, %for_begin_ic.inner.preheader ], [ %303, %for_body_ic.inner ]
  %89 = phi <4 x i16> [ %.lcssa52108112, %for_begin_ic.inner.preheader ], [ %311, %for_body_ic.inner ]
  %90 = phi <4 x i16> [ %.lcssa54110111, %for_begin_ic.inner.preheader ], [ %319, %for_body_ic.inner ]
  %91 = add nsw i64 %60, %indvars.iv
  %92 = shl nuw nsw i64 %indvars.iv, 2
  %93 = add nuw nsw i64 %62, %92
  %94 = getelementptr inbounds i8, ptr %p1, i64 %93
  %95 = load <4 x i8>, ptr %94, align 4, !tbaa !8456
  %96 = sext <4 x i8> %95 to <4 x i16>
  %97 = getelementptr inbounds i8, ptr %p0, i64 %91
  %98 = load i8, ptr %97, align 1, !tbaa !8458
  %99 = insertelement <4 x i8> undef, i8 %98, i64 0
  %100 = shufflevector <4 x i8> %99, <4 x i8> undef, <4 x i32> zeroinitializer
  %101 = sext <4 x i8> %100 to <4 x i16>
  %102 = mul nsw <4 x i16> %101, %96
  %103 = add <4 x i16> %102, %63
  %104 = add nsw i64 %91, 4
  %105 = getelementptr inbounds i8, ptr %p0, i64 %104
  %106 = load i8, ptr %105, align 1, !tbaa !8458
  %107 = insertelement <4 x i8> undef, i8 %106, i64 0
  %108 = shufflevector <4 x i8> %107, <4 x i8> undef, <4 x i32> zeroinitializer
  %109 = sext <4 x i8> %108 to <4 x i16>
  %110 = mul nsw <4 x i16> %109, %96
  %111 = add <4 x i16> %110, %64
  %112 = add nsw i64 %91, 8
  %113 = getelementptr inbounds i8, ptr %p0, i64 %112
  %114 = load i8, ptr %113, align 1, !tbaa !8458
  %115 = insertelement <4 x i8> undef, i8 %114, i64 0
  %116 = shufflevector <4 x i8> %115, <4 x i8> undef, <4 x i32> zeroinitializer
  %117 = sext <4 x i8> %116 to <4 x i16>
  %118 = mul nsw <4 x i16> %117, %96
  %119 = add <4 x i16> %118, %65
  %120 = add nsw i64 %91, 12
  %121 = getelementptr inbounds i8, ptr %p0, i64 %120
  %122 = load i8, ptr %121, align 1, !tbaa !8458
  %123 = insertelement <4 x i8> undef, i8 %122, i64 0
  %124 = shufflevector <4 x i8> %123, <4 x i8> undef, <4 x i32> zeroinitializer
  %125 = sext <4 x i8> %124 to <4 x i16>
  %126 = mul nsw <4 x i16> %125, %96
  %127 = add <4 x i16> %126, %66
  %128 = add nsw i64 %91, 16
  %129 = getelementptr inbounds i8, ptr %p0, i64 %128
  %130 = load i8, ptr %129, align 1, !tbaa !8458
  %131 = insertelement <4 x i8> undef, i8 %130, i64 0
  %132 = shufflevector <4 x i8> %131, <4 x i8> undef, <4 x i32> zeroinitializer
  %133 = sext <4 x i8> %132 to <4 x i16>
  %134 = mul nsw <4 x i16> %133, %96
  %135 = add <4 x i16> %134, %67
  %136 = add nsw i64 %91, 20
  %137 = getelementptr inbounds i8, ptr %p0, i64 %136
  %138 = load i8, ptr %137, align 1, !tbaa !8458
  %139 = insertelement <4 x i8> undef, i8 %138, i64 0
  %140 = shufflevector <4 x i8> %139, <4 x i8> undef, <4 x i32> zeroinitializer
  %141 = sext <4 x i8> %140 to <4 x i16>
  %142 = mul nsw <4 x i16> %141, %96
  %143 = add <4 x i16> %142, %68
  %144 = add nsw i64 %91, 24
  %145 = getelementptr inbounds i8, ptr %p0, i64 %144
  %146 = load i8, ptr %145, align 1, !tbaa !8458
  %147 = insertelement <4 x i8> undef, i8 %146, i64 0
  %148 = shufflevector <4 x i8> %147, <4 x i8> undef, <4 x i32> zeroinitializer
  %149 = sext <4 x i8> %148 to <4 x i16>
  %150 = mul nsw <4 x i16> %149, %96
  %151 = add <4 x i16> %150, %69
  %152 = add nsw i64 %91, 28
  %153 = getelementptr inbounds i8, ptr %p0, i64 %152
  %154 = load i8, ptr %153, align 1, !tbaa !8458
  %155 = insertelement <4 x i8> undef, i8 %154, i64 0
  %156 = shufflevector <4 x i8> %155, <4 x i8> undef, <4 x i32> zeroinitializer
  %157 = sext <4 x i8> %156 to <4 x i16>
  %158 = mul nsw <4 x i16> %157, %96
  %159 = add <4 x i16> %158, %70
  %160 = add nsw i64 %91, 32
  %161 = getelementptr inbounds i8, ptr %p0, i64 %160
  %162 = load i8, ptr %161, align 1, !tbaa !8458
  %163 = insertelement <4 x i8> undef, i8 %162, i64 0
  %164 = shufflevector <4 x i8> %163, <4 x i8> undef, <4 x i32> zeroinitializer
  %165 = sext <4 x i8> %164 to <4 x i16>
  %166 = mul nsw <4 x i16> %165, %96
  %167 = add <4 x i16> %166, %71
  %168 = add nsw i64 %91, 36
  %169 = getelementptr inbounds i8, ptr %p0, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !8458
  %171 = insertelement <4 x i8> undef, i8 %170, i64 0
  %172 = shufflevector <4 x i8> %171, <4 x i8> undef, <4 x i32> zeroinitializer
  %173 = sext <4 x i8> %172 to <4 x i16>
  %174 = mul nsw <4 x i16> %173, %96
  %175 = add <4 x i16> %174, %72
  %176 = add nsw i64 %91, 40
  %177 = getelementptr inbounds i8, ptr %p0, i64 %176
  %178 = load i8, ptr %177, align 1, !tbaa !8458
  %179 = insertelement <4 x i8> undef, i8 %178, i64 0
  %180 = shufflevector <4 x i8> %179, <4 x i8> undef, <4 x i32> zeroinitializer
  %181 = sext <4 x i8> %180 to <4 x i16>
  %182 = mul nsw <4 x i16> %181, %96
  %183 = add <4 x i16> %182, %73
  %184 = add nsw i64 %91, 44
  %185 = getelementptr inbounds i8, ptr %p0, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !8458
  %187 = insertelement <4 x i8> undef, i8 %186, i64 0
  %188 = shufflevector <4 x i8> %187, <4 x i8> undef, <4 x i32> zeroinitializer
  %189 = sext <4 x i8> %188 to <4 x i16>
  %190 = mul nsw <4 x i16> %189, %96
  %191 = add <4 x i16> %190, %74
  %192 = add nsw i64 %91, 48
  %193 = getelementptr inbounds i8, ptr %p0, i64 %192
  %194 = load i8, ptr %193, align 1, !tbaa !8458
  %195 = insertelement <4 x i8> undef, i8 %194, i64 0
  %196 = shufflevector <4 x i8> %195, <4 x i8> undef, <4 x i32> zeroinitializer
  %197 = sext <4 x i8> %196 to <4 x i16>
  %198 = mul nsw <4 x i16> %197, %96
  %199 = add <4 x i16> %198, %75
  %200 = add nsw i64 %91, 52
  %201 = getelementptr inbounds i8, ptr %p0, i64 %200
  %202 = load i8, ptr %201, align 1, !tbaa !8458
  %203 = insertelement <4 x i8> undef, i8 %202, i64 0
  %204 = shufflevector <4 x i8> %203, <4 x i8> undef, <4 x i32> zeroinitializer
  %205 = sext <4 x i8> %204 to <4 x i16>
  %206 = mul nsw <4 x i16> %205, %96
  %207 = add <4 x i16> %206, %76
  %208 = add nsw i64 %91, 56
  %209 = getelementptr inbounds i8, ptr %p0, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !8458
  %211 = insertelement <4 x i8> undef, i8 %210, i64 0
  %212 = shufflevector <4 x i8> %211, <4 x i8> undef, <4 x i32> zeroinitializer
  %213 = sext <4 x i8> %212 to <4 x i16>
  %214 = mul nsw <4 x i16> %213, %96
  %215 = add <4 x i16> %214, %77
  %216 = add nsw i64 %91, 60
  %217 = getelementptr inbounds i8, ptr %p0, i64 %216
  %218 = load i8, ptr %217, align 1, !tbaa !8458
  %219 = insertelement <4 x i8> undef, i8 %218, i64 0
  %220 = shufflevector <4 x i8> %219, <4 x i8> undef, <4 x i32> zeroinitializer
  %221 = sext <4 x i8> %220 to <4 x i16>
  %222 = mul nsw <4 x i16> %221, %96
  %223 = add <4 x i16> %222, %78
  %224 = add nsw i64 %91, 64
  %225 = getelementptr inbounds i8, ptr %p0, i64 %224
  %226 = load i8, ptr %225, align 1, !tbaa !8458
  %227 = insertelement <4 x i8> undef, i8 %226, i64 0
  %228 = shufflevector <4 x i8> %227, <4 x i8> undef, <4 x i32> zeroinitializer
  %229 = sext <4 x i8> %228 to <4 x i16>
  %230 = mul nsw <4 x i16> %229, %96
  %231 = add <4 x i16> %230, %79
  %232 = add nsw i64 %91, 68
  %233 = getelementptr inbounds i8, ptr %p0, i64 %232
  %234 = load i8, ptr %233, align 1, !tbaa !8458
  %235 = insertelement <4 x i8> undef, i8 %234, i64 0
  %236 = shufflevector <4 x i8> %235, <4 x i8> undef, <4 x i32> zeroinitializer
  %237 = sext <4 x i8> %236 to <4 x i16>
  %238 = mul nsw <4 x i16> %237, %96
  %239 = add <4 x i16> %238, %80
  %240 = add nsw i64 %91, 72
  %241 = getelementptr inbounds i8, ptr %p0, i64 %240
  %242 = load i8, ptr %241, align 1, !tbaa !8458
  %243 = insertelement <4 x i8> undef, i8 %242, i64 0
  %244 = shufflevector <4 x i8> %243, <4 x i8> undef, <4 x i32> zeroinitializer
  %245 = sext <4 x i8> %244 to <4 x i16>
  %246 = mul nsw <4 x i16> %245, %96
  %247 = add <4 x i16> %246, %81
  %248 = add nsw i64 %91, 76
  %249 = getelementptr inbounds i8, ptr %p0, i64 %248
  %250 = load i8, ptr %249, align 1, !tbaa !8458
  %251 = insertelement <4 x i8> undef, i8 %250, i64 0
  %252 = shufflevector <4 x i8> %251, <4 x i8> undef, <4 x i32> zeroinitializer
  %253 = sext <4 x i8> %252 to <4 x i16>
  %254 = mul nsw <4 x i16> %253, %96
  %255 = add <4 x i16> %254, %82
  %256 = add nsw i64 %91, 80
  %257 = getelementptr inbounds i8, ptr %p0, i64 %256
  %258 = load i8, ptr %257, align 1, !tbaa !8458
  %259 = insertelement <4 x i8> undef, i8 %258, i64 0
  %260 = shufflevector <4 x i8> %259, <4 x i8> undef, <4 x i32> zeroinitializer
  %261 = sext <4 x i8> %260 to <4 x i16>
  %262 = mul nsw <4 x i16> %261, %96
  %263 = add <4 x i16> %262, %83
  %264 = add nsw i64 %91, 84
  %265 = getelementptr inbounds i8, ptr %p0, i64 %264
  %266 = load i8, ptr %265, align 1, !tbaa !8458
  %267 = insertelement <4 x i8> undef, i8 %266, i64 0
  %268 = shufflevector <4 x i8> %267, <4 x i8> undef, <4 x i32> zeroinitializer
  %269 = sext <4 x i8> %268 to <4 x i16>
  %270 = mul nsw <4 x i16> %269, %96
  %271 = add <4 x i16> %270, %84
  %272 = add nsw i64 %91, 88
  %273 = getelementptr inbounds i8, ptr %p0, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !8458
  %275 = insertelement <4 x i8> undef, i8 %274, i64 0
  %276 = shufflevector <4 x i8> %275, <4 x i8> undef, <4 x i32> zeroinitializer
  %277 = sext <4 x i8> %276 to <4 x i16>
  %278 = mul nsw <4 x i16> %277, %96
  %279 = add <4 x i16> %278, %85
  %280 = add nsw i64 %91, 92
  %281 = getelementptr inbounds i8, ptr %p0, i64 %280
  %282 = load i8, ptr %281, align 1, !tbaa !8458
  %283 = insertelement <4 x i8> undef, i8 %282, i64 0
  %284 = shufflevector <4 x i8> %283, <4 x i8> undef, <4 x i32> zeroinitializer
  %285 = sext <4 x i8> %284 to <4 x i16>
  %286 = mul nsw <4 x i16> %285, %96
  %287 = add <4 x i16> %286, %86
  %288 = add nsw i64 %91, 96
  %289 = getelementptr inbounds i8, ptr %p0, i64 %288
  %290 = load i8, ptr %289, align 1, !tbaa !8458
  %291 = insertelement <4 x i8> undef, i8 %290, i64 0
  %292 = shufflevector <4 x i8> %291, <4 x i8> undef, <4 x i32> zeroinitializer
  %293 = sext <4 x i8> %292 to <4 x i16>
  %294 = mul nsw <4 x i16> %293, %96
  %295 = add <4 x i16> %294, %87
  %296 = add nsw i64 %91, 100
  %297 = getelementptr inbounds i8, ptr %p0, i64 %296
  %298 = load i8, ptr %297, align 1, !tbaa !8458
  %299 = insertelement <4 x i8> undef, i8 %298, i64 0
  %300 = shufflevector <4 x i8> %299, <4 x i8> undef, <4 x i32> zeroinitializer
  %301 = sext <4 x i8> %300 to <4 x i16>
  %302 = mul nsw <4 x i16> %301, %96
  %303 = add <4 x i16> %302, %88
  %304 = add nsw i64 %91, 104
  %305 = getelementptr inbounds i8, ptr %p0, i64 %304
  %306 = load i8, ptr %305, align 1, !tbaa !8458
  %307 = insertelement <4 x i8> undef, i8 %306, i64 0
  %308 = shufflevector <4 x i8> %307, <4 x i8> undef, <4 x i32> zeroinitializer
  %309 = sext <4 x i8> %308 to <4 x i16>
  %310 = mul nsw <4 x i16> %309, %96
  %311 = add <4 x i16> %310, %89
  %312 = add nsw i64 %91, 108
  %313 = getelementptr inbounds i8, ptr %p0, i64 %312
  %314 = load i8, ptr %313, align 1, !tbaa !8458
  %315 = insertelement <4 x i8> undef, i8 %314, i64 0
  %316 = shufflevector <4 x i8> %315, <4 x i8> undef, <4 x i32> zeroinitializer
  %317 = sext <4 x i8> %316 to <4 x i16>
  %318 = mul nsw <4 x i16> %317, %96
  %319 = add <4 x i16> %318, %90
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !59

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next175 = add nuw nsw i64 %indvars.iv174, 1
  %exitcond177.not = icmp eq i64 %indvars.iv.next175, 32
  br i1 %exitcond177.not, label %for_begin_ax3.inner.preheader, label %for_begin_ic.inner.preheader, !prof !59

for_body_ax3.inner:                               ; preds = %for_body_ax3.inner, %for_begin_ax3.inner.preheader
  %indvars.iv178 = phi i64 [ 0, %for_begin_ax3.inner.preheader ], [ %indvars.iv.next179.1, %for_body_ax3.inner ]
  %320 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv178
  %321 = load <4 x i16>, ptr %320, align 16, !tbaa !8460
  %322 = add <4 x i16> %47, %321
  %323 = ashr <4 x i16> %322, %44
  %324 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %323, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %325 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %324, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %326 = trunc <4 x i16> %325 to <4 x i8>
  %327 = shl nuw nsw i64 %indvars.iv178, 2
  %328 = add nsw i64 %327, %58
  %329 = getelementptr inbounds i8, ptr %T_cast, i64 %328
  store <4 x i8> %326, ptr %329, align 4, !tbaa !8461
  %indvars.iv.next179 = or i64 %indvars.iv178, 1
  %330 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv.next179
  %331 = load <4 x i16>, ptr %330, align 8, !tbaa !8460
  %332 = add <4 x i16> %47, %331
  %333 = ashr <4 x i16> %332, %44
  %334 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %333, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %335 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %334, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %336 = trunc <4 x i16> %335 to <4 x i8>
  %337 = shl nuw nsw i64 %indvars.iv.next179, 2
  %338 = add nsw i64 %337, %58
  %339 = getelementptr inbounds i8, ptr %T_cast, i64 %338
  store <4 x i8> %336, ptr %339, align 4, !tbaa !8461
  %indvars.iv.next179.1 = add nuw nsw i64 %indvars.iv178, 2
  %exitcond181.not.1 = icmp eq i64 %indvars.iv.next179.1, 28
  br i1 %exitcond181.not.1, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !7452

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %indvars.iv.next183 = add nsw i64 %indvars.iv182, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next183 to i32
  %exitcond184.not = icmp eq i32 %50, %lftr.wideiv
  br i1 %exitcond184.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_7_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.44, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.44, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.44, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.44, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.44, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.2069, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.2069(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %conv2d_NCHWc.global1 = alloca [28 x <4 x i16>], align 16
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.44, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.44, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 3583
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 3584)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 3584)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph:     ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.44, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.44, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 1
  %16 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 2
  %17 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 3
  %18 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 4
  %19 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 5
  %20 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 6
  %21 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 7
  %22 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 8
  %23 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 9
  %24 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 10
  %25 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 11
  %26 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 12
  %27 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 13
  %28 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 14
  %29 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 15
  %30 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 16
  %31 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 17
  %32 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 18
  %33 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 19
  %34 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 20
  %35 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 21
  %36 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 22
  %37 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 23
  %38 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 24
  %39 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 25
  %40 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 26
  %41 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 27
  %42 = load i16, ptr %p3, align 64, !tbaa !8463
  %43 = insertelement <4 x i16> undef, i16 %42, i64 0
  %44 = shufflevector <4 x i16> %43, <4 x i16> undef, <4 x i32> zeroinitializer
  %45 = load i16, ptr %p2, align 64, !tbaa !8475
  %46 = insertelement <4 x i16> undef, i16 %45, i64 0
  %47 = shufflevector <4 x i16> %46, <4 x i16> undef, <4 x i32> zeroinitializer
  %48 = tail call i32 @llvm.smin.i32(i32 %10, i32 3584)
  %smin = sext i32 %48 to i64
  %49 = add i32 %9, %48
  %50 = sub i32 %49, %11
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, %for_end_ax3.inner
  %indvars.iv182 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph ], [ %indvars.iv.next183, %for_end_ax3.inner ]
  %51 = trunc i64 %indvars.iv182 to i32
  %52 = srem i32 %51, 28
  %53 = mul nsw i32 %52, 448
  %54 = sdiv i32 %51, 28
  %55 = shl nsw i32 %54, 10
  %56 = sext i32 %53 to i64
  %57 = sext i32 %55 to i64
  br label %for_begin_ic.inner.preheader

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_end_ax3.inner, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_end_ic.inner
  store <4 x i16> %103, ptr %conv2d_NCHWc.global1, align 16, !tbaa !8487
  store <4 x i16> %111, ptr %15, align 8, !tbaa !8497
  store <4 x i16> %119, ptr %16, align 16, !tbaa !8499
  store <4 x i16> %127, ptr %17, align 8, !tbaa !8502
  store <4 x i16> %135, ptr %18, align 16, !tbaa !8504
  store <4 x i16> %143, ptr %19, align 8, !tbaa !8508
  store <4 x i16> %151, ptr %20, align 16, !tbaa !8510
  store <4 x i16> %159, ptr %21, align 8, !tbaa !8513
  store <4 x i16> %167, ptr %22, align 16, !tbaa !8515
  store <4 x i16> %175, ptr %23, align 8, !tbaa !8520
  store <4 x i16> %183, ptr %24, align 16, !tbaa !8522
  store <4 x i16> %191, ptr %25, align 8, !tbaa !8525
  store <4 x i16> %199, ptr %26, align 16, !tbaa !8527
  store <4 x i16> %207, ptr %27, align 8, !tbaa !8531
  store <4 x i16> %215, ptr %28, align 16, !tbaa !8533
  store <4 x i16> %223, ptr %29, align 8, !tbaa !8536
  store <4 x i16> %231, ptr %30, align 16, !tbaa !8538
  store <4 x i16> %239, ptr %31, align 8, !tbaa !8544
  store <4 x i16> %247, ptr %32, align 16, !tbaa !8546
  store <4 x i16> %255, ptr %33, align 8, !tbaa !8549
  store <4 x i16> %263, ptr %34, align 16, !tbaa !8551
  store <4 x i16> %271, ptr %35, align 8, !tbaa !8555
  store <4 x i16> %279, ptr %36, align 16, !tbaa !8557
  store <4 x i16> %287, ptr %37, align 8, !tbaa !8560
  store <4 x i16> %295, ptr %38, align 16, !tbaa !8562
  store <4 x i16> %303, ptr %39, align 8, !tbaa !8567
  store <4 x i16> %311, ptr %40, align 16, !tbaa !8569
  store <4 x i16> %319, ptr %41, align 8, !tbaa !8572
  %58 = mul nsw i64 %indvars.iv182, 112
  br label %for_body_ax3.inner

for_begin_ic.inner.preheader:                     ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ic.inner
  %indvars.iv174 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %indvars.iv.next175, %for_end_ic.inner ]
  %.lcssa57138 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %103, %for_end_ic.inner ]
  %.lcssa259137 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %111, %for_end_ic.inner ]
  %.lcssa460136 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %119, %for_end_ic.inner ]
  %.lcssa662135 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %127, %for_end_ic.inner ]
  %.lcssa864134 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %135, %for_end_ic.inner ]
  %.lcssa1066133 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %143, %for_end_ic.inner ]
  %.lcssa1268132 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %151, %for_end_ic.inner ]
  %.lcssa1470131 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %159, %for_end_ic.inner ]
  %.lcssa1672130 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %167, %for_end_ic.inner ]
  %.lcssa1874129 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %175, %for_end_ic.inner ]
  %.lcssa2076128 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %183, %for_end_ic.inner ]
  %.lcssa2278127 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %191, %for_end_ic.inner ]
  %.lcssa2480126 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %199, %for_end_ic.inner ]
  %.lcssa2682125 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %207, %for_end_ic.inner ]
  %.lcssa2884124 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %215, %for_end_ic.inner ]
  %.lcssa3086123 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %223, %for_end_ic.inner ]
  %.lcssa3288122 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %231, %for_end_ic.inner ]
  %.lcssa3490121 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %239, %for_end_ic.inner ]
  %.lcssa3692120 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %247, %for_end_ic.inner ]
  %.lcssa3894119 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %255, %for_end_ic.inner ]
  %.lcssa4096118 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %263, %for_end_ic.inner ]
  %.lcssa4298117 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %271, %for_end_ic.inner ]
  %.lcssa44100116 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %279, %for_end_ic.inner ]
  %.lcssa46102115 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %287, %for_end_ic.inner ]
  %.lcssa48104114 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %295, %for_end_ic.inner ]
  %.lcssa50106113 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %303, %for_end_ic.inner ]
  %.lcssa52108112 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %311, %for_end_ic.inner ]
  %.lcssa54110111 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %319, %for_end_ic.inner ]
  %59 = mul nuw nsw i64 %indvars.iv174, 12544
  %60 = add nsw i64 %59, %56
  %61 = shl nsw i64 %indvars.iv174, 4
  %62 = add nuw nsw i64 %61, %57
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %63 = phi <4 x i16> [ %.lcssa57138, %for_begin_ic.inner.preheader ], [ %103, %for_body_ic.inner ]
  %64 = phi <4 x i16> [ %.lcssa259137, %for_begin_ic.inner.preheader ], [ %111, %for_body_ic.inner ]
  %65 = phi <4 x i16> [ %.lcssa460136, %for_begin_ic.inner.preheader ], [ %119, %for_body_ic.inner ]
  %66 = phi <4 x i16> [ %.lcssa662135, %for_begin_ic.inner.preheader ], [ %127, %for_body_ic.inner ]
  %67 = phi <4 x i16> [ %.lcssa864134, %for_begin_ic.inner.preheader ], [ %135, %for_body_ic.inner ]
  %68 = phi <4 x i16> [ %.lcssa1066133, %for_begin_ic.inner.preheader ], [ %143, %for_body_ic.inner ]
  %69 = phi <4 x i16> [ %.lcssa1268132, %for_begin_ic.inner.preheader ], [ %151, %for_body_ic.inner ]
  %70 = phi <4 x i16> [ %.lcssa1470131, %for_begin_ic.inner.preheader ], [ %159, %for_body_ic.inner ]
  %71 = phi <4 x i16> [ %.lcssa1672130, %for_begin_ic.inner.preheader ], [ %167, %for_body_ic.inner ]
  %72 = phi <4 x i16> [ %.lcssa1874129, %for_begin_ic.inner.preheader ], [ %175, %for_body_ic.inner ]
  %73 = phi <4 x i16> [ %.lcssa2076128, %for_begin_ic.inner.preheader ], [ %183, %for_body_ic.inner ]
  %74 = phi <4 x i16> [ %.lcssa2278127, %for_begin_ic.inner.preheader ], [ %191, %for_body_ic.inner ]
  %75 = phi <4 x i16> [ %.lcssa2480126, %for_begin_ic.inner.preheader ], [ %199, %for_body_ic.inner ]
  %76 = phi <4 x i16> [ %.lcssa2682125, %for_begin_ic.inner.preheader ], [ %207, %for_body_ic.inner ]
  %77 = phi <4 x i16> [ %.lcssa2884124, %for_begin_ic.inner.preheader ], [ %215, %for_body_ic.inner ]
  %78 = phi <4 x i16> [ %.lcssa3086123, %for_begin_ic.inner.preheader ], [ %223, %for_body_ic.inner ]
  %79 = phi <4 x i16> [ %.lcssa3288122, %for_begin_ic.inner.preheader ], [ %231, %for_body_ic.inner ]
  %80 = phi <4 x i16> [ %.lcssa3490121, %for_begin_ic.inner.preheader ], [ %239, %for_body_ic.inner ]
  %81 = phi <4 x i16> [ %.lcssa3692120, %for_begin_ic.inner.preheader ], [ %247, %for_body_ic.inner ]
  %82 = phi <4 x i16> [ %.lcssa3894119, %for_begin_ic.inner.preheader ], [ %255, %for_body_ic.inner ]
  %83 = phi <4 x i16> [ %.lcssa4096118, %for_begin_ic.inner.preheader ], [ %263, %for_body_ic.inner ]
  %84 = phi <4 x i16> [ %.lcssa4298117, %for_begin_ic.inner.preheader ], [ %271, %for_body_ic.inner ]
  %85 = phi <4 x i16> [ %.lcssa44100116, %for_begin_ic.inner.preheader ], [ %279, %for_body_ic.inner ]
  %86 = phi <4 x i16> [ %.lcssa46102115, %for_begin_ic.inner.preheader ], [ %287, %for_body_ic.inner ]
  %87 = phi <4 x i16> [ %.lcssa48104114, %for_begin_ic.inner.preheader ], [ %295, %for_body_ic.inner ]
  %88 = phi <4 x i16> [ %.lcssa50106113, %for_begin_ic.inner.preheader ], [ %303, %for_body_ic.inner ]
  %89 = phi <4 x i16> [ %.lcssa52108112, %for_begin_ic.inner.preheader ], [ %311, %for_body_ic.inner ]
  %90 = phi <4 x i16> [ %.lcssa54110111, %for_begin_ic.inner.preheader ], [ %319, %for_body_ic.inner ]
  %91 = add nsw i64 %60, %indvars.iv
  %92 = shl nuw nsw i64 %indvars.iv, 2
  %93 = add nuw nsw i64 %62, %92
  %94 = getelementptr inbounds i8, ptr %p1, i64 %93
  %95 = load <4 x i8>, ptr %94, align 4, !tbaa !8574
  %96 = sext <4 x i8> %95 to <4 x i16>
  %97 = getelementptr inbounds i8, ptr %p0, i64 %91
  %98 = load i8, ptr %97, align 1, !tbaa !8576
  %99 = insertelement <4 x i8> undef, i8 %98, i64 0
  %100 = shufflevector <4 x i8> %99, <4 x i8> undef, <4 x i32> zeroinitializer
  %101 = sext <4 x i8> %100 to <4 x i16>
  %102 = mul nsw <4 x i16> %101, %96
  %103 = add <4 x i16> %102, %63
  %104 = add nsw i64 %91, 8
  %105 = getelementptr inbounds i8, ptr %p0, i64 %104
  %106 = load i8, ptr %105, align 1, !tbaa !8576
  %107 = insertelement <4 x i8> undef, i8 %106, i64 0
  %108 = shufflevector <4 x i8> %107, <4 x i8> undef, <4 x i32> zeroinitializer
  %109 = sext <4 x i8> %108 to <4 x i16>
  %110 = mul nsw <4 x i16> %109, %96
  %111 = add <4 x i16> %110, %64
  %112 = add nsw i64 %91, 16
  %113 = getelementptr inbounds i8, ptr %p0, i64 %112
  %114 = load i8, ptr %113, align 1, !tbaa !8576
  %115 = insertelement <4 x i8> undef, i8 %114, i64 0
  %116 = shufflevector <4 x i8> %115, <4 x i8> undef, <4 x i32> zeroinitializer
  %117 = sext <4 x i8> %116 to <4 x i16>
  %118 = mul nsw <4 x i16> %117, %96
  %119 = add <4 x i16> %118, %65
  %120 = add nsw i64 %91, 24
  %121 = getelementptr inbounds i8, ptr %p0, i64 %120
  %122 = load i8, ptr %121, align 1, !tbaa !8576
  %123 = insertelement <4 x i8> undef, i8 %122, i64 0
  %124 = shufflevector <4 x i8> %123, <4 x i8> undef, <4 x i32> zeroinitializer
  %125 = sext <4 x i8> %124 to <4 x i16>
  %126 = mul nsw <4 x i16> %125, %96
  %127 = add <4 x i16> %126, %66
  %128 = add nsw i64 %91, 32
  %129 = getelementptr inbounds i8, ptr %p0, i64 %128
  %130 = load i8, ptr %129, align 1, !tbaa !8576
  %131 = insertelement <4 x i8> undef, i8 %130, i64 0
  %132 = shufflevector <4 x i8> %131, <4 x i8> undef, <4 x i32> zeroinitializer
  %133 = sext <4 x i8> %132 to <4 x i16>
  %134 = mul nsw <4 x i16> %133, %96
  %135 = add <4 x i16> %134, %67
  %136 = add nsw i64 %91, 40
  %137 = getelementptr inbounds i8, ptr %p0, i64 %136
  %138 = load i8, ptr %137, align 1, !tbaa !8576
  %139 = insertelement <4 x i8> undef, i8 %138, i64 0
  %140 = shufflevector <4 x i8> %139, <4 x i8> undef, <4 x i32> zeroinitializer
  %141 = sext <4 x i8> %140 to <4 x i16>
  %142 = mul nsw <4 x i16> %141, %96
  %143 = add <4 x i16> %142, %68
  %144 = add nsw i64 %91, 48
  %145 = getelementptr inbounds i8, ptr %p0, i64 %144
  %146 = load i8, ptr %145, align 1, !tbaa !8576
  %147 = insertelement <4 x i8> undef, i8 %146, i64 0
  %148 = shufflevector <4 x i8> %147, <4 x i8> undef, <4 x i32> zeroinitializer
  %149 = sext <4 x i8> %148 to <4 x i16>
  %150 = mul nsw <4 x i16> %149, %96
  %151 = add <4 x i16> %150, %69
  %152 = add nsw i64 %91, 56
  %153 = getelementptr inbounds i8, ptr %p0, i64 %152
  %154 = load i8, ptr %153, align 1, !tbaa !8576
  %155 = insertelement <4 x i8> undef, i8 %154, i64 0
  %156 = shufflevector <4 x i8> %155, <4 x i8> undef, <4 x i32> zeroinitializer
  %157 = sext <4 x i8> %156 to <4 x i16>
  %158 = mul nsw <4 x i16> %157, %96
  %159 = add <4 x i16> %158, %70
  %160 = add nsw i64 %91, 64
  %161 = getelementptr inbounds i8, ptr %p0, i64 %160
  %162 = load i8, ptr %161, align 1, !tbaa !8576
  %163 = insertelement <4 x i8> undef, i8 %162, i64 0
  %164 = shufflevector <4 x i8> %163, <4 x i8> undef, <4 x i32> zeroinitializer
  %165 = sext <4 x i8> %164 to <4 x i16>
  %166 = mul nsw <4 x i16> %165, %96
  %167 = add <4 x i16> %166, %71
  %168 = add nsw i64 %91, 72
  %169 = getelementptr inbounds i8, ptr %p0, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !8576
  %171 = insertelement <4 x i8> undef, i8 %170, i64 0
  %172 = shufflevector <4 x i8> %171, <4 x i8> undef, <4 x i32> zeroinitializer
  %173 = sext <4 x i8> %172 to <4 x i16>
  %174 = mul nsw <4 x i16> %173, %96
  %175 = add <4 x i16> %174, %72
  %176 = add nsw i64 %91, 80
  %177 = getelementptr inbounds i8, ptr %p0, i64 %176
  %178 = load i8, ptr %177, align 1, !tbaa !8576
  %179 = insertelement <4 x i8> undef, i8 %178, i64 0
  %180 = shufflevector <4 x i8> %179, <4 x i8> undef, <4 x i32> zeroinitializer
  %181 = sext <4 x i8> %180 to <4 x i16>
  %182 = mul nsw <4 x i16> %181, %96
  %183 = add <4 x i16> %182, %73
  %184 = add nsw i64 %91, 88
  %185 = getelementptr inbounds i8, ptr %p0, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !8576
  %187 = insertelement <4 x i8> undef, i8 %186, i64 0
  %188 = shufflevector <4 x i8> %187, <4 x i8> undef, <4 x i32> zeroinitializer
  %189 = sext <4 x i8> %188 to <4 x i16>
  %190 = mul nsw <4 x i16> %189, %96
  %191 = add <4 x i16> %190, %74
  %192 = add nsw i64 %91, 96
  %193 = getelementptr inbounds i8, ptr %p0, i64 %192
  %194 = load i8, ptr %193, align 1, !tbaa !8576
  %195 = insertelement <4 x i8> undef, i8 %194, i64 0
  %196 = shufflevector <4 x i8> %195, <4 x i8> undef, <4 x i32> zeroinitializer
  %197 = sext <4 x i8> %196 to <4 x i16>
  %198 = mul nsw <4 x i16> %197, %96
  %199 = add <4 x i16> %198, %75
  %200 = add nsw i64 %91, 104
  %201 = getelementptr inbounds i8, ptr %p0, i64 %200
  %202 = load i8, ptr %201, align 1, !tbaa !8576
  %203 = insertelement <4 x i8> undef, i8 %202, i64 0
  %204 = shufflevector <4 x i8> %203, <4 x i8> undef, <4 x i32> zeroinitializer
  %205 = sext <4 x i8> %204 to <4 x i16>
  %206 = mul nsw <4 x i16> %205, %96
  %207 = add <4 x i16> %206, %76
  %208 = add nsw i64 %91, 112
  %209 = getelementptr inbounds i8, ptr %p0, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !8576
  %211 = insertelement <4 x i8> undef, i8 %210, i64 0
  %212 = shufflevector <4 x i8> %211, <4 x i8> undef, <4 x i32> zeroinitializer
  %213 = sext <4 x i8> %212 to <4 x i16>
  %214 = mul nsw <4 x i16> %213, %96
  %215 = add <4 x i16> %214, %77
  %216 = add nsw i64 %91, 120
  %217 = getelementptr inbounds i8, ptr %p0, i64 %216
  %218 = load i8, ptr %217, align 1, !tbaa !8576
  %219 = insertelement <4 x i8> undef, i8 %218, i64 0
  %220 = shufflevector <4 x i8> %219, <4 x i8> undef, <4 x i32> zeroinitializer
  %221 = sext <4 x i8> %220 to <4 x i16>
  %222 = mul nsw <4 x i16> %221, %96
  %223 = add <4 x i16> %222, %78
  %224 = add nsw i64 %91, 128
  %225 = getelementptr inbounds i8, ptr %p0, i64 %224
  %226 = load i8, ptr %225, align 1, !tbaa !8576
  %227 = insertelement <4 x i8> undef, i8 %226, i64 0
  %228 = shufflevector <4 x i8> %227, <4 x i8> undef, <4 x i32> zeroinitializer
  %229 = sext <4 x i8> %228 to <4 x i16>
  %230 = mul nsw <4 x i16> %229, %96
  %231 = add <4 x i16> %230, %79
  %232 = add nsw i64 %91, 136
  %233 = getelementptr inbounds i8, ptr %p0, i64 %232
  %234 = load i8, ptr %233, align 1, !tbaa !8576
  %235 = insertelement <4 x i8> undef, i8 %234, i64 0
  %236 = shufflevector <4 x i8> %235, <4 x i8> undef, <4 x i32> zeroinitializer
  %237 = sext <4 x i8> %236 to <4 x i16>
  %238 = mul nsw <4 x i16> %237, %96
  %239 = add <4 x i16> %238, %80
  %240 = add nsw i64 %91, 144
  %241 = getelementptr inbounds i8, ptr %p0, i64 %240
  %242 = load i8, ptr %241, align 1, !tbaa !8576
  %243 = insertelement <4 x i8> undef, i8 %242, i64 0
  %244 = shufflevector <4 x i8> %243, <4 x i8> undef, <4 x i32> zeroinitializer
  %245 = sext <4 x i8> %244 to <4 x i16>
  %246 = mul nsw <4 x i16> %245, %96
  %247 = add <4 x i16> %246, %81
  %248 = add nsw i64 %91, 152
  %249 = getelementptr inbounds i8, ptr %p0, i64 %248
  %250 = load i8, ptr %249, align 1, !tbaa !8576
  %251 = insertelement <4 x i8> undef, i8 %250, i64 0
  %252 = shufflevector <4 x i8> %251, <4 x i8> undef, <4 x i32> zeroinitializer
  %253 = sext <4 x i8> %252 to <4 x i16>
  %254 = mul nsw <4 x i16> %253, %96
  %255 = add <4 x i16> %254, %82
  %256 = add nsw i64 %91, 160
  %257 = getelementptr inbounds i8, ptr %p0, i64 %256
  %258 = load i8, ptr %257, align 1, !tbaa !8576
  %259 = insertelement <4 x i8> undef, i8 %258, i64 0
  %260 = shufflevector <4 x i8> %259, <4 x i8> undef, <4 x i32> zeroinitializer
  %261 = sext <4 x i8> %260 to <4 x i16>
  %262 = mul nsw <4 x i16> %261, %96
  %263 = add <4 x i16> %262, %83
  %264 = add nsw i64 %91, 168
  %265 = getelementptr inbounds i8, ptr %p0, i64 %264
  %266 = load i8, ptr %265, align 1, !tbaa !8576
  %267 = insertelement <4 x i8> undef, i8 %266, i64 0
  %268 = shufflevector <4 x i8> %267, <4 x i8> undef, <4 x i32> zeroinitializer
  %269 = sext <4 x i8> %268 to <4 x i16>
  %270 = mul nsw <4 x i16> %269, %96
  %271 = add <4 x i16> %270, %84
  %272 = add nsw i64 %91, 176
  %273 = getelementptr inbounds i8, ptr %p0, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !8576
  %275 = insertelement <4 x i8> undef, i8 %274, i64 0
  %276 = shufflevector <4 x i8> %275, <4 x i8> undef, <4 x i32> zeroinitializer
  %277 = sext <4 x i8> %276 to <4 x i16>
  %278 = mul nsw <4 x i16> %277, %96
  %279 = add <4 x i16> %278, %85
  %280 = add nsw i64 %91, 184
  %281 = getelementptr inbounds i8, ptr %p0, i64 %280
  %282 = load i8, ptr %281, align 1, !tbaa !8576
  %283 = insertelement <4 x i8> undef, i8 %282, i64 0
  %284 = shufflevector <4 x i8> %283, <4 x i8> undef, <4 x i32> zeroinitializer
  %285 = sext <4 x i8> %284 to <4 x i16>
  %286 = mul nsw <4 x i16> %285, %96
  %287 = add <4 x i16> %286, %86
  %288 = add nsw i64 %91, 192
  %289 = getelementptr inbounds i8, ptr %p0, i64 %288
  %290 = load i8, ptr %289, align 1, !tbaa !8576
  %291 = insertelement <4 x i8> undef, i8 %290, i64 0
  %292 = shufflevector <4 x i8> %291, <4 x i8> undef, <4 x i32> zeroinitializer
  %293 = sext <4 x i8> %292 to <4 x i16>
  %294 = mul nsw <4 x i16> %293, %96
  %295 = add <4 x i16> %294, %87
  %296 = add nsw i64 %91, 200
  %297 = getelementptr inbounds i8, ptr %p0, i64 %296
  %298 = load i8, ptr %297, align 1, !tbaa !8576
  %299 = insertelement <4 x i8> undef, i8 %298, i64 0
  %300 = shufflevector <4 x i8> %299, <4 x i8> undef, <4 x i32> zeroinitializer
  %301 = sext <4 x i8> %300 to <4 x i16>
  %302 = mul nsw <4 x i16> %301, %96
  %303 = add <4 x i16> %302, %88
  %304 = add nsw i64 %91, 208
  %305 = getelementptr inbounds i8, ptr %p0, i64 %304
  %306 = load i8, ptr %305, align 1, !tbaa !8576
  %307 = insertelement <4 x i8> undef, i8 %306, i64 0
  %308 = shufflevector <4 x i8> %307, <4 x i8> undef, <4 x i32> zeroinitializer
  %309 = sext <4 x i8> %308 to <4 x i16>
  %310 = mul nsw <4 x i16> %309, %96
  %311 = add <4 x i16> %310, %89
  %312 = add nsw i64 %91, 216
  %313 = getelementptr inbounds i8, ptr %p0, i64 %312
  %314 = load i8, ptr %313, align 1, !tbaa !8576
  %315 = insertelement <4 x i8> undef, i8 %314, i64 0
  %316 = shufflevector <4 x i8> %315, <4 x i8> undef, <4 x i32> zeroinitializer
  %317 = sext <4 x i8> %316 to <4 x i16>
  %318 = mul nsw <4 x i16> %317, %96
  %319 = add <4 x i16> %318, %90
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !59

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next175 = add nuw nsw i64 %indvars.iv174, 1
  %exitcond177.not = icmp eq i64 %indvars.iv.next175, 64
  br i1 %exitcond177.not, label %for_begin_ax3.inner.preheader, label %for_begin_ic.inner.preheader, !prof !59

for_body_ax3.inner:                               ; preds = %for_body_ax3.inner, %for_begin_ax3.inner.preheader
  %indvars.iv178 = phi i64 [ 0, %for_begin_ax3.inner.preheader ], [ %indvars.iv.next179.1, %for_body_ax3.inner ]
  %320 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv178
  %321 = load <4 x i16>, ptr %320, align 16, !tbaa !8578
  %322 = add <4 x i16> %47, %321
  %323 = ashr <4 x i16> %322, %44
  %324 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %323, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %325 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %324, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %326 = trunc <4 x i16> %325 to <4 x i8>
  %327 = shl nuw nsw i64 %indvars.iv178, 2
  %328 = add nsw i64 %327, %58
  %329 = getelementptr inbounds i8, ptr %T_cast, i64 %328
  store <4 x i8> %326, ptr %329, align 4, !tbaa !8579
  %indvars.iv.next179 = or i64 %indvars.iv178, 1
  %330 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv.next179
  %331 = load <4 x i16>, ptr %330, align 8, !tbaa !8578
  %332 = add <4 x i16> %47, %331
  %333 = ashr <4 x i16> %332, %44
  %334 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %333, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %335 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %334, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %336 = trunc <4 x i16> %335 to <4 x i8>
  %337 = shl nuw nsw i64 %indvars.iv.next179, 2
  %338 = add nsw i64 %337, %58
  %339 = getelementptr inbounds i8, ptr %T_cast, i64 %338
  store <4 x i8> %336, ptr %339, align 4, !tbaa !8579
  %indvars.iv.next179.1 = add nuw nsw i64 %indvars.iv178, 2
  %exitcond181.not.1 = icmp eq i64 %indvars.iv.next179.1, 28
  br i1 %exitcond181.not.1, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !7452

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %indvars.iv.next183 = add nsw i64 %indvars.iv182, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next183 to i32
  %exitcond184.not = icmp eq i32 %50, %lftr.wideiv
  br i1 %exitcond184.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_8_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.2119, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.2119(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %conv2d_NCHWc.global1 = alloca [28 x <4 x i16>], align 16
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 895
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 896)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph:     ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 1
  %16 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 2
  %17 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 3
  %18 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 4
  %19 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 5
  %20 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 6
  %21 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 7
  %22 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 8
  %23 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 9
  %24 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 10
  %25 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 11
  %26 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 12
  %27 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 13
  %28 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 14
  %29 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 15
  %30 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 16
  %31 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 17
  %32 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 18
  %33 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 19
  %34 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 20
  %35 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 21
  %36 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 22
  %37 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 23
  %38 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 24
  %39 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 25
  %40 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 26
  %41 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 27
  %42 = load i16, ptr %p3, align 64, !tbaa !8581
  %43 = insertelement <4 x i16> undef, i16 %42, i64 0
  %44 = shufflevector <4 x i16> %43, <4 x i16> undef, <4 x i32> zeroinitializer
  %45 = load i16, ptr %p2, align 64, !tbaa !8593
  %46 = insertelement <4 x i16> undef, i16 %45, i64 0
  %47 = shufflevector <4 x i16> %46, <4 x i16> undef, <4 x i32> zeroinitializer
  %48 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %smin = sext i32 %48 to i64
  %49 = add i32 %9, %48
  %50 = sub i32 %49, %11
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, %for_end_ax3.inner
  %indvars.iv182 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph ], [ %indvars.iv.next183, %for_end_ax3.inner ]
  %51 = trunc i64 %indvars.iv182 to i32
  %52 = srem i32 %51, 28
  %53 = mul nsw i32 %52, 112
  %54 = sdiv i32 %51, 28
  %55 = shl nsw i32 %54, 11
  %56 = sext i32 %53 to i64
  %57 = sext i32 %55 to i64
  br label %for_begin_ic.inner.preheader

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_end_ax3.inner, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_end_ic.inner
  store <4 x i16> %103, ptr %conv2d_NCHWc.global1, align 16, !tbaa !8605
  store <4 x i16> %111, ptr %15, align 8, !tbaa !8615
  store <4 x i16> %119, ptr %16, align 16, !tbaa !8617
  store <4 x i16> %127, ptr %17, align 8, !tbaa !8620
  store <4 x i16> %135, ptr %18, align 16, !tbaa !8622
  store <4 x i16> %143, ptr %19, align 8, !tbaa !8626
  store <4 x i16> %151, ptr %20, align 16, !tbaa !8628
  store <4 x i16> %159, ptr %21, align 8, !tbaa !8631
  store <4 x i16> %167, ptr %22, align 16, !tbaa !8633
  store <4 x i16> %175, ptr %23, align 8, !tbaa !8638
  store <4 x i16> %183, ptr %24, align 16, !tbaa !8640
  store <4 x i16> %191, ptr %25, align 8, !tbaa !8643
  store <4 x i16> %199, ptr %26, align 16, !tbaa !8645
  store <4 x i16> %207, ptr %27, align 8, !tbaa !8649
  store <4 x i16> %215, ptr %28, align 16, !tbaa !8651
  store <4 x i16> %223, ptr %29, align 8, !tbaa !8654
  store <4 x i16> %231, ptr %30, align 16, !tbaa !8656
  store <4 x i16> %239, ptr %31, align 8, !tbaa !8662
  store <4 x i16> %247, ptr %32, align 16, !tbaa !8664
  store <4 x i16> %255, ptr %33, align 8, !tbaa !8667
  store <4 x i16> %263, ptr %34, align 16, !tbaa !8669
  store <4 x i16> %271, ptr %35, align 8, !tbaa !8673
  store <4 x i16> %279, ptr %36, align 16, !tbaa !8675
  store <4 x i16> %287, ptr %37, align 8, !tbaa !8678
  store <4 x i16> %295, ptr %38, align 16, !tbaa !8680
  store <4 x i16> %303, ptr %39, align 8, !tbaa !8685
  store <4 x i16> %311, ptr %40, align 16, !tbaa !8687
  store <4 x i16> %319, ptr %41, align 8, !tbaa !8690
  %58 = mul nsw i64 %indvars.iv182, 112
  br label %for_body_ax3.inner

for_begin_ic.inner.preheader:                     ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ic.inner
  %indvars.iv174 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %indvars.iv.next175, %for_end_ic.inner ]
  %.lcssa57138 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %103, %for_end_ic.inner ]
  %.lcssa259137 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %111, %for_end_ic.inner ]
  %.lcssa460136 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %119, %for_end_ic.inner ]
  %.lcssa662135 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %127, %for_end_ic.inner ]
  %.lcssa864134 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %135, %for_end_ic.inner ]
  %.lcssa1066133 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %143, %for_end_ic.inner ]
  %.lcssa1268132 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %151, %for_end_ic.inner ]
  %.lcssa1470131 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %159, %for_end_ic.inner ]
  %.lcssa1672130 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %167, %for_end_ic.inner ]
  %.lcssa1874129 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %175, %for_end_ic.inner ]
  %.lcssa2076128 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %183, %for_end_ic.inner ]
  %.lcssa2278127 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %191, %for_end_ic.inner ]
  %.lcssa2480126 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %199, %for_end_ic.inner ]
  %.lcssa2682125 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %207, %for_end_ic.inner ]
  %.lcssa2884124 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %215, %for_end_ic.inner ]
  %.lcssa3086123 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %223, %for_end_ic.inner ]
  %.lcssa3288122 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %231, %for_end_ic.inner ]
  %.lcssa3490121 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %239, %for_end_ic.inner ]
  %.lcssa3692120 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %247, %for_end_ic.inner ]
  %.lcssa3894119 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %255, %for_end_ic.inner ]
  %.lcssa4096118 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %263, %for_end_ic.inner ]
  %.lcssa4298117 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %271, %for_end_ic.inner ]
  %.lcssa44100116 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %279, %for_end_ic.inner ]
  %.lcssa46102115 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %287, %for_end_ic.inner ]
  %.lcssa48104114 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %295, %for_end_ic.inner ]
  %.lcssa50106113 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %303, %for_end_ic.inner ]
  %.lcssa52108112 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %311, %for_end_ic.inner ]
  %.lcssa54110111 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %319, %for_end_ic.inner ]
  %59 = mul nuw nsw i64 %indvars.iv174, 3136
  %60 = add nsw i64 %59, %56
  %61 = shl nsw i64 %indvars.iv174, 4
  %62 = add nuw nsw i64 %61, %57
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %63 = phi <4 x i16> [ %.lcssa57138, %for_begin_ic.inner.preheader ], [ %103, %for_body_ic.inner ]
  %64 = phi <4 x i16> [ %.lcssa259137, %for_begin_ic.inner.preheader ], [ %111, %for_body_ic.inner ]
  %65 = phi <4 x i16> [ %.lcssa460136, %for_begin_ic.inner.preheader ], [ %119, %for_body_ic.inner ]
  %66 = phi <4 x i16> [ %.lcssa662135, %for_begin_ic.inner.preheader ], [ %127, %for_body_ic.inner ]
  %67 = phi <4 x i16> [ %.lcssa864134, %for_begin_ic.inner.preheader ], [ %135, %for_body_ic.inner ]
  %68 = phi <4 x i16> [ %.lcssa1066133, %for_begin_ic.inner.preheader ], [ %143, %for_body_ic.inner ]
  %69 = phi <4 x i16> [ %.lcssa1268132, %for_begin_ic.inner.preheader ], [ %151, %for_body_ic.inner ]
  %70 = phi <4 x i16> [ %.lcssa1470131, %for_begin_ic.inner.preheader ], [ %159, %for_body_ic.inner ]
  %71 = phi <4 x i16> [ %.lcssa1672130, %for_begin_ic.inner.preheader ], [ %167, %for_body_ic.inner ]
  %72 = phi <4 x i16> [ %.lcssa1874129, %for_begin_ic.inner.preheader ], [ %175, %for_body_ic.inner ]
  %73 = phi <4 x i16> [ %.lcssa2076128, %for_begin_ic.inner.preheader ], [ %183, %for_body_ic.inner ]
  %74 = phi <4 x i16> [ %.lcssa2278127, %for_begin_ic.inner.preheader ], [ %191, %for_body_ic.inner ]
  %75 = phi <4 x i16> [ %.lcssa2480126, %for_begin_ic.inner.preheader ], [ %199, %for_body_ic.inner ]
  %76 = phi <4 x i16> [ %.lcssa2682125, %for_begin_ic.inner.preheader ], [ %207, %for_body_ic.inner ]
  %77 = phi <4 x i16> [ %.lcssa2884124, %for_begin_ic.inner.preheader ], [ %215, %for_body_ic.inner ]
  %78 = phi <4 x i16> [ %.lcssa3086123, %for_begin_ic.inner.preheader ], [ %223, %for_body_ic.inner ]
  %79 = phi <4 x i16> [ %.lcssa3288122, %for_begin_ic.inner.preheader ], [ %231, %for_body_ic.inner ]
  %80 = phi <4 x i16> [ %.lcssa3490121, %for_begin_ic.inner.preheader ], [ %239, %for_body_ic.inner ]
  %81 = phi <4 x i16> [ %.lcssa3692120, %for_begin_ic.inner.preheader ], [ %247, %for_body_ic.inner ]
  %82 = phi <4 x i16> [ %.lcssa3894119, %for_begin_ic.inner.preheader ], [ %255, %for_body_ic.inner ]
  %83 = phi <4 x i16> [ %.lcssa4096118, %for_begin_ic.inner.preheader ], [ %263, %for_body_ic.inner ]
  %84 = phi <4 x i16> [ %.lcssa4298117, %for_begin_ic.inner.preheader ], [ %271, %for_body_ic.inner ]
  %85 = phi <4 x i16> [ %.lcssa44100116, %for_begin_ic.inner.preheader ], [ %279, %for_body_ic.inner ]
  %86 = phi <4 x i16> [ %.lcssa46102115, %for_begin_ic.inner.preheader ], [ %287, %for_body_ic.inner ]
  %87 = phi <4 x i16> [ %.lcssa48104114, %for_begin_ic.inner.preheader ], [ %295, %for_body_ic.inner ]
  %88 = phi <4 x i16> [ %.lcssa50106113, %for_begin_ic.inner.preheader ], [ %303, %for_body_ic.inner ]
  %89 = phi <4 x i16> [ %.lcssa52108112, %for_begin_ic.inner.preheader ], [ %311, %for_body_ic.inner ]
  %90 = phi <4 x i16> [ %.lcssa54110111, %for_begin_ic.inner.preheader ], [ %319, %for_body_ic.inner ]
  %91 = add nsw i64 %60, %indvars.iv
  %92 = shl nuw nsw i64 %indvars.iv, 2
  %93 = add nuw nsw i64 %62, %92
  %94 = getelementptr inbounds i8, ptr %p1, i64 %93
  %95 = load <4 x i8>, ptr %94, align 4, !tbaa !8692
  %96 = sext <4 x i8> %95 to <4 x i16>
  %97 = getelementptr inbounds i8, ptr %p0, i64 %91
  %98 = load i8, ptr %97, align 1, !tbaa !8694
  %99 = insertelement <4 x i8> undef, i8 %98, i64 0
  %100 = shufflevector <4 x i8> %99, <4 x i8> undef, <4 x i32> zeroinitializer
  %101 = sext <4 x i8> %100 to <4 x i16>
  %102 = mul nsw <4 x i16> %101, %96
  %103 = add <4 x i16> %102, %63
  %104 = add nsw i64 %91, 4
  %105 = getelementptr inbounds i8, ptr %p0, i64 %104
  %106 = load i8, ptr %105, align 1, !tbaa !8694
  %107 = insertelement <4 x i8> undef, i8 %106, i64 0
  %108 = shufflevector <4 x i8> %107, <4 x i8> undef, <4 x i32> zeroinitializer
  %109 = sext <4 x i8> %108 to <4 x i16>
  %110 = mul nsw <4 x i16> %109, %96
  %111 = add <4 x i16> %110, %64
  %112 = add nsw i64 %91, 8
  %113 = getelementptr inbounds i8, ptr %p0, i64 %112
  %114 = load i8, ptr %113, align 1, !tbaa !8694
  %115 = insertelement <4 x i8> undef, i8 %114, i64 0
  %116 = shufflevector <4 x i8> %115, <4 x i8> undef, <4 x i32> zeroinitializer
  %117 = sext <4 x i8> %116 to <4 x i16>
  %118 = mul nsw <4 x i16> %117, %96
  %119 = add <4 x i16> %118, %65
  %120 = add nsw i64 %91, 12
  %121 = getelementptr inbounds i8, ptr %p0, i64 %120
  %122 = load i8, ptr %121, align 1, !tbaa !8694
  %123 = insertelement <4 x i8> undef, i8 %122, i64 0
  %124 = shufflevector <4 x i8> %123, <4 x i8> undef, <4 x i32> zeroinitializer
  %125 = sext <4 x i8> %124 to <4 x i16>
  %126 = mul nsw <4 x i16> %125, %96
  %127 = add <4 x i16> %126, %66
  %128 = add nsw i64 %91, 16
  %129 = getelementptr inbounds i8, ptr %p0, i64 %128
  %130 = load i8, ptr %129, align 1, !tbaa !8694
  %131 = insertelement <4 x i8> undef, i8 %130, i64 0
  %132 = shufflevector <4 x i8> %131, <4 x i8> undef, <4 x i32> zeroinitializer
  %133 = sext <4 x i8> %132 to <4 x i16>
  %134 = mul nsw <4 x i16> %133, %96
  %135 = add <4 x i16> %134, %67
  %136 = add nsw i64 %91, 20
  %137 = getelementptr inbounds i8, ptr %p0, i64 %136
  %138 = load i8, ptr %137, align 1, !tbaa !8694
  %139 = insertelement <4 x i8> undef, i8 %138, i64 0
  %140 = shufflevector <4 x i8> %139, <4 x i8> undef, <4 x i32> zeroinitializer
  %141 = sext <4 x i8> %140 to <4 x i16>
  %142 = mul nsw <4 x i16> %141, %96
  %143 = add <4 x i16> %142, %68
  %144 = add nsw i64 %91, 24
  %145 = getelementptr inbounds i8, ptr %p0, i64 %144
  %146 = load i8, ptr %145, align 1, !tbaa !8694
  %147 = insertelement <4 x i8> undef, i8 %146, i64 0
  %148 = shufflevector <4 x i8> %147, <4 x i8> undef, <4 x i32> zeroinitializer
  %149 = sext <4 x i8> %148 to <4 x i16>
  %150 = mul nsw <4 x i16> %149, %96
  %151 = add <4 x i16> %150, %69
  %152 = add nsw i64 %91, 28
  %153 = getelementptr inbounds i8, ptr %p0, i64 %152
  %154 = load i8, ptr %153, align 1, !tbaa !8694
  %155 = insertelement <4 x i8> undef, i8 %154, i64 0
  %156 = shufflevector <4 x i8> %155, <4 x i8> undef, <4 x i32> zeroinitializer
  %157 = sext <4 x i8> %156 to <4 x i16>
  %158 = mul nsw <4 x i16> %157, %96
  %159 = add <4 x i16> %158, %70
  %160 = add nsw i64 %91, 32
  %161 = getelementptr inbounds i8, ptr %p0, i64 %160
  %162 = load i8, ptr %161, align 1, !tbaa !8694
  %163 = insertelement <4 x i8> undef, i8 %162, i64 0
  %164 = shufflevector <4 x i8> %163, <4 x i8> undef, <4 x i32> zeroinitializer
  %165 = sext <4 x i8> %164 to <4 x i16>
  %166 = mul nsw <4 x i16> %165, %96
  %167 = add <4 x i16> %166, %71
  %168 = add nsw i64 %91, 36
  %169 = getelementptr inbounds i8, ptr %p0, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !8694
  %171 = insertelement <4 x i8> undef, i8 %170, i64 0
  %172 = shufflevector <4 x i8> %171, <4 x i8> undef, <4 x i32> zeroinitializer
  %173 = sext <4 x i8> %172 to <4 x i16>
  %174 = mul nsw <4 x i16> %173, %96
  %175 = add <4 x i16> %174, %72
  %176 = add nsw i64 %91, 40
  %177 = getelementptr inbounds i8, ptr %p0, i64 %176
  %178 = load i8, ptr %177, align 1, !tbaa !8694
  %179 = insertelement <4 x i8> undef, i8 %178, i64 0
  %180 = shufflevector <4 x i8> %179, <4 x i8> undef, <4 x i32> zeroinitializer
  %181 = sext <4 x i8> %180 to <4 x i16>
  %182 = mul nsw <4 x i16> %181, %96
  %183 = add <4 x i16> %182, %73
  %184 = add nsw i64 %91, 44
  %185 = getelementptr inbounds i8, ptr %p0, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !8694
  %187 = insertelement <4 x i8> undef, i8 %186, i64 0
  %188 = shufflevector <4 x i8> %187, <4 x i8> undef, <4 x i32> zeroinitializer
  %189 = sext <4 x i8> %188 to <4 x i16>
  %190 = mul nsw <4 x i16> %189, %96
  %191 = add <4 x i16> %190, %74
  %192 = add nsw i64 %91, 48
  %193 = getelementptr inbounds i8, ptr %p0, i64 %192
  %194 = load i8, ptr %193, align 1, !tbaa !8694
  %195 = insertelement <4 x i8> undef, i8 %194, i64 0
  %196 = shufflevector <4 x i8> %195, <4 x i8> undef, <4 x i32> zeroinitializer
  %197 = sext <4 x i8> %196 to <4 x i16>
  %198 = mul nsw <4 x i16> %197, %96
  %199 = add <4 x i16> %198, %75
  %200 = add nsw i64 %91, 52
  %201 = getelementptr inbounds i8, ptr %p0, i64 %200
  %202 = load i8, ptr %201, align 1, !tbaa !8694
  %203 = insertelement <4 x i8> undef, i8 %202, i64 0
  %204 = shufflevector <4 x i8> %203, <4 x i8> undef, <4 x i32> zeroinitializer
  %205 = sext <4 x i8> %204 to <4 x i16>
  %206 = mul nsw <4 x i16> %205, %96
  %207 = add <4 x i16> %206, %76
  %208 = add nsw i64 %91, 56
  %209 = getelementptr inbounds i8, ptr %p0, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !8694
  %211 = insertelement <4 x i8> undef, i8 %210, i64 0
  %212 = shufflevector <4 x i8> %211, <4 x i8> undef, <4 x i32> zeroinitializer
  %213 = sext <4 x i8> %212 to <4 x i16>
  %214 = mul nsw <4 x i16> %213, %96
  %215 = add <4 x i16> %214, %77
  %216 = add nsw i64 %91, 60
  %217 = getelementptr inbounds i8, ptr %p0, i64 %216
  %218 = load i8, ptr %217, align 1, !tbaa !8694
  %219 = insertelement <4 x i8> undef, i8 %218, i64 0
  %220 = shufflevector <4 x i8> %219, <4 x i8> undef, <4 x i32> zeroinitializer
  %221 = sext <4 x i8> %220 to <4 x i16>
  %222 = mul nsw <4 x i16> %221, %96
  %223 = add <4 x i16> %222, %78
  %224 = add nsw i64 %91, 64
  %225 = getelementptr inbounds i8, ptr %p0, i64 %224
  %226 = load i8, ptr %225, align 1, !tbaa !8694
  %227 = insertelement <4 x i8> undef, i8 %226, i64 0
  %228 = shufflevector <4 x i8> %227, <4 x i8> undef, <4 x i32> zeroinitializer
  %229 = sext <4 x i8> %228 to <4 x i16>
  %230 = mul nsw <4 x i16> %229, %96
  %231 = add <4 x i16> %230, %79
  %232 = add nsw i64 %91, 68
  %233 = getelementptr inbounds i8, ptr %p0, i64 %232
  %234 = load i8, ptr %233, align 1, !tbaa !8694
  %235 = insertelement <4 x i8> undef, i8 %234, i64 0
  %236 = shufflevector <4 x i8> %235, <4 x i8> undef, <4 x i32> zeroinitializer
  %237 = sext <4 x i8> %236 to <4 x i16>
  %238 = mul nsw <4 x i16> %237, %96
  %239 = add <4 x i16> %238, %80
  %240 = add nsw i64 %91, 72
  %241 = getelementptr inbounds i8, ptr %p0, i64 %240
  %242 = load i8, ptr %241, align 1, !tbaa !8694
  %243 = insertelement <4 x i8> undef, i8 %242, i64 0
  %244 = shufflevector <4 x i8> %243, <4 x i8> undef, <4 x i32> zeroinitializer
  %245 = sext <4 x i8> %244 to <4 x i16>
  %246 = mul nsw <4 x i16> %245, %96
  %247 = add <4 x i16> %246, %81
  %248 = add nsw i64 %91, 76
  %249 = getelementptr inbounds i8, ptr %p0, i64 %248
  %250 = load i8, ptr %249, align 1, !tbaa !8694
  %251 = insertelement <4 x i8> undef, i8 %250, i64 0
  %252 = shufflevector <4 x i8> %251, <4 x i8> undef, <4 x i32> zeroinitializer
  %253 = sext <4 x i8> %252 to <4 x i16>
  %254 = mul nsw <4 x i16> %253, %96
  %255 = add <4 x i16> %254, %82
  %256 = add nsw i64 %91, 80
  %257 = getelementptr inbounds i8, ptr %p0, i64 %256
  %258 = load i8, ptr %257, align 1, !tbaa !8694
  %259 = insertelement <4 x i8> undef, i8 %258, i64 0
  %260 = shufflevector <4 x i8> %259, <4 x i8> undef, <4 x i32> zeroinitializer
  %261 = sext <4 x i8> %260 to <4 x i16>
  %262 = mul nsw <4 x i16> %261, %96
  %263 = add <4 x i16> %262, %83
  %264 = add nsw i64 %91, 84
  %265 = getelementptr inbounds i8, ptr %p0, i64 %264
  %266 = load i8, ptr %265, align 1, !tbaa !8694
  %267 = insertelement <4 x i8> undef, i8 %266, i64 0
  %268 = shufflevector <4 x i8> %267, <4 x i8> undef, <4 x i32> zeroinitializer
  %269 = sext <4 x i8> %268 to <4 x i16>
  %270 = mul nsw <4 x i16> %269, %96
  %271 = add <4 x i16> %270, %84
  %272 = add nsw i64 %91, 88
  %273 = getelementptr inbounds i8, ptr %p0, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !8694
  %275 = insertelement <4 x i8> undef, i8 %274, i64 0
  %276 = shufflevector <4 x i8> %275, <4 x i8> undef, <4 x i32> zeroinitializer
  %277 = sext <4 x i8> %276 to <4 x i16>
  %278 = mul nsw <4 x i16> %277, %96
  %279 = add <4 x i16> %278, %85
  %280 = add nsw i64 %91, 92
  %281 = getelementptr inbounds i8, ptr %p0, i64 %280
  %282 = load i8, ptr %281, align 1, !tbaa !8694
  %283 = insertelement <4 x i8> undef, i8 %282, i64 0
  %284 = shufflevector <4 x i8> %283, <4 x i8> undef, <4 x i32> zeroinitializer
  %285 = sext <4 x i8> %284 to <4 x i16>
  %286 = mul nsw <4 x i16> %285, %96
  %287 = add <4 x i16> %286, %86
  %288 = add nsw i64 %91, 96
  %289 = getelementptr inbounds i8, ptr %p0, i64 %288
  %290 = load i8, ptr %289, align 1, !tbaa !8694
  %291 = insertelement <4 x i8> undef, i8 %290, i64 0
  %292 = shufflevector <4 x i8> %291, <4 x i8> undef, <4 x i32> zeroinitializer
  %293 = sext <4 x i8> %292 to <4 x i16>
  %294 = mul nsw <4 x i16> %293, %96
  %295 = add <4 x i16> %294, %87
  %296 = add nsw i64 %91, 100
  %297 = getelementptr inbounds i8, ptr %p0, i64 %296
  %298 = load i8, ptr %297, align 1, !tbaa !8694
  %299 = insertelement <4 x i8> undef, i8 %298, i64 0
  %300 = shufflevector <4 x i8> %299, <4 x i8> undef, <4 x i32> zeroinitializer
  %301 = sext <4 x i8> %300 to <4 x i16>
  %302 = mul nsw <4 x i16> %301, %96
  %303 = add <4 x i16> %302, %88
  %304 = add nsw i64 %91, 104
  %305 = getelementptr inbounds i8, ptr %p0, i64 %304
  %306 = load i8, ptr %305, align 1, !tbaa !8694
  %307 = insertelement <4 x i8> undef, i8 %306, i64 0
  %308 = shufflevector <4 x i8> %307, <4 x i8> undef, <4 x i32> zeroinitializer
  %309 = sext <4 x i8> %308 to <4 x i16>
  %310 = mul nsw <4 x i16> %309, %96
  %311 = add <4 x i16> %310, %89
  %312 = add nsw i64 %91, 108
  %313 = getelementptr inbounds i8, ptr %p0, i64 %312
  %314 = load i8, ptr %313, align 1, !tbaa !8694
  %315 = insertelement <4 x i8> undef, i8 %314, i64 0
  %316 = shufflevector <4 x i8> %315, <4 x i8> undef, <4 x i32> zeroinitializer
  %317 = sext <4 x i8> %316 to <4 x i16>
  %318 = mul nsw <4 x i16> %317, %96
  %319 = add <4 x i16> %318, %90
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !59

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next175 = add nuw nsw i64 %indvars.iv174, 1
  %exitcond177.not = icmp eq i64 %indvars.iv.next175, 128
  br i1 %exitcond177.not, label %for_begin_ax3.inner.preheader, label %for_begin_ic.inner.preheader, !prof !59

for_body_ax3.inner:                               ; preds = %for_body_ax3.inner, %for_begin_ax3.inner.preheader
  %indvars.iv178 = phi i64 [ 0, %for_begin_ax3.inner.preheader ], [ %indvars.iv.next179.1, %for_body_ax3.inner ]
  %320 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv178
  %321 = load <4 x i16>, ptr %320, align 16, !tbaa !8696
  %322 = add <4 x i16> %47, %321
  %323 = ashr <4 x i16> %322, %44
  %324 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %323, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %325 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %324, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %326 = trunc <4 x i16> %325 to <4 x i8>
  %327 = shl nuw nsw i64 %indvars.iv178, 2
  %328 = add nsw i64 %327, %58
  %329 = getelementptr inbounds i8, ptr %T_cast, i64 %328
  store <4 x i8> %326, ptr %329, align 4, !tbaa !8697
  %indvars.iv.next179 = or i64 %indvars.iv178, 1
  %330 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv.next179
  %331 = load <4 x i16>, ptr %330, align 8, !tbaa !8696
  %332 = add <4 x i16> %47, %331
  %333 = ashr <4 x i16> %332, %44
  %334 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %333, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %335 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %334, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %336 = trunc <4 x i16> %335 to <4 x i8>
  %337 = shl nuw nsw i64 %indvars.iv.next179, 2
  %338 = add nsw i64 %337, %58
  %339 = getelementptr inbounds i8, ptr %T_cast, i64 %338
  store <4 x i8> %336, ptr %339, align 4, !tbaa !8697
  %indvars.iv.next179.1 = add nuw nsw i64 %indvars.iv178, 2
  %exitcond181.not.1 = icmp eq i64 %indvars.iv.next179.1, 28
  br i1 %exitcond181.not.1, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !7452

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %indvars.iv.next183 = add nsw i64 %indvars.iv182, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next183 to i32
  %exitcond184.not = icmp eq i32 %50, %lftr.wideiv
  br i1 %exitcond184.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_right_shift_clip_cast_9_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.47, align 8
  %7 = alloca %closure_loop_parallel_i0.i1.fused.i2.fused.46, align 8
  %8 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pad = tail call ptr %8(i32 1, i32 %0, i64 115200, i32 0, i32 8)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pad, i64 64) ]
  %9 = icmp eq ptr %data_pad, null
  br i1 %9, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end2, %call_end, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %12, %if_end ], [ %19, %call_end ], [ %., %call_end2 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %data_pad, ptr %7, align 8
  %10 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.46, ptr %7, i64 0, i32 1
  store ptr %1, ptr %10, align 8
  %11 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %12 = call i32 %11(ptr nonnull @__tvm_parallel_lambda.2169, ptr nonnull %7, i32 0)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %call_end, label %common.ret, !prof !18

call_end:                                         ; preds = %if_end
  store ptr %data_pad, ptr %6, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.47, ptr %6, i64 0, i32 1
  store ptr %2, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.47, ptr %6, i64 0, i32 2
  store ptr %3, ptr %15, align 8
  %16 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.47, ptr %6, i64 0, i32 3
  store ptr %4, ptr %16, align 8
  %17 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.47, ptr %6, i64 0, i32 4
  store ptr %5, ptr %17, align 8
  %18 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %19 = call i32 %18(ptr nonnull @__tvm_parallel_lambda.2170, ptr nonnull %6, i32 0)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %call_end2, label %common.ret, !prof !18

call_end2:                                        ; preds = %call_end
  %21 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %22 = call i32 %21(i32 1, i32 %0, ptr nonnull %data_pad)
  %.not = icmp ne i32 %22, 0
  %. = sext i1 %.not to i32
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.2169(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.46, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 959
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 960)
  %9 = mul nsw i32 %5, %task_id
  %.fr1 = freeze i32 %9
  %10 = tail call i32 @llvm.smin.i32(i32 %.fr1, i32 960)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_i3.preheader.preheader, label %for_end_i0.i1.fused.i2.fused, !prof !18

for_begin_i3.preheader.preheader:                 ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %.fr1, i32 960)
  %smin = sext i32 %12 to i64
  %13 = sub i32 %8, %10
  br label %for_begin_i3.preheader

for_begin_i3.preheader:                           ; preds = %for_begin_i3.preheader.preheader, %for_end_i3
  %indvars.iv9 = phi i64 [ %smin, %for_begin_i3.preheader.preheader ], [ %indvars.iv.next10, %for_end_i3 ]
  %indvar = phi i32 [ 0, %for_begin_i3.preheader.preheader ], [ %indvar.next, %for_end_i3 ]
  %14 = trunc i64 %indvars.iv9 to i32
  %cse_var_2 = srem i32 %14, 30
  %15 = add nsw i32 %cse_var_2, -1
  %16 = icmp ult i32 %15, 28
  %17 = mul nsw i64 %indvars.iv9, 120
  %18 = mul nuw nsw i32 %cse_var_2, 112
  %19 = sdiv i32 %14, 30
  %20 = mul nsw i32 %19, 3136
  %21 = add nsw i32 %18, -116
  %22 = add i32 %21, %20
  br i1 %16, label %for_body_i3.us, label %for_body_i3.preheader

for_body_i3.preheader:                            ; preds = %for_begin_i3.preheader
  %23 = add i32 %10, %indvar
  %24 = mul i32 %23, 120
  %25 = sext i32 %24 to i64
  %scevgep = getelementptr i8, ptr %data_pad, i64 %25
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(120) %scevgep, i8 0, i64 120, i1 false), !tbaa !8699
  br label %for_end_i3

for_body_i3.us:                                   ; preds = %for_begin_i3.preheader, %if_end.us.1
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %if_end.us.1 ], [ 0, %for_begin_i3.preheader ]
  %26 = shl nuw nsw i64 %indvars.iv, 2
  %27 = trunc i64 %indvars.iv to i32
  %cond = icmp eq i32 %27, 0
  br i1 %cond, label %if_end.us, label %if_then.us

if_then.us:                                       ; preds = %for_body_i3.us
  %28 = trunc i64 %26 to i32
  %29 = add i32 %22, %28
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, ptr %p0, i64 %30
  %32 = load <4 x i8>, ptr %31, align 4, !tbaa !8701
  br label %if_end.us

if_end.us:                                        ; preds = %for_body_i3.us, %if_then.us
  %33 = phi <4 x i8> [ %32, %if_then.us ], [ zeroinitializer, %for_body_i3.us ]
  %34 = add nsw i64 %26, %17
  %35 = getelementptr inbounds i8, ptr %data_pad, i64 %34
  store <4 x i8> %33, ptr %35, align 4, !tbaa !8699
  %indvars.iv.next = or i64 %indvars.iv, 1
  %36 = shl nuw nsw i64 %indvars.iv.next, 2
  %37 = trunc i64 %indvars.iv.next to i32
  %cond12 = icmp eq i32 %37, 29
  br i1 %cond12, label %if_end.us.1, label %if_then.us.1

if_then.us.1:                                     ; preds = %if_end.us
  %38 = trunc i64 %36 to i32
  %39 = add i32 %22, %38
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, ptr %p0, i64 %40
  %42 = load <4 x i8>, ptr %41, align 4, !tbaa !8701
  br label %if_end.us.1

if_end.us.1:                                      ; preds = %if_end.us, %if_then.us.1
  %43 = phi <4 x i8> [ %42, %if_then.us.1 ], [ zeroinitializer, %if_end.us ]
  %44 = add nsw i64 %36, %17
  %45 = getelementptr inbounds i8, ptr %data_pad, i64 %44
  store <4 x i8> %43, ptr %45, align 4, !tbaa !8699
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 30
  br i1 %exitcond.not.1, label %for_end_i3, label %for_body_i3.us, !prof !7452

for_end_i0.i1.fused.i2.fused:                     ; preds = %for_end_i3, %parallel_closure_entry
  ret i32 0

for_end_i3:                                       ; preds = %if_end.us.1, %for_body_i3.preheader
  %indvars.iv.next10 = add nsw i64 %indvars.iv9, 1
  %indvar.next = add nuw i32 %indvar, 1
  %exitcond11.not = icmp eq i32 %indvar.next, %13
  br i1 %exitcond11.not, label %for_end_i0.i1.fused.i2.fused, label %for_begin_i3.preheader, !prof !59
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.2170(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %conv2d_NCHWc.global1 = alloca [28 x <4 x i16>], align 16
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.47, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.47, ptr %1, i64 0, i32 2
  %T_cast = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %4, align 4
  %5 = add nsw i32 %num_task, 895
  %6 = sdiv i32 %5, %num_task
  %7 = add nsw i32 %task_id, 1
  %8 = mul nsw i32 %6, %7
  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 896)
  %10 = mul i32 %6, %task_id
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %12 = icmp slt i32 %11, %9
  br i1 %12, label %for_body_ax0.ax1.fused.ax2.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_body_ax0.ax1.fused.ax2.fused.lr.ph:           ; preds = %parallel_closure_entry
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.47, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.47, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %14, align 8
  %15 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 1
  %16 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 2
  %17 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 3
  %18 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 4
  %19 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 5
  %20 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 6
  %21 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 7
  %22 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 8
  %23 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 9
  %24 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 10
  %25 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 11
  %26 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 12
  %27 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 13
  %28 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 14
  %29 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 15
  %30 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 16
  %31 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 17
  %32 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 18
  %33 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 19
  %34 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 20
  %35 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 21
  %36 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 22
  %37 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 23
  %38 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 24
  %39 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 25
  %40 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 26
  %41 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 27
  %42 = load i16, ptr %p3, align 64, !tbaa !8703
  %43 = insertelement <4 x i16> undef, i16 %42, i64 0
  %44 = shufflevector <4 x i16> %43, <4 x i16> undef, <4 x i32> zeroinitializer
  %45 = load i16, ptr %p2, align 64, !tbaa !8715
  %46 = insertelement <4 x i16> undef, i16 %45, i64 0
  %47 = shufflevector <4 x i16> %46, <4 x i16> undef, <4 x i32> zeroinitializer
  %48 = tail call i32 @llvm.smin.i32(i32 %10, i32 896)
  %smin = sext i32 %48 to i64
  %49 = add i32 %9, %48
  %50 = sub i32 %49, %11
  br label %for_body_ax0.ax1.fused.ax2.fused

for_body_ax0.ax1.fused.ax2.fused:                 ; preds = %for_body_ax0.ax1.fused.ax2.fused.lr.ph, %for_end_ax3.inner
  %indvars.iv360 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.fused.lr.ph ], [ %indvars.iv.next361, %for_end_ax3.inner ]
  %51 = trunc i64 %indvars.iv360 to i32
  %52 = srem i32 %51, 28
  %53 = sdiv i32 %51, 28
  %54 = mul nsw i32 %53, 4608
  %55 = sext i32 %54 to i64
  br label %for_begin_kh.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3.inner, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_end_kh
  store <4 x i16> %108, ptr %conv2d_NCHWc.global1, align 16, !tbaa !8727
  store <4 x i16> %116, ptr %15, align 8, !tbaa !8737
  store <4 x i16> %124, ptr %16, align 16, !tbaa !8739
  store <4 x i16> %132, ptr %17, align 8, !tbaa !8742
  store <4 x i16> %140, ptr %18, align 16, !tbaa !8744
  store <4 x i16> %148, ptr %19, align 8, !tbaa !8748
  store <4 x i16> %156, ptr %20, align 16, !tbaa !8750
  store <4 x i16> %164, ptr %21, align 8, !tbaa !8753
  store <4 x i16> %172, ptr %22, align 16, !tbaa !8755
  store <4 x i16> %180, ptr %23, align 8, !tbaa !8760
  store <4 x i16> %188, ptr %24, align 16, !tbaa !8762
  store <4 x i16> %196, ptr %25, align 8, !tbaa !8765
  store <4 x i16> %204, ptr %26, align 16, !tbaa !8767
  store <4 x i16> %212, ptr %27, align 8, !tbaa !8771
  store <4 x i16> %220, ptr %28, align 16, !tbaa !8773
  store <4 x i16> %228, ptr %29, align 8, !tbaa !8776
  store <4 x i16> %236, ptr %30, align 16, !tbaa !8778
  store <4 x i16> %244, ptr %31, align 8, !tbaa !8784
  store <4 x i16> %252, ptr %32, align 16, !tbaa !8786
  store <4 x i16> %260, ptr %33, align 8, !tbaa !8789
  store <4 x i16> %268, ptr %34, align 16, !tbaa !8791
  store <4 x i16> %276, ptr %35, align 8, !tbaa !8795
  store <4 x i16> %284, ptr %36, align 16, !tbaa !8797
  store <4 x i16> %292, ptr %37, align 8, !tbaa !8800
  store <4 x i16> %300, ptr %38, align 16, !tbaa !8802
  store <4 x i16> %308, ptr %39, align 8, !tbaa !8807
  store <4 x i16> %316, ptr %40, align 16, !tbaa !8809
  store <4 x i16> %324, ptr %41, align 8, !tbaa !8812
  %56 = mul nsw i64 %indvars.iv360, 112
  br label %for_body_ax3.inner

for_begin_kh.preheader:                           ; preds = %for_body_ax0.ax1.fused.ax2.fused, %for_end_kh
  %indvars.iv352 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.fused ], [ %indvars.iv.next353, %for_end_kh ]
  %.lcssa57.lcssa140.lcssa224305 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %108, %for_end_kh ]
  %.lcssa259.lcssa142.lcssa226304 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %116, %for_end_kh ]
  %.lcssa460.lcssa144.lcssa228303 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %124, %for_end_kh ]
  %.lcssa662.lcssa145.lcssa230302 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %132, %for_end_kh ]
  %.lcssa864.lcssa147.lcssa231301 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %140, %for_end_kh ]
  %.lcssa1066.lcssa149.lcssa233300 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %148, %for_end_kh ]
  %.lcssa1268.lcssa151.lcssa235299 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %156, %for_end_kh ]
  %.lcssa1470.lcssa153.lcssa237298 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %164, %for_end_kh ]
  %.lcssa1672.lcssa155.lcssa239297 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %172, %for_end_kh ]
  %.lcssa1874.lcssa157.lcssa241296 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %180, %for_end_kh ]
  %.lcssa2076.lcssa159.lcssa243295 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %188, %for_end_kh ]
  %.lcssa2278.lcssa161.lcssa245294 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %196, %for_end_kh ]
  %.lcssa2480.lcssa163.lcssa247293 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %204, %for_end_kh ]
  %.lcssa2682.lcssa165.lcssa249292 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %212, %for_end_kh ]
  %.lcssa2884.lcssa167.lcssa251291 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %220, %for_end_kh ]
  %.lcssa3086.lcssa169.lcssa253290 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %228, %for_end_kh ]
  %.lcssa3288.lcssa171.lcssa255289 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %236, %for_end_kh ]
  %.lcssa3490.lcssa173.lcssa257288 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %244, %for_end_kh ]
  %.lcssa3692.lcssa175.lcssa259287 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %252, %for_end_kh ]
  %.lcssa3894.lcssa177.lcssa261286 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %260, %for_end_kh ]
  %.lcssa4096.lcssa179.lcssa263285 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %268, %for_end_kh ]
  %.lcssa4298.lcssa181.lcssa265284 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %276, %for_end_kh ]
  %.lcssa44100.lcssa183.lcssa267283 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %284, %for_end_kh ]
  %.lcssa46102.lcssa185.lcssa269282 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %292, %for_end_kh ]
  %.lcssa48104.lcssa187.lcssa271281 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %300, %for_end_kh ]
  %.lcssa50106.lcssa189.lcssa273280 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %308, %for_end_kh ]
  %.lcssa52108.lcssa191.lcssa275279 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %316, %for_end_kh ]
  %.lcssa54110.lcssa193.lcssa277278 = phi <4 x i16> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %324, %for_end_kh ]
  %57 = mul nuw nsw i64 %indvars.iv352, 3600
  %58 = mul nuw nsw i64 %indvars.iv352, 144
  %59 = add nsw i64 %58, %55
  br label %for_begin_kw.preheader

for_begin_kw.preheader:                           ; preds = %for_begin_kh.preheader, %for_end_kw
  %indvars.iv347 = phi i64 [ 0, %for_begin_kh.preheader ], [ %indvars.iv.next348, %for_end_kw ]
  %.lcssa57.lcssa140221 = phi <4 x i16> [ %.lcssa57.lcssa140.lcssa224305, %for_begin_kh.preheader ], [ %108, %for_end_kw ]
  %.lcssa259.lcssa142220 = phi <4 x i16> [ %.lcssa259.lcssa142.lcssa226304, %for_begin_kh.preheader ], [ %116, %for_end_kw ]
  %.lcssa460.lcssa144219 = phi <4 x i16> [ %.lcssa460.lcssa144.lcssa228303, %for_begin_kh.preheader ], [ %124, %for_end_kw ]
  %.lcssa662.lcssa145218 = phi <4 x i16> [ %.lcssa662.lcssa145.lcssa230302, %for_begin_kh.preheader ], [ %132, %for_end_kw ]
  %.lcssa864.lcssa147217 = phi <4 x i16> [ %.lcssa864.lcssa147.lcssa231301, %for_begin_kh.preheader ], [ %140, %for_end_kw ]
  %.lcssa1066.lcssa149216 = phi <4 x i16> [ %.lcssa1066.lcssa149.lcssa233300, %for_begin_kh.preheader ], [ %148, %for_end_kw ]
  %.lcssa1268.lcssa151215 = phi <4 x i16> [ %.lcssa1268.lcssa151.lcssa235299, %for_begin_kh.preheader ], [ %156, %for_end_kw ]
  %.lcssa1470.lcssa153214 = phi <4 x i16> [ %.lcssa1470.lcssa153.lcssa237298, %for_begin_kh.preheader ], [ %164, %for_end_kw ]
  %.lcssa1672.lcssa155213 = phi <4 x i16> [ %.lcssa1672.lcssa155.lcssa239297, %for_begin_kh.preheader ], [ %172, %for_end_kw ]
  %.lcssa1874.lcssa157212 = phi <4 x i16> [ %.lcssa1874.lcssa157.lcssa241296, %for_begin_kh.preheader ], [ %180, %for_end_kw ]
  %.lcssa2076.lcssa159211 = phi <4 x i16> [ %.lcssa2076.lcssa159.lcssa243295, %for_begin_kh.preheader ], [ %188, %for_end_kw ]
  %.lcssa2278.lcssa161210 = phi <4 x i16> [ %.lcssa2278.lcssa161.lcssa245294, %for_begin_kh.preheader ], [ %196, %for_end_kw ]
  %.lcssa2480.lcssa163209 = phi <4 x i16> [ %.lcssa2480.lcssa163.lcssa247293, %for_begin_kh.preheader ], [ %204, %for_end_kw ]
  %.lcssa2682.lcssa165208 = phi <4 x i16> [ %.lcssa2682.lcssa165.lcssa249292, %for_begin_kh.preheader ], [ %212, %for_end_kw ]
  %.lcssa2884.lcssa167207 = phi <4 x i16> [ %.lcssa2884.lcssa167.lcssa251291, %for_begin_kh.preheader ], [ %220, %for_end_kw ]
  %.lcssa3086.lcssa169206 = phi <4 x i16> [ %.lcssa3086.lcssa169.lcssa253290, %for_begin_kh.preheader ], [ %228, %for_end_kw ]
  %.lcssa3288.lcssa171205 = phi <4 x i16> [ %.lcssa3288.lcssa171.lcssa255289, %for_begin_kh.preheader ], [ %236, %for_end_kw ]
  %.lcssa3490.lcssa173204 = phi <4 x i16> [ %.lcssa3490.lcssa173.lcssa257288, %for_begin_kh.preheader ], [ %244, %for_end_kw ]
  %.lcssa3692.lcssa175203 = phi <4 x i16> [ %.lcssa3692.lcssa175.lcssa259287, %for_begin_kh.preheader ], [ %252, %for_end_kw ]
  %.lcssa3894.lcssa177202 = phi <4 x i16> [ %.lcssa3894.lcssa177.lcssa261286, %for_begin_kh.preheader ], [ %260, %for_end_kw ]
  %.lcssa4096.lcssa179201 = phi <4 x i16> [ %.lcssa4096.lcssa179.lcssa263285, %for_begin_kh.preheader ], [ %268, %for_end_kw ]
  %.lcssa4298.lcssa181200 = phi <4 x i16> [ %.lcssa4298.lcssa181.lcssa265284, %for_begin_kh.preheader ], [ %276, %for_end_kw ]
  %.lcssa44100.lcssa183199 = phi <4 x i16> [ %.lcssa44100.lcssa183.lcssa267283, %for_begin_kh.preheader ], [ %284, %for_end_kw ]
  %.lcssa46102.lcssa185198 = phi <4 x i16> [ %.lcssa46102.lcssa185.lcssa269282, %for_begin_kh.preheader ], [ %292, %for_end_kw ]
  %.lcssa48104.lcssa187197 = phi <4 x i16> [ %.lcssa48104.lcssa187.lcssa271281, %for_begin_kh.preheader ], [ %300, %for_end_kw ]
  %.lcssa50106.lcssa189196 = phi <4 x i16> [ %.lcssa50106.lcssa189.lcssa273280, %for_begin_kh.preheader ], [ %308, %for_end_kw ]
  %.lcssa52108.lcssa191195 = phi <4 x i16> [ %.lcssa52108.lcssa191.lcssa275279, %for_begin_kh.preheader ], [ %316, %for_end_kw ]
  %.lcssa54110.lcssa193194 = phi <4 x i16> [ %.lcssa54110.lcssa193.lcssa277278, %for_begin_kh.preheader ], [ %324, %for_end_kw ]
  %indvars350 = trunc i64 %indvars.iv347 to i32
  %reass.add = add nsw i32 %52, %indvars350
  %reass.mul = mul i32 %reass.add, 120
  %60 = sext i32 %reass.mul to i64
  %61 = add nsw i64 %57, %60
  %62 = mul nuw nsw i64 %indvars.iv347, 48
  %63 = add nsw i64 %59, %62
  br label %for_begin_ic.inner.preheader

for_end_kh:                                       ; preds = %for_end_kw
  %indvars.iv.next353 = add nuw nsw i64 %indvars.iv352, 1
  %exitcond355.not = icmp eq i64 %indvars.iv.next353, 32
  br i1 %exitcond355.not, label %for_begin_ax3.inner.preheader, label %for_begin_kh.preheader, !prof !59

for_begin_ic.inner.preheader:                     ; preds = %for_begin_kw.preheader, %for_end_ic.inner
  %indvars.iv343 = phi i64 [ 0, %for_begin_kw.preheader ], [ %indvars.iv.next344, %for_end_ic.inner ]
  %.lcssa57138 = phi <4 x i16> [ %.lcssa57.lcssa140221, %for_begin_kw.preheader ], [ %108, %for_end_ic.inner ]
  %.lcssa259137 = phi <4 x i16> [ %.lcssa259.lcssa142220, %for_begin_kw.preheader ], [ %116, %for_end_ic.inner ]
  %.lcssa460136 = phi <4 x i16> [ %.lcssa460.lcssa144219, %for_begin_kw.preheader ], [ %124, %for_end_ic.inner ]
  %.lcssa662135 = phi <4 x i16> [ %.lcssa662.lcssa145218, %for_begin_kw.preheader ], [ %132, %for_end_ic.inner ]
  %.lcssa864134 = phi <4 x i16> [ %.lcssa864.lcssa147217, %for_begin_kw.preheader ], [ %140, %for_end_ic.inner ]
  %.lcssa1066133 = phi <4 x i16> [ %.lcssa1066.lcssa149216, %for_begin_kw.preheader ], [ %148, %for_end_ic.inner ]
  %.lcssa1268132 = phi <4 x i16> [ %.lcssa1268.lcssa151215, %for_begin_kw.preheader ], [ %156, %for_end_ic.inner ]
  %.lcssa1470131 = phi <4 x i16> [ %.lcssa1470.lcssa153214, %for_begin_kw.preheader ], [ %164, %for_end_ic.inner ]
  %.lcssa1672130 = phi <4 x i16> [ %.lcssa1672.lcssa155213, %for_begin_kw.preheader ], [ %172, %for_end_ic.inner ]
  %.lcssa1874129 = phi <4 x i16> [ %.lcssa1874.lcssa157212, %for_begin_kw.preheader ], [ %180, %for_end_ic.inner ]
  %.lcssa2076128 = phi <4 x i16> [ %.lcssa2076.lcssa159211, %for_begin_kw.preheader ], [ %188, %for_end_ic.inner ]
  %.lcssa2278127 = phi <4 x i16> [ %.lcssa2278.lcssa161210, %for_begin_kw.preheader ], [ %196, %for_end_ic.inner ]
  %.lcssa2480126 = phi <4 x i16> [ %.lcssa2480.lcssa163209, %for_begin_kw.preheader ], [ %204, %for_end_ic.inner ]
  %.lcssa2682125 = phi <4 x i16> [ %.lcssa2682.lcssa165208, %for_begin_kw.preheader ], [ %212, %for_end_ic.inner ]
  %.lcssa2884124 = phi <4 x i16> [ %.lcssa2884.lcssa167207, %for_begin_kw.preheader ], [ %220, %for_end_ic.inner ]
  %.lcssa3086123 = phi <4 x i16> [ %.lcssa3086.lcssa169206, %for_begin_kw.preheader ], [ %228, %for_end_ic.inner ]
  %.lcssa3288122 = phi <4 x i16> [ %.lcssa3288.lcssa171205, %for_begin_kw.preheader ], [ %236, %for_end_ic.inner ]
  %.lcssa3490121 = phi <4 x i16> [ %.lcssa3490.lcssa173204, %for_begin_kw.preheader ], [ %244, %for_end_ic.inner ]
  %.lcssa3692120 = phi <4 x i16> [ %.lcssa3692.lcssa175203, %for_begin_kw.preheader ], [ %252, %for_end_ic.inner ]
  %.lcssa3894119 = phi <4 x i16> [ %.lcssa3894.lcssa177202, %for_begin_kw.preheader ], [ %260, %for_end_ic.inner ]
  %.lcssa4096118 = phi <4 x i16> [ %.lcssa4096.lcssa179201, %for_begin_kw.preheader ], [ %268, %for_end_ic.inner ]
  %.lcssa4298117 = phi <4 x i16> [ %.lcssa4298.lcssa181200, %for_begin_kw.preheader ], [ %276, %for_end_ic.inner ]
  %.lcssa44100116 = phi <4 x i16> [ %.lcssa44100.lcssa183199, %for_begin_kw.preheader ], [ %284, %for_end_ic.inner ]
  %.lcssa46102115 = phi <4 x i16> [ %.lcssa46102.lcssa185198, %for_begin_kw.preheader ], [ %292, %for_end_ic.inner ]
  %.lcssa48104114 = phi <4 x i16> [ %.lcssa48104.lcssa187197, %for_begin_kw.preheader ], [ %300, %for_end_ic.inner ]
  %.lcssa50106113 = phi <4 x i16> [ %.lcssa50106.lcssa189196, %for_begin_kw.preheader ], [ %308, %for_end_ic.inner ]
  %.lcssa52108112 = phi <4 x i16> [ %.lcssa52108.lcssa191195, %for_begin_kw.preheader ], [ %316, %for_end_ic.inner ]
  %.lcssa54110111 = phi <4 x i16> [ %.lcssa54110.lcssa193194, %for_begin_kw.preheader ], [ %324, %for_end_ic.inner ]
  %64 = shl nsw i64 %indvars.iv343, 2
  %65 = add nsw i64 %61, %64
  %66 = shl nsw i64 %indvars.iv343, 4
  %67 = add nsw i64 %63, %66
  br label %for_body_ic.inner

for_end_kw:                                       ; preds = %for_end_ic.inner
  %indvars.iv.next348 = add nuw nsw i64 %indvars.iv347, 1
  %exitcond351.not = icmp eq i64 %indvars.iv.next348, 3
  br i1 %exitcond351.not, label %for_end_kh, label %for_begin_kw.preheader, !prof !59

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %68 = phi <4 x i16> [ %.lcssa57138, %for_begin_ic.inner.preheader ], [ %108, %for_body_ic.inner ]
  %69 = phi <4 x i16> [ %.lcssa259137, %for_begin_ic.inner.preheader ], [ %116, %for_body_ic.inner ]
  %70 = phi <4 x i16> [ %.lcssa460136, %for_begin_ic.inner.preheader ], [ %124, %for_body_ic.inner ]
  %71 = phi <4 x i16> [ %.lcssa662135, %for_begin_ic.inner.preheader ], [ %132, %for_body_ic.inner ]
  %72 = phi <4 x i16> [ %.lcssa864134, %for_begin_ic.inner.preheader ], [ %140, %for_body_ic.inner ]
  %73 = phi <4 x i16> [ %.lcssa1066133, %for_begin_ic.inner.preheader ], [ %148, %for_body_ic.inner ]
  %74 = phi <4 x i16> [ %.lcssa1268132, %for_begin_ic.inner.preheader ], [ %156, %for_body_ic.inner ]
  %75 = phi <4 x i16> [ %.lcssa1470131, %for_begin_ic.inner.preheader ], [ %164, %for_body_ic.inner ]
  %76 = phi <4 x i16> [ %.lcssa1672130, %for_begin_ic.inner.preheader ], [ %172, %for_body_ic.inner ]
  %77 = phi <4 x i16> [ %.lcssa1874129, %for_begin_ic.inner.preheader ], [ %180, %for_body_ic.inner ]
  %78 = phi <4 x i16> [ %.lcssa2076128, %for_begin_ic.inner.preheader ], [ %188, %for_body_ic.inner ]
  %79 = phi <4 x i16> [ %.lcssa2278127, %for_begin_ic.inner.preheader ], [ %196, %for_body_ic.inner ]
  %80 = phi <4 x i16> [ %.lcssa2480126, %for_begin_ic.inner.preheader ], [ %204, %for_body_ic.inner ]
  %81 = phi <4 x i16> [ %.lcssa2682125, %for_begin_ic.inner.preheader ], [ %212, %for_body_ic.inner ]
  %82 = phi <4 x i16> [ %.lcssa2884124, %for_begin_ic.inner.preheader ], [ %220, %for_body_ic.inner ]
  %83 = phi <4 x i16> [ %.lcssa3086123, %for_begin_ic.inner.preheader ], [ %228, %for_body_ic.inner ]
  %84 = phi <4 x i16> [ %.lcssa3288122, %for_begin_ic.inner.preheader ], [ %236, %for_body_ic.inner ]
  %85 = phi <4 x i16> [ %.lcssa3490121, %for_begin_ic.inner.preheader ], [ %244, %for_body_ic.inner ]
  %86 = phi <4 x i16> [ %.lcssa3692120, %for_begin_ic.inner.preheader ], [ %252, %for_body_ic.inner ]
  %87 = phi <4 x i16> [ %.lcssa3894119, %for_begin_ic.inner.preheader ], [ %260, %for_body_ic.inner ]
  %88 = phi <4 x i16> [ %.lcssa4096118, %for_begin_ic.inner.preheader ], [ %268, %for_body_ic.inner ]
  %89 = phi <4 x i16> [ %.lcssa4298117, %for_begin_ic.inner.preheader ], [ %276, %for_body_ic.inner ]
  %90 = phi <4 x i16> [ %.lcssa44100116, %for_begin_ic.inner.preheader ], [ %284, %for_body_ic.inner ]
  %91 = phi <4 x i16> [ %.lcssa46102115, %for_begin_ic.inner.preheader ], [ %292, %for_body_ic.inner ]
  %92 = phi <4 x i16> [ %.lcssa48104114, %for_begin_ic.inner.preheader ], [ %300, %for_body_ic.inner ]
  %93 = phi <4 x i16> [ %.lcssa50106113, %for_begin_ic.inner.preheader ], [ %308, %for_body_ic.inner ]
  %94 = phi <4 x i16> [ %.lcssa52108112, %for_begin_ic.inner.preheader ], [ %316, %for_body_ic.inner ]
  %95 = phi <4 x i16> [ %.lcssa54110111, %for_begin_ic.inner.preheader ], [ %324, %for_body_ic.inner ]
  %96 = add nsw i64 %65, %indvars.iv
  %97 = shl nuw nsw i64 %indvars.iv, 2
  %98 = add nuw nsw i64 %67, %97
  %99 = getelementptr inbounds i8, ptr %p1, i64 %98
  %100 = load <4 x i8>, ptr %99, align 4, !tbaa !8814
  %101 = sext <4 x i8> %100 to <4 x i16>
  %102 = getelementptr inbounds i8, ptr %data_pad, i64 %96
  %103 = load i8, ptr %102, align 1, !tbaa !8699
  %104 = insertelement <4 x i8> undef, i8 %103, i64 0
  %105 = shufflevector <4 x i8> %104, <4 x i8> undef, <4 x i32> zeroinitializer
  %106 = sext <4 x i8> %105 to <4 x i16>
  %107 = mul nsw <4 x i16> %106, %101
  %108 = add <4 x i16> %107, %68
  %109 = add nsw i64 %96, 4
  %110 = getelementptr inbounds i8, ptr %data_pad, i64 %109
  %111 = load i8, ptr %110, align 1, !tbaa !8699
  %112 = insertelement <4 x i8> undef, i8 %111, i64 0
  %113 = shufflevector <4 x i8> %112, <4 x i8> undef, <4 x i32> zeroinitializer
  %114 = sext <4 x i8> %113 to <4 x i16>
  %115 = mul nsw <4 x i16> %114, %101
  %116 = add <4 x i16> %115, %69
  %117 = add nsw i64 %96, 8
  %118 = getelementptr inbounds i8, ptr %data_pad, i64 %117
  %119 = load i8, ptr %118, align 1, !tbaa !8699
  %120 = insertelement <4 x i8> undef, i8 %119, i64 0
  %121 = shufflevector <4 x i8> %120, <4 x i8> undef, <4 x i32> zeroinitializer
  %122 = sext <4 x i8> %121 to <4 x i16>
  %123 = mul nsw <4 x i16> %122, %101
  %124 = add <4 x i16> %123, %70
  %125 = add nsw i64 %96, 12
  %126 = getelementptr inbounds i8, ptr %data_pad, i64 %125
  %127 = load i8, ptr %126, align 1, !tbaa !8699
  %128 = insertelement <4 x i8> undef, i8 %127, i64 0
  %129 = shufflevector <4 x i8> %128, <4 x i8> undef, <4 x i32> zeroinitializer
  %130 = sext <4 x i8> %129 to <4 x i16>
  %131 = mul nsw <4 x i16> %130, %101
  %132 = add <4 x i16> %131, %71
  %133 = add nsw i64 %96, 16
  %134 = getelementptr inbounds i8, ptr %data_pad, i64 %133
  %135 = load i8, ptr %134, align 1, !tbaa !8699
  %136 = insertelement <4 x i8> undef, i8 %135, i64 0
  %137 = shufflevector <4 x i8> %136, <4 x i8> undef, <4 x i32> zeroinitializer
  %138 = sext <4 x i8> %137 to <4 x i16>
  %139 = mul nsw <4 x i16> %138, %101
  %140 = add <4 x i16> %139, %72
  %141 = add nsw i64 %96, 20
  %142 = getelementptr inbounds i8, ptr %data_pad, i64 %141
  %143 = load i8, ptr %142, align 1, !tbaa !8699
  %144 = insertelement <4 x i8> undef, i8 %143, i64 0
  %145 = shufflevector <4 x i8> %144, <4 x i8> undef, <4 x i32> zeroinitializer
  %146 = sext <4 x i8> %145 to <4 x i16>
  %147 = mul nsw <4 x i16> %146, %101
  %148 = add <4 x i16> %147, %73
  %149 = add nsw i64 %96, 24
  %150 = getelementptr inbounds i8, ptr %data_pad, i64 %149
  %151 = load i8, ptr %150, align 1, !tbaa !8699
  %152 = insertelement <4 x i8> undef, i8 %151, i64 0
  %153 = shufflevector <4 x i8> %152, <4 x i8> undef, <4 x i32> zeroinitializer
  %154 = sext <4 x i8> %153 to <4 x i16>
  %155 = mul nsw <4 x i16> %154, %101
  %156 = add <4 x i16> %155, %74
  %157 = add nsw i64 %96, 28
  %158 = getelementptr inbounds i8, ptr %data_pad, i64 %157
  %159 = load i8, ptr %158, align 1, !tbaa !8699
  %160 = insertelement <4 x i8> undef, i8 %159, i64 0
  %161 = shufflevector <4 x i8> %160, <4 x i8> undef, <4 x i32> zeroinitializer
  %162 = sext <4 x i8> %161 to <4 x i16>
  %163 = mul nsw <4 x i16> %162, %101
  %164 = add <4 x i16> %163, %75
  %165 = add nsw i64 %96, 32
  %166 = getelementptr inbounds i8, ptr %data_pad, i64 %165
  %167 = load i8, ptr %166, align 1, !tbaa !8699
  %168 = insertelement <4 x i8> undef, i8 %167, i64 0
  %169 = shufflevector <4 x i8> %168, <4 x i8> undef, <4 x i32> zeroinitializer
  %170 = sext <4 x i8> %169 to <4 x i16>
  %171 = mul nsw <4 x i16> %170, %101
  %172 = add <4 x i16> %171, %76
  %173 = add nsw i64 %96, 36
  %174 = getelementptr inbounds i8, ptr %data_pad, i64 %173
  %175 = load i8, ptr %174, align 1, !tbaa !8699
  %176 = insertelement <4 x i8> undef, i8 %175, i64 0
  %177 = shufflevector <4 x i8> %176, <4 x i8> undef, <4 x i32> zeroinitializer
  %178 = sext <4 x i8> %177 to <4 x i16>
  %179 = mul nsw <4 x i16> %178, %101
  %180 = add <4 x i16> %179, %77
  %181 = add nsw i64 %96, 40
  %182 = getelementptr inbounds i8, ptr %data_pad, i64 %181
  %183 = load i8, ptr %182, align 1, !tbaa !8699
  %184 = insertelement <4 x i8> undef, i8 %183, i64 0
  %185 = shufflevector <4 x i8> %184, <4 x i8> undef, <4 x i32> zeroinitializer
  %186 = sext <4 x i8> %185 to <4 x i16>
  %187 = mul nsw <4 x i16> %186, %101
  %188 = add <4 x i16> %187, %78
  %189 = add nsw i64 %96, 44
  %190 = getelementptr inbounds i8, ptr %data_pad, i64 %189
  %191 = load i8, ptr %190, align 1, !tbaa !8699
  %192 = insertelement <4 x i8> undef, i8 %191, i64 0
  %193 = shufflevector <4 x i8> %192, <4 x i8> undef, <4 x i32> zeroinitializer
  %194 = sext <4 x i8> %193 to <4 x i16>
  %195 = mul nsw <4 x i16> %194, %101
  %196 = add <4 x i16> %195, %79
  %197 = add nsw i64 %96, 48
  %198 = getelementptr inbounds i8, ptr %data_pad, i64 %197
  %199 = load i8, ptr %198, align 1, !tbaa !8699
  %200 = insertelement <4 x i8> undef, i8 %199, i64 0
  %201 = shufflevector <4 x i8> %200, <4 x i8> undef, <4 x i32> zeroinitializer
  %202 = sext <4 x i8> %201 to <4 x i16>
  %203 = mul nsw <4 x i16> %202, %101
  %204 = add <4 x i16> %203, %80
  %205 = add nsw i64 %96, 52
  %206 = getelementptr inbounds i8, ptr %data_pad, i64 %205
  %207 = load i8, ptr %206, align 1, !tbaa !8699
  %208 = insertelement <4 x i8> undef, i8 %207, i64 0
  %209 = shufflevector <4 x i8> %208, <4 x i8> undef, <4 x i32> zeroinitializer
  %210 = sext <4 x i8> %209 to <4 x i16>
  %211 = mul nsw <4 x i16> %210, %101
  %212 = add <4 x i16> %211, %81
  %213 = add nsw i64 %96, 56
  %214 = getelementptr inbounds i8, ptr %data_pad, i64 %213
  %215 = load i8, ptr %214, align 1, !tbaa !8699
  %216 = insertelement <4 x i8> undef, i8 %215, i64 0
  %217 = shufflevector <4 x i8> %216, <4 x i8> undef, <4 x i32> zeroinitializer
  %218 = sext <4 x i8> %217 to <4 x i16>
  %219 = mul nsw <4 x i16> %218, %101
  %220 = add <4 x i16> %219, %82
  %221 = add nsw i64 %96, 60
  %222 = getelementptr inbounds i8, ptr %data_pad, i64 %221
  %223 = load i8, ptr %222, align 1, !tbaa !8699
  %224 = insertelement <4 x i8> undef, i8 %223, i64 0
  %225 = shufflevector <4 x i8> %224, <4 x i8> undef, <4 x i32> zeroinitializer
  %226 = sext <4 x i8> %225 to <4 x i16>
  %227 = mul nsw <4 x i16> %226, %101
  %228 = add <4 x i16> %227, %83
  %229 = add nsw i64 %96, 64
  %230 = getelementptr inbounds i8, ptr %data_pad, i64 %229
  %231 = load i8, ptr %230, align 1, !tbaa !8699
  %232 = insertelement <4 x i8> undef, i8 %231, i64 0
  %233 = shufflevector <4 x i8> %232, <4 x i8> undef, <4 x i32> zeroinitializer
  %234 = sext <4 x i8> %233 to <4 x i16>
  %235 = mul nsw <4 x i16> %234, %101
  %236 = add <4 x i16> %235, %84
  %237 = add nsw i64 %96, 68
  %238 = getelementptr inbounds i8, ptr %data_pad, i64 %237
  %239 = load i8, ptr %238, align 1, !tbaa !8699
  %240 = insertelement <4 x i8> undef, i8 %239, i64 0
  %241 = shufflevector <4 x i8> %240, <4 x i8> undef, <4 x i32> zeroinitializer
  %242 = sext <4 x i8> %241 to <4 x i16>
  %243 = mul nsw <4 x i16> %242, %101
  %244 = add <4 x i16> %243, %85
  %245 = add nsw i64 %96, 72
  %246 = getelementptr inbounds i8, ptr %data_pad, i64 %245
  %247 = load i8, ptr %246, align 1, !tbaa !8699
  %248 = insertelement <4 x i8> undef, i8 %247, i64 0
  %249 = shufflevector <4 x i8> %248, <4 x i8> undef, <4 x i32> zeroinitializer
  %250 = sext <4 x i8> %249 to <4 x i16>
  %251 = mul nsw <4 x i16> %250, %101
  %252 = add <4 x i16> %251, %86
  %253 = add nsw i64 %96, 76
  %254 = getelementptr inbounds i8, ptr %data_pad, i64 %253
  %255 = load i8, ptr %254, align 1, !tbaa !8699
  %256 = insertelement <4 x i8> undef, i8 %255, i64 0
  %257 = shufflevector <4 x i8> %256, <4 x i8> undef, <4 x i32> zeroinitializer
  %258 = sext <4 x i8> %257 to <4 x i16>
  %259 = mul nsw <4 x i16> %258, %101
  %260 = add <4 x i16> %259, %87
  %261 = add nsw i64 %96, 80
  %262 = getelementptr inbounds i8, ptr %data_pad, i64 %261
  %263 = load i8, ptr %262, align 1, !tbaa !8699
  %264 = insertelement <4 x i8> undef, i8 %263, i64 0
  %265 = shufflevector <4 x i8> %264, <4 x i8> undef, <4 x i32> zeroinitializer
  %266 = sext <4 x i8> %265 to <4 x i16>
  %267 = mul nsw <4 x i16> %266, %101
  %268 = add <4 x i16> %267, %88
  %269 = add nsw i64 %96, 84
  %270 = getelementptr inbounds i8, ptr %data_pad, i64 %269
  %271 = load i8, ptr %270, align 1, !tbaa !8699
  %272 = insertelement <4 x i8> undef, i8 %271, i64 0
  %273 = shufflevector <4 x i8> %272, <4 x i8> undef, <4 x i32> zeroinitializer
  %274 = sext <4 x i8> %273 to <4 x i16>
  %275 = mul nsw <4 x i16> %274, %101
  %276 = add <4 x i16> %275, %89
  %277 = add nsw i64 %96, 88
  %278 = getelementptr inbounds i8, ptr %data_pad, i64 %277
  %279 = load i8, ptr %278, align 1, !tbaa !8699
  %280 = insertelement <4 x i8> undef, i8 %279, i64 0
  %281 = shufflevector <4 x i8> %280, <4 x i8> undef, <4 x i32> zeroinitializer
  %282 = sext <4 x i8> %281 to <4 x i16>
  %283 = mul nsw <4 x i16> %282, %101
  %284 = add <4 x i16> %283, %90
  %285 = add nsw i64 %96, 92
  %286 = getelementptr inbounds i8, ptr %data_pad, i64 %285
  %287 = load i8, ptr %286, align 1, !tbaa !8699
  %288 = insertelement <4 x i8> undef, i8 %287, i64 0
  %289 = shufflevector <4 x i8> %288, <4 x i8> undef, <4 x i32> zeroinitializer
  %290 = sext <4 x i8> %289 to <4 x i16>
  %291 = mul nsw <4 x i16> %290, %101
  %292 = add <4 x i16> %291, %91
  %293 = add nsw i64 %96, 96
  %294 = getelementptr inbounds i8, ptr %data_pad, i64 %293
  %295 = load i8, ptr %294, align 1, !tbaa !8699
  %296 = insertelement <4 x i8> undef, i8 %295, i64 0
  %297 = shufflevector <4 x i8> %296, <4 x i8> undef, <4 x i32> zeroinitializer
  %298 = sext <4 x i8> %297 to <4 x i16>
  %299 = mul nsw <4 x i16> %298, %101
  %300 = add <4 x i16> %299, %92
  %301 = add nsw i64 %96, 100
  %302 = getelementptr inbounds i8, ptr %data_pad, i64 %301
  %303 = load i8, ptr %302, align 1, !tbaa !8699
  %304 = insertelement <4 x i8> undef, i8 %303, i64 0
  %305 = shufflevector <4 x i8> %304, <4 x i8> undef, <4 x i32> zeroinitializer
  %306 = sext <4 x i8> %305 to <4 x i16>
  %307 = mul nsw <4 x i16> %306, %101
  %308 = add <4 x i16> %307, %93
  %309 = add nsw i64 %96, 104
  %310 = getelementptr inbounds i8, ptr %data_pad, i64 %309
  %311 = load i8, ptr %310, align 1, !tbaa !8699
  %312 = insertelement <4 x i8> undef, i8 %311, i64 0
  %313 = shufflevector <4 x i8> %312, <4 x i8> undef, <4 x i32> zeroinitializer
  %314 = sext <4 x i8> %313 to <4 x i16>
  %315 = mul nsw <4 x i16> %314, %101
  %316 = add <4 x i16> %315, %94
  %317 = add nsw i64 %96, 108
  %318 = getelementptr inbounds i8, ptr %data_pad, i64 %317
  %319 = load i8, ptr %318, align 1, !tbaa !8699
  %320 = insertelement <4 x i8> undef, i8 %319, i64 0
  %321 = shufflevector <4 x i8> %320, <4 x i8> undef, <4 x i32> zeroinitializer
  %322 = sext <4 x i8> %321 to <4 x i16>
  %323 = mul nsw <4 x i16> %322, %101
  %324 = add <4 x i16> %323, %95
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !59

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next344 = add nuw nsw i64 %indvars.iv343, 1
  %exitcond346.not = icmp eq i64 %indvars.iv.next344, 3
  br i1 %exitcond346.not, label %for_end_kw, label %for_begin_ic.inner.preheader, !prof !59

for_body_ax3.inner:                               ; preds = %for_body_ax3.inner, %for_begin_ax3.inner.preheader
  %indvars.iv356 = phi i64 [ 0, %for_begin_ax3.inner.preheader ], [ %indvars.iv.next357.1, %for_body_ax3.inner ]
  %325 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv356
  %326 = load <4 x i16>, ptr %325, align 16, !tbaa !8816
  %327 = add <4 x i16> %47, %326
  %328 = ashr <4 x i16> %327, %44
  %329 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %328, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %330 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %329, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %331 = trunc <4 x i16> %330 to <4 x i8>
  %332 = shl nuw nsw i64 %indvars.iv356, 2
  %333 = add nsw i64 %332, %56
  %334 = getelementptr inbounds i8, ptr %T_cast, i64 %333
  store <4 x i8> %331, ptr %334, align 4, !tbaa !8817
  %indvars.iv.next357 = or i64 %indvars.iv356, 1
  %335 = getelementptr inbounds <4 x i16>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv.next357
  %336 = load <4 x i16>, ptr %335, align 8, !tbaa !8816
  %337 = add <4 x i16> %47, %336
  %338 = ashr <4 x i16> %337, %44
  %339 = tail call <4 x i16> @llvm.smin.v4i16(<4 x i16> %338, <4 x i16> <i16 127, i16 127, i16 127, i16 127>)
  %340 = tail call <4 x i16> @llvm.smax.v4i16(<4 x i16> %339, <4 x i16> <i16 -127, i16 -127, i16 -127, i16 -127>)
  %341 = trunc <4 x i16> %340 to <4 x i8>
  %342 = shl nuw nsw i64 %indvars.iv.next357, 2
  %343 = add nsw i64 %342, %56
  %344 = getelementptr inbounds i8, ptr %T_cast, i64 %343
  store <4 x i8> %341, ptr %344, align 4, !tbaa !8817
  %indvars.iv.next357.1 = add nuw nsw i64 %indvars.iv356, 2
  %exitcond359.not.1 = icmp eq i64 %indvars.iv.next357.1, 28
  br i1 %exitcond359.not.1, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !7452

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %indvars.iv.next361 = add nsw i64 %indvars.iv360, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next361 to i32
  %exitcond362.not = icmp eq i32 %50, %lftr.wideiv
  br i1 %exitcond362.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_body_ax0.ax1.fused.ax2.fused, !prof !59
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_dense_pack_add_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3) unnamed_addr #2 {
entry:
  %4 = alloca %closure_loop_parallel_ax1.outer.ax0.outer.fused, align 8
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax1.outer.ax0.outer.fused, ptr %4, i64 0, i32 1
  store ptr %1, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax1.outer.ax0.outer.fused, ptr %4, i64 0, i32 2
  store ptr %2, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax1.outer.ax0.outer.fused, ptr %4, i64 0, i32 3
  store ptr %3, ptr %7, align 8
  %8 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %9 = call i32 %8(ptr nonnull @__tvm_parallel_lambda.2208, ptr nonnull %4, i32 0)
  ret i32 %9
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.2208(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax1.outer.ax0.outer.fused, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax1.outer.ax0.outer.fused, ptr %1, i64 0, i32 2
  %T_add = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax1.outer.ax0.outer.fused, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 124
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 125)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 125)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_body_ax1.outer.ax0.outer.fused.preheader, label %for_end_ax1.outer.ax0.outer.fused, !prof !18

for_body_ax1.outer.ax0.outer.fused.preheader:     ; preds = %parallel_closure_entry
  %14 = tail call i32 @llvm.smin.i32(i32 %11, i32 125)
  %smin = sext i32 %14 to i64
  %15 = add i32 %10, %14
  %16 = sub i32 %15, %12
  br label %for_body_ax1.outer.ax0.outer.fused

for_body_ax1.outer.ax0.outer.fused:               ; preds = %for_body_ax1.outer.ax0.outer.fused.preheader, %for_end_k.outer
  %indvars.iv6 = phi i64 [ %smin, %for_body_ax1.outer.ax0.outer.fused.preheader ], [ %indvars.iv.next7, %for_end_k.outer ]
  %ax1.outer.ax0.outer.fused4 = phi i32 [ %12, %for_body_ax1.outer.ax0.outer.fused.preheader ], [ %43, %for_end_k.outer ]
  %17 = shl nsw i32 %ax1.outer.ax0.outer.fused4, 14
  %18 = sext i32 %17 to i64
  br label %for_body_k.outer

for_end_ax1.outer.ax0.outer.fused:                ; preds = %for_end_k.outer, %parallel_closure_entry
  ret i32 0

for_body_k.outer:                                 ; preds = %for_body_k.outer, %for_body_ax1.outer.ax0.outer.fused
  %indvars.iv = phi i64 [ 0, %for_body_ax1.outer.ax0.outer.fused ], [ %indvars.iv.next.1, %for_body_k.outer ]
  %compute.global.02 = phi <8 x float> [ zeroinitializer, %for_body_ax1.outer.ax0.outer.fused ], [ %36, %for_body_k.outer ]
  %19 = getelementptr inbounds float, ptr %p0, i64 %indvars.iv
  %20 = load float, ptr %19, align 4, !tbaa !8819
  %21 = insertelement <8 x float> undef, float %20, i64 0
  %22 = shufflevector <8 x float> %21, <8 x float> undef, <8 x i32> zeroinitializer
  %23 = shl nuw nsw i64 %indvars.iv, 3
  %24 = add nuw nsw i64 %23, %18
  %25 = getelementptr inbounds float, ptr %p1, i64 %24
  %26 = load <8 x float>, ptr %25, align 32, !tbaa !8821
  %27 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %22, <8 x float> %26, <8 x float> %compute.global.02)
  %indvars.iv.next = or i64 %indvars.iv, 1
  %28 = getelementptr inbounds float, ptr %p0, i64 %indvars.iv.next
  %29 = load float, ptr %28, align 4, !tbaa !8819
  %30 = insertelement <8 x float> undef, float %29, i64 0
  %31 = shufflevector <8 x float> %30, <8 x float> undef, <8 x i32> zeroinitializer
  %32 = shl nuw nsw i64 %indvars.iv.next, 3
  %33 = add nuw nsw i64 %32, %18
  %34 = getelementptr inbounds float, ptr %p1, i64 %33
  %35 = load <8 x float>, ptr %34, align 32, !tbaa !8821
  %36 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %31, <8 x float> %35, <8 x float> %27)
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 2048
  br i1 %exitcond.not.1, label %for_end_k.outer, label %for_body_k.outer, !prof !7452

for_end_k.outer:                                  ; preds = %for_body_k.outer
  %37 = trunc i64 %indvars.iv6 to i32
  %cse_var_1 = shl nsw i32 %37, 3
  %38 = sext i32 %cse_var_1 to i64
  %39 = getelementptr inbounds float, ptr %p2, i64 %38
  %40 = load <8 x float>, ptr %39, align 32, !tbaa !8823
  %41 = fadd <8 x float> %36, %40
  %42 = getelementptr inbounds float, ptr %T_add, i64 %38
  store <8 x float> %41, ptr %42, align 32, !tbaa !8825
  %indvars.iv.next7 = add nsw i64 %indvars.iv6, 1
  %43 = add nsw i32 %ax1.outer.ax0.outer.fused4, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next7 to i32
  %exitcond8.not = icmp eq i32 %16, %lftr.wideiv
  br i1 %exitcond8.not, label %for_end_ax1.outer.ax0.outer.fused, label %for_body_ax1.outer.ax0.outer.fused, !prof !59
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x float> @llvm.fmuladd.v8f32(<8 x float>, <8 x float>, <8 x float>) #5

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_max_pool2d_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.48, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.48, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.2233, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.2233(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %pool_max = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.48, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 111
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 112)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 112)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 112)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv7 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next8, %for_end_ax3 ]
  %15 = mul nsw i64 %indvars.iv7, 1792
  %16 = trunc i64 %indvars.iv7 to i32
  %17 = srem i32 %16, 56
  %18 = trunc i64 %indvars.iv7 to i32
  %19 = mul i32 %18, 7168
  %20 = add i32 %19, -3616
  %21 = icmp sgt i32 %17, 0
  %22 = icmp sgt i32 %17, -1
  br label %for_body_ax3

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_body_ax3:                                     ; preds = %for_begin_ax3.preheader, %if_end.8
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %if_end.8 ]
  %23 = shl nuw nsw i64 %indvars.iv, 5
  %24 = add nsw i64 %23, %15
  %25 = getelementptr inbounds float, ptr %pool_max, i64 %24
  %indvars.iv.tr = trunc i64 %indvars.iv to i32
  %26 = shl i32 %indvars.iv.tr, 6
  %27 = add i32 %20, %26
  %28 = icmp ne i64 %indvars.iv, 0
  %29 = and i1 %28, %21
  br i1 %29, label %if_end.thread, label %if_end

for_end_ax3:                                      ; preds = %if_end.8
  %indvars.iv.next8 = add nsw i64 %indvars.iv7, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next8 to i32
  %exitcond9.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond9.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !59

if_end.thread:                                    ; preds = %for_body_ax3
  %30 = sext i32 %27 to i64
  %31 = getelementptr inbounds float, ptr %p0, i64 %30
  %32 = load <32 x float>, ptr %31, align 64, !tbaa !8827
  %33 = fcmp olt <32 x float> %32, <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>
  %34 = select <32 x i1> %33, <32 x float> <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, <32 x float> %32
  br label %if_then.2

if_end:                                           ; preds = %for_body_ax3
  br i1 %21, label %if_then.2, label %if_end.2

if_then.2:                                        ; preds = %if_end, %if_end.thread
  %35 = phi <32 x float> [ %34, %if_end.thread ], [ <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, %if_end ]
  %36 = add i32 %27, 32
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds float, ptr %p0, i64 %37
  %39 = load <32 x float>, ptr %38, align 64, !tbaa !8827
  %40 = fcmp ogt <32 x float> %35, %39
  %41 = select <32 x i1> %40, <32 x float> %35, <32 x float> %39
  %42 = add i32 %27, 64
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %p0, i64 %43
  %45 = load <32 x float>, ptr %44, align 64, !tbaa !8827
  br label %if_end.2

if_end.2:                                         ; preds = %if_end, %if_then.2
  %46 = phi <32 x float> [ %41, %if_then.2 ], [ <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, %if_end ]
  %47 = phi <32 x float> [ %45, %if_then.2 ], [ <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, %if_end ]
  %48 = fcmp ogt <32 x float> %46, %47
  %49 = select <32 x i1> %48, <32 x float> %46, <32 x float> %47
  %50 = and i1 %28, %22
  br i1 %50, label %if_end.3.thread, label %if_end.3

if_end.3.thread:                                  ; preds = %if_end.2
  %51 = add i32 %27, 3584
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds float, ptr %p0, i64 %52
  %54 = load <32 x float>, ptr %53, align 64, !tbaa !8827
  %55 = fcmp ogt <32 x float> %49, %54
  %56 = select <32 x i1> %55, <32 x float> %49, <32 x float> %54
  br label %if_end.5

if_end.3:                                         ; preds = %if_end.2
  %57 = fcmp ogt <32 x float> %49, <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>
  %58 = select <32 x i1> %57, <32 x float> %49, <32 x float> <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>
  br i1 %22, label %if_end.5, label %if_end.5.thread

if_end.5.thread:                                  ; preds = %if_end.3
  %59 = select <32 x i1> %57, <32 x float> %49, <32 x float> <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>
  br label %if_end.8

if_end.5:                                         ; preds = %if_end.3.thread, %if_end.3
  %60 = phi <32 x float> [ %56, %if_end.3.thread ], [ %58, %if_end.3 ]
  %61 = add i32 %19, %26
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds float, ptr %p0, i64 %62
  %64 = load <32 x float>, ptr %63, align 64, !tbaa !8827
  %65 = fcmp ogt <32 x float> %60, %64
  %66 = select <32 x i1> %65, <32 x float> %60, <32 x float> %64
  %67 = add i32 %27, 3648
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds float, ptr %p0, i64 %68
  %70 = load <32 x float>, ptr %69, align 64, !tbaa !8827
  %71 = fcmp ogt <32 x float> %66, %70
  %72 = select <32 x i1> %71, <32 x float> %66, <32 x float> %70
  br i1 %28, label %if_then.6, label %if_then.8

if_then.6:                                        ; preds = %if_end.5
  %73 = add i32 %27, 7168
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds float, ptr %p0, i64 %74
  %76 = load <32 x float>, ptr %75, align 64, !tbaa !8827
  br label %if_then.8

if_then.8:                                        ; preds = %if_end.5, %if_then.6
  %.sink12 = phi <32 x float> [ %76, %if_then.6 ], [ <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, %if_end.5 ]
  %77 = fcmp ogt <32 x float> %72, %.sink12
  %78 = select <32 x i1> %77, <32 x float> %72, <32 x float> %.sink12
  %79 = add i32 %27, 7200
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds float, ptr %p0, i64 %80
  %82 = load <32 x float>, ptr %81, align 64, !tbaa !8827
  %83 = fcmp ogt <32 x float> %78, %82
  %84 = select <32 x i1> %83, <32 x float> %78, <32 x float> %82
  %85 = add i32 %27, 7232
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds float, ptr %p0, i64 %86
  %88 = load <32 x float>, ptr %87, align 64, !tbaa !8827
  br label %if_end.8

if_end.8:                                         ; preds = %if_end.5.thread, %if_then.8
  %89 = phi <32 x float> [ %84, %if_then.8 ], [ %59, %if_end.5.thread ]
  %90 = phi <32 x float> [ %88, %if_then.8 ], [ <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, %if_end.5.thread ]
  %91 = fcmp ogt <32 x float> %89, %90
  %92 = select <32 x i1> %91, <32 x float> %89, <32 x float> %90
  store <32 x float> %92, ptr %25, align 64, !tbaa !8829
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 56
  br i1 %exitcond.not, label %for_end_ax3, label %for_body_ax3, !prof !59
}

; Function Attrs: nofree nosync nounwind memory(none)
define weak dso_local half @__truncsfhf2(float %a0) local_unnamed_addr #6 {
b0:
  %v0 = bitcast float %a0 to i32
  %v1 = and i32 %v0, 2147483647
  %v2 = add nsw i32 %v1, -947912704
  %v3 = add nsw i32 %v1, -1199570944
  %v4 = icmp ult i32 %v2, %v3
  br i1 %v4, label %b1, label %b5

b1:                                               ; preds = %b0
  %v5 = lshr i32 %v0, 13
  %v6 = and i32 %v5, 65535
  %v7 = add nuw nsw i32 %v6, -114688
  %v8 = and i32 %v0, 8191
  %v9 = icmp ugt i32 %v8, 4096
  br i1 %v9, label %b2, label %b3

b2:                                               ; preds = %b1
  %v10 = add nuw nsw i32 %v6, -114687
  br label %b13

b3:                                               ; preds = %b1
  %v11 = icmp eq i32 %v8, 4096
  br i1 %v11, label %b4, label %b13

b4:                                               ; preds = %b3
  %v12 = and i32 %v7, 65535
  %v13 = and i32 %v5, 1
  %v14 = add nuw nsw i32 %v12, %v13
  br label %b13

b5:                                               ; preds = %b0
  %v15 = icmp ugt i32 %v1, 2139095040
  br i1 %v15, label %b6, label %b7

b6:                                               ; preds = %b5
  %v16 = lshr i32 %v0, 13
  %v17 = and i32 %v16, 511
  %v18 = or i32 %v17, 32256
  br label %b13

b7:                                               ; preds = %b5
  %v19 = icmp ugt i32 %v1, 1199570943
  br i1 %v19, label %b13, label %b8

b8:                                               ; preds = %b7
  %v20 = icmp ult i32 %v1, 754974720
  br i1 %v20, label %b13, label %b9

b9:                                               ; preds = %b8
  %v21 = lshr i32 %v1, 23
  %v22 = sub nsw i32 113, %v21
  %v23 = and i32 %v0, 8388607
  %v24 = or i32 %v23, 8388608
  %v25 = add nsw i32 %v21, -81
  %v26 = shl i32 %v24, %v25
  %v27 = icmp ne i32 %v26, 0
  %v28 = lshr i32 %v24, %v22
  %v29 = zext i1 %v27 to i32
  %v30 = lshr i32 %v28, 13
  %v31 = and i32 %v28, 8191
  %v32 = or i32 %v31, %v29
  %v33 = icmp ugt i32 %v32, 4096
  br i1 %v33, label %b10, label %b11

b10:                                              ; preds = %b9
  %v34 = add nuw nsw i32 %v30, 1
  br label %b13

b11:                                              ; preds = %b9
  %v35 = icmp eq i32 %v32, 4096
  br i1 %v35, label %b12, label %b13

b12:                                              ; preds = %b11
  %v36 = and i32 %v30, 1
  %v37 = add nuw nsw i32 %v36, %v30
  br label %b13

b13:                                              ; preds = %b12, %b11, %b10, %b8, %b7, %b6, %b4, %b3, %b2
  %v38 = phi i32 [ %v18, %b6 ], [ %v10, %b2 ], [ %v14, %b4 ], [ %v7, %b3 ], [ 31744, %b7 ], [ 0, %b8 ], [ %v34, %b10 ], [ %v37, %b12 ], [ %v30, %b11 ]
  %v39 = lshr i32 %v0, 16
  %v40 = and i32 %v39, 32768
  %v41 = or i32 %v38, %v40
  %vlast = trunc i32 %v41 to i16
  %vres = bitcast i16 %vlast to half
  ret half %vres
}

; Function Attrs: nofree nosync nounwind memory(none)
define weak dso_local float @__extendhfsf2(half %a0) local_unnamed_addr #6 {
b0:
  %vinp = bitcast half %a0 to i16
  %v1 = and i16 %vinp, 32767
  %v2 = zext i16 %v1 to i32
  %v3 = add nsw i16 %v1, -1024
  %v4 = icmp ult i16 %v3, 30720
  br i1 %v4, label %b1, label %b2

b1:                                               ; preds = %b0
  %v5 = shl nuw nsw i32 %v2, 13
  %v6 = add nuw nsw i32 %v5, 939524096
  br label %b6

b2:                                               ; preds = %b0
  %v7 = icmp ugt i16 %v1, 31743
  br i1 %v7, label %b3, label %b4

b3:                                               ; preds = %b2
  %v8 = shl nuw nsw i32 %v2, 13
  %v9 = or i32 %v8, 2139095040
  br label %b6

b4:                                               ; preds = %b2
  %v10 = icmp eq i16 %v1, 0
  br i1 %v10, label %b6, label %b5

b5:                                               ; preds = %b4
  %v11 = icmp ult i16 %v1, 256
  %v12 = lshr i32 %v2, 8
  %v13 = select i1 %v11, i32 %v2, i32 %v12
  %v14 = select i1 %v11, i32 32, i32 24
  %v15 = icmp ult i32 %v13, 16
  %v16 = lshr i32 %v13, 4
  %v17 = add nsw i32 %v14, -4
  %v18 = select i1 %v15, i32 %v13, i32 %v16
  %v19 = select i1 %v15, i32 %v14, i32 %v17
  %v20 = icmp ult i32 %v18, 4
  %v21 = lshr i32 %v18, 2
  %v22 = add nsw i32 %v19, -2
  %v23 = select i1 %v20, i32 %v18, i32 %v21
  %v24 = select i1 %v20, i32 %v19, i32 %v22
  %v25 = icmp ult i32 %v23, 2
  %v26 = sub nsw i32 0, %v23
  %v27 = select i1 %v25, i32 %v26, i32 -2
  %v28 = add nsw i32 %v27, %v24
  %v29 = add nsw i32 %v28, -8
  %v30 = shl i32 %v2, %v29
  %v31 = xor i32 %v30, 8388608
  %v32 = shl i32 %v28, 23
  %v33 = sub i32 1124073472, %v32
  %v34 = or i32 %v31, %v33
  br label %b6

b6:                                               ; preds = %b5, %b4, %b3, %b1
  %v35 = phi i32 [ %v6, %b1 ], [ %v9, %b3 ], [ %v34, %b5 ], [ 0, %b4 ]
  %v36 = and i16 %vinp, -32768
  %v37 = zext i16 %v36 to i32
  %v38 = shl nuw i32 %v37, 16
  %v39 = or i32 %v35, %v38
  %v40 = bitcast i32 %v39 to float
  ret float %v40
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #7

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #7

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x i16> @llvm.smax.v4i16(<4 x i16>, <4 x i16>) #7

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x i16> @llvm.umin.v4i16(<4 x i16>, <4 x i16>) #7

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x i16> @llvm.smin.v4i16(<4 x i16>, <4 x i16>) #7

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #9

attributes #0 = { "target-cpu"="generic" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #2 = { noinline "target-cpu"="generic" }
attributes #3 = { nofree nosync nounwind memory(readwrite, inaccessiblemem: none) "target-cpu"="generic" }
attributes #4 = { mustprogress nofree noinline nosync nounwind willreturn memory(argmem: readwrite) "target-cpu"="generic" }
attributes #5 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #6 = { nofree nosync nounwind memory(none) "target-cpu"="generic" "target-features" }
attributes #7 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #8 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #9 = { nocallback nofree nounwind willreturn memory(argmem: write) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "TVM", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug)
!1 = !DIFile(filename: "main.tir", directory: ".")
!2 = !{i32 2, !"tvm_target", !"llvm -mtriple=x86_64-pc-windows-msvc"}
!3 = !{i32 4, !"Debug Info Version", i32 3}
!4 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10)
!5 = !DISubroutineType(types: !6)
!6 = !{!7, !8, !9, !7, !8, !9, !8}
!7 = !DIBasicType(name: "int32", size: 32, encoding: DW_ATE_signed)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7)
!10 = !{!11, !12, !13, !14, !15, !16}
!11 = !DILocalVariable(name: "arg1", arg: 1, scope: !4, file: !1, type: !8)
!12 = !DILocalVariable(name: "arg2", arg: 2, scope: !4, file: !1, type: !9)
!13 = !DILocalVariable(name: "arg3", arg: 3, scope: !4, file: !1, type: !7)
!14 = !DILocalVariable(name: "arg4", arg: 4, scope: !4, file: !1, type: !8)
!15 = !DILocalVariable(name: "arg5", arg: 5, scope: !4, file: !1, type: !9)
!16 = !DILocalVariable(name: "arg6", arg: 6, scope: !4, file: !1, type: !8)
!17 = !DILocation(line: 0, scope: !4)
!18 = !{!"branch_weights", i32 1048576, i32 1}
!19 = !{!20, !20, i64 0}
!20 = !{!"ctx_ptr", !21, i64 0}
!21 = !{!"tvm-tbaa"}
!22 = !{!23, !23, i64 0}
!23 = !{!"00000209061D8CB0.w4.b0", !24, i64 0}
!24 = !{!"00000209061D8CB0.w8.b0", !25, i64 0}
!25 = !{!"00000209061D8CB0.w16.b0", !26, i64 0}
!26 = !{!"00000209061D8CB0.w32.b0", !27, i64 0}
!27 = !{!"00000209061D8CB0.w64.b0", !28, i64 0}
!28 = !{!"00000209061D8CB0.w128.b0", !29, i64 0}
!29 = !{!"00000209061D8CB0.w256.b0", !30, i64 0}
!30 = !{!"00000209061D8CB0.w512.b0", !31, i64 0}
!31 = !{!"00000209061D8CB0.w1024.b0", !32, i64 0}
!32 = !{!"00000209061D8CB0", !21, i64 0}
!33 = !{!34, !34, i64 0}
!34 = !{!"00000209061D8CB0.w4.b4", !24, i64 0}
!35 = !{!36, !36, i64 0}
!36 = !{!"00000209061D8CB0.w4.b8", !37, i64 0}
!37 = !{!"00000209061D8CB0.w8.b8", !25, i64 0}
!38 = !{!39, !39, i64 0}
!39 = !{!"00000209061DEE30.w8.b0", !40, i64 0}
!40 = !{!"00000209061DEE30.w16.b0", !41, i64 0}
!41 = !{!"00000209061DEE30.w32.b0", !42, i64 0}
!42 = !{!"00000209061DEE30.w64.b0", !43, i64 0}
!43 = !{!"00000209061DEE30.w128.b0", !44, i64 0}
!44 = !{!"00000209061DEE30.w256.b0", !45, i64 0}
!45 = !{!"00000209061DEE30.w512.b0", !46, i64 0}
!46 = !{!"00000209061DEE30.w1024.b0", !47, i64 0}
!47 = !{!"00000209061DEE30", !21, i64 0}
!48 = !{!49, !49, i64 0}
!49 = !{!"00000209061DEE30.w8.b8", !40, i64 0}
!50 = !{!51, !51, i64 0}
!51 = !{!"00000209061DEE30.w8.b16", !52, i64 0}
!52 = !{!"00000209061DEE30.w16.b16", !41, i64 0}
!53 = !{!54, !54, i64 0}
!54 = !{!"00000209061DEE30.w8.b24", !52, i64 0}
!55 = !{!56, !56, i64 0}
!56 = !{!"00000209061DEE30.w8.b32", !57, i64 0}
!57 = !{!"00000209061DEE30.w16.b32", !58, i64 0}
!58 = !{!"00000209061DEE30.w32.b32", !42, i64 0}
!59 = !{!"branch_weights", i32 1, i32 1048576}
!60 = !{!61, !61, i64 0}
!61 = !{!"00000209061DF470.w8.b8", !62, i64 0}
!62 = !{!"00000209061DF470.w16.b0", !63, i64 0}
!63 = !{!"00000209061DF470.w32.b0", !64, i64 0}
!64 = !{!"00000209061DF470.w64.b0", !65, i64 0}
!65 = !{!"00000209061DF470.w128.b0", !66, i64 0}
!66 = !{!"00000209061DF470.w256.b0", !67, i64 0}
!67 = !{!"00000209061DF470.w512.b0", !68, i64 0}
!68 = !{!"00000209061DF470.w1024.b0", !69, i64 0}
!69 = !{!"00000209061DF470", !21, i64 0}
!70 = !{!71, !71, i64 0}
!71 = !{!"00000209061DF470.w8.b16", !72, i64 0}
!72 = !{!"00000209061DF470.w16.b16", !63, i64 0}
!73 = !{!74, !74, i64 0}
!74 = !{!"00000209061DF470.w8.b24", !72, i64 0}
!75 = !{!76, !76, i64 0}
!76 = !{!"00000209061DF470.w8.b32", !77, i64 0}
!77 = !{!"00000209061DF470.w16.b32", !78, i64 0}
!78 = !{!"00000209061DF470.w32.b32", !64, i64 0}
!79 = !{!80, !80, i64 0}
!80 = !{!"00000209061E2830.w8.b0", !81, i64 0}
!81 = !{!"00000209061E2830.w16.b0", !82, i64 0}
!82 = !{!"00000209061E2830.w32.b0", !83, i64 0}
!83 = !{!"00000209061E2830.w64.b0", !84, i64 0}
!84 = !{!"00000209061E2830.w128.b0", !85, i64 0}
!85 = !{!"00000209061E2830.w256.b0", !86, i64 0}
!86 = !{!"00000209061E2830.w512.b0", !87, i64 0}
!87 = !{!"00000209061E2830.w1024.b0", !88, i64 0}
!88 = !{!"00000209061E2830", !21, i64 0}
!89 = !{!90, !90, i64 0}
!90 = !{!"00000209061E2830.w8.b8", !81, i64 0}
!91 = !{!92, !92, i64 0}
!92 = !{!"00000209061E2830.w8.b16", !93, i64 0}
!93 = !{!"00000209061E2830.w16.b16", !82, i64 0}
!94 = !{!95, !95, i64 0}
!95 = !{!"00000209061E2830.w8.b24", !93, i64 0}
!96 = !{!97, !97, i64 0}
!97 = !{!"00000209061E2830.w8.b32", !98, i64 0}
!98 = !{!"00000209061E2830.w16.b32", !99, i64 0}
!99 = !{!"00000209061E2830.w32.b32", !83, i64 0}
!100 = !{!101, !101, i64 0}
!101 = !{!"00000209061E3F70.w8.b8", !102, i64 0}
!102 = !{!"00000209061E3F70.w16.b0", !103, i64 0}
!103 = !{!"00000209061E3F70.w32.b0", !104, i64 0}
!104 = !{!"00000209061E3F70.w64.b0", !105, i64 0}
!105 = !{!"00000209061E3F70.w128.b0", !106, i64 0}
!106 = !{!"00000209061E3F70.w256.b0", !107, i64 0}
!107 = !{!"00000209061E3F70.w512.b0", !108, i64 0}
!108 = !{!"00000209061E3F70.w1024.b0", !109, i64 0}
!109 = !{!"00000209061E3F70", !21, i64 0}
!110 = !{!111, !111, i64 0}
!111 = !{!"00000209061E3F70.w8.b16", !112, i64 0}
!112 = !{!"00000209061E3F70.w16.b16", !103, i64 0}
!113 = !{!114, !114, i64 0}
!114 = !{!"00000209061E3F70.w8.b24", !112, i64 0}
!115 = !{!116, !116, i64 0}
!116 = !{!"00000209061E3F70.w8.b32", !117, i64 0}
!117 = !{!"00000209061E3F70.w16.b32", !118, i64 0}
!118 = !{!"00000209061E3F70.w32.b32", !104, i64 0}
!119 = !{!120, !120, i64 0}
!120 = !{!"00000209061E3270.w8.b0", !121, i64 0}
!121 = !{!"00000209061E3270.w16.b0", !122, i64 0}
!122 = !{!"00000209061E3270.w32.b0", !123, i64 0}
!123 = !{!"00000209061E3270.w64.b0", !124, i64 0}
!124 = !{!"00000209061E3270.w128.b0", !125, i64 0}
!125 = !{!"00000209061E3270.w256.b0", !126, i64 0}
!126 = !{!"00000209061E3270.w512.b0", !127, i64 0}
!127 = !{!"00000209061E3270.w1024.b0", !128, i64 0}
!128 = !{!"00000209061E3270", !21, i64 0}
!129 = !{!130, !130, i64 0}
!130 = !{!"00000209061E3270.w8.b8", !121, i64 0}
!131 = !{!132, !132, i64 0}
!132 = !{!"00000209061E3270.w8.b16", !133, i64 0}
!133 = !{!"00000209061E3270.w16.b16", !122, i64 0}
!134 = !{!135, !135, i64 0}
!135 = !{!"00000209061E3270.w8.b24", !133, i64 0}
!136 = !{!137, !137, i64 0}
!137 = !{!"00000209061E3270.w8.b32", !138, i64 0}
!138 = !{!"00000209061E3270.w16.b32", !139, i64 0}
!139 = !{!"00000209061E3270.w32.b32", !123, i64 0}
!140 = !{!141, !141, i64 0}
!141 = !{!"00000209061E4F70.w8.b8", !142, i64 0}
!142 = !{!"00000209061E4F70.w16.b0", !143, i64 0}
!143 = !{!"00000209061E4F70.w32.b0", !144, i64 0}
!144 = !{!"00000209061E4F70.w64.b0", !145, i64 0}
!145 = !{!"00000209061E4F70.w128.b0", !146, i64 0}
!146 = !{!"00000209061E4F70.w256.b0", !147, i64 0}
!147 = !{!"00000209061E4F70.w512.b0", !148, i64 0}
!148 = !{!"00000209061E4F70.w1024.b0", !149, i64 0}
!149 = !{!"00000209061E4F70", !21, i64 0}
!150 = !{!151, !151, i64 0}
!151 = !{!"00000209061E4F70.w8.b16", !152, i64 0}
!152 = !{!"00000209061E4F70.w16.b16", !143, i64 0}
!153 = !{!154, !154, i64 0}
!154 = !{!"00000209061E4F70.w8.b24", !152, i64 0}
!155 = !{!156, !156, i64 0}
!156 = !{!"00000209061E4F70.w8.b32", !157, i64 0}
!157 = !{!"00000209061E4F70.w16.b32", !158, i64 0}
!158 = !{!"00000209061E4F70.w32.b32", !144, i64 0}
!159 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !160)
!160 = !{!161, !162, !163, !164, !165, !166}
!161 = !DILocalVariable(name: "arg1", arg: 1, scope: !159, file: !1, type: !8)
!162 = !DILocalVariable(name: "arg2", arg: 2, scope: !159, file: !1, type: !9)
!163 = !DILocalVariable(name: "arg3", arg: 3, scope: !159, file: !1, type: !7)
!164 = !DILocalVariable(name: "arg4", arg: 4, scope: !159, file: !1, type: !8)
!165 = !DILocalVariable(name: "arg5", arg: 5, scope: !159, file: !1, type: !9)
!166 = !DILocalVariable(name: "arg6", arg: 6, scope: !159, file: !1, type: !8)
!167 = !DILocation(line: 0, scope: !159)
!168 = !{!169, !169, i64 0}
!169 = !{!"0000020905FF0A70.w4.b0", !170, i64 0}
!170 = !{!"0000020905FF0A70.w8.b0", !171, i64 0}
!171 = !{!"0000020905FF0A70.w16.b0", !172, i64 0}
!172 = !{!"0000020905FF0A70.w32.b0", !173, i64 0}
!173 = !{!"0000020905FF0A70.w64.b0", !174, i64 0}
!174 = !{!"0000020905FF0A70.w128.b0", !175, i64 0}
!175 = !{!"0000020905FF0A70.w256.b0", !176, i64 0}
!176 = !{!"0000020905FF0A70.w512.b0", !177, i64 0}
!177 = !{!"0000020905FF0A70.w1024.b0", !178, i64 0}
!178 = !{!"0000020905FF0A70", !21, i64 0}
!179 = !{!180, !180, i64 0}
!180 = !{!"0000020905FF0A70.w4.b4", !170, i64 0}
!181 = !{!182, !182, i64 0}
!182 = !{!"0000020905FF0A70.w4.b8", !183, i64 0}
!183 = !{!"0000020905FF0A70.w8.b8", !171, i64 0}
!184 = !{!185, !185, i64 0}
!185 = !{!"0000020905FF71B0.w8.b0", !186, i64 0}
!186 = !{!"0000020905FF71B0.w16.b0", !187, i64 0}
!187 = !{!"0000020905FF71B0.w32.b0", !188, i64 0}
!188 = !{!"0000020905FF71B0.w64.b0", !189, i64 0}
!189 = !{!"0000020905FF71B0.w128.b0", !190, i64 0}
!190 = !{!"0000020905FF71B0.w256.b0", !191, i64 0}
!191 = !{!"0000020905FF71B0.w512.b0", !192, i64 0}
!192 = !{!"0000020905FF71B0.w1024.b0", !193, i64 0}
!193 = !{!"0000020905FF71B0", !21, i64 0}
!194 = !{!195, !195, i64 0}
!195 = !{!"0000020905FF71B0.w8.b8", !186, i64 0}
!196 = !{!197, !197, i64 0}
!197 = !{!"0000020905FF71B0.w8.b16", !198, i64 0}
!198 = !{!"0000020905FF71B0.w16.b16", !187, i64 0}
!199 = !{!200, !200, i64 0}
!200 = !{!"0000020905FF71B0.w8.b24", !198, i64 0}
!201 = !{!202, !202, i64 0}
!202 = !{!"0000020905FF71B0.w8.b32", !203, i64 0}
!203 = !{!"0000020905FF71B0.w16.b32", !204, i64 0}
!204 = !{!"0000020905FF71B0.w32.b32", !188, i64 0}
!205 = !{!206, !206, i64 0}
!206 = !{!"0000020905FF7B30.w8.b8", !207, i64 0}
!207 = !{!"0000020905FF7B30.w16.b0", !208, i64 0}
!208 = !{!"0000020905FF7B30.w32.b0", !209, i64 0}
!209 = !{!"0000020905FF7B30.w64.b0", !210, i64 0}
!210 = !{!"0000020905FF7B30.w128.b0", !211, i64 0}
!211 = !{!"0000020905FF7B30.w256.b0", !212, i64 0}
!212 = !{!"0000020905FF7B30.w512.b0", !213, i64 0}
!213 = !{!"0000020905FF7B30.w1024.b0", !214, i64 0}
!214 = !{!"0000020905FF7B30", !21, i64 0}
!215 = !{!216, !216, i64 0}
!216 = !{!"0000020905FF7B30.w8.b16", !217, i64 0}
!217 = !{!"0000020905FF7B30.w16.b16", !208, i64 0}
!218 = !{!219, !219, i64 0}
!219 = !{!"0000020905FF7B30.w8.b24", !217, i64 0}
!220 = !{!221, !221, i64 0}
!221 = !{!"0000020905FF7B30.w8.b32", !222, i64 0}
!222 = !{!"0000020905FF7B30.w16.b32", !223, i64 0}
!223 = !{!"0000020905FF7B30.w32.b32", !209, i64 0}
!224 = !{!225, !225, i64 0}
!225 = !{!"0000020905FF9E30.w8.b0", !226, i64 0}
!226 = !{!"0000020905FF9E30.w16.b0", !227, i64 0}
!227 = !{!"0000020905FF9E30.w32.b0", !228, i64 0}
!228 = !{!"0000020905FF9E30.w64.b0", !229, i64 0}
!229 = !{!"0000020905FF9E30.w128.b0", !230, i64 0}
!230 = !{!"0000020905FF9E30.w256.b0", !231, i64 0}
!231 = !{!"0000020905FF9E30.w512.b0", !232, i64 0}
!232 = !{!"0000020905FF9E30.w1024.b0", !233, i64 0}
!233 = !{!"0000020905FF9E30", !21, i64 0}
!234 = !{!235, !235, i64 0}
!235 = !{!"0000020905FF9E30.w8.b8", !226, i64 0}
!236 = !{!237, !237, i64 0}
!237 = !{!"0000020905FF9E30.w8.b16", !238, i64 0}
!238 = !{!"0000020905FF9E30.w16.b16", !227, i64 0}
!239 = !{!240, !240, i64 0}
!240 = !{!"0000020905FF9E30.w8.b24", !238, i64 0}
!241 = !{!242, !242, i64 0}
!242 = !{!"0000020905FF9E30.w8.b32", !243, i64 0}
!243 = !{!"0000020905FF9E30.w16.b32", !244, i64 0}
!244 = !{!"0000020905FF9E30.w32.b32", !228, i64 0}
!245 = !{!246, !246, i64 0}
!246 = !{!"0000020905FF9F30.w8.b8", !247, i64 0}
!247 = !{!"0000020905FF9F30.w16.b0", !248, i64 0}
!248 = !{!"0000020905FF9F30.w32.b0", !249, i64 0}
!249 = !{!"0000020905FF9F30.w64.b0", !250, i64 0}
!250 = !{!"0000020905FF9F30.w128.b0", !251, i64 0}
!251 = !{!"0000020905FF9F30.w256.b0", !252, i64 0}
!252 = !{!"0000020905FF9F30.w512.b0", !253, i64 0}
!253 = !{!"0000020905FF9F30.w1024.b0", !254, i64 0}
!254 = !{!"0000020905FF9F30", !21, i64 0}
!255 = !{!256, !256, i64 0}
!256 = !{!"0000020905FF9F30.w8.b16", !257, i64 0}
!257 = !{!"0000020905FF9F30.w16.b16", !248, i64 0}
!258 = !{!259, !259, i64 0}
!259 = !{!"0000020905FF9F30.w8.b24", !257, i64 0}
!260 = !{!261, !261, i64 0}
!261 = !{!"0000020905FF9F30.w8.b32", !262, i64 0}
!262 = !{!"0000020905FF9F30.w16.b32", !263, i64 0}
!263 = !{!"0000020905FF9F30.w32.b32", !249, i64 0}
!264 = !{!265, !265, i64 0}
!265 = !{!"0000020905FFB6F0.w8.b0", !266, i64 0}
!266 = !{!"0000020905FFB6F0.w16.b0", !267, i64 0}
!267 = !{!"0000020905FFB6F0.w32.b0", !268, i64 0}
!268 = !{!"0000020905FFB6F0.w64.b0", !269, i64 0}
!269 = !{!"0000020905FFB6F0.w128.b0", !270, i64 0}
!270 = !{!"0000020905FFB6F0.w256.b0", !271, i64 0}
!271 = !{!"0000020905FFB6F0.w512.b0", !272, i64 0}
!272 = !{!"0000020905FFB6F0.w1024.b0", !273, i64 0}
!273 = !{!"0000020905FFB6F0", !21, i64 0}
!274 = !{!275, !275, i64 0}
!275 = !{!"0000020905FFB6F0.w8.b8", !266, i64 0}
!276 = !{!277, !277, i64 0}
!277 = !{!"0000020905FFB6F0.w8.b16", !278, i64 0}
!278 = !{!"0000020905FFB6F0.w16.b16", !267, i64 0}
!279 = !{!280, !280, i64 0}
!280 = !{!"0000020905FFB6F0.w8.b24", !278, i64 0}
!281 = !{!282, !282, i64 0}
!282 = !{!"0000020905FFB6F0.w8.b32", !283, i64 0}
!283 = !{!"0000020905FFB6F0.w16.b32", !284, i64 0}
!284 = !{!"0000020905FFB6F0.w32.b32", !268, i64 0}
!285 = !{!286, !286, i64 0}
!286 = !{!"0000020905FFB6B0.w8.b8", !287, i64 0}
!287 = !{!"0000020905FFB6B0.w16.b0", !288, i64 0}
!288 = !{!"0000020905FFB6B0.w32.b0", !289, i64 0}
!289 = !{!"0000020905FFB6B0.w64.b0", !290, i64 0}
!290 = !{!"0000020905FFB6B0.w128.b0", !291, i64 0}
!291 = !{!"0000020905FFB6B0.w256.b0", !292, i64 0}
!292 = !{!"0000020905FFB6B0.w512.b0", !293, i64 0}
!293 = !{!"0000020905FFB6B0.w1024.b0", !294, i64 0}
!294 = !{!"0000020905FFB6B0", !21, i64 0}
!295 = !{!296, !296, i64 0}
!296 = !{!"0000020905FFB6B0.w8.b16", !297, i64 0}
!297 = !{!"0000020905FFB6B0.w16.b16", !288, i64 0}
!298 = !{!299, !299, i64 0}
!299 = !{!"0000020905FFB6B0.w8.b24", !297, i64 0}
!300 = !{!301, !301, i64 0}
!301 = !{!"0000020905FFB6B0.w8.b32", !302, i64 0}
!302 = !{!"0000020905FFB6B0.w16.b32", !303, i64 0}
!303 = !{!"0000020905FFB6B0.w32.b32", !289, i64 0}
!304 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !305)
!305 = !{!306, !307, !308, !309, !310, !311}
!306 = !DILocalVariable(name: "arg1", arg: 1, scope: !304, file: !1, type: !8)
!307 = !DILocalVariable(name: "arg2", arg: 2, scope: !304, file: !1, type: !9)
!308 = !DILocalVariable(name: "arg3", arg: 3, scope: !304, file: !1, type: !7)
!309 = !DILocalVariable(name: "arg4", arg: 4, scope: !304, file: !1, type: !8)
!310 = !DILocalVariable(name: "arg5", arg: 5, scope: !304, file: !1, type: !9)
!311 = !DILocalVariable(name: "arg6", arg: 6, scope: !304, file: !1, type: !8)
!312 = !DILocation(line: 0, scope: !304)
!313 = !{!314, !314, i64 0}
!314 = !{!"0000020905FF5B30.w4.b0", !315, i64 0}
!315 = !{!"0000020905FF5B30.w8.b0", !316, i64 0}
!316 = !{!"0000020905FF5B30.w16.b0", !317, i64 0}
!317 = !{!"0000020905FF5B30.w32.b0", !318, i64 0}
!318 = !{!"0000020905FF5B30.w64.b0", !319, i64 0}
!319 = !{!"0000020905FF5B30.w128.b0", !320, i64 0}
!320 = !{!"0000020905FF5B30.w256.b0", !321, i64 0}
!321 = !{!"0000020905FF5B30.w512.b0", !322, i64 0}
!322 = !{!"0000020905FF5B30.w1024.b0", !323, i64 0}
!323 = !{!"0000020905FF5B30", !21, i64 0}
!324 = !{!325, !325, i64 0}
!325 = !{!"0000020905FF5B30.w4.b4", !315, i64 0}
!326 = !{!327, !327, i64 0}
!327 = !{!"0000020905FF5B30.w4.b8", !328, i64 0}
!328 = !{!"0000020905FF5B30.w8.b8", !316, i64 0}
!329 = !{!330, !330, i64 0}
!330 = !{!"0000020905FFDAF0.w8.b0", !331, i64 0}
!331 = !{!"0000020905FFDAF0.w16.b0", !332, i64 0}
!332 = !{!"0000020905FFDAF0.w32.b0", !333, i64 0}
!333 = !{!"0000020905FFDAF0.w64.b0", !334, i64 0}
!334 = !{!"0000020905FFDAF0.w128.b0", !335, i64 0}
!335 = !{!"0000020905FFDAF0.w256.b0", !336, i64 0}
!336 = !{!"0000020905FFDAF0.w512.b0", !337, i64 0}
!337 = !{!"0000020905FFDAF0.w1024.b0", !338, i64 0}
!338 = !{!"0000020905FFDAF0", !21, i64 0}
!339 = !{!340, !340, i64 0}
!340 = !{!"0000020905FFDAF0.w8.b8", !331, i64 0}
!341 = !{!342, !342, i64 0}
!342 = !{!"0000020905FFDAF0.w8.b16", !343, i64 0}
!343 = !{!"0000020905FFDAF0.w16.b16", !332, i64 0}
!344 = !{!345, !345, i64 0}
!345 = !{!"0000020905FFDAF0.w8.b24", !343, i64 0}
!346 = !{!347, !347, i64 0}
!347 = !{!"0000020905FFDAF0.w8.b32", !348, i64 0}
!348 = !{!"0000020905FFDAF0.w16.b32", !349, i64 0}
!349 = !{!"0000020905FFDAF0.w32.b32", !333, i64 0}
!350 = !{!351, !351, i64 0}
!351 = !{!"0000020905FFD0F0.w8.b8", !352, i64 0}
!352 = !{!"0000020905FFD0F0.w16.b0", !353, i64 0}
!353 = !{!"0000020905FFD0F0.w32.b0", !354, i64 0}
!354 = !{!"0000020905FFD0F0.w64.b0", !355, i64 0}
!355 = !{!"0000020905FFD0F0.w128.b0", !356, i64 0}
!356 = !{!"0000020905FFD0F0.w256.b0", !357, i64 0}
!357 = !{!"0000020905FFD0F0.w512.b0", !358, i64 0}
!358 = !{!"0000020905FFD0F0.w1024.b0", !359, i64 0}
!359 = !{!"0000020905FFD0F0", !21, i64 0}
!360 = !{!361, !361, i64 0}
!361 = !{!"0000020905FFD0F0.w8.b16", !362, i64 0}
!362 = !{!"0000020905FFD0F0.w16.b16", !353, i64 0}
!363 = !{!364, !364, i64 0}
!364 = !{!"0000020905FFD0F0.w8.b24", !362, i64 0}
!365 = !{!366, !366, i64 0}
!366 = !{!"0000020905FFD0F0.w8.b32", !367, i64 0}
!367 = !{!"0000020905FFD0F0.w16.b32", !368, i64 0}
!368 = !{!"0000020905FFD0F0.w32.b32", !354, i64 0}
!369 = !{!370, !370, i64 0}
!370 = !{!"0000020905FFE0B0.w8.b0", !371, i64 0}
!371 = !{!"0000020905FFE0B0.w16.b0", !372, i64 0}
!372 = !{!"0000020905FFE0B0.w32.b0", !373, i64 0}
!373 = !{!"0000020905FFE0B0.w64.b0", !374, i64 0}
!374 = !{!"0000020905FFE0B0.w128.b0", !375, i64 0}
!375 = !{!"0000020905FFE0B0.w256.b0", !376, i64 0}
!376 = !{!"0000020905FFE0B0.w512.b0", !377, i64 0}
!377 = !{!"0000020905FFE0B0.w1024.b0", !378, i64 0}
!378 = !{!"0000020905FFE0B0", !21, i64 0}
!379 = !{!380, !380, i64 0}
!380 = !{!"0000020905FFE0B0.w8.b8", !371, i64 0}
!381 = !{!382, !382, i64 0}
!382 = !{!"0000020905FFE0B0.w8.b16", !383, i64 0}
!383 = !{!"0000020905FFE0B0.w16.b16", !372, i64 0}
!384 = !{!385, !385, i64 0}
!385 = !{!"0000020905FFE0B0.w8.b24", !383, i64 0}
!386 = !{!387, !387, i64 0}
!387 = !{!"0000020905FFE0B0.w8.b32", !388, i64 0}
!388 = !{!"0000020905FFE0B0.w16.b32", !389, i64 0}
!389 = !{!"0000020905FFE0B0.w32.b32", !373, i64 0}
!390 = !{!391, !391, i64 0}
!391 = !{!"0000020905FFE330.w8.b8", !392, i64 0}
!392 = !{!"0000020905FFE330.w16.b0", !393, i64 0}
!393 = !{!"0000020905FFE330.w32.b0", !394, i64 0}
!394 = !{!"0000020905FFE330.w64.b0", !395, i64 0}
!395 = !{!"0000020905FFE330.w128.b0", !396, i64 0}
!396 = !{!"0000020905FFE330.w256.b0", !397, i64 0}
!397 = !{!"0000020905FFE330.w512.b0", !398, i64 0}
!398 = !{!"0000020905FFE330.w1024.b0", !399, i64 0}
!399 = !{!"0000020905FFE330", !21, i64 0}
!400 = !{!401, !401, i64 0}
!401 = !{!"0000020905FFE330.w8.b16", !402, i64 0}
!402 = !{!"0000020905FFE330.w16.b16", !393, i64 0}
!403 = !{!404, !404, i64 0}
!404 = !{!"0000020905FFE330.w8.b24", !402, i64 0}
!405 = !{!406, !406, i64 0}
!406 = !{!"0000020905FFE330.w8.b32", !407, i64 0}
!407 = !{!"0000020905FFE330.w16.b32", !408, i64 0}
!408 = !{!"0000020905FFE330.w32.b32", !394, i64 0}
!409 = !{!410, !410, i64 0}
!410 = !{!"0000020905FFE630.w8.b0", !411, i64 0}
!411 = !{!"0000020905FFE630.w16.b0", !412, i64 0}
!412 = !{!"0000020905FFE630.w32.b0", !413, i64 0}
!413 = !{!"0000020905FFE630.w64.b0", !414, i64 0}
!414 = !{!"0000020905FFE630.w128.b0", !415, i64 0}
!415 = !{!"0000020905FFE630.w256.b0", !416, i64 0}
!416 = !{!"0000020905FFE630.w512.b0", !417, i64 0}
!417 = !{!"0000020905FFE630.w1024.b0", !418, i64 0}
!418 = !{!"0000020905FFE630", !21, i64 0}
!419 = !{!420, !420, i64 0}
!420 = !{!"0000020905FFE630.w8.b8", !411, i64 0}
!421 = !{!422, !422, i64 0}
!422 = !{!"0000020905FFE630.w8.b16", !423, i64 0}
!423 = !{!"0000020905FFE630.w16.b16", !412, i64 0}
!424 = !{!425, !425, i64 0}
!425 = !{!"0000020905FFE630.w8.b24", !423, i64 0}
!426 = !{!427, !427, i64 0}
!427 = !{!"0000020905FFE630.w8.b32", !428, i64 0}
!428 = !{!"0000020905FFE630.w16.b32", !429, i64 0}
!429 = !{!"0000020905FFE630.w32.b32", !413, i64 0}
!430 = !{!431, !431, i64 0}
!431 = !{!"0000020905FFEB70.w8.b8", !432, i64 0}
!432 = !{!"0000020905FFEB70.w16.b0", !433, i64 0}
!433 = !{!"0000020905FFEB70.w32.b0", !434, i64 0}
!434 = !{!"0000020905FFEB70.w64.b0", !435, i64 0}
!435 = !{!"0000020905FFEB70.w128.b0", !436, i64 0}
!436 = !{!"0000020905FFEB70.w256.b0", !437, i64 0}
!437 = !{!"0000020905FFEB70.w512.b0", !438, i64 0}
!438 = !{!"0000020905FFEB70.w1024.b0", !439, i64 0}
!439 = !{!"0000020905FFEB70", !21, i64 0}
!440 = !{!441, !441, i64 0}
!441 = !{!"0000020905FFEB70.w8.b16", !442, i64 0}
!442 = !{!"0000020905FFEB70.w16.b16", !433, i64 0}
!443 = !{!444, !444, i64 0}
!444 = !{!"0000020905FFEB70.w8.b24", !442, i64 0}
!445 = !{!446, !446, i64 0}
!446 = !{!"0000020905FFEB70.w8.b32", !447, i64 0}
!447 = !{!"0000020905FFEB70.w16.b32", !448, i64 0}
!448 = !{!"0000020905FFEB70.w32.b32", !434, i64 0}
!449 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !450)
!450 = !{!451, !452, !453, !454, !455, !456}
!451 = !DILocalVariable(name: "arg1", arg: 1, scope: !449, file: !1, type: !8)
!452 = !DILocalVariable(name: "arg2", arg: 2, scope: !449, file: !1, type: !9)
!453 = !DILocalVariable(name: "arg3", arg: 3, scope: !449, file: !1, type: !7)
!454 = !DILocalVariable(name: "arg4", arg: 4, scope: !449, file: !1, type: !8)
!455 = !DILocalVariable(name: "arg5", arg: 5, scope: !449, file: !1, type: !9)
!456 = !DILocalVariable(name: "arg6", arg: 6, scope: !449, file: !1, type: !8)
!457 = !DILocation(line: 0, scope: !449)
!458 = !{!459, !459, i64 0}
!459 = !{!"00000209061C9F70.w4.b0", !460, i64 0}
!460 = !{!"00000209061C9F70.w8.b0", !461, i64 0}
!461 = !{!"00000209061C9F70.w16.b0", !462, i64 0}
!462 = !{!"00000209061C9F70.w32.b0", !463, i64 0}
!463 = !{!"00000209061C9F70.w64.b0", !464, i64 0}
!464 = !{!"00000209061C9F70.w128.b0", !465, i64 0}
!465 = !{!"00000209061C9F70.w256.b0", !466, i64 0}
!466 = !{!"00000209061C9F70.w512.b0", !467, i64 0}
!467 = !{!"00000209061C9F70.w1024.b0", !468, i64 0}
!468 = !{!"00000209061C9F70", !21, i64 0}
!469 = !{!470, !470, i64 0}
!470 = !{!"00000209061C9F70.w4.b4", !460, i64 0}
!471 = !{!472, !472, i64 0}
!472 = !{!"00000209061C9F70.w4.b8", !473, i64 0}
!473 = !{!"00000209061C9F70.w8.b8", !461, i64 0}
!474 = !{!475, !475, i64 0}
!475 = !{!"00000209061CBD70.w8.b0", !476, i64 0}
!476 = !{!"00000209061CBD70.w16.b0", !477, i64 0}
!477 = !{!"00000209061CBD70.w32.b0", !478, i64 0}
!478 = !{!"00000209061CBD70.w64.b0", !479, i64 0}
!479 = !{!"00000209061CBD70.w128.b0", !480, i64 0}
!480 = !{!"00000209061CBD70.w256.b0", !481, i64 0}
!481 = !{!"00000209061CBD70.w512.b0", !482, i64 0}
!482 = !{!"00000209061CBD70.w1024.b0", !483, i64 0}
!483 = !{!"00000209061CBD70", !21, i64 0}
!484 = !{!485, !485, i64 0}
!485 = !{!"00000209061CBD70.w8.b8", !476, i64 0}
!486 = !{!487, !487, i64 0}
!487 = !{!"00000209061CBD70.w8.b16", !488, i64 0}
!488 = !{!"00000209061CBD70.w16.b16", !477, i64 0}
!489 = !{!490, !490, i64 0}
!490 = !{!"00000209061CBD70.w8.b24", !488, i64 0}
!491 = !{!492, !492, i64 0}
!492 = !{!"00000209061CBD70.w8.b32", !493, i64 0}
!493 = !{!"00000209061CBD70.w16.b32", !494, i64 0}
!494 = !{!"00000209061CBD70.w32.b32", !478, i64 0}
!495 = !{!496, !496, i64 0}
!496 = !{!"00000209061CBCF0.w8.b8", !497, i64 0}
!497 = !{!"00000209061CBCF0.w16.b0", !498, i64 0}
!498 = !{!"00000209061CBCF0.w32.b0", !499, i64 0}
!499 = !{!"00000209061CBCF0.w64.b0", !500, i64 0}
!500 = !{!"00000209061CBCF0.w128.b0", !501, i64 0}
!501 = !{!"00000209061CBCF0.w256.b0", !502, i64 0}
!502 = !{!"00000209061CBCF0.w512.b0", !503, i64 0}
!503 = !{!"00000209061CBCF0.w1024.b0", !504, i64 0}
!504 = !{!"00000209061CBCF0", !21, i64 0}
!505 = !{!506, !506, i64 0}
!506 = !{!"00000209061CBCF0.w8.b16", !507, i64 0}
!507 = !{!"00000209061CBCF0.w16.b16", !498, i64 0}
!508 = !{!509, !509, i64 0}
!509 = !{!"00000209061CBCF0.w8.b24", !507, i64 0}
!510 = !{!511, !511, i64 0}
!511 = !{!"00000209061CBCF0.w8.b32", !512, i64 0}
!512 = !{!"00000209061CBCF0.w16.b32", !513, i64 0}
!513 = !{!"00000209061CBCF0.w32.b32", !499, i64 0}
!514 = !{!515, !515, i64 0}
!515 = !{!"00000209061CCEB0.w8.b0", !516, i64 0}
!516 = !{!"00000209061CCEB0.w16.b0", !517, i64 0}
!517 = !{!"00000209061CCEB0.w32.b0", !518, i64 0}
!518 = !{!"00000209061CCEB0.w64.b0", !519, i64 0}
!519 = !{!"00000209061CCEB0.w128.b0", !520, i64 0}
!520 = !{!"00000209061CCEB0.w256.b0", !521, i64 0}
!521 = !{!"00000209061CCEB0.w512.b0", !522, i64 0}
!522 = !{!"00000209061CCEB0.w1024.b0", !523, i64 0}
!523 = !{!"00000209061CCEB0", !21, i64 0}
!524 = !{!525, !525, i64 0}
!525 = !{!"00000209061CCEB0.w8.b8", !516, i64 0}
!526 = !{!527, !527, i64 0}
!527 = !{!"00000209061CCEB0.w8.b16", !528, i64 0}
!528 = !{!"00000209061CCEB0.w16.b16", !517, i64 0}
!529 = !{!530, !530, i64 0}
!530 = !{!"00000209061CCEB0.w8.b24", !528, i64 0}
!531 = !{!532, !532, i64 0}
!532 = !{!"00000209061CCEB0.w8.b32", !533, i64 0}
!533 = !{!"00000209061CCEB0.w16.b32", !534, i64 0}
!534 = !{!"00000209061CCEB0.w32.b32", !518, i64 0}
!535 = !{!536, !536, i64 0}
!536 = !{!"00000209061CCAB0.w8.b8", !537, i64 0}
!537 = !{!"00000209061CCAB0.w16.b0", !538, i64 0}
!538 = !{!"00000209061CCAB0.w32.b0", !539, i64 0}
!539 = !{!"00000209061CCAB0.w64.b0", !540, i64 0}
!540 = !{!"00000209061CCAB0.w128.b0", !541, i64 0}
!541 = !{!"00000209061CCAB0.w256.b0", !542, i64 0}
!542 = !{!"00000209061CCAB0.w512.b0", !543, i64 0}
!543 = !{!"00000209061CCAB0.w1024.b0", !544, i64 0}
!544 = !{!"00000209061CCAB0", !21, i64 0}
!545 = !{!546, !546, i64 0}
!546 = !{!"00000209061CCAB0.w8.b16", !547, i64 0}
!547 = !{!"00000209061CCAB0.w16.b16", !538, i64 0}
!548 = !{!549, !549, i64 0}
!549 = !{!"00000209061CCAB0.w8.b24", !547, i64 0}
!550 = !{!551, !551, i64 0}
!551 = !{!"00000209061CCAB0.w8.b32", !552, i64 0}
!552 = !{!"00000209061CCAB0.w16.b32", !553, i64 0}
!553 = !{!"00000209061CCAB0.w32.b32", !539, i64 0}
!554 = !{!555, !555, i64 0}
!555 = !{!"00000209061CD6F0.w8.b0", !556, i64 0}
!556 = !{!"00000209061CD6F0.w16.b0", !557, i64 0}
!557 = !{!"00000209061CD6F0.w32.b0", !558, i64 0}
!558 = !{!"00000209061CD6F0.w64.b0", !559, i64 0}
!559 = !{!"00000209061CD6F0.w128.b0", !560, i64 0}
!560 = !{!"00000209061CD6F0.w256.b0", !561, i64 0}
!561 = !{!"00000209061CD6F0.w512.b0", !562, i64 0}
!562 = !{!"00000209061CD6F0.w1024.b0", !563, i64 0}
!563 = !{!"00000209061CD6F0", !21, i64 0}
!564 = !{!565, !565, i64 0}
!565 = !{!"00000209061CD6F0.w8.b8", !556, i64 0}
!566 = !{!567, !567, i64 0}
!567 = !{!"00000209061CD6F0.w8.b16", !568, i64 0}
!568 = !{!"00000209061CD6F0.w16.b16", !557, i64 0}
!569 = !{!570, !570, i64 0}
!570 = !{!"00000209061CD6F0.w8.b24", !568, i64 0}
!571 = !{!572, !572, i64 0}
!572 = !{!"00000209061CD6F0.w8.b32", !573, i64 0}
!573 = !{!"00000209061CD6F0.w16.b32", !574, i64 0}
!574 = !{!"00000209061CD6F0.w32.b32", !558, i64 0}
!575 = !{!576, !576, i64 0}
!576 = !{!"00000209061CD830.w8.b8", !577, i64 0}
!577 = !{!"00000209061CD830.w16.b0", !578, i64 0}
!578 = !{!"00000209061CD830.w32.b0", !579, i64 0}
!579 = !{!"00000209061CD830.w64.b0", !580, i64 0}
!580 = !{!"00000209061CD830.w128.b0", !581, i64 0}
!581 = !{!"00000209061CD830.w256.b0", !582, i64 0}
!582 = !{!"00000209061CD830.w512.b0", !583, i64 0}
!583 = !{!"00000209061CD830.w1024.b0", !584, i64 0}
!584 = !{!"00000209061CD830", !21, i64 0}
!585 = !{!586, !586, i64 0}
!586 = !{!"00000209061CD830.w8.b16", !587, i64 0}
!587 = !{!"00000209061CD830.w16.b16", !578, i64 0}
!588 = !{!589, !589, i64 0}
!589 = !{!"00000209061CD830.w8.b24", !587, i64 0}
!590 = !{!591, !591, i64 0}
!591 = !{!"00000209061CD830.w8.b32", !592, i64 0}
!592 = !{!"00000209061CD830.w16.b32", !593, i64 0}
!593 = !{!"00000209061CD830.w32.b32", !579, i64 0}
!594 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !595)
!595 = !{!596, !597, !598, !599, !600, !601}
!596 = !DILocalVariable(name: "arg1", arg: 1, scope: !594, file: !1, type: !8)
!597 = !DILocalVariable(name: "arg2", arg: 2, scope: !594, file: !1, type: !9)
!598 = !DILocalVariable(name: "arg3", arg: 3, scope: !594, file: !1, type: !7)
!599 = !DILocalVariable(name: "arg4", arg: 4, scope: !594, file: !1, type: !8)
!600 = !DILocalVariable(name: "arg5", arg: 5, scope: !594, file: !1, type: !9)
!601 = !DILocalVariable(name: "arg6", arg: 6, scope: !594, file: !1, type: !8)
!602 = !DILocation(line: 0, scope: !594)
!603 = !{!604, !604, i64 0}
!604 = !{!"00000209061697B0.w4.b0", !605, i64 0}
!605 = !{!"00000209061697B0.w8.b0", !606, i64 0}
!606 = !{!"00000209061697B0.w16.b0", !607, i64 0}
!607 = !{!"00000209061697B0.w32.b0", !608, i64 0}
!608 = !{!"00000209061697B0.w64.b0", !609, i64 0}
!609 = !{!"00000209061697B0.w128.b0", !610, i64 0}
!610 = !{!"00000209061697B0.w256.b0", !611, i64 0}
!611 = !{!"00000209061697B0.w512.b0", !612, i64 0}
!612 = !{!"00000209061697B0.w1024.b0", !613, i64 0}
!613 = !{!"00000209061697B0", !21, i64 0}
!614 = !{!615, !615, i64 0}
!615 = !{!"00000209061697B0.w4.b4", !605, i64 0}
!616 = !{!617, !617, i64 0}
!617 = !{!"000002090616C8F0.w8.b0", !618, i64 0}
!618 = !{!"000002090616C8F0.w16.b0", !619, i64 0}
!619 = !{!"000002090616C8F0.w32.b0", !620, i64 0}
!620 = !{!"000002090616C8F0.w64.b0", !621, i64 0}
!621 = !{!"000002090616C8F0.w128.b0", !622, i64 0}
!622 = !{!"000002090616C8F0.w256.b0", !623, i64 0}
!623 = !{!"000002090616C8F0.w512.b0", !624, i64 0}
!624 = !{!"000002090616C8F0.w1024.b0", !625, i64 0}
!625 = !{!"000002090616C8F0", !21, i64 0}
!626 = !{!627, !627, i64 0}
!627 = !{!"000002090616C8F0.w8.b8", !618, i64 0}
!628 = !{!629, !629, i64 0}
!629 = !{!"000002090616C8F0.w8.b16", !630, i64 0}
!630 = !{!"000002090616C8F0.w16.b16", !619, i64 0}
!631 = !{!632, !632, i64 0}
!632 = !{!"000002090616C8F0.w8.b24", !630, i64 0}
!633 = !{!634, !634, i64 0}
!634 = !{!"000002090616C8F0.w8.b32", !635, i64 0}
!635 = !{!"000002090616C8F0.w16.b32", !636, i64 0}
!636 = !{!"000002090616C8F0.w32.b32", !620, i64 0}
!637 = !{!638, !638, i64 0}
!638 = !{!"000002090616D0F0.w8.b8", !639, i64 0}
!639 = !{!"000002090616D0F0.w16.b0", !640, i64 0}
!640 = !{!"000002090616D0F0.w32.b0", !641, i64 0}
!641 = !{!"000002090616D0F0.w64.b0", !642, i64 0}
!642 = !{!"000002090616D0F0.w128.b0", !643, i64 0}
!643 = !{!"000002090616D0F0.w256.b0", !644, i64 0}
!644 = !{!"000002090616D0F0.w512.b0", !645, i64 0}
!645 = !{!"000002090616D0F0.w1024.b0", !646, i64 0}
!646 = !{!"000002090616D0F0", !21, i64 0}
!647 = !{!648, !648, i64 0}
!648 = !{!"000002090616D0F0.w8.b16", !649, i64 0}
!649 = !{!"000002090616D0F0.w16.b16", !640, i64 0}
!650 = !{!651, !651, i64 0}
!651 = !{!"000002090616D0F0.w8.b24", !649, i64 0}
!652 = !{!653, !653, i64 0}
!653 = !{!"000002090616D0F0.w8.b32", !654, i64 0}
!654 = !{!"000002090616D0F0.w16.b32", !655, i64 0}
!655 = !{!"000002090616D0F0.w32.b32", !641, i64 0}
!656 = !{!657, !657, i64 0}
!657 = !{!"0000020906170670.w8.b0", !658, i64 0}
!658 = !{!"0000020906170670.w16.b0", !659, i64 0}
!659 = !{!"0000020906170670.w32.b0", !660, i64 0}
!660 = !{!"0000020906170670.w64.b0", !661, i64 0}
!661 = !{!"0000020906170670.w128.b0", !662, i64 0}
!662 = !{!"0000020906170670.w256.b0", !663, i64 0}
!663 = !{!"0000020906170670.w512.b0", !664, i64 0}
!664 = !{!"0000020906170670.w1024.b0", !665, i64 0}
!665 = !{!"0000020906170670", !21, i64 0}
!666 = !{!667, !667, i64 0}
!667 = !{!"0000020906170670.w8.b8", !658, i64 0}
!668 = !{!669, !669, i64 0}
!669 = !{!"0000020906170670.w8.b16", !670, i64 0}
!670 = !{!"0000020906170670.w16.b16", !659, i64 0}
!671 = !{!672, !672, i64 0}
!672 = !{!"0000020906170670.w8.b24", !670, i64 0}
!673 = !{!674, !674, i64 0}
!674 = !{!"0000020906170670.w8.b32", !675, i64 0}
!675 = !{!"0000020906170670.w16.b32", !676, i64 0}
!676 = !{!"0000020906170670.w32.b32", !660, i64 0}
!677 = !{!678, !678, i64 0}
!678 = !{!"0000020906170EF0.w8.b8", !679, i64 0}
!679 = !{!"0000020906170EF0.w16.b0", !680, i64 0}
!680 = !{!"0000020906170EF0.w32.b0", !681, i64 0}
!681 = !{!"0000020906170EF0.w64.b0", !682, i64 0}
!682 = !{!"0000020906170EF0.w128.b0", !683, i64 0}
!683 = !{!"0000020906170EF0.w256.b0", !684, i64 0}
!684 = !{!"0000020906170EF0.w512.b0", !685, i64 0}
!685 = !{!"0000020906170EF0.w1024.b0", !686, i64 0}
!686 = !{!"0000020906170EF0", !21, i64 0}
!687 = !{!688, !688, i64 0}
!688 = !{!"0000020906170EF0.w8.b16", !689, i64 0}
!689 = !{!"0000020906170EF0.w16.b16", !680, i64 0}
!690 = !{!691, !691, i64 0}
!691 = !{!"0000020906170EF0.w8.b24", !689, i64 0}
!692 = !{!693, !693, i64 0}
!693 = !{!"0000020906170EF0.w8.b32", !694, i64 0}
!694 = !{!"0000020906170EF0.w16.b32", !695, i64 0}
!695 = !{!"0000020906170EF0.w32.b32", !681, i64 0}
!696 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !697)
!697 = !{!698, !699, !700, !701, !702, !703}
!698 = !DILocalVariable(name: "arg1", arg: 1, scope: !696, file: !1, type: !8)
!699 = !DILocalVariable(name: "arg2", arg: 2, scope: !696, file: !1, type: !9)
!700 = !DILocalVariable(name: "arg3", arg: 3, scope: !696, file: !1, type: !7)
!701 = !DILocalVariable(name: "arg4", arg: 4, scope: !696, file: !1, type: !8)
!702 = !DILocalVariable(name: "arg5", arg: 5, scope: !696, file: !1, type: !9)
!703 = !DILocalVariable(name: "arg6", arg: 6, scope: !696, file: !1, type: !8)
!704 = !DILocation(line: 0, scope: !696)
!705 = !{!706, !706, i64 0}
!706 = !{!"000002090601C3E0.w4.b0", !707, i64 0}
!707 = !{!"000002090601C3E0.w8.b0", !708, i64 0}
!708 = !{!"000002090601C3E0.w16.b0", !709, i64 0}
!709 = !{!"000002090601C3E0.w32.b0", !710, i64 0}
!710 = !{!"000002090601C3E0.w64.b0", !711, i64 0}
!711 = !{!"000002090601C3E0.w128.b0", !712, i64 0}
!712 = !{!"000002090601C3E0.w256.b0", !713, i64 0}
!713 = !{!"000002090601C3E0.w512.b0", !714, i64 0}
!714 = !{!"000002090601C3E0.w1024.b0", !715, i64 0}
!715 = !{!"000002090601C3E0", !21, i64 0}
!716 = !{!717, !717, i64 0}
!717 = !{!"000002090601C3E0.w4.b4", !707, i64 0}
!718 = !{!719, !719, i64 0}
!719 = !{!"000002090601C3E0.w4.b8", !720, i64 0}
!720 = !{!"000002090601C3E0.w8.b8", !708, i64 0}
!721 = !{!722, !722, i64 0}
!722 = !{!"000002090601C3E0.w4.b12", !720, i64 0}
!723 = !{!724, !724, i64 0}
!724 = !{!"000002090601C3E0.w4.b16", !725, i64 0}
!725 = !{!"000002090601C3E0.w8.b16", !726, i64 0}
!726 = !{!"000002090601C3E0.w16.b16", !709, i64 0}
!727 = !{!728, !728, i64 0}
!728 = !{!"000002090601C3E0.w4.b20", !725, i64 0}
!729 = !{!730, !730, i64 0}
!730 = !{!"0000020906022D60.w8.b0", !731, i64 0}
!731 = !{!"0000020906022D60.w16.b0", !732, i64 0}
!732 = !{!"0000020906022D60.w32.b0", !733, i64 0}
!733 = !{!"0000020906022D60.w64.b0", !734, i64 0}
!734 = !{!"0000020906022D60.w128.b0", !735, i64 0}
!735 = !{!"0000020906022D60.w256.b0", !736, i64 0}
!736 = !{!"0000020906022D60.w512.b0", !737, i64 0}
!737 = !{!"0000020906022D60.w1024.b0", !738, i64 0}
!738 = !{!"0000020906022D60", !21, i64 0}
!739 = !{!740, !740, i64 0}
!740 = !{!"0000020906022D60.w8.b8", !731, i64 0}
!741 = !{!742, !742, i64 0}
!742 = !{!"0000020906022D60.w8.b16", !743, i64 0}
!743 = !{!"0000020906022D60.w16.b16", !732, i64 0}
!744 = !{!745, !745, i64 0}
!745 = !{!"0000020906022D60.w8.b24", !743, i64 0}
!746 = !{!747, !747, i64 0}
!747 = !{!"0000020906022D60.w8.b32", !748, i64 0}
!748 = !{!"0000020906022D60.w16.b32", !749, i64 0}
!749 = !{!"0000020906022D60.w32.b32", !733, i64 0}
!750 = !{!751, !751, i64 0}
!751 = !{!"0000020906022DA0.w8.b8", !752, i64 0}
!752 = !{!"0000020906022DA0.w16.b0", !753, i64 0}
!753 = !{!"0000020906022DA0.w32.b0", !754, i64 0}
!754 = !{!"0000020906022DA0.w64.b0", !755, i64 0}
!755 = !{!"0000020906022DA0.w128.b0", !756, i64 0}
!756 = !{!"0000020906022DA0.w256.b0", !757, i64 0}
!757 = !{!"0000020906022DA0.w512.b0", !758, i64 0}
!758 = !{!"0000020906022DA0.w1024.b0", !759, i64 0}
!759 = !{!"0000020906022DA0", !21, i64 0}
!760 = !{!761, !761, i64 0}
!761 = !{!"0000020906022DA0.w8.b16", !762, i64 0}
!762 = !{!"0000020906022DA0.w16.b16", !753, i64 0}
!763 = !{!764, !764, i64 0}
!764 = !{!"0000020906022DA0.w8.b24", !762, i64 0}
!765 = !{!766, !766, i64 0}
!766 = !{!"0000020906022DA0.w8.b32", !767, i64 0}
!767 = !{!"0000020906022DA0.w16.b32", !768, i64 0}
!768 = !{!"0000020906022DA0.w32.b32", !754, i64 0}
!769 = !{!770, !770, i64 0}
!770 = !{!"0000020906023420.w8.b0", !771, i64 0}
!771 = !{!"0000020906023420.w16.b0", !772, i64 0}
!772 = !{!"0000020906023420.w32.b0", !773, i64 0}
!773 = !{!"0000020906023420.w64.b0", !774, i64 0}
!774 = !{!"0000020906023420.w128.b0", !775, i64 0}
!775 = !{!"0000020906023420.w256.b0", !776, i64 0}
!776 = !{!"0000020906023420.w512.b0", !777, i64 0}
!777 = !{!"0000020906023420.w1024.b0", !778, i64 0}
!778 = !{!"0000020906023420", !21, i64 0}
!779 = !{!780, !780, i64 0}
!780 = !{!"0000020906023420.w8.b8", !771, i64 0}
!781 = !{!782, !782, i64 0}
!782 = !{!"0000020906023420.w8.b16", !783, i64 0}
!783 = !{!"0000020906023420.w16.b16", !772, i64 0}
!784 = !{!785, !785, i64 0}
!785 = !{!"0000020906023420.w8.b24", !783, i64 0}
!786 = !{!787, !787, i64 0}
!787 = !{!"0000020906023420.w8.b32", !788, i64 0}
!788 = !{!"0000020906023420.w16.b32", !789, i64 0}
!789 = !{!"0000020906023420.w32.b32", !773, i64 0}
!790 = !{!791, !791, i64 0}
!791 = !{!"00000209060234A0.w8.b8", !792, i64 0}
!792 = !{!"00000209060234A0.w16.b0", !793, i64 0}
!793 = !{!"00000209060234A0.w32.b0", !794, i64 0}
!794 = !{!"00000209060234A0.w64.b0", !795, i64 0}
!795 = !{!"00000209060234A0.w128.b0", !796, i64 0}
!796 = !{!"00000209060234A0.w256.b0", !797, i64 0}
!797 = !{!"00000209060234A0.w512.b0", !798, i64 0}
!798 = !{!"00000209060234A0.w1024.b0", !799, i64 0}
!799 = !{!"00000209060234A0", !21, i64 0}
!800 = !{!801, !801, i64 0}
!801 = !{!"00000209060234A0.w8.b32", !802, i64 0}
!802 = !{!"00000209060234A0.w16.b32", !803, i64 0}
!803 = !{!"00000209060234A0.w32.b32", !794, i64 0}
!804 = !{!805, !805, i64 0}
!805 = !{!"00000209060250E0.w8.b0", !806, i64 0}
!806 = !{!"00000209060250E0.w16.b0", !807, i64 0}
!807 = !{!"00000209060250E0.w32.b0", !808, i64 0}
!808 = !{!"00000209060250E0.w64.b0", !809, i64 0}
!809 = !{!"00000209060250E0.w128.b0", !810, i64 0}
!810 = !{!"00000209060250E0.w256.b0", !811, i64 0}
!811 = !{!"00000209060250E0.w512.b0", !812, i64 0}
!812 = !{!"00000209060250E0.w1024.b0", !813, i64 0}
!813 = !{!"00000209060250E0", !21, i64 0}
!814 = !{!815, !815, i64 0}
!815 = !{!"00000209060250E0.w8.b8", !806, i64 0}
!816 = !{!817, !817, i64 0}
!817 = !{!"00000209060250E0.w8.b16", !818, i64 0}
!818 = !{!"00000209060250E0.w16.b16", !807, i64 0}
!819 = !{!820, !820, i64 0}
!820 = !{!"00000209060250E0.w8.b24", !818, i64 0}
!821 = !{!822, !822, i64 0}
!822 = !{!"00000209060250E0.w8.b32", !823, i64 0}
!823 = !{!"00000209060250E0.w16.b32", !824, i64 0}
!824 = !{!"00000209060250E0.w32.b32", !808, i64 0}
!825 = !{!826, !826, i64 0}
!826 = !{!"0000020906023720.w8.b8", !827, i64 0}
!827 = !{!"0000020906023720.w16.b0", !828, i64 0}
!828 = !{!"0000020906023720.w32.b0", !829, i64 0}
!829 = !{!"0000020906023720.w64.b0", !830, i64 0}
!830 = !{!"0000020906023720.w128.b0", !831, i64 0}
!831 = !{!"0000020906023720.w256.b0", !832, i64 0}
!832 = !{!"0000020906023720.w512.b0", !833, i64 0}
!833 = !{!"0000020906023720.w1024.b0", !834, i64 0}
!834 = !{!"0000020906023720", !21, i64 0}
!835 = !{!836, !836, i64 0}
!836 = !{!"0000020906023720.w8.b32", !837, i64 0}
!837 = !{!"0000020906023720.w16.b32", !838, i64 0}
!838 = !{!"0000020906023720.w32.b32", !829, i64 0}
!839 = !{!840, !840, i64 0}
!840 = !{!"0000020906026420.w8.b0", !841, i64 0}
!841 = !{!"0000020906026420.w16.b0", !842, i64 0}
!842 = !{!"0000020906026420.w32.b0", !843, i64 0}
!843 = !{!"0000020906026420.w64.b0", !844, i64 0}
!844 = !{!"0000020906026420.w128.b0", !845, i64 0}
!845 = !{!"0000020906026420.w256.b0", !846, i64 0}
!846 = !{!"0000020906026420.w512.b0", !847, i64 0}
!847 = !{!"0000020906026420.w1024.b0", !848, i64 0}
!848 = !{!"0000020906026420", !21, i64 0}
!849 = !{!850, !850, i64 0}
!850 = !{!"0000020906026420.w8.b8", !841, i64 0}
!851 = !{!852, !852, i64 0}
!852 = !{!"0000020906026420.w8.b16", !853, i64 0}
!853 = !{!"0000020906026420.w16.b16", !842, i64 0}
!854 = !{!855, !855, i64 0}
!855 = !{!"0000020906026420.w8.b24", !853, i64 0}
!856 = !{!857, !857, i64 0}
!857 = !{!"0000020906026420.w8.b32", !858, i64 0}
!858 = !{!"0000020906026420.w16.b32", !859, i64 0}
!859 = !{!"0000020906026420.w32.b32", !843, i64 0}
!860 = !{!861, !861, i64 0}
!861 = !{!"0000020906026F60.w8.b8", !862, i64 0}
!862 = !{!"0000020906026F60.w16.b0", !863, i64 0}
!863 = !{!"0000020906026F60.w32.b0", !864, i64 0}
!864 = !{!"0000020906026F60.w64.b0", !865, i64 0}
!865 = !{!"0000020906026F60.w128.b0", !866, i64 0}
!866 = !{!"0000020906026F60.w256.b0", !867, i64 0}
!867 = !{!"0000020906026F60.w512.b0", !868, i64 0}
!868 = !{!"0000020906026F60.w1024.b0", !869, i64 0}
!869 = !{!"0000020906026F60", !21, i64 0}
!870 = !{!871, !871, i64 0}
!871 = !{!"0000020906026F60.w8.b16", !872, i64 0}
!872 = !{!"0000020906026F60.w16.b16", !863, i64 0}
!873 = !{!874, !874, i64 0}
!874 = !{!"0000020906026F60.w8.b24", !872, i64 0}
!875 = !{!876, !876, i64 0}
!876 = !{!"0000020906026F60.w8.b32", !877, i64 0}
!877 = !{!"0000020906026F60.w16.b32", !878, i64 0}
!878 = !{!"0000020906026F60.w32.b32", !864, i64 0}
!879 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !880)
!880 = !{!881, !882, !883, !884, !885, !886}
!881 = !DILocalVariable(name: "arg1", arg: 1, scope: !879, file: !1, type: !8)
!882 = !DILocalVariable(name: "arg2", arg: 2, scope: !879, file: !1, type: !9)
!883 = !DILocalVariable(name: "arg3", arg: 3, scope: !879, file: !1, type: !7)
!884 = !DILocalVariable(name: "arg4", arg: 4, scope: !879, file: !1, type: !8)
!885 = !DILocalVariable(name: "arg5", arg: 5, scope: !879, file: !1, type: !9)
!886 = !DILocalVariable(name: "arg6", arg: 6, scope: !879, file: !1, type: !8)
!887 = !DILocation(line: 0, scope: !879)
!888 = !{!889, !889, i64 0}
!889 = !{!"0000020906003070.w4.b0", !890, i64 0}
!890 = !{!"0000020906003070.w8.b0", !891, i64 0}
!891 = !{!"0000020906003070.w16.b0", !892, i64 0}
!892 = !{!"0000020906003070.w32.b0", !893, i64 0}
!893 = !{!"0000020906003070.w64.b0", !894, i64 0}
!894 = !{!"0000020906003070.w128.b0", !895, i64 0}
!895 = !{!"0000020906003070.w256.b0", !896, i64 0}
!896 = !{!"0000020906003070.w512.b0", !897, i64 0}
!897 = !{!"0000020906003070.w1024.b0", !898, i64 0}
!898 = !{!"0000020906003070", !21, i64 0}
!899 = !{!900, !900, i64 0}
!900 = !{!"0000020906003070.w4.b4", !890, i64 0}
!901 = !{!902, !902, i64 0}
!902 = !{!"0000020906003070.w4.b8", !903, i64 0}
!903 = !{!"0000020906003070.w8.b8", !891, i64 0}
!904 = !{!905, !905, i64 0}
!905 = !{!"0000020906003070.w4.b12", !903, i64 0}
!906 = !{!907, !907, i64 0}
!907 = !{!"0000020906003070.w4.b16", !908, i64 0}
!908 = !{!"0000020906003070.w8.b16", !909, i64 0}
!909 = !{!"0000020906003070.w16.b16", !892, i64 0}
!910 = !{!911, !911, i64 0}
!911 = !{!"0000020906003070.w4.b20", !908, i64 0}
!912 = !{!913, !913, i64 0}
!913 = !{!"000002090600BB70.w8.b0", !914, i64 0}
!914 = !{!"000002090600BB70.w16.b0", !915, i64 0}
!915 = !{!"000002090600BB70.w32.b0", !916, i64 0}
!916 = !{!"000002090600BB70.w64.b0", !917, i64 0}
!917 = !{!"000002090600BB70.w128.b0", !918, i64 0}
!918 = !{!"000002090600BB70.w256.b0", !919, i64 0}
!919 = !{!"000002090600BB70.w512.b0", !920, i64 0}
!920 = !{!"000002090600BB70.w1024.b0", !921, i64 0}
!921 = !{!"000002090600BB70", !21, i64 0}
!922 = !{!923, !923, i64 0}
!923 = !{!"000002090600BB70.w8.b8", !914, i64 0}
!924 = !{!925, !925, i64 0}
!925 = !{!"000002090600BB70.w8.b16", !926, i64 0}
!926 = !{!"000002090600BB70.w16.b16", !915, i64 0}
!927 = !{!928, !928, i64 0}
!928 = !{!"000002090600BB70.w8.b24", !926, i64 0}
!929 = !{!930, !930, i64 0}
!930 = !{!"000002090600BB70.w8.b32", !931, i64 0}
!931 = !{!"000002090600BB70.w16.b32", !932, i64 0}
!932 = !{!"000002090600BB70.w32.b32", !916, i64 0}
!933 = !{!934, !934, i64 0}
!934 = !{!"0000020905FEBBB0.w8.b8", !935, i64 0}
!935 = !{!"0000020905FEBBB0.w16.b0", !936, i64 0}
!936 = !{!"0000020905FEBBB0.w32.b0", !937, i64 0}
!937 = !{!"0000020905FEBBB0.w64.b0", !938, i64 0}
!938 = !{!"0000020905FEBBB0.w128.b0", !939, i64 0}
!939 = !{!"0000020905FEBBB0.w256.b0", !940, i64 0}
!940 = !{!"0000020905FEBBB0.w512.b0", !941, i64 0}
!941 = !{!"0000020905FEBBB0.w1024.b0", !942, i64 0}
!942 = !{!"0000020905FEBBB0", !21, i64 0}
!943 = !{!944, !944, i64 0}
!944 = !{!"0000020905FEBBB0.w8.b16", !945, i64 0}
!945 = !{!"0000020905FEBBB0.w16.b16", !936, i64 0}
!946 = !{!947, !947, i64 0}
!947 = !{!"0000020905FEBBB0.w8.b24", !945, i64 0}
!948 = !{!949, !949, i64 0}
!949 = !{!"0000020905FEBBB0.w8.b32", !950, i64 0}
!950 = !{!"0000020905FEBBB0.w16.b32", !951, i64 0}
!951 = !{!"0000020905FEBBB0.w32.b32", !937, i64 0}
!952 = !{!953, !953, i64 0}
!953 = !{!"0000020905FEC530.w8.b0", !954, i64 0}
!954 = !{!"0000020905FEC530.w16.b0", !955, i64 0}
!955 = !{!"0000020905FEC530.w32.b0", !956, i64 0}
!956 = !{!"0000020905FEC530.w64.b0", !957, i64 0}
!957 = !{!"0000020905FEC530.w128.b0", !958, i64 0}
!958 = !{!"0000020905FEC530.w256.b0", !959, i64 0}
!959 = !{!"0000020905FEC530.w512.b0", !960, i64 0}
!960 = !{!"0000020905FEC530.w1024.b0", !961, i64 0}
!961 = !{!"0000020905FEC530", !21, i64 0}
!962 = !{!963, !963, i64 0}
!963 = !{!"0000020905FEC530.w8.b8", !954, i64 0}
!964 = !{!965, !965, i64 0}
!965 = !{!"0000020905FEC530.w8.b16", !966, i64 0}
!966 = !{!"0000020905FEC530.w16.b16", !955, i64 0}
!967 = !{!968, !968, i64 0}
!968 = !{!"0000020905FEC530.w8.b24", !966, i64 0}
!969 = !{!970, !970, i64 0}
!970 = !{!"0000020905FEC530.w8.b32", !971, i64 0}
!971 = !{!"0000020905FEC530.w16.b32", !972, i64 0}
!972 = !{!"0000020905FEC530.w32.b32", !956, i64 0}
!973 = !{!974, !974, i64 0}
!974 = !{!"0000020905FED8F0.w8.b8", !975, i64 0}
!975 = !{!"0000020905FED8F0.w16.b0", !976, i64 0}
!976 = !{!"0000020905FED8F0.w32.b0", !977, i64 0}
!977 = !{!"0000020905FED8F0.w64.b0", !978, i64 0}
!978 = !{!"0000020905FED8F0.w128.b0", !979, i64 0}
!979 = !{!"0000020905FED8F0.w256.b0", !980, i64 0}
!980 = !{!"0000020905FED8F0.w512.b0", !981, i64 0}
!981 = !{!"0000020905FED8F0.w1024.b0", !982, i64 0}
!982 = !{!"0000020905FED8F0", !21, i64 0}
!983 = !{!984, !984, i64 0}
!984 = !{!"0000020905FED8F0.w8.b32", !985, i64 0}
!985 = !{!"0000020905FED8F0.w16.b32", !986, i64 0}
!986 = !{!"0000020905FED8F0.w32.b32", !977, i64 0}
!987 = !{!988, !988, i64 0}
!988 = !{!"000002090600E4A0.w8.b0", !989, i64 0}
!989 = !{!"000002090600E4A0.w16.b0", !990, i64 0}
!990 = !{!"000002090600E4A0.w32.b0", !991, i64 0}
!991 = !{!"000002090600E4A0.w64.b0", !992, i64 0}
!992 = !{!"000002090600E4A0.w128.b0", !993, i64 0}
!993 = !{!"000002090600E4A0.w256.b0", !994, i64 0}
!994 = !{!"000002090600E4A0.w512.b0", !995, i64 0}
!995 = !{!"000002090600E4A0.w1024.b0", !996, i64 0}
!996 = !{!"000002090600E4A0", !21, i64 0}
!997 = !{!998, !998, i64 0}
!998 = !{!"000002090600E4A0.w8.b8", !989, i64 0}
!999 = !{!1000, !1000, i64 0}
!1000 = !{!"000002090600E4A0.w8.b16", !1001, i64 0}
!1001 = !{!"000002090600E4A0.w16.b16", !990, i64 0}
!1002 = !{!1003, !1003, i64 0}
!1003 = !{!"000002090600E4A0.w8.b24", !1001, i64 0}
!1004 = !{!1005, !1005, i64 0}
!1005 = !{!"000002090600E4A0.w8.b32", !1006, i64 0}
!1006 = !{!"000002090600E4A0.w16.b32", !1007, i64 0}
!1007 = !{!"000002090600E4A0.w32.b32", !991, i64 0}
!1008 = !{!1009, !1009, i64 0}
!1009 = !{!"000002090600EA20.w8.b8", !1010, i64 0}
!1010 = !{!"000002090600EA20.w16.b0", !1011, i64 0}
!1011 = !{!"000002090600EA20.w32.b0", !1012, i64 0}
!1012 = !{!"000002090600EA20.w64.b0", !1013, i64 0}
!1013 = !{!"000002090600EA20.w128.b0", !1014, i64 0}
!1014 = !{!"000002090600EA20.w256.b0", !1015, i64 0}
!1015 = !{!"000002090600EA20.w512.b0", !1016, i64 0}
!1016 = !{!"000002090600EA20.w1024.b0", !1017, i64 0}
!1017 = !{!"000002090600EA20", !21, i64 0}
!1018 = !{!1019, !1019, i64 0}
!1019 = !{!"000002090600EA20.w8.b32", !1020, i64 0}
!1020 = !{!"000002090600EA20.w16.b32", !1021, i64 0}
!1021 = !{!"000002090600EA20.w32.b32", !1012, i64 0}
!1022 = !{!1023, !1023, i64 0}
!1023 = !{!"000002090600E8A0.w8.b0", !1024, i64 0}
!1024 = !{!"000002090600E8A0.w16.b0", !1025, i64 0}
!1025 = !{!"000002090600E8A0.w32.b0", !1026, i64 0}
!1026 = !{!"000002090600E8A0.w64.b0", !1027, i64 0}
!1027 = !{!"000002090600E8A0.w128.b0", !1028, i64 0}
!1028 = !{!"000002090600E8A0.w256.b0", !1029, i64 0}
!1029 = !{!"000002090600E8A0.w512.b0", !1030, i64 0}
!1030 = !{!"000002090600E8A0.w1024.b0", !1031, i64 0}
!1031 = !{!"000002090600E8A0", !21, i64 0}
!1032 = !{!1033, !1033, i64 0}
!1033 = !{!"000002090600E8A0.w8.b8", !1024, i64 0}
!1034 = !{!1035, !1035, i64 0}
!1035 = !{!"000002090600E8A0.w8.b16", !1036, i64 0}
!1036 = !{!"000002090600E8A0.w16.b16", !1025, i64 0}
!1037 = !{!1038, !1038, i64 0}
!1038 = !{!"000002090600E8A0.w8.b24", !1036, i64 0}
!1039 = !{!1040, !1040, i64 0}
!1040 = !{!"000002090600E8A0.w8.b32", !1041, i64 0}
!1041 = !{!"000002090600E8A0.w16.b32", !1042, i64 0}
!1042 = !{!"000002090600E8A0.w32.b32", !1026, i64 0}
!1043 = !{!1044, !1044, i64 0}
!1044 = !{!"00000209060106E0.w8.b8", !1045, i64 0}
!1045 = !{!"00000209060106E0.w16.b0", !1046, i64 0}
!1046 = !{!"00000209060106E0.w32.b0", !1047, i64 0}
!1047 = !{!"00000209060106E0.w64.b0", !1048, i64 0}
!1048 = !{!"00000209060106E0.w128.b0", !1049, i64 0}
!1049 = !{!"00000209060106E0.w256.b0", !1050, i64 0}
!1050 = !{!"00000209060106E0.w512.b0", !1051, i64 0}
!1051 = !{!"00000209060106E0.w1024.b0", !1052, i64 0}
!1052 = !{!"00000209060106E0", !21, i64 0}
!1053 = !{!1054, !1054, i64 0}
!1054 = !{!"00000209060106E0.w8.b16", !1055, i64 0}
!1055 = !{!"00000209060106E0.w16.b16", !1046, i64 0}
!1056 = !{!1057, !1057, i64 0}
!1057 = !{!"00000209060106E0.w8.b24", !1055, i64 0}
!1058 = !{!1059, !1059, i64 0}
!1059 = !{!"00000209060106E0.w8.b32", !1060, i64 0}
!1060 = !{!"00000209060106E0.w16.b32", !1061, i64 0}
!1061 = !{!"00000209060106E0.w32.b32", !1047, i64 0}
!1062 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1063)
!1063 = !{!1064, !1065, !1066, !1067, !1068, !1069}
!1064 = !DILocalVariable(name: "arg1", arg: 1, scope: !1062, file: !1, type: !8)
!1065 = !DILocalVariable(name: "arg2", arg: 2, scope: !1062, file: !1, type: !9)
!1066 = !DILocalVariable(name: "arg3", arg: 3, scope: !1062, file: !1, type: !7)
!1067 = !DILocalVariable(name: "arg4", arg: 4, scope: !1062, file: !1, type: !8)
!1068 = !DILocalVariable(name: "arg5", arg: 5, scope: !1062, file: !1, type: !9)
!1069 = !DILocalVariable(name: "arg6", arg: 6, scope: !1062, file: !1, type: !8)
!1070 = !DILocation(line: 0, scope: !1062)
!1071 = !{!1072, !1072, i64 0}
!1072 = !{!"0000020906051820.w4.b0", !1073, i64 0}
!1073 = !{!"0000020906051820.w8.b0", !1074, i64 0}
!1074 = !{!"0000020906051820.w16.b0", !1075, i64 0}
!1075 = !{!"0000020906051820.w32.b0", !1076, i64 0}
!1076 = !{!"0000020906051820.w64.b0", !1077, i64 0}
!1077 = !{!"0000020906051820.w128.b0", !1078, i64 0}
!1078 = !{!"0000020906051820.w256.b0", !1079, i64 0}
!1079 = !{!"0000020906051820.w512.b0", !1080, i64 0}
!1080 = !{!"0000020906051820.w1024.b0", !1081, i64 0}
!1081 = !{!"0000020906051820", !21, i64 0}
!1082 = !{!1083, !1083, i64 0}
!1083 = !{!"0000020906051820.w4.b4", !1073, i64 0}
!1084 = !{!1085, !1085, i64 0}
!1085 = !{!"0000020906051820.w4.b8", !1086, i64 0}
!1086 = !{!"0000020906051820.w8.b8", !1074, i64 0}
!1087 = !{!1088, !1088, i64 0}
!1088 = !{!"0000020906051820.w4.b12", !1086, i64 0}
!1089 = !{!1090, !1090, i64 0}
!1090 = !{!"0000020906051820.w4.b16", !1091, i64 0}
!1091 = !{!"0000020906051820.w8.b16", !1092, i64 0}
!1092 = !{!"0000020906051820.w16.b16", !1075, i64 0}
!1093 = !{!1094, !1094, i64 0}
!1094 = !{!"0000020906051820.w4.b20", !1091, i64 0}
!1095 = !{!1096, !1096, i64 0}
!1096 = !{!"000002090605A520.w8.b0", !1097, i64 0}
!1097 = !{!"000002090605A520.w16.b0", !1098, i64 0}
!1098 = !{!"000002090605A520.w32.b0", !1099, i64 0}
!1099 = !{!"000002090605A520.w64.b0", !1100, i64 0}
!1100 = !{!"000002090605A520.w128.b0", !1101, i64 0}
!1101 = !{!"000002090605A520.w256.b0", !1102, i64 0}
!1102 = !{!"000002090605A520.w512.b0", !1103, i64 0}
!1103 = !{!"000002090605A520.w1024.b0", !1104, i64 0}
!1104 = !{!"000002090605A520", !21, i64 0}
!1105 = !{!1106, !1106, i64 0}
!1106 = !{!"000002090605A520.w8.b8", !1097, i64 0}
!1107 = !{!1108, !1108, i64 0}
!1108 = !{!"000002090605A520.w8.b16", !1109, i64 0}
!1109 = !{!"000002090605A520.w16.b16", !1098, i64 0}
!1110 = !{!1111, !1111, i64 0}
!1111 = !{!"000002090605A520.w8.b24", !1109, i64 0}
!1112 = !{!1113, !1113, i64 0}
!1113 = !{!"000002090605A520.w8.b32", !1114, i64 0}
!1114 = !{!"000002090605A520.w16.b32", !1115, i64 0}
!1115 = !{!"000002090605A520.w32.b32", !1099, i64 0}
!1116 = !{!1117, !1117, i64 0}
!1117 = !{!"000002090605B620.w8.b8", !1118, i64 0}
!1118 = !{!"000002090605B620.w16.b0", !1119, i64 0}
!1119 = !{!"000002090605B620.w32.b0", !1120, i64 0}
!1120 = !{!"000002090605B620.w64.b0", !1121, i64 0}
!1121 = !{!"000002090605B620.w128.b0", !1122, i64 0}
!1122 = !{!"000002090605B620.w256.b0", !1123, i64 0}
!1123 = !{!"000002090605B620.w512.b0", !1124, i64 0}
!1124 = !{!"000002090605B620.w1024.b0", !1125, i64 0}
!1125 = !{!"000002090605B620", !21, i64 0}
!1126 = !{!1127, !1127, i64 0}
!1127 = !{!"000002090605B620.w8.b16", !1128, i64 0}
!1128 = !{!"000002090605B620.w16.b16", !1119, i64 0}
!1129 = !{!1130, !1130, i64 0}
!1130 = !{!"000002090605B620.w8.b24", !1128, i64 0}
!1131 = !{!1132, !1132, i64 0}
!1132 = !{!"000002090605B620.w8.b32", !1133, i64 0}
!1133 = !{!"000002090605B620.w16.b32", !1134, i64 0}
!1134 = !{!"000002090605B620.w32.b32", !1120, i64 0}
!1135 = !{!1136, !1136, i64 0}
!1136 = !{!"000002090605BEA0.w8.b0", !1137, i64 0}
!1137 = !{!"000002090605BEA0.w16.b0", !1138, i64 0}
!1138 = !{!"000002090605BEA0.w32.b0", !1139, i64 0}
!1139 = !{!"000002090605BEA0.w64.b0", !1140, i64 0}
!1140 = !{!"000002090605BEA0.w128.b0", !1141, i64 0}
!1141 = !{!"000002090605BEA0.w256.b0", !1142, i64 0}
!1142 = !{!"000002090605BEA0.w512.b0", !1143, i64 0}
!1143 = !{!"000002090605BEA0.w1024.b0", !1144, i64 0}
!1144 = !{!"000002090605BEA0", !21, i64 0}
!1145 = !{!1146, !1146, i64 0}
!1146 = !{!"000002090605BEA0.w8.b8", !1137, i64 0}
!1147 = !{!1148, !1148, i64 0}
!1148 = !{!"000002090605BEA0.w8.b16", !1149, i64 0}
!1149 = !{!"000002090605BEA0.w16.b16", !1138, i64 0}
!1150 = !{!1151, !1151, i64 0}
!1151 = !{!"000002090605BEA0.w8.b24", !1149, i64 0}
!1152 = !{!1153, !1153, i64 0}
!1153 = !{!"000002090605BEA0.w8.b32", !1154, i64 0}
!1154 = !{!"000002090605BEA0.w16.b32", !1155, i64 0}
!1155 = !{!"000002090605BEA0.w32.b32", !1139, i64 0}
!1156 = !{!1157, !1157, i64 0}
!1157 = !{!"000002090605C7A0.w8.b8", !1158, i64 0}
!1158 = !{!"000002090605C7A0.w16.b0", !1159, i64 0}
!1159 = !{!"000002090605C7A0.w32.b0", !1160, i64 0}
!1160 = !{!"000002090605C7A0.w64.b0", !1161, i64 0}
!1161 = !{!"000002090605C7A0.w128.b0", !1162, i64 0}
!1162 = !{!"000002090605C7A0.w256.b0", !1163, i64 0}
!1163 = !{!"000002090605C7A0.w512.b0", !1164, i64 0}
!1164 = !{!"000002090605C7A0.w1024.b0", !1165, i64 0}
!1165 = !{!"000002090605C7A0", !21, i64 0}
!1166 = !{!1167, !1167, i64 0}
!1167 = !{!"000002090605C7A0.w8.b32", !1168, i64 0}
!1168 = !{!"000002090605C7A0.w16.b32", !1169, i64 0}
!1169 = !{!"000002090605C7A0.w32.b32", !1160, i64 0}
!1170 = !{!1171, !1171, i64 0}
!1171 = !{!"000002090605CDA0.w8.b0", !1172, i64 0}
!1172 = !{!"000002090605CDA0.w16.b0", !1173, i64 0}
!1173 = !{!"000002090605CDA0.w32.b0", !1174, i64 0}
!1174 = !{!"000002090605CDA0.w64.b0", !1175, i64 0}
!1175 = !{!"000002090605CDA0.w128.b0", !1176, i64 0}
!1176 = !{!"000002090605CDA0.w256.b0", !1177, i64 0}
!1177 = !{!"000002090605CDA0.w512.b0", !1178, i64 0}
!1178 = !{!"000002090605CDA0.w1024.b0", !1179, i64 0}
!1179 = !{!"000002090605CDA0", !21, i64 0}
!1180 = !{!1181, !1181, i64 0}
!1181 = !{!"000002090605CDA0.w8.b8", !1172, i64 0}
!1182 = !{!1183, !1183, i64 0}
!1183 = !{!"000002090605CDA0.w8.b16", !1184, i64 0}
!1184 = !{!"000002090605CDA0.w16.b16", !1173, i64 0}
!1185 = !{!1186, !1186, i64 0}
!1186 = !{!"000002090605CDA0.w8.b24", !1184, i64 0}
!1187 = !{!1188, !1188, i64 0}
!1188 = !{!"000002090605CDA0.w8.b32", !1189, i64 0}
!1189 = !{!"000002090605CDA0.w16.b32", !1190, i64 0}
!1190 = !{!"000002090605CDA0.w32.b32", !1174, i64 0}
!1191 = !{!1192, !1192, i64 0}
!1192 = !{!"000002090605C160.w8.b8", !1193, i64 0}
!1193 = !{!"000002090605C160.w16.b0", !1194, i64 0}
!1194 = !{!"000002090605C160.w32.b0", !1195, i64 0}
!1195 = !{!"000002090605C160.w64.b0", !1196, i64 0}
!1196 = !{!"000002090605C160.w128.b0", !1197, i64 0}
!1197 = !{!"000002090605C160.w256.b0", !1198, i64 0}
!1198 = !{!"000002090605C160.w512.b0", !1199, i64 0}
!1199 = !{!"000002090605C160.w1024.b0", !1200, i64 0}
!1200 = !{!"000002090605C160", !21, i64 0}
!1201 = !{!1202, !1202, i64 0}
!1202 = !{!"000002090605C160.w8.b32", !1203, i64 0}
!1203 = !{!"000002090605C160.w16.b32", !1204, i64 0}
!1204 = !{!"000002090605C160.w32.b32", !1195, i64 0}
!1205 = !{!1206, !1206, i64 0}
!1206 = !{!"000002090605F060.w8.b0", !1207, i64 0}
!1207 = !{!"000002090605F060.w16.b0", !1208, i64 0}
!1208 = !{!"000002090605F060.w32.b0", !1209, i64 0}
!1209 = !{!"000002090605F060.w64.b0", !1210, i64 0}
!1210 = !{!"000002090605F060.w128.b0", !1211, i64 0}
!1211 = !{!"000002090605F060.w256.b0", !1212, i64 0}
!1212 = !{!"000002090605F060.w512.b0", !1213, i64 0}
!1213 = !{!"000002090605F060.w1024.b0", !1214, i64 0}
!1214 = !{!"000002090605F060", !21, i64 0}
!1215 = !{!1216, !1216, i64 0}
!1216 = !{!"000002090605F060.w8.b8", !1207, i64 0}
!1217 = !{!1218, !1218, i64 0}
!1218 = !{!"000002090605F060.w8.b16", !1219, i64 0}
!1219 = !{!"000002090605F060.w16.b16", !1208, i64 0}
!1220 = !{!1221, !1221, i64 0}
!1221 = !{!"000002090605F060.w8.b24", !1219, i64 0}
!1222 = !{!1223, !1223, i64 0}
!1223 = !{!"000002090605F060.w8.b32", !1224, i64 0}
!1224 = !{!"000002090605F060.w16.b32", !1225, i64 0}
!1225 = !{!"000002090605F060.w32.b32", !1209, i64 0}
!1226 = !{!1227, !1227, i64 0}
!1227 = !{!"000002090605E160.w8.b8", !1228, i64 0}
!1228 = !{!"000002090605E160.w16.b0", !1229, i64 0}
!1229 = !{!"000002090605E160.w32.b0", !1230, i64 0}
!1230 = !{!"000002090605E160.w64.b0", !1231, i64 0}
!1231 = !{!"000002090605E160.w128.b0", !1232, i64 0}
!1232 = !{!"000002090605E160.w256.b0", !1233, i64 0}
!1233 = !{!"000002090605E160.w512.b0", !1234, i64 0}
!1234 = !{!"000002090605E160.w1024.b0", !1235, i64 0}
!1235 = !{!"000002090605E160", !21, i64 0}
!1236 = !{!1237, !1237, i64 0}
!1237 = !{!"000002090605E160.w8.b16", !1238, i64 0}
!1238 = !{!"000002090605E160.w16.b16", !1229, i64 0}
!1239 = !{!1240, !1240, i64 0}
!1240 = !{!"000002090605E160.w8.b24", !1238, i64 0}
!1241 = !{!1242, !1242, i64 0}
!1242 = !{!"000002090605E160.w8.b32", !1243, i64 0}
!1243 = !{!"000002090605E160.w16.b32", !1244, i64 0}
!1244 = !{!"000002090605E160.w32.b32", !1230, i64 0}
!1245 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1246)
!1246 = !{!1247, !1248, !1249, !1250, !1251, !1252}
!1247 = !DILocalVariable(name: "arg1", arg: 1, scope: !1245, file: !1, type: !8)
!1248 = !DILocalVariable(name: "arg2", arg: 2, scope: !1245, file: !1, type: !9)
!1249 = !DILocalVariable(name: "arg3", arg: 3, scope: !1245, file: !1, type: !7)
!1250 = !DILocalVariable(name: "arg4", arg: 4, scope: !1245, file: !1, type: !8)
!1251 = !DILocalVariable(name: "arg5", arg: 5, scope: !1245, file: !1, type: !9)
!1252 = !DILocalVariable(name: "arg6", arg: 6, scope: !1245, file: !1, type: !8)
!1253 = !DILocation(line: 0, scope: !1245)
!1254 = !{!1255, !1255, i64 0}
!1255 = !{!"00000209060A3370.w4.b0", !1256, i64 0}
!1256 = !{!"00000209060A3370.w8.b0", !1257, i64 0}
!1257 = !{!"00000209060A3370.w16.b0", !1258, i64 0}
!1258 = !{!"00000209060A3370.w32.b0", !1259, i64 0}
!1259 = !{!"00000209060A3370.w64.b0", !1260, i64 0}
!1260 = !{!"00000209060A3370.w128.b0", !1261, i64 0}
!1261 = !{!"00000209060A3370.w256.b0", !1262, i64 0}
!1262 = !{!"00000209060A3370.w512.b0", !1263, i64 0}
!1263 = !{!"00000209060A3370.w1024.b0", !1264, i64 0}
!1264 = !{!"00000209060A3370", !21, i64 0}
!1265 = !{!1266, !1266, i64 0}
!1266 = !{!"00000209060A3370.w4.b4", !1256, i64 0}
!1267 = !{!1268, !1268, i64 0}
!1268 = !{!"00000209060A3370.w4.b8", !1269, i64 0}
!1269 = !{!"00000209060A3370.w8.b8", !1257, i64 0}
!1270 = !{!1271, !1271, i64 0}
!1271 = !{!"00000209060A3370.w4.b12", !1269, i64 0}
!1272 = !{!1273, !1273, i64 0}
!1273 = !{!"00000209060A3370.w4.b16", !1274, i64 0}
!1274 = !{!"00000209060A3370.w8.b16", !1275, i64 0}
!1275 = !{!"00000209060A3370.w16.b16", !1258, i64 0}
!1276 = !{!1277, !1277, i64 0}
!1277 = !{!"00000209060A3370.w4.b20", !1274, i64 0}
!1278 = !{!1279, !1279, i64 0}
!1279 = !{!"00000209060AE330.w8.b0", !1280, i64 0}
!1280 = !{!"00000209060AE330.w16.b0", !1281, i64 0}
!1281 = !{!"00000209060AE330.w32.b0", !1282, i64 0}
!1282 = !{!"00000209060AE330.w64.b0", !1283, i64 0}
!1283 = !{!"00000209060AE330.w128.b0", !1284, i64 0}
!1284 = !{!"00000209060AE330.w256.b0", !1285, i64 0}
!1285 = !{!"00000209060AE330.w512.b0", !1286, i64 0}
!1286 = !{!"00000209060AE330.w1024.b0", !1287, i64 0}
!1287 = !{!"00000209060AE330", !21, i64 0}
!1288 = !{!1289, !1289, i64 0}
!1289 = !{!"00000209060AE330.w8.b8", !1280, i64 0}
!1290 = !{!1291, !1291, i64 0}
!1291 = !{!"00000209060AE330.w8.b16", !1292, i64 0}
!1292 = !{!"00000209060AE330.w16.b16", !1281, i64 0}
!1293 = !{!1294, !1294, i64 0}
!1294 = !{!"00000209060AE330.w8.b24", !1292, i64 0}
!1295 = !{!1296, !1296, i64 0}
!1296 = !{!"00000209060AE330.w8.b32", !1297, i64 0}
!1297 = !{!"00000209060AE330.w16.b32", !1298, i64 0}
!1298 = !{!"00000209060AE330.w32.b32", !1282, i64 0}
!1299 = !{!1300, !1300, i64 0}
!1300 = !{!"00000209060AE5F0.w8.b8", !1301, i64 0}
!1301 = !{!"00000209060AE5F0.w16.b0", !1302, i64 0}
!1302 = !{!"00000209060AE5F0.w32.b0", !1303, i64 0}
!1303 = !{!"00000209060AE5F0.w64.b0", !1304, i64 0}
!1304 = !{!"00000209060AE5F0.w128.b0", !1305, i64 0}
!1305 = !{!"00000209060AE5F0.w256.b0", !1306, i64 0}
!1306 = !{!"00000209060AE5F0.w512.b0", !1307, i64 0}
!1307 = !{!"00000209060AE5F0.w1024.b0", !1308, i64 0}
!1308 = !{!"00000209060AE5F0", !21, i64 0}
!1309 = !{!1310, !1310, i64 0}
!1310 = !{!"00000209060AE5F0.w8.b16", !1311, i64 0}
!1311 = !{!"00000209060AE5F0.w16.b16", !1302, i64 0}
!1312 = !{!1313, !1313, i64 0}
!1313 = !{!"00000209060AE5F0.w8.b24", !1311, i64 0}
!1314 = !{!1315, !1315, i64 0}
!1315 = !{!"00000209060AE5F0.w8.b32", !1316, i64 0}
!1316 = !{!"00000209060AE5F0.w16.b32", !1317, i64 0}
!1317 = !{!"00000209060AE5F0.w32.b32", !1303, i64 0}
!1318 = !{!1319, !1319, i64 0}
!1319 = !{!"00000209060AFCB0.w8.b0", !1320, i64 0}
!1320 = !{!"00000209060AFCB0.w16.b0", !1321, i64 0}
!1321 = !{!"00000209060AFCB0.w32.b0", !1322, i64 0}
!1322 = !{!"00000209060AFCB0.w64.b0", !1323, i64 0}
!1323 = !{!"00000209060AFCB0.w128.b0", !1324, i64 0}
!1324 = !{!"00000209060AFCB0.w256.b0", !1325, i64 0}
!1325 = !{!"00000209060AFCB0.w512.b0", !1326, i64 0}
!1326 = !{!"00000209060AFCB0.w1024.b0", !1327, i64 0}
!1327 = !{!"00000209060AFCB0", !21, i64 0}
!1328 = !{!1329, !1329, i64 0}
!1329 = !{!"00000209060AFCB0.w8.b8", !1320, i64 0}
!1330 = !{!1331, !1331, i64 0}
!1331 = !{!"00000209060AFCB0.w8.b16", !1332, i64 0}
!1332 = !{!"00000209060AFCB0.w16.b16", !1321, i64 0}
!1333 = !{!1334, !1334, i64 0}
!1334 = !{!"00000209060AFCB0.w8.b24", !1332, i64 0}
!1335 = !{!1336, !1336, i64 0}
!1336 = !{!"00000209060AFCB0.w8.b32", !1337, i64 0}
!1337 = !{!"00000209060AFCB0.w16.b32", !1338, i64 0}
!1338 = !{!"00000209060AFCB0.w32.b32", !1322, i64 0}
!1339 = !{!1340, !1340, i64 0}
!1340 = !{!"00000209060AFCF0.w8.b8", !1341, i64 0}
!1341 = !{!"00000209060AFCF0.w16.b0", !1342, i64 0}
!1342 = !{!"00000209060AFCF0.w32.b0", !1343, i64 0}
!1343 = !{!"00000209060AFCF0.w64.b0", !1344, i64 0}
!1344 = !{!"00000209060AFCF0.w128.b0", !1345, i64 0}
!1345 = !{!"00000209060AFCF0.w256.b0", !1346, i64 0}
!1346 = !{!"00000209060AFCF0.w512.b0", !1347, i64 0}
!1347 = !{!"00000209060AFCF0.w1024.b0", !1348, i64 0}
!1348 = !{!"00000209060AFCF0", !21, i64 0}
!1349 = !{!1350, !1350, i64 0}
!1350 = !{!"00000209060AFCF0.w8.b32", !1351, i64 0}
!1351 = !{!"00000209060AFCF0.w16.b32", !1352, i64 0}
!1352 = !{!"00000209060AFCF0.w32.b32", !1343, i64 0}
!1353 = !{!1354, !1354, i64 0}
!1354 = !{!"00000209060B0BB0.w8.b0", !1355, i64 0}
!1355 = !{!"00000209060B0BB0.w16.b0", !1356, i64 0}
!1356 = !{!"00000209060B0BB0.w32.b0", !1357, i64 0}
!1357 = !{!"00000209060B0BB0.w64.b0", !1358, i64 0}
!1358 = !{!"00000209060B0BB0.w128.b0", !1359, i64 0}
!1359 = !{!"00000209060B0BB0.w256.b0", !1360, i64 0}
!1360 = !{!"00000209060B0BB0.w512.b0", !1361, i64 0}
!1361 = !{!"00000209060B0BB0.w1024.b0", !1362, i64 0}
!1362 = !{!"00000209060B0BB0", !21, i64 0}
!1363 = !{!1364, !1364, i64 0}
!1364 = !{!"00000209060B0BB0.w8.b8", !1355, i64 0}
!1365 = !{!1366, !1366, i64 0}
!1366 = !{!"00000209060B0BB0.w8.b16", !1367, i64 0}
!1367 = !{!"00000209060B0BB0.w16.b16", !1356, i64 0}
!1368 = !{!1369, !1369, i64 0}
!1369 = !{!"00000209060B0BB0.w8.b24", !1367, i64 0}
!1370 = !{!1371, !1371, i64 0}
!1371 = !{!"00000209060B0BB0.w8.b32", !1372, i64 0}
!1372 = !{!"00000209060B0BB0.w16.b32", !1373, i64 0}
!1373 = !{!"00000209060B0BB0.w32.b32", !1357, i64 0}
!1374 = !{!1375, !1375, i64 0}
!1375 = !{!"00000209060B1070.w8.b8", !1376, i64 0}
!1376 = !{!"00000209060B1070.w16.b0", !1377, i64 0}
!1377 = !{!"00000209060B1070.w32.b0", !1378, i64 0}
!1378 = !{!"00000209060B1070.w64.b0", !1379, i64 0}
!1379 = !{!"00000209060B1070.w128.b0", !1380, i64 0}
!1380 = !{!"00000209060B1070.w256.b0", !1381, i64 0}
!1381 = !{!"00000209060B1070.w512.b0", !1382, i64 0}
!1382 = !{!"00000209060B1070.w1024.b0", !1383, i64 0}
!1383 = !{!"00000209060B1070", !21, i64 0}
!1384 = !{!1385, !1385, i64 0}
!1385 = !{!"00000209060B1070.w8.b32", !1386, i64 0}
!1386 = !{!"00000209060B1070.w16.b32", !1387, i64 0}
!1387 = !{!"00000209060B1070.w32.b32", !1378, i64 0}
!1388 = !{!1389, !1389, i64 0}
!1389 = !{!"00000209060B2A70.w8.b0", !1390, i64 0}
!1390 = !{!"00000209060B2A70.w16.b0", !1391, i64 0}
!1391 = !{!"00000209060B2A70.w32.b0", !1392, i64 0}
!1392 = !{!"00000209060B2A70.w64.b0", !1393, i64 0}
!1393 = !{!"00000209060B2A70.w128.b0", !1394, i64 0}
!1394 = !{!"00000209060B2A70.w256.b0", !1395, i64 0}
!1395 = !{!"00000209060B2A70.w512.b0", !1396, i64 0}
!1396 = !{!"00000209060B2A70.w1024.b0", !1397, i64 0}
!1397 = !{!"00000209060B2A70", !21, i64 0}
!1398 = !{!1399, !1399, i64 0}
!1399 = !{!"00000209060B2A70.w8.b8", !1390, i64 0}
!1400 = !{!1401, !1401, i64 0}
!1401 = !{!"00000209060B2A70.w8.b16", !1402, i64 0}
!1402 = !{!"00000209060B2A70.w16.b16", !1391, i64 0}
!1403 = !{!1404, !1404, i64 0}
!1404 = !{!"00000209060B2A70.w8.b24", !1402, i64 0}
!1405 = !{!1406, !1406, i64 0}
!1406 = !{!"00000209060B2A70.w8.b32", !1407, i64 0}
!1407 = !{!"00000209060B2A70.w16.b32", !1408, i64 0}
!1408 = !{!"00000209060B2A70.w32.b32", !1392, i64 0}
!1409 = !{!1410, !1410, i64 0}
!1410 = !{!"00000209060B30F0.w8.b8", !1411, i64 0}
!1411 = !{!"00000209060B30F0.w16.b0", !1412, i64 0}
!1412 = !{!"00000209060B30F0.w32.b0", !1413, i64 0}
!1413 = !{!"00000209060B30F0.w64.b0", !1414, i64 0}
!1414 = !{!"00000209060B30F0.w128.b0", !1415, i64 0}
!1415 = !{!"00000209060B30F0.w256.b0", !1416, i64 0}
!1416 = !{!"00000209060B30F0.w512.b0", !1417, i64 0}
!1417 = !{!"00000209060B30F0.w1024.b0", !1418, i64 0}
!1418 = !{!"00000209060B30F0", !21, i64 0}
!1419 = !{!1420, !1420, i64 0}
!1420 = !{!"00000209060B30F0.w8.b16", !1421, i64 0}
!1421 = !{!"00000209060B30F0.w16.b16", !1412, i64 0}
!1422 = !{!1423, !1423, i64 0}
!1423 = !{!"00000209060B30F0.w8.b24", !1421, i64 0}
!1424 = !{!1425, !1425, i64 0}
!1425 = !{!"00000209060B30F0.w8.b32", !1426, i64 0}
!1426 = !{!"00000209060B30F0.w16.b32", !1427, i64 0}
!1427 = !{!"00000209060B30F0.w32.b32", !1413, i64 0}
!1428 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1429)
!1429 = !{!1430, !1431, !1432, !1433, !1434, !1435}
!1430 = !DILocalVariable(name: "arg1", arg: 1, scope: !1428, file: !1, type: !8)
!1431 = !DILocalVariable(name: "arg2", arg: 2, scope: !1428, file: !1, type: !9)
!1432 = !DILocalVariable(name: "arg3", arg: 3, scope: !1428, file: !1, type: !7)
!1433 = !DILocalVariable(name: "arg4", arg: 4, scope: !1428, file: !1, type: !8)
!1434 = !DILocalVariable(name: "arg5", arg: 5, scope: !1428, file: !1, type: !9)
!1435 = !DILocalVariable(name: "arg6", arg: 6, scope: !1428, file: !1, type: !8)
!1436 = !DILocation(line: 0, scope: !1428)
!1437 = !{!1438, !1438, i64 0}
!1438 = !{!"00000209061D2E30.w4.b0", !1439, i64 0}
!1439 = !{!"00000209061D2E30.w8.b0", !1440, i64 0}
!1440 = !{!"00000209061D2E30.w16.b0", !1441, i64 0}
!1441 = !{!"00000209061D2E30.w32.b0", !1442, i64 0}
!1442 = !{!"00000209061D2E30.w64.b0", !1443, i64 0}
!1443 = !{!"00000209061D2E30.w128.b0", !1444, i64 0}
!1444 = !{!"00000209061D2E30.w256.b0", !1445, i64 0}
!1445 = !{!"00000209061D2E30.w512.b0", !1446, i64 0}
!1446 = !{!"00000209061D2E30.w1024.b0", !1447, i64 0}
!1447 = !{!"00000209061D2E30", !21, i64 0}
!1448 = !{!1449, !1449, i64 0}
!1449 = !{!"00000209061D2E30.w4.b4", !1439, i64 0}
!1450 = !{!1451, !1451, i64 0}
!1451 = !{!"00000209061D2E30.w4.b8", !1452, i64 0}
!1452 = !{!"00000209061D2E30.w8.b8", !1440, i64 0}
!1453 = !{!1454, !1454, i64 0}
!1454 = !{!"00000209061D2E30.w4.b12", !1452, i64 0}
!1455 = !{!1456, !1456, i64 0}
!1456 = !{!"00000209061D2E30.w4.b16", !1457, i64 0}
!1457 = !{!"00000209061D2E30.w8.b16", !1458, i64 0}
!1458 = !{!"00000209061D2E30.w16.b16", !1441, i64 0}
!1459 = !{!1460, !1460, i64 0}
!1460 = !{!"00000209061D2E30.w4.b20", !1457, i64 0}
!1461 = !{!1462, !1462, i64 0}
!1462 = !{!"00000209061DA770.w8.b0", !1463, i64 0}
!1463 = !{!"00000209061DA770.w16.b0", !1464, i64 0}
!1464 = !{!"00000209061DA770.w32.b0", !1465, i64 0}
!1465 = !{!"00000209061DA770.w64.b0", !1466, i64 0}
!1466 = !{!"00000209061DA770.w128.b0", !1467, i64 0}
!1467 = !{!"00000209061DA770.w256.b0", !1468, i64 0}
!1468 = !{!"00000209061DA770.w512.b0", !1469, i64 0}
!1469 = !{!"00000209061DA770.w1024.b0", !1470, i64 0}
!1470 = !{!"00000209061DA770", !21, i64 0}
!1471 = !{!1472, !1472, i64 0}
!1472 = !{!"00000209061DA770.w8.b8", !1463, i64 0}
!1473 = !{!1474, !1474, i64 0}
!1474 = !{!"00000209061DA770.w8.b16", !1475, i64 0}
!1475 = !{!"00000209061DA770.w16.b16", !1464, i64 0}
!1476 = !{!1477, !1477, i64 0}
!1477 = !{!"00000209061DA770.w8.b24", !1475, i64 0}
!1478 = !{!1479, !1479, i64 0}
!1479 = !{!"00000209061DA770.w8.b32", !1480, i64 0}
!1480 = !{!"00000209061DA770.w16.b32", !1481, i64 0}
!1481 = !{!"00000209061DA770.w32.b32", !1465, i64 0}
!1482 = !{!1483, !1483, i64 0}
!1483 = !{!"00000209061DC430.w8.b8", !1484, i64 0}
!1484 = !{!"00000209061DC430.w16.b0", !1485, i64 0}
!1485 = !{!"00000209061DC430.w32.b0", !1486, i64 0}
!1486 = !{!"00000209061DC430.w64.b0", !1487, i64 0}
!1487 = !{!"00000209061DC430.w128.b0", !1488, i64 0}
!1488 = !{!"00000209061DC430.w256.b0", !1489, i64 0}
!1489 = !{!"00000209061DC430.w512.b0", !1490, i64 0}
!1490 = !{!"00000209061DC430.w1024.b0", !1491, i64 0}
!1491 = !{!"00000209061DC430", !21, i64 0}
!1492 = !{!1493, !1493, i64 0}
!1493 = !{!"00000209061DC430.w8.b16", !1494, i64 0}
!1494 = !{!"00000209061DC430.w16.b16", !1485, i64 0}
!1495 = !{!1496, !1496, i64 0}
!1496 = !{!"00000209061DC430.w8.b24", !1494, i64 0}
!1497 = !{!1498, !1498, i64 0}
!1498 = !{!"00000209061DC430.w8.b32", !1499, i64 0}
!1499 = !{!"00000209061DC430.w16.b32", !1500, i64 0}
!1500 = !{!"00000209061DC430.w32.b32", !1486, i64 0}
!1501 = !{!1502, !1502, i64 0}
!1502 = !{!"00000209061DD5F0.w8.b0", !1503, i64 0}
!1503 = !{!"00000209061DD5F0.w16.b0", !1504, i64 0}
!1504 = !{!"00000209061DD5F0.w32.b0", !1505, i64 0}
!1505 = !{!"00000209061DD5F0.w64.b0", !1506, i64 0}
!1506 = !{!"00000209061DD5F0.w128.b0", !1507, i64 0}
!1507 = !{!"00000209061DD5F0.w256.b0", !1508, i64 0}
!1508 = !{!"00000209061DD5F0.w512.b0", !1509, i64 0}
!1509 = !{!"00000209061DD5F0.w1024.b0", !1510, i64 0}
!1510 = !{!"00000209061DD5F0", !21, i64 0}
!1511 = !{!1512, !1512, i64 0}
!1512 = !{!"00000209061DD5F0.w8.b8", !1503, i64 0}
!1513 = !{!1514, !1514, i64 0}
!1514 = !{!"00000209061DD5F0.w8.b16", !1515, i64 0}
!1515 = !{!"00000209061DD5F0.w16.b16", !1504, i64 0}
!1516 = !{!1517, !1517, i64 0}
!1517 = !{!"00000209061DD5F0.w8.b24", !1515, i64 0}
!1518 = !{!1519, !1519, i64 0}
!1519 = !{!"00000209061DD5F0.w8.b32", !1520, i64 0}
!1520 = !{!"00000209061DD5F0.w16.b32", !1521, i64 0}
!1521 = !{!"00000209061DD5F0.w32.b32", !1505, i64 0}
!1522 = !{!1523, !1523, i64 0}
!1523 = !{!"00000209061DDCB0.w8.b8", !1524, i64 0}
!1524 = !{!"00000209061DDCB0.w16.b0", !1525, i64 0}
!1525 = !{!"00000209061DDCB0.w32.b0", !1526, i64 0}
!1526 = !{!"00000209061DDCB0.w64.b0", !1527, i64 0}
!1527 = !{!"00000209061DDCB0.w128.b0", !1528, i64 0}
!1528 = !{!"00000209061DDCB0.w256.b0", !1529, i64 0}
!1529 = !{!"00000209061DDCB0.w512.b0", !1530, i64 0}
!1530 = !{!"00000209061DDCB0.w1024.b0", !1531, i64 0}
!1531 = !{!"00000209061DDCB0", !21, i64 0}
!1532 = !{!1533, !1533, i64 0}
!1533 = !{!"00000209061DDCB0.w8.b32", !1534, i64 0}
!1534 = !{!"00000209061DDCB0.w16.b32", !1535, i64 0}
!1535 = !{!"00000209061DDCB0.w32.b32", !1526, i64 0}
!1536 = !{!1537, !1537, i64 0}
!1537 = !{!"00000209061DE5B0.w8.b0", !1538, i64 0}
!1538 = !{!"00000209061DE5B0.w16.b0", !1539, i64 0}
!1539 = !{!"00000209061DE5B0.w32.b0", !1540, i64 0}
!1540 = !{!"00000209061DE5B0.w64.b0", !1541, i64 0}
!1541 = !{!"00000209061DE5B0.w128.b0", !1542, i64 0}
!1542 = !{!"00000209061DE5B0.w256.b0", !1543, i64 0}
!1543 = !{!"00000209061DE5B0.w512.b0", !1544, i64 0}
!1544 = !{!"00000209061DE5B0.w1024.b0", !1545, i64 0}
!1545 = !{!"00000209061DE5B0", !21, i64 0}
!1546 = !{!1547, !1547, i64 0}
!1547 = !{!"00000209061DE5B0.w8.b8", !1538, i64 0}
!1548 = !{!1549, !1549, i64 0}
!1549 = !{!"00000209061DE5B0.w8.b16", !1550, i64 0}
!1550 = !{!"00000209061DE5B0.w16.b16", !1539, i64 0}
!1551 = !{!1552, !1552, i64 0}
!1552 = !{!"00000209061DE5B0.w8.b24", !1550, i64 0}
!1553 = !{!1554, !1554, i64 0}
!1554 = !{!"00000209061DE5B0.w8.b32", !1555, i64 0}
!1555 = !{!"00000209061DE5B0.w16.b32", !1556, i64 0}
!1556 = !{!"00000209061DE5B0.w32.b32", !1540, i64 0}
!1557 = !{!1558, !1558, i64 0}
!1558 = !{!"00000209061DF030.w8.b8", !1559, i64 0}
!1559 = !{!"00000209061DF030.w16.b0", !1560, i64 0}
!1560 = !{!"00000209061DF030.w32.b0", !1561, i64 0}
!1561 = !{!"00000209061DF030.w64.b0", !1562, i64 0}
!1562 = !{!"00000209061DF030.w128.b0", !1563, i64 0}
!1563 = !{!"00000209061DF030.w256.b0", !1564, i64 0}
!1564 = !{!"00000209061DF030.w512.b0", !1565, i64 0}
!1565 = !{!"00000209061DF030.w1024.b0", !1566, i64 0}
!1566 = !{!"00000209061DF030", !21, i64 0}
!1567 = !{!1568, !1568, i64 0}
!1568 = !{!"00000209061DF030.w8.b32", !1569, i64 0}
!1569 = !{!"00000209061DF030.w16.b32", !1570, i64 0}
!1570 = !{!"00000209061DF030.w32.b32", !1561, i64 0}
!1571 = !{!1572, !1572, i64 0}
!1572 = !{!"00000209061E0330.w8.b0", !1573, i64 0}
!1573 = !{!"00000209061E0330.w16.b0", !1574, i64 0}
!1574 = !{!"00000209061E0330.w32.b0", !1575, i64 0}
!1575 = !{!"00000209061E0330.w64.b0", !1576, i64 0}
!1576 = !{!"00000209061E0330.w128.b0", !1577, i64 0}
!1577 = !{!"00000209061E0330.w256.b0", !1578, i64 0}
!1578 = !{!"00000209061E0330.w512.b0", !1579, i64 0}
!1579 = !{!"00000209061E0330.w1024.b0", !1580, i64 0}
!1580 = !{!"00000209061E0330", !21, i64 0}
!1581 = !{!1582, !1582, i64 0}
!1582 = !{!"00000209061E0330.w8.b8", !1573, i64 0}
!1583 = !{!1584, !1584, i64 0}
!1584 = !{!"00000209061E0330.w8.b16", !1585, i64 0}
!1585 = !{!"00000209061E0330.w16.b16", !1574, i64 0}
!1586 = !{!1587, !1587, i64 0}
!1587 = !{!"00000209061E0330.w8.b24", !1585, i64 0}
!1588 = !{!1589, !1589, i64 0}
!1589 = !{!"00000209061E0330.w8.b32", !1590, i64 0}
!1590 = !{!"00000209061E0330.w16.b32", !1591, i64 0}
!1591 = !{!"00000209061E0330.w32.b32", !1575, i64 0}
!1592 = !{!1593, !1593, i64 0}
!1593 = !{!"00000209061E0470.w8.b8", !1594, i64 0}
!1594 = !{!"00000209061E0470.w16.b0", !1595, i64 0}
!1595 = !{!"00000209061E0470.w32.b0", !1596, i64 0}
!1596 = !{!"00000209061E0470.w64.b0", !1597, i64 0}
!1597 = !{!"00000209061E0470.w128.b0", !1598, i64 0}
!1598 = !{!"00000209061E0470.w256.b0", !1599, i64 0}
!1599 = !{!"00000209061E0470.w512.b0", !1600, i64 0}
!1600 = !{!"00000209061E0470.w1024.b0", !1601, i64 0}
!1601 = !{!"00000209061E0470", !21, i64 0}
!1602 = !{!1603, !1603, i64 0}
!1603 = !{!"00000209061E0470.w8.b16", !1604, i64 0}
!1604 = !{!"00000209061E0470.w16.b16", !1595, i64 0}
!1605 = !{!1606, !1606, i64 0}
!1606 = !{!"00000209061E0470.w8.b24", !1604, i64 0}
!1607 = !{!1608, !1608, i64 0}
!1608 = !{!"00000209061E0470.w8.b32", !1609, i64 0}
!1609 = !{!"00000209061E0470.w16.b32", !1610, i64 0}
!1610 = !{!"00000209061E0470.w32.b32", !1596, i64 0}
!1611 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1612)
!1612 = !{!1613, !1614, !1615, !1616, !1617, !1618}
!1613 = !DILocalVariable(name: "arg1", arg: 1, scope: !1611, file: !1, type: !8)
!1614 = !DILocalVariable(name: "arg2", arg: 2, scope: !1611, file: !1, type: !9)
!1615 = !DILocalVariable(name: "arg3", arg: 3, scope: !1611, file: !1, type: !7)
!1616 = !DILocalVariable(name: "arg4", arg: 4, scope: !1611, file: !1, type: !8)
!1617 = !DILocalVariable(name: "arg5", arg: 5, scope: !1611, file: !1, type: !9)
!1618 = !DILocalVariable(name: "arg6", arg: 6, scope: !1611, file: !1, type: !8)
!1619 = !DILocation(line: 0, scope: !1611)
!1620 = !{!1621, !1621, i64 0}
!1621 = !{!"00000209061D0130.w4.b0", !1622, i64 0}
!1622 = !{!"00000209061D0130.w8.b0", !1623, i64 0}
!1623 = !{!"00000209061D0130.w16.b0", !1624, i64 0}
!1624 = !{!"00000209061D0130.w32.b0", !1625, i64 0}
!1625 = !{!"00000209061D0130.w64.b0", !1626, i64 0}
!1626 = !{!"00000209061D0130.w128.b0", !1627, i64 0}
!1627 = !{!"00000209061D0130.w256.b0", !1628, i64 0}
!1628 = !{!"00000209061D0130.w512.b0", !1629, i64 0}
!1629 = !{!"00000209061D0130.w1024.b0", !1630, i64 0}
!1630 = !{!"00000209061D0130", !21, i64 0}
!1631 = !{!1632, !1632, i64 0}
!1632 = !{!"00000209061D0130.w4.b4", !1622, i64 0}
!1633 = !{!1634, !1634, i64 0}
!1634 = !{!"00000209061D0130.w4.b8", !1635, i64 0}
!1635 = !{!"00000209061D0130.w8.b8", !1623, i64 0}
!1636 = !{!1637, !1637, i64 0}
!1637 = !{!"00000209061D0130.w4.b12", !1635, i64 0}
!1638 = !{!1639, !1639, i64 0}
!1639 = !{!"00000209061D0130.w4.b16", !1640, i64 0}
!1640 = !{!"00000209061D0130.w8.b16", !1641, i64 0}
!1641 = !{!"00000209061D0130.w16.b16", !1624, i64 0}
!1642 = !{!1643, !1643, i64 0}
!1643 = !{!"00000209061D0130.w4.b20", !1640, i64 0}
!1644 = !{!1645, !1645, i64 0}
!1645 = !{!"00000209061D42B0.w8.b0", !1646, i64 0}
!1646 = !{!"00000209061D42B0.w16.b0", !1647, i64 0}
!1647 = !{!"00000209061D42B0.w32.b0", !1648, i64 0}
!1648 = !{!"00000209061D42B0.w64.b0", !1649, i64 0}
!1649 = !{!"00000209061D42B0.w128.b0", !1650, i64 0}
!1650 = !{!"00000209061D42B0.w256.b0", !1651, i64 0}
!1651 = !{!"00000209061D42B0.w512.b0", !1652, i64 0}
!1652 = !{!"00000209061D42B0.w1024.b0", !1653, i64 0}
!1653 = !{!"00000209061D42B0", !21, i64 0}
!1654 = !{!1655, !1655, i64 0}
!1655 = !{!"00000209061D42B0.w8.b8", !1646, i64 0}
!1656 = !{!1657, !1657, i64 0}
!1657 = !{!"00000209061D42B0.w8.b16", !1658, i64 0}
!1658 = !{!"00000209061D42B0.w16.b16", !1647, i64 0}
!1659 = !{!1660, !1660, i64 0}
!1660 = !{!"00000209061D42B0.w8.b24", !1658, i64 0}
!1661 = !{!1662, !1662, i64 0}
!1662 = !{!"00000209061D42B0.w8.b32", !1663, i64 0}
!1663 = !{!"00000209061D42B0.w16.b32", !1664, i64 0}
!1664 = !{!"00000209061D42B0.w32.b32", !1648, i64 0}
!1665 = !{!1666, !1666, i64 0}
!1666 = !{!"00000209061D6570.w8.b8", !1667, i64 0}
!1667 = !{!"00000209061D6570.w16.b0", !1668, i64 0}
!1668 = !{!"00000209061D6570.w32.b0", !1669, i64 0}
!1669 = !{!"00000209061D6570.w64.b0", !1670, i64 0}
!1670 = !{!"00000209061D6570.w128.b0", !1671, i64 0}
!1671 = !{!"00000209061D6570.w256.b0", !1672, i64 0}
!1672 = !{!"00000209061D6570.w512.b0", !1673, i64 0}
!1673 = !{!"00000209061D6570.w1024.b0", !1674, i64 0}
!1674 = !{!"00000209061D6570", !21, i64 0}
!1675 = !{!1676, !1676, i64 0}
!1676 = !{!"00000209061D6570.w8.b16", !1677, i64 0}
!1677 = !{!"00000209061D6570.w16.b16", !1668, i64 0}
!1678 = !{!1679, !1679, i64 0}
!1679 = !{!"00000209061D6570.w8.b24", !1677, i64 0}
!1680 = !{!1681, !1681, i64 0}
!1681 = !{!"00000209061D6570.w8.b32", !1682, i64 0}
!1682 = !{!"00000209061D6570.w16.b32", !1683, i64 0}
!1683 = !{!"00000209061D6570.w32.b32", !1669, i64 0}
!1684 = !{!1685, !1685, i64 0}
!1685 = !{!"00000209061D79F0.w8.b0", !1686, i64 0}
!1686 = !{!"00000209061D79F0.w16.b0", !1687, i64 0}
!1687 = !{!"00000209061D79F0.w32.b0", !1688, i64 0}
!1688 = !{!"00000209061D79F0.w64.b0", !1689, i64 0}
!1689 = !{!"00000209061D79F0.w128.b0", !1690, i64 0}
!1690 = !{!"00000209061D79F0.w256.b0", !1691, i64 0}
!1691 = !{!"00000209061D79F0.w512.b0", !1692, i64 0}
!1692 = !{!"00000209061D79F0.w1024.b0", !1693, i64 0}
!1693 = !{!"00000209061D79F0", !21, i64 0}
!1694 = !{!1695, !1695, i64 0}
!1695 = !{!"00000209061D79F0.w8.b8", !1686, i64 0}
!1696 = !{!1697, !1697, i64 0}
!1697 = !{!"00000209061D79F0.w8.b16", !1698, i64 0}
!1698 = !{!"00000209061D79F0.w16.b16", !1687, i64 0}
!1699 = !{!1700, !1700, i64 0}
!1700 = !{!"00000209061D79F0.w8.b24", !1698, i64 0}
!1701 = !{!1702, !1702, i64 0}
!1702 = !{!"00000209061D79F0.w8.b32", !1703, i64 0}
!1703 = !{!"00000209061D79F0.w16.b32", !1704, i64 0}
!1704 = !{!"00000209061D79F0.w32.b32", !1688, i64 0}
!1705 = !{!1706, !1706, i64 0}
!1706 = !{!"00000209061D7FF0.w8.b8", !1707, i64 0}
!1707 = !{!"00000209061D7FF0.w16.b0", !1708, i64 0}
!1708 = !{!"00000209061D7FF0.w32.b0", !1709, i64 0}
!1709 = !{!"00000209061D7FF0.w64.b0", !1710, i64 0}
!1710 = !{!"00000209061D7FF0.w128.b0", !1711, i64 0}
!1711 = !{!"00000209061D7FF0.w256.b0", !1712, i64 0}
!1712 = !{!"00000209061D7FF0.w512.b0", !1713, i64 0}
!1713 = !{!"00000209061D7FF0.w1024.b0", !1714, i64 0}
!1714 = !{!"00000209061D7FF0", !21, i64 0}
!1715 = !{!1716, !1716, i64 0}
!1716 = !{!"00000209061D7FF0.w8.b32", !1717, i64 0}
!1717 = !{!"00000209061D7FF0.w16.b32", !1718, i64 0}
!1718 = !{!"00000209061D7FF0.w32.b32", !1709, i64 0}
!1719 = !{!1720, !1720, i64 0}
!1720 = !{!"00000209061D71B0.w8.b0", !1721, i64 0}
!1721 = !{!"00000209061D71B0.w16.b0", !1722, i64 0}
!1722 = !{!"00000209061D71B0.w32.b0", !1723, i64 0}
!1723 = !{!"00000209061D71B0.w64.b0", !1724, i64 0}
!1724 = !{!"00000209061D71B0.w128.b0", !1725, i64 0}
!1725 = !{!"00000209061D71B0.w256.b0", !1726, i64 0}
!1726 = !{!"00000209061D71B0.w512.b0", !1727, i64 0}
!1727 = !{!"00000209061D71B0.w1024.b0", !1728, i64 0}
!1728 = !{!"00000209061D71B0", !21, i64 0}
!1729 = !{!1730, !1730, i64 0}
!1730 = !{!"00000209061D71B0.w8.b8", !1721, i64 0}
!1731 = !{!1732, !1732, i64 0}
!1732 = !{!"00000209061D71B0.w8.b16", !1733, i64 0}
!1733 = !{!"00000209061D71B0.w16.b16", !1722, i64 0}
!1734 = !{!1735, !1735, i64 0}
!1735 = !{!"00000209061D71B0.w8.b24", !1733, i64 0}
!1736 = !{!1737, !1737, i64 0}
!1737 = !{!"00000209061D71B0.w8.b32", !1738, i64 0}
!1738 = !{!"00000209061D71B0.w16.b32", !1739, i64 0}
!1739 = !{!"00000209061D71B0.w32.b32", !1723, i64 0}
!1740 = !{!1741, !1741, i64 0}
!1741 = !{!"00000209061D8570.w8.b8", !1742, i64 0}
!1742 = !{!"00000209061D8570.w16.b0", !1743, i64 0}
!1743 = !{!"00000209061D8570.w32.b0", !1744, i64 0}
!1744 = !{!"00000209061D8570.w64.b0", !1745, i64 0}
!1745 = !{!"00000209061D8570.w128.b0", !1746, i64 0}
!1746 = !{!"00000209061D8570.w256.b0", !1747, i64 0}
!1747 = !{!"00000209061D8570.w512.b0", !1748, i64 0}
!1748 = !{!"00000209061D8570.w1024.b0", !1749, i64 0}
!1749 = !{!"00000209061D8570", !21, i64 0}
!1750 = !{!1751, !1751, i64 0}
!1751 = !{!"00000209061D8570.w8.b32", !1752, i64 0}
!1752 = !{!"00000209061D8570.w16.b32", !1753, i64 0}
!1753 = !{!"00000209061D8570.w32.b32", !1744, i64 0}
!1754 = !{!1755, !1755, i64 0}
!1755 = !{!"00000209061D9930.w8.b0", !1756, i64 0}
!1756 = !{!"00000209061D9930.w16.b0", !1757, i64 0}
!1757 = !{!"00000209061D9930.w32.b0", !1758, i64 0}
!1758 = !{!"00000209061D9930.w64.b0", !1759, i64 0}
!1759 = !{!"00000209061D9930.w128.b0", !1760, i64 0}
!1760 = !{!"00000209061D9930.w256.b0", !1761, i64 0}
!1761 = !{!"00000209061D9930.w512.b0", !1762, i64 0}
!1762 = !{!"00000209061D9930.w1024.b0", !1763, i64 0}
!1763 = !{!"00000209061D9930", !21, i64 0}
!1764 = !{!1765, !1765, i64 0}
!1765 = !{!"00000209061D9930.w8.b8", !1756, i64 0}
!1766 = !{!1767, !1767, i64 0}
!1767 = !{!"00000209061D9930.w8.b16", !1768, i64 0}
!1768 = !{!"00000209061D9930.w16.b16", !1757, i64 0}
!1769 = !{!1770, !1770, i64 0}
!1770 = !{!"00000209061D9930.w8.b24", !1768, i64 0}
!1771 = !{!1772, !1772, i64 0}
!1772 = !{!"00000209061D9930.w8.b32", !1773, i64 0}
!1773 = !{!"00000209061D9930.w16.b32", !1774, i64 0}
!1774 = !{!"00000209061D9930.w32.b32", !1758, i64 0}
!1775 = !{!1776, !1776, i64 0}
!1776 = !{!"00000209061DABF0.w8.b8", !1777, i64 0}
!1777 = !{!"00000209061DABF0.w16.b0", !1778, i64 0}
!1778 = !{!"00000209061DABF0.w32.b0", !1779, i64 0}
!1779 = !{!"00000209061DABF0.w64.b0", !1780, i64 0}
!1780 = !{!"00000209061DABF0.w128.b0", !1781, i64 0}
!1781 = !{!"00000209061DABF0.w256.b0", !1782, i64 0}
!1782 = !{!"00000209061DABF0.w512.b0", !1783, i64 0}
!1783 = !{!"00000209061DABF0.w1024.b0", !1784, i64 0}
!1784 = !{!"00000209061DABF0", !21, i64 0}
!1785 = !{!1786, !1786, i64 0}
!1786 = !{!"00000209061DABF0.w8.b16", !1787, i64 0}
!1787 = !{!"00000209061DABF0.w16.b16", !1778, i64 0}
!1788 = !{!1789, !1789, i64 0}
!1789 = !{!"00000209061DABF0.w8.b24", !1787, i64 0}
!1790 = !{!1791, !1791, i64 0}
!1791 = !{!"00000209061DABF0.w8.b32", !1792, i64 0}
!1792 = !{!"00000209061DABF0.w16.b32", !1793, i64 0}
!1793 = !{!"00000209061DABF0.w32.b32", !1779, i64 0}
!1794 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1795)
!1795 = !{!1796, !1797, !1798, !1799, !1800, !1801}
!1796 = !DILocalVariable(name: "arg1", arg: 1, scope: !1794, file: !1, type: !8)
!1797 = !DILocalVariable(name: "arg2", arg: 2, scope: !1794, file: !1, type: !9)
!1798 = !DILocalVariable(name: "arg3", arg: 3, scope: !1794, file: !1, type: !7)
!1799 = !DILocalVariable(name: "arg4", arg: 4, scope: !1794, file: !1, type: !8)
!1800 = !DILocalVariable(name: "arg5", arg: 5, scope: !1794, file: !1, type: !9)
!1801 = !DILocalVariable(name: "arg6", arg: 6, scope: !1794, file: !1, type: !8)
!1802 = !DILocation(line: 0, scope: !1794)
!1803 = !{!1804, !1804, i64 0}
!1804 = !{!"00000209061CB6B0.w4.b0", !1805, i64 0}
!1805 = !{!"00000209061CB6B0.w8.b0", !1806, i64 0}
!1806 = !{!"00000209061CB6B0.w16.b0", !1807, i64 0}
!1807 = !{!"00000209061CB6B0.w32.b0", !1808, i64 0}
!1808 = !{!"00000209061CB6B0.w64.b0", !1809, i64 0}
!1809 = !{!"00000209061CB6B0.w128.b0", !1810, i64 0}
!1810 = !{!"00000209061CB6B0.w256.b0", !1811, i64 0}
!1811 = !{!"00000209061CB6B0.w512.b0", !1812, i64 0}
!1812 = !{!"00000209061CB6B0.w1024.b0", !1813, i64 0}
!1813 = !{!"00000209061CB6B0", !21, i64 0}
!1814 = !{!1815, !1815, i64 0}
!1815 = !{!"00000209061CB6B0.w4.b4", !1805, i64 0}
!1816 = !{!1817, !1817, i64 0}
!1817 = !{!"00000209061CB6B0.w4.b8", !1818, i64 0}
!1818 = !{!"00000209061CB6B0.w8.b8", !1806, i64 0}
!1819 = !{!1820, !1820, i64 0}
!1820 = !{!"00000209061CB6B0.w4.b12", !1818, i64 0}
!1821 = !{!1822, !1822, i64 0}
!1822 = !{!"00000209061CB6B0.w4.b16", !1823, i64 0}
!1823 = !{!"00000209061CB6B0.w8.b16", !1824, i64 0}
!1824 = !{!"00000209061CB6B0.w16.b16", !1807, i64 0}
!1825 = !{!1826, !1826, i64 0}
!1826 = !{!"00000209061CB6B0.w4.b20", !1823, i64 0}
!1827 = !{!1828, !1828, i64 0}
!1828 = !{!"00000209061CF1B0.w8.b0", !1829, i64 0}
!1829 = !{!"00000209061CF1B0.w16.b0", !1830, i64 0}
!1830 = !{!"00000209061CF1B0.w32.b0", !1831, i64 0}
!1831 = !{!"00000209061CF1B0.w64.b0", !1832, i64 0}
!1832 = !{!"00000209061CF1B0.w128.b0", !1833, i64 0}
!1833 = !{!"00000209061CF1B0.w256.b0", !1834, i64 0}
!1834 = !{!"00000209061CF1B0.w512.b0", !1835, i64 0}
!1835 = !{!"00000209061CF1B0.w1024.b0", !1836, i64 0}
!1836 = !{!"00000209061CF1B0", !21, i64 0}
!1837 = !{!1838, !1838, i64 0}
!1838 = !{!"00000209061CF1B0.w8.b8", !1829, i64 0}
!1839 = !{!1840, !1840, i64 0}
!1840 = !{!"00000209061CF1B0.w8.b16", !1841, i64 0}
!1841 = !{!"00000209061CF1B0.w16.b16", !1830, i64 0}
!1842 = !{!1843, !1843, i64 0}
!1843 = !{!"00000209061CF1B0.w8.b24", !1841, i64 0}
!1844 = !{!1845, !1845, i64 0}
!1845 = !{!"00000209061CF1B0.w8.b32", !1846, i64 0}
!1846 = !{!"00000209061CF1B0.w16.b32", !1847, i64 0}
!1847 = !{!"00000209061CF1B0.w32.b32", !1831, i64 0}
!1848 = !{!1849, !1849, i64 0}
!1849 = !{!"00000209061D0370.w8.b8", !1850, i64 0}
!1850 = !{!"00000209061D0370.w16.b0", !1851, i64 0}
!1851 = !{!"00000209061D0370.w32.b0", !1852, i64 0}
!1852 = !{!"00000209061D0370.w64.b0", !1853, i64 0}
!1853 = !{!"00000209061D0370.w128.b0", !1854, i64 0}
!1854 = !{!"00000209061D0370.w256.b0", !1855, i64 0}
!1855 = !{!"00000209061D0370.w512.b0", !1856, i64 0}
!1856 = !{!"00000209061D0370.w1024.b0", !1857, i64 0}
!1857 = !{!"00000209061D0370", !21, i64 0}
!1858 = !{!1859, !1859, i64 0}
!1859 = !{!"00000209061D0370.w8.b16", !1860, i64 0}
!1860 = !{!"00000209061D0370.w16.b16", !1851, i64 0}
!1861 = !{!1862, !1862, i64 0}
!1862 = !{!"00000209061D0370.w8.b24", !1860, i64 0}
!1863 = !{!1864, !1864, i64 0}
!1864 = !{!"00000209061D0370.w8.b32", !1865, i64 0}
!1865 = !{!"00000209061D0370.w16.b32", !1866, i64 0}
!1866 = !{!"00000209061D0370.w32.b32", !1852, i64 0}
!1867 = !{!1868, !1868, i64 0}
!1868 = !{!"00000209061D0EF0.w8.b0", !1869, i64 0}
!1869 = !{!"00000209061D0EF0.w16.b0", !1870, i64 0}
!1870 = !{!"00000209061D0EF0.w32.b0", !1871, i64 0}
!1871 = !{!"00000209061D0EF0.w64.b0", !1872, i64 0}
!1872 = !{!"00000209061D0EF0.w128.b0", !1873, i64 0}
!1873 = !{!"00000209061D0EF0.w256.b0", !1874, i64 0}
!1874 = !{!"00000209061D0EF0.w512.b0", !1875, i64 0}
!1875 = !{!"00000209061D0EF0.w1024.b0", !1876, i64 0}
!1876 = !{!"00000209061D0EF0", !21, i64 0}
!1877 = !{!1878, !1878, i64 0}
!1878 = !{!"00000209061D0EF0.w8.b8", !1869, i64 0}
!1879 = !{!1880, !1880, i64 0}
!1880 = !{!"00000209061D0EF0.w8.b16", !1881, i64 0}
!1881 = !{!"00000209061D0EF0.w16.b16", !1870, i64 0}
!1882 = !{!1883, !1883, i64 0}
!1883 = !{!"00000209061D0EF0.w8.b24", !1881, i64 0}
!1884 = !{!1885, !1885, i64 0}
!1885 = !{!"00000209061D0EF0.w8.b32", !1886, i64 0}
!1886 = !{!"00000209061D0EF0.w16.b32", !1887, i64 0}
!1887 = !{!"00000209061D0EF0.w32.b32", !1871, i64 0}
!1888 = !{!1889, !1889, i64 0}
!1889 = !{!"00000209061D1470.w8.b8", !1890, i64 0}
!1890 = !{!"00000209061D1470.w16.b0", !1891, i64 0}
!1891 = !{!"00000209061D1470.w32.b0", !1892, i64 0}
!1892 = !{!"00000209061D1470.w64.b0", !1893, i64 0}
!1893 = !{!"00000209061D1470.w128.b0", !1894, i64 0}
!1894 = !{!"00000209061D1470.w256.b0", !1895, i64 0}
!1895 = !{!"00000209061D1470.w512.b0", !1896, i64 0}
!1896 = !{!"00000209061D1470.w1024.b0", !1897, i64 0}
!1897 = !{!"00000209061D1470", !21, i64 0}
!1898 = !{!1899, !1899, i64 0}
!1899 = !{!"00000209061D1470.w8.b32", !1900, i64 0}
!1900 = !{!"00000209061D1470.w16.b32", !1901, i64 0}
!1901 = !{!"00000209061D1470.w32.b32", !1892, i64 0}
!1902 = !{!1903, !1903, i64 0}
!1903 = !{!"00000209061D2030.w8.b0", !1904, i64 0}
!1904 = !{!"00000209061D2030.w16.b0", !1905, i64 0}
!1905 = !{!"00000209061D2030.w32.b0", !1906, i64 0}
!1906 = !{!"00000209061D2030.w64.b0", !1907, i64 0}
!1907 = !{!"00000209061D2030.w128.b0", !1908, i64 0}
!1908 = !{!"00000209061D2030.w256.b0", !1909, i64 0}
!1909 = !{!"00000209061D2030.w512.b0", !1910, i64 0}
!1910 = !{!"00000209061D2030.w1024.b0", !1911, i64 0}
!1911 = !{!"00000209061D2030", !21, i64 0}
!1912 = !{!1913, !1913, i64 0}
!1913 = !{!"00000209061D2030.w8.b8", !1904, i64 0}
!1914 = !{!1915, !1915, i64 0}
!1915 = !{!"00000209061D2030.w8.b16", !1916, i64 0}
!1916 = !{!"00000209061D2030.w16.b16", !1905, i64 0}
!1917 = !{!1918, !1918, i64 0}
!1918 = !{!"00000209061D2030.w8.b24", !1916, i64 0}
!1919 = !{!1920, !1920, i64 0}
!1920 = !{!"00000209061D2030.w8.b32", !1921, i64 0}
!1921 = !{!"00000209061D2030.w16.b32", !1922, i64 0}
!1922 = !{!"00000209061D2030.w32.b32", !1906, i64 0}
!1923 = !{!1924, !1924, i64 0}
!1924 = !{!"00000209061D1A30.w8.b8", !1925, i64 0}
!1925 = !{!"00000209061D1A30.w16.b0", !1926, i64 0}
!1926 = !{!"00000209061D1A30.w32.b0", !1927, i64 0}
!1927 = !{!"00000209061D1A30.w64.b0", !1928, i64 0}
!1928 = !{!"00000209061D1A30.w128.b0", !1929, i64 0}
!1929 = !{!"00000209061D1A30.w256.b0", !1930, i64 0}
!1930 = !{!"00000209061D1A30.w512.b0", !1931, i64 0}
!1931 = !{!"00000209061D1A30.w1024.b0", !1932, i64 0}
!1932 = !{!"00000209061D1A30", !21, i64 0}
!1933 = !{!1934, !1934, i64 0}
!1934 = !{!"00000209061D1A30.w8.b32", !1935, i64 0}
!1935 = !{!"00000209061D1A30.w16.b32", !1936, i64 0}
!1936 = !{!"00000209061D1A30.w32.b32", !1927, i64 0}
!1937 = !{!1938, !1938, i64 0}
!1938 = !{!"00000209061D3530.w8.b0", !1939, i64 0}
!1939 = !{!"00000209061D3530.w16.b0", !1940, i64 0}
!1940 = !{!"00000209061D3530.w32.b0", !1941, i64 0}
!1941 = !{!"00000209061D3530.w64.b0", !1942, i64 0}
!1942 = !{!"00000209061D3530.w128.b0", !1943, i64 0}
!1943 = !{!"00000209061D3530.w256.b0", !1944, i64 0}
!1944 = !{!"00000209061D3530.w512.b0", !1945, i64 0}
!1945 = !{!"00000209061D3530.w1024.b0", !1946, i64 0}
!1946 = !{!"00000209061D3530", !21, i64 0}
!1947 = !{!1948, !1948, i64 0}
!1948 = !{!"00000209061D3530.w8.b8", !1939, i64 0}
!1949 = !{!1950, !1950, i64 0}
!1950 = !{!"00000209061D3530.w8.b16", !1951, i64 0}
!1951 = !{!"00000209061D3530.w16.b16", !1940, i64 0}
!1952 = !{!1953, !1953, i64 0}
!1953 = !{!"00000209061D3530.w8.b24", !1951, i64 0}
!1954 = !{!1955, !1955, i64 0}
!1955 = !{!"00000209061D3530.w8.b32", !1956, i64 0}
!1956 = !{!"00000209061D3530.w16.b32", !1957, i64 0}
!1957 = !{!"00000209061D3530.w32.b32", !1941, i64 0}
!1958 = !{!1959, !1959, i64 0}
!1959 = !{!"00000209061D4430.w8.b8", !1960, i64 0}
!1960 = !{!"00000209061D4430.w16.b0", !1961, i64 0}
!1961 = !{!"00000209061D4430.w32.b0", !1962, i64 0}
!1962 = !{!"00000209061D4430.w64.b0", !1963, i64 0}
!1963 = !{!"00000209061D4430.w128.b0", !1964, i64 0}
!1964 = !{!"00000209061D4430.w256.b0", !1965, i64 0}
!1965 = !{!"00000209061D4430.w512.b0", !1966, i64 0}
!1966 = !{!"00000209061D4430.w1024.b0", !1967, i64 0}
!1967 = !{!"00000209061D4430", !21, i64 0}
!1968 = !{!1969, !1969, i64 0}
!1969 = !{!"00000209061D4430.w8.b16", !1970, i64 0}
!1970 = !{!"00000209061D4430.w16.b16", !1961, i64 0}
!1971 = !{!1972, !1972, i64 0}
!1972 = !{!"00000209061D4430.w8.b24", !1970, i64 0}
!1973 = !{!1974, !1974, i64 0}
!1974 = !{!"00000209061D4430.w8.b32", !1975, i64 0}
!1975 = !{!"00000209061D4430.w16.b32", !1976, i64 0}
!1976 = !{!"00000209061D4430.w32.b32", !1962, i64 0}
!1977 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1978)
!1978 = !{!1979, !1980, !1981, !1982, !1983, !1984}
!1979 = !DILocalVariable(name: "arg1", arg: 1, scope: !1977, file: !1, type: !8)
!1980 = !DILocalVariable(name: "arg2", arg: 2, scope: !1977, file: !1, type: !9)
!1981 = !DILocalVariable(name: "arg3", arg: 3, scope: !1977, file: !1, type: !7)
!1982 = !DILocalVariable(name: "arg4", arg: 4, scope: !1977, file: !1, type: !8)
!1983 = !DILocalVariable(name: "arg5", arg: 5, scope: !1977, file: !1, type: !9)
!1984 = !DILocalVariable(name: "arg6", arg: 6, scope: !1977, file: !1, type: !8)
!1985 = !DILocation(line: 0, scope: !1977)
!1986 = !{!1987, !1987, i64 0}
!1987 = !{!"00000209060421E0.w4.b0", !1988, i64 0}
!1988 = !{!"00000209060421E0.w8.b0", !1989, i64 0}
!1989 = !{!"00000209060421E0.w16.b0", !1990, i64 0}
!1990 = !{!"00000209060421E0.w32.b0", !1991, i64 0}
!1991 = !{!"00000209060421E0.w64.b0", !1992, i64 0}
!1992 = !{!"00000209060421E0.w128.b0", !1993, i64 0}
!1993 = !{!"00000209060421E0.w256.b0", !1994, i64 0}
!1994 = !{!"00000209060421E0.w512.b0", !1995, i64 0}
!1995 = !{!"00000209060421E0.w1024.b0", !1996, i64 0}
!1996 = !{!"00000209060421E0", !21, i64 0}
!1997 = !{!1998, !1998, i64 0}
!1998 = !{!"00000209060421E0.w4.b4", !1988, i64 0}
!1999 = !{!2000, !2000, i64 0}
!2000 = !{!"00000209060421E0.w4.b8", !2001, i64 0}
!2001 = !{!"00000209060421E0.w8.b8", !1989, i64 0}
!2002 = !{!2003, !2003, i64 0}
!2003 = !{!"00000209060421E0.w4.b12", !2001, i64 0}
!2004 = !{!2005, !2005, i64 0}
!2005 = !{!"00000209060421E0.w4.b16", !2006, i64 0}
!2006 = !{!"00000209060421E0.w8.b16", !2007, i64 0}
!2007 = !{!"00000209060421E0.w16.b16", !1990, i64 0}
!2008 = !{!2009, !2009, i64 0}
!2009 = !{!"00000209060455E0.w8.b0", !2010, i64 0}
!2010 = !{!"00000209060455E0.w16.b0", !2011, i64 0}
!2011 = !{!"00000209060455E0.w32.b0", !2012, i64 0}
!2012 = !{!"00000209060455E0.w64.b0", !2013, i64 0}
!2013 = !{!"00000209060455E0.w128.b0", !2014, i64 0}
!2014 = !{!"00000209060455E0.w256.b0", !2015, i64 0}
!2015 = !{!"00000209060455E0.w512.b0", !2016, i64 0}
!2016 = !{!"00000209060455E0.w1024.b0", !2017, i64 0}
!2017 = !{!"00000209060455E0", !21, i64 0}
!2018 = !{!2019, !2019, i64 0}
!2019 = !{!"00000209060455E0.w8.b8", !2010, i64 0}
!2020 = !{!2021, !2021, i64 0}
!2021 = !{!"00000209060455E0.w8.b16", !2022, i64 0}
!2022 = !{!"00000209060455E0.w16.b16", !2011, i64 0}
!2023 = !{!2024, !2024, i64 0}
!2024 = !{!"00000209060455E0.w8.b24", !2022, i64 0}
!2025 = !{!2026, !2026, i64 0}
!2026 = !{!"00000209060455E0.w8.b32", !2027, i64 0}
!2027 = !{!"00000209060455E0.w16.b32", !2028, i64 0}
!2028 = !{!"00000209060455E0.w32.b32", !2012, i64 0}
!2029 = !{!2030, !2030, i64 0}
!2030 = !{!"00000209060457E0.w8.b8", !2031, i64 0}
!2031 = !{!"00000209060457E0.w16.b0", !2032, i64 0}
!2032 = !{!"00000209060457E0.w32.b0", !2033, i64 0}
!2033 = !{!"00000209060457E0.w64.b0", !2034, i64 0}
!2034 = !{!"00000209060457E0.w128.b0", !2035, i64 0}
!2035 = !{!"00000209060457E0.w256.b0", !2036, i64 0}
!2036 = !{!"00000209060457E0.w512.b0", !2037, i64 0}
!2037 = !{!"00000209060457E0.w1024.b0", !2038, i64 0}
!2038 = !{!"00000209060457E0", !21, i64 0}
!2039 = !{!2040, !2040, i64 0}
!2040 = !{!"00000209060457E0.w8.b16", !2041, i64 0}
!2041 = !{!"00000209060457E0.w16.b16", !2032, i64 0}
!2042 = !{!2043, !2043, i64 0}
!2043 = !{!"00000209060457E0.w8.b24", !2041, i64 0}
!2044 = !{!2045, !2045, i64 0}
!2045 = !{!"00000209060457E0.w8.b32", !2046, i64 0}
!2046 = !{!"00000209060457E0.w16.b32", !2047, i64 0}
!2047 = !{!"00000209060457E0.w32.b32", !2033, i64 0}
!2048 = !{!2049, !2049, i64 0}
!2049 = !{!"0000020906046B20.w8.b0", !2050, i64 0}
!2050 = !{!"0000020906046B20.w16.b0", !2051, i64 0}
!2051 = !{!"0000020906046B20.w32.b0", !2052, i64 0}
!2052 = !{!"0000020906046B20.w64.b0", !2053, i64 0}
!2053 = !{!"0000020906046B20.w128.b0", !2054, i64 0}
!2054 = !{!"0000020906046B20.w256.b0", !2055, i64 0}
!2055 = !{!"0000020906046B20.w512.b0", !2056, i64 0}
!2056 = !{!"0000020906046B20.w1024.b0", !2057, i64 0}
!2057 = !{!"0000020906046B20", !21, i64 0}
!2058 = !{!2059, !2059, i64 0}
!2059 = !{!"0000020906046B20.w8.b8", !2050, i64 0}
!2060 = !{!2061, !2061, i64 0}
!2061 = !{!"0000020906046B20.w8.b16", !2062, i64 0}
!2062 = !{!"0000020906046B20.w16.b16", !2051, i64 0}
!2063 = !{!2064, !2064, i64 0}
!2064 = !{!"0000020906046B20.w8.b24", !2062, i64 0}
!2065 = !{!2066, !2066, i64 0}
!2066 = !{!"0000020906046B20.w8.b32", !2067, i64 0}
!2067 = !{!"0000020906046B20.w16.b32", !2068, i64 0}
!2068 = !{!"0000020906046B20.w32.b32", !2052, i64 0}
!2069 = !{!2070, !2070, i64 0}
!2070 = !{!"00000209060467E0.w8.b8", !2071, i64 0}
!2071 = !{!"00000209060467E0.w16.b0", !2072, i64 0}
!2072 = !{!"00000209060467E0.w32.b0", !2073, i64 0}
!2073 = !{!"00000209060467E0.w64.b0", !2074, i64 0}
!2074 = !{!"00000209060467E0.w128.b0", !2075, i64 0}
!2075 = !{!"00000209060467E0.w256.b0", !2076, i64 0}
!2076 = !{!"00000209060467E0.w512.b0", !2077, i64 0}
!2077 = !{!"00000209060467E0.w1024.b0", !2078, i64 0}
!2078 = !{!"00000209060467E0", !21, i64 0}
!2079 = !{!2080, !2080, i64 0}
!2080 = !{!"00000209060467E0.w8.b32", !2081, i64 0}
!2081 = !{!"00000209060467E0.w16.b32", !2082, i64 0}
!2082 = !{!"00000209060467E0.w32.b32", !2073, i64 0}
!2083 = !{!2084, !2084, i64 0}
!2084 = !{!"0000020906047DA0.w8.b0", !2085, i64 0}
!2085 = !{!"0000020906047DA0.w16.b0", !2086, i64 0}
!2086 = !{!"0000020906047DA0.w32.b0", !2087, i64 0}
!2087 = !{!"0000020906047DA0.w64.b0", !2088, i64 0}
!2088 = !{!"0000020906047DA0.w128.b0", !2089, i64 0}
!2089 = !{!"0000020906047DA0.w256.b0", !2090, i64 0}
!2090 = !{!"0000020906047DA0.w512.b0", !2091, i64 0}
!2091 = !{!"0000020906047DA0.w1024.b0", !2092, i64 0}
!2092 = !{!"0000020906047DA0", !21, i64 0}
!2093 = !{!2094, !2094, i64 0}
!2094 = !{!"0000020906047DA0.w8.b8", !2085, i64 0}
!2095 = !{!2096, !2096, i64 0}
!2096 = !{!"0000020906047DA0.w8.b16", !2097, i64 0}
!2097 = !{!"0000020906047DA0.w16.b16", !2086, i64 0}
!2098 = !{!2099, !2099, i64 0}
!2099 = !{!"0000020906047DA0.w8.b24", !2097, i64 0}
!2100 = !{!2101, !2101, i64 0}
!2101 = !{!"0000020906047DA0.w8.b32", !2102, i64 0}
!2102 = !{!"0000020906047DA0.w16.b32", !2103, i64 0}
!2103 = !{!"0000020906047DA0.w32.b32", !2087, i64 0}
!2104 = !{!2105, !2105, i64 0}
!2105 = !{!"0000020906047460.w8.b8", !2106, i64 0}
!2106 = !{!"0000020906047460.w16.b0", !2107, i64 0}
!2107 = !{!"0000020906047460.w32.b0", !2108, i64 0}
!2108 = !{!"0000020906047460.w64.b0", !2109, i64 0}
!2109 = !{!"0000020906047460.w128.b0", !2110, i64 0}
!2110 = !{!"0000020906047460.w256.b0", !2111, i64 0}
!2111 = !{!"0000020906047460.w512.b0", !2112, i64 0}
!2112 = !{!"0000020906047460.w1024.b0", !2113, i64 0}
!2113 = !{!"0000020906047460", !21, i64 0}
!2114 = !{!2115, !2115, i64 0}
!2115 = !{!"0000020906047460.w8.b32", !2116, i64 0}
!2116 = !{!"0000020906047460.w16.b32", !2117, i64 0}
!2117 = !{!"0000020906047460.w32.b32", !2108, i64 0}
!2118 = !{!2119, !2119, i64 0}
!2119 = !{!"00000209060489E0.w8.b0", !2120, i64 0}
!2120 = !{!"00000209060489E0.w16.b0", !2121, i64 0}
!2121 = !{!"00000209060489E0.w32.b0", !2122, i64 0}
!2122 = !{!"00000209060489E0.w64.b0", !2123, i64 0}
!2123 = !{!"00000209060489E0.w128.b0", !2124, i64 0}
!2124 = !{!"00000209060489E0.w256.b0", !2125, i64 0}
!2125 = !{!"00000209060489E0.w512.b0", !2126, i64 0}
!2126 = !{!"00000209060489E0.w1024.b0", !2127, i64 0}
!2127 = !{!"00000209060489E0", !21, i64 0}
!2128 = !{!2129, !2129, i64 0}
!2129 = !{!"00000209060489E0.w8.b8", !2120, i64 0}
!2130 = !{!2131, !2131, i64 0}
!2131 = !{!"00000209060489E0.w8.b16", !2132, i64 0}
!2132 = !{!"00000209060489E0.w16.b16", !2121, i64 0}
!2133 = !{!2134, !2134, i64 0}
!2134 = !{!"00000209060489E0.w8.b24", !2132, i64 0}
!2135 = !{!2136, !2136, i64 0}
!2136 = !{!"00000209060489E0.w8.b32", !2137, i64 0}
!2137 = !{!"00000209060489E0.w16.b32", !2138, i64 0}
!2138 = !{!"00000209060489E0.w32.b32", !2122, i64 0}
!2139 = !{!2140, !2140, i64 0}
!2140 = !{!"0000020906049F60.w8.b8", !2141, i64 0}
!2141 = !{!"0000020906049F60.w16.b0", !2142, i64 0}
!2142 = !{!"0000020906049F60.w32.b0", !2143, i64 0}
!2143 = !{!"0000020906049F60.w64.b0", !2144, i64 0}
!2144 = !{!"0000020906049F60.w128.b0", !2145, i64 0}
!2145 = !{!"0000020906049F60.w256.b0", !2146, i64 0}
!2146 = !{!"0000020906049F60.w512.b0", !2147, i64 0}
!2147 = !{!"0000020906049F60.w1024.b0", !2148, i64 0}
!2148 = !{!"0000020906049F60", !21, i64 0}
!2149 = !{!2150, !2150, i64 0}
!2150 = !{!"0000020906049F60.w8.b16", !2151, i64 0}
!2151 = !{!"0000020906049F60.w16.b16", !2142, i64 0}
!2152 = !{!2153, !2153, i64 0}
!2153 = !{!"0000020906049F60.w8.b24", !2151, i64 0}
!2154 = !{!2155, !2155, i64 0}
!2155 = !{!"0000020906049F60.w8.b32", !2156, i64 0}
!2156 = !{!"0000020906049F60.w16.b32", !2157, i64 0}
!2157 = !{!"0000020906049F60.w32.b32", !2143, i64 0}
!2158 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2159)
!2159 = !{!2160, !2161, !2162, !2163, !2164, !2165}
!2160 = !DILocalVariable(name: "arg1", arg: 1, scope: !2158, file: !1, type: !8)
!2161 = !DILocalVariable(name: "arg2", arg: 2, scope: !2158, file: !1, type: !9)
!2162 = !DILocalVariable(name: "arg3", arg: 3, scope: !2158, file: !1, type: !7)
!2163 = !DILocalVariable(name: "arg4", arg: 4, scope: !2158, file: !1, type: !8)
!2164 = !DILocalVariable(name: "arg5", arg: 5, scope: !2158, file: !1, type: !9)
!2165 = !DILocalVariable(name: "arg6", arg: 6, scope: !2158, file: !1, type: !8)
!2166 = !DILocation(line: 0, scope: !2158)
!2167 = !{!2168, !2168, i64 0}
!2168 = !{!"000002090610C770.w4.b0", !2169, i64 0}
!2169 = !{!"000002090610C770.w8.b0", !2170, i64 0}
!2170 = !{!"000002090610C770.w16.b0", !2171, i64 0}
!2171 = !{!"000002090610C770.w32.b0", !2172, i64 0}
!2172 = !{!"000002090610C770.w64.b0", !2173, i64 0}
!2173 = !{!"000002090610C770.w128.b0", !2174, i64 0}
!2174 = !{!"000002090610C770.w256.b0", !2175, i64 0}
!2175 = !{!"000002090610C770.w512.b0", !2176, i64 0}
!2176 = !{!"000002090610C770.w1024.b0", !2177, i64 0}
!2177 = !{!"000002090610C770", !21, i64 0}
!2178 = !{!2179, !2179, i64 0}
!2179 = !{!"000002090610C770.w4.b4", !2169, i64 0}
!2180 = !{!2181, !2181, i64 0}
!2181 = !{!"000002090610C770.w4.b8", !2182, i64 0}
!2182 = !{!"000002090610C770.w8.b8", !2170, i64 0}
!2183 = !{!2184, !2184, i64 0}
!2184 = !{!"000002090610C770.w4.b12", !2182, i64 0}
!2185 = !{!2186, !2186, i64 0}
!2186 = !{!"000002090610C770.w4.b16", !2187, i64 0}
!2187 = !{!"000002090610C770.w8.b16", !2188, i64 0}
!2188 = !{!"000002090610C770.w16.b16", !2171, i64 0}
!2189 = !{!2190, !2190, i64 0}
!2190 = !{!"00000209061102B0.w8.b0", !2191, i64 0}
!2191 = !{!"00000209061102B0.w16.b0", !2192, i64 0}
!2192 = !{!"00000209061102B0.w32.b0", !2193, i64 0}
!2193 = !{!"00000209061102B0.w64.b0", !2194, i64 0}
!2194 = !{!"00000209061102B0.w128.b0", !2195, i64 0}
!2195 = !{!"00000209061102B0.w256.b0", !2196, i64 0}
!2196 = !{!"00000209061102B0.w512.b0", !2197, i64 0}
!2197 = !{!"00000209061102B0.w1024.b0", !2198, i64 0}
!2198 = !{!"00000209061102B0", !21, i64 0}
!2199 = !{!2200, !2200, i64 0}
!2200 = !{!"00000209061102B0.w8.b8", !2191, i64 0}
!2201 = !{!2202, !2202, i64 0}
!2202 = !{!"00000209061102B0.w8.b16", !2203, i64 0}
!2203 = !{!"00000209061102B0.w16.b16", !2192, i64 0}
!2204 = !{!2205, !2205, i64 0}
!2205 = !{!"00000209061102B0.w8.b24", !2203, i64 0}
!2206 = !{!2207, !2207, i64 0}
!2207 = !{!"00000209061102B0.w8.b32", !2208, i64 0}
!2208 = !{!"00000209061102B0.w16.b32", !2209, i64 0}
!2209 = !{!"00000209061102B0.w32.b32", !2193, i64 0}
!2210 = !{!2211, !2211, i64 0}
!2211 = !{!"00000209061139B0.w8.b8", !2212, i64 0}
!2212 = !{!"00000209061139B0.w16.b0", !2213, i64 0}
!2213 = !{!"00000209061139B0.w32.b0", !2214, i64 0}
!2214 = !{!"00000209061139B0.w64.b0", !2215, i64 0}
!2215 = !{!"00000209061139B0.w128.b0", !2216, i64 0}
!2216 = !{!"00000209061139B0.w256.b0", !2217, i64 0}
!2217 = !{!"00000209061139B0.w512.b0", !2218, i64 0}
!2218 = !{!"00000209061139B0.w1024.b0", !2219, i64 0}
!2219 = !{!"00000209061139B0", !21, i64 0}
!2220 = !{!2221, !2221, i64 0}
!2221 = !{!"00000209061139B0.w8.b16", !2222, i64 0}
!2222 = !{!"00000209061139B0.w16.b16", !2213, i64 0}
!2223 = !{!2224, !2224, i64 0}
!2224 = !{!"00000209061139B0.w8.b24", !2222, i64 0}
!2225 = !{!2226, !2226, i64 0}
!2226 = !{!"00000209061139B0.w8.b32", !2227, i64 0}
!2227 = !{!"00000209061139B0.w16.b32", !2228, i64 0}
!2228 = !{!"00000209061139B0.w32.b32", !2214, i64 0}
!2229 = !{!2230, !2230, i64 0}
!2230 = !{!"0000020906114130.w8.b0", !2231, i64 0}
!2231 = !{!"0000020906114130.w16.b0", !2232, i64 0}
!2232 = !{!"0000020906114130.w32.b0", !2233, i64 0}
!2233 = !{!"0000020906114130.w64.b0", !2234, i64 0}
!2234 = !{!"0000020906114130.w128.b0", !2235, i64 0}
!2235 = !{!"0000020906114130.w256.b0", !2236, i64 0}
!2236 = !{!"0000020906114130.w512.b0", !2237, i64 0}
!2237 = !{!"0000020906114130.w1024.b0", !2238, i64 0}
!2238 = !{!"0000020906114130", !21, i64 0}
!2239 = !{!2240, !2240, i64 0}
!2240 = !{!"0000020906114130.w8.b8", !2231, i64 0}
!2241 = !{!2242, !2242, i64 0}
!2242 = !{!"0000020906114130.w8.b16", !2243, i64 0}
!2243 = !{!"0000020906114130.w16.b16", !2232, i64 0}
!2244 = !{!2245, !2245, i64 0}
!2245 = !{!"0000020906114130.w8.b24", !2243, i64 0}
!2246 = !{!2247, !2247, i64 0}
!2247 = !{!"0000020906114130.w8.b32", !2248, i64 0}
!2248 = !{!"0000020906114130.w16.b32", !2249, i64 0}
!2249 = !{!"0000020906114130.w32.b32", !2233, i64 0}
!2250 = !{!2251, !2251, i64 0}
!2251 = !{!"0000020906114A70.w8.b8", !2252, i64 0}
!2252 = !{!"0000020906114A70.w16.b0", !2253, i64 0}
!2253 = !{!"0000020906114A70.w32.b0", !2254, i64 0}
!2254 = !{!"0000020906114A70.w64.b0", !2255, i64 0}
!2255 = !{!"0000020906114A70.w128.b0", !2256, i64 0}
!2256 = !{!"0000020906114A70.w256.b0", !2257, i64 0}
!2257 = !{!"0000020906114A70.w512.b0", !2258, i64 0}
!2258 = !{!"0000020906114A70.w1024.b0", !2259, i64 0}
!2259 = !{!"0000020906114A70", !21, i64 0}
!2260 = !{!2261, !2261, i64 0}
!2261 = !{!"0000020906114A70.w8.b32", !2262, i64 0}
!2262 = !{!"0000020906114A70.w16.b32", !2263, i64 0}
!2263 = !{!"0000020906114A70.w32.b32", !2254, i64 0}
!2264 = !{!2265, !2265, i64 0}
!2265 = !{!"0000020906114FF0.w8.b0", !2266, i64 0}
!2266 = !{!"0000020906114FF0.w16.b0", !2267, i64 0}
!2267 = !{!"0000020906114FF0.w32.b0", !2268, i64 0}
!2268 = !{!"0000020906114FF0.w64.b0", !2269, i64 0}
!2269 = !{!"0000020906114FF0.w128.b0", !2270, i64 0}
!2270 = !{!"0000020906114FF0.w256.b0", !2271, i64 0}
!2271 = !{!"0000020906114FF0.w512.b0", !2272, i64 0}
!2272 = !{!"0000020906114FF0.w1024.b0", !2273, i64 0}
!2273 = !{!"0000020906114FF0", !21, i64 0}
!2274 = !{!2275, !2275, i64 0}
!2275 = !{!"0000020906114FF0.w8.b8", !2266, i64 0}
!2276 = !{!2277, !2277, i64 0}
!2277 = !{!"0000020906114FF0.w8.b16", !2278, i64 0}
!2278 = !{!"0000020906114FF0.w16.b16", !2267, i64 0}
!2279 = !{!2280, !2280, i64 0}
!2280 = !{!"0000020906114FF0.w8.b24", !2278, i64 0}
!2281 = !{!2282, !2282, i64 0}
!2282 = !{!"0000020906114FF0.w8.b32", !2283, i64 0}
!2283 = !{!"0000020906114FF0.w16.b32", !2284, i64 0}
!2284 = !{!"0000020906114FF0.w32.b32", !2268, i64 0}
!2285 = !{!2286, !2286, i64 0}
!2286 = !{!"0000020906115530.w8.b8", !2287, i64 0}
!2287 = !{!"0000020906115530.w16.b0", !2288, i64 0}
!2288 = !{!"0000020906115530.w32.b0", !2289, i64 0}
!2289 = !{!"0000020906115530.w64.b0", !2290, i64 0}
!2290 = !{!"0000020906115530.w128.b0", !2291, i64 0}
!2291 = !{!"0000020906115530.w256.b0", !2292, i64 0}
!2292 = !{!"0000020906115530.w512.b0", !2293, i64 0}
!2293 = !{!"0000020906115530.w1024.b0", !2294, i64 0}
!2294 = !{!"0000020906115530", !21, i64 0}
!2295 = !{!2296, !2296, i64 0}
!2296 = !{!"0000020906115530.w8.b32", !2297, i64 0}
!2297 = !{!"0000020906115530.w16.b32", !2298, i64 0}
!2298 = !{!"0000020906115530.w32.b32", !2289, i64 0}
!2299 = !{!2300, !2300, i64 0}
!2300 = !{!"0000020906116E70.w8.b0", !2301, i64 0}
!2301 = !{!"0000020906116E70.w16.b0", !2302, i64 0}
!2302 = !{!"0000020906116E70.w32.b0", !2303, i64 0}
!2303 = !{!"0000020906116E70.w64.b0", !2304, i64 0}
!2304 = !{!"0000020906116E70.w128.b0", !2305, i64 0}
!2305 = !{!"0000020906116E70.w256.b0", !2306, i64 0}
!2306 = !{!"0000020906116E70.w512.b0", !2307, i64 0}
!2307 = !{!"0000020906116E70.w1024.b0", !2308, i64 0}
!2308 = !{!"0000020906116E70", !21, i64 0}
!2309 = !{!2310, !2310, i64 0}
!2310 = !{!"0000020906116E70.w8.b8", !2301, i64 0}
!2311 = !{!2312, !2312, i64 0}
!2312 = !{!"0000020906116E70.w8.b16", !2313, i64 0}
!2313 = !{!"0000020906116E70.w16.b16", !2302, i64 0}
!2314 = !{!2315, !2315, i64 0}
!2315 = !{!"0000020906116E70.w8.b24", !2313, i64 0}
!2316 = !{!2317, !2317, i64 0}
!2317 = !{!"0000020906116E70.w8.b32", !2318, i64 0}
!2318 = !{!"0000020906116E70.w16.b32", !2319, i64 0}
!2319 = !{!"0000020906116E70.w32.b32", !2303, i64 0}
!2320 = !{!2321, !2321, i64 0}
!2321 = !{!"0000020906117070.w8.b8", !2322, i64 0}
!2322 = !{!"0000020906117070.w16.b0", !2323, i64 0}
!2323 = !{!"0000020906117070.w32.b0", !2324, i64 0}
!2324 = !{!"0000020906117070.w64.b0", !2325, i64 0}
!2325 = !{!"0000020906117070.w128.b0", !2326, i64 0}
!2326 = !{!"0000020906117070.w256.b0", !2327, i64 0}
!2327 = !{!"0000020906117070.w512.b0", !2328, i64 0}
!2328 = !{!"0000020906117070.w1024.b0", !2329, i64 0}
!2329 = !{!"0000020906117070", !21, i64 0}
!2330 = !{!2331, !2331, i64 0}
!2331 = !{!"0000020906117070.w8.b16", !2332, i64 0}
!2332 = !{!"0000020906117070.w16.b16", !2323, i64 0}
!2333 = !{!2334, !2334, i64 0}
!2334 = !{!"0000020906117070.w8.b24", !2332, i64 0}
!2335 = !{!2336, !2336, i64 0}
!2336 = !{!"0000020906117070.w8.b32", !2337, i64 0}
!2337 = !{!"0000020906117070.w16.b32", !2338, i64 0}
!2338 = !{!"0000020906117070.w32.b32", !2324, i64 0}
!2339 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2340)
!2340 = !{!2341, !2342, !2343, !2344, !2345, !2346}
!2341 = !DILocalVariable(name: "arg1", arg: 1, scope: !2339, file: !1, type: !8)
!2342 = !DILocalVariable(name: "arg2", arg: 2, scope: !2339, file: !1, type: !9)
!2343 = !DILocalVariable(name: "arg3", arg: 3, scope: !2339, file: !1, type: !7)
!2344 = !DILocalVariable(name: "arg4", arg: 4, scope: !2339, file: !1, type: !8)
!2345 = !DILocalVariable(name: "arg5", arg: 5, scope: !2339, file: !1, type: !9)
!2346 = !DILocalVariable(name: "arg6", arg: 6, scope: !2339, file: !1, type: !8)
!2347 = !DILocation(line: 0, scope: !2339)
!2348 = !{!2349, !2349, i64 0}
!2349 = !{!"0000020906169E70.w4.b0", !2350, i64 0}
!2350 = !{!"0000020906169E70.w8.b0", !2351, i64 0}
!2351 = !{!"0000020906169E70.w16.b0", !2352, i64 0}
!2352 = !{!"0000020906169E70.w32.b0", !2353, i64 0}
!2353 = !{!"0000020906169E70.w64.b0", !2354, i64 0}
!2354 = !{!"0000020906169E70.w128.b0", !2355, i64 0}
!2355 = !{!"0000020906169E70.w256.b0", !2356, i64 0}
!2356 = !{!"0000020906169E70.w512.b0", !2357, i64 0}
!2357 = !{!"0000020906169E70.w1024.b0", !2358, i64 0}
!2358 = !{!"0000020906169E70", !21, i64 0}
!2359 = !{!2360, !2360, i64 0}
!2360 = !{!"0000020906169E70.w4.b4", !2350, i64 0}
!2361 = !{!2362, !2362, i64 0}
!2362 = !{!"0000020906169E70.w4.b8", !2363, i64 0}
!2363 = !{!"0000020906169E70.w8.b8", !2351, i64 0}
!2364 = !{!2365, !2365, i64 0}
!2365 = !{!"0000020906169E70.w4.b12", !2363, i64 0}
!2366 = !{!2367, !2367, i64 0}
!2367 = !{!"0000020906169E70.w4.b16", !2368, i64 0}
!2368 = !{!"0000020906169E70.w8.b16", !2369, i64 0}
!2369 = !{!"0000020906169E70.w16.b16", !2352, i64 0}
!2370 = !{!2371, !2371, i64 0}
!2371 = !{!"000002090616AD70.w8.b0", !2372, i64 0}
!2372 = !{!"000002090616AD70.w16.b0", !2373, i64 0}
!2373 = !{!"000002090616AD70.w32.b0", !2374, i64 0}
!2374 = !{!"000002090616AD70.w64.b0", !2375, i64 0}
!2375 = !{!"000002090616AD70.w128.b0", !2376, i64 0}
!2376 = !{!"000002090616AD70.w256.b0", !2377, i64 0}
!2377 = !{!"000002090616AD70.w512.b0", !2378, i64 0}
!2378 = !{!"000002090616AD70.w1024.b0", !2379, i64 0}
!2379 = !{!"000002090616AD70", !21, i64 0}
!2380 = !{!2381, !2381, i64 0}
!2381 = !{!"000002090616AD70.w8.b8", !2372, i64 0}
!2382 = !{!2383, !2383, i64 0}
!2383 = !{!"000002090616AD70.w8.b16", !2384, i64 0}
!2384 = !{!"000002090616AD70.w16.b16", !2373, i64 0}
!2385 = !{!2386, !2386, i64 0}
!2386 = !{!"000002090616AD70.w8.b24", !2384, i64 0}
!2387 = !{!2388, !2388, i64 0}
!2388 = !{!"000002090616AD70.w8.b32", !2389, i64 0}
!2389 = !{!"000002090616AD70.w16.b32", !2390, i64 0}
!2390 = !{!"000002090616AD70.w32.b32", !2374, i64 0}
!2391 = !{!2392, !2392, i64 0}
!2392 = !{!"000002090616ABB0.w8.b8", !2393, i64 0}
!2393 = !{!"000002090616ABB0.w16.b0", !2394, i64 0}
!2394 = !{!"000002090616ABB0.w32.b0", !2395, i64 0}
!2395 = !{!"000002090616ABB0.w64.b0", !2396, i64 0}
!2396 = !{!"000002090616ABB0.w128.b0", !2397, i64 0}
!2397 = !{!"000002090616ABB0.w256.b0", !2398, i64 0}
!2398 = !{!"000002090616ABB0.w512.b0", !2399, i64 0}
!2399 = !{!"000002090616ABB0.w1024.b0", !2400, i64 0}
!2400 = !{!"000002090616ABB0", !21, i64 0}
!2401 = !{!2402, !2402, i64 0}
!2402 = !{!"000002090616ABB0.w8.b16", !2403, i64 0}
!2403 = !{!"000002090616ABB0.w16.b16", !2394, i64 0}
!2404 = !{!2405, !2405, i64 0}
!2405 = !{!"000002090616ABB0.w8.b24", !2403, i64 0}
!2406 = !{!2407, !2407, i64 0}
!2407 = !{!"000002090616ABB0.w8.b32", !2408, i64 0}
!2408 = !{!"000002090616ABB0.w16.b32", !2409, i64 0}
!2409 = !{!"000002090616ABB0.w32.b32", !2395, i64 0}
!2410 = !{!2411, !2411, i64 0}
!2411 = !{!"000002090616BD30.w8.b0", !2412, i64 0}
!2412 = !{!"000002090616BD30.w16.b0", !2413, i64 0}
!2413 = !{!"000002090616BD30.w32.b0", !2414, i64 0}
!2414 = !{!"000002090616BD30.w64.b0", !2415, i64 0}
!2415 = !{!"000002090616BD30.w128.b0", !2416, i64 0}
!2416 = !{!"000002090616BD30.w256.b0", !2417, i64 0}
!2417 = !{!"000002090616BD30.w512.b0", !2418, i64 0}
!2418 = !{!"000002090616BD30.w1024.b0", !2419, i64 0}
!2419 = !{!"000002090616BD30", !21, i64 0}
!2420 = !{!2421, !2421, i64 0}
!2421 = !{!"000002090616BD30.w8.b8", !2412, i64 0}
!2422 = !{!2423, !2423, i64 0}
!2423 = !{!"000002090616BD30.w8.b16", !2424, i64 0}
!2424 = !{!"000002090616BD30.w16.b16", !2413, i64 0}
!2425 = !{!2426, !2426, i64 0}
!2426 = !{!"000002090616BD30.w8.b24", !2424, i64 0}
!2427 = !{!2428, !2428, i64 0}
!2428 = !{!"000002090616BD30.w8.b32", !2429, i64 0}
!2429 = !{!"000002090616BD30.w16.b32", !2430, i64 0}
!2430 = !{!"000002090616BD30.w32.b32", !2414, i64 0}
!2431 = !{!2432, !2432, i64 0}
!2432 = !{!"000002090616B7F0.w8.b8", !2433, i64 0}
!2433 = !{!"000002090616B7F0.w16.b0", !2434, i64 0}
!2434 = !{!"000002090616B7F0.w32.b0", !2435, i64 0}
!2435 = !{!"000002090616B7F0.w64.b0", !2436, i64 0}
!2436 = !{!"000002090616B7F0.w128.b0", !2437, i64 0}
!2437 = !{!"000002090616B7F0.w256.b0", !2438, i64 0}
!2438 = !{!"000002090616B7F0.w512.b0", !2439, i64 0}
!2439 = !{!"000002090616B7F0.w1024.b0", !2440, i64 0}
!2440 = !{!"000002090616B7F0", !21, i64 0}
!2441 = !{!2442, !2442, i64 0}
!2442 = !{!"000002090616B7F0.w8.b32", !2443, i64 0}
!2443 = !{!"000002090616B7F0.w16.b32", !2444, i64 0}
!2444 = !{!"000002090616B7F0.w32.b32", !2435, i64 0}
!2445 = !{!2446, !2446, i64 0}
!2446 = !{!"000002090616CEF0.w8.b0", !2447, i64 0}
!2447 = !{!"000002090616CEF0.w16.b0", !2448, i64 0}
!2448 = !{!"000002090616CEF0.w32.b0", !2449, i64 0}
!2449 = !{!"000002090616CEF0.w64.b0", !2450, i64 0}
!2450 = !{!"000002090616CEF0.w128.b0", !2451, i64 0}
!2451 = !{!"000002090616CEF0.w256.b0", !2452, i64 0}
!2452 = !{!"000002090616CEF0.w512.b0", !2453, i64 0}
!2453 = !{!"000002090616CEF0.w1024.b0", !2454, i64 0}
!2454 = !{!"000002090616CEF0", !21, i64 0}
!2455 = !{!2456, !2456, i64 0}
!2456 = !{!"000002090616CEF0.w8.b8", !2447, i64 0}
!2457 = !{!2458, !2458, i64 0}
!2458 = !{!"000002090616CEF0.w8.b16", !2459, i64 0}
!2459 = !{!"000002090616CEF0.w16.b16", !2448, i64 0}
!2460 = !{!2461, !2461, i64 0}
!2461 = !{!"000002090616CEF0.w8.b24", !2459, i64 0}
!2462 = !{!2463, !2463, i64 0}
!2463 = !{!"000002090616CEF0.w8.b32", !2464, i64 0}
!2464 = !{!"000002090616CEF0.w16.b32", !2465, i64 0}
!2465 = !{!"000002090616CEF0.w32.b32", !2449, i64 0}
!2466 = !{!2467, !2467, i64 0}
!2467 = !{!"000002090616C670.w8.b8", !2468, i64 0}
!2468 = !{!"000002090616C670.w16.b0", !2469, i64 0}
!2469 = !{!"000002090616C670.w32.b0", !2470, i64 0}
!2470 = !{!"000002090616C670.w64.b0", !2471, i64 0}
!2471 = !{!"000002090616C670.w128.b0", !2472, i64 0}
!2472 = !{!"000002090616C670.w256.b0", !2473, i64 0}
!2473 = !{!"000002090616C670.w512.b0", !2474, i64 0}
!2474 = !{!"000002090616C670.w1024.b0", !2475, i64 0}
!2475 = !{!"000002090616C670", !21, i64 0}
!2476 = !{!2477, !2477, i64 0}
!2477 = !{!"000002090616C670.w8.b32", !2478, i64 0}
!2478 = !{!"000002090616C670.w16.b32", !2479, i64 0}
!2479 = !{!"000002090616C670.w32.b32", !2470, i64 0}
!2480 = !{!2481, !2481, i64 0}
!2481 = !{!"000002090616DBB0.w8.b0", !2482, i64 0}
!2482 = !{!"000002090616DBB0.w16.b0", !2483, i64 0}
!2483 = !{!"000002090616DBB0.w32.b0", !2484, i64 0}
!2484 = !{!"000002090616DBB0.w64.b0", !2485, i64 0}
!2485 = !{!"000002090616DBB0.w128.b0", !2486, i64 0}
!2486 = !{!"000002090616DBB0.w256.b0", !2487, i64 0}
!2487 = !{!"000002090616DBB0.w512.b0", !2488, i64 0}
!2488 = !{!"000002090616DBB0.w1024.b0", !2489, i64 0}
!2489 = !{!"000002090616DBB0", !21, i64 0}
!2490 = !{!2491, !2491, i64 0}
!2491 = !{!"000002090616DBB0.w8.b8", !2482, i64 0}
!2492 = !{!2493, !2493, i64 0}
!2493 = !{!"000002090616DBB0.w8.b16", !2494, i64 0}
!2494 = !{!"000002090616DBB0.w16.b16", !2483, i64 0}
!2495 = !{!2496, !2496, i64 0}
!2496 = !{!"000002090616DBB0.w8.b24", !2494, i64 0}
!2497 = !{!2498, !2498, i64 0}
!2498 = !{!"000002090616DBB0.w8.b32", !2499, i64 0}
!2499 = !{!"000002090616DBB0.w16.b32", !2500, i64 0}
!2500 = !{!"000002090616DBB0.w32.b32", !2484, i64 0}
!2501 = !{!2502, !2502, i64 0}
!2502 = !{!"000002090616E170.w8.b8", !2503, i64 0}
!2503 = !{!"000002090616E170.w16.b0", !2504, i64 0}
!2504 = !{!"000002090616E170.w32.b0", !2505, i64 0}
!2505 = !{!"000002090616E170.w64.b0", !2506, i64 0}
!2506 = !{!"000002090616E170.w128.b0", !2507, i64 0}
!2507 = !{!"000002090616E170.w256.b0", !2508, i64 0}
!2508 = !{!"000002090616E170.w512.b0", !2509, i64 0}
!2509 = !{!"000002090616E170.w1024.b0", !2510, i64 0}
!2510 = !{!"000002090616E170", !21, i64 0}
!2511 = !{!2512, !2512, i64 0}
!2512 = !{!"000002090616E170.w8.b16", !2513, i64 0}
!2513 = !{!"000002090616E170.w16.b16", !2504, i64 0}
!2514 = !{!2515, !2515, i64 0}
!2515 = !{!"000002090616E170.w8.b24", !2513, i64 0}
!2516 = !{!2517, !2517, i64 0}
!2517 = !{!"000002090616E170.w8.b32", !2518, i64 0}
!2518 = !{!"000002090616E170.w16.b32", !2519, i64 0}
!2519 = !{!"000002090616E170.w32.b32", !2505, i64 0}
!2520 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2521)
!2521 = !{!2522, !2523, !2524, !2525, !2526, !2527}
!2522 = !DILocalVariable(name: "arg1", arg: 1, scope: !2520, file: !1, type: !8)
!2523 = !DILocalVariable(name: "arg2", arg: 2, scope: !2520, file: !1, type: !9)
!2524 = !DILocalVariable(name: "arg3", arg: 3, scope: !2520, file: !1, type: !7)
!2525 = !DILocalVariable(name: "arg4", arg: 4, scope: !2520, file: !1, type: !8)
!2526 = !DILocalVariable(name: "arg5", arg: 5, scope: !2520, file: !1, type: !9)
!2527 = !DILocalVariable(name: "arg6", arg: 6, scope: !2520, file: !1, type: !8)
!2528 = !DILocation(line: 0, scope: !2520)
!2529 = !{!2530, !2530, i64 0}
!2530 = !{!"00000209060AD830.w4.b0", !2531, i64 0}
!2531 = !{!"00000209060AD830.w8.b0", !2532, i64 0}
!2532 = !{!"00000209060AD830.w16.b0", !2533, i64 0}
!2533 = !{!"00000209060AD830.w32.b0", !2534, i64 0}
!2534 = !{!"00000209060AD830.w64.b0", !2535, i64 0}
!2535 = !{!"00000209060AD830.w128.b0", !2536, i64 0}
!2536 = !{!"00000209060AD830.w256.b0", !2537, i64 0}
!2537 = !{!"00000209060AD830.w512.b0", !2538, i64 0}
!2538 = !{!"00000209060AD830.w1024.b0", !2539, i64 0}
!2539 = !{!"00000209060AD830", !21, i64 0}
!2540 = !{!2541, !2541, i64 0}
!2541 = !{!"00000209060AD830.w4.b4", !2531, i64 0}
!2542 = !{!2543, !2543, i64 0}
!2543 = !{!"00000209060AD830.w4.b8", !2544, i64 0}
!2544 = !{!"00000209060AD830.w8.b8", !2532, i64 0}
!2545 = !{!2546, !2546, i64 0}
!2546 = !{!"00000209060AD830.w4.b12", !2544, i64 0}
!2547 = !{!2548, !2548, i64 0}
!2548 = !{!"00000209060AD830.w4.b16", !2549, i64 0}
!2549 = !{!"00000209060AD830.w8.b16", !2550, i64 0}
!2550 = !{!"00000209060AD830.w16.b16", !2533, i64 0}
!2551 = !{!2552, !2552, i64 0}
!2552 = !{!"00000209060B1AB0.w8.b0", !2553, i64 0}
!2553 = !{!"00000209060B1AB0.w16.b0", !2554, i64 0}
!2554 = !{!"00000209060B1AB0.w32.b0", !2555, i64 0}
!2555 = !{!"00000209060B1AB0.w64.b0", !2556, i64 0}
!2556 = !{!"00000209060B1AB0.w128.b0", !2557, i64 0}
!2557 = !{!"00000209060B1AB0.w256.b0", !2558, i64 0}
!2558 = !{!"00000209060B1AB0.w512.b0", !2559, i64 0}
!2559 = !{!"00000209060B1AB0.w1024.b0", !2560, i64 0}
!2560 = !{!"00000209060B1AB0", !21, i64 0}
!2561 = !{!2562, !2562, i64 0}
!2562 = !{!"00000209060B1AB0.w8.b8", !2553, i64 0}
!2563 = !{!2564, !2564, i64 0}
!2564 = !{!"00000209060B1AB0.w8.b16", !2565, i64 0}
!2565 = !{!"00000209060B1AB0.w16.b16", !2554, i64 0}
!2566 = !{!2567, !2567, i64 0}
!2567 = !{!"00000209060B1AB0.w8.b24", !2565, i64 0}
!2568 = !{!2569, !2569, i64 0}
!2569 = !{!"00000209060B1AB0.w8.b32", !2570, i64 0}
!2570 = !{!"00000209060B1AB0.w16.b32", !2571, i64 0}
!2571 = !{!"00000209060B1AB0.w32.b32", !2555, i64 0}
!2572 = !{!2573, !2573, i64 0}
!2573 = !{!"00000209060B2830.w8.b8", !2574, i64 0}
!2574 = !{!"00000209060B2830.w16.b0", !2575, i64 0}
!2575 = !{!"00000209060B2830.w32.b0", !2576, i64 0}
!2576 = !{!"00000209060B2830.w64.b0", !2577, i64 0}
!2577 = !{!"00000209060B2830.w128.b0", !2578, i64 0}
!2578 = !{!"00000209060B2830.w256.b0", !2579, i64 0}
!2579 = !{!"00000209060B2830.w512.b0", !2580, i64 0}
!2580 = !{!"00000209060B2830.w1024.b0", !2581, i64 0}
!2581 = !{!"00000209060B2830", !21, i64 0}
!2582 = !{!2583, !2583, i64 0}
!2583 = !{!"00000209060B2830.w8.b16", !2584, i64 0}
!2584 = !{!"00000209060B2830.w16.b16", !2575, i64 0}
!2585 = !{!2586, !2586, i64 0}
!2586 = !{!"00000209060B2830.w8.b24", !2584, i64 0}
!2587 = !{!2588, !2588, i64 0}
!2588 = !{!"00000209060B2830.w8.b32", !2589, i64 0}
!2589 = !{!"00000209060B2830.w16.b32", !2590, i64 0}
!2590 = !{!"00000209060B2830.w32.b32", !2576, i64 0}
!2591 = !{!2592, !2592, i64 0}
!2592 = !{!"00000209060B58F0.w8.b0", !2593, i64 0}
!2593 = !{!"00000209060B58F0.w16.b0", !2594, i64 0}
!2594 = !{!"00000209060B58F0.w32.b0", !2595, i64 0}
!2595 = !{!"00000209060B58F0.w64.b0", !2596, i64 0}
!2596 = !{!"00000209060B58F0.w128.b0", !2597, i64 0}
!2597 = !{!"00000209060B58F0.w256.b0", !2598, i64 0}
!2598 = !{!"00000209060B58F0.w512.b0", !2599, i64 0}
!2599 = !{!"00000209060B58F0.w1024.b0", !2600, i64 0}
!2600 = !{!"00000209060B58F0", !21, i64 0}
!2601 = !{!2602, !2602, i64 0}
!2602 = !{!"00000209060B58F0.w8.b8", !2593, i64 0}
!2603 = !{!2604, !2604, i64 0}
!2604 = !{!"00000209060B58F0.w8.b16", !2605, i64 0}
!2605 = !{!"00000209060B58F0.w16.b16", !2594, i64 0}
!2606 = !{!2607, !2607, i64 0}
!2607 = !{!"00000209060B58F0.w8.b24", !2605, i64 0}
!2608 = !{!2609, !2609, i64 0}
!2609 = !{!"00000209060B58F0.w8.b32", !2610, i64 0}
!2610 = !{!"00000209060B58F0.w16.b32", !2611, i64 0}
!2611 = !{!"00000209060B58F0.w32.b32", !2595, i64 0}
!2612 = !{!2613, !2613, i64 0}
!2613 = !{!"00000209060B5370.w8.b8", !2614, i64 0}
!2614 = !{!"00000209060B5370.w16.b0", !2615, i64 0}
!2615 = !{!"00000209060B5370.w32.b0", !2616, i64 0}
!2616 = !{!"00000209060B5370.w64.b0", !2617, i64 0}
!2617 = !{!"00000209060B5370.w128.b0", !2618, i64 0}
!2618 = !{!"00000209060B5370.w256.b0", !2619, i64 0}
!2619 = !{!"00000209060B5370.w512.b0", !2620, i64 0}
!2620 = !{!"00000209060B5370.w1024.b0", !2621, i64 0}
!2621 = !{!"00000209060B5370", !21, i64 0}
!2622 = !{!2623, !2623, i64 0}
!2623 = !{!"00000209060B5370.w8.b32", !2624, i64 0}
!2624 = !{!"00000209060B5370.w16.b32", !2625, i64 0}
!2625 = !{!"00000209060B5370.w32.b32", !2616, i64 0}
!2626 = !{!2627, !2627, i64 0}
!2627 = !{!"00000209060B67F0.w8.b0", !2628, i64 0}
!2628 = !{!"00000209060B67F0.w16.b0", !2629, i64 0}
!2629 = !{!"00000209060B67F0.w32.b0", !2630, i64 0}
!2630 = !{!"00000209060B67F0.w64.b0", !2631, i64 0}
!2631 = !{!"00000209060B67F0.w128.b0", !2632, i64 0}
!2632 = !{!"00000209060B67F0.w256.b0", !2633, i64 0}
!2633 = !{!"00000209060B67F0.w512.b0", !2634, i64 0}
!2634 = !{!"00000209060B67F0.w1024.b0", !2635, i64 0}
!2635 = !{!"00000209060B67F0", !21, i64 0}
!2636 = !{!2637, !2637, i64 0}
!2637 = !{!"00000209060B67F0.w8.b8", !2628, i64 0}
!2638 = !{!2639, !2639, i64 0}
!2639 = !{!"00000209060B67F0.w8.b16", !2640, i64 0}
!2640 = !{!"00000209060B67F0.w16.b16", !2629, i64 0}
!2641 = !{!2642, !2642, i64 0}
!2642 = !{!"00000209060B67F0.w8.b24", !2640, i64 0}
!2643 = !{!2644, !2644, i64 0}
!2644 = !{!"00000209060B67F0.w8.b32", !2645, i64 0}
!2645 = !{!"00000209060B67F0.w16.b32", !2646, i64 0}
!2646 = !{!"00000209060B67F0.w32.b32", !2630, i64 0}
!2647 = !{!2648, !2648, i64 0}
!2648 = !{!"00000209060B66B0.w8.b8", !2649, i64 0}
!2649 = !{!"00000209060B66B0.w16.b0", !2650, i64 0}
!2650 = !{!"00000209060B66B0.w32.b0", !2651, i64 0}
!2651 = !{!"00000209060B66B0.w64.b0", !2652, i64 0}
!2652 = !{!"00000209060B66B0.w128.b0", !2653, i64 0}
!2653 = !{!"00000209060B66B0.w256.b0", !2654, i64 0}
!2654 = !{!"00000209060B66B0.w512.b0", !2655, i64 0}
!2655 = !{!"00000209060B66B0.w1024.b0", !2656, i64 0}
!2656 = !{!"00000209060B66B0", !21, i64 0}
!2657 = !{!2658, !2658, i64 0}
!2658 = !{!"00000209060B66B0.w8.b32", !2659, i64 0}
!2659 = !{!"00000209060B66B0.w16.b32", !2660, i64 0}
!2660 = !{!"00000209060B66B0.w32.b32", !2651, i64 0}
!2661 = !{!2662, !2662, i64 0}
!2662 = !{!"00000209060B7270.w8.b0", !2663, i64 0}
!2663 = !{!"00000209060B7270.w16.b0", !2664, i64 0}
!2664 = !{!"00000209060B7270.w32.b0", !2665, i64 0}
!2665 = !{!"00000209060B7270.w64.b0", !2666, i64 0}
!2666 = !{!"00000209060B7270.w128.b0", !2667, i64 0}
!2667 = !{!"00000209060B7270.w256.b0", !2668, i64 0}
!2668 = !{!"00000209060B7270.w512.b0", !2669, i64 0}
!2669 = !{!"00000209060B7270.w1024.b0", !2670, i64 0}
!2670 = !{!"00000209060B7270", !21, i64 0}
!2671 = !{!2672, !2672, i64 0}
!2672 = !{!"00000209060B7270.w8.b8", !2663, i64 0}
!2673 = !{!2674, !2674, i64 0}
!2674 = !{!"00000209060B7270.w8.b16", !2675, i64 0}
!2675 = !{!"00000209060B7270.w16.b16", !2664, i64 0}
!2676 = !{!2677, !2677, i64 0}
!2677 = !{!"00000209060B7270.w8.b24", !2675, i64 0}
!2678 = !{!2679, !2679, i64 0}
!2679 = !{!"00000209060B7270.w8.b32", !2680, i64 0}
!2680 = !{!"00000209060B7270.w16.b32", !2681, i64 0}
!2681 = !{!"00000209060B7270.w32.b32", !2665, i64 0}
!2682 = !{!2683, !2683, i64 0}
!2683 = !{!"00000209060B74B0.w8.b8", !2684, i64 0}
!2684 = !{!"00000209060B74B0.w16.b0", !2685, i64 0}
!2685 = !{!"00000209060B74B0.w32.b0", !2686, i64 0}
!2686 = !{!"00000209060B74B0.w64.b0", !2687, i64 0}
!2687 = !{!"00000209060B74B0.w128.b0", !2688, i64 0}
!2688 = !{!"00000209060B74B0.w256.b0", !2689, i64 0}
!2689 = !{!"00000209060B74B0.w512.b0", !2690, i64 0}
!2690 = !{!"00000209060B74B0.w1024.b0", !2691, i64 0}
!2691 = !{!"00000209060B74B0", !21, i64 0}
!2692 = !{!2693, !2693, i64 0}
!2693 = !{!"00000209060B74B0.w8.b16", !2694, i64 0}
!2694 = !{!"00000209060B74B0.w16.b16", !2685, i64 0}
!2695 = !{!2696, !2696, i64 0}
!2696 = !{!"00000209060B74B0.w8.b24", !2694, i64 0}
!2697 = !{!2698, !2698, i64 0}
!2698 = !{!"00000209060B74B0.w8.b32", !2699, i64 0}
!2699 = !{!"00000209060B74B0.w16.b32", !2700, i64 0}
!2700 = !{!"00000209060B74B0.w32.b32", !2686, i64 0}
!2701 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2702)
!2702 = !{!2703, !2704, !2705, !2706, !2707, !2708}
!2703 = !DILocalVariable(name: "arg1", arg: 1, scope: !2701, file: !1, type: !8)
!2704 = !DILocalVariable(name: "arg2", arg: 2, scope: !2701, file: !1, type: !9)
!2705 = !DILocalVariable(name: "arg3", arg: 3, scope: !2701, file: !1, type: !7)
!2706 = !DILocalVariable(name: "arg4", arg: 4, scope: !2701, file: !1, type: !8)
!2707 = !DILocalVariable(name: "arg5", arg: 5, scope: !2701, file: !1, type: !9)
!2708 = !DILocalVariable(name: "arg6", arg: 6, scope: !2701, file: !1, type: !8)
!2709 = !DILocation(line: 0, scope: !2701)
!2710 = !{!2711, !2711, i64 0}
!2711 = !{!"00000209060118E0.w4.b0", !2712, i64 0}
!2712 = !{!"00000209060118E0.w8.b0", !2713, i64 0}
!2713 = !{!"00000209060118E0.w16.b0", !2714, i64 0}
!2714 = !{!"00000209060118E0.w32.b0", !2715, i64 0}
!2715 = !{!"00000209060118E0.w64.b0", !2716, i64 0}
!2716 = !{!"00000209060118E0.w128.b0", !2717, i64 0}
!2717 = !{!"00000209060118E0.w256.b0", !2718, i64 0}
!2718 = !{!"00000209060118E0.w512.b0", !2719, i64 0}
!2719 = !{!"00000209060118E0.w1024.b0", !2720, i64 0}
!2720 = !{!"00000209060118E0", !21, i64 0}
!2721 = !{!2722, !2722, i64 0}
!2722 = !{!"00000209060118E0.w4.b4", !2712, i64 0}
!2723 = !{!2724, !2724, i64 0}
!2724 = !{!"00000209060118E0.w4.b8", !2725, i64 0}
!2725 = !{!"00000209060118E0.w8.b8", !2713, i64 0}
!2726 = !{!2727, !2727, i64 0}
!2727 = !{!"00000209060118E0.w4.b12", !2725, i64 0}
!2728 = !{!2729, !2729, i64 0}
!2729 = !{!"00000209060118E0.w4.b16", !2730, i64 0}
!2730 = !{!"00000209060118E0.w8.b16", !2731, i64 0}
!2731 = !{!"00000209060118E0.w16.b16", !2714, i64 0}
!2732 = !{!2733, !2733, i64 0}
!2733 = !{!"00000209060118E0.w4.b20", !2730, i64 0}
!2734 = !{!2735, !2735, i64 0}
!2735 = !{!"0000020906014660.w8.b0", !2736, i64 0}
!2736 = !{!"0000020906014660.w16.b0", !2737, i64 0}
!2737 = !{!"0000020906014660.w32.b0", !2738, i64 0}
!2738 = !{!"0000020906014660.w64.b0", !2739, i64 0}
!2739 = !{!"0000020906014660.w128.b0", !2740, i64 0}
!2740 = !{!"0000020906014660.w256.b0", !2741, i64 0}
!2741 = !{!"0000020906014660.w512.b0", !2742, i64 0}
!2742 = !{!"0000020906014660.w1024.b0", !2743, i64 0}
!2743 = !{!"0000020906014660", !21, i64 0}
!2744 = !{!2745, !2745, i64 0}
!2745 = !{!"0000020906014660.w8.b8", !2736, i64 0}
!2746 = !{!2747, !2747, i64 0}
!2747 = !{!"0000020906014660.w8.b16", !2748, i64 0}
!2748 = !{!"0000020906014660.w16.b16", !2737, i64 0}
!2749 = !{!2750, !2750, i64 0}
!2750 = !{!"0000020906014660.w8.b24", !2748, i64 0}
!2751 = !{!2752, !2752, i64 0}
!2752 = !{!"0000020906014660.w8.b32", !2753, i64 0}
!2753 = !{!"0000020906014660.w16.b32", !2754, i64 0}
!2754 = !{!"0000020906014660.w32.b32", !2738, i64 0}
!2755 = !{!2756, !2756, i64 0}
!2756 = !{!"0000020906014960.w8.b8", !2757, i64 0}
!2757 = !{!"0000020906014960.w16.b0", !2758, i64 0}
!2758 = !{!"0000020906014960.w32.b0", !2759, i64 0}
!2759 = !{!"0000020906014960.w64.b0", !2760, i64 0}
!2760 = !{!"0000020906014960.w128.b0", !2761, i64 0}
!2761 = !{!"0000020906014960.w256.b0", !2762, i64 0}
!2762 = !{!"0000020906014960.w512.b0", !2763, i64 0}
!2763 = !{!"0000020906014960.w1024.b0", !2764, i64 0}
!2764 = !{!"0000020906014960", !21, i64 0}
!2765 = !{!2766, !2766, i64 0}
!2766 = !{!"0000020906014960.w8.b16", !2767, i64 0}
!2767 = !{!"0000020906014960.w16.b16", !2758, i64 0}
!2768 = !{!2769, !2769, i64 0}
!2769 = !{!"0000020906014960.w8.b24", !2767, i64 0}
!2770 = !{!2771, !2771, i64 0}
!2771 = !{!"0000020906014960.w8.b32", !2772, i64 0}
!2772 = !{!"0000020906014960.w16.b32", !2773, i64 0}
!2773 = !{!"0000020906014960.w32.b32", !2759, i64 0}
!2774 = !{!2775, !2775, i64 0}
!2775 = !{!"00000209060159A0.w8.b0", !2776, i64 0}
!2776 = !{!"00000209060159A0.w16.b0", !2777, i64 0}
!2777 = !{!"00000209060159A0.w32.b0", !2778, i64 0}
!2778 = !{!"00000209060159A0.w64.b0", !2779, i64 0}
!2779 = !{!"00000209060159A0.w128.b0", !2780, i64 0}
!2780 = !{!"00000209060159A0.w256.b0", !2781, i64 0}
!2781 = !{!"00000209060159A0.w512.b0", !2782, i64 0}
!2782 = !{!"00000209060159A0.w1024.b0", !2783, i64 0}
!2783 = !{!"00000209060159A0", !21, i64 0}
!2784 = !{!2785, !2785, i64 0}
!2785 = !{!"00000209060159A0.w8.b8", !2776, i64 0}
!2786 = !{!2787, !2787, i64 0}
!2787 = !{!"00000209060159A0.w8.b16", !2788, i64 0}
!2788 = !{!"00000209060159A0.w16.b16", !2777, i64 0}
!2789 = !{!2790, !2790, i64 0}
!2790 = !{!"00000209060159A0.w8.b24", !2788, i64 0}
!2791 = !{!2792, !2792, i64 0}
!2792 = !{!"00000209060159A0.w8.b32", !2793, i64 0}
!2793 = !{!"00000209060159A0.w16.b32", !2794, i64 0}
!2794 = !{!"00000209060159A0.w32.b32", !2778, i64 0}
!2795 = !{!2796, !2796, i64 0}
!2796 = !{!"0000020906015820.w8.b8", !2797, i64 0}
!2797 = !{!"0000020906015820.w16.b0", !2798, i64 0}
!2798 = !{!"0000020906015820.w32.b0", !2799, i64 0}
!2799 = !{!"0000020906015820.w64.b0", !2800, i64 0}
!2800 = !{!"0000020906015820.w128.b0", !2801, i64 0}
!2801 = !{!"0000020906015820.w256.b0", !2802, i64 0}
!2802 = !{!"0000020906015820.w512.b0", !2803, i64 0}
!2803 = !{!"0000020906015820.w1024.b0", !2804, i64 0}
!2804 = !{!"0000020906015820", !21, i64 0}
!2805 = !{!2806, !2806, i64 0}
!2806 = !{!"0000020906015820.w8.b32", !2807, i64 0}
!2807 = !{!"0000020906015820.w16.b32", !2808, i64 0}
!2808 = !{!"0000020906015820.w32.b32", !2799, i64 0}
!2809 = !{!2810, !2810, i64 0}
!2810 = !{!"0000020906016FA0.w8.b0", !2811, i64 0}
!2811 = !{!"0000020906016FA0.w16.b0", !2812, i64 0}
!2812 = !{!"0000020906016FA0.w32.b0", !2813, i64 0}
!2813 = !{!"0000020906016FA0.w64.b0", !2814, i64 0}
!2814 = !{!"0000020906016FA0.w128.b0", !2815, i64 0}
!2815 = !{!"0000020906016FA0.w256.b0", !2816, i64 0}
!2816 = !{!"0000020906016FA0.w512.b0", !2817, i64 0}
!2817 = !{!"0000020906016FA0.w1024.b0", !2818, i64 0}
!2818 = !{!"0000020906016FA0", !21, i64 0}
!2819 = !{!2820, !2820, i64 0}
!2820 = !{!"0000020906016FA0.w8.b8", !2811, i64 0}
!2821 = !{!2822, !2822, i64 0}
!2822 = !{!"0000020906016FA0.w8.b16", !2823, i64 0}
!2823 = !{!"0000020906016FA0.w16.b16", !2812, i64 0}
!2824 = !{!2825, !2825, i64 0}
!2825 = !{!"0000020906016FA0.w8.b24", !2823, i64 0}
!2826 = !{!2827, !2827, i64 0}
!2827 = !{!"0000020906016FA0.w8.b32", !2828, i64 0}
!2828 = !{!"0000020906016FA0.w16.b32", !2829, i64 0}
!2829 = !{!"0000020906016FA0.w32.b32", !2813, i64 0}
!2830 = !{!2831, !2831, i64 0}
!2831 = !{!"0000020906016B60.w8.b8", !2832, i64 0}
!2832 = !{!"0000020906016B60.w16.b0", !2833, i64 0}
!2833 = !{!"0000020906016B60.w32.b0", !2834, i64 0}
!2834 = !{!"0000020906016B60.w64.b0", !2835, i64 0}
!2835 = !{!"0000020906016B60.w128.b0", !2836, i64 0}
!2836 = !{!"0000020906016B60.w256.b0", !2837, i64 0}
!2837 = !{!"0000020906016B60.w512.b0", !2838, i64 0}
!2838 = !{!"0000020906016B60.w1024.b0", !2839, i64 0}
!2839 = !{!"0000020906016B60", !21, i64 0}
!2840 = !{!2841, !2841, i64 0}
!2841 = !{!"0000020906016B60.w8.b32", !2842, i64 0}
!2842 = !{!"0000020906016B60.w16.b32", !2843, i64 0}
!2843 = !{!"0000020906016B60.w32.b32", !2834, i64 0}
!2844 = !{!2845, !2845, i64 0}
!2845 = !{!"0000020906018720.w8.b0", !2846, i64 0}
!2846 = !{!"0000020906018720.w16.b0", !2847, i64 0}
!2847 = !{!"0000020906018720.w32.b0", !2848, i64 0}
!2848 = !{!"0000020906018720.w64.b0", !2849, i64 0}
!2849 = !{!"0000020906018720.w128.b0", !2850, i64 0}
!2850 = !{!"0000020906018720.w256.b0", !2851, i64 0}
!2851 = !{!"0000020906018720.w512.b0", !2852, i64 0}
!2852 = !{!"0000020906018720.w1024.b0", !2853, i64 0}
!2853 = !{!"0000020906018720", !21, i64 0}
!2854 = !{!2855, !2855, i64 0}
!2855 = !{!"0000020906018720.w8.b8", !2846, i64 0}
!2856 = !{!2857, !2857, i64 0}
!2857 = !{!"0000020906018720.w8.b16", !2858, i64 0}
!2858 = !{!"0000020906018720.w16.b16", !2847, i64 0}
!2859 = !{!2860, !2860, i64 0}
!2860 = !{!"0000020906018720.w8.b24", !2858, i64 0}
!2861 = !{!2862, !2862, i64 0}
!2862 = !{!"0000020906018720.w8.b32", !2863, i64 0}
!2863 = !{!"0000020906018720.w16.b32", !2864, i64 0}
!2864 = !{!"0000020906018720.w32.b32", !2848, i64 0}
!2865 = !{!2866, !2866, i64 0}
!2866 = !{!"00000209060186A0.w8.b8", !2867, i64 0}
!2867 = !{!"00000209060186A0.w16.b0", !2868, i64 0}
!2868 = !{!"00000209060186A0.w32.b0", !2869, i64 0}
!2869 = !{!"00000209060186A0.w64.b0", !2870, i64 0}
!2870 = !{!"00000209060186A0.w128.b0", !2871, i64 0}
!2871 = !{!"00000209060186A0.w256.b0", !2872, i64 0}
!2872 = !{!"00000209060186A0.w512.b0", !2873, i64 0}
!2873 = !{!"00000209060186A0.w1024.b0", !2874, i64 0}
!2874 = !{!"00000209060186A0", !21, i64 0}
!2875 = !{!2876, !2876, i64 0}
!2876 = !{!"00000209060186A0.w8.b16", !2877, i64 0}
!2877 = !{!"00000209060186A0.w16.b16", !2868, i64 0}
!2878 = !{!2879, !2879, i64 0}
!2879 = !{!"00000209060186A0.w8.b24", !2877, i64 0}
!2880 = !{!2881, !2881, i64 0}
!2881 = !{!"00000209060186A0.w8.b32", !2882, i64 0}
!2882 = !{!"00000209060186A0.w16.b32", !2883, i64 0}
!2883 = !{!"00000209060186A0.w32.b32", !2869, i64 0}
!2884 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2885)
!2885 = !{!2886, !2887, !2888, !2889, !2890, !2891}
!2886 = !DILocalVariable(name: "arg1", arg: 1, scope: !2884, file: !1, type: !8)
!2887 = !DILocalVariable(name: "arg2", arg: 2, scope: !2884, file: !1, type: !9)
!2888 = !DILocalVariable(name: "arg3", arg: 3, scope: !2884, file: !1, type: !7)
!2889 = !DILocalVariable(name: "arg4", arg: 4, scope: !2884, file: !1, type: !8)
!2890 = !DILocalVariable(name: "arg5", arg: 5, scope: !2884, file: !1, type: !9)
!2891 = !DILocalVariable(name: "arg6", arg: 6, scope: !2884, file: !1, type: !8)
!2892 = !DILocation(line: 0, scope: !2884)
!2893 = !{!2894, !2894, i64 0}
!2894 = !{!"0000020906102CB0.w4.b0", !2895, i64 0}
!2895 = !{!"0000020906102CB0.w8.b0", !2896, i64 0}
!2896 = !{!"0000020906102CB0.w16.b0", !2897, i64 0}
!2897 = !{!"0000020906102CB0.w32.b0", !2898, i64 0}
!2898 = !{!"0000020906102CB0.w64.b0", !2899, i64 0}
!2899 = !{!"0000020906102CB0.w128.b0", !2900, i64 0}
!2900 = !{!"0000020906102CB0.w256.b0", !2901, i64 0}
!2901 = !{!"0000020906102CB0.w512.b0", !2902, i64 0}
!2902 = !{!"0000020906102CB0.w1024.b0", !2903, i64 0}
!2903 = !{!"0000020906102CB0", !21, i64 0}
!2904 = !{!2905, !2905, i64 0}
!2905 = !{!"0000020906102CB0.w4.b4", !2895, i64 0}
!2906 = !{!2907, !2907, i64 0}
!2907 = !{!"0000020906108230.w8.b0", !2908, i64 0}
!2908 = !{!"0000020906108230.w16.b0", !2909, i64 0}
!2909 = !{!"0000020906108230.w32.b0", !2910, i64 0}
!2910 = !{!"0000020906108230.w64.b0", !2911, i64 0}
!2911 = !{!"0000020906108230.w128.b0", !2912, i64 0}
!2912 = !{!"0000020906108230.w256.b0", !2913, i64 0}
!2913 = !{!"0000020906108230.w512.b0", !2914, i64 0}
!2914 = !{!"0000020906108230.w1024.b0", !2915, i64 0}
!2915 = !{!"0000020906108230", !21, i64 0}
!2916 = !{!2917, !2917, i64 0}
!2917 = !{!"0000020906108230.w8.b8", !2908, i64 0}
!2918 = !{!2919, !2919, i64 0}
!2919 = !{!"0000020906108230.w8.b16", !2920, i64 0}
!2920 = !{!"0000020906108230.w16.b16", !2909, i64 0}
!2921 = !{!2922, !2922, i64 0}
!2922 = !{!"0000020906108230.w8.b24", !2920, i64 0}
!2923 = !{!2924, !2924, i64 0}
!2924 = !{!"00000209061082F0.w8.b8", !2925, i64 0}
!2925 = !{!"00000209061082F0.w16.b0", !2926, i64 0}
!2926 = !{!"00000209061082F0.w32.b0", !2927, i64 0}
!2927 = !{!"00000209061082F0.w64.b0", !2928, i64 0}
!2928 = !{!"00000209061082F0.w128.b0", !2929, i64 0}
!2929 = !{!"00000209061082F0.w256.b0", !2930, i64 0}
!2930 = !{!"00000209061082F0.w512.b0", !2931, i64 0}
!2931 = !{!"00000209061082F0.w1024.b0", !2932, i64 0}
!2932 = !{!"00000209061082F0", !21, i64 0}
!2933 = !{!2934, !2934, i64 0}
!2934 = !{!"00000209061082F0.w8.b16", !2935, i64 0}
!2935 = !{!"00000209061082F0.w16.b16", !2926, i64 0}
!2936 = !{!2937, !2937, i64 0}
!2937 = !{!"00000209061082F0.w8.b24", !2935, i64 0}
!2938 = !{!2939, !2939, i64 0}
!2939 = !{!"000002090610B930.w8.b0", !2940, i64 0}
!2940 = !{!"000002090610B930.w16.b0", !2941, i64 0}
!2941 = !{!"000002090610B930.w32.b0", !2942, i64 0}
!2942 = !{!"000002090610B930.w64.b0", !2943, i64 0}
!2943 = !{!"000002090610B930.w128.b0", !2944, i64 0}
!2944 = !{!"000002090610B930.w256.b0", !2945, i64 0}
!2945 = !{!"000002090610B930.w512.b0", !2946, i64 0}
!2946 = !{!"000002090610B930.w1024.b0", !2947, i64 0}
!2947 = !{!"000002090610B930", !21, i64 0}
!2948 = !{!2949, !2949, i64 0}
!2949 = !{!"000002090610B930.w8.b8", !2940, i64 0}
!2950 = !{!2951, !2951, i64 0}
!2951 = !{!"000002090610B930.w8.b16", !2952, i64 0}
!2952 = !{!"000002090610B930.w16.b16", !2941, i64 0}
!2953 = !{!2954, !2954, i64 0}
!2954 = !{!"000002090610B930.w8.b24", !2952, i64 0}
!2955 = !{!2956, !2956, i64 0}
!2956 = !{!"000002090610B930.w8.b32", !2957, i64 0}
!2957 = !{!"000002090610B930.w16.b32", !2958, i64 0}
!2958 = !{!"000002090610B930.w32.b32", !2942, i64 0}
!2959 = !{!2960, !2960, i64 0}
!2960 = !{!"000002090610B570.w8.b16", !2961, i64 0}
!2961 = !{!"000002090610B570.w16.b16", !2962, i64 0}
!2962 = !{!"000002090610B570.w32.b0", !2963, i64 0}
!2963 = !{!"000002090610B570.w64.b0", !2964, i64 0}
!2964 = !{!"000002090610B570.w128.b0", !2965, i64 0}
!2965 = !{!"000002090610B570.w256.b0", !2966, i64 0}
!2966 = !{!"000002090610B570.w512.b0", !2967, i64 0}
!2967 = !{!"000002090610B570.w1024.b0", !2968, i64 0}
!2968 = !{!"000002090610B570", !21, i64 0}
!2969 = !{!2970, !2970, i64 0}
!2970 = !{!"000002090610B570.w8.b24", !2961, i64 0}
!2971 = !{!2972, !2972, i64 0}
!2972 = !{!"000002090610B570.w8.b32", !2973, i64 0}
!2973 = !{!"000002090610B570.w16.b32", !2974, i64 0}
!2974 = !{!"000002090610B570.w32.b32", !2963, i64 0}
!2975 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2976)
!2976 = !{!2977, !2978, !2979, !2980, !2981, !2982}
!2977 = !DILocalVariable(name: "arg1", arg: 1, scope: !2975, file: !1, type: !8)
!2978 = !DILocalVariable(name: "arg2", arg: 2, scope: !2975, file: !1, type: !9)
!2979 = !DILocalVariable(name: "arg3", arg: 3, scope: !2975, file: !1, type: !7)
!2980 = !DILocalVariable(name: "arg4", arg: 4, scope: !2975, file: !1, type: !8)
!2981 = !DILocalVariable(name: "arg5", arg: 5, scope: !2975, file: !1, type: !9)
!2982 = !DILocalVariable(name: "arg6", arg: 6, scope: !2975, file: !1, type: !8)
!2983 = !DILocation(line: 0, scope: !2975)
!2984 = !{!2985, !2985, i64 0}
!2985 = !{!"0000020906020220.w4.b0", !2986, i64 0}
!2986 = !{!"0000020906020220.w8.b0", !2987, i64 0}
!2987 = !{!"0000020906020220.w16.b0", !2988, i64 0}
!2988 = !{!"0000020906020220.w32.b0", !2989, i64 0}
!2989 = !{!"0000020906020220.w64.b0", !2990, i64 0}
!2990 = !{!"0000020906020220.w128.b0", !2991, i64 0}
!2991 = !{!"0000020906020220.w256.b0", !2992, i64 0}
!2992 = !{!"0000020906020220.w512.b0", !2993, i64 0}
!2993 = !{!"0000020906020220.w1024.b0", !2994, i64 0}
!2994 = !{!"0000020906020220", !21, i64 0}
!2995 = !{!2996, !2996, i64 0}
!2996 = !{!"0000020906020220.w4.b4", !2986, i64 0}
!2997 = !{!2998, !2998, i64 0}
!2998 = !{!"0000020906029160.w8.b0", !2999, i64 0}
!2999 = !{!"0000020906029160.w16.b0", !3000, i64 0}
!3000 = !{!"0000020906029160.w32.b0", !3001, i64 0}
!3001 = !{!"0000020906029160.w64.b0", !3002, i64 0}
!3002 = !{!"0000020906029160.w128.b0", !3003, i64 0}
!3003 = !{!"0000020906029160.w256.b0", !3004, i64 0}
!3004 = !{!"0000020906029160.w512.b0", !3005, i64 0}
!3005 = !{!"0000020906029160.w1024.b0", !3006, i64 0}
!3006 = !{!"0000020906029160", !21, i64 0}
!3007 = !{!3008, !3008, i64 0}
!3008 = !{!"0000020906029160.w8.b8", !2999, i64 0}
!3009 = !{!3010, !3010, i64 0}
!3010 = !{!"0000020906029160.w8.b16", !3011, i64 0}
!3011 = !{!"0000020906029160.w16.b16", !3000, i64 0}
!3012 = !{!3013, !3013, i64 0}
!3013 = !{!"0000020906029160.w8.b24", !3011, i64 0}
!3014 = !{!3015, !3015, i64 0}
!3015 = !{!"0000020906029160.w8.b32", !3016, i64 0}
!3016 = !{!"0000020906029160.w16.b32", !3017, i64 0}
!3017 = !{!"0000020906029160.w32.b32", !3001, i64 0}
!3018 = !{!3019, !3019, i64 0}
!3019 = !{!"000002090602A260.w8.b8", !3020, i64 0}
!3020 = !{!"000002090602A260.w16.b0", !3021, i64 0}
!3021 = !{!"000002090602A260.w32.b0", !3022, i64 0}
!3022 = !{!"000002090602A260.w64.b0", !3023, i64 0}
!3023 = !{!"000002090602A260.w128.b0", !3024, i64 0}
!3024 = !{!"000002090602A260.w256.b0", !3025, i64 0}
!3025 = !{!"000002090602A260.w512.b0", !3026, i64 0}
!3026 = !{!"000002090602A260.w1024.b0", !3027, i64 0}
!3027 = !{!"000002090602A260", !21, i64 0}
!3028 = !{!3029, !3029, i64 0}
!3029 = !{!"000002090602A260.w8.b32", !3030, i64 0}
!3030 = !{!"000002090602A260.w16.b32", !3031, i64 0}
!3031 = !{!"000002090602A260.w32.b32", !3022, i64 0}
!3032 = !{!3033, !3033, i64 0}
!3033 = !{!"000002090602D420.w8.b0", !3034, i64 0}
!3034 = !{!"000002090602D420.w16.b0", !3035, i64 0}
!3035 = !{!"000002090602D420.w32.b0", !3036, i64 0}
!3036 = !{!"000002090602D420.w64.b0", !3037, i64 0}
!3037 = !{!"000002090602D420.w128.b0", !3038, i64 0}
!3038 = !{!"000002090602D420.w256.b0", !3039, i64 0}
!3039 = !{!"000002090602D420.w512.b0", !3040, i64 0}
!3040 = !{!"000002090602D420.w1024.b0", !3041, i64 0}
!3041 = !{!"000002090602D420", !21, i64 0}
!3042 = !{!3043, !3043, i64 0}
!3043 = !{!"000002090602D420.w8.b8", !3034, i64 0}
!3044 = !{!3045, !3045, i64 0}
!3045 = !{!"000002090602D160.w8.b8", !3046, i64 0}
!3046 = !{!"000002090602D160.w16.b0", !3047, i64 0}
!3047 = !{!"000002090602D160.w32.b0", !3048, i64 0}
!3048 = !{!"000002090602D160.w64.b0", !3049, i64 0}
!3049 = !{!"000002090602D160.w128.b0", !3050, i64 0}
!3050 = !{!"000002090602D160.w256.b0", !3051, i64 0}
!3051 = !{!"000002090602D160.w512.b0", !3052, i64 0}
!3052 = !{!"000002090602D160.w1024.b0", !3053, i64 0}
!3053 = !{!"000002090602D160", !21, i64 0}
!3054 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3055)
!3055 = !{!3056, !3057, !3058, !3059, !3060, !3061}
!3056 = !DILocalVariable(name: "arg1", arg: 1, scope: !3054, file: !1, type: !8)
!3057 = !DILocalVariable(name: "arg2", arg: 2, scope: !3054, file: !1, type: !9)
!3058 = !DILocalVariable(name: "arg3", arg: 3, scope: !3054, file: !1, type: !7)
!3059 = !DILocalVariable(name: "arg4", arg: 4, scope: !3054, file: !1, type: !8)
!3060 = !DILocalVariable(name: "arg5", arg: 5, scope: !3054, file: !1, type: !9)
!3061 = !DILocalVariable(name: "arg6", arg: 6, scope: !3054, file: !1, type: !8)
!3062 = !DILocation(line: 0, scope: !3054)
!3063 = !{!3064, !3064, i64 0}
!3064 = !{!"000002090601FFE0.w4.b0", !3065, i64 0}
!3065 = !{!"000002090601FFE0.w8.b0", !3066, i64 0}
!3066 = !{!"000002090601FFE0.w16.b0", !3067, i64 0}
!3067 = !{!"000002090601FFE0.w32.b0", !3068, i64 0}
!3068 = !{!"000002090601FFE0.w64.b0", !3069, i64 0}
!3069 = !{!"000002090601FFE0.w128.b0", !3070, i64 0}
!3070 = !{!"000002090601FFE0.w256.b0", !3071, i64 0}
!3071 = !{!"000002090601FFE0.w512.b0", !3072, i64 0}
!3072 = !{!"000002090601FFE0.w1024.b0", !3073, i64 0}
!3073 = !{!"000002090601FFE0", !21, i64 0}
!3074 = !{!3075, !3075, i64 0}
!3075 = !{!"000002090601FFE0.w4.b4", !3065, i64 0}
!3076 = !{!3077, !3077, i64 0}
!3077 = !{!"000002090601FFE0.w4.b8", !3078, i64 0}
!3078 = !{!"000002090601FFE0.w8.b8", !3066, i64 0}
!3079 = !{!3080, !3080, i64 0}
!3080 = !{!"000002090601FFE0.w4.b12", !3078, i64 0}
!3081 = !{!3082, !3082, i64 0}
!3082 = !{!"0000020906025FA0.w8.b0", !3083, i64 0}
!3083 = !{!"0000020906025FA0.w16.b0", !3084, i64 0}
!3084 = !{!"0000020906025FA0.w32.b0", !3085, i64 0}
!3085 = !{!"0000020906025FA0.w64.b0", !3086, i64 0}
!3086 = !{!"0000020906025FA0.w128.b0", !3087, i64 0}
!3087 = !{!"0000020906025FA0.w256.b0", !3088, i64 0}
!3088 = !{!"0000020906025FA0.w512.b0", !3089, i64 0}
!3089 = !{!"0000020906025FA0.w1024.b0", !3090, i64 0}
!3090 = !{!"0000020906025FA0", !21, i64 0}
!3091 = !{!3092, !3092, i64 0}
!3092 = !{!"0000020906025FA0.w8.b8", !3083, i64 0}
!3093 = !{!3094, !3094, i64 0}
!3094 = !{!"0000020906025FA0.w8.b16", !3095, i64 0}
!3095 = !{!"0000020906025FA0.w16.b16", !3084, i64 0}
!3096 = !{!3097, !3097, i64 0}
!3097 = !{!"0000020906025FA0.w8.b24", !3095, i64 0}
!3098 = !{!3099, !3099, i64 0}
!3099 = !{!"0000020906025FA0.w8.b32", !3100, i64 0}
!3100 = !{!"0000020906025FA0.w16.b32", !3101, i64 0}
!3101 = !{!"0000020906025FA0.w32.b32", !3085, i64 0}
!3102 = !{!3103, !3103, i64 0}
!3103 = !{!"0000020906027120.w8.b8", !3104, i64 0}
!3104 = !{!"0000020906027120.w16.b0", !3105, i64 0}
!3105 = !{!"0000020906027120.w32.b0", !3106, i64 0}
!3106 = !{!"0000020906027120.w64.b0", !3107, i64 0}
!3107 = !{!"0000020906027120.w128.b0", !3108, i64 0}
!3108 = !{!"0000020906027120.w256.b0", !3109, i64 0}
!3109 = !{!"0000020906027120.w512.b0", !3110, i64 0}
!3110 = !{!"0000020906027120.w1024.b0", !3111, i64 0}
!3111 = !{!"0000020906027120", !21, i64 0}
!3112 = !{!3113, !3113, i64 0}
!3113 = !{!"0000020906027120.w8.b16", !3114, i64 0}
!3114 = !{!"0000020906027120.w16.b16", !3105, i64 0}
!3115 = !{!3116, !3116, i64 0}
!3116 = !{!"0000020906027120.w8.b24", !3114, i64 0}
!3117 = !{!3118, !3118, i64 0}
!3118 = !{!"0000020906027120.w8.b32", !3119, i64 0}
!3119 = !{!"0000020906027120.w16.b32", !3120, i64 0}
!3120 = !{!"0000020906027120.w32.b32", !3106, i64 0}
!3121 = !{!3122, !3122, i64 0}
!3122 = !{!"0000020906029FA0.w8.b0", !3123, i64 0}
!3123 = !{!"0000020906029FA0.w16.b0", !3124, i64 0}
!3124 = !{!"0000020906029FA0.w32.b0", !3125, i64 0}
!3125 = !{!"0000020906029FA0.w64.b0", !3126, i64 0}
!3126 = !{!"0000020906029FA0.w128.b0", !3127, i64 0}
!3127 = !{!"0000020906029FA0.w256.b0", !3128, i64 0}
!3128 = !{!"0000020906029FA0.w512.b0", !3129, i64 0}
!3129 = !{!"0000020906029FA0.w1024.b0", !3130, i64 0}
!3130 = !{!"0000020906029FA0", !21, i64 0}
!3131 = !{!3132, !3132, i64 0}
!3132 = !{!"0000020906029FA0.w8.b8", !3123, i64 0}
!3133 = !{!3134, !3134, i64 0}
!3134 = !{!"0000020906029FA0.w8.b16", !3135, i64 0}
!3135 = !{!"0000020906029FA0.w16.b16", !3124, i64 0}
!3136 = !{!3137, !3137, i64 0}
!3137 = !{!"0000020906029FA0.w8.b24", !3135, i64 0}
!3138 = !{!3139, !3139, i64 0}
!3139 = !{!"0000020906029FA0.w8.b32", !3140, i64 0}
!3140 = !{!"0000020906029FA0.w16.b32", !3141, i64 0}
!3141 = !{!"0000020906029FA0.w32.b32", !3125, i64 0}
!3142 = !{!3143, !3143, i64 0}
!3143 = !{!"00000209060296A0.w8.b8", !3144, i64 0}
!3144 = !{!"00000209060296A0.w16.b0", !3145, i64 0}
!3145 = !{!"00000209060296A0.w32.b0", !3146, i64 0}
!3146 = !{!"00000209060296A0.w64.b0", !3147, i64 0}
!3147 = !{!"00000209060296A0.w128.b0", !3148, i64 0}
!3148 = !{!"00000209060296A0.w256.b0", !3149, i64 0}
!3149 = !{!"00000209060296A0.w512.b0", !3150, i64 0}
!3150 = !{!"00000209060296A0.w1024.b0", !3151, i64 0}
!3151 = !{!"00000209060296A0", !21, i64 0}
!3152 = !{!3153, !3153, i64 0}
!3153 = !{!"00000209060296A0.w8.b32", !3154, i64 0}
!3154 = !{!"00000209060296A0.w16.b32", !3155, i64 0}
!3155 = !{!"00000209060296A0.w32.b32", !3146, i64 0}
!3156 = !{!3157, !3157, i64 0}
!3157 = !{!"0000020906029DE0.w8.b0", !3158, i64 0}
!3158 = !{!"0000020906029DE0.w16.b0", !3159, i64 0}
!3159 = !{!"0000020906029DE0.w32.b0", !3160, i64 0}
!3160 = !{!"0000020906029DE0.w64.b0", !3161, i64 0}
!3161 = !{!"0000020906029DE0.w128.b0", !3162, i64 0}
!3162 = !{!"0000020906029DE0.w256.b0", !3163, i64 0}
!3163 = !{!"0000020906029DE0.w512.b0", !3164, i64 0}
!3164 = !{!"0000020906029DE0.w1024.b0", !3165, i64 0}
!3165 = !{!"0000020906029DE0", !21, i64 0}
!3166 = !{!3167, !3167, i64 0}
!3167 = !{!"0000020906029DE0.w8.b8", !3158, i64 0}
!3168 = !{!3169, !3169, i64 0}
!3169 = !{!"0000020906029DE0.w8.b16", !3170, i64 0}
!3170 = !{!"0000020906029DE0.w16.b16", !3159, i64 0}
!3171 = !{!3172, !3172, i64 0}
!3172 = !{!"0000020906029DE0.w8.b24", !3170, i64 0}
!3173 = !{!3174, !3174, i64 0}
!3174 = !{!"0000020906029DE0.w8.b32", !3175, i64 0}
!3175 = !{!"0000020906029DE0.w16.b32", !3176, i64 0}
!3176 = !{!"0000020906029DE0.w32.b32", !3160, i64 0}
!3177 = !{!3178, !3178, i64 0}
!3178 = !{!"000002090602A160.w8.b8", !3179, i64 0}
!3179 = !{!"000002090602A160.w16.b0", !3180, i64 0}
!3180 = !{!"000002090602A160.w32.b0", !3181, i64 0}
!3181 = !{!"000002090602A160.w64.b0", !3182, i64 0}
!3182 = !{!"000002090602A160.w128.b0", !3183, i64 0}
!3183 = !{!"000002090602A160.w256.b0", !3184, i64 0}
!3184 = !{!"000002090602A160.w512.b0", !3185, i64 0}
!3185 = !{!"000002090602A160.w1024.b0", !3186, i64 0}
!3186 = !{!"000002090602A160", !21, i64 0}
!3187 = !{!3188, !3188, i64 0}
!3188 = !{!"000002090602A160.w8.b32", !3189, i64 0}
!3189 = !{!"000002090602A160.w16.b32", !3190, i64 0}
!3190 = !{!"000002090602A160.w32.b32", !3181, i64 0}
!3191 = !{!3192, !3192, i64 0}
!3192 = !{!"000002090602AD60.w8.b0", !3193, i64 0}
!3193 = !{!"000002090602AD60.w16.b0", !3194, i64 0}
!3194 = !{!"000002090602AD60.w32.b0", !3195, i64 0}
!3195 = !{!"000002090602AD60.w64.b0", !3196, i64 0}
!3196 = !{!"000002090602AD60.w128.b0", !3197, i64 0}
!3197 = !{!"000002090602AD60.w256.b0", !3198, i64 0}
!3198 = !{!"000002090602AD60.w512.b0", !3199, i64 0}
!3199 = !{!"000002090602AD60.w1024.b0", !3200, i64 0}
!3200 = !{!"000002090602AD60", !21, i64 0}
!3201 = !{!3202, !3202, i64 0}
!3202 = !{!"000002090602AD60.w8.b8", !3193, i64 0}
!3203 = !{!3204, !3204, i64 0}
!3204 = !{!"000002090602AD60.w8.b16", !3205, i64 0}
!3205 = !{!"000002090602AD60.w16.b16", !3194, i64 0}
!3206 = !{!3207, !3207, i64 0}
!3207 = !{!"000002090602AD60.w8.b24", !3205, i64 0}
!3208 = !{!3209, !3209, i64 0}
!3209 = !{!"000002090602AD60.w8.b32", !3210, i64 0}
!3210 = !{!"000002090602AD60.w16.b32", !3211, i64 0}
!3211 = !{!"000002090602AD60.w32.b32", !3195, i64 0}
!3212 = !{!3213, !3213, i64 0}
!3213 = !{!"000002090602C120.w8.b8", !3214, i64 0}
!3214 = !{!"000002090602C120.w16.b0", !3215, i64 0}
!3215 = !{!"000002090602C120.w32.b0", !3216, i64 0}
!3216 = !{!"000002090602C120.w64.b0", !3217, i64 0}
!3217 = !{!"000002090602C120.w128.b0", !3218, i64 0}
!3218 = !{!"000002090602C120.w256.b0", !3219, i64 0}
!3219 = !{!"000002090602C120.w512.b0", !3220, i64 0}
!3220 = !{!"000002090602C120.w1024.b0", !3221, i64 0}
!3221 = !{!"000002090602C120", !21, i64 0}
!3222 = !{!3223, !3223, i64 0}
!3223 = !{!"000002090602C120.w8.b16", !3224, i64 0}
!3224 = !{!"000002090602C120.w16.b16", !3215, i64 0}
!3225 = !{!3226, !3226, i64 0}
!3226 = !{!"000002090602C120.w8.b24", !3224, i64 0}
!3227 = !{!3228, !3228, i64 0}
!3228 = !{!"000002090602C120.w8.b32", !3229, i64 0}
!3229 = !{!"000002090602C120.w16.b32", !3230, i64 0}
!3230 = !{!"000002090602C120.w32.b32", !3216, i64 0}
!3231 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3232)
!3232 = !{!3233, !3234, !3235, !3236, !3237, !3238}
!3233 = !DILocalVariable(name: "arg1", arg: 1, scope: !3231, file: !1, type: !8)
!3234 = !DILocalVariable(name: "arg2", arg: 2, scope: !3231, file: !1, type: !9)
!3235 = !DILocalVariable(name: "arg3", arg: 3, scope: !3231, file: !1, type: !7)
!3236 = !DILocalVariable(name: "arg4", arg: 4, scope: !3231, file: !1, type: !8)
!3237 = !DILocalVariable(name: "arg5", arg: 5, scope: !3231, file: !1, type: !9)
!3238 = !DILocalVariable(name: "arg6", arg: 6, scope: !3231, file: !1, type: !8)
!3239 = !DILocation(line: 0, scope: !3231)
!3240 = !{!3241, !3241, i64 0}
!3241 = !{!"0000020906013320.w4.b0", !3242, i64 0}
!3242 = !{!"0000020906013320.w8.b0", !3243, i64 0}
!3243 = !{!"0000020906013320.w16.b0", !3244, i64 0}
!3244 = !{!"0000020906013320.w32.b0", !3245, i64 0}
!3245 = !{!"0000020906013320.w64.b0", !3246, i64 0}
!3246 = !{!"0000020906013320.w128.b0", !3247, i64 0}
!3247 = !{!"0000020906013320.w256.b0", !3248, i64 0}
!3248 = !{!"0000020906013320.w512.b0", !3249, i64 0}
!3249 = !{!"0000020906013320.w1024.b0", !3250, i64 0}
!3250 = !{!"0000020906013320", !21, i64 0}
!3251 = !{!3252, !3252, i64 0}
!3252 = !{!"0000020906013320.w4.b4", !3242, i64 0}
!3253 = !{!3254, !3254, i64 0}
!3254 = !{!"0000020906015620.w8.b0", !3255, i64 0}
!3255 = !{!"0000020906015620.w16.b0", !3256, i64 0}
!3256 = !{!"0000020906015620.w32.b0", !3257, i64 0}
!3257 = !{!"0000020906015620.w64.b0", !3258, i64 0}
!3258 = !{!"0000020906015620.w128.b0", !3259, i64 0}
!3259 = !{!"0000020906015620.w256.b0", !3260, i64 0}
!3260 = !{!"0000020906015620.w512.b0", !3261, i64 0}
!3261 = !{!"0000020906015620.w1024.b0", !3262, i64 0}
!3262 = !{!"0000020906015620", !21, i64 0}
!3263 = !{!3264, !3264, i64 0}
!3264 = !{!"0000020906015620.w8.b8", !3255, i64 0}
!3265 = !{!3266, !3266, i64 0}
!3266 = !{!"0000020906015620.w8.b16", !3267, i64 0}
!3267 = !{!"0000020906015620.w16.b16", !3256, i64 0}
!3268 = !{!3269, !3269, i64 0}
!3269 = !{!"0000020906015620.w8.b24", !3267, i64 0}
!3270 = !{!3271, !3271, i64 0}
!3271 = !{!"0000020906015620.w8.b32", !3272, i64 0}
!3272 = !{!"0000020906015620.w16.b32", !3273, i64 0}
!3273 = !{!"0000020906015620.w32.b32", !3257, i64 0}
!3274 = !{!3275, !3275, i64 0}
!3275 = !{!"0000020906016660.w8.b8", !3276, i64 0}
!3276 = !{!"0000020906016660.w16.b0", !3277, i64 0}
!3277 = !{!"0000020906016660.w32.b0", !3278, i64 0}
!3278 = !{!"0000020906016660.w64.b0", !3279, i64 0}
!3279 = !{!"0000020906016660.w128.b0", !3280, i64 0}
!3280 = !{!"0000020906016660.w256.b0", !3281, i64 0}
!3281 = !{!"0000020906016660.w512.b0", !3282, i64 0}
!3282 = !{!"0000020906016660.w1024.b0", !3283, i64 0}
!3283 = !{!"0000020906016660", !21, i64 0}
!3284 = !{!3285, !3285, i64 0}
!3285 = !{!"0000020906016660.w8.b16", !3286, i64 0}
!3286 = !{!"0000020906016660.w16.b16", !3277, i64 0}
!3287 = !{!3288, !3288, i64 0}
!3288 = !{!"0000020906016660.w8.b24", !3286, i64 0}
!3289 = !{!3290, !3290, i64 0}
!3290 = !{!"0000020906016660.w8.b32", !3291, i64 0}
!3291 = !{!"0000020906016660.w16.b32", !3292, i64 0}
!3292 = !{!"0000020906016660.w32.b32", !3278, i64 0}
!3293 = !{!3294, !3294, i64 0}
!3294 = !{!"00000209060185E0.w8.b0", !3295, i64 0}
!3295 = !{!"00000209060185E0.w16.b0", !3296, i64 0}
!3296 = !{!"00000209060185E0.w32.b0", !3297, i64 0}
!3297 = !{!"00000209060185E0.w64.b0", !3298, i64 0}
!3298 = !{!"00000209060185E0.w128.b0", !3299, i64 0}
!3299 = !{!"00000209060185E0.w256.b0", !3300, i64 0}
!3300 = !{!"00000209060185E0.w512.b0", !3301, i64 0}
!3301 = !{!"00000209060185E0.w1024.b0", !3302, i64 0}
!3302 = !{!"00000209060185E0", !21, i64 0}
!3303 = !{!3304, !3304, i64 0}
!3304 = !{!"00000209060185E0.w8.b8", !3295, i64 0}
!3305 = !{!3306, !3306, i64 0}
!3306 = !{!"00000209060185E0.w8.b16", !3307, i64 0}
!3307 = !{!"00000209060185E0.w16.b16", !3296, i64 0}
!3308 = !{!3309, !3309, i64 0}
!3309 = !{!"00000209060185E0.w8.b24", !3307, i64 0}
!3310 = !{!3311, !3311, i64 0}
!3311 = !{!"00000209060185E0.w8.b32", !3312, i64 0}
!3312 = !{!"00000209060185E0.w16.b32", !3313, i64 0}
!3313 = !{!"00000209060185E0.w32.b32", !3297, i64 0}
!3314 = !{!3315, !3315, i64 0}
!3315 = !{!"000002090601A6A0.w8.b8", !3316, i64 0}
!3316 = !{!"000002090601A6A0.w16.b0", !3317, i64 0}
!3317 = !{!"000002090601A6A0.w32.b0", !3318, i64 0}
!3318 = !{!"000002090601A6A0.w64.b0", !3319, i64 0}
!3319 = !{!"000002090601A6A0.w128.b0", !3320, i64 0}
!3320 = !{!"000002090601A6A0.w256.b0", !3321, i64 0}
!3321 = !{!"000002090601A6A0.w512.b0", !3322, i64 0}
!3322 = !{!"000002090601A6A0.w1024.b0", !3323, i64 0}
!3323 = !{!"000002090601A6A0", !21, i64 0}
!3324 = !{!3325, !3325, i64 0}
!3325 = !{!"000002090601A6A0.w8.b16", !3326, i64 0}
!3326 = !{!"000002090601A6A0.w16.b16", !3317, i64 0}
!3327 = !{!3328, !3328, i64 0}
!3328 = !{!"000002090601A6A0.w8.b24", !3326, i64 0}
!3329 = !{!3330, !3330, i64 0}
!3330 = !{!"000002090601A6A0.w8.b32", !3331, i64 0}
!3331 = !{!"000002090601A6A0.w16.b32", !3332, i64 0}
!3332 = !{!"000002090601A6A0.w32.b32", !3318, i64 0}
!3333 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3334)
!3334 = !{!3335, !3336, !3337, !3338, !3339, !3340}
!3335 = !DILocalVariable(name: "arg1", arg: 1, scope: !3333, file: !1, type: !8)
!3336 = !DILocalVariable(name: "arg2", arg: 2, scope: !3333, file: !1, type: !9)
!3337 = !DILocalVariable(name: "arg3", arg: 3, scope: !3333, file: !1, type: !7)
!3338 = !DILocalVariable(name: "arg4", arg: 4, scope: !3333, file: !1, type: !8)
!3339 = !DILocalVariable(name: "arg5", arg: 5, scope: !3333, file: !1, type: !9)
!3340 = !DILocalVariable(name: "arg6", arg: 6, scope: !3333, file: !1, type: !8)
!3341 = !DILocation(line: 0, scope: !3333)
!3342 = !{!3343, !3343, i64 0}
!3343 = !{!"00000209060590E0.w4.b0", !3344, i64 0}
!3344 = !{!"00000209060590E0.w8.b0", !3345, i64 0}
!3345 = !{!"00000209060590E0.w16.b0", !3346, i64 0}
!3346 = !{!"00000209060590E0.w32.b0", !3347, i64 0}
!3347 = !{!"00000209060590E0.w64.b0", !3348, i64 0}
!3348 = !{!"00000209060590E0.w128.b0", !3349, i64 0}
!3349 = !{!"00000209060590E0.w256.b0", !3350, i64 0}
!3350 = !{!"00000209060590E0.w512.b0", !3351, i64 0}
!3351 = !{!"00000209060590E0.w1024.b0", !3352, i64 0}
!3352 = !{!"00000209060590E0", !21, i64 0}
!3353 = !{!3354, !3354, i64 0}
!3354 = !{!"00000209060590E0.w4.b4", !3344, i64 0}
!3355 = !{!3356, !3356, i64 0}
!3356 = !{!"000002090605CAA0.w8.b0", !3357, i64 0}
!3357 = !{!"000002090605CAA0.w16.b0", !3358, i64 0}
!3358 = !{!"000002090605CAA0.w32.b0", !3359, i64 0}
!3359 = !{!"000002090605CAA0.w64.b0", !3360, i64 0}
!3360 = !{!"000002090605CAA0.w128.b0", !3361, i64 0}
!3361 = !{!"000002090605CAA0.w256.b0", !3362, i64 0}
!3362 = !{!"000002090605CAA0.w512.b0", !3363, i64 0}
!3363 = !{!"000002090605CAA0.w1024.b0", !3364, i64 0}
!3364 = !{!"000002090605CAA0", !21, i64 0}
!3365 = !{!3366, !3366, i64 0}
!3366 = !{!"000002090605CAA0.w8.b8", !3357, i64 0}
!3367 = !{!3368, !3368, i64 0}
!3368 = !{!"000002090605CAA0.w8.b16", !3369, i64 0}
!3369 = !{!"000002090605CAA0.w16.b16", !3358, i64 0}
!3370 = !{!3371, !3371, i64 0}
!3371 = !{!"000002090605CAA0.w8.b24", !3369, i64 0}
!3372 = !{!3373, !3373, i64 0}
!3373 = !{!"000002090605CAA0.w8.b32", !3374, i64 0}
!3374 = !{!"000002090605CAA0.w16.b32", !3375, i64 0}
!3375 = !{!"000002090605CAA0.w32.b32", !3359, i64 0}
!3376 = !{!3377, !3377, i64 0}
!3377 = !{!"000002090605DEA0.w8.b8", !3378, i64 0}
!3378 = !{!"000002090605DEA0.w16.b0", !3379, i64 0}
!3379 = !{!"000002090605DEA0.w32.b0", !3380, i64 0}
!3380 = !{!"000002090605DEA0.w64.b0", !3381, i64 0}
!3381 = !{!"000002090605DEA0.w128.b0", !3382, i64 0}
!3382 = !{!"000002090605DEA0.w256.b0", !3383, i64 0}
!3383 = !{!"000002090605DEA0.w512.b0", !3384, i64 0}
!3384 = !{!"000002090605DEA0.w1024.b0", !3385, i64 0}
!3385 = !{!"000002090605DEA0", !21, i64 0}
!3386 = !{!3387, !3387, i64 0}
!3387 = !{!"000002090605DEA0.w8.b16", !3388, i64 0}
!3388 = !{!"000002090605DEA0.w16.b16", !3379, i64 0}
!3389 = !{!3390, !3390, i64 0}
!3390 = !{!"000002090605DEA0.w8.b24", !3388, i64 0}
!3391 = !{!3392, !3392, i64 0}
!3392 = !{!"000002090605DEA0.w8.b32", !3393, i64 0}
!3393 = !{!"000002090605DEA0.w16.b32", !3394, i64 0}
!3394 = !{!"000002090605DEA0.w32.b32", !3380, i64 0}
!3395 = !{!3396, !3396, i64 0}
!3396 = !{!"0000020906061320.w8.b0", !3397, i64 0}
!3397 = !{!"0000020906061320.w16.b0", !3398, i64 0}
!3398 = !{!"0000020906061320.w32.b0", !3399, i64 0}
!3399 = !{!"0000020906061320.w64.b0", !3400, i64 0}
!3400 = !{!"0000020906061320.w128.b0", !3401, i64 0}
!3401 = !{!"0000020906061320.w256.b0", !3402, i64 0}
!3402 = !{!"0000020906061320.w512.b0", !3403, i64 0}
!3403 = !{!"0000020906061320.w1024.b0", !3404, i64 0}
!3404 = !{!"0000020906061320", !21, i64 0}
!3405 = !{!3406, !3406, i64 0}
!3406 = !{!"0000020906061320.w8.b8", !3397, i64 0}
!3407 = !{!3408, !3408, i64 0}
!3408 = !{!"0000020906061320.w8.b16", !3409, i64 0}
!3409 = !{!"0000020906061320.w16.b16", !3398, i64 0}
!3410 = !{!3411, !3411, i64 0}
!3411 = !{!"0000020906061320.w8.b24", !3409, i64 0}
!3412 = !{!3413, !3413, i64 0}
!3413 = !{!"0000020906061320.w8.b32", !3414, i64 0}
!3414 = !{!"0000020906061320.w16.b32", !3415, i64 0}
!3415 = !{!"0000020906061320.w32.b32", !3399, i64 0}
!3416 = !{!3417, !3417, i64 0}
!3417 = !{!"0000020906061C60.w8.b8", !3418, i64 0}
!3418 = !{!"0000020906061C60.w16.b0", !3419, i64 0}
!3419 = !{!"0000020906061C60.w32.b0", !3420, i64 0}
!3420 = !{!"0000020906061C60.w64.b0", !3421, i64 0}
!3421 = !{!"0000020906061C60.w128.b0", !3422, i64 0}
!3422 = !{!"0000020906061C60.w256.b0", !3423, i64 0}
!3423 = !{!"0000020906061C60.w512.b0", !3424, i64 0}
!3424 = !{!"0000020906061C60.w1024.b0", !3425, i64 0}
!3425 = !{!"0000020906061C60", !21, i64 0}
!3426 = !{!3427, !3427, i64 0}
!3427 = !{!"0000020906061C60.w8.b32", !3428, i64 0}
!3428 = !{!"0000020906061C60.w16.b32", !3429, i64 0}
!3429 = !{!"0000020906061C60.w32.b32", !3420, i64 0}
!3430 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3431)
!3431 = !{!3432, !3433, !3434, !3435, !3436, !3437}
!3432 = !DILocalVariable(name: "arg1", arg: 1, scope: !3430, file: !1, type: !8)
!3433 = !DILocalVariable(name: "arg2", arg: 2, scope: !3430, file: !1, type: !9)
!3434 = !DILocalVariable(name: "arg3", arg: 3, scope: !3430, file: !1, type: !7)
!3435 = !DILocalVariable(name: "arg4", arg: 4, scope: !3430, file: !1, type: !8)
!3436 = !DILocalVariable(name: "arg5", arg: 5, scope: !3430, file: !1, type: !9)
!3437 = !DILocalVariable(name: "arg6", arg: 6, scope: !3430, file: !1, type: !8)
!3438 = !DILocation(line: 0, scope: !3430)
!3439 = !{!3440, !3440, i64 0}
!3440 = !{!"000002090617EEF0.w4.b0", !3441, i64 0}
!3441 = !{!"000002090617EEF0.w8.b0", !3442, i64 0}
!3442 = !{!"000002090617EEF0.w16.b0", !3443, i64 0}
!3443 = !{!"000002090617EEF0.w32.b0", !3444, i64 0}
!3444 = !{!"000002090617EEF0.w64.b0", !3445, i64 0}
!3445 = !{!"000002090617EEF0.w128.b0", !3446, i64 0}
!3446 = !{!"000002090617EEF0.w256.b0", !3447, i64 0}
!3447 = !{!"000002090617EEF0.w512.b0", !3448, i64 0}
!3448 = !{!"000002090617EEF0.w1024.b0", !3449, i64 0}
!3449 = !{!"000002090617EEF0", !21, i64 0}
!3450 = !{!3451, !3451, i64 0}
!3451 = !{!"000002090617EEF0.w4.b4", !3441, i64 0}
!3452 = !{!3453, !3453, i64 0}
!3453 = !{!"000002090617EEF0.w4.b8", !3454, i64 0}
!3454 = !{!"000002090617EEF0.w8.b8", !3442, i64 0}
!3455 = !{!3456, !3456, i64 0}
!3456 = !{!"00000209061849F0.w8.b0", !3457, i64 0}
!3457 = !{!"00000209061849F0.w16.b0", !3458, i64 0}
!3458 = !{!"00000209061849F0.w32.b0", !3459, i64 0}
!3459 = !{!"00000209061849F0.w64.b0", !3460, i64 0}
!3460 = !{!"00000209061849F0.w128.b0", !3461, i64 0}
!3461 = !{!"00000209061849F0.w256.b0", !3462, i64 0}
!3462 = !{!"00000209061849F0.w512.b0", !3463, i64 0}
!3463 = !{!"00000209061849F0.w1024.b0", !3464, i64 0}
!3464 = !{!"00000209061849F0", !21, i64 0}
!3465 = !{!3466, !3466, i64 0}
!3466 = !{!"00000209061849F0.w8.b8", !3457, i64 0}
!3467 = !{!3468, !3468, i64 0}
!3468 = !{!"00000209061849F0.w8.b16", !3469, i64 0}
!3469 = !{!"00000209061849F0.w16.b16", !3458, i64 0}
!3470 = !{!3471, !3471, i64 0}
!3471 = !{!"00000209061849F0.w8.b24", !3469, i64 0}
!3472 = !{!3473, !3473, i64 0}
!3473 = !{!"00000209061849F0.w8.b32", !3474, i64 0}
!3474 = !{!"00000209061849F0.w16.b32", !3475, i64 0}
!3475 = !{!"00000209061849F0.w32.b32", !3459, i64 0}
!3476 = !{!3477, !3477, i64 0}
!3477 = !{!"0000020906185870.w8.b16", !3478, i64 0}
!3478 = !{!"0000020906185870.w16.b16", !3479, i64 0}
!3479 = !{!"0000020906185870.w32.b0", !3480, i64 0}
!3480 = !{!"0000020906185870.w64.b0", !3481, i64 0}
!3481 = !{!"0000020906185870.w128.b0", !3482, i64 0}
!3482 = !{!"0000020906185870.w256.b0", !3483, i64 0}
!3483 = !{!"0000020906185870.w512.b0", !3484, i64 0}
!3484 = !{!"0000020906185870.w1024.b0", !3485, i64 0}
!3485 = !{!"0000020906185870", !21, i64 0}
!3486 = !{!3487, !3487, i64 0}
!3487 = !{!"0000020906185870.w8.b24", !3478, i64 0}
!3488 = !{!3489, !3489, i64 0}
!3489 = !{!"0000020906185870.w8.b32", !3490, i64 0}
!3490 = !{!"0000020906185870.w16.b32", !3491, i64 0}
!3491 = !{!"0000020906185870.w32.b32", !3480, i64 0}
!3492 = !{!3493, !3493, i64 0}
!3493 = !{!"00000209061678F0.w8.b0", !3494, i64 0}
!3494 = !{!"00000209061678F0.w16.b0", !3495, i64 0}
!3495 = !{!"00000209061678F0.w32.b0", !3496, i64 0}
!3496 = !{!"00000209061678F0.w64.b0", !3497, i64 0}
!3497 = !{!"00000209061678F0.w128.b0", !3498, i64 0}
!3498 = !{!"00000209061678F0.w256.b0", !3499, i64 0}
!3499 = !{!"00000209061678F0.w512.b0", !3500, i64 0}
!3500 = !{!"00000209061678F0.w1024.b0", !3501, i64 0}
!3501 = !{!"00000209061678F0", !21, i64 0}
!3502 = !{!3503, !3503, i64 0}
!3503 = !{!"00000209061678F0.w8.b8", !3494, i64 0}
!3504 = !{!3505, !3505, i64 0}
!3505 = !{!"00000209061678F0.w8.b16", !3506, i64 0}
!3506 = !{!"00000209061678F0.w16.b16", !3495, i64 0}
!3507 = !{!3508, !3508, i64 0}
!3508 = !{!"00000209061678F0.w8.b24", !3506, i64 0}
!3509 = !{!3510, !3510, i64 0}
!3510 = !{!"00000209061678F0.w8.b32", !3511, i64 0}
!3511 = !{!"00000209061678F0.w16.b32", !3512, i64 0}
!3512 = !{!"00000209061678F0.w32.b32", !3496, i64 0}
!3513 = !{!3514, !3514, i64 0}
!3514 = !{!"00000209061678F0.w8.b40", !3511, i64 0}
!3515 = !{!3516, !3516, i64 0}
!3516 = !{!"00000209061676B0.w8.b0", !3517, i64 0}
!3517 = !{!"00000209061676B0.w16.b0", !3518, i64 0}
!3518 = !{!"00000209061676B0.w32.b0", !3519, i64 0}
!3519 = !{!"00000209061676B0.w64.b0", !3520, i64 0}
!3520 = !{!"00000209061676B0.w128.b0", !3521, i64 0}
!3521 = !{!"00000209061676B0.w256.b0", !3522, i64 0}
!3522 = !{!"00000209061676B0.w512.b0", !3523, i64 0}
!3523 = !{!"00000209061676B0.w1024.b0", !3524, i64 0}
!3524 = !{!"00000209061676B0", !21, i64 0}
!3525 = !{!3526, !3526, i64 0}
!3526 = !{!"00000209061676B0.w8.b16", !3527, i64 0}
!3527 = !{!"00000209061676B0.w16.b16", !3518, i64 0}
!3528 = !{!3529, !3529, i64 0}
!3529 = !{!"00000209061676B0.w8.b24", !3527, i64 0}
!3530 = !{!3531, !3531, i64 0}
!3531 = !{!"00000209061676B0.w8.b32", !3532, i64 0}
!3532 = !{!"00000209061676B0.w16.b32", !3533, i64 0}
!3533 = !{!"00000209061676B0.w32.b32", !3519, i64 0}
!3534 = !{!3535, !3535, i64 0}
!3535 = !{!"00000209061676B0.w8.b40", !3532, i64 0}
!3536 = !{!3537, !3537, i64 0}
!3537 = !{!"0000020906172AB0.w8.b0", !3538, i64 0}
!3538 = !{!"0000020906172AB0.w16.b0", !3539, i64 0}
!3539 = !{!"0000020906172AB0.w32.b0", !3540, i64 0}
!3540 = !{!"0000020906172AB0.w64.b0", !3541, i64 0}
!3541 = !{!"0000020906172AB0.w128.b0", !3542, i64 0}
!3542 = !{!"0000020906172AB0.w256.b0", !3543, i64 0}
!3543 = !{!"0000020906172AB0.w512.b0", !3544, i64 0}
!3544 = !{!"0000020906172AB0.w1024.b0", !3545, i64 0}
!3545 = !{!"0000020906172AB0", !21, i64 0}
!3546 = !{!3547, !3547, i64 0}
!3547 = !{!"0000020906172AB0.w8.b8", !3538, i64 0}
!3548 = !{!3549, !3549, i64 0}
!3549 = !{!"0000020906172AB0.w8.b16", !3550, i64 0}
!3550 = !{!"0000020906172AB0.w16.b16", !3539, i64 0}
!3551 = !{!3552, !3552, i64 0}
!3552 = !{!"0000020906172AB0.w8.b24", !3550, i64 0}
!3553 = !{!3554, !3554, i64 0}
!3554 = !{!"0000020906172AB0.w8.b32", !3555, i64 0}
!3555 = !{!"0000020906172AB0.w16.b32", !3556, i64 0}
!3556 = !{!"0000020906172AB0.w32.b32", !3540, i64 0}
!3557 = !{!3558, !3558, i64 0}
!3558 = !{!"000002090611C9F0.w8.b8", !3559, i64 0}
!3559 = !{!"000002090611C9F0.w16.b0", !3560, i64 0}
!3560 = !{!"000002090611C9F0.w32.b0", !3561, i64 0}
!3561 = !{!"000002090611C9F0.w64.b0", !3562, i64 0}
!3562 = !{!"000002090611C9F0.w128.b0", !3563, i64 0}
!3563 = !{!"000002090611C9F0.w256.b0", !3564, i64 0}
!3564 = !{!"000002090611C9F0.w512.b0", !3565, i64 0}
!3565 = !{!"000002090611C9F0.w1024.b0", !3566, i64 0}
!3566 = !{!"000002090611C9F0", !21, i64 0}
!3567 = !{!3568, !3568, i64 0}
!3568 = !{!"000002090611C9F0.w8.b16", !3569, i64 0}
!3569 = !{!"000002090611C9F0.w16.b16", !3560, i64 0}
!3570 = !{!3571, !3571, i64 0}
!3571 = !{!"000002090611C9F0.w8.b24", !3569, i64 0}
!3572 = !{!3573, !3573, i64 0}
!3573 = !{!"000002090611C9F0.w8.b32", !3574, i64 0}
!3574 = !{!"000002090611C9F0.w16.b32", !3575, i64 0}
!3575 = !{!"000002090611C9F0.w32.b32", !3561, i64 0}
!3576 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3577)
!3577 = !{!3578, !3579, !3580, !3581, !3582, !3583}
!3578 = !DILocalVariable(name: "arg1", arg: 1, scope: !3576, file: !1, type: !8)
!3579 = !DILocalVariable(name: "arg2", arg: 2, scope: !3576, file: !1, type: !9)
!3580 = !DILocalVariable(name: "arg3", arg: 3, scope: !3576, file: !1, type: !7)
!3581 = !DILocalVariable(name: "arg4", arg: 4, scope: !3576, file: !1, type: !8)
!3582 = !DILocalVariable(name: "arg5", arg: 5, scope: !3576, file: !1, type: !9)
!3583 = !DILocalVariable(name: "arg6", arg: 6, scope: !3576, file: !1, type: !8)
!3584 = !DILocation(line: 0, scope: !3576)
!3585 = !{!3586, !3586, i64 0}
!3586 = !{!"0000020906103170.w4.b0", !3587, i64 0}
!3587 = !{!"0000020906103170.w8.b0", !3588, i64 0}
!3588 = !{!"0000020906103170.w16.b0", !3589, i64 0}
!3589 = !{!"0000020906103170.w32.b0", !3590, i64 0}
!3590 = !{!"0000020906103170.w64.b0", !3591, i64 0}
!3591 = !{!"0000020906103170.w128.b0", !3592, i64 0}
!3592 = !{!"0000020906103170.w256.b0", !3593, i64 0}
!3593 = !{!"0000020906103170.w512.b0", !3594, i64 0}
!3594 = !{!"0000020906103170.w1024.b0", !3595, i64 0}
!3595 = !{!"0000020906103170", !21, i64 0}
!3596 = !{!3597, !3597, i64 0}
!3597 = !{!"0000020906103170.w4.b4", !3587, i64 0}
!3598 = !{!3599, !3599, i64 0}
!3599 = !{!"0000020906103170.w4.b8", !3600, i64 0}
!3600 = !{!"0000020906103170.w8.b8", !3588, i64 0}
!3601 = !{!3602, !3602, i64 0}
!3602 = !{!"0000020906103170.w4.b12", !3600, i64 0}
!3603 = !{!3604, !3604, i64 0}
!3604 = !{!"0000020906103170.w4.b16", !3605, i64 0}
!3605 = !{!"0000020906103170.w8.b16", !3606, i64 0}
!3606 = !{!"0000020906103170.w16.b16", !3589, i64 0}
!3607 = !{!3608, !3608, i64 0}
!3608 = !{!"000002090610D9F0.w8.b0", !3609, i64 0}
!3609 = !{!"000002090610D9F0.w16.b0", !3610, i64 0}
!3610 = !{!"000002090610D9F0.w32.b0", !3611, i64 0}
!3611 = !{!"000002090610D9F0.w64.b0", !3612, i64 0}
!3612 = !{!"000002090610D9F0.w128.b0", !3613, i64 0}
!3613 = !{!"000002090610D9F0.w256.b0", !3614, i64 0}
!3614 = !{!"000002090610D9F0.w512.b0", !3615, i64 0}
!3615 = !{!"000002090610D9F0.w1024.b0", !3616, i64 0}
!3616 = !{!"000002090610D9F0", !21, i64 0}
!3617 = !{!3618, !3618, i64 0}
!3618 = !{!"000002090610D9F0.w8.b8", !3609, i64 0}
!3619 = !{!3620, !3620, i64 0}
!3620 = !{!"000002090610D9F0.w8.b16", !3621, i64 0}
!3621 = !{!"000002090610D9F0.w16.b16", !3610, i64 0}
!3622 = !{!3623, !3623, i64 0}
!3623 = !{!"000002090610D9F0.w8.b24", !3621, i64 0}
!3624 = !{!3625, !3625, i64 0}
!3625 = !{!"000002090610D9F0.w8.b32", !3626, i64 0}
!3626 = !{!"000002090610D9F0.w16.b32", !3627, i64 0}
!3627 = !{!"000002090610D9F0.w32.b32", !3611, i64 0}
!3628 = !{!3629, !3629, i64 0}
!3629 = !{!"000002090610D3B0.w8.b8", !3630, i64 0}
!3630 = !{!"000002090610D3B0.w16.b0", !3631, i64 0}
!3631 = !{!"000002090610D3B0.w32.b0", !3632, i64 0}
!3632 = !{!"000002090610D3B0.w64.b0", !3633, i64 0}
!3633 = !{!"000002090610D3B0.w128.b0", !3634, i64 0}
!3634 = !{!"000002090610D3B0.w256.b0", !3635, i64 0}
!3635 = !{!"000002090610D3B0.w512.b0", !3636, i64 0}
!3636 = !{!"000002090610D3B0.w1024.b0", !3637, i64 0}
!3637 = !{!"000002090610D3B0", !21, i64 0}
!3638 = !{!3639, !3639, i64 0}
!3639 = !{!"000002090610D3B0.w8.b16", !3640, i64 0}
!3640 = !{!"000002090610D3B0.w16.b16", !3631, i64 0}
!3641 = !{!3642, !3642, i64 0}
!3642 = !{!"000002090610D3B0.w8.b24", !3640, i64 0}
!3643 = !{!3644, !3644, i64 0}
!3644 = !{!"000002090610D3B0.w8.b32", !3645, i64 0}
!3645 = !{!"000002090610D3B0.w16.b32", !3646, i64 0}
!3646 = !{!"000002090610D3B0.w32.b32", !3632, i64 0}
!3647 = !{!3648, !3648, i64 0}
!3648 = !{!"000002090610E2B0.w8.b0", !3649, i64 0}
!3649 = !{!"000002090610E2B0.w16.b0", !3650, i64 0}
!3650 = !{!"000002090610E2B0.w32.b0", !3651, i64 0}
!3651 = !{!"000002090610E2B0.w64.b0", !3652, i64 0}
!3652 = !{!"000002090610E2B0.w128.b0", !3653, i64 0}
!3653 = !{!"000002090610E2B0.w256.b0", !3654, i64 0}
!3654 = !{!"000002090610E2B0.w512.b0", !3655, i64 0}
!3655 = !{!"000002090610E2B0.w1024.b0", !3656, i64 0}
!3656 = !{!"000002090610E2B0", !21, i64 0}
!3657 = !{!3658, !3658, i64 0}
!3658 = !{!"000002090610E2B0.w8.b8", !3649, i64 0}
!3659 = !{!3660, !3660, i64 0}
!3660 = !{!"000002090610E2B0.w8.b16", !3661, i64 0}
!3661 = !{!"000002090610E2B0.w16.b16", !3650, i64 0}
!3662 = !{!3663, !3663, i64 0}
!3663 = !{!"000002090610E2B0.w8.b24", !3661, i64 0}
!3664 = !{!3665, !3665, i64 0}
!3665 = !{!"000002090610E2B0.w8.b32", !3666, i64 0}
!3666 = !{!"000002090610E2B0.w16.b32", !3667, i64 0}
!3667 = !{!"000002090610E2B0.w32.b32", !3651, i64 0}
!3668 = !{!3669, !3669, i64 0}
!3669 = !{!"000002090610E2B0.w8.b40", !3666, i64 0}
!3670 = !{!3671, !3671, i64 0}
!3671 = !{!"000002090610EDF0.w8.b0", !3672, i64 0}
!3672 = !{!"000002090610EDF0.w16.b0", !3673, i64 0}
!3673 = !{!"000002090610EDF0.w32.b0", !3674, i64 0}
!3674 = !{!"000002090610EDF0.w64.b0", !3675, i64 0}
!3675 = !{!"000002090610EDF0.w128.b0", !3676, i64 0}
!3676 = !{!"000002090610EDF0.w256.b0", !3677, i64 0}
!3677 = !{!"000002090610EDF0.w512.b0", !3678, i64 0}
!3678 = !{!"000002090610EDF0.w1024.b0", !3679, i64 0}
!3679 = !{!"000002090610EDF0", !21, i64 0}
!3680 = !{!3681, !3681, i64 0}
!3681 = !{!"000002090610EDF0.w8.b8", !3672, i64 0}
!3682 = !{!3683, !3683, i64 0}
!3683 = !{!"000002090610EDF0.w8.b32", !3684, i64 0}
!3684 = !{!"000002090610EDF0.w16.b32", !3685, i64 0}
!3685 = !{!"000002090610EDF0.w32.b32", !3674, i64 0}
!3686 = !{!3687, !3687, i64 0}
!3687 = !{!"000002090610EDF0.w8.b40", !3684, i64 0}
!3688 = !{!3689, !3689, i64 0}
!3689 = !{!"00000209061104B0.w8.b0", !3690, i64 0}
!3690 = !{!"00000209061104B0.w16.b0", !3691, i64 0}
!3691 = !{!"00000209061104B0.w32.b0", !3692, i64 0}
!3692 = !{!"00000209061104B0.w64.b0", !3693, i64 0}
!3693 = !{!"00000209061104B0.w128.b0", !3694, i64 0}
!3694 = !{!"00000209061104B0.w256.b0", !3695, i64 0}
!3695 = !{!"00000209061104B0.w512.b0", !3696, i64 0}
!3696 = !{!"00000209061104B0.w1024.b0", !3697, i64 0}
!3697 = !{!"00000209061104B0", !21, i64 0}
!3698 = !{!3699, !3699, i64 0}
!3699 = !{!"00000209061104B0.w8.b8", !3690, i64 0}
!3700 = !{!3701, !3701, i64 0}
!3701 = !{!"00000209061104B0.w8.b16", !3702, i64 0}
!3702 = !{!"00000209061104B0.w16.b16", !3691, i64 0}
!3703 = !{!3704, !3704, i64 0}
!3704 = !{!"00000209061104B0.w8.b24", !3702, i64 0}
!3705 = !{!3706, !3706, i64 0}
!3706 = !{!"00000209061104B0.w8.b32", !3707, i64 0}
!3707 = !{!"00000209061104B0.w16.b32", !3708, i64 0}
!3708 = !{!"00000209061104B0.w32.b32", !3692, i64 0}
!3709 = !{!3710, !3710, i64 0}
!3710 = !{!"0000020906111AF0.w8.b8", !3711, i64 0}
!3711 = !{!"0000020906111AF0.w16.b0", !3712, i64 0}
!3712 = !{!"0000020906111AF0.w32.b0", !3713, i64 0}
!3713 = !{!"0000020906111AF0.w64.b0", !3714, i64 0}
!3714 = !{!"0000020906111AF0.w128.b0", !3715, i64 0}
!3715 = !{!"0000020906111AF0.w256.b0", !3716, i64 0}
!3716 = !{!"0000020906111AF0.w512.b0", !3717, i64 0}
!3717 = !{!"0000020906111AF0.w1024.b0", !3718, i64 0}
!3718 = !{!"0000020906111AF0", !21, i64 0}
!3719 = !{!3720, !3720, i64 0}
!3720 = !{!"0000020906111AF0.w8.b16", !3721, i64 0}
!3721 = !{!"0000020906111AF0.w16.b16", !3712, i64 0}
!3722 = !{!3723, !3723, i64 0}
!3723 = !{!"0000020906111AF0.w8.b24", !3721, i64 0}
!3724 = !{!3725, !3725, i64 0}
!3725 = !{!"0000020906111AF0.w8.b32", !3726, i64 0}
!3726 = !{!"0000020906111AF0.w16.b32", !3727, i64 0}
!3727 = !{!"0000020906111AF0.w32.b32", !3713, i64 0}
!3728 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3729)
!3729 = !{!3730, !3731, !3732, !3733, !3734, !3735}
!3730 = !DILocalVariable(name: "arg1", arg: 1, scope: !3728, file: !1, type: !8)
!3731 = !DILocalVariable(name: "arg2", arg: 2, scope: !3728, file: !1, type: !9)
!3732 = !DILocalVariable(name: "arg3", arg: 3, scope: !3728, file: !1, type: !7)
!3733 = !DILocalVariable(name: "arg4", arg: 4, scope: !3728, file: !1, type: !8)
!3734 = !DILocalVariable(name: "arg5", arg: 5, scope: !3728, file: !1, type: !9)
!3735 = !DILocalVariable(name: "arg6", arg: 6, scope: !3728, file: !1, type: !8)
!3736 = !DILocation(line: 0, scope: !3728)
!3737 = !{!3738, !3738, i64 0}
!3738 = !{!"000002090609D9F0.w4.b0", !3739, i64 0}
!3739 = !{!"000002090609D9F0.w8.b0", !3740, i64 0}
!3740 = !{!"000002090609D9F0.w16.b0", !3741, i64 0}
!3741 = !{!"000002090609D9F0.w32.b0", !3742, i64 0}
!3742 = !{!"000002090609D9F0.w64.b0", !3743, i64 0}
!3743 = !{!"000002090609D9F0.w128.b0", !3744, i64 0}
!3744 = !{!"000002090609D9F0.w256.b0", !3745, i64 0}
!3745 = !{!"000002090609D9F0.w512.b0", !3746, i64 0}
!3746 = !{!"000002090609D9F0.w1024.b0", !3747, i64 0}
!3747 = !{!"000002090609D9F0", !21, i64 0}
!3748 = !{!3749, !3749, i64 0}
!3749 = !{!"000002090609D9F0.w4.b4", !3739, i64 0}
!3750 = !{!3751, !3751, i64 0}
!3751 = !{!"000002090609D9F0.w4.b8", !3752, i64 0}
!3752 = !{!"000002090609D9F0.w8.b8", !3740, i64 0}
!3753 = !{!3754, !3754, i64 0}
!3754 = !{!"000002090609D9F0.w4.b12", !3752, i64 0}
!3755 = !{!3756, !3756, i64 0}
!3756 = !{!"000002090609D9F0.w4.b16", !3757, i64 0}
!3757 = !{!"000002090609D9F0.w8.b16", !3758, i64 0}
!3758 = !{!"000002090609D9F0.w16.b16", !3741, i64 0}
!3759 = !{!3760, !3760, i64 0}
!3760 = !{!"00000209060A33F0.w8.b0", !3761, i64 0}
!3761 = !{!"00000209060A33F0.w16.b0", !3762, i64 0}
!3762 = !{!"00000209060A33F0.w32.b0", !3763, i64 0}
!3763 = !{!"00000209060A33F0.w64.b0", !3764, i64 0}
!3764 = !{!"00000209060A33F0.w128.b0", !3765, i64 0}
!3765 = !{!"00000209060A33F0.w256.b0", !3766, i64 0}
!3766 = !{!"00000209060A33F0.w512.b0", !3767, i64 0}
!3767 = !{!"00000209060A33F0.w1024.b0", !3768, i64 0}
!3768 = !{!"00000209060A33F0", !21, i64 0}
!3769 = !{!3770, !3770, i64 0}
!3770 = !{!"00000209060A33F0.w8.b8", !3761, i64 0}
!3771 = !{!3772, !3772, i64 0}
!3772 = !{!"00000209060A33F0.w8.b16", !3773, i64 0}
!3773 = !{!"00000209060A33F0.w16.b16", !3762, i64 0}
!3774 = !{!3775, !3775, i64 0}
!3775 = !{!"00000209060A33F0.w8.b24", !3773, i64 0}
!3776 = !{!3777, !3777, i64 0}
!3777 = !{!"00000209060A33F0.w8.b32", !3778, i64 0}
!3778 = !{!"00000209060A33F0.w16.b32", !3779, i64 0}
!3779 = !{!"00000209060A33F0.w32.b32", !3763, i64 0}
!3780 = !{!3781, !3781, i64 0}
!3781 = !{!"00000209060A6630.w8.b8", !3782, i64 0}
!3782 = !{!"00000209060A6630.w16.b0", !3783, i64 0}
!3783 = !{!"00000209060A6630.w32.b0", !3784, i64 0}
!3784 = !{!"00000209060A6630.w64.b0", !3785, i64 0}
!3785 = !{!"00000209060A6630.w128.b0", !3786, i64 0}
!3786 = !{!"00000209060A6630.w256.b0", !3787, i64 0}
!3787 = !{!"00000209060A6630.w512.b0", !3788, i64 0}
!3788 = !{!"00000209060A6630.w1024.b0", !3789, i64 0}
!3789 = !{!"00000209060A6630", !21, i64 0}
!3790 = !{!3791, !3791, i64 0}
!3791 = !{!"00000209060A6630.w8.b16", !3792, i64 0}
!3792 = !{!"00000209060A6630.w16.b16", !3783, i64 0}
!3793 = !{!3794, !3794, i64 0}
!3794 = !{!"00000209060A6630.w8.b24", !3792, i64 0}
!3795 = !{!3796, !3796, i64 0}
!3796 = !{!"00000209060A6630.w8.b32", !3797, i64 0}
!3797 = !{!"00000209060A6630.w16.b32", !3798, i64 0}
!3798 = !{!"00000209060A6630.w32.b32", !3784, i64 0}
!3799 = !{!3800, !3800, i64 0}
!3800 = !{!"00000209060A7E30.w8.b0", !3801, i64 0}
!3801 = !{!"00000209060A7E30.w16.b0", !3802, i64 0}
!3802 = !{!"00000209060A7E30.w32.b0", !3803, i64 0}
!3803 = !{!"00000209060A7E30.w64.b0", !3804, i64 0}
!3804 = !{!"00000209060A7E30.w128.b0", !3805, i64 0}
!3805 = !{!"00000209060A7E30.w256.b0", !3806, i64 0}
!3806 = !{!"00000209060A7E30.w512.b0", !3807, i64 0}
!3807 = !{!"00000209060A7E30.w1024.b0", !3808, i64 0}
!3808 = !{!"00000209060A7E30", !21, i64 0}
!3809 = !{!3810, !3810, i64 0}
!3810 = !{!"00000209060A7E30.w8.b8", !3801, i64 0}
!3811 = !{!3812, !3812, i64 0}
!3812 = !{!"00000209060A7E30.w8.b16", !3813, i64 0}
!3813 = !{!"00000209060A7E30.w16.b16", !3802, i64 0}
!3814 = !{!3815, !3815, i64 0}
!3815 = !{!"00000209060A7E30.w8.b24", !3813, i64 0}
!3816 = !{!3817, !3817, i64 0}
!3817 = !{!"00000209060A7E30.w8.b32", !3818, i64 0}
!3818 = !{!"00000209060A7E30.w16.b32", !3819, i64 0}
!3819 = !{!"00000209060A7E30.w32.b32", !3803, i64 0}
!3820 = !{!3821, !3821, i64 0}
!3821 = !{!"00000209060A7E30.w8.b40", !3818, i64 0}
!3822 = !{!3823, !3823, i64 0}
!3823 = !{!"00000209060A7C70.w8.b0", !3824, i64 0}
!3824 = !{!"00000209060A7C70.w16.b0", !3825, i64 0}
!3825 = !{!"00000209060A7C70.w32.b0", !3826, i64 0}
!3826 = !{!"00000209060A7C70.w64.b0", !3827, i64 0}
!3827 = !{!"00000209060A7C70.w128.b0", !3828, i64 0}
!3828 = !{!"00000209060A7C70.w256.b0", !3829, i64 0}
!3829 = !{!"00000209060A7C70.w512.b0", !3830, i64 0}
!3830 = !{!"00000209060A7C70.w1024.b0", !3831, i64 0}
!3831 = !{!"00000209060A7C70", !21, i64 0}
!3832 = !{!3833, !3833, i64 0}
!3833 = !{!"00000209060A7C70.w8.b8", !3824, i64 0}
!3834 = !{!3835, !3835, i64 0}
!3835 = !{!"00000209060A7C70.w8.b16", !3836, i64 0}
!3836 = !{!"00000209060A7C70.w16.b16", !3825, i64 0}
!3837 = !{!3838, !3838, i64 0}
!3838 = !{!"00000209060A7C70.w8.b24", !3836, i64 0}
!3839 = !{!3840, !3840, i64 0}
!3840 = !{!"00000209060A7C70.w8.b32", !3841, i64 0}
!3841 = !{!"00000209060A7C70.w16.b32", !3842, i64 0}
!3842 = !{!"00000209060A7C70.w32.b32", !3826, i64 0}
!3843 = !{!3844, !3844, i64 0}
!3844 = !{!"00000209060A7C70.w8.b40", !3841, i64 0}
!3845 = !{!3846, !3846, i64 0}
!3846 = !{!"00000209060AA0F0.w8.b0", !3847, i64 0}
!3847 = !{!"00000209060AA0F0.w16.b0", !3848, i64 0}
!3848 = !{!"00000209060AA0F0.w32.b0", !3849, i64 0}
!3849 = !{!"00000209060AA0F0.w64.b0", !3850, i64 0}
!3850 = !{!"00000209060AA0F0.w128.b0", !3851, i64 0}
!3851 = !{!"00000209060AA0F0.w256.b0", !3852, i64 0}
!3852 = !{!"00000209060AA0F0.w512.b0", !3853, i64 0}
!3853 = !{!"00000209060AA0F0.w1024.b0", !3854, i64 0}
!3854 = !{!"00000209060AA0F0", !21, i64 0}
!3855 = !{!3856, !3856, i64 0}
!3856 = !{!"00000209060AA0F0.w8.b8", !3847, i64 0}
!3857 = !{!3858, !3858, i64 0}
!3858 = !{!"00000209060AA0F0.w8.b16", !3859, i64 0}
!3859 = !{!"00000209060AA0F0.w16.b16", !3848, i64 0}
!3860 = !{!3861, !3861, i64 0}
!3861 = !{!"00000209060AA0F0.w8.b24", !3859, i64 0}
!3862 = !{!3863, !3863, i64 0}
!3863 = !{!"00000209060AA0F0.w8.b32", !3864, i64 0}
!3864 = !{!"00000209060AA0F0.w16.b32", !3865, i64 0}
!3865 = !{!"00000209060AA0F0.w32.b32", !3849, i64 0}
!3866 = !{!3867, !3867, i64 0}
!3867 = !{!"00000209060A9730.w8.b8", !3868, i64 0}
!3868 = !{!"00000209060A9730.w16.b0", !3869, i64 0}
!3869 = !{!"00000209060A9730.w32.b0", !3870, i64 0}
!3870 = !{!"00000209060A9730.w64.b0", !3871, i64 0}
!3871 = !{!"00000209060A9730.w128.b0", !3872, i64 0}
!3872 = !{!"00000209060A9730.w256.b0", !3873, i64 0}
!3873 = !{!"00000209060A9730.w512.b0", !3874, i64 0}
!3874 = !{!"00000209060A9730.w1024.b0", !3875, i64 0}
!3875 = !{!"00000209060A9730", !21, i64 0}
!3876 = !{!3877, !3877, i64 0}
!3877 = !{!"00000209060A9730.w8.b16", !3878, i64 0}
!3878 = !{!"00000209060A9730.w16.b16", !3869, i64 0}
!3879 = !{!3880, !3880, i64 0}
!3880 = !{!"00000209060A9730.w8.b24", !3878, i64 0}
!3881 = !{!3882, !3882, i64 0}
!3882 = !{!"00000209060A9730.w8.b32", !3883, i64 0}
!3883 = !{!"00000209060A9730.w16.b32", !3884, i64 0}
!3884 = !{!"00000209060A9730.w32.b32", !3870, i64 0}
!3885 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3886)
!3886 = !{!3887, !3888, !3889, !3890, !3891, !3892}
!3887 = !DILocalVariable(name: "arg1", arg: 1, scope: !3885, file: !1, type: !8)
!3888 = !DILocalVariable(name: "arg2", arg: 2, scope: !3885, file: !1, type: !9)
!3889 = !DILocalVariable(name: "arg3", arg: 3, scope: !3885, file: !1, type: !7)
!3890 = !DILocalVariable(name: "arg4", arg: 4, scope: !3885, file: !1, type: !8)
!3891 = !DILocalVariable(name: "arg5", arg: 5, scope: !3885, file: !1, type: !9)
!3892 = !DILocalVariable(name: "arg6", arg: 6, scope: !3885, file: !1, type: !8)
!3893 = !DILocation(line: 0, scope: !3885)
!3894 = !{!3895, !3895, i64 0}
!3895 = !{!"00000209061744B0.w4.b0", !3896, i64 0}
!3896 = !{!"00000209061744B0.w8.b0", !3897, i64 0}
!3897 = !{!"00000209061744B0.w16.b0", !3898, i64 0}
!3898 = !{!"00000209061744B0.w32.b0", !3899, i64 0}
!3899 = !{!"00000209061744B0.w64.b0", !3900, i64 0}
!3900 = !{!"00000209061744B0.w128.b0", !3901, i64 0}
!3901 = !{!"00000209061744B0.w256.b0", !3902, i64 0}
!3902 = !{!"00000209061744B0.w512.b0", !3903, i64 0}
!3903 = !{!"00000209061744B0.w1024.b0", !3904, i64 0}
!3904 = !{!"00000209061744B0", !21, i64 0}
!3905 = !{!3906, !3906, i64 0}
!3906 = !{!"00000209061744B0.w4.b4", !3896, i64 0}
!3907 = !{!3908, !3908, i64 0}
!3908 = !{!"00000209061744B0.w4.b8", !3909, i64 0}
!3909 = !{!"00000209061744B0.w8.b8", !3897, i64 0}
!3910 = !{!3911, !3911, i64 0}
!3911 = !{!"00000209061744B0.w4.b12", !3909, i64 0}
!3912 = !{!3913, !3913, i64 0}
!3913 = !{!"00000209061744B0.w4.b16", !3914, i64 0}
!3914 = !{!"00000209061744B0.w8.b16", !3915, i64 0}
!3915 = !{!"00000209061744B0.w16.b16", !3898, i64 0}
!3916 = !{!3917, !3917, i64 0}
!3917 = !{!"000002090617A4B0.w8.b0", !3918, i64 0}
!3918 = !{!"000002090617A4B0.w16.b0", !3919, i64 0}
!3919 = !{!"000002090617A4B0.w32.b0", !3920, i64 0}
!3920 = !{!"000002090617A4B0.w64.b0", !3921, i64 0}
!3921 = !{!"000002090617A4B0.w128.b0", !3922, i64 0}
!3922 = !{!"000002090617A4B0.w256.b0", !3923, i64 0}
!3923 = !{!"000002090617A4B0.w512.b0", !3924, i64 0}
!3924 = !{!"000002090617A4B0.w1024.b0", !3925, i64 0}
!3925 = !{!"000002090617A4B0", !21, i64 0}
!3926 = !{!3927, !3927, i64 0}
!3927 = !{!"000002090617A4B0.w8.b8", !3918, i64 0}
!3928 = !{!3929, !3929, i64 0}
!3929 = !{!"000002090617A4B0.w8.b16", !3930, i64 0}
!3930 = !{!"000002090617A4B0.w16.b16", !3919, i64 0}
!3931 = !{!3932, !3932, i64 0}
!3932 = !{!"000002090617A4B0.w8.b24", !3930, i64 0}
!3933 = !{!3934, !3934, i64 0}
!3934 = !{!"000002090617A4B0.w8.b32", !3935, i64 0}
!3935 = !{!"000002090617A4B0.w16.b32", !3936, i64 0}
!3936 = !{!"000002090617A4B0.w32.b32", !3920, i64 0}
!3937 = !{!3938, !3938, i64 0}
!3938 = !{!"000002090617D5F0.w8.b8", !3939, i64 0}
!3939 = !{!"000002090617D5F0.w16.b0", !3940, i64 0}
!3940 = !{!"000002090617D5F0.w32.b0", !3941, i64 0}
!3941 = !{!"000002090617D5F0.w64.b0", !3942, i64 0}
!3942 = !{!"000002090617D5F0.w128.b0", !3943, i64 0}
!3943 = !{!"000002090617D5F0.w256.b0", !3944, i64 0}
!3944 = !{!"000002090617D5F0.w512.b0", !3945, i64 0}
!3945 = !{!"000002090617D5F0.w1024.b0", !3946, i64 0}
!3946 = !{!"000002090617D5F0", !21, i64 0}
!3947 = !{!3948, !3948, i64 0}
!3948 = !{!"000002090617D5F0.w8.b16", !3949, i64 0}
!3949 = !{!"000002090617D5F0.w16.b16", !3940, i64 0}
!3950 = !{!3951, !3951, i64 0}
!3951 = !{!"000002090617D5F0.w8.b24", !3949, i64 0}
!3952 = !{!3953, !3953, i64 0}
!3953 = !{!"000002090617D5F0.w8.b32", !3954, i64 0}
!3954 = !{!"000002090617D5F0.w16.b32", !3955, i64 0}
!3955 = !{!"000002090617D5F0.w32.b32", !3941, i64 0}
!3956 = !{!3957, !3957, i64 0}
!3957 = !{!"000002090617DEF0.w8.b0", !3958, i64 0}
!3958 = !{!"000002090617DEF0.w16.b0", !3959, i64 0}
!3959 = !{!"000002090617DEF0.w32.b0", !3960, i64 0}
!3960 = !{!"000002090617DEF0.w64.b0", !3961, i64 0}
!3961 = !{!"000002090617DEF0.w128.b0", !3962, i64 0}
!3962 = !{!"000002090617DEF0.w256.b0", !3963, i64 0}
!3963 = !{!"000002090617DEF0.w512.b0", !3964, i64 0}
!3964 = !{!"000002090617DEF0.w1024.b0", !3965, i64 0}
!3965 = !{!"000002090617DEF0", !21, i64 0}
!3966 = !{!3967, !3967, i64 0}
!3967 = !{!"000002090617DEF0.w8.b8", !3958, i64 0}
!3968 = !{!3969, !3969, i64 0}
!3969 = !{!"000002090617DEF0.w8.b16", !3970, i64 0}
!3970 = !{!"000002090617DEF0.w16.b16", !3959, i64 0}
!3971 = !{!3972, !3972, i64 0}
!3972 = !{!"000002090617DEF0.w8.b24", !3970, i64 0}
!3973 = !{!3974, !3974, i64 0}
!3974 = !{!"000002090617DEF0.w8.b32", !3975, i64 0}
!3975 = !{!"000002090617DEF0.w16.b32", !3976, i64 0}
!3976 = !{!"000002090617DEF0.w32.b32", !3960, i64 0}
!3977 = !{!3978, !3978, i64 0}
!3978 = !{!"000002090617DEF0.w8.b40", !3975, i64 0}
!3979 = !{!3980, !3980, i64 0}
!3980 = !{!"000002090617ECB0.w8.b0", !3981, i64 0}
!3981 = !{!"000002090617ECB0.w16.b0", !3982, i64 0}
!3982 = !{!"000002090617ECB0.w32.b0", !3983, i64 0}
!3983 = !{!"000002090617ECB0.w64.b0", !3984, i64 0}
!3984 = !{!"000002090617ECB0.w128.b0", !3985, i64 0}
!3985 = !{!"000002090617ECB0.w256.b0", !3986, i64 0}
!3986 = !{!"000002090617ECB0.w512.b0", !3987, i64 0}
!3987 = !{!"000002090617ECB0.w1024.b0", !3988, i64 0}
!3988 = !{!"000002090617ECB0", !21, i64 0}
!3989 = !{!3990, !3990, i64 0}
!3990 = !{!"000002090617ECB0.w8.b8", !3981, i64 0}
!3991 = !{!3992, !3992, i64 0}
!3992 = !{!"000002090617ECB0.w8.b32", !3993, i64 0}
!3993 = !{!"000002090617ECB0.w16.b32", !3994, i64 0}
!3994 = !{!"000002090617ECB0.w32.b32", !3983, i64 0}
!3995 = !{!3996, !3996, i64 0}
!3996 = !{!"000002090617ECB0.w8.b40", !3993, i64 0}
!3997 = !{!3998, !3998, i64 0}
!3998 = !{!"0000020906180670.w8.b0", !3999, i64 0}
!3999 = !{!"0000020906180670.w16.b0", !4000, i64 0}
!4000 = !{!"0000020906180670.w32.b0", !4001, i64 0}
!4001 = !{!"0000020906180670.w64.b0", !4002, i64 0}
!4002 = !{!"0000020906180670.w128.b0", !4003, i64 0}
!4003 = !{!"0000020906180670.w256.b0", !4004, i64 0}
!4004 = !{!"0000020906180670.w512.b0", !4005, i64 0}
!4005 = !{!"0000020906180670.w1024.b0", !4006, i64 0}
!4006 = !{!"0000020906180670", !21, i64 0}
!4007 = !{!4008, !4008, i64 0}
!4008 = !{!"0000020906180670.w8.b8", !3999, i64 0}
!4009 = !{!4010, !4010, i64 0}
!4010 = !{!"0000020906180670.w8.b16", !4011, i64 0}
!4011 = !{!"0000020906180670.w16.b16", !4000, i64 0}
!4012 = !{!4013, !4013, i64 0}
!4013 = !{!"0000020906180670.w8.b24", !4011, i64 0}
!4014 = !{!4015, !4015, i64 0}
!4015 = !{!"0000020906180670.w8.b32", !4016, i64 0}
!4016 = !{!"0000020906180670.w16.b32", !4017, i64 0}
!4017 = !{!"0000020906180670.w32.b32", !4001, i64 0}
!4018 = !{!4019, !4019, i64 0}
!4019 = !{!"00000209061805B0.w8.b8", !4020, i64 0}
!4020 = !{!"00000209061805B0.w16.b0", !4021, i64 0}
!4021 = !{!"00000209061805B0.w32.b0", !4022, i64 0}
!4022 = !{!"00000209061805B0.w64.b0", !4023, i64 0}
!4023 = !{!"00000209061805B0.w128.b0", !4024, i64 0}
!4024 = !{!"00000209061805B0.w256.b0", !4025, i64 0}
!4025 = !{!"00000209061805B0.w512.b0", !4026, i64 0}
!4026 = !{!"00000209061805B0.w1024.b0", !4027, i64 0}
!4027 = !{!"00000209061805B0", !21, i64 0}
!4028 = !{!4029, !4029, i64 0}
!4029 = !{!"00000209061805B0.w8.b16", !4030, i64 0}
!4030 = !{!"00000209061805B0.w16.b16", !4021, i64 0}
!4031 = !{!4032, !4032, i64 0}
!4032 = !{!"00000209061805B0.w8.b24", !4030, i64 0}
!4033 = !{!4034, !4034, i64 0}
!4034 = !{!"00000209061805B0.w8.b32", !4035, i64 0}
!4035 = !{!"00000209061805B0.w16.b32", !4036, i64 0}
!4036 = !{!"00000209061805B0.w32.b32", !4022, i64 0}
!4037 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4038)
!4038 = !{!4039, !4040, !4041, !4042, !4043, !4044}
!4039 = !DILocalVariable(name: "arg1", arg: 1, scope: !4037, file: !1, type: !8)
!4040 = !DILocalVariable(name: "arg2", arg: 2, scope: !4037, file: !1, type: !9)
!4041 = !DILocalVariable(name: "arg3", arg: 3, scope: !4037, file: !1, type: !7)
!4042 = !DILocalVariable(name: "arg4", arg: 4, scope: !4037, file: !1, type: !8)
!4043 = !DILocalVariable(name: "arg5", arg: 5, scope: !4037, file: !1, type: !9)
!4044 = !DILocalVariable(name: "arg6", arg: 6, scope: !4037, file: !1, type: !8)
!4045 = !DILocation(line: 0, scope: !4037)
!4046 = !{!4047, !4047, i64 0}
!4047 = !{!"0000020906171BF0.w4.b0", !4048, i64 0}
!4048 = !{!"0000020906171BF0.w8.b0", !4049, i64 0}
!4049 = !{!"0000020906171BF0.w16.b0", !4050, i64 0}
!4050 = !{!"0000020906171BF0.w32.b0", !4051, i64 0}
!4051 = !{!"0000020906171BF0.w64.b0", !4052, i64 0}
!4052 = !{!"0000020906171BF0.w128.b0", !4053, i64 0}
!4053 = !{!"0000020906171BF0.w256.b0", !4054, i64 0}
!4054 = !{!"0000020906171BF0.w512.b0", !4055, i64 0}
!4055 = !{!"0000020906171BF0.w1024.b0", !4056, i64 0}
!4056 = !{!"0000020906171BF0", !21, i64 0}
!4057 = !{!4058, !4058, i64 0}
!4058 = !{!"0000020906171BF0.w4.b4", !4048, i64 0}
!4059 = !{!4060, !4060, i64 0}
!4060 = !{!"0000020906171BF0.w4.b8", !4061, i64 0}
!4061 = !{!"0000020906171BF0.w8.b8", !4049, i64 0}
!4062 = !{!4063, !4063, i64 0}
!4063 = !{!"0000020906171BF0.w4.b12", !4061, i64 0}
!4064 = !{!4065, !4065, i64 0}
!4065 = !{!"0000020906171BF0.w4.b16", !4066, i64 0}
!4066 = !{!"0000020906171BF0.w8.b16", !4067, i64 0}
!4067 = !{!"0000020906171BF0.w16.b16", !4050, i64 0}
!4068 = !{!4069, !4069, i64 0}
!4069 = !{!"0000020906175930.w8.b0", !4070, i64 0}
!4070 = !{!"0000020906175930.w16.b0", !4071, i64 0}
!4071 = !{!"0000020906175930.w32.b0", !4072, i64 0}
!4072 = !{!"0000020906175930.w64.b0", !4073, i64 0}
!4073 = !{!"0000020906175930.w128.b0", !4074, i64 0}
!4074 = !{!"0000020906175930.w256.b0", !4075, i64 0}
!4075 = !{!"0000020906175930.w512.b0", !4076, i64 0}
!4076 = !{!"0000020906175930.w1024.b0", !4077, i64 0}
!4077 = !{!"0000020906175930", !21, i64 0}
!4078 = !{!4079, !4079, i64 0}
!4079 = !{!"0000020906175930.w8.b8", !4070, i64 0}
!4080 = !{!4081, !4081, i64 0}
!4081 = !{!"0000020906175930.w8.b16", !4082, i64 0}
!4082 = !{!"0000020906175930.w16.b16", !4071, i64 0}
!4083 = !{!4084, !4084, i64 0}
!4084 = !{!"0000020906175930.w8.b24", !4082, i64 0}
!4085 = !{!4086, !4086, i64 0}
!4086 = !{!"0000020906175930.w8.b32", !4087, i64 0}
!4087 = !{!"0000020906175930.w16.b32", !4088, i64 0}
!4088 = !{!"0000020906175930.w32.b32", !4072, i64 0}
!4089 = !{!4090, !4090, i64 0}
!4090 = !{!"00000209061773F0.w8.b8", !4091, i64 0}
!4091 = !{!"00000209061773F0.w16.b0", !4092, i64 0}
!4092 = !{!"00000209061773F0.w32.b0", !4093, i64 0}
!4093 = !{!"00000209061773F0.w64.b0", !4094, i64 0}
!4094 = !{!"00000209061773F0.w128.b0", !4095, i64 0}
!4095 = !{!"00000209061773F0.w256.b0", !4096, i64 0}
!4096 = !{!"00000209061773F0.w512.b0", !4097, i64 0}
!4097 = !{!"00000209061773F0.w1024.b0", !4098, i64 0}
!4098 = !{!"00000209061773F0", !21, i64 0}
!4099 = !{!4100, !4100, i64 0}
!4100 = !{!"00000209061773F0.w8.b16", !4101, i64 0}
!4101 = !{!"00000209061773F0.w16.b16", !4092, i64 0}
!4102 = !{!4103, !4103, i64 0}
!4103 = !{!"00000209061773F0.w8.b24", !4101, i64 0}
!4104 = !{!4105, !4105, i64 0}
!4105 = !{!"00000209061773F0.w8.b32", !4106, i64 0}
!4106 = !{!"00000209061773F0.w16.b32", !4107, i64 0}
!4107 = !{!"00000209061773F0.w32.b32", !4093, i64 0}
!4108 = !{!4109, !4109, i64 0}
!4109 = !{!"0000020906178EB0.w8.b0", !4110, i64 0}
!4110 = !{!"0000020906178EB0.w16.b0", !4111, i64 0}
!4111 = !{!"0000020906178EB0.w32.b0", !4112, i64 0}
!4112 = !{!"0000020906178EB0.w64.b0", !4113, i64 0}
!4113 = !{!"0000020906178EB0.w128.b0", !4114, i64 0}
!4114 = !{!"0000020906178EB0.w256.b0", !4115, i64 0}
!4115 = !{!"0000020906178EB0.w512.b0", !4116, i64 0}
!4116 = !{!"0000020906178EB0.w1024.b0", !4117, i64 0}
!4117 = !{!"0000020906178EB0", !21, i64 0}
!4118 = !{!4119, !4119, i64 0}
!4119 = !{!"0000020906178EB0.w8.b8", !4110, i64 0}
!4120 = !{!4121, !4121, i64 0}
!4121 = !{!"0000020906178EB0.w8.b16", !4122, i64 0}
!4122 = !{!"0000020906178EB0.w16.b16", !4111, i64 0}
!4123 = !{!4124, !4124, i64 0}
!4124 = !{!"0000020906178EB0.w8.b24", !4122, i64 0}
!4125 = !{!4126, !4126, i64 0}
!4126 = !{!"0000020906178EB0.w8.b32", !4127, i64 0}
!4127 = !{!"0000020906178EB0.w16.b32", !4128, i64 0}
!4128 = !{!"0000020906178EB0.w32.b32", !4112, i64 0}
!4129 = !{!4130, !4130, i64 0}
!4130 = !{!"0000020906178EB0.w8.b40", !4127, i64 0}
!4131 = !{!4132, !4132, i64 0}
!4132 = !{!"0000020906178EF0.w8.b0", !4133, i64 0}
!4133 = !{!"0000020906178EF0.w16.b0", !4134, i64 0}
!4134 = !{!"0000020906178EF0.w32.b0", !4135, i64 0}
!4135 = !{!"0000020906178EF0.w64.b0", !4136, i64 0}
!4136 = !{!"0000020906178EF0.w128.b0", !4137, i64 0}
!4137 = !{!"0000020906178EF0.w256.b0", !4138, i64 0}
!4138 = !{!"0000020906178EF0.w512.b0", !4139, i64 0}
!4139 = !{!"0000020906178EF0.w1024.b0", !4140, i64 0}
!4140 = !{!"0000020906178EF0", !21, i64 0}
!4141 = !{!4142, !4142, i64 0}
!4142 = !{!"0000020906178EF0.w8.b8", !4133, i64 0}
!4143 = !{!4144, !4144, i64 0}
!4144 = !{!"0000020906178EF0.w8.b16", !4145, i64 0}
!4145 = !{!"0000020906178EF0.w16.b16", !4134, i64 0}
!4146 = !{!4147, !4147, i64 0}
!4147 = !{!"0000020906178EF0.w8.b24", !4145, i64 0}
!4148 = !{!4149, !4149, i64 0}
!4149 = !{!"0000020906178EF0.w8.b32", !4150, i64 0}
!4150 = !{!"0000020906178EF0.w16.b32", !4151, i64 0}
!4151 = !{!"0000020906178EF0.w32.b32", !4135, i64 0}
!4152 = !{!4153, !4153, i64 0}
!4153 = !{!"0000020906178EF0.w8.b40", !4150, i64 0}
!4154 = !{!4155, !4155, i64 0}
!4155 = !{!"000002090617AF30.w8.b0", !4156, i64 0}
!4156 = !{!"000002090617AF30.w16.b0", !4157, i64 0}
!4157 = !{!"000002090617AF30.w32.b0", !4158, i64 0}
!4158 = !{!"000002090617AF30.w64.b0", !4159, i64 0}
!4159 = !{!"000002090617AF30.w128.b0", !4160, i64 0}
!4160 = !{!"000002090617AF30.w256.b0", !4161, i64 0}
!4161 = !{!"000002090617AF30.w512.b0", !4162, i64 0}
!4162 = !{!"000002090617AF30.w1024.b0", !4163, i64 0}
!4163 = !{!"000002090617AF30", !21, i64 0}
!4164 = !{!4165, !4165, i64 0}
!4165 = !{!"000002090617AF30.w8.b8", !4156, i64 0}
!4166 = !{!4167, !4167, i64 0}
!4167 = !{!"000002090617AF30.w8.b16", !4168, i64 0}
!4168 = !{!"000002090617AF30.w16.b16", !4157, i64 0}
!4169 = !{!4170, !4170, i64 0}
!4170 = !{!"000002090617AF30.w8.b24", !4168, i64 0}
!4171 = !{!4172, !4172, i64 0}
!4172 = !{!"000002090617AF30.w8.b32", !4173, i64 0}
!4173 = !{!"000002090617AF30.w16.b32", !4174, i64 0}
!4174 = !{!"000002090617AF30.w32.b32", !4158, i64 0}
!4175 = !{!4176, !4176, i64 0}
!4176 = !{!"000002090617C130.w8.b8", !4177, i64 0}
!4177 = !{!"000002090617C130.w16.b0", !4178, i64 0}
!4178 = !{!"000002090617C130.w32.b0", !4179, i64 0}
!4179 = !{!"000002090617C130.w64.b0", !4180, i64 0}
!4180 = !{!"000002090617C130.w128.b0", !4181, i64 0}
!4181 = !{!"000002090617C130.w256.b0", !4182, i64 0}
!4182 = !{!"000002090617C130.w512.b0", !4183, i64 0}
!4183 = !{!"000002090617C130.w1024.b0", !4184, i64 0}
!4184 = !{!"000002090617C130", !21, i64 0}
!4185 = !{!4186, !4186, i64 0}
!4186 = !{!"000002090617C130.w8.b16", !4187, i64 0}
!4187 = !{!"000002090617C130.w16.b16", !4178, i64 0}
!4188 = !{!4189, !4189, i64 0}
!4189 = !{!"000002090617C130.w8.b24", !4187, i64 0}
!4190 = !{!4191, !4191, i64 0}
!4191 = !{!"000002090617C130.w8.b32", !4192, i64 0}
!4192 = !{!"000002090617C130.w16.b32", !4193, i64 0}
!4193 = !{!"000002090617C130.w32.b32", !4179, i64 0}
!4194 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4195)
!4195 = !{!4196, !4197, !4198, !4199, !4200, !4201}
!4196 = !DILocalVariable(name: "arg1", arg: 1, scope: !4194, file: !1, type: !8)
!4197 = !DILocalVariable(name: "arg2", arg: 2, scope: !4194, file: !1, type: !9)
!4198 = !DILocalVariable(name: "arg3", arg: 3, scope: !4194, file: !1, type: !7)
!4199 = !DILocalVariable(name: "arg4", arg: 4, scope: !4194, file: !1, type: !8)
!4200 = !DILocalVariable(name: "arg5", arg: 5, scope: !4194, file: !1, type: !9)
!4201 = !DILocalVariable(name: "arg6", arg: 6, scope: !4194, file: !1, type: !8)
!4202 = !DILocation(line: 0, scope: !4194)
!4203 = !{!4204, !4204, i64 0}
!4204 = !{!"000002090609A470.w4.b0", !4205, i64 0}
!4205 = !{!"000002090609A470.w8.b0", !4206, i64 0}
!4206 = !{!"000002090609A470.w16.b0", !4207, i64 0}
!4207 = !{!"000002090609A470.w32.b0", !4208, i64 0}
!4208 = !{!"000002090609A470.w64.b0", !4209, i64 0}
!4209 = !{!"000002090609A470.w128.b0", !4210, i64 0}
!4210 = !{!"000002090609A470.w256.b0", !4211, i64 0}
!4211 = !{!"000002090609A470.w512.b0", !4212, i64 0}
!4212 = !{!"000002090609A470.w1024.b0", !4213, i64 0}
!4213 = !{!"000002090609A470", !21, i64 0}
!4214 = !{!4215, !4215, i64 0}
!4215 = !{!"000002090609A470.w4.b4", !4205, i64 0}
!4216 = !{!4217, !4217, i64 0}
!4217 = !{!"000002090609A470.w4.b8", !4218, i64 0}
!4218 = !{!"000002090609A470.w8.b8", !4206, i64 0}
!4219 = !{!4220, !4220, i64 0}
!4220 = !{!"000002090609A470.w4.b12", !4218, i64 0}
!4221 = !{!4222, !4222, i64 0}
!4222 = !{!"000002090609A470.w4.b16", !4223, i64 0}
!4223 = !{!"000002090609A470.w8.b16", !4224, i64 0}
!4224 = !{!"000002090609A470.w16.b16", !4207, i64 0}
!4225 = !{!4226, !4226, i64 0}
!4226 = !{!"000002090609E5B0.w8.b0", !4227, i64 0}
!4227 = !{!"000002090609E5B0.w16.b0", !4228, i64 0}
!4228 = !{!"000002090609E5B0.w32.b0", !4229, i64 0}
!4229 = !{!"000002090609E5B0.w64.b0", !4230, i64 0}
!4230 = !{!"000002090609E5B0.w128.b0", !4231, i64 0}
!4231 = !{!"000002090609E5B0.w256.b0", !4232, i64 0}
!4232 = !{!"000002090609E5B0.w512.b0", !4233, i64 0}
!4233 = !{!"000002090609E5B0.w1024.b0", !4234, i64 0}
!4234 = !{!"000002090609E5B0", !21, i64 0}
!4235 = !{!4236, !4236, i64 0}
!4236 = !{!"000002090609E5B0.w8.b8", !4227, i64 0}
!4237 = !{!4238, !4238, i64 0}
!4238 = !{!"000002090609E5B0.w8.b16", !4239, i64 0}
!4239 = !{!"000002090609E5B0.w16.b16", !4228, i64 0}
!4240 = !{!4241, !4241, i64 0}
!4241 = !{!"000002090609E5B0.w8.b24", !4239, i64 0}
!4242 = !{!4243, !4243, i64 0}
!4243 = !{!"000002090609E5B0.w8.b32", !4244, i64 0}
!4244 = !{!"000002090609E5B0.w16.b32", !4245, i64 0}
!4245 = !{!"000002090609E5B0.w32.b32", !4229, i64 0}
!4246 = !{!4247, !4247, i64 0}
!4247 = !{!"00000209060A1970.w8.b8", !4248, i64 0}
!4248 = !{!"00000209060A1970.w16.b0", !4249, i64 0}
!4249 = !{!"00000209060A1970.w32.b0", !4250, i64 0}
!4250 = !{!"00000209060A1970.w64.b0", !4251, i64 0}
!4251 = !{!"00000209060A1970.w128.b0", !4252, i64 0}
!4252 = !{!"00000209060A1970.w256.b0", !4253, i64 0}
!4253 = !{!"00000209060A1970.w512.b0", !4254, i64 0}
!4254 = !{!"00000209060A1970.w1024.b0", !4255, i64 0}
!4255 = !{!"00000209060A1970", !21, i64 0}
!4256 = !{!4257, !4257, i64 0}
!4257 = !{!"00000209060A1970.w8.b16", !4258, i64 0}
!4258 = !{!"00000209060A1970.w16.b16", !4249, i64 0}
!4259 = !{!4260, !4260, i64 0}
!4260 = !{!"00000209060A1970.w8.b24", !4258, i64 0}
!4261 = !{!4262, !4262, i64 0}
!4262 = !{!"00000209060A1970.w8.b32", !4263, i64 0}
!4263 = !{!"00000209060A1970.w16.b32", !4264, i64 0}
!4264 = !{!"00000209060A1970.w32.b32", !4250, i64 0}
!4265 = !{!4266, !4266, i64 0}
!4266 = !{!"00000209060A1EF0.w8.b0", !4267, i64 0}
!4267 = !{!"00000209060A1EF0.w16.b0", !4268, i64 0}
!4268 = !{!"00000209060A1EF0.w32.b0", !4269, i64 0}
!4269 = !{!"00000209060A1EF0.w64.b0", !4270, i64 0}
!4270 = !{!"00000209060A1EF0.w128.b0", !4271, i64 0}
!4271 = !{!"00000209060A1EF0.w256.b0", !4272, i64 0}
!4272 = !{!"00000209060A1EF0.w512.b0", !4273, i64 0}
!4273 = !{!"00000209060A1EF0.w1024.b0", !4274, i64 0}
!4274 = !{!"00000209060A1EF0", !21, i64 0}
!4275 = !{!4276, !4276, i64 0}
!4276 = !{!"00000209060A1EF0.w8.b8", !4267, i64 0}
!4277 = !{!4278, !4278, i64 0}
!4278 = !{!"00000209060A1EF0.w8.b16", !4279, i64 0}
!4279 = !{!"00000209060A1EF0.w16.b16", !4268, i64 0}
!4280 = !{!4281, !4281, i64 0}
!4281 = !{!"00000209060A1EF0.w8.b24", !4279, i64 0}
!4282 = !{!4283, !4283, i64 0}
!4283 = !{!"00000209060A1EF0.w8.b32", !4284, i64 0}
!4284 = !{!"00000209060A1EF0.w16.b32", !4285, i64 0}
!4285 = !{!"00000209060A1EF0.w32.b32", !4269, i64 0}
!4286 = !{!4287, !4287, i64 0}
!4287 = !{!"00000209060A1EF0.w8.b40", !4284, i64 0}
!4288 = !{!4289, !4289, i64 0}
!4289 = !{!"00000209060A2AB0.w8.b0", !4290, i64 0}
!4290 = !{!"00000209060A2AB0.w16.b0", !4291, i64 0}
!4291 = !{!"00000209060A2AB0.w32.b0", !4292, i64 0}
!4292 = !{!"00000209060A2AB0.w64.b0", !4293, i64 0}
!4293 = !{!"00000209060A2AB0.w128.b0", !4294, i64 0}
!4294 = !{!"00000209060A2AB0.w256.b0", !4295, i64 0}
!4295 = !{!"00000209060A2AB0.w512.b0", !4296, i64 0}
!4296 = !{!"00000209060A2AB0.w1024.b0", !4297, i64 0}
!4297 = !{!"00000209060A2AB0", !21, i64 0}
!4298 = !{!4299, !4299, i64 0}
!4299 = !{!"00000209060A2AB0.w8.b8", !4290, i64 0}
!4300 = !{!4301, !4301, i64 0}
!4301 = !{!"00000209060A2AB0.w8.b32", !4302, i64 0}
!4302 = !{!"00000209060A2AB0.w16.b32", !4303, i64 0}
!4303 = !{!"00000209060A2AB0.w32.b32", !4292, i64 0}
!4304 = !{!4305, !4305, i64 0}
!4305 = !{!"00000209060A2AB0.w8.b40", !4302, i64 0}
!4306 = !{!4307, !4307, i64 0}
!4307 = !{!"00000209060A39B0.w8.b0", !4308, i64 0}
!4308 = !{!"00000209060A39B0.w16.b0", !4309, i64 0}
!4309 = !{!"00000209060A39B0.w32.b0", !4310, i64 0}
!4310 = !{!"00000209060A39B0.w64.b0", !4311, i64 0}
!4311 = !{!"00000209060A39B0.w128.b0", !4312, i64 0}
!4312 = !{!"00000209060A39B0.w256.b0", !4313, i64 0}
!4313 = !{!"00000209060A39B0.w512.b0", !4314, i64 0}
!4314 = !{!"00000209060A39B0.w1024.b0", !4315, i64 0}
!4315 = !{!"00000209060A39B0", !21, i64 0}
!4316 = !{!4317, !4317, i64 0}
!4317 = !{!"00000209060A39B0.w8.b8", !4308, i64 0}
!4318 = !{!4319, !4319, i64 0}
!4319 = !{!"00000209060A39B0.w8.b16", !4320, i64 0}
!4320 = !{!"00000209060A39B0.w16.b16", !4309, i64 0}
!4321 = !{!4322, !4322, i64 0}
!4322 = !{!"00000209060A39B0.w8.b24", !4320, i64 0}
!4323 = !{!4324, !4324, i64 0}
!4324 = !{!"00000209060A39B0.w8.b32", !4325, i64 0}
!4325 = !{!"00000209060A39B0.w16.b32", !4326, i64 0}
!4326 = !{!"00000209060A39B0.w32.b32", !4310, i64 0}
!4327 = !{!4328, !4328, i64 0}
!4328 = !{!"00000209060A45F0.w8.b8", !4329, i64 0}
!4329 = !{!"00000209060A45F0.w16.b0", !4330, i64 0}
!4330 = !{!"00000209060A45F0.w32.b0", !4331, i64 0}
!4331 = !{!"00000209060A45F0.w64.b0", !4332, i64 0}
!4332 = !{!"00000209060A45F0.w128.b0", !4333, i64 0}
!4333 = !{!"00000209060A45F0.w256.b0", !4334, i64 0}
!4334 = !{!"00000209060A45F0.w512.b0", !4335, i64 0}
!4335 = !{!"00000209060A45F0.w1024.b0", !4336, i64 0}
!4336 = !{!"00000209060A45F0", !21, i64 0}
!4337 = !{!4338, !4338, i64 0}
!4338 = !{!"00000209060A45F0.w8.b16", !4339, i64 0}
!4339 = !{!"00000209060A45F0.w16.b16", !4330, i64 0}
!4340 = !{!4341, !4341, i64 0}
!4341 = !{!"00000209060A45F0.w8.b24", !4339, i64 0}
!4342 = !{!4343, !4343, i64 0}
!4343 = !{!"00000209060A45F0.w8.b32", !4344, i64 0}
!4344 = !{!"00000209060A45F0.w16.b32", !4345, i64 0}
!4345 = !{!"00000209060A45F0.w32.b32", !4331, i64 0}
!4346 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4347)
!4347 = !{!4348, !4349, !4350, !4351, !4352, !4353}
!4348 = !DILocalVariable(name: "arg1", arg: 1, scope: !4346, file: !1, type: !8)
!4349 = !DILocalVariable(name: "arg2", arg: 2, scope: !4346, file: !1, type: !9)
!4350 = !DILocalVariable(name: "arg3", arg: 3, scope: !4346, file: !1, type: !7)
!4351 = !DILocalVariable(name: "arg4", arg: 4, scope: !4346, file: !1, type: !8)
!4352 = !DILocalVariable(name: "arg5", arg: 5, scope: !4346, file: !1, type: !9)
!4353 = !DILocalVariable(name: "arg6", arg: 6, scope: !4346, file: !1, type: !8)
!4354 = !DILocation(line: 0, scope: !4346)
!4355 = !{!4356, !4356, i64 0}
!4356 = !{!"0000020905FFED70.w4.b0", !4357, i64 0}
!4357 = !{!"0000020905FFED70.w8.b0", !4358, i64 0}
!4358 = !{!"0000020905FFED70.w16.b0", !4359, i64 0}
!4359 = !{!"0000020905FFED70.w32.b0", !4360, i64 0}
!4360 = !{!"0000020905FFED70.w64.b0", !4361, i64 0}
!4361 = !{!"0000020905FFED70.w128.b0", !4362, i64 0}
!4362 = !{!"0000020905FFED70.w256.b0", !4363, i64 0}
!4363 = !{!"0000020905FFED70.w512.b0", !4364, i64 0}
!4364 = !{!"0000020905FFED70.w1024.b0", !4365, i64 0}
!4365 = !{!"0000020905FFED70", !21, i64 0}
!4366 = !{!4367, !4367, i64 0}
!4367 = !{!"0000020905FFED70.w4.b4", !4357, i64 0}
!4368 = !{!4369, !4369, i64 0}
!4369 = !{!"0000020905FFED70.w4.b8", !4370, i64 0}
!4370 = !{!"0000020905FFED70.w8.b8", !4358, i64 0}
!4371 = !{!4372, !4372, i64 0}
!4372 = !{!"0000020905FFED70.w4.b12", !4370, i64 0}
!4373 = !{!4374, !4374, i64 0}
!4374 = !{!"0000020905FFED70.w4.b16", !4375, i64 0}
!4375 = !{!"0000020905FFED70.w8.b16", !4376, i64 0}
!4376 = !{!"0000020905FFED70.w16.b16", !4359, i64 0}
!4377 = !{!4378, !4378, i64 0}
!4378 = !{!"0000020906003BF0.w8.b0", !4379, i64 0}
!4379 = !{!"0000020906003BF0.w16.b0", !4380, i64 0}
!4380 = !{!"0000020906003BF0.w32.b0", !4381, i64 0}
!4381 = !{!"0000020906003BF0.w64.b0", !4382, i64 0}
!4382 = !{!"0000020906003BF0.w128.b0", !4383, i64 0}
!4383 = !{!"0000020906003BF0.w256.b0", !4384, i64 0}
!4384 = !{!"0000020906003BF0.w512.b0", !4385, i64 0}
!4385 = !{!"0000020906003BF0.w1024.b0", !4386, i64 0}
!4386 = !{!"0000020906003BF0", !21, i64 0}
!4387 = !{!4388, !4388, i64 0}
!4388 = !{!"0000020906003BF0.w8.b8", !4379, i64 0}
!4389 = !{!4390, !4390, i64 0}
!4390 = !{!"0000020906003BF0.w8.b16", !4391, i64 0}
!4391 = !{!"0000020906003BF0.w16.b16", !4380, i64 0}
!4392 = !{!4393, !4393, i64 0}
!4393 = !{!"0000020906003BF0.w8.b24", !4391, i64 0}
!4394 = !{!4395, !4395, i64 0}
!4395 = !{!"0000020906003BF0.w8.b32", !4396, i64 0}
!4396 = !{!"0000020906003BF0.w16.b32", !4397, i64 0}
!4397 = !{!"0000020906003BF0.w32.b32", !4381, i64 0}
!4398 = !{!4399, !4399, i64 0}
!4399 = !{!"0000020906005FB0.w8.b8", !4400, i64 0}
!4400 = !{!"0000020906005FB0.w16.b0", !4401, i64 0}
!4401 = !{!"0000020906005FB0.w32.b0", !4402, i64 0}
!4402 = !{!"0000020906005FB0.w64.b0", !4403, i64 0}
!4403 = !{!"0000020906005FB0.w128.b0", !4404, i64 0}
!4404 = !{!"0000020906005FB0.w256.b0", !4405, i64 0}
!4405 = !{!"0000020906005FB0.w512.b0", !4406, i64 0}
!4406 = !{!"0000020906005FB0.w1024.b0", !4407, i64 0}
!4407 = !{!"0000020906005FB0", !21, i64 0}
!4408 = !{!4409, !4409, i64 0}
!4409 = !{!"0000020906005FB0.w8.b16", !4410, i64 0}
!4410 = !{!"0000020906005FB0.w16.b16", !4401, i64 0}
!4411 = !{!4412, !4412, i64 0}
!4412 = !{!"0000020906005FB0.w8.b24", !4410, i64 0}
!4413 = !{!4414, !4414, i64 0}
!4414 = !{!"0000020906005FB0.w8.b32", !4415, i64 0}
!4415 = !{!"0000020906005FB0.w16.b32", !4416, i64 0}
!4416 = !{!"0000020906005FB0.w32.b32", !4402, i64 0}
!4417 = !{!4418, !4418, i64 0}
!4418 = !{!"00000209060078F0.w8.b0", !4419, i64 0}
!4419 = !{!"00000209060078F0.w16.b0", !4420, i64 0}
!4420 = !{!"00000209060078F0.w32.b0", !4421, i64 0}
!4421 = !{!"00000209060078F0.w64.b0", !4422, i64 0}
!4422 = !{!"00000209060078F0.w128.b0", !4423, i64 0}
!4423 = !{!"00000209060078F0.w256.b0", !4424, i64 0}
!4424 = !{!"00000209060078F0.w512.b0", !4425, i64 0}
!4425 = !{!"00000209060078F0.w1024.b0", !4426, i64 0}
!4426 = !{!"00000209060078F0", !21, i64 0}
!4427 = !{!4428, !4428, i64 0}
!4428 = !{!"00000209060078F0.w8.b8", !4419, i64 0}
!4429 = !{!4430, !4430, i64 0}
!4430 = !{!"00000209060078F0.w8.b16", !4431, i64 0}
!4431 = !{!"00000209060078F0.w16.b16", !4420, i64 0}
!4432 = !{!4433, !4433, i64 0}
!4433 = !{!"00000209060078F0.w8.b24", !4431, i64 0}
!4434 = !{!4435, !4435, i64 0}
!4435 = !{!"00000209060078F0.w8.b32", !4436, i64 0}
!4436 = !{!"00000209060078F0.w16.b32", !4437, i64 0}
!4437 = !{!"00000209060078F0.w32.b32", !4421, i64 0}
!4438 = !{!4439, !4439, i64 0}
!4439 = !{!"00000209060078F0.w8.b40", !4436, i64 0}
!4440 = !{!4441, !4441, i64 0}
!4441 = !{!"0000020906008130.w8.b0", !4442, i64 0}
!4442 = !{!"0000020906008130.w16.b0", !4443, i64 0}
!4443 = !{!"0000020906008130.w32.b0", !4444, i64 0}
!4444 = !{!"0000020906008130.w64.b0", !4445, i64 0}
!4445 = !{!"0000020906008130.w128.b0", !4446, i64 0}
!4446 = !{!"0000020906008130.w256.b0", !4447, i64 0}
!4447 = !{!"0000020906008130.w512.b0", !4448, i64 0}
!4448 = !{!"0000020906008130.w1024.b0", !4449, i64 0}
!4449 = !{!"0000020906008130", !21, i64 0}
!4450 = !{!4451, !4451, i64 0}
!4451 = !{!"0000020906008130.w8.b8", !4442, i64 0}
!4452 = !{!4453, !4453, i64 0}
!4453 = !{!"0000020906008130.w8.b32", !4454, i64 0}
!4454 = !{!"0000020906008130.w16.b32", !4455, i64 0}
!4455 = !{!"0000020906008130.w32.b32", !4444, i64 0}
!4456 = !{!4457, !4457, i64 0}
!4457 = !{!"0000020906008130.w8.b40", !4454, i64 0}
!4458 = !{!4459, !4459, i64 0}
!4459 = !{!"0000020906009AB0.w8.b0", !4460, i64 0}
!4460 = !{!"0000020906009AB0.w16.b0", !4461, i64 0}
!4461 = !{!"0000020906009AB0.w32.b0", !4462, i64 0}
!4462 = !{!"0000020906009AB0.w64.b0", !4463, i64 0}
!4463 = !{!"0000020906009AB0.w128.b0", !4464, i64 0}
!4464 = !{!"0000020906009AB0.w256.b0", !4465, i64 0}
!4465 = !{!"0000020906009AB0.w512.b0", !4466, i64 0}
!4466 = !{!"0000020906009AB0.w1024.b0", !4467, i64 0}
!4467 = !{!"0000020906009AB0", !21, i64 0}
!4468 = !{!4469, !4469, i64 0}
!4469 = !{!"0000020906009AB0.w8.b8", !4460, i64 0}
!4470 = !{!4471, !4471, i64 0}
!4471 = !{!"0000020906009AB0.w8.b16", !4472, i64 0}
!4472 = !{!"0000020906009AB0.w16.b16", !4461, i64 0}
!4473 = !{!4474, !4474, i64 0}
!4474 = !{!"0000020906009AB0.w8.b24", !4472, i64 0}
!4475 = !{!4476, !4476, i64 0}
!4476 = !{!"0000020906009AB0.w8.b32", !4477, i64 0}
!4477 = !{!"0000020906009AB0.w16.b32", !4478, i64 0}
!4478 = !{!"0000020906009AB0.w32.b32", !4462, i64 0}
!4479 = !{!4480, !4480, i64 0}
!4480 = !{!"0000020906009E70.w8.b8", !4481, i64 0}
!4481 = !{!"0000020906009E70.w16.b0", !4482, i64 0}
!4482 = !{!"0000020906009E70.w32.b0", !4483, i64 0}
!4483 = !{!"0000020906009E70.w64.b0", !4484, i64 0}
!4484 = !{!"0000020906009E70.w128.b0", !4485, i64 0}
!4485 = !{!"0000020906009E70.w256.b0", !4486, i64 0}
!4486 = !{!"0000020906009E70.w512.b0", !4487, i64 0}
!4487 = !{!"0000020906009E70.w1024.b0", !4488, i64 0}
!4488 = !{!"0000020906009E70", !21, i64 0}
!4489 = !{!4490, !4490, i64 0}
!4490 = !{!"0000020906009E70.w8.b16", !4491, i64 0}
!4491 = !{!"0000020906009E70.w16.b16", !4482, i64 0}
!4492 = !{!4493, !4493, i64 0}
!4493 = !{!"0000020906009E70.w8.b24", !4491, i64 0}
!4494 = !{!4495, !4495, i64 0}
!4495 = !{!"0000020906009E70.w8.b32", !4496, i64 0}
!4496 = !{!"0000020906009E70.w16.b32", !4497, i64 0}
!4497 = !{!"0000020906009E70.w32.b32", !4483, i64 0}
!4498 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4499)
!4499 = !{!4500, !4501, !4502, !4503, !4504, !4505}
!4500 = !DILocalVariable(name: "arg1", arg: 1, scope: !4498, file: !1, type: !8)
!4501 = !DILocalVariable(name: "arg2", arg: 2, scope: !4498, file: !1, type: !9)
!4502 = !DILocalVariable(name: "arg3", arg: 3, scope: !4498, file: !1, type: !7)
!4503 = !DILocalVariable(name: "arg4", arg: 4, scope: !4498, file: !1, type: !8)
!4504 = !DILocalVariable(name: "arg5", arg: 5, scope: !4498, file: !1, type: !9)
!4505 = !DILocalVariable(name: "arg6", arg: 6, scope: !4498, file: !1, type: !8)
!4506 = !DILocation(line: 0, scope: !4498)
!4507 = !{!4508, !4508, i64 0}
!4508 = !{!"000002090617A0B0.w4.b0", !4509, i64 0}
!4509 = !{!"000002090617A0B0.w8.b0", !4510, i64 0}
!4510 = !{!"000002090617A0B0.w16.b0", !4511, i64 0}
!4511 = !{!"000002090617A0B0.w32.b0", !4512, i64 0}
!4512 = !{!"000002090617A0B0.w64.b0", !4513, i64 0}
!4513 = !{!"000002090617A0B0.w128.b0", !4514, i64 0}
!4514 = !{!"000002090617A0B0.w256.b0", !4515, i64 0}
!4515 = !{!"000002090617A0B0.w512.b0", !4516, i64 0}
!4516 = !{!"000002090617A0B0.w1024.b0", !4517, i64 0}
!4517 = !{!"000002090617A0B0", !21, i64 0}
!4518 = !{!4519, !4519, i64 0}
!4519 = !{!"000002090617A0B0.w4.b4", !4509, i64 0}
!4520 = !{!4521, !4521, i64 0}
!4521 = !{!"000002090617A0B0.w4.b8", !4522, i64 0}
!4522 = !{!"000002090617A0B0.w8.b8", !4510, i64 0}
!4523 = !{!4524, !4524, i64 0}
!4524 = !{!"000002090617A0B0.w4.b12", !4522, i64 0}
!4525 = !{!4526, !4526, i64 0}
!4526 = !{!"000002090617A0B0.w4.b16", !4527, i64 0}
!4527 = !{!"000002090617A0B0.w8.b16", !4528, i64 0}
!4528 = !{!"000002090617A0B0.w16.b16", !4511, i64 0}
!4529 = !{!4530, !4530, i64 0}
!4530 = !{!"000002090617F370.w8.b0", !4531, i64 0}
!4531 = !{!"000002090617F370.w16.b0", !4532, i64 0}
!4532 = !{!"000002090617F370.w32.b0", !4533, i64 0}
!4533 = !{!"000002090617F370.w64.b0", !4534, i64 0}
!4534 = !{!"000002090617F370.w128.b0", !4535, i64 0}
!4535 = !{!"000002090617F370.w256.b0", !4536, i64 0}
!4536 = !{!"000002090617F370.w512.b0", !4537, i64 0}
!4537 = !{!"000002090617F370.w1024.b0", !4538, i64 0}
!4538 = !{!"000002090617F370", !21, i64 0}
!4539 = !{!4540, !4540, i64 0}
!4540 = !{!"000002090617F370.w8.b8", !4531, i64 0}
!4541 = !{!4542, !4542, i64 0}
!4542 = !{!"000002090617F370.w8.b16", !4543, i64 0}
!4543 = !{!"000002090617F370.w16.b16", !4532, i64 0}
!4544 = !{!4545, !4545, i64 0}
!4545 = !{!"000002090617F370.w8.b24", !4543, i64 0}
!4546 = !{!4547, !4547, i64 0}
!4547 = !{!"000002090617F370.w8.b32", !4548, i64 0}
!4548 = !{!"000002090617F370.w16.b32", !4549, i64 0}
!4549 = !{!"000002090617F370.w32.b32", !4533, i64 0}
!4550 = !{!4551, !4551, i64 0}
!4551 = !{!"0000020906182730.w8.b8", !4552, i64 0}
!4552 = !{!"0000020906182730.w16.b0", !4553, i64 0}
!4553 = !{!"0000020906182730.w32.b0", !4554, i64 0}
!4554 = !{!"0000020906182730.w64.b0", !4555, i64 0}
!4555 = !{!"0000020906182730.w128.b0", !4556, i64 0}
!4556 = !{!"0000020906182730.w256.b0", !4557, i64 0}
!4557 = !{!"0000020906182730.w512.b0", !4558, i64 0}
!4558 = !{!"0000020906182730.w1024.b0", !4559, i64 0}
!4559 = !{!"0000020906182730", !21, i64 0}
!4560 = !{!4561, !4561, i64 0}
!4561 = !{!"0000020906182730.w8.b16", !4562, i64 0}
!4562 = !{!"0000020906182730.w16.b16", !4553, i64 0}
!4563 = !{!4564, !4564, i64 0}
!4564 = !{!"0000020906182730.w8.b24", !4562, i64 0}
!4565 = !{!4566, !4566, i64 0}
!4566 = !{!"0000020906182730.w8.b32", !4567, i64 0}
!4567 = !{!"0000020906182730.w16.b32", !4568, i64 0}
!4568 = !{!"0000020906182730.w32.b32", !4554, i64 0}
!4569 = !{!4570, !4570, i64 0}
!4570 = !{!"0000020906183B30.w8.b0", !4571, i64 0}
!4571 = !{!"0000020906183B30.w16.b0", !4572, i64 0}
!4572 = !{!"0000020906183B30.w32.b0", !4573, i64 0}
!4573 = !{!"0000020906183B30.w64.b0", !4574, i64 0}
!4574 = !{!"0000020906183B30.w128.b0", !4575, i64 0}
!4575 = !{!"0000020906183B30.w256.b0", !4576, i64 0}
!4576 = !{!"0000020906183B30.w512.b0", !4577, i64 0}
!4577 = !{!"0000020906183B30.w1024.b0", !4578, i64 0}
!4578 = !{!"0000020906183B30", !21, i64 0}
!4579 = !{!4580, !4580, i64 0}
!4580 = !{!"0000020906183B30.w8.b8", !4571, i64 0}
!4581 = !{!4582, !4582, i64 0}
!4582 = !{!"0000020906183B30.w8.b16", !4583, i64 0}
!4583 = !{!"0000020906183B30.w16.b16", !4572, i64 0}
!4584 = !{!4585, !4585, i64 0}
!4585 = !{!"0000020906183B30.w8.b24", !4583, i64 0}
!4586 = !{!4587, !4587, i64 0}
!4587 = !{!"0000020906183B30.w8.b32", !4588, i64 0}
!4588 = !{!"0000020906183B30.w16.b32", !4589, i64 0}
!4589 = !{!"0000020906183B30.w32.b32", !4573, i64 0}
!4590 = !{!4591, !4591, i64 0}
!4591 = !{!"0000020906183B30.w8.b40", !4588, i64 0}
!4592 = !{!4593, !4593, i64 0}
!4593 = !{!"00000209061839F0.w8.b0", !4594, i64 0}
!4594 = !{!"00000209061839F0.w16.b0", !4595, i64 0}
!4595 = !{!"00000209061839F0.w32.b0", !4596, i64 0}
!4596 = !{!"00000209061839F0.w64.b0", !4597, i64 0}
!4597 = !{!"00000209061839F0.w128.b0", !4598, i64 0}
!4598 = !{!"00000209061839F0.w256.b0", !4599, i64 0}
!4599 = !{!"00000209061839F0.w512.b0", !4600, i64 0}
!4600 = !{!"00000209061839F0.w1024.b0", !4601, i64 0}
!4601 = !{!"00000209061839F0", !21, i64 0}
!4602 = !{!4603, !4603, i64 0}
!4603 = !{!"00000209061839F0.w8.b8", !4594, i64 0}
!4604 = !{!4605, !4605, i64 0}
!4605 = !{!"00000209061839F0.w8.b32", !4606, i64 0}
!4606 = !{!"00000209061839F0.w16.b32", !4607, i64 0}
!4607 = !{!"00000209061839F0.w32.b32", !4596, i64 0}
!4608 = !{!4609, !4609, i64 0}
!4609 = !{!"00000209061839F0.w8.b40", !4606, i64 0}
!4610 = !{!4611, !4611, i64 0}
!4611 = !{!"0000020906185D70.w8.b0", !4612, i64 0}
!4612 = !{!"0000020906185D70.w16.b0", !4613, i64 0}
!4613 = !{!"0000020906185D70.w32.b0", !4614, i64 0}
!4614 = !{!"0000020906185D70.w64.b0", !4615, i64 0}
!4615 = !{!"0000020906185D70.w128.b0", !4616, i64 0}
!4616 = !{!"0000020906185D70.w256.b0", !4617, i64 0}
!4617 = !{!"0000020906185D70.w512.b0", !4618, i64 0}
!4618 = !{!"0000020906185D70.w1024.b0", !4619, i64 0}
!4619 = !{!"0000020906185D70", !21, i64 0}
!4620 = !{!4621, !4621, i64 0}
!4621 = !{!"0000020906185D70.w8.b8", !4612, i64 0}
!4622 = !{!4623, !4623, i64 0}
!4623 = !{!"0000020906185D70.w8.b16", !4624, i64 0}
!4624 = !{!"0000020906185D70.w16.b16", !4613, i64 0}
!4625 = !{!4626, !4626, i64 0}
!4626 = !{!"0000020906185D70.w8.b24", !4624, i64 0}
!4627 = !{!4628, !4628, i64 0}
!4628 = !{!"0000020906185D70.w8.b32", !4629, i64 0}
!4629 = !{!"0000020906185D70.w16.b32", !4630, i64 0}
!4630 = !{!"0000020906185D70.w32.b32", !4614, i64 0}
!4631 = !{!4632, !4632, i64 0}
!4632 = !{!"0000020906185FF0.w8.b8", !4633, i64 0}
!4633 = !{!"0000020906185FF0.w16.b0", !4634, i64 0}
!4634 = !{!"0000020906185FF0.w32.b0", !4635, i64 0}
!4635 = !{!"0000020906185FF0.w64.b0", !4636, i64 0}
!4636 = !{!"0000020906185FF0.w128.b0", !4637, i64 0}
!4637 = !{!"0000020906185FF0.w256.b0", !4638, i64 0}
!4638 = !{!"0000020906185FF0.w512.b0", !4639, i64 0}
!4639 = !{!"0000020906185FF0.w1024.b0", !4640, i64 0}
!4640 = !{!"0000020906185FF0", !21, i64 0}
!4641 = !{!4642, !4642, i64 0}
!4642 = !{!"0000020906185FF0.w8.b16", !4643, i64 0}
!4643 = !{!"0000020906185FF0.w16.b16", !4634, i64 0}
!4644 = !{!4645, !4645, i64 0}
!4645 = !{!"0000020906185FF0.w8.b24", !4643, i64 0}
!4646 = !{!4647, !4647, i64 0}
!4647 = !{!"0000020906185FF0.w8.b32", !4648, i64 0}
!4648 = !{!"0000020906185FF0.w16.b32", !4649, i64 0}
!4649 = !{!"0000020906185FF0.w32.b32", !4635, i64 0}
!4650 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4651)
!4651 = !{!4652, !4653, !4654, !4655, !4656, !4657}
!4652 = !DILocalVariable(name: "arg1", arg: 1, scope: !4650, file: !1, type: !8)
!4653 = !DILocalVariable(name: "arg2", arg: 2, scope: !4650, file: !1, type: !9)
!4654 = !DILocalVariable(name: "arg3", arg: 3, scope: !4650, file: !1, type: !7)
!4655 = !DILocalVariable(name: "arg4", arg: 4, scope: !4650, file: !1, type: !8)
!4656 = !DILocalVariable(name: "arg5", arg: 5, scope: !4650, file: !1, type: !9)
!4657 = !DILocalVariable(name: "arg6", arg: 6, scope: !4650, file: !1, type: !8)
!4658 = !DILocation(line: 0, scope: !4650)
!4659 = !{!4660, !4660, i64 0}
!4660 = !{!"0000020906114C30.w4.b0", !4661, i64 0}
!4661 = !{!"0000020906114C30.w8.b0", !4662, i64 0}
!4662 = !{!"0000020906114C30.w16.b0", !4663, i64 0}
!4663 = !{!"0000020906114C30.w32.b0", !4664, i64 0}
!4664 = !{!"0000020906114C30.w64.b0", !4665, i64 0}
!4665 = !{!"0000020906114C30.w128.b0", !4666, i64 0}
!4666 = !{!"0000020906114C30.w256.b0", !4667, i64 0}
!4667 = !{!"0000020906114C30.w512.b0", !4668, i64 0}
!4668 = !{!"0000020906114C30.w1024.b0", !4669, i64 0}
!4669 = !{!"0000020906114C30", !21, i64 0}
!4670 = !{!4671, !4671, i64 0}
!4671 = !{!"0000020906114C30.w4.b4", !4661, i64 0}
!4672 = !{!4673, !4673, i64 0}
!4673 = !{!"0000020906114C30.w4.b8", !4674, i64 0}
!4674 = !{!"0000020906114C30.w8.b8", !4662, i64 0}
!4675 = !{!4676, !4676, i64 0}
!4676 = !{!"0000020906114C30.w4.b12", !4674, i64 0}
!4677 = !{!4678, !4678, i64 0}
!4678 = !{!"0000020906114C30.w4.b16", !4679, i64 0}
!4679 = !{!"0000020906114C30.w8.b16", !4680, i64 0}
!4680 = !{!"0000020906114C30.w16.b16", !4663, i64 0}
!4681 = !{!4682, !4682, i64 0}
!4682 = !{!"000002090611BEB0.w8.b0", !4683, i64 0}
!4683 = !{!"000002090611BEB0.w16.b0", !4684, i64 0}
!4684 = !{!"000002090611BEB0.w32.b0", !4685, i64 0}
!4685 = !{!"000002090611BEB0.w64.b0", !4686, i64 0}
!4686 = !{!"000002090611BEB0.w128.b0", !4687, i64 0}
!4687 = !{!"000002090611BEB0.w256.b0", !4688, i64 0}
!4688 = !{!"000002090611BEB0.w512.b0", !4689, i64 0}
!4689 = !{!"000002090611BEB0.w1024.b0", !4690, i64 0}
!4690 = !{!"000002090611BEB0", !21, i64 0}
!4691 = !{!4692, !4692, i64 0}
!4692 = !{!"000002090611BEB0.w8.b8", !4683, i64 0}
!4693 = !{!4694, !4694, i64 0}
!4694 = !{!"000002090611BEB0.w8.b16", !4695, i64 0}
!4695 = !{!"000002090611BEB0.w16.b16", !4684, i64 0}
!4696 = !{!4697, !4697, i64 0}
!4697 = !{!"000002090611BEB0.w8.b24", !4695, i64 0}
!4698 = !{!4699, !4699, i64 0}
!4699 = !{!"000002090611BEB0.w8.b32", !4700, i64 0}
!4700 = !{!"000002090611BEB0.w16.b32", !4701, i64 0}
!4701 = !{!"000002090611BEB0.w32.b32", !4685, i64 0}
!4702 = !{!4703, !4703, i64 0}
!4703 = !{!"000002090611D6B0.w8.b8", !4704, i64 0}
!4704 = !{!"000002090611D6B0.w16.b0", !4705, i64 0}
!4705 = !{!"000002090611D6B0.w32.b0", !4706, i64 0}
!4706 = !{!"000002090611D6B0.w64.b0", !4707, i64 0}
!4707 = !{!"000002090611D6B0.w128.b0", !4708, i64 0}
!4708 = !{!"000002090611D6B0.w256.b0", !4709, i64 0}
!4709 = !{!"000002090611D6B0.w512.b0", !4710, i64 0}
!4710 = !{!"000002090611D6B0.w1024.b0", !4711, i64 0}
!4711 = !{!"000002090611D6B0", !21, i64 0}
!4712 = !{!4713, !4713, i64 0}
!4713 = !{!"000002090611D6B0.w8.b16", !4714, i64 0}
!4714 = !{!"000002090611D6B0.w16.b16", !4705, i64 0}
!4715 = !{!4716, !4716, i64 0}
!4716 = !{!"000002090611D6B0.w8.b24", !4714, i64 0}
!4717 = !{!4718, !4718, i64 0}
!4718 = !{!"000002090611D6B0.w8.b32", !4719, i64 0}
!4719 = !{!"000002090611D6B0.w16.b32", !4720, i64 0}
!4720 = !{!"000002090611D6B0.w32.b32", !4706, i64 0}
!4721 = !{!4722, !4722, i64 0}
!4722 = !{!"000002090611EDF0.w8.b0", !4723, i64 0}
!4723 = !{!"000002090611EDF0.w16.b0", !4724, i64 0}
!4724 = !{!"000002090611EDF0.w32.b0", !4725, i64 0}
!4725 = !{!"000002090611EDF0.w64.b0", !4726, i64 0}
!4726 = !{!"000002090611EDF0.w128.b0", !4727, i64 0}
!4727 = !{!"000002090611EDF0.w256.b0", !4728, i64 0}
!4728 = !{!"000002090611EDF0.w512.b0", !4729, i64 0}
!4729 = !{!"000002090611EDF0.w1024.b0", !4730, i64 0}
!4730 = !{!"000002090611EDF0", !21, i64 0}
!4731 = !{!4732, !4732, i64 0}
!4732 = !{!"000002090611EDF0.w8.b8", !4723, i64 0}
!4733 = !{!4734, !4734, i64 0}
!4734 = !{!"000002090611EDF0.w8.b16", !4735, i64 0}
!4735 = !{!"000002090611EDF0.w16.b16", !4724, i64 0}
!4736 = !{!4737, !4737, i64 0}
!4737 = !{!"000002090611EDF0.w8.b24", !4735, i64 0}
!4738 = !{!4739, !4739, i64 0}
!4739 = !{!"000002090611EDF0.w8.b32", !4740, i64 0}
!4740 = !{!"000002090611EDF0.w16.b32", !4741, i64 0}
!4741 = !{!"000002090611EDF0.w32.b32", !4725, i64 0}
!4742 = !{!4743, !4743, i64 0}
!4743 = !{!"000002090611EDF0.w8.b40", !4740, i64 0}
!4744 = !{!4745, !4745, i64 0}
!4745 = !{!"000002090611ECF0.w8.b0", !4746, i64 0}
!4746 = !{!"000002090611ECF0.w16.b0", !4747, i64 0}
!4747 = !{!"000002090611ECF0.w32.b0", !4748, i64 0}
!4748 = !{!"000002090611ECF0.w64.b0", !4749, i64 0}
!4749 = !{!"000002090611ECF0.w128.b0", !4750, i64 0}
!4750 = !{!"000002090611ECF0.w256.b0", !4751, i64 0}
!4751 = !{!"000002090611ECF0.w512.b0", !4752, i64 0}
!4752 = !{!"000002090611ECF0.w1024.b0", !4753, i64 0}
!4753 = !{!"000002090611ECF0", !21, i64 0}
!4754 = !{!4755, !4755, i64 0}
!4755 = !{!"000002090611ECF0.w8.b8", !4746, i64 0}
!4756 = !{!4757, !4757, i64 0}
!4757 = !{!"000002090611ECF0.w8.b16", !4758, i64 0}
!4758 = !{!"000002090611ECF0.w16.b16", !4747, i64 0}
!4759 = !{!4760, !4760, i64 0}
!4760 = !{!"000002090611ECF0.w8.b24", !4758, i64 0}
!4761 = !{!4762, !4762, i64 0}
!4762 = !{!"000002090611ECF0.w8.b32", !4763, i64 0}
!4763 = !{!"000002090611ECF0.w16.b32", !4764, i64 0}
!4764 = !{!"000002090611ECF0.w32.b32", !4748, i64 0}
!4765 = !{!4766, !4766, i64 0}
!4766 = !{!"000002090611ECF0.w8.b40", !4763, i64 0}
!4767 = !{!4768, !4768, i64 0}
!4768 = !{!"00000209060B6170.w8.b0", !4769, i64 0}
!4769 = !{!"00000209060B6170.w16.b0", !4770, i64 0}
!4770 = !{!"00000209060B6170.w32.b0", !4771, i64 0}
!4771 = !{!"00000209060B6170.w64.b0", !4772, i64 0}
!4772 = !{!"00000209060B6170.w128.b0", !4773, i64 0}
!4773 = !{!"00000209060B6170.w256.b0", !4774, i64 0}
!4774 = !{!"00000209060B6170.w512.b0", !4775, i64 0}
!4775 = !{!"00000209060B6170.w1024.b0", !4776, i64 0}
!4776 = !{!"00000209060B6170", !21, i64 0}
!4777 = !{!4778, !4778, i64 0}
!4778 = !{!"00000209060B6170.w8.b8", !4769, i64 0}
!4779 = !{!4780, !4780, i64 0}
!4780 = !{!"00000209060B6170.w8.b16", !4781, i64 0}
!4781 = !{!"00000209060B6170.w16.b16", !4770, i64 0}
!4782 = !{!4783, !4783, i64 0}
!4783 = !{!"00000209060B6170.w8.b24", !4781, i64 0}
!4784 = !{!4785, !4785, i64 0}
!4785 = !{!"00000209060B6170.w8.b32", !4786, i64 0}
!4786 = !{!"00000209060B6170.w16.b32", !4787, i64 0}
!4787 = !{!"00000209060B6170.w32.b32", !4771, i64 0}
!4788 = !{!4789, !4789, i64 0}
!4789 = !{!"00000209060B7B30.w8.b8", !4790, i64 0}
!4790 = !{!"00000209060B7B30.w16.b0", !4791, i64 0}
!4791 = !{!"00000209060B7B30.w32.b0", !4792, i64 0}
!4792 = !{!"00000209060B7B30.w64.b0", !4793, i64 0}
!4793 = !{!"00000209060B7B30.w128.b0", !4794, i64 0}
!4794 = !{!"00000209060B7B30.w256.b0", !4795, i64 0}
!4795 = !{!"00000209060B7B30.w512.b0", !4796, i64 0}
!4796 = !{!"00000209060B7B30.w1024.b0", !4797, i64 0}
!4797 = !{!"00000209060B7B30", !21, i64 0}
!4798 = !{!4799, !4799, i64 0}
!4799 = !{!"00000209060B7B30.w8.b16", !4800, i64 0}
!4800 = !{!"00000209060B7B30.w16.b16", !4791, i64 0}
!4801 = !{!4802, !4802, i64 0}
!4802 = !{!"00000209060B7B30.w8.b24", !4800, i64 0}
!4803 = !{!4804, !4804, i64 0}
!4804 = !{!"00000209060B7B30.w8.b32", !4805, i64 0}
!4805 = !{!"00000209060B7B30.w16.b32", !4806, i64 0}
!4806 = !{!"00000209060B7B30.w32.b32", !4792, i64 0}
!4807 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4808)
!4808 = !{!4809, !4810, !4811, !4812, !4813, !4814}
!4809 = !DILocalVariable(name: "arg1", arg: 1, scope: !4807, file: !1, type: !8)
!4810 = !DILocalVariable(name: "arg2", arg: 2, scope: !4807, file: !1, type: !9)
!4811 = !DILocalVariable(name: "arg3", arg: 3, scope: !4807, file: !1, type: !7)
!4812 = !DILocalVariable(name: "arg4", arg: 4, scope: !4807, file: !1, type: !8)
!4813 = !DILocalVariable(name: "arg5", arg: 5, scope: !4807, file: !1, type: !9)
!4814 = !DILocalVariable(name: "arg6", arg: 6, scope: !4807, file: !1, type: !8)
!4815 = !DILocation(line: 0, scope: !4807)
!4816 = !{!4817, !4817, i64 0}
!4817 = !{!"0000020906100BB0.w4.b0", !4818, i64 0}
!4818 = !{!"0000020906100BB0.w8.b0", !4819, i64 0}
!4819 = !{!"0000020906100BB0.w16.b0", !4820, i64 0}
!4820 = !{!"0000020906100BB0.w32.b0", !4821, i64 0}
!4821 = !{!"0000020906100BB0.w64.b0", !4822, i64 0}
!4822 = !{!"0000020906100BB0.w128.b0", !4823, i64 0}
!4823 = !{!"0000020906100BB0.w256.b0", !4824, i64 0}
!4824 = !{!"0000020906100BB0.w512.b0", !4825, i64 0}
!4825 = !{!"0000020906100BB0.w1024.b0", !4826, i64 0}
!4826 = !{!"0000020906100BB0", !21, i64 0}
!4827 = !{!4828, !4828, i64 0}
!4828 = !{!"0000020906100BB0.w4.b4", !4818, i64 0}
!4829 = !{!4830, !4830, i64 0}
!4830 = !{!"0000020906100BB0.w4.b8", !4831, i64 0}
!4831 = !{!"0000020906100BB0.w8.b8", !4819, i64 0}
!4832 = !{!4833, !4833, i64 0}
!4833 = !{!"0000020906100BB0.w4.b12", !4831, i64 0}
!4834 = !{!4835, !4835, i64 0}
!4835 = !{!"0000020906100BB0.w4.b16", !4836, i64 0}
!4836 = !{!"0000020906100BB0.w8.b16", !4837, i64 0}
!4837 = !{!"0000020906100BB0.w16.b16", !4820, i64 0}
!4838 = !{!4839, !4839, i64 0}
!4839 = !{!"00000209061031F0.w8.b0", !4840, i64 0}
!4840 = !{!"00000209061031F0.w16.b0", !4841, i64 0}
!4841 = !{!"00000209061031F0.w32.b0", !4842, i64 0}
!4842 = !{!"00000209061031F0.w64.b0", !4843, i64 0}
!4843 = !{!"00000209061031F0.w128.b0", !4844, i64 0}
!4844 = !{!"00000209061031F0.w256.b0", !4845, i64 0}
!4845 = !{!"00000209061031F0.w512.b0", !4846, i64 0}
!4846 = !{!"00000209061031F0.w1024.b0", !4847, i64 0}
!4847 = !{!"00000209061031F0", !21, i64 0}
!4848 = !{!4849, !4849, i64 0}
!4849 = !{!"00000209061031F0.w8.b8", !4840, i64 0}
!4850 = !{!4851, !4851, i64 0}
!4851 = !{!"00000209061031F0.w8.b16", !4852, i64 0}
!4852 = !{!"00000209061031F0.w16.b16", !4841, i64 0}
!4853 = !{!4854, !4854, i64 0}
!4854 = !{!"00000209061031F0.w8.b24", !4852, i64 0}
!4855 = !{!4856, !4856, i64 0}
!4856 = !{!"00000209061031F0.w8.b32", !4857, i64 0}
!4857 = !{!"00000209061031F0.w16.b32", !4858, i64 0}
!4858 = !{!"00000209061031F0.w32.b32", !4842, i64 0}
!4859 = !{!4860, !4860, i64 0}
!4860 = !{!"00000209061064B0.w8.b8", !4861, i64 0}
!4861 = !{!"00000209061064B0.w16.b0", !4862, i64 0}
!4862 = !{!"00000209061064B0.w32.b0", !4863, i64 0}
!4863 = !{!"00000209061064B0.w64.b0", !4864, i64 0}
!4864 = !{!"00000209061064B0.w128.b0", !4865, i64 0}
!4865 = !{!"00000209061064B0.w256.b0", !4866, i64 0}
!4866 = !{!"00000209061064B0.w512.b0", !4867, i64 0}
!4867 = !{!"00000209061064B0.w1024.b0", !4868, i64 0}
!4868 = !{!"00000209061064B0", !21, i64 0}
!4869 = !{!4870, !4870, i64 0}
!4870 = !{!"00000209061064B0.w8.b16", !4871, i64 0}
!4871 = !{!"00000209061064B0.w16.b16", !4862, i64 0}
!4872 = !{!4873, !4873, i64 0}
!4873 = !{!"00000209061064B0.w8.b24", !4871, i64 0}
!4874 = !{!4875, !4875, i64 0}
!4875 = !{!"00000209061064B0.w8.b32", !4876, i64 0}
!4876 = !{!"00000209061064B0.w16.b32", !4877, i64 0}
!4877 = !{!"00000209061064B0.w32.b32", !4863, i64 0}
!4878 = !{!4879, !4879, i64 0}
!4879 = !{!"0000020906107AB0.w8.b0", !4880, i64 0}
!4880 = !{!"0000020906107AB0.w16.b0", !4881, i64 0}
!4881 = !{!"0000020906107AB0.w32.b0", !4882, i64 0}
!4882 = !{!"0000020906107AB0.w64.b0", !4883, i64 0}
!4883 = !{!"0000020906107AB0.w128.b0", !4884, i64 0}
!4884 = !{!"0000020906107AB0.w256.b0", !4885, i64 0}
!4885 = !{!"0000020906107AB0.w512.b0", !4886, i64 0}
!4886 = !{!"0000020906107AB0.w1024.b0", !4887, i64 0}
!4887 = !{!"0000020906107AB0", !21, i64 0}
!4888 = !{!4889, !4889, i64 0}
!4889 = !{!"0000020906107AB0.w8.b8", !4880, i64 0}
!4890 = !{!4891, !4891, i64 0}
!4891 = !{!"0000020906107AB0.w8.b16", !4892, i64 0}
!4892 = !{!"0000020906107AB0.w16.b16", !4881, i64 0}
!4893 = !{!4894, !4894, i64 0}
!4894 = !{!"0000020906107AB0.w8.b24", !4892, i64 0}
!4895 = !{!4896, !4896, i64 0}
!4896 = !{!"0000020906107AB0.w8.b32", !4897, i64 0}
!4897 = !{!"0000020906107AB0.w16.b32", !4898, i64 0}
!4898 = !{!"0000020906107AB0.w32.b32", !4882, i64 0}
!4899 = !{!4900, !4900, i64 0}
!4900 = !{!"0000020906107AB0.w8.b40", !4897, i64 0}
!4901 = !{!4902, !4902, i64 0}
!4902 = !{!"0000020906107A70.w8.b0", !4903, i64 0}
!4903 = !{!"0000020906107A70.w16.b0", !4904, i64 0}
!4904 = !{!"0000020906107A70.w32.b0", !4905, i64 0}
!4905 = !{!"0000020906107A70.w64.b0", !4906, i64 0}
!4906 = !{!"0000020906107A70.w128.b0", !4907, i64 0}
!4907 = !{!"0000020906107A70.w256.b0", !4908, i64 0}
!4908 = !{!"0000020906107A70.w512.b0", !4909, i64 0}
!4909 = !{!"0000020906107A70.w1024.b0", !4910, i64 0}
!4910 = !{!"0000020906107A70", !21, i64 0}
!4911 = !{!4912, !4912, i64 0}
!4912 = !{!"0000020906107A70.w8.b8", !4903, i64 0}
!4913 = !{!4914, !4914, i64 0}
!4914 = !{!"0000020906107A70.w8.b32", !4915, i64 0}
!4915 = !{!"0000020906107A70.w16.b32", !4916, i64 0}
!4916 = !{!"0000020906107A70.w32.b32", !4905, i64 0}
!4917 = !{!4918, !4918, i64 0}
!4918 = !{!"0000020906107A70.w8.b40", !4915, i64 0}
!4919 = !{!4920, !4920, i64 0}
!4920 = !{!"0000020906109970.w8.b0", !4921, i64 0}
!4921 = !{!"0000020906109970.w16.b0", !4922, i64 0}
!4922 = !{!"0000020906109970.w32.b0", !4923, i64 0}
!4923 = !{!"0000020906109970.w64.b0", !4924, i64 0}
!4924 = !{!"0000020906109970.w128.b0", !4925, i64 0}
!4925 = !{!"0000020906109970.w256.b0", !4926, i64 0}
!4926 = !{!"0000020906109970.w512.b0", !4927, i64 0}
!4927 = !{!"0000020906109970.w1024.b0", !4928, i64 0}
!4928 = !{!"0000020906109970", !21, i64 0}
!4929 = !{!4930, !4930, i64 0}
!4930 = !{!"0000020906109970.w8.b8", !4921, i64 0}
!4931 = !{!4932, !4932, i64 0}
!4932 = !{!"0000020906109970.w8.b16", !4933, i64 0}
!4933 = !{!"0000020906109970.w16.b16", !4922, i64 0}
!4934 = !{!4935, !4935, i64 0}
!4935 = !{!"0000020906109970.w8.b24", !4933, i64 0}
!4936 = !{!4937, !4937, i64 0}
!4937 = !{!"0000020906109970.w8.b32", !4938, i64 0}
!4938 = !{!"0000020906109970.w16.b32", !4939, i64 0}
!4939 = !{!"0000020906109970.w32.b32", !4923, i64 0}
!4940 = !{!4941, !4941, i64 0}
!4941 = !{!"0000020906109B30.w8.b8", !4942, i64 0}
!4942 = !{!"0000020906109B30.w16.b0", !4943, i64 0}
!4943 = !{!"0000020906109B30.w32.b0", !4944, i64 0}
!4944 = !{!"0000020906109B30.w64.b0", !4945, i64 0}
!4945 = !{!"0000020906109B30.w128.b0", !4946, i64 0}
!4946 = !{!"0000020906109B30.w256.b0", !4947, i64 0}
!4947 = !{!"0000020906109B30.w512.b0", !4948, i64 0}
!4948 = !{!"0000020906109B30.w1024.b0", !4949, i64 0}
!4949 = !{!"0000020906109B30", !21, i64 0}
!4950 = !{!4951, !4951, i64 0}
!4951 = !{!"0000020906109B30.w8.b16", !4952, i64 0}
!4952 = !{!"0000020906109B30.w16.b16", !4943, i64 0}
!4953 = !{!4954, !4954, i64 0}
!4954 = !{!"0000020906109B30.w8.b24", !4952, i64 0}
!4955 = !{!4956, !4956, i64 0}
!4956 = !{!"0000020906109B30.w8.b32", !4957, i64 0}
!4957 = !{!"0000020906109B30.w16.b32", !4958, i64 0}
!4958 = !{!"0000020906109B30.w32.b32", !4944, i64 0}
!4959 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4960)
!4960 = !{!4961, !4962, !4963, !4964, !4965, !4966}
!4961 = !DILocalVariable(name: "arg1", arg: 1, scope: !4959, file: !1, type: !8)
!4962 = !DILocalVariable(name: "arg2", arg: 2, scope: !4959, file: !1, type: !9)
!4963 = !DILocalVariable(name: "arg3", arg: 3, scope: !4959, file: !1, type: !7)
!4964 = !DILocalVariable(name: "arg4", arg: 4, scope: !4959, file: !1, type: !8)
!4965 = !DILocalVariable(name: "arg5", arg: 5, scope: !4959, file: !1, type: !9)
!4966 = !DILocalVariable(name: "arg6", arg: 6, scope: !4959, file: !1, type: !8)
!4967 = !DILocation(line: 0, scope: !4959)
!4968 = !{!4969, !4969, i64 0}
!4969 = !{!"0000020905FEE830.w4.b0", !4970, i64 0}
!4970 = !{!"0000020905FEE830.w8.b0", !4971, i64 0}
!4971 = !{!"0000020905FEE830.w16.b0", !4972, i64 0}
!4972 = !{!"0000020905FEE830.w32.b0", !4973, i64 0}
!4973 = !{!"0000020905FEE830.w64.b0", !4974, i64 0}
!4974 = !{!"0000020905FEE830.w128.b0", !4975, i64 0}
!4975 = !{!"0000020905FEE830.w256.b0", !4976, i64 0}
!4976 = !{!"0000020905FEE830.w512.b0", !4977, i64 0}
!4977 = !{!"0000020905FEE830.w1024.b0", !4978, i64 0}
!4978 = !{!"0000020905FEE830", !21, i64 0}
!4979 = !{!4980, !4980, i64 0}
!4980 = !{!"0000020905FEE830.w4.b4", !4970, i64 0}
!4981 = !{!4982, !4982, i64 0}
!4982 = !{!"0000020905FEE830.w4.b8", !4983, i64 0}
!4983 = !{!"0000020905FEE830.w8.b8", !4971, i64 0}
!4984 = !{!4985, !4985, i64 0}
!4985 = !{!"0000020905FEE830.w4.b12", !4983, i64 0}
!4986 = !{!4987, !4987, i64 0}
!4987 = !{!"0000020905FEE830.w4.b16", !4988, i64 0}
!4988 = !{!"0000020905FEE830.w8.b16", !4989, i64 0}
!4989 = !{!"0000020905FEE830.w16.b16", !4972, i64 0}
!4990 = !{!4991, !4991, i64 0}
!4991 = !{!"0000020905FF2970.w8.b0", !4992, i64 0}
!4992 = !{!"0000020905FF2970.w16.b0", !4993, i64 0}
!4993 = !{!"0000020905FF2970.w32.b0", !4994, i64 0}
!4994 = !{!"0000020905FF2970.w64.b0", !4995, i64 0}
!4995 = !{!"0000020905FF2970.w128.b0", !4996, i64 0}
!4996 = !{!"0000020905FF2970.w256.b0", !4997, i64 0}
!4997 = !{!"0000020905FF2970.w512.b0", !4998, i64 0}
!4998 = !{!"0000020905FF2970.w1024.b0", !4999, i64 0}
!4999 = !{!"0000020905FF2970", !21, i64 0}
!5000 = !{!5001, !5001, i64 0}
!5001 = !{!"0000020905FF2970.w8.b8", !4992, i64 0}
!5002 = !{!5003, !5003, i64 0}
!5003 = !{!"0000020905FF2970.w8.b16", !5004, i64 0}
!5004 = !{!"0000020905FF2970.w16.b16", !4993, i64 0}
!5005 = !{!5006, !5006, i64 0}
!5006 = !{!"0000020905FF2970.w8.b24", !5004, i64 0}
!5007 = !{!5008, !5008, i64 0}
!5008 = !{!"0000020905FF2970.w8.b32", !5009, i64 0}
!5009 = !{!"0000020905FF2970.w16.b32", !5010, i64 0}
!5010 = !{!"0000020905FF2970.w32.b32", !4994, i64 0}
!5011 = !{!5012, !5012, i64 0}
!5012 = !{!"0000020905FF3E30.w8.b8", !5013, i64 0}
!5013 = !{!"0000020905FF3E30.w16.b0", !5014, i64 0}
!5014 = !{!"0000020905FF3E30.w32.b0", !5015, i64 0}
!5015 = !{!"0000020905FF3E30.w64.b0", !5016, i64 0}
!5016 = !{!"0000020905FF3E30.w128.b0", !5017, i64 0}
!5017 = !{!"0000020905FF3E30.w256.b0", !5018, i64 0}
!5018 = !{!"0000020905FF3E30.w512.b0", !5019, i64 0}
!5019 = !{!"0000020905FF3E30.w1024.b0", !5020, i64 0}
!5020 = !{!"0000020905FF3E30", !21, i64 0}
!5021 = !{!5022, !5022, i64 0}
!5022 = !{!"0000020905FF3E30.w8.b16", !5023, i64 0}
!5023 = !{!"0000020905FF3E30.w16.b16", !5014, i64 0}
!5024 = !{!5025, !5025, i64 0}
!5025 = !{!"0000020905FF3E30.w8.b24", !5023, i64 0}
!5026 = !{!5027, !5027, i64 0}
!5027 = !{!"0000020905FF3E30.w8.b32", !5028, i64 0}
!5028 = !{!"0000020905FF3E30.w16.b32", !5029, i64 0}
!5029 = !{!"0000020905FF3E30.w32.b32", !5015, i64 0}
!5030 = !{!5031, !5031, i64 0}
!5031 = !{!"0000020905FF4C70.w8.b0", !5032, i64 0}
!5032 = !{!"0000020905FF4C70.w16.b0", !5033, i64 0}
!5033 = !{!"0000020905FF4C70.w32.b0", !5034, i64 0}
!5034 = !{!"0000020905FF4C70.w64.b0", !5035, i64 0}
!5035 = !{!"0000020905FF4C70.w128.b0", !5036, i64 0}
!5036 = !{!"0000020905FF4C70.w256.b0", !5037, i64 0}
!5037 = !{!"0000020905FF4C70.w512.b0", !5038, i64 0}
!5038 = !{!"0000020905FF4C70.w1024.b0", !5039, i64 0}
!5039 = !{!"0000020905FF4C70", !21, i64 0}
!5040 = !{!5041, !5041, i64 0}
!5041 = !{!"0000020905FF4C70.w8.b8", !5032, i64 0}
!5042 = !{!5043, !5043, i64 0}
!5043 = !{!"0000020905FF4C70.w8.b16", !5044, i64 0}
!5044 = !{!"0000020905FF4C70.w16.b16", !5033, i64 0}
!5045 = !{!5046, !5046, i64 0}
!5046 = !{!"0000020905FF4C70.w8.b24", !5044, i64 0}
!5047 = !{!5048, !5048, i64 0}
!5048 = !{!"0000020905FF4C70.w8.b32", !5049, i64 0}
!5049 = !{!"0000020905FF4C70.w16.b32", !5050, i64 0}
!5050 = !{!"0000020905FF4C70.w32.b32", !5034, i64 0}
!5051 = !{!5052, !5052, i64 0}
!5052 = !{!"0000020905FF4C70.w8.b40", !5049, i64 0}
!5053 = !{!5054, !5054, i64 0}
!5054 = !{!"0000020905FF5570.w8.b0", !5055, i64 0}
!5055 = !{!"0000020905FF5570.w16.b0", !5056, i64 0}
!5056 = !{!"0000020905FF5570.w32.b0", !5057, i64 0}
!5057 = !{!"0000020905FF5570.w64.b0", !5058, i64 0}
!5058 = !{!"0000020905FF5570.w128.b0", !5059, i64 0}
!5059 = !{!"0000020905FF5570.w256.b0", !5060, i64 0}
!5060 = !{!"0000020905FF5570.w512.b0", !5061, i64 0}
!5061 = !{!"0000020905FF5570.w1024.b0", !5062, i64 0}
!5062 = !{!"0000020905FF5570", !21, i64 0}
!5063 = !{!5064, !5064, i64 0}
!5064 = !{!"0000020905FF5570.w8.b8", !5055, i64 0}
!5065 = !{!5066, !5066, i64 0}
!5066 = !{!"0000020905FF5570.w8.b16", !5067, i64 0}
!5067 = !{!"0000020905FF5570.w16.b16", !5056, i64 0}
!5068 = !{!5069, !5069, i64 0}
!5069 = !{!"0000020905FF5570.w8.b24", !5067, i64 0}
!5070 = !{!5071, !5071, i64 0}
!5071 = !{!"0000020905FF5570.w8.b32", !5072, i64 0}
!5072 = !{!"0000020905FF5570.w16.b32", !5073, i64 0}
!5073 = !{!"0000020905FF5570.w32.b32", !5057, i64 0}
!5074 = !{!5075, !5075, i64 0}
!5075 = !{!"0000020905FF5570.w8.b40", !5072, i64 0}
!5076 = !{!5077, !5077, i64 0}
!5077 = !{!"0000020905FF7AB0.w8.b0", !5078, i64 0}
!5078 = !{!"0000020905FF7AB0.w16.b0", !5079, i64 0}
!5079 = !{!"0000020905FF7AB0.w32.b0", !5080, i64 0}
!5080 = !{!"0000020905FF7AB0.w64.b0", !5081, i64 0}
!5081 = !{!"0000020905FF7AB0.w128.b0", !5082, i64 0}
!5082 = !{!"0000020905FF7AB0.w256.b0", !5083, i64 0}
!5083 = !{!"0000020905FF7AB0.w512.b0", !5084, i64 0}
!5084 = !{!"0000020905FF7AB0.w1024.b0", !5085, i64 0}
!5085 = !{!"0000020905FF7AB0", !21, i64 0}
!5086 = !{!5087, !5087, i64 0}
!5087 = !{!"0000020905FF7AB0.w8.b8", !5078, i64 0}
!5088 = !{!5089, !5089, i64 0}
!5089 = !{!"0000020905FF7AB0.w8.b16", !5090, i64 0}
!5090 = !{!"0000020905FF7AB0.w16.b16", !5079, i64 0}
!5091 = !{!5092, !5092, i64 0}
!5092 = !{!"0000020905FF7AB0.w8.b24", !5090, i64 0}
!5093 = !{!5094, !5094, i64 0}
!5094 = !{!"0000020905FF7AB0.w8.b32", !5095, i64 0}
!5095 = !{!"0000020905FF7AB0.w16.b32", !5096, i64 0}
!5096 = !{!"0000020905FF7AB0.w32.b32", !5080, i64 0}
!5097 = !{!5098, !5098, i64 0}
!5098 = !{!"0000020905FF8AF0.w8.b8", !5099, i64 0}
!5099 = !{!"0000020905FF8AF0.w16.b0", !5100, i64 0}
!5100 = !{!"0000020905FF8AF0.w32.b0", !5101, i64 0}
!5101 = !{!"0000020905FF8AF0.w64.b0", !5102, i64 0}
!5102 = !{!"0000020905FF8AF0.w128.b0", !5103, i64 0}
!5103 = !{!"0000020905FF8AF0.w256.b0", !5104, i64 0}
!5104 = !{!"0000020905FF8AF0.w512.b0", !5105, i64 0}
!5105 = !{!"0000020905FF8AF0.w1024.b0", !5106, i64 0}
!5106 = !{!"0000020905FF8AF0", !21, i64 0}
!5107 = !{!5108, !5108, i64 0}
!5108 = !{!"0000020905FF8AF0.w8.b16", !5109, i64 0}
!5109 = !{!"0000020905FF8AF0.w16.b16", !5100, i64 0}
!5110 = !{!5111, !5111, i64 0}
!5111 = !{!"0000020905FF8AF0.w8.b24", !5109, i64 0}
!5112 = !{!5113, !5113, i64 0}
!5113 = !{!"0000020905FF8AF0.w8.b32", !5114, i64 0}
!5114 = !{!"0000020905FF8AF0.w16.b32", !5115, i64 0}
!5115 = !{!"0000020905FF8AF0.w32.b32", !5101, i64 0}
!5116 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5117)
!5117 = !{!5118, !5119, !5120, !5121, !5122, !5123}
!5118 = !DILocalVariable(name: "arg1", arg: 1, scope: !5116, file: !1, type: !8)
!5119 = !DILocalVariable(name: "arg2", arg: 2, scope: !5116, file: !1, type: !9)
!5120 = !DILocalVariable(name: "arg3", arg: 3, scope: !5116, file: !1, type: !7)
!5121 = !DILocalVariable(name: "arg4", arg: 4, scope: !5116, file: !1, type: !8)
!5122 = !DILocalVariable(name: "arg5", arg: 5, scope: !5116, file: !1, type: !9)
!5123 = !DILocalVariable(name: "arg6", arg: 6, scope: !5116, file: !1, type: !8)
!5124 = !DILocation(line: 0, scope: !5116)
!5125 = !{!5126, !5126, i64 0}
!5126 = !{!"000002090616A630.w4.b0", !5127, i64 0}
!5127 = !{!"000002090616A630.w8.b0", !5128, i64 0}
!5128 = !{!"000002090616A630.w16.b0", !5129, i64 0}
!5129 = !{!"000002090616A630.w32.b0", !5130, i64 0}
!5130 = !{!"000002090616A630.w64.b0", !5131, i64 0}
!5131 = !{!"000002090616A630.w128.b0", !5132, i64 0}
!5132 = !{!"000002090616A630.w256.b0", !5133, i64 0}
!5133 = !{!"000002090616A630.w512.b0", !5134, i64 0}
!5134 = !{!"000002090616A630.w1024.b0", !5135, i64 0}
!5135 = !{!"000002090616A630", !21, i64 0}
!5136 = !{!5137, !5137, i64 0}
!5137 = !{!"000002090616A630.w4.b4", !5127, i64 0}
!5138 = !{!5139, !5139, i64 0}
!5139 = !{!"000002090616A630.w4.b8", !5140, i64 0}
!5140 = !{!"000002090616A630.w8.b8", !5128, i64 0}
!5141 = !{!5142, !5142, i64 0}
!5142 = !{!"000002090616A630.w4.b12", !5140, i64 0}
!5143 = !{!5144, !5144, i64 0}
!5144 = !{!"000002090616A630.w4.b16", !5145, i64 0}
!5145 = !{!"000002090616A630.w8.b16", !5146, i64 0}
!5146 = !{!"000002090616A630.w16.b16", !5129, i64 0}
!5147 = !{!5148, !5148, i64 0}
!5148 = !{!"00000209061722B0.w8.b0", !5149, i64 0}
!5149 = !{!"00000209061722B0.w16.b0", !5150, i64 0}
!5150 = !{!"00000209061722B0.w32.b0", !5151, i64 0}
!5151 = !{!"00000209061722B0.w64.b0", !5152, i64 0}
!5152 = !{!"00000209061722B0.w128.b0", !5153, i64 0}
!5153 = !{!"00000209061722B0.w256.b0", !5154, i64 0}
!5154 = !{!"00000209061722B0.w512.b0", !5155, i64 0}
!5155 = !{!"00000209061722B0.w1024.b0", !5156, i64 0}
!5156 = !{!"00000209061722B0", !21, i64 0}
!5157 = !{!5158, !5158, i64 0}
!5158 = !{!"00000209061722B0.w8.b8", !5149, i64 0}
!5159 = !{!5160, !5160, i64 0}
!5160 = !{!"00000209061722B0.w8.b16", !5161, i64 0}
!5161 = !{!"00000209061722B0.w16.b16", !5150, i64 0}
!5162 = !{!5163, !5163, i64 0}
!5163 = !{!"00000209061722B0.w8.b24", !5161, i64 0}
!5164 = !{!5165, !5165, i64 0}
!5165 = !{!"00000209061722B0.w8.b32", !5166, i64 0}
!5166 = !{!"00000209061722B0.w16.b32", !5167, i64 0}
!5167 = !{!"00000209061722B0.w32.b32", !5151, i64 0}
!5168 = !{!5169, !5169, i64 0}
!5169 = !{!"0000020906172970.w8.b8", !5170, i64 0}
!5170 = !{!"0000020906172970.w16.b0", !5171, i64 0}
!5171 = !{!"0000020906172970.w32.b0", !5172, i64 0}
!5172 = !{!"0000020906172970.w64.b0", !5173, i64 0}
!5173 = !{!"0000020906172970.w128.b0", !5174, i64 0}
!5174 = !{!"0000020906172970.w256.b0", !5175, i64 0}
!5175 = !{!"0000020906172970.w512.b0", !5176, i64 0}
!5176 = !{!"0000020906172970.w1024.b0", !5177, i64 0}
!5177 = !{!"0000020906172970", !21, i64 0}
!5178 = !{!5179, !5179, i64 0}
!5179 = !{!"0000020906172970.w8.b16", !5180, i64 0}
!5180 = !{!"0000020906172970.w16.b16", !5171, i64 0}
!5181 = !{!5182, !5182, i64 0}
!5182 = !{!"0000020906172970.w8.b24", !5180, i64 0}
!5183 = !{!5184, !5184, i64 0}
!5184 = !{!"0000020906172970.w8.b32", !5185, i64 0}
!5185 = !{!"0000020906172970.w16.b32", !5186, i64 0}
!5186 = !{!"0000020906172970.w32.b32", !5172, i64 0}
!5187 = !{!5188, !5188, i64 0}
!5188 = !{!"00000209061736B0.w8.b0", !5189, i64 0}
!5189 = !{!"00000209061736B0.w16.b0", !5190, i64 0}
!5190 = !{!"00000209061736B0.w32.b0", !5191, i64 0}
!5191 = !{!"00000209061736B0.w64.b0", !5192, i64 0}
!5192 = !{!"00000209061736B0.w128.b0", !5193, i64 0}
!5193 = !{!"00000209061736B0.w256.b0", !5194, i64 0}
!5194 = !{!"00000209061736B0.w512.b0", !5195, i64 0}
!5195 = !{!"00000209061736B0.w1024.b0", !5196, i64 0}
!5196 = !{!"00000209061736B0", !21, i64 0}
!5197 = !{!5198, !5198, i64 0}
!5198 = !{!"00000209061736B0.w8.b8", !5189, i64 0}
!5199 = !{!5200, !5200, i64 0}
!5200 = !{!"00000209061736B0.w8.b16", !5201, i64 0}
!5201 = !{!"00000209061736B0.w16.b16", !5190, i64 0}
!5202 = !{!5203, !5203, i64 0}
!5203 = !{!"00000209061736B0.w8.b24", !5201, i64 0}
!5204 = !{!5205, !5205, i64 0}
!5205 = !{!"00000209061736B0.w8.b32", !5206, i64 0}
!5206 = !{!"00000209061736B0.w16.b32", !5207, i64 0}
!5207 = !{!"00000209061736B0.w32.b32", !5191, i64 0}
!5208 = !{!5209, !5209, i64 0}
!5209 = !{!"00000209061736B0.w8.b40", !5206, i64 0}
!5210 = !{!5211, !5211, i64 0}
!5211 = !{!"0000020906173970.w8.b0", !5212, i64 0}
!5212 = !{!"0000020906173970.w16.b0", !5213, i64 0}
!5213 = !{!"0000020906173970.w32.b0", !5214, i64 0}
!5214 = !{!"0000020906173970.w64.b0", !5215, i64 0}
!5215 = !{!"0000020906173970.w128.b0", !5216, i64 0}
!5216 = !{!"0000020906173970.w256.b0", !5217, i64 0}
!5217 = !{!"0000020906173970.w512.b0", !5218, i64 0}
!5218 = !{!"0000020906173970.w1024.b0", !5219, i64 0}
!5219 = !{!"0000020906173970", !21, i64 0}
!5220 = !{!5221, !5221, i64 0}
!5221 = !{!"0000020906173970.w8.b8", !5212, i64 0}
!5222 = !{!5223, !5223, i64 0}
!5223 = !{!"0000020906173970.w8.b32", !5224, i64 0}
!5224 = !{!"0000020906173970.w16.b32", !5225, i64 0}
!5225 = !{!"0000020906173970.w32.b32", !5214, i64 0}
!5226 = !{!5227, !5227, i64 0}
!5227 = !{!"0000020906173970.w8.b40", !5224, i64 0}
!5228 = !{!5229, !5229, i64 0}
!5229 = !{!"0000020906175FB0.w8.b0", !5230, i64 0}
!5230 = !{!"0000020906175FB0.w16.b0", !5231, i64 0}
!5231 = !{!"0000020906175FB0.w32.b0", !5232, i64 0}
!5232 = !{!"0000020906175FB0.w64.b0", !5233, i64 0}
!5233 = !{!"0000020906175FB0.w128.b0", !5234, i64 0}
!5234 = !{!"0000020906175FB0.w256.b0", !5235, i64 0}
!5235 = !{!"0000020906175FB0.w512.b0", !5236, i64 0}
!5236 = !{!"0000020906175FB0.w1024.b0", !5237, i64 0}
!5237 = !{!"0000020906175FB0", !21, i64 0}
!5238 = !{!5239, !5239, i64 0}
!5239 = !{!"0000020906175FB0.w8.b8", !5230, i64 0}
!5240 = !{!5241, !5241, i64 0}
!5241 = !{!"0000020906175FB0.w8.b16", !5242, i64 0}
!5242 = !{!"0000020906175FB0.w16.b16", !5231, i64 0}
!5243 = !{!5244, !5244, i64 0}
!5244 = !{!"0000020906175FB0.w8.b24", !5242, i64 0}
!5245 = !{!5246, !5246, i64 0}
!5246 = !{!"0000020906175FB0.w8.b32", !5247, i64 0}
!5247 = !{!"0000020906175FB0.w16.b32", !5248, i64 0}
!5248 = !{!"0000020906175FB0.w32.b32", !5232, i64 0}
!5249 = !{!5250, !5250, i64 0}
!5250 = !{!"0000020906176070.w8.b8", !5251, i64 0}
!5251 = !{!"0000020906176070.w16.b0", !5252, i64 0}
!5252 = !{!"0000020906176070.w32.b0", !5253, i64 0}
!5253 = !{!"0000020906176070.w64.b0", !5254, i64 0}
!5254 = !{!"0000020906176070.w128.b0", !5255, i64 0}
!5255 = !{!"0000020906176070.w256.b0", !5256, i64 0}
!5256 = !{!"0000020906176070.w512.b0", !5257, i64 0}
!5257 = !{!"0000020906176070.w1024.b0", !5258, i64 0}
!5258 = !{!"0000020906176070", !21, i64 0}
!5259 = !{!5260, !5260, i64 0}
!5260 = !{!"0000020906176070.w8.b16", !5261, i64 0}
!5261 = !{!"0000020906176070.w16.b16", !5252, i64 0}
!5262 = !{!5263, !5263, i64 0}
!5263 = !{!"0000020906176070.w8.b24", !5261, i64 0}
!5264 = !{!5265, !5265, i64 0}
!5265 = !{!"0000020906176070.w8.b32", !5266, i64 0}
!5266 = !{!"0000020906176070.w16.b32", !5267, i64 0}
!5267 = !{!"0000020906176070.w32.b32", !5253, i64 0}
!5268 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5269)
!5269 = !{!5270, !5271, !5272, !5273, !5274, !5275}
!5270 = !DILocalVariable(name: "arg1", arg: 1, scope: !5268, file: !1, type: !8)
!5271 = !DILocalVariable(name: "arg2", arg: 2, scope: !5268, file: !1, type: !9)
!5272 = !DILocalVariable(name: "arg3", arg: 3, scope: !5268, file: !1, type: !7)
!5273 = !DILocalVariable(name: "arg4", arg: 4, scope: !5268, file: !1, type: !8)
!5274 = !DILocalVariable(name: "arg5", arg: 5, scope: !5268, file: !1, type: !9)
!5275 = !DILocalVariable(name: "arg6", arg: 6, scope: !5268, file: !1, type: !8)
!5276 = !DILocation(line: 0, scope: !5268)
!5277 = !{!5278, !5278, i64 0}
!5278 = !{!"0000020905FEE430.w4.b0", !5279, i64 0}
!5279 = !{!"0000020905FEE430.w8.b0", !5280, i64 0}
!5280 = !{!"0000020905FEE430.w16.b0", !5281, i64 0}
!5281 = !{!"0000020905FEE430.w32.b0", !5282, i64 0}
!5282 = !{!"0000020905FEE430.w64.b0", !5283, i64 0}
!5283 = !{!"0000020905FEE430.w128.b0", !5284, i64 0}
!5284 = !{!"0000020905FEE430.w256.b0", !5285, i64 0}
!5285 = !{!"0000020905FEE430.w512.b0", !5286, i64 0}
!5286 = !{!"0000020905FEE430.w1024.b0", !5287, i64 0}
!5287 = !{!"0000020905FEE430", !21, i64 0}
!5288 = !{!5289, !5289, i64 0}
!5289 = !{!"0000020905FEE430.w4.b4", !5279, i64 0}
!5290 = !{!5291, !5291, i64 0}
!5291 = !{!"0000020905FEE430.w4.b8", !5292, i64 0}
!5292 = !{!"0000020905FEE430.w8.b8", !5280, i64 0}
!5293 = !{!5294, !5294, i64 0}
!5294 = !{!"0000020905FEE430.w4.b12", !5292, i64 0}
!5295 = !{!5296, !5296, i64 0}
!5296 = !{!"0000020905FEE430.w4.b16", !5297, i64 0}
!5297 = !{!"0000020905FEE430.w8.b16", !5298, i64 0}
!5298 = !{!"0000020905FEE430.w16.b16", !5281, i64 0}
!5299 = !{!5300, !5300, i64 0}
!5300 = !{!"0000020905FEEFF0.w8.b0", !5301, i64 0}
!5301 = !{!"0000020905FEEFF0.w16.b0", !5302, i64 0}
!5302 = !{!"0000020905FEEFF0.w32.b0", !5303, i64 0}
!5303 = !{!"0000020905FEEFF0.w64.b0", !5304, i64 0}
!5304 = !{!"0000020905FEEFF0.w128.b0", !5305, i64 0}
!5305 = !{!"0000020905FEEFF0.w256.b0", !5306, i64 0}
!5306 = !{!"0000020905FEEFF0.w512.b0", !5307, i64 0}
!5307 = !{!"0000020905FEEFF0.w1024.b0", !5308, i64 0}
!5308 = !{!"0000020905FEEFF0", !21, i64 0}
!5309 = !{!5310, !5310, i64 0}
!5310 = !{!"0000020905FEEFF0.w8.b8", !5301, i64 0}
!5311 = !{!5312, !5312, i64 0}
!5312 = !{!"0000020905FEEFF0.w8.b16", !5313, i64 0}
!5313 = !{!"0000020905FEEFF0.w16.b16", !5302, i64 0}
!5314 = !{!5315, !5315, i64 0}
!5315 = !{!"0000020905FEEFF0.w8.b24", !5313, i64 0}
!5316 = !{!5317, !5317, i64 0}
!5317 = !{!"0000020905FEEFF0.w8.b32", !5318, i64 0}
!5318 = !{!"0000020905FEEFF0.w16.b32", !5319, i64 0}
!5319 = !{!"0000020905FEEFF0.w32.b32", !5303, i64 0}
!5320 = !{!5321, !5321, i64 0}
!5321 = !{!"0000020905FEF470.w8.b8", !5322, i64 0}
!5322 = !{!"0000020905FEF470.w16.b0", !5323, i64 0}
!5323 = !{!"0000020905FEF470.w32.b0", !5324, i64 0}
!5324 = !{!"0000020905FEF470.w64.b0", !5325, i64 0}
!5325 = !{!"0000020905FEF470.w128.b0", !5326, i64 0}
!5326 = !{!"0000020905FEF470.w256.b0", !5327, i64 0}
!5327 = !{!"0000020905FEF470.w512.b0", !5328, i64 0}
!5328 = !{!"0000020905FEF470.w1024.b0", !5329, i64 0}
!5329 = !{!"0000020905FEF470", !21, i64 0}
!5330 = !{!5331, !5331, i64 0}
!5331 = !{!"0000020905FEF470.w8.b16", !5332, i64 0}
!5332 = !{!"0000020905FEF470.w16.b16", !5323, i64 0}
!5333 = !{!5334, !5334, i64 0}
!5334 = !{!"0000020905FEF470.w8.b24", !5332, i64 0}
!5335 = !{!5336, !5336, i64 0}
!5336 = !{!"0000020905FEF470.w8.b32", !5337, i64 0}
!5337 = !{!"0000020905FEF470.w16.b32", !5338, i64 0}
!5338 = !{!"0000020905FEF470.w32.b32", !5324, i64 0}
!5339 = !{!5340, !5340, i64 0}
!5340 = !{!"0000020905FEFFF0.w8.b0", !5341, i64 0}
!5341 = !{!"0000020905FEFFF0.w16.b0", !5342, i64 0}
!5342 = !{!"0000020905FEFFF0.w32.b0", !5343, i64 0}
!5343 = !{!"0000020905FEFFF0.w64.b0", !5344, i64 0}
!5344 = !{!"0000020905FEFFF0.w128.b0", !5345, i64 0}
!5345 = !{!"0000020905FEFFF0.w256.b0", !5346, i64 0}
!5346 = !{!"0000020905FEFFF0.w512.b0", !5347, i64 0}
!5347 = !{!"0000020905FEFFF0.w1024.b0", !5348, i64 0}
!5348 = !{!"0000020905FEFFF0", !21, i64 0}
!5349 = !{!5350, !5350, i64 0}
!5350 = !{!"0000020905FEFFF0.w8.b8", !5341, i64 0}
!5351 = !{!5352, !5352, i64 0}
!5352 = !{!"0000020905FEFFF0.w8.b16", !5353, i64 0}
!5353 = !{!"0000020905FEFFF0.w16.b16", !5342, i64 0}
!5354 = !{!5355, !5355, i64 0}
!5355 = !{!"0000020905FEFFF0.w8.b24", !5353, i64 0}
!5356 = !{!5357, !5357, i64 0}
!5357 = !{!"0000020905FEFFF0.w8.b32", !5358, i64 0}
!5358 = !{!"0000020905FEFFF0.w16.b32", !5359, i64 0}
!5359 = !{!"0000020905FEFFF0.w32.b32", !5343, i64 0}
!5360 = !{!5361, !5361, i64 0}
!5361 = !{!"0000020905FEFFF0.w8.b40", !5358, i64 0}
!5362 = !{!5363, !5363, i64 0}
!5363 = !{!"0000020905FF05F0.w8.b0", !5364, i64 0}
!5364 = !{!"0000020905FF05F0.w16.b0", !5365, i64 0}
!5365 = !{!"0000020905FF05F0.w32.b0", !5366, i64 0}
!5366 = !{!"0000020905FF05F0.w64.b0", !5367, i64 0}
!5367 = !{!"0000020905FF05F0.w128.b0", !5368, i64 0}
!5368 = !{!"0000020905FF05F0.w256.b0", !5369, i64 0}
!5369 = !{!"0000020905FF05F0.w512.b0", !5370, i64 0}
!5370 = !{!"0000020905FF05F0.w1024.b0", !5371, i64 0}
!5371 = !{!"0000020905FF05F0", !21, i64 0}
!5372 = !{!5373, !5373, i64 0}
!5373 = !{!"0000020905FF05F0.w8.b8", !5364, i64 0}
!5374 = !{!5375, !5375, i64 0}
!5375 = !{!"0000020905FF05F0.w8.b32", !5376, i64 0}
!5376 = !{!"0000020905FF05F0.w16.b32", !5377, i64 0}
!5377 = !{!"0000020905FF05F0.w32.b32", !5366, i64 0}
!5378 = !{!5379, !5379, i64 0}
!5379 = !{!"0000020905FF05F0.w8.b40", !5376, i64 0}
!5380 = !{!5381, !5381, i64 0}
!5381 = !{!"0000020905FF22B0.w8.b0", !5382, i64 0}
!5382 = !{!"0000020905FF22B0.w16.b0", !5383, i64 0}
!5383 = !{!"0000020905FF22B0.w32.b0", !5384, i64 0}
!5384 = !{!"0000020905FF22B0.w64.b0", !5385, i64 0}
!5385 = !{!"0000020905FF22B0.w128.b0", !5386, i64 0}
!5386 = !{!"0000020905FF22B0.w256.b0", !5387, i64 0}
!5387 = !{!"0000020905FF22B0.w512.b0", !5388, i64 0}
!5388 = !{!"0000020905FF22B0.w1024.b0", !5389, i64 0}
!5389 = !{!"0000020905FF22B0", !21, i64 0}
!5390 = !{!5391, !5391, i64 0}
!5391 = !{!"0000020905FF22B0.w8.b8", !5382, i64 0}
!5392 = !{!5393, !5393, i64 0}
!5393 = !{!"0000020905FF22B0.w8.b16", !5394, i64 0}
!5394 = !{!"0000020905FF22B0.w16.b16", !5383, i64 0}
!5395 = !{!5396, !5396, i64 0}
!5396 = !{!"0000020905FF22B0.w8.b24", !5394, i64 0}
!5397 = !{!5398, !5398, i64 0}
!5398 = !{!"0000020905FF22B0.w8.b32", !5399, i64 0}
!5399 = !{!"0000020905FF22B0.w16.b32", !5400, i64 0}
!5400 = !{!"0000020905FF22B0.w32.b32", !5384, i64 0}
!5401 = !{!5402, !5402, i64 0}
!5402 = !{!"0000020905FF2A30.w8.b8", !5403, i64 0}
!5403 = !{!"0000020905FF2A30.w16.b0", !5404, i64 0}
!5404 = !{!"0000020905FF2A30.w32.b0", !5405, i64 0}
!5405 = !{!"0000020905FF2A30.w64.b0", !5406, i64 0}
!5406 = !{!"0000020905FF2A30.w128.b0", !5407, i64 0}
!5407 = !{!"0000020905FF2A30.w256.b0", !5408, i64 0}
!5408 = !{!"0000020905FF2A30.w512.b0", !5409, i64 0}
!5409 = !{!"0000020905FF2A30.w1024.b0", !5410, i64 0}
!5410 = !{!"0000020905FF2A30", !21, i64 0}
!5411 = !{!5412, !5412, i64 0}
!5412 = !{!"0000020905FF2A30.w8.b16", !5413, i64 0}
!5413 = !{!"0000020905FF2A30.w16.b16", !5404, i64 0}
!5414 = !{!5415, !5415, i64 0}
!5415 = !{!"0000020905FF2A30.w8.b24", !5413, i64 0}
!5416 = !{!5417, !5417, i64 0}
!5417 = !{!"0000020905FF2A30.w8.b32", !5418, i64 0}
!5418 = !{!"0000020905FF2A30.w16.b32", !5419, i64 0}
!5419 = !{!"0000020905FF2A30.w32.b32", !5405, i64 0}
!5420 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5421)
!5421 = !{!5422, !5423, !5424, !5425, !5426, !5427}
!5422 = !DILocalVariable(name: "arg1", arg: 1, scope: !5420, file: !1, type: !8)
!5423 = !DILocalVariable(name: "arg2", arg: 2, scope: !5420, file: !1, type: !9)
!5424 = !DILocalVariable(name: "arg3", arg: 3, scope: !5420, file: !1, type: !7)
!5425 = !DILocalVariable(name: "arg4", arg: 4, scope: !5420, file: !1, type: !8)
!5426 = !DILocalVariable(name: "arg5", arg: 5, scope: !5420, file: !1, type: !9)
!5427 = !DILocalVariable(name: "arg6", arg: 6, scope: !5420, file: !1, type: !8)
!5428 = !DILocation(line: 0, scope: !5420)
!5429 = !{!5430, !5430, i64 0}
!5430 = !{!"000002090617F2B0.w4.b0", !5431, i64 0}
!5431 = !{!"000002090617F2B0.w8.b0", !5432, i64 0}
!5432 = !{!"000002090617F2B0.w16.b0", !5433, i64 0}
!5433 = !{!"000002090617F2B0.w32.b0", !5434, i64 0}
!5434 = !{!"000002090617F2B0.w64.b0", !5435, i64 0}
!5435 = !{!"000002090617F2B0.w128.b0", !5436, i64 0}
!5436 = !{!"000002090617F2B0.w256.b0", !5437, i64 0}
!5437 = !{!"000002090617F2B0.w512.b0", !5438, i64 0}
!5438 = !{!"000002090617F2B0.w1024.b0", !5439, i64 0}
!5439 = !{!"000002090617F2B0", !21, i64 0}
!5440 = !{!5441, !5441, i64 0}
!5441 = !{!"000002090617F2B0.w4.b4", !5431, i64 0}
!5442 = !{!5443, !5443, i64 0}
!5443 = !{!"000002090617F2B0.w4.b8", !5444, i64 0}
!5444 = !{!"000002090617F2B0.w8.b8", !5432, i64 0}
!5445 = !{!5446, !5446, i64 0}
!5446 = !{!"000002090617F2B0.w4.b12", !5444, i64 0}
!5447 = !{!5448, !5448, i64 0}
!5448 = !{!"000002090617F2B0.w4.b16", !5449, i64 0}
!5449 = !{!"000002090617F2B0.w8.b16", !5450, i64 0}
!5450 = !{!"000002090617F2B0.w16.b16", !5433, i64 0}
!5451 = !{!5452, !5452, i64 0}
!5452 = !{!"00000209061C52F0.w8.b0", !5453, i64 0}
!5453 = !{!"00000209061C52F0.w16.b0", !5454, i64 0}
!5454 = !{!"00000209061C52F0.w32.b0", !5455, i64 0}
!5455 = !{!"00000209061C52F0.w64.b0", !5456, i64 0}
!5456 = !{!"00000209061C52F0.w128.b0", !5457, i64 0}
!5457 = !{!"00000209061C52F0.w256.b0", !5458, i64 0}
!5458 = !{!"00000209061C52F0.w512.b0", !5459, i64 0}
!5459 = !{!"00000209061C52F0.w1024.b0", !5460, i64 0}
!5460 = !{!"00000209061C52F0", !21, i64 0}
!5461 = !{!5462, !5462, i64 0}
!5462 = !{!"00000209061C52F0.w8.b8", !5453, i64 0}
!5463 = !{!5464, !5464, i64 0}
!5464 = !{!"00000209061C52F0.w8.b16", !5465, i64 0}
!5465 = !{!"00000209061C52F0.w16.b16", !5454, i64 0}
!5466 = !{!5467, !5467, i64 0}
!5467 = !{!"00000209061C52F0.w8.b24", !5465, i64 0}
!5468 = !{!5469, !5469, i64 0}
!5469 = !{!"00000209061C52F0.w8.b32", !5470, i64 0}
!5470 = !{!"00000209061C52F0.w16.b32", !5471, i64 0}
!5471 = !{!"00000209061C52F0.w32.b32", !5455, i64 0}
!5472 = !{!5473, !5473, i64 0}
!5473 = !{!"00000209061C5DF0.w8.b8", !5474, i64 0}
!5474 = !{!"00000209061C5DF0.w16.b0", !5475, i64 0}
!5475 = !{!"00000209061C5DF0.w32.b0", !5476, i64 0}
!5476 = !{!"00000209061C5DF0.w64.b0", !5477, i64 0}
!5477 = !{!"00000209061C5DF0.w128.b0", !5478, i64 0}
!5478 = !{!"00000209061C5DF0.w256.b0", !5479, i64 0}
!5479 = !{!"00000209061C5DF0.w512.b0", !5480, i64 0}
!5480 = !{!"00000209061C5DF0.w1024.b0", !5481, i64 0}
!5481 = !{!"00000209061C5DF0", !21, i64 0}
!5482 = !{!5483, !5483, i64 0}
!5483 = !{!"00000209061C5DF0.w8.b16", !5484, i64 0}
!5484 = !{!"00000209061C5DF0.w16.b16", !5475, i64 0}
!5485 = !{!5486, !5486, i64 0}
!5486 = !{!"00000209061C5DF0.w8.b24", !5484, i64 0}
!5487 = !{!5488, !5488, i64 0}
!5488 = !{!"00000209061C5DF0.w8.b32", !5489, i64 0}
!5489 = !{!"00000209061C5DF0.w16.b32", !5490, i64 0}
!5490 = !{!"00000209061C5DF0.w32.b32", !5476, i64 0}
!5491 = !{!5492, !5492, i64 0}
!5492 = !{!"00000209061C6430.w8.b0", !5493, i64 0}
!5493 = !{!"00000209061C6430.w16.b0", !5494, i64 0}
!5494 = !{!"00000209061C6430.w32.b0", !5495, i64 0}
!5495 = !{!"00000209061C6430.w64.b0", !5496, i64 0}
!5496 = !{!"00000209061C6430.w128.b0", !5497, i64 0}
!5497 = !{!"00000209061C6430.w256.b0", !5498, i64 0}
!5498 = !{!"00000209061C6430.w512.b0", !5499, i64 0}
!5499 = !{!"00000209061C6430.w1024.b0", !5500, i64 0}
!5500 = !{!"00000209061C6430", !21, i64 0}
!5501 = !{!5502, !5502, i64 0}
!5502 = !{!"00000209061C6430.w8.b8", !5493, i64 0}
!5503 = !{!5504, !5504, i64 0}
!5504 = !{!"00000209061C6430.w8.b16", !5505, i64 0}
!5505 = !{!"00000209061C6430.w16.b16", !5494, i64 0}
!5506 = !{!5507, !5507, i64 0}
!5507 = !{!"00000209061C6430.w8.b24", !5505, i64 0}
!5508 = !{!5509, !5509, i64 0}
!5509 = !{!"00000209061C6430.w8.b32", !5510, i64 0}
!5510 = !{!"00000209061C6430.w16.b32", !5511, i64 0}
!5511 = !{!"00000209061C6430.w32.b32", !5495, i64 0}
!5512 = !{!5513, !5513, i64 0}
!5513 = !{!"00000209061C6430.w8.b40", !5510, i64 0}
!5514 = !{!5515, !5515, i64 0}
!5515 = !{!"00000209061C6470.w8.b0", !5516, i64 0}
!5516 = !{!"00000209061C6470.w16.b0", !5517, i64 0}
!5517 = !{!"00000209061C6470.w32.b0", !5518, i64 0}
!5518 = !{!"00000209061C6470.w64.b0", !5519, i64 0}
!5519 = !{!"00000209061C6470.w128.b0", !5520, i64 0}
!5520 = !{!"00000209061C6470.w256.b0", !5521, i64 0}
!5521 = !{!"00000209061C6470.w512.b0", !5522, i64 0}
!5522 = !{!"00000209061C6470.w1024.b0", !5523, i64 0}
!5523 = !{!"00000209061C6470", !21, i64 0}
!5524 = !{!5525, !5525, i64 0}
!5525 = !{!"00000209061C6470.w8.b8", !5516, i64 0}
!5526 = !{!5527, !5527, i64 0}
!5527 = !{!"00000209061C6470.w8.b32", !5528, i64 0}
!5528 = !{!"00000209061C6470.w16.b32", !5529, i64 0}
!5529 = !{!"00000209061C6470.w32.b32", !5518, i64 0}
!5530 = !{!5531, !5531, i64 0}
!5531 = !{!"00000209061C6470.w8.b40", !5528, i64 0}
!5532 = !{!5533, !5533, i64 0}
!5533 = !{!"00000209061C85F0.w8.b0", !5534, i64 0}
!5534 = !{!"00000209061C85F0.w16.b0", !5535, i64 0}
!5535 = !{!"00000209061C85F0.w32.b0", !5536, i64 0}
!5536 = !{!"00000209061C85F0.w64.b0", !5537, i64 0}
!5537 = !{!"00000209061C85F0.w128.b0", !5538, i64 0}
!5538 = !{!"00000209061C85F0.w256.b0", !5539, i64 0}
!5539 = !{!"00000209061C85F0.w512.b0", !5540, i64 0}
!5540 = !{!"00000209061C85F0.w1024.b0", !5541, i64 0}
!5541 = !{!"00000209061C85F0", !21, i64 0}
!5542 = !{!5543, !5543, i64 0}
!5543 = !{!"00000209061C85F0.w8.b8", !5534, i64 0}
!5544 = !{!5545, !5545, i64 0}
!5545 = !{!"00000209061C85F0.w8.b16", !5546, i64 0}
!5546 = !{!"00000209061C85F0.w16.b16", !5535, i64 0}
!5547 = !{!5548, !5548, i64 0}
!5548 = !{!"00000209061C85F0.w8.b24", !5546, i64 0}
!5549 = !{!5550, !5550, i64 0}
!5550 = !{!"00000209061C85F0.w8.b32", !5551, i64 0}
!5551 = !{!"00000209061C85F0.w16.b32", !5552, i64 0}
!5552 = !{!"00000209061C85F0.w32.b32", !5536, i64 0}
!5553 = !{!5554, !5554, i64 0}
!5554 = !{!"00000209061C87B0.w8.b8", !5555, i64 0}
!5555 = !{!"00000209061C87B0.w16.b0", !5556, i64 0}
!5556 = !{!"00000209061C87B0.w32.b0", !5557, i64 0}
!5557 = !{!"00000209061C87B0.w64.b0", !5558, i64 0}
!5558 = !{!"00000209061C87B0.w128.b0", !5559, i64 0}
!5559 = !{!"00000209061C87B0.w256.b0", !5560, i64 0}
!5560 = !{!"00000209061C87B0.w512.b0", !5561, i64 0}
!5561 = !{!"00000209061C87B0.w1024.b0", !5562, i64 0}
!5562 = !{!"00000209061C87B0", !21, i64 0}
!5563 = !{!5564, !5564, i64 0}
!5564 = !{!"00000209061C87B0.w8.b16", !5565, i64 0}
!5565 = !{!"00000209061C87B0.w16.b16", !5556, i64 0}
!5566 = !{!5567, !5567, i64 0}
!5567 = !{!"00000209061C87B0.w8.b24", !5565, i64 0}
!5568 = !{!5569, !5569, i64 0}
!5569 = !{!"00000209061C87B0.w8.b32", !5570, i64 0}
!5570 = !{!"00000209061C87B0.w16.b32", !5571, i64 0}
!5571 = !{!"00000209061C87B0.w32.b32", !5557, i64 0}
!5572 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5573)
!5573 = !{!5574, !5575, !5576, !5577, !5578, !5579}
!5574 = !DILocalVariable(name: "arg1", arg: 1, scope: !5572, file: !1, type: !8)
!5575 = !DILocalVariable(name: "arg2", arg: 2, scope: !5572, file: !1, type: !9)
!5576 = !DILocalVariable(name: "arg3", arg: 3, scope: !5572, file: !1, type: !7)
!5577 = !DILocalVariable(name: "arg4", arg: 4, scope: !5572, file: !1, type: !8)
!5578 = !DILocalVariable(name: "arg5", arg: 5, scope: !5572, file: !1, type: !9)
!5579 = !DILocalVariable(name: "arg6", arg: 6, scope: !5572, file: !1, type: !8)
!5580 = !DILocation(line: 0, scope: !5572)
!5581 = !{!5582, !5582, i64 0}
!5582 = !{!"00000209060143E0.w4.b0", !5583, i64 0}
!5583 = !{!"00000209060143E0.w8.b0", !5584, i64 0}
!5584 = !{!"00000209060143E0.w16.b0", !5585, i64 0}
!5585 = !{!"00000209060143E0.w32.b0", !5586, i64 0}
!5586 = !{!"00000209060143E0.w64.b0", !5587, i64 0}
!5587 = !{!"00000209060143E0.w128.b0", !5588, i64 0}
!5588 = !{!"00000209060143E0.w256.b0", !5589, i64 0}
!5589 = !{!"00000209060143E0.w512.b0", !5590, i64 0}
!5590 = !{!"00000209060143E0.w1024.b0", !5591, i64 0}
!5591 = !{!"00000209060143E0", !21, i64 0}
!5592 = !{!5593, !5593, i64 0}
!5593 = !{!"00000209060143E0.w4.b4", !5583, i64 0}
!5594 = !{!5595, !5595, i64 0}
!5595 = !{!"00000209060143E0.w4.b8", !5596, i64 0}
!5596 = !{!"00000209060143E0.w8.b8", !5584, i64 0}
!5597 = !{!5598, !5598, i64 0}
!5598 = !{!"00000209060143E0.w4.b12", !5596, i64 0}
!5599 = !{!5600, !5600, i64 0}
!5600 = !{!"00000209060143E0.w4.b16", !5601, i64 0}
!5601 = !{!"00000209060143E0.w8.b16", !5602, i64 0}
!5602 = !{!"00000209060143E0.w16.b16", !5585, i64 0}
!5603 = !{!5604, !5604, i64 0}
!5604 = !{!"000002090601C8A0.w8.b0", !5605, i64 0}
!5605 = !{!"000002090601C8A0.w16.b0", !5606, i64 0}
!5606 = !{!"000002090601C8A0.w32.b0", !5607, i64 0}
!5607 = !{!"000002090601C8A0.w64.b0", !5608, i64 0}
!5608 = !{!"000002090601C8A0.w128.b0", !5609, i64 0}
!5609 = !{!"000002090601C8A0.w256.b0", !5610, i64 0}
!5610 = !{!"000002090601C8A0.w512.b0", !5611, i64 0}
!5611 = !{!"000002090601C8A0.w1024.b0", !5612, i64 0}
!5612 = !{!"000002090601C8A0", !21, i64 0}
!5613 = !{!5614, !5614, i64 0}
!5614 = !{!"000002090601C8A0.w8.b8", !5605, i64 0}
!5615 = !{!5616, !5616, i64 0}
!5616 = !{!"000002090601C8A0.w8.b16", !5617, i64 0}
!5617 = !{!"000002090601C8A0.w16.b16", !5606, i64 0}
!5618 = !{!5619, !5619, i64 0}
!5619 = !{!"000002090601C8A0.w8.b24", !5617, i64 0}
!5620 = !{!5621, !5621, i64 0}
!5621 = !{!"000002090601C8A0.w8.b32", !5622, i64 0}
!5622 = !{!"000002090601C8A0.w16.b32", !5623, i64 0}
!5623 = !{!"000002090601C8A0.w32.b32", !5607, i64 0}
!5624 = !{!5625, !5625, i64 0}
!5625 = !{!"000002090601CC60.w8.b8", !5626, i64 0}
!5626 = !{!"000002090601CC60.w16.b0", !5627, i64 0}
!5627 = !{!"000002090601CC60.w32.b0", !5628, i64 0}
!5628 = !{!"000002090601CC60.w64.b0", !5629, i64 0}
!5629 = !{!"000002090601CC60.w128.b0", !5630, i64 0}
!5630 = !{!"000002090601CC60.w256.b0", !5631, i64 0}
!5631 = !{!"000002090601CC60.w512.b0", !5632, i64 0}
!5632 = !{!"000002090601CC60.w1024.b0", !5633, i64 0}
!5633 = !{!"000002090601CC60", !21, i64 0}
!5634 = !{!5635, !5635, i64 0}
!5635 = !{!"000002090601CC60.w8.b16", !5636, i64 0}
!5636 = !{!"000002090601CC60.w16.b16", !5627, i64 0}
!5637 = !{!5638, !5638, i64 0}
!5638 = !{!"000002090601CC60.w8.b24", !5636, i64 0}
!5639 = !{!5640, !5640, i64 0}
!5640 = !{!"000002090601CC60.w8.b32", !5641, i64 0}
!5641 = !{!"000002090601CC60.w16.b32", !5642, i64 0}
!5642 = !{!"000002090601CC60.w32.b32", !5628, i64 0}
!5643 = !{!5644, !5644, i64 0}
!5644 = !{!"000002090601E0E0.w8.b0", !5645, i64 0}
!5645 = !{!"000002090601E0E0.w16.b0", !5646, i64 0}
!5646 = !{!"000002090601E0E0.w32.b0", !5647, i64 0}
!5647 = !{!"000002090601E0E0.w64.b0", !5648, i64 0}
!5648 = !{!"000002090601E0E0.w128.b0", !5649, i64 0}
!5649 = !{!"000002090601E0E0.w256.b0", !5650, i64 0}
!5650 = !{!"000002090601E0E0.w512.b0", !5651, i64 0}
!5651 = !{!"000002090601E0E0.w1024.b0", !5652, i64 0}
!5652 = !{!"000002090601E0E0", !21, i64 0}
!5653 = !{!5654, !5654, i64 0}
!5654 = !{!"000002090601E0E0.w8.b8", !5645, i64 0}
!5655 = !{!5656, !5656, i64 0}
!5656 = !{!"000002090601E0E0.w8.b16", !5657, i64 0}
!5657 = !{!"000002090601E0E0.w16.b16", !5646, i64 0}
!5658 = !{!5659, !5659, i64 0}
!5659 = !{!"000002090601E0E0.w8.b24", !5657, i64 0}
!5660 = !{!5661, !5661, i64 0}
!5661 = !{!"000002090601E0E0.w8.b32", !5662, i64 0}
!5662 = !{!"000002090601E0E0.w16.b32", !5663, i64 0}
!5663 = !{!"000002090601E0E0.w32.b32", !5647, i64 0}
!5664 = !{!5665, !5665, i64 0}
!5665 = !{!"000002090601E0E0.w8.b40", !5662, i64 0}
!5666 = !{!5667, !5667, i64 0}
!5667 = !{!"000002090601EF20.w8.b0", !5668, i64 0}
!5668 = !{!"000002090601EF20.w16.b0", !5669, i64 0}
!5669 = !{!"000002090601EF20.w32.b0", !5670, i64 0}
!5670 = !{!"000002090601EF20.w64.b0", !5671, i64 0}
!5671 = !{!"000002090601EF20.w128.b0", !5672, i64 0}
!5672 = !{!"000002090601EF20.w256.b0", !5673, i64 0}
!5673 = !{!"000002090601EF20.w512.b0", !5674, i64 0}
!5674 = !{!"000002090601EF20.w1024.b0", !5675, i64 0}
!5675 = !{!"000002090601EF20", !21, i64 0}
!5676 = !{!5677, !5677, i64 0}
!5677 = !{!"000002090601EF20.w8.b8", !5668, i64 0}
!5678 = !{!5679, !5679, i64 0}
!5679 = !{!"000002090601EF20.w8.b32", !5680, i64 0}
!5680 = !{!"000002090601EF20.w16.b32", !5681, i64 0}
!5681 = !{!"000002090601EF20.w32.b32", !5670, i64 0}
!5682 = !{!5683, !5683, i64 0}
!5683 = !{!"000002090601EF20.w8.b40", !5680, i64 0}
!5684 = !{!5685, !5685, i64 0}
!5685 = !{!"000002090601F820.w8.b0", !5686, i64 0}
!5686 = !{!"000002090601F820.w16.b0", !5687, i64 0}
!5687 = !{!"000002090601F820.w32.b0", !5688, i64 0}
!5688 = !{!"000002090601F820.w64.b0", !5689, i64 0}
!5689 = !{!"000002090601F820.w128.b0", !5690, i64 0}
!5690 = !{!"000002090601F820.w256.b0", !5691, i64 0}
!5691 = !{!"000002090601F820.w512.b0", !5692, i64 0}
!5692 = !{!"000002090601F820.w1024.b0", !5693, i64 0}
!5693 = !{!"000002090601F820", !21, i64 0}
!5694 = !{!5695, !5695, i64 0}
!5695 = !{!"000002090601F820.w8.b8", !5686, i64 0}
!5696 = !{!5697, !5697, i64 0}
!5697 = !{!"000002090601F820.w8.b16", !5698, i64 0}
!5698 = !{!"000002090601F820.w16.b16", !5687, i64 0}
!5699 = !{!5700, !5700, i64 0}
!5700 = !{!"000002090601F820.w8.b24", !5698, i64 0}
!5701 = !{!5702, !5702, i64 0}
!5702 = !{!"000002090601F820.w8.b32", !5703, i64 0}
!5703 = !{!"000002090601F820.w16.b32", !5704, i64 0}
!5704 = !{!"000002090601F820.w32.b32", !5688, i64 0}
!5705 = !{!5706, !5706, i64 0}
!5706 = !{!"00000209060205E0.w8.b8", !5707, i64 0}
!5707 = !{!"00000209060205E0.w16.b0", !5708, i64 0}
!5708 = !{!"00000209060205E0.w32.b0", !5709, i64 0}
!5709 = !{!"00000209060205E0.w64.b0", !5710, i64 0}
!5710 = !{!"00000209060205E0.w128.b0", !5711, i64 0}
!5711 = !{!"00000209060205E0.w256.b0", !5712, i64 0}
!5712 = !{!"00000209060205E0.w512.b0", !5713, i64 0}
!5713 = !{!"00000209060205E0.w1024.b0", !5714, i64 0}
!5714 = !{!"00000209060205E0", !21, i64 0}
!5715 = !{!5716, !5716, i64 0}
!5716 = !{!"00000209060205E0.w8.b16", !5717, i64 0}
!5717 = !{!"00000209060205E0.w16.b16", !5708, i64 0}
!5718 = !{!5719, !5719, i64 0}
!5719 = !{!"00000209060205E0.w8.b24", !5717, i64 0}
!5720 = !{!5721, !5721, i64 0}
!5721 = !{!"00000209060205E0.w8.b32", !5722, i64 0}
!5722 = !{!"00000209060205E0.w16.b32", !5723, i64 0}
!5723 = !{!"00000209060205E0.w32.b32", !5709, i64 0}
!5724 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5725)
!5725 = !{!5726, !5727, !5728, !5729, !5730, !5731}
!5726 = !DILocalVariable(name: "arg1", arg: 1, scope: !5724, file: !1, type: !8)
!5727 = !DILocalVariable(name: "arg2", arg: 2, scope: !5724, file: !1, type: !9)
!5728 = !DILocalVariable(name: "arg3", arg: 3, scope: !5724, file: !1, type: !7)
!5729 = !DILocalVariable(name: "arg4", arg: 4, scope: !5724, file: !1, type: !8)
!5730 = !DILocalVariable(name: "arg5", arg: 5, scope: !5724, file: !1, type: !9)
!5731 = !DILocalVariable(name: "arg6", arg: 6, scope: !5724, file: !1, type: !8)
!5732 = !DILocation(line: 0, scope: !5724)
!5733 = !{!5734, !5734, i64 0}
!5734 = !{!"0000020906047820.w4.b0", !5735, i64 0}
!5735 = !{!"0000020906047820.w8.b0", !5736, i64 0}
!5736 = !{!"0000020906047820.w16.b0", !5737, i64 0}
!5737 = !{!"0000020906047820.w32.b0", !5738, i64 0}
!5738 = !{!"0000020906047820.w64.b0", !5739, i64 0}
!5739 = !{!"0000020906047820.w128.b0", !5740, i64 0}
!5740 = !{!"0000020906047820.w256.b0", !5741, i64 0}
!5741 = !{!"0000020906047820.w512.b0", !5742, i64 0}
!5742 = !{!"0000020906047820.w1024.b0", !5743, i64 0}
!5743 = !{!"0000020906047820", !21, i64 0}
!5744 = !{!5745, !5745, i64 0}
!5745 = !{!"0000020906047820.w4.b4", !5735, i64 0}
!5746 = !{!5747, !5747, i64 0}
!5747 = !{!"0000020906047820.w4.b8", !5748, i64 0}
!5748 = !{!"0000020906047820.w8.b8", !5736, i64 0}
!5749 = !{!5750, !5750, i64 0}
!5750 = !{!"0000020906047820.w4.b12", !5748, i64 0}
!5751 = !{!5752, !5752, i64 0}
!5752 = !{!"0000020906047820.w4.b16", !5753, i64 0}
!5753 = !{!"0000020906047820.w8.b16", !5754, i64 0}
!5754 = !{!"0000020906047820.w16.b16", !5737, i64 0}
!5755 = !{!5756, !5756, i64 0}
!5756 = !{!"000002090604DFE0.w8.b0", !5757, i64 0}
!5757 = !{!"000002090604DFE0.w16.b0", !5758, i64 0}
!5758 = !{!"000002090604DFE0.w32.b0", !5759, i64 0}
!5759 = !{!"000002090604DFE0.w64.b0", !5760, i64 0}
!5760 = !{!"000002090604DFE0.w128.b0", !5761, i64 0}
!5761 = !{!"000002090604DFE0.w256.b0", !5762, i64 0}
!5762 = !{!"000002090604DFE0.w512.b0", !5763, i64 0}
!5763 = !{!"000002090604DFE0.w1024.b0", !5764, i64 0}
!5764 = !{!"000002090604DFE0", !21, i64 0}
!5765 = !{!5766, !5766, i64 0}
!5766 = !{!"000002090604DFE0.w8.b8", !5757, i64 0}
!5767 = !{!5768, !5768, i64 0}
!5768 = !{!"000002090604DFE0.w8.b16", !5769, i64 0}
!5769 = !{!"000002090604DFE0.w16.b16", !5758, i64 0}
!5770 = !{!5771, !5771, i64 0}
!5771 = !{!"000002090604DFE0.w8.b24", !5769, i64 0}
!5772 = !{!5773, !5773, i64 0}
!5773 = !{!"000002090604DFE0.w8.b32", !5774, i64 0}
!5774 = !{!"000002090604DFE0.w16.b32", !5775, i64 0}
!5775 = !{!"000002090604DFE0.w32.b32", !5759, i64 0}
!5776 = !{!5777, !5777, i64 0}
!5777 = !{!"0000020906050AA0.w8.b8", !5778, i64 0}
!5778 = !{!"0000020906050AA0.w16.b0", !5779, i64 0}
!5779 = !{!"0000020906050AA0.w32.b0", !5780, i64 0}
!5780 = !{!"0000020906050AA0.w64.b0", !5781, i64 0}
!5781 = !{!"0000020906050AA0.w128.b0", !5782, i64 0}
!5782 = !{!"0000020906050AA0.w256.b0", !5783, i64 0}
!5783 = !{!"0000020906050AA0.w512.b0", !5784, i64 0}
!5784 = !{!"0000020906050AA0.w1024.b0", !5785, i64 0}
!5785 = !{!"0000020906050AA0", !21, i64 0}
!5786 = !{!5787, !5787, i64 0}
!5787 = !{!"0000020906050AA0.w8.b16", !5788, i64 0}
!5788 = !{!"0000020906050AA0.w16.b16", !5779, i64 0}
!5789 = !{!5790, !5790, i64 0}
!5790 = !{!"0000020906050AA0.w8.b24", !5788, i64 0}
!5791 = !{!5792, !5792, i64 0}
!5792 = !{!"0000020906050AA0.w8.b32", !5793, i64 0}
!5793 = !{!"0000020906050AA0.w16.b32", !5794, i64 0}
!5794 = !{!"0000020906050AA0.w32.b32", !5780, i64 0}
!5795 = !{!5796, !5796, i64 0}
!5796 = !{!"00000209060520A0.w8.b0", !5797, i64 0}
!5797 = !{!"00000209060520A0.w16.b0", !5798, i64 0}
!5798 = !{!"00000209060520A0.w32.b0", !5799, i64 0}
!5799 = !{!"00000209060520A0.w64.b0", !5800, i64 0}
!5800 = !{!"00000209060520A0.w128.b0", !5801, i64 0}
!5801 = !{!"00000209060520A0.w256.b0", !5802, i64 0}
!5802 = !{!"00000209060520A0.w512.b0", !5803, i64 0}
!5803 = !{!"00000209060520A0.w1024.b0", !5804, i64 0}
!5804 = !{!"00000209060520A0", !21, i64 0}
!5805 = !{!5806, !5806, i64 0}
!5806 = !{!"00000209060520A0.w8.b8", !5797, i64 0}
!5807 = !{!5808, !5808, i64 0}
!5808 = !{!"00000209060520A0.w8.b16", !5809, i64 0}
!5809 = !{!"00000209060520A0.w16.b16", !5798, i64 0}
!5810 = !{!5811, !5811, i64 0}
!5811 = !{!"00000209060520A0.w8.b24", !5809, i64 0}
!5812 = !{!5813, !5813, i64 0}
!5813 = !{!"00000209060520A0.w8.b32", !5814, i64 0}
!5814 = !{!"00000209060520A0.w16.b32", !5815, i64 0}
!5815 = !{!"00000209060520A0.w32.b32", !5799, i64 0}
!5816 = !{!5817, !5817, i64 0}
!5817 = !{!"00000209060520A0.w8.b40", !5814, i64 0}
!5818 = !{!5819, !5819, i64 0}
!5819 = !{!"0000020906051760.w8.b0", !5820, i64 0}
!5820 = !{!"0000020906051760.w16.b0", !5821, i64 0}
!5821 = !{!"0000020906051760.w32.b0", !5822, i64 0}
!5822 = !{!"0000020906051760.w64.b0", !5823, i64 0}
!5823 = !{!"0000020906051760.w128.b0", !5824, i64 0}
!5824 = !{!"0000020906051760.w256.b0", !5825, i64 0}
!5825 = !{!"0000020906051760.w512.b0", !5826, i64 0}
!5826 = !{!"0000020906051760.w1024.b0", !5827, i64 0}
!5827 = !{!"0000020906051760", !21, i64 0}
!5828 = !{!5829, !5829, i64 0}
!5829 = !{!"0000020906051760.w8.b8", !5820, i64 0}
!5830 = !{!5831, !5831, i64 0}
!5831 = !{!"0000020906051760.w8.b16", !5832, i64 0}
!5832 = !{!"0000020906051760.w16.b16", !5821, i64 0}
!5833 = !{!5834, !5834, i64 0}
!5834 = !{!"0000020906051760.w8.b24", !5832, i64 0}
!5835 = !{!5836, !5836, i64 0}
!5836 = !{!"0000020906051760.w8.b32", !5837, i64 0}
!5837 = !{!"0000020906051760.w16.b32", !5838, i64 0}
!5838 = !{!"0000020906051760.w32.b32", !5822, i64 0}
!5839 = !{!5840, !5840, i64 0}
!5840 = !{!"0000020906051760.w8.b40", !5837, i64 0}
!5841 = !{!5842, !5842, i64 0}
!5842 = !{!"0000020906053320.w8.b0", !5843, i64 0}
!5843 = !{!"0000020906053320.w16.b0", !5844, i64 0}
!5844 = !{!"0000020906053320.w32.b0", !5845, i64 0}
!5845 = !{!"0000020906053320.w64.b0", !5846, i64 0}
!5846 = !{!"0000020906053320.w128.b0", !5847, i64 0}
!5847 = !{!"0000020906053320.w256.b0", !5848, i64 0}
!5848 = !{!"0000020906053320.w512.b0", !5849, i64 0}
!5849 = !{!"0000020906053320.w1024.b0", !5850, i64 0}
!5850 = !{!"0000020906053320", !21, i64 0}
!5851 = !{!5852, !5852, i64 0}
!5852 = !{!"0000020906053320.w8.b8", !5843, i64 0}
!5853 = !{!5854, !5854, i64 0}
!5854 = !{!"0000020906053320.w8.b16", !5855, i64 0}
!5855 = !{!"0000020906053320.w16.b16", !5844, i64 0}
!5856 = !{!5857, !5857, i64 0}
!5857 = !{!"0000020906053320.w8.b24", !5855, i64 0}
!5858 = !{!5859, !5859, i64 0}
!5859 = !{!"0000020906053320.w8.b32", !5860, i64 0}
!5860 = !{!"0000020906053320.w16.b32", !5861, i64 0}
!5861 = !{!"0000020906053320.w32.b32", !5845, i64 0}
!5862 = !{!5863, !5863, i64 0}
!5863 = !{!"0000020906053460.w8.b8", !5864, i64 0}
!5864 = !{!"0000020906053460.w16.b0", !5865, i64 0}
!5865 = !{!"0000020906053460.w32.b0", !5866, i64 0}
!5866 = !{!"0000020906053460.w64.b0", !5867, i64 0}
!5867 = !{!"0000020906053460.w128.b0", !5868, i64 0}
!5868 = !{!"0000020906053460.w256.b0", !5869, i64 0}
!5869 = !{!"0000020906053460.w512.b0", !5870, i64 0}
!5870 = !{!"0000020906053460.w1024.b0", !5871, i64 0}
!5871 = !{!"0000020906053460", !21, i64 0}
!5872 = !{!5873, !5873, i64 0}
!5873 = !{!"0000020906053460.w8.b16", !5874, i64 0}
!5874 = !{!"0000020906053460.w16.b16", !5865, i64 0}
!5875 = !{!5876, !5876, i64 0}
!5876 = !{!"0000020906053460.w8.b24", !5874, i64 0}
!5877 = !{!5878, !5878, i64 0}
!5878 = !{!"0000020906053460.w8.b32", !5879, i64 0}
!5879 = !{!"0000020906053460.w16.b32", !5880, i64 0}
!5880 = !{!"0000020906053460.w32.b32", !5866, i64 0}
!5881 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5882)
!5882 = !{!5883, !5884, !5885, !5886, !5887, !5888}
!5883 = !DILocalVariable(name: "arg1", arg: 1, scope: !5881, file: !1, type: !8)
!5884 = !DILocalVariable(name: "arg2", arg: 2, scope: !5881, file: !1, type: !9)
!5885 = !DILocalVariable(name: "arg3", arg: 3, scope: !5881, file: !1, type: !7)
!5886 = !DILocalVariable(name: "arg4", arg: 4, scope: !5881, file: !1, type: !8)
!5887 = !DILocalVariable(name: "arg5", arg: 5, scope: !5881, file: !1, type: !9)
!5888 = !DILocalVariable(name: "arg6", arg: 6, scope: !5881, file: !1, type: !8)
!5889 = !DILocation(line: 0, scope: !5881)
!5890 = !{!5891, !5891, i64 0}
!5891 = !{!"0000020906044C60.w4.b0", !5892, i64 0}
!5892 = !{!"0000020906044C60.w8.b0", !5893, i64 0}
!5893 = !{!"0000020906044C60.w16.b0", !5894, i64 0}
!5894 = !{!"0000020906044C60.w32.b0", !5895, i64 0}
!5895 = !{!"0000020906044C60.w64.b0", !5896, i64 0}
!5896 = !{!"0000020906044C60.w128.b0", !5897, i64 0}
!5897 = !{!"0000020906044C60.w256.b0", !5898, i64 0}
!5898 = !{!"0000020906044C60.w512.b0", !5899, i64 0}
!5899 = !{!"0000020906044C60.w1024.b0", !5900, i64 0}
!5900 = !{!"0000020906044C60", !21, i64 0}
!5901 = !{!5902, !5902, i64 0}
!5902 = !{!"0000020906044C60.w4.b4", !5892, i64 0}
!5903 = !{!5904, !5904, i64 0}
!5904 = !{!"0000020906044C60.w4.b8", !5905, i64 0}
!5905 = !{!"0000020906044C60.w8.b8", !5893, i64 0}
!5906 = !{!5907, !5907, i64 0}
!5907 = !{!"0000020906044C60.w4.b12", !5905, i64 0}
!5908 = !{!5909, !5909, i64 0}
!5909 = !{!"0000020906044C60.w4.b16", !5910, i64 0}
!5910 = !{!"0000020906044C60.w8.b16", !5911, i64 0}
!5911 = !{!"0000020906044C60.w16.b16", !5894, i64 0}
!5912 = !{!5913, !5913, i64 0}
!5913 = !{!"0000020906048A20.w8.b0", !5914, i64 0}
!5914 = !{!"0000020906048A20.w16.b0", !5915, i64 0}
!5915 = !{!"0000020906048A20.w32.b0", !5916, i64 0}
!5916 = !{!"0000020906048A20.w64.b0", !5917, i64 0}
!5917 = !{!"0000020906048A20.w128.b0", !5918, i64 0}
!5918 = !{!"0000020906048A20.w256.b0", !5919, i64 0}
!5919 = !{!"0000020906048A20.w512.b0", !5920, i64 0}
!5920 = !{!"0000020906048A20.w1024.b0", !5921, i64 0}
!5921 = !{!"0000020906048A20", !21, i64 0}
!5922 = !{!5923, !5923, i64 0}
!5923 = !{!"0000020906048A20.w8.b8", !5914, i64 0}
!5924 = !{!5925, !5925, i64 0}
!5925 = !{!"0000020906048A20.w8.b16", !5926, i64 0}
!5926 = !{!"0000020906048A20.w16.b16", !5915, i64 0}
!5927 = !{!5928, !5928, i64 0}
!5928 = !{!"0000020906048A20.w8.b24", !5926, i64 0}
!5929 = !{!5930, !5930, i64 0}
!5930 = !{!"0000020906048A20.w8.b32", !5931, i64 0}
!5931 = !{!"0000020906048A20.w16.b32", !5932, i64 0}
!5932 = !{!"0000020906048A20.w32.b32", !5916, i64 0}
!5933 = !{!5934, !5934, i64 0}
!5934 = !{!"000002090604C0E0.w8.b8", !5935, i64 0}
!5935 = !{!"000002090604C0E0.w16.b0", !5936, i64 0}
!5936 = !{!"000002090604C0E0.w32.b0", !5937, i64 0}
!5937 = !{!"000002090604C0E0.w64.b0", !5938, i64 0}
!5938 = !{!"000002090604C0E0.w128.b0", !5939, i64 0}
!5939 = !{!"000002090604C0E0.w256.b0", !5940, i64 0}
!5940 = !{!"000002090604C0E0.w512.b0", !5941, i64 0}
!5941 = !{!"000002090604C0E0.w1024.b0", !5942, i64 0}
!5942 = !{!"000002090604C0E0", !21, i64 0}
!5943 = !{!5944, !5944, i64 0}
!5944 = !{!"000002090604C0E0.w8.b16", !5945, i64 0}
!5945 = !{!"000002090604C0E0.w16.b16", !5936, i64 0}
!5946 = !{!5947, !5947, i64 0}
!5947 = !{!"000002090604C0E0.w8.b24", !5945, i64 0}
!5948 = !{!5949, !5949, i64 0}
!5949 = !{!"000002090604C0E0.w8.b32", !5950, i64 0}
!5950 = !{!"000002090604C0E0.w16.b32", !5951, i64 0}
!5951 = !{!"000002090604C0E0.w32.b32", !5937, i64 0}
!5952 = !{!5953, !5953, i64 0}
!5953 = !{!"000002090604B6E0.w8.b0", !5954, i64 0}
!5954 = !{!"000002090604B6E0.w16.b0", !5955, i64 0}
!5955 = !{!"000002090604B6E0.w32.b0", !5956, i64 0}
!5956 = !{!"000002090604B6E0.w64.b0", !5957, i64 0}
!5957 = !{!"000002090604B6E0.w128.b0", !5958, i64 0}
!5958 = !{!"000002090604B6E0.w256.b0", !5959, i64 0}
!5959 = !{!"000002090604B6E0.w512.b0", !5960, i64 0}
!5960 = !{!"000002090604B6E0.w1024.b0", !5961, i64 0}
!5961 = !{!"000002090604B6E0", !21, i64 0}
!5962 = !{!5963, !5963, i64 0}
!5963 = !{!"000002090604B6E0.w8.b8", !5954, i64 0}
!5964 = !{!5965, !5965, i64 0}
!5965 = !{!"000002090604B6E0.w8.b16", !5966, i64 0}
!5966 = !{!"000002090604B6E0.w16.b16", !5955, i64 0}
!5967 = !{!5968, !5968, i64 0}
!5968 = !{!"000002090604B6E0.w8.b24", !5966, i64 0}
!5969 = !{!5970, !5970, i64 0}
!5970 = !{!"000002090604B6E0.w8.b32", !5971, i64 0}
!5971 = !{!"000002090604B6E0.w16.b32", !5972, i64 0}
!5972 = !{!"000002090604B6E0.w32.b32", !5956, i64 0}
!5973 = !{!5974, !5974, i64 0}
!5974 = !{!"000002090604B6E0.w8.b40", !5971, i64 0}
!5975 = !{!5976, !5976, i64 0}
!5976 = !{!"000002090604C2A0.w8.b0", !5977, i64 0}
!5977 = !{!"000002090604C2A0.w16.b0", !5978, i64 0}
!5978 = !{!"000002090604C2A0.w32.b0", !5979, i64 0}
!5979 = !{!"000002090604C2A0.w64.b0", !5980, i64 0}
!5980 = !{!"000002090604C2A0.w128.b0", !5981, i64 0}
!5981 = !{!"000002090604C2A0.w256.b0", !5982, i64 0}
!5982 = !{!"000002090604C2A0.w512.b0", !5983, i64 0}
!5983 = !{!"000002090604C2A0.w1024.b0", !5984, i64 0}
!5984 = !{!"000002090604C2A0", !21, i64 0}
!5985 = !{!5986, !5986, i64 0}
!5986 = !{!"000002090604C2A0.w8.b8", !5977, i64 0}
!5987 = !{!5988, !5988, i64 0}
!5988 = !{!"000002090604C2A0.w8.b32", !5989, i64 0}
!5989 = !{!"000002090604C2A0.w16.b32", !5990, i64 0}
!5990 = !{!"000002090604C2A0.w32.b32", !5979, i64 0}
!5991 = !{!5992, !5992, i64 0}
!5992 = !{!"000002090604C2A0.w8.b40", !5989, i64 0}
!5993 = !{!5994, !5994, i64 0}
!5994 = !{!"000002090604E020.w8.b0", !5995, i64 0}
!5995 = !{!"000002090604E020.w16.b0", !5996, i64 0}
!5996 = !{!"000002090604E020.w32.b0", !5997, i64 0}
!5997 = !{!"000002090604E020.w64.b0", !5998, i64 0}
!5998 = !{!"000002090604E020.w128.b0", !5999, i64 0}
!5999 = !{!"000002090604E020.w256.b0", !6000, i64 0}
!6000 = !{!"000002090604E020.w512.b0", !6001, i64 0}
!6001 = !{!"000002090604E020.w1024.b0", !6002, i64 0}
!6002 = !{!"000002090604E020", !21, i64 0}
!6003 = !{!6004, !6004, i64 0}
!6004 = !{!"000002090604E020.w8.b8", !5995, i64 0}
!6005 = !{!6006, !6006, i64 0}
!6006 = !{!"000002090604E020.w8.b16", !6007, i64 0}
!6007 = !{!"000002090604E020.w16.b16", !5996, i64 0}
!6008 = !{!6009, !6009, i64 0}
!6009 = !{!"000002090604E020.w8.b24", !6007, i64 0}
!6010 = !{!6011, !6011, i64 0}
!6011 = !{!"000002090604E020.w8.b32", !6012, i64 0}
!6012 = !{!"000002090604E020.w16.b32", !6013, i64 0}
!6013 = !{!"000002090604E020.w32.b32", !5997, i64 0}
!6014 = !{!6015, !6015, i64 0}
!6015 = !{!"000002090604ED60.w8.b8", !6016, i64 0}
!6016 = !{!"000002090604ED60.w16.b0", !6017, i64 0}
!6017 = !{!"000002090604ED60.w32.b0", !6018, i64 0}
!6018 = !{!"000002090604ED60.w64.b0", !6019, i64 0}
!6019 = !{!"000002090604ED60.w128.b0", !6020, i64 0}
!6020 = !{!"000002090604ED60.w256.b0", !6021, i64 0}
!6021 = !{!"000002090604ED60.w512.b0", !6022, i64 0}
!6022 = !{!"000002090604ED60.w1024.b0", !6023, i64 0}
!6023 = !{!"000002090604ED60", !21, i64 0}
!6024 = !{!6025, !6025, i64 0}
!6025 = !{!"000002090604ED60.w8.b16", !6026, i64 0}
!6026 = !{!"000002090604ED60.w16.b16", !6017, i64 0}
!6027 = !{!6028, !6028, i64 0}
!6028 = !{!"000002090604ED60.w8.b24", !6026, i64 0}
!6029 = !{!6030, !6030, i64 0}
!6030 = !{!"000002090604ED60.w8.b32", !6031, i64 0}
!6031 = !{!"000002090604ED60.w16.b32", !6032, i64 0}
!6032 = !{!"000002090604ED60.w32.b32", !6018, i64 0}
!6033 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6034)
!6034 = !{!6035, !6036, !6037, !6038, !6039, !6040}
!6035 = !DILocalVariable(name: "arg1", arg: 1, scope: !6033, file: !1, type: !8)
!6036 = !DILocalVariable(name: "arg2", arg: 2, scope: !6033, file: !1, type: !9)
!6037 = !DILocalVariable(name: "arg3", arg: 3, scope: !6033, file: !1, type: !7)
!6038 = !DILocalVariable(name: "arg4", arg: 4, scope: !6033, file: !1, type: !8)
!6039 = !DILocalVariable(name: "arg5", arg: 5, scope: !6033, file: !1, type: !9)
!6040 = !DILocalVariable(name: "arg6", arg: 6, scope: !6033, file: !1, type: !8)
!6041 = !DILocation(line: 0, scope: !6033)
!6042 = !{!6043, !6043, i64 0}
!6043 = !{!"000002090610FDB0.w4.b0", !6044, i64 0}
!6044 = !{!"000002090610FDB0.w8.b0", !6045, i64 0}
!6045 = !{!"000002090610FDB0.w16.b0", !6046, i64 0}
!6046 = !{!"000002090610FDB0.w32.b0", !6047, i64 0}
!6047 = !{!"000002090610FDB0.w64.b0", !6048, i64 0}
!6048 = !{!"000002090610FDB0.w128.b0", !6049, i64 0}
!6049 = !{!"000002090610FDB0.w256.b0", !6050, i64 0}
!6050 = !{!"000002090610FDB0.w512.b0", !6051, i64 0}
!6051 = !{!"000002090610FDB0.w1024.b0", !6052, i64 0}
!6052 = !{!"000002090610FDB0", !21, i64 0}
!6053 = !{!6054, !6054, i64 0}
!6054 = !{!"000002090610FDB0.w4.b4", !6044, i64 0}
!6055 = !{!6056, !6056, i64 0}
!6056 = !{!"000002090610FDB0.w4.b8", !6057, i64 0}
!6057 = !{!"000002090610FDB0.w8.b8", !6045, i64 0}
!6058 = !{!6059, !6059, i64 0}
!6059 = !{!"000002090610FDB0.w4.b12", !6057, i64 0}
!6060 = !{!6061, !6061, i64 0}
!6061 = !{!"000002090610FDB0.w4.b16", !6062, i64 0}
!6062 = !{!"000002090610FDB0.w8.b16", !6063, i64 0}
!6063 = !{!"000002090610FDB0.w16.b16", !6046, i64 0}
!6064 = !{!6065, !6065, i64 0}
!6065 = !{!"0000020906115DB0.w8.b0", !6066, i64 0}
!6066 = !{!"0000020906115DB0.w16.b0", !6067, i64 0}
!6067 = !{!"0000020906115DB0.w32.b0", !6068, i64 0}
!6068 = !{!"0000020906115DB0.w64.b0", !6069, i64 0}
!6069 = !{!"0000020906115DB0.w128.b0", !6070, i64 0}
!6070 = !{!"0000020906115DB0.w256.b0", !6071, i64 0}
!6071 = !{!"0000020906115DB0.w512.b0", !6072, i64 0}
!6072 = !{!"0000020906115DB0.w1024.b0", !6073, i64 0}
!6073 = !{!"0000020906115DB0", !21, i64 0}
!6074 = !{!6075, !6075, i64 0}
!6075 = !{!"0000020906115DB0.w8.b8", !6066, i64 0}
!6076 = !{!6077, !6077, i64 0}
!6077 = !{!"0000020906115DB0.w8.b16", !6078, i64 0}
!6078 = !{!"0000020906115DB0.w16.b16", !6067, i64 0}
!6079 = !{!6080, !6080, i64 0}
!6080 = !{!"0000020906115DB0.w8.b24", !6078, i64 0}
!6081 = !{!6082, !6082, i64 0}
!6082 = !{!"0000020906115DB0.w8.b32", !6083, i64 0}
!6083 = !{!"0000020906115DB0.w16.b32", !6084, i64 0}
!6084 = !{!"0000020906115DB0.w32.b32", !6068, i64 0}
!6085 = !{!6086, !6086, i64 0}
!6086 = !{!"0000020906119070.w8.b8", !6087, i64 0}
!6087 = !{!"0000020906119070.w16.b0", !6088, i64 0}
!6088 = !{!"0000020906119070.w32.b0", !6089, i64 0}
!6089 = !{!"0000020906119070.w64.b0", !6090, i64 0}
!6090 = !{!"0000020906119070.w128.b0", !6091, i64 0}
!6091 = !{!"0000020906119070.w256.b0", !6092, i64 0}
!6092 = !{!"0000020906119070.w512.b0", !6093, i64 0}
!6093 = !{!"0000020906119070.w1024.b0", !6094, i64 0}
!6094 = !{!"0000020906119070", !21, i64 0}
!6095 = !{!6096, !6096, i64 0}
!6096 = !{!"0000020906119070.w8.b16", !6097, i64 0}
!6097 = !{!"0000020906119070.w16.b16", !6088, i64 0}
!6098 = !{!6099, !6099, i64 0}
!6099 = !{!"0000020906119070.w8.b24", !6097, i64 0}
!6100 = !{!6101, !6101, i64 0}
!6101 = !{!"0000020906119070.w8.b32", !6102, i64 0}
!6102 = !{!"0000020906119070.w16.b32", !6103, i64 0}
!6103 = !{!"0000020906119070.w32.b32", !6089, i64 0}
!6104 = !{!6105, !6105, i64 0}
!6105 = !{!"000002090611A130.w8.b0", !6106, i64 0}
!6106 = !{!"000002090611A130.w16.b0", !6107, i64 0}
!6107 = !{!"000002090611A130.w32.b0", !6108, i64 0}
!6108 = !{!"000002090611A130.w64.b0", !6109, i64 0}
!6109 = !{!"000002090611A130.w128.b0", !6110, i64 0}
!6110 = !{!"000002090611A130.w256.b0", !6111, i64 0}
!6111 = !{!"000002090611A130.w512.b0", !6112, i64 0}
!6112 = !{!"000002090611A130.w1024.b0", !6113, i64 0}
!6113 = !{!"000002090611A130", !21, i64 0}
!6114 = !{!6115, !6115, i64 0}
!6115 = !{!"000002090611A130.w8.b8", !6106, i64 0}
!6116 = !{!6117, !6117, i64 0}
!6117 = !{!"000002090611A130.w8.b16", !6118, i64 0}
!6118 = !{!"000002090611A130.w16.b16", !6107, i64 0}
!6119 = !{!6120, !6120, i64 0}
!6120 = !{!"000002090611A130.w8.b24", !6118, i64 0}
!6121 = !{!6122, !6122, i64 0}
!6122 = !{!"000002090611A130.w8.b32", !6123, i64 0}
!6123 = !{!"000002090611A130.w16.b32", !6124, i64 0}
!6124 = !{!"000002090611A130.w32.b32", !6108, i64 0}
!6125 = !{!6126, !6126, i64 0}
!6126 = !{!"000002090611A130.w8.b40", !6123, i64 0}
!6127 = !{!6128, !6128, i64 0}
!6128 = !{!"0000020906119BF0.w8.b0", !6129, i64 0}
!6129 = !{!"0000020906119BF0.w16.b0", !6130, i64 0}
!6130 = !{!"0000020906119BF0.w32.b0", !6131, i64 0}
!6131 = !{!"0000020906119BF0.w64.b0", !6132, i64 0}
!6132 = !{!"0000020906119BF0.w128.b0", !6133, i64 0}
!6133 = !{!"0000020906119BF0.w256.b0", !6134, i64 0}
!6134 = !{!"0000020906119BF0.w512.b0", !6135, i64 0}
!6135 = !{!"0000020906119BF0.w1024.b0", !6136, i64 0}
!6136 = !{!"0000020906119BF0", !21, i64 0}
!6137 = !{!6138, !6138, i64 0}
!6138 = !{!"0000020906119BF0.w8.b8", !6129, i64 0}
!6139 = !{!6140, !6140, i64 0}
!6140 = !{!"0000020906119BF0.w8.b32", !6141, i64 0}
!6141 = !{!"0000020906119BF0.w16.b32", !6142, i64 0}
!6142 = !{!"0000020906119BF0.w32.b32", !6131, i64 0}
!6143 = !{!6144, !6144, i64 0}
!6144 = !{!"0000020906119BF0.w8.b40", !6141, i64 0}
!6145 = !{!6146, !6146, i64 0}
!6146 = !{!"000002090611BE70.w8.b0", !6147, i64 0}
!6147 = !{!"000002090611BE70.w16.b0", !6148, i64 0}
!6148 = !{!"000002090611BE70.w32.b0", !6149, i64 0}
!6149 = !{!"000002090611BE70.w64.b0", !6150, i64 0}
!6150 = !{!"000002090611BE70.w128.b0", !6151, i64 0}
!6151 = !{!"000002090611BE70.w256.b0", !6152, i64 0}
!6152 = !{!"000002090611BE70.w512.b0", !6153, i64 0}
!6153 = !{!"000002090611BE70.w1024.b0", !6154, i64 0}
!6154 = !{!"000002090611BE70", !21, i64 0}
!6155 = !{!6156, !6156, i64 0}
!6156 = !{!"000002090611BE70.w8.b8", !6147, i64 0}
!6157 = !{!6158, !6158, i64 0}
!6158 = !{!"000002090611BE70.w8.b16", !6159, i64 0}
!6159 = !{!"000002090611BE70.w16.b16", !6148, i64 0}
!6160 = !{!6161, !6161, i64 0}
!6161 = !{!"000002090611BE70.w8.b24", !6159, i64 0}
!6162 = !{!6163, !6163, i64 0}
!6163 = !{!"000002090611BE70.w8.b32", !6164, i64 0}
!6164 = !{!"000002090611BE70.w16.b32", !6165, i64 0}
!6165 = !{!"000002090611BE70.w32.b32", !6149, i64 0}
!6166 = !{!6167, !6167, i64 0}
!6167 = !{!"000002090611B470.w8.b8", !6168, i64 0}
!6168 = !{!"000002090611B470.w16.b0", !6169, i64 0}
!6169 = !{!"000002090611B470.w32.b0", !6170, i64 0}
!6170 = !{!"000002090611B470.w64.b0", !6171, i64 0}
!6171 = !{!"000002090611B470.w128.b0", !6172, i64 0}
!6172 = !{!"000002090611B470.w256.b0", !6173, i64 0}
!6173 = !{!"000002090611B470.w512.b0", !6174, i64 0}
!6174 = !{!"000002090611B470.w1024.b0", !6175, i64 0}
!6175 = !{!"000002090611B470", !21, i64 0}
!6176 = !{!6177, !6177, i64 0}
!6177 = !{!"000002090611B470.w8.b16", !6178, i64 0}
!6178 = !{!"000002090611B470.w16.b16", !6169, i64 0}
!6179 = !{!6180, !6180, i64 0}
!6180 = !{!"000002090611B470.w8.b24", !6178, i64 0}
!6181 = !{!6182, !6182, i64 0}
!6182 = !{!"000002090611B470.w8.b32", !6183, i64 0}
!6183 = !{!"000002090611B470.w16.b32", !6184, i64 0}
!6184 = !{!"000002090611B470.w32.b32", !6170, i64 0}
!6185 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6186)
!6186 = !{!6187, !6188, !6189, !6190, !6191, !6192}
!6187 = !DILocalVariable(name: "arg1", arg: 1, scope: !6185, file: !1, type: !8)
!6188 = !DILocalVariable(name: "arg2", arg: 2, scope: !6185, file: !1, type: !9)
!6189 = !DILocalVariable(name: "arg3", arg: 3, scope: !6185, file: !1, type: !7)
!6190 = !DILocalVariable(name: "arg4", arg: 4, scope: !6185, file: !1, type: !8)
!6191 = !DILocalVariable(name: "arg5", arg: 5, scope: !6185, file: !1, type: !9)
!6192 = !DILocalVariable(name: "arg6", arg: 6, scope: !6185, file: !1, type: !8)
!6193 = !DILocation(line: 0, scope: !6185)
!6194 = !{!6195, !6195, i64 0}
!6195 = !{!"0000020906025F20.w4.b0", !6196, i64 0}
!6196 = !{!"0000020906025F20.w8.b0", !6197, i64 0}
!6197 = !{!"0000020906025F20.w16.b0", !6198, i64 0}
!6198 = !{!"0000020906025F20.w32.b0", !6199, i64 0}
!6199 = !{!"0000020906025F20.w64.b0", !6200, i64 0}
!6200 = !{!"0000020906025F20.w128.b0", !6201, i64 0}
!6201 = !{!"0000020906025F20.w256.b0", !6202, i64 0}
!6202 = !{!"0000020906025F20.w512.b0", !6203, i64 0}
!6203 = !{!"0000020906025F20.w1024.b0", !6204, i64 0}
!6204 = !{!"0000020906025F20", !21, i64 0}
!6205 = !{!6206, !6206, i64 0}
!6206 = !{!"0000020906025F20.w4.b4", !6196, i64 0}
!6207 = !{!6208, !6208, i64 0}
!6208 = !{!"0000020906025F20.w4.b8", !6209, i64 0}
!6209 = !{!"0000020906025F20.w8.b8", !6197, i64 0}
!6210 = !{!6211, !6211, i64 0}
!6211 = !{!"0000020906025F20.w4.b12", !6209, i64 0}
!6212 = !{!6213, !6213, i64 0}
!6213 = !{!"0000020906025F20.w4.b16", !6214, i64 0}
!6214 = !{!"0000020906025F20.w8.b16", !6215, i64 0}
!6215 = !{!"0000020906025F20.w16.b16", !6198, i64 0}
!6216 = !{!6217, !6217, i64 0}
!6217 = !{!"000002090600D920.w8.b0", !6218, i64 0}
!6218 = !{!"000002090600D920.w16.b0", !6219, i64 0}
!6219 = !{!"000002090600D920.w32.b0", !6220, i64 0}
!6220 = !{!"000002090600D920.w64.b0", !6221, i64 0}
!6221 = !{!"000002090600D920.w128.b0", !6222, i64 0}
!6222 = !{!"000002090600D920.w256.b0", !6223, i64 0}
!6223 = !{!"000002090600D920.w512.b0", !6224, i64 0}
!6224 = !{!"000002090600D920.w1024.b0", !6225, i64 0}
!6225 = !{!"000002090600D920", !21, i64 0}
!6226 = !{!6227, !6227, i64 0}
!6227 = !{!"000002090600D920.w8.b8", !6218, i64 0}
!6228 = !{!6229, !6229, i64 0}
!6229 = !{!"000002090600D920.w8.b16", !6230, i64 0}
!6230 = !{!"000002090600D920.w16.b16", !6219, i64 0}
!6231 = !{!6232, !6232, i64 0}
!6232 = !{!"000002090600D920.w8.b24", !6230, i64 0}
!6233 = !{!6234, !6234, i64 0}
!6234 = !{!"000002090600D920.w8.b32", !6235, i64 0}
!6235 = !{!"000002090600D920.w16.b32", !6236, i64 0}
!6236 = !{!"000002090600D920.w32.b32", !6220, i64 0}
!6237 = !{!6238, !6238, i64 0}
!6238 = !{!"000002090600F460.w8.b8", !6239, i64 0}
!6239 = !{!"000002090600F460.w16.b0", !6240, i64 0}
!6240 = !{!"000002090600F460.w32.b0", !6241, i64 0}
!6241 = !{!"000002090600F460.w64.b0", !6242, i64 0}
!6242 = !{!"000002090600F460.w128.b0", !6243, i64 0}
!6243 = !{!"000002090600F460.w256.b0", !6244, i64 0}
!6244 = !{!"000002090600F460.w512.b0", !6245, i64 0}
!6245 = !{!"000002090600F460.w1024.b0", !6246, i64 0}
!6246 = !{!"000002090600F460", !21, i64 0}
!6247 = !{!6248, !6248, i64 0}
!6248 = !{!"000002090600F460.w8.b16", !6249, i64 0}
!6249 = !{!"000002090600F460.w16.b16", !6240, i64 0}
!6250 = !{!6251, !6251, i64 0}
!6251 = !{!"000002090600F460.w8.b24", !6249, i64 0}
!6252 = !{!6253, !6253, i64 0}
!6253 = !{!"000002090600F460.w8.b32", !6254, i64 0}
!6254 = !{!"000002090600F460.w16.b32", !6255, i64 0}
!6255 = !{!"000002090600F460.w32.b32", !6241, i64 0}
!6256 = !{!6257, !6257, i64 0}
!6257 = !{!"000002090601A060.w8.b0", !6258, i64 0}
!6258 = !{!"000002090601A060.w16.b0", !6259, i64 0}
!6259 = !{!"000002090601A060.w32.b0", !6260, i64 0}
!6260 = !{!"000002090601A060.w64.b0", !6261, i64 0}
!6261 = !{!"000002090601A060.w128.b0", !6262, i64 0}
!6262 = !{!"000002090601A060.w256.b0", !6263, i64 0}
!6263 = !{!"000002090601A060.w512.b0", !6264, i64 0}
!6264 = !{!"000002090601A060.w1024.b0", !6265, i64 0}
!6265 = !{!"000002090601A060", !21, i64 0}
!6266 = !{!6267, !6267, i64 0}
!6267 = !{!"000002090601A060.w8.b8", !6258, i64 0}
!6268 = !{!6269, !6269, i64 0}
!6269 = !{!"000002090601A060.w8.b16", !6270, i64 0}
!6270 = !{!"000002090601A060.w16.b16", !6259, i64 0}
!6271 = !{!6272, !6272, i64 0}
!6272 = !{!"000002090601A060.w8.b24", !6270, i64 0}
!6273 = !{!6274, !6274, i64 0}
!6274 = !{!"000002090601A060.w8.b32", !6275, i64 0}
!6275 = !{!"000002090601A060.w16.b32", !6276, i64 0}
!6276 = !{!"000002090601A060.w32.b32", !6260, i64 0}
!6277 = !{!6278, !6278, i64 0}
!6278 = !{!"000002090601A060.w8.b40", !6275, i64 0}
!6279 = !{!6280, !6280, i64 0}
!6280 = !{!"0000020906009670.w8.b0", !6281, i64 0}
!6281 = !{!"0000020906009670.w16.b0", !6282, i64 0}
!6282 = !{!"0000020906009670.w32.b0", !6283, i64 0}
!6283 = !{!"0000020906009670.w64.b0", !6284, i64 0}
!6284 = !{!"0000020906009670.w128.b0", !6285, i64 0}
!6285 = !{!"0000020906009670.w256.b0", !6286, i64 0}
!6286 = !{!"0000020906009670.w512.b0", !6287, i64 0}
!6287 = !{!"0000020906009670.w1024.b0", !6288, i64 0}
!6288 = !{!"0000020906009670", !21, i64 0}
!6289 = !{!6290, !6290, i64 0}
!6290 = !{!"0000020906009670.w8.b8", !6281, i64 0}
!6291 = !{!6292, !6292, i64 0}
!6292 = !{!"0000020906009670.w8.b16", !6293, i64 0}
!6293 = !{!"0000020906009670.w16.b16", !6282, i64 0}
!6294 = !{!6295, !6295, i64 0}
!6295 = !{!"0000020906009670.w8.b24", !6293, i64 0}
!6296 = !{!6297, !6297, i64 0}
!6297 = !{!"0000020906009670.w8.b32", !6298, i64 0}
!6298 = !{!"0000020906009670.w16.b32", !6299, i64 0}
!6299 = !{!"0000020906009670.w32.b32", !6283, i64 0}
!6300 = !{!6301, !6301, i64 0}
!6301 = !{!"0000020906009670.w8.b40", !6298, i64 0}
!6302 = !{!6303, !6303, i64 0}
!6303 = !{!"0000020906042320.w8.b0", !6304, i64 0}
!6304 = !{!"0000020906042320.w16.b0", !6305, i64 0}
!6305 = !{!"0000020906042320.w32.b0", !6306, i64 0}
!6306 = !{!"0000020906042320.w64.b0", !6307, i64 0}
!6307 = !{!"0000020906042320.w128.b0", !6308, i64 0}
!6308 = !{!"0000020906042320.w256.b0", !6309, i64 0}
!6309 = !{!"0000020906042320.w512.b0", !6310, i64 0}
!6310 = !{!"0000020906042320.w1024.b0", !6311, i64 0}
!6311 = !{!"0000020906042320", !21, i64 0}
!6312 = !{!6313, !6313, i64 0}
!6313 = !{!"0000020906042320.w8.b8", !6304, i64 0}
!6314 = !{!6315, !6315, i64 0}
!6315 = !{!"0000020906042320.w8.b16", !6316, i64 0}
!6316 = !{!"0000020906042320.w16.b16", !6305, i64 0}
!6317 = !{!6318, !6318, i64 0}
!6318 = !{!"0000020906042320.w8.b24", !6316, i64 0}
!6319 = !{!6320, !6320, i64 0}
!6320 = !{!"0000020906042320.w8.b32", !6321, i64 0}
!6321 = !{!"0000020906042320.w16.b32", !6322, i64 0}
!6322 = !{!"0000020906042320.w32.b32", !6306, i64 0}
!6323 = !{!6324, !6324, i64 0}
!6324 = !{!"00000209060430E0.w8.b8", !6325, i64 0}
!6325 = !{!"00000209060430E0.w16.b0", !6326, i64 0}
!6326 = !{!"00000209060430E0.w32.b0", !6327, i64 0}
!6327 = !{!"00000209060430E0.w64.b0", !6328, i64 0}
!6328 = !{!"00000209060430E0.w128.b0", !6329, i64 0}
!6329 = !{!"00000209060430E0.w256.b0", !6330, i64 0}
!6330 = !{!"00000209060430E0.w512.b0", !6331, i64 0}
!6331 = !{!"00000209060430E0.w1024.b0", !6332, i64 0}
!6332 = !{!"00000209060430E0", !21, i64 0}
!6333 = !{!6334, !6334, i64 0}
!6334 = !{!"00000209060430E0.w8.b16", !6335, i64 0}
!6335 = !{!"00000209060430E0.w16.b16", !6326, i64 0}
!6336 = !{!6337, !6337, i64 0}
!6337 = !{!"00000209060430E0.w8.b24", !6335, i64 0}
!6338 = !{!6339, !6339, i64 0}
!6339 = !{!"00000209060430E0.w8.b32", !6340, i64 0}
!6340 = !{!"00000209060430E0.w16.b32", !6341, i64 0}
!6341 = !{!"00000209060430E0.w32.b32", !6327, i64 0}
!6342 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6343)
!6343 = !{!6344, !6345, !6346, !6347, !6348, !6349}
!6344 = !DILocalVariable(name: "arg1", arg: 1, scope: !6342, file: !1, type: !8)
!6345 = !DILocalVariable(name: "arg2", arg: 2, scope: !6342, file: !1, type: !9)
!6346 = !DILocalVariable(name: "arg3", arg: 3, scope: !6342, file: !1, type: !7)
!6347 = !DILocalVariable(name: "arg4", arg: 4, scope: !6342, file: !1, type: !8)
!6348 = !DILocalVariable(name: "arg5", arg: 5, scope: !6342, file: !1, type: !9)
!6349 = !DILocalVariable(name: "arg6", arg: 6, scope: !6342, file: !1, type: !8)
!6350 = !DILocation(line: 0, scope: !6342)
!6351 = !{!6352, !6352, i64 0}
!6352 = !{!"00000209061000F0.w4.b0", !6353, i64 0}
!6353 = !{!"00000209061000F0.w8.b0", !6354, i64 0}
!6354 = !{!"00000209061000F0.w16.b0", !6355, i64 0}
!6355 = !{!"00000209061000F0.w32.b0", !6356, i64 0}
!6356 = !{!"00000209061000F0.w64.b0", !6357, i64 0}
!6357 = !{!"00000209061000F0.w128.b0", !6358, i64 0}
!6358 = !{!"00000209061000F0.w256.b0", !6359, i64 0}
!6359 = !{!"00000209061000F0.w512.b0", !6360, i64 0}
!6360 = !{!"00000209061000F0.w1024.b0", !6361, i64 0}
!6361 = !{!"00000209061000F0", !21, i64 0}
!6362 = !{!6363, !6363, i64 0}
!6363 = !{!"00000209061000F0.w4.b4", !6353, i64 0}
!6364 = !{!6365, !6365, i64 0}
!6365 = !{!"00000209061000F0.w4.b8", !6366, i64 0}
!6366 = !{!"00000209061000F0.w8.b8", !6354, i64 0}
!6367 = !{!6368, !6368, i64 0}
!6368 = !{!"00000209061000F0.w4.b12", !6366, i64 0}
!6369 = !{!6370, !6370, i64 0}
!6370 = !{!"00000209061000F0.w4.b16", !6371, i64 0}
!6371 = !{!"00000209061000F0.w8.b16", !6372, i64 0}
!6372 = !{!"00000209061000F0.w16.b16", !6355, i64 0}
!6373 = !{!6374, !6374, i64 0}
!6374 = !{!"0000020906100EF0.w8.b0", !6375, i64 0}
!6375 = !{!"0000020906100EF0.w16.b0", !6376, i64 0}
!6376 = !{!"0000020906100EF0.w32.b0", !6377, i64 0}
!6377 = !{!"0000020906100EF0.w64.b0", !6378, i64 0}
!6378 = !{!"0000020906100EF0.w128.b0", !6379, i64 0}
!6379 = !{!"0000020906100EF0.w256.b0", !6380, i64 0}
!6380 = !{!"0000020906100EF0.w512.b0", !6381, i64 0}
!6381 = !{!"0000020906100EF0.w1024.b0", !6382, i64 0}
!6382 = !{!"0000020906100EF0", !21, i64 0}
!6383 = !{!6384, !6384, i64 0}
!6384 = !{!"0000020906100EF0.w8.b8", !6375, i64 0}
!6385 = !{!6386, !6386, i64 0}
!6386 = !{!"0000020906100EF0.w8.b16", !6387, i64 0}
!6387 = !{!"0000020906100EF0.w16.b16", !6376, i64 0}
!6388 = !{!6389, !6389, i64 0}
!6389 = !{!"0000020906100EF0.w8.b24", !6387, i64 0}
!6390 = !{!6391, !6391, i64 0}
!6391 = !{!"0000020906100EF0.w8.b32", !6392, i64 0}
!6392 = !{!"0000020906100EF0.w16.b32", !6393, i64 0}
!6393 = !{!"0000020906100EF0.w32.b32", !6377, i64 0}
!6394 = !{!6395, !6395, i64 0}
!6395 = !{!"0000020906101A30.w8.b8", !6396, i64 0}
!6396 = !{!"0000020906101A30.w16.b0", !6397, i64 0}
!6397 = !{!"0000020906101A30.w32.b0", !6398, i64 0}
!6398 = !{!"0000020906101A30.w64.b0", !6399, i64 0}
!6399 = !{!"0000020906101A30.w128.b0", !6400, i64 0}
!6400 = !{!"0000020906101A30.w256.b0", !6401, i64 0}
!6401 = !{!"0000020906101A30.w512.b0", !6402, i64 0}
!6402 = !{!"0000020906101A30.w1024.b0", !6403, i64 0}
!6403 = !{!"0000020906101A30", !21, i64 0}
!6404 = !{!6405, !6405, i64 0}
!6405 = !{!"0000020906101A30.w8.b16", !6406, i64 0}
!6406 = !{!"0000020906101A30.w16.b16", !6397, i64 0}
!6407 = !{!6408, !6408, i64 0}
!6408 = !{!"0000020906101A30.w8.b24", !6406, i64 0}
!6409 = !{!6410, !6410, i64 0}
!6410 = !{!"0000020906101A30.w8.b32", !6411, i64 0}
!6411 = !{!"0000020906101A30.w16.b32", !6412, i64 0}
!6412 = !{!"0000020906101A30.w32.b32", !6398, i64 0}
!6413 = !{!6414, !6414, i64 0}
!6414 = !{!"00000209061011B0.w8.b0", !6415, i64 0}
!6415 = !{!"00000209061011B0.w16.b0", !6416, i64 0}
!6416 = !{!"00000209061011B0.w32.b0", !6417, i64 0}
!6417 = !{!"00000209061011B0.w64.b0", !6418, i64 0}
!6418 = !{!"00000209061011B0.w128.b0", !6419, i64 0}
!6419 = !{!"00000209061011B0.w256.b0", !6420, i64 0}
!6420 = !{!"00000209061011B0.w512.b0", !6421, i64 0}
!6421 = !{!"00000209061011B0.w1024.b0", !6422, i64 0}
!6422 = !{!"00000209061011B0", !21, i64 0}
!6423 = !{!6424, !6424, i64 0}
!6424 = !{!"00000209061011B0.w8.b8", !6415, i64 0}
!6425 = !{!6426, !6426, i64 0}
!6426 = !{!"00000209061011B0.w8.b16", !6427, i64 0}
!6427 = !{!"00000209061011B0.w16.b16", !6416, i64 0}
!6428 = !{!6429, !6429, i64 0}
!6429 = !{!"00000209061011B0.w8.b24", !6427, i64 0}
!6430 = !{!6431, !6431, i64 0}
!6431 = !{!"00000209061011B0.w8.b32", !6432, i64 0}
!6432 = !{!"00000209061011B0.w16.b32", !6433, i64 0}
!6433 = !{!"00000209061011B0.w32.b32", !6417, i64 0}
!6434 = !{!6435, !6435, i64 0}
!6435 = !{!"00000209061011B0.w8.b40", !6432, i64 0}
!6436 = !{!6437, !6437, i64 0}
!6437 = !{!"0000020906102E30.w8.b0", !6438, i64 0}
!6438 = !{!"0000020906102E30.w16.b0", !6439, i64 0}
!6439 = !{!"0000020906102E30.w32.b0", !6440, i64 0}
!6440 = !{!"0000020906102E30.w64.b0", !6441, i64 0}
!6441 = !{!"0000020906102E30.w128.b0", !6442, i64 0}
!6442 = !{!"0000020906102E30.w256.b0", !6443, i64 0}
!6443 = !{!"0000020906102E30.w512.b0", !6444, i64 0}
!6444 = !{!"0000020906102E30.w1024.b0", !6445, i64 0}
!6445 = !{!"0000020906102E30", !21, i64 0}
!6446 = !{!6447, !6447, i64 0}
!6447 = !{!"0000020906102E30.w8.b8", !6438, i64 0}
!6448 = !{!6449, !6449, i64 0}
!6449 = !{!"0000020906102E30.w8.b32", !6450, i64 0}
!6450 = !{!"0000020906102E30.w16.b32", !6451, i64 0}
!6451 = !{!"0000020906102E30.w32.b32", !6440, i64 0}
!6452 = !{!6453, !6453, i64 0}
!6453 = !{!"0000020906102E30.w8.b40", !6450, i64 0}
!6454 = !{!6455, !6455, i64 0}
!6455 = !{!"0000020906103930.w8.b0", !6456, i64 0}
!6456 = !{!"0000020906103930.w16.b0", !6457, i64 0}
!6457 = !{!"0000020906103930.w32.b0", !6458, i64 0}
!6458 = !{!"0000020906103930.w64.b0", !6459, i64 0}
!6459 = !{!"0000020906103930.w128.b0", !6460, i64 0}
!6460 = !{!"0000020906103930.w256.b0", !6461, i64 0}
!6461 = !{!"0000020906103930.w512.b0", !6462, i64 0}
!6462 = !{!"0000020906103930.w1024.b0", !6463, i64 0}
!6463 = !{!"0000020906103930", !21, i64 0}
!6464 = !{!6465, !6465, i64 0}
!6465 = !{!"0000020906103930.w8.b8", !6456, i64 0}
!6466 = !{!6467, !6467, i64 0}
!6467 = !{!"0000020906103930.w8.b16", !6468, i64 0}
!6468 = !{!"0000020906103930.w16.b16", !6457, i64 0}
!6469 = !{!6470, !6470, i64 0}
!6470 = !{!"0000020906103930.w8.b24", !6468, i64 0}
!6471 = !{!6472, !6472, i64 0}
!6472 = !{!"0000020906103930.w8.b32", !6473, i64 0}
!6473 = !{!"0000020906103930.w16.b32", !6474, i64 0}
!6474 = !{!"0000020906103930.w32.b32", !6458, i64 0}
!6475 = !{!6476, !6476, i64 0}
!6476 = !{!"0000020906104370.w8.b8", !6477, i64 0}
!6477 = !{!"0000020906104370.w16.b0", !6478, i64 0}
!6478 = !{!"0000020906104370.w32.b0", !6479, i64 0}
!6479 = !{!"0000020906104370.w64.b0", !6480, i64 0}
!6480 = !{!"0000020906104370.w128.b0", !6481, i64 0}
!6481 = !{!"0000020906104370.w256.b0", !6482, i64 0}
!6482 = !{!"0000020906104370.w512.b0", !6483, i64 0}
!6483 = !{!"0000020906104370.w1024.b0", !6484, i64 0}
!6484 = !{!"0000020906104370", !21, i64 0}
!6485 = !{!6486, !6486, i64 0}
!6486 = !{!"0000020906104370.w8.b16", !6487, i64 0}
!6487 = !{!"0000020906104370.w16.b16", !6478, i64 0}
!6488 = !{!6489, !6489, i64 0}
!6489 = !{!"0000020906104370.w8.b24", !6487, i64 0}
!6490 = !{!6491, !6491, i64 0}
!6491 = !{!"0000020906104370.w8.b32", !6492, i64 0}
!6492 = !{!"0000020906104370.w16.b32", !6493, i64 0}
!6493 = !{!"0000020906104370.w32.b32", !6479, i64 0}
!6494 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6495)
!6495 = !{!6496, !6497, !6498, !6499, !6500, !6501}
!6496 = !DILocalVariable(name: "arg1", arg: 1, scope: !6494, file: !1, type: !8)
!6497 = !DILocalVariable(name: "arg2", arg: 2, scope: !6494, file: !1, type: !9)
!6498 = !DILocalVariable(name: "arg3", arg: 3, scope: !6494, file: !1, type: !7)
!6499 = !DILocalVariable(name: "arg4", arg: 4, scope: !6494, file: !1, type: !8)
!6500 = !DILocalVariable(name: "arg5", arg: 5, scope: !6494, file: !1, type: !9)
!6501 = !DILocalVariable(name: "arg6", arg: 6, scope: !6494, file: !1, type: !8)
!6502 = !DILocation(line: 0, scope: !6494)
!6503 = !{!6504, !6504, i64 0}
!6504 = !{!"000002090604CEA0.w4.b0", !6505, i64 0}
!6505 = !{!"000002090604CEA0.w8.b0", !6506, i64 0}
!6506 = !{!"000002090604CEA0.w16.b0", !6507, i64 0}
!6507 = !{!"000002090604CEA0.w32.b0", !6508, i64 0}
!6508 = !{!"000002090604CEA0.w64.b0", !6509, i64 0}
!6509 = !{!"000002090604CEA0.w128.b0", !6510, i64 0}
!6510 = !{!"000002090604CEA0.w256.b0", !6511, i64 0}
!6511 = !{!"000002090604CEA0.w512.b0", !6512, i64 0}
!6512 = !{!"000002090604CEA0.w1024.b0", !6513, i64 0}
!6513 = !{!"000002090604CEA0", !21, i64 0}
!6514 = !{!6515, !6515, i64 0}
!6515 = !{!"000002090604CEA0.w4.b4", !6505, i64 0}
!6516 = !{!6517, !6517, i64 0}
!6517 = !{!"000002090604CEA0.w4.b8", !6518, i64 0}
!6518 = !{!"000002090604CEA0.w8.b8", !6506, i64 0}
!6519 = !{!6520, !6520, i64 0}
!6520 = !{!"000002090604CEA0.w4.b12", !6518, i64 0}
!6521 = !{!6522, !6522, i64 0}
!6522 = !{!"000002090604CEA0.w4.b16", !6523, i64 0}
!6523 = !{!"000002090604CEA0.w8.b16", !6524, i64 0}
!6524 = !{!"000002090604CEA0.w16.b16", !6507, i64 0}
!6525 = !{!6526, !6526, i64 0}
!6526 = !{!"0000020906054120.w8.b0", !6527, i64 0}
!6527 = !{!"0000020906054120.w16.b0", !6528, i64 0}
!6528 = !{!"0000020906054120.w32.b0", !6529, i64 0}
!6529 = !{!"0000020906054120.w64.b0", !6530, i64 0}
!6530 = !{!"0000020906054120.w128.b0", !6531, i64 0}
!6531 = !{!"0000020906054120.w256.b0", !6532, i64 0}
!6532 = !{!"0000020906054120.w512.b0", !6533, i64 0}
!6533 = !{!"0000020906054120.w1024.b0", !6534, i64 0}
!6534 = !{!"0000020906054120", !21, i64 0}
!6535 = !{!6536, !6536, i64 0}
!6536 = !{!"0000020906054120.w8.b8", !6527, i64 0}
!6537 = !{!6538, !6538, i64 0}
!6538 = !{!"0000020906054120.w8.b16", !6539, i64 0}
!6539 = !{!"0000020906054120.w16.b16", !6528, i64 0}
!6540 = !{!6541, !6541, i64 0}
!6541 = !{!"0000020906054120.w8.b24", !6539, i64 0}
!6542 = !{!6543, !6543, i64 0}
!6543 = !{!"0000020906054120.w8.b32", !6544, i64 0}
!6544 = !{!"0000020906054120.w16.b32", !6545, i64 0}
!6545 = !{!"0000020906054120.w32.b32", !6529, i64 0}
!6546 = !{!6547, !6547, i64 0}
!6547 = !{!"0000020906055520.w8.b8", !6548, i64 0}
!6548 = !{!"0000020906055520.w16.b0", !6549, i64 0}
!6549 = !{!"0000020906055520.w32.b0", !6550, i64 0}
!6550 = !{!"0000020906055520.w64.b0", !6551, i64 0}
!6551 = !{!"0000020906055520.w128.b0", !6552, i64 0}
!6552 = !{!"0000020906055520.w256.b0", !6553, i64 0}
!6553 = !{!"0000020906055520.w512.b0", !6554, i64 0}
!6554 = !{!"0000020906055520.w1024.b0", !6555, i64 0}
!6555 = !{!"0000020906055520", !21, i64 0}
!6556 = !{!6557, !6557, i64 0}
!6557 = !{!"0000020906055520.w8.b16", !6558, i64 0}
!6558 = !{!"0000020906055520.w16.b16", !6549, i64 0}
!6559 = !{!6560, !6560, i64 0}
!6560 = !{!"0000020906055520.w8.b24", !6558, i64 0}
!6561 = !{!6562, !6562, i64 0}
!6562 = !{!"0000020906055520.w8.b32", !6563, i64 0}
!6563 = !{!"0000020906055520.w16.b32", !6564, i64 0}
!6564 = !{!"0000020906055520.w32.b32", !6550, i64 0}
!6565 = !{!6566, !6566, i64 0}
!6566 = !{!"00000209060570E0.w8.b0", !6567, i64 0}
!6567 = !{!"00000209060570E0.w16.b0", !6568, i64 0}
!6568 = !{!"00000209060570E0.w32.b0", !6569, i64 0}
!6569 = !{!"00000209060570E0.w64.b0", !6570, i64 0}
!6570 = !{!"00000209060570E0.w128.b0", !6571, i64 0}
!6571 = !{!"00000209060570E0.w256.b0", !6572, i64 0}
!6572 = !{!"00000209060570E0.w512.b0", !6573, i64 0}
!6573 = !{!"00000209060570E0.w1024.b0", !6574, i64 0}
!6574 = !{!"00000209060570E0", !21, i64 0}
!6575 = !{!6576, !6576, i64 0}
!6576 = !{!"00000209060570E0.w8.b8", !6567, i64 0}
!6577 = !{!6578, !6578, i64 0}
!6578 = !{!"00000209060570E0.w8.b16", !6579, i64 0}
!6579 = !{!"00000209060570E0.w16.b16", !6568, i64 0}
!6580 = !{!6581, !6581, i64 0}
!6581 = !{!"00000209060570E0.w8.b24", !6579, i64 0}
!6582 = !{!6583, !6583, i64 0}
!6583 = !{!"00000209060570E0.w8.b32", !6584, i64 0}
!6584 = !{!"00000209060570E0.w16.b32", !6585, i64 0}
!6585 = !{!"00000209060570E0.w32.b32", !6569, i64 0}
!6586 = !{!6587, !6587, i64 0}
!6587 = !{!"00000209060570E0.w8.b40", !6584, i64 0}
!6588 = !{!6589, !6589, i64 0}
!6589 = !{!"0000020906056FA0.w8.b0", !6590, i64 0}
!6590 = !{!"0000020906056FA0.w16.b0", !6591, i64 0}
!6591 = !{!"0000020906056FA0.w32.b0", !6592, i64 0}
!6592 = !{!"0000020906056FA0.w64.b0", !6593, i64 0}
!6593 = !{!"0000020906056FA0.w128.b0", !6594, i64 0}
!6594 = !{!"0000020906056FA0.w256.b0", !6595, i64 0}
!6595 = !{!"0000020906056FA0.w512.b0", !6596, i64 0}
!6596 = !{!"0000020906056FA0.w1024.b0", !6597, i64 0}
!6597 = !{!"0000020906056FA0", !21, i64 0}
!6598 = !{!6599, !6599, i64 0}
!6599 = !{!"0000020906056FA0.w8.b8", !6590, i64 0}
!6600 = !{!6601, !6601, i64 0}
!6601 = !{!"0000020906056FA0.w8.b32", !6602, i64 0}
!6602 = !{!"0000020906056FA0.w16.b32", !6603, i64 0}
!6603 = !{!"0000020906056FA0.w32.b32", !6592, i64 0}
!6604 = !{!6605, !6605, i64 0}
!6605 = !{!"0000020906056FA0.w8.b40", !6602, i64 0}
!6606 = !{!6607, !6607, i64 0}
!6607 = !{!"00000209060589A0.w8.b0", !6608, i64 0}
!6608 = !{!"00000209060589A0.w16.b0", !6609, i64 0}
!6609 = !{!"00000209060589A0.w32.b0", !6610, i64 0}
!6610 = !{!"00000209060589A0.w64.b0", !6611, i64 0}
!6611 = !{!"00000209060589A0.w128.b0", !6612, i64 0}
!6612 = !{!"00000209060589A0.w256.b0", !6613, i64 0}
!6613 = !{!"00000209060589A0.w512.b0", !6614, i64 0}
!6614 = !{!"00000209060589A0.w1024.b0", !6615, i64 0}
!6615 = !{!"00000209060589A0", !21, i64 0}
!6616 = !{!6617, !6617, i64 0}
!6617 = !{!"00000209060589A0.w8.b8", !6608, i64 0}
!6618 = !{!6619, !6619, i64 0}
!6619 = !{!"00000209060589A0.w8.b16", !6620, i64 0}
!6620 = !{!"00000209060589A0.w16.b16", !6609, i64 0}
!6621 = !{!6622, !6622, i64 0}
!6622 = !{!"00000209060589A0.w8.b24", !6620, i64 0}
!6623 = !{!6624, !6624, i64 0}
!6624 = !{!"00000209060589A0.w8.b32", !6625, i64 0}
!6625 = !{!"00000209060589A0.w16.b32", !6626, i64 0}
!6626 = !{!"00000209060589A0.w32.b32", !6610, i64 0}
!6627 = !{!6628, !6628, i64 0}
!6628 = !{!"0000020906058AE0.w8.b8", !6629, i64 0}
!6629 = !{!"0000020906058AE0.w16.b0", !6630, i64 0}
!6630 = !{!"0000020906058AE0.w32.b0", !6631, i64 0}
!6631 = !{!"0000020906058AE0.w64.b0", !6632, i64 0}
!6632 = !{!"0000020906058AE0.w128.b0", !6633, i64 0}
!6633 = !{!"0000020906058AE0.w256.b0", !6634, i64 0}
!6634 = !{!"0000020906058AE0.w512.b0", !6635, i64 0}
!6635 = !{!"0000020906058AE0.w1024.b0", !6636, i64 0}
!6636 = !{!"0000020906058AE0", !21, i64 0}
!6637 = !{!6638, !6638, i64 0}
!6638 = !{!"0000020906058AE0.w8.b16", !6639, i64 0}
!6639 = !{!"0000020906058AE0.w16.b16", !6630, i64 0}
!6640 = !{!6641, !6641, i64 0}
!6641 = !{!"0000020906058AE0.w8.b24", !6639, i64 0}
!6642 = !{!6643, !6643, i64 0}
!6643 = !{!"0000020906058AE0.w8.b32", !6644, i64 0}
!6644 = !{!"0000020906058AE0.w16.b32", !6645, i64 0}
!6645 = !{!"0000020906058AE0.w32.b32", !6631, i64 0}
!6646 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6647)
!6647 = !{!6648, !6649, !6650, !6651, !6652, !6653}
!6648 = !DILocalVariable(name: "arg1", arg: 1, scope: !6646, file: !1, type: !8)
!6649 = !DILocalVariable(name: "arg2", arg: 2, scope: !6646, file: !1, type: !9)
!6650 = !DILocalVariable(name: "arg3", arg: 3, scope: !6646, file: !1, type: !7)
!6651 = !DILocalVariable(name: "arg4", arg: 4, scope: !6646, file: !1, type: !8)
!6652 = !DILocalVariable(name: "arg5", arg: 5, scope: !6646, file: !1, type: !9)
!6653 = !DILocalVariable(name: "arg6", arg: 6, scope: !6646, file: !1, type: !8)
!6654 = !DILocation(line: 0, scope: !6646)
!6655 = !{!6656, !6656, i64 0}
!6656 = !{!"0000020906099430.w4.b0", !6657, i64 0}
!6657 = !{!"0000020906099430.w8.b0", !6658, i64 0}
!6658 = !{!"0000020906099430.w16.b0", !6659, i64 0}
!6659 = !{!"0000020906099430.w32.b0", !6660, i64 0}
!6660 = !{!"0000020906099430.w64.b0", !6661, i64 0}
!6661 = !{!"0000020906099430.w128.b0", !6662, i64 0}
!6662 = !{!"0000020906099430.w256.b0", !6663, i64 0}
!6663 = !{!"0000020906099430.w512.b0", !6664, i64 0}
!6664 = !{!"0000020906099430.w1024.b0", !6665, i64 0}
!6665 = !{!"0000020906099430", !21, i64 0}
!6666 = !{!6667, !6667, i64 0}
!6667 = !{!"0000020906099430.w4.b4", !6657, i64 0}
!6668 = !{!6669, !6669, i64 0}
!6669 = !{!"0000020906099430.w4.b8", !6670, i64 0}
!6670 = !{!"0000020906099430.w8.b8", !6658, i64 0}
!6671 = !{!6672, !6672, i64 0}
!6672 = !{!"0000020906099430.w4.b12", !6670, i64 0}
!6673 = !{!6674, !6674, i64 0}
!6674 = !{!"0000020906099430.w4.b16", !6675, i64 0}
!6675 = !{!"0000020906099430.w8.b16", !6676, i64 0}
!6676 = !{!"0000020906099430.w16.b16", !6659, i64 0}
!6677 = !{!6678, !6678, i64 0}
!6678 = !{!"000002090609BBF0.w8.b0", !6679, i64 0}
!6679 = !{!"000002090609BBF0.w16.b0", !6680, i64 0}
!6680 = !{!"000002090609BBF0.w32.b0", !6681, i64 0}
!6681 = !{!"000002090609BBF0.w64.b0", !6682, i64 0}
!6682 = !{!"000002090609BBF0.w128.b0", !6683, i64 0}
!6683 = !{!"000002090609BBF0.w256.b0", !6684, i64 0}
!6684 = !{!"000002090609BBF0.w512.b0", !6685, i64 0}
!6685 = !{!"000002090609BBF0.w1024.b0", !6686, i64 0}
!6686 = !{!"000002090609BBF0", !21, i64 0}
!6687 = !{!6688, !6688, i64 0}
!6688 = !{!"000002090609BBF0.w8.b8", !6679, i64 0}
!6689 = !{!6690, !6690, i64 0}
!6690 = !{!"000002090609BBF0.w8.b16", !6691, i64 0}
!6691 = !{!"000002090609BBF0.w16.b16", !6680, i64 0}
!6692 = !{!6693, !6693, i64 0}
!6693 = !{!"000002090609BBF0.w8.b24", !6691, i64 0}
!6694 = !{!6695, !6695, i64 0}
!6695 = !{!"000002090609BBF0.w8.b32", !6696, i64 0}
!6696 = !{!"000002090609BBF0.w16.b32", !6697, i64 0}
!6697 = !{!"000002090609BBF0.w32.b32", !6681, i64 0}
!6698 = !{!6699, !6699, i64 0}
!6699 = !{!"000002090609B670.w8.b8", !6700, i64 0}
!6700 = !{!"000002090609B670.w16.b0", !6701, i64 0}
!6701 = !{!"000002090609B670.w32.b0", !6702, i64 0}
!6702 = !{!"000002090609B670.w64.b0", !6703, i64 0}
!6703 = !{!"000002090609B670.w128.b0", !6704, i64 0}
!6704 = !{!"000002090609B670.w256.b0", !6705, i64 0}
!6705 = !{!"000002090609B670.w512.b0", !6706, i64 0}
!6706 = !{!"000002090609B670.w1024.b0", !6707, i64 0}
!6707 = !{!"000002090609B670", !21, i64 0}
!6708 = !{!6709, !6709, i64 0}
!6709 = !{!"000002090609B670.w8.b16", !6710, i64 0}
!6710 = !{!"000002090609B670.w16.b16", !6701, i64 0}
!6711 = !{!6712, !6712, i64 0}
!6712 = !{!"000002090609B670.w8.b24", !6710, i64 0}
!6713 = !{!6714, !6714, i64 0}
!6714 = !{!"000002090609B670.w8.b32", !6715, i64 0}
!6715 = !{!"000002090609B670.w16.b32", !6716, i64 0}
!6716 = !{!"000002090609B670.w32.b32", !6702, i64 0}
!6717 = !{!6718, !6718, i64 0}
!6718 = !{!"000002090609C8B0.w8.b0", !6719, i64 0}
!6719 = !{!"000002090609C8B0.w16.b0", !6720, i64 0}
!6720 = !{!"000002090609C8B0.w32.b0", !6721, i64 0}
!6721 = !{!"000002090609C8B0.w64.b0", !6722, i64 0}
!6722 = !{!"000002090609C8B0.w128.b0", !6723, i64 0}
!6723 = !{!"000002090609C8B0.w256.b0", !6724, i64 0}
!6724 = !{!"000002090609C8B0.w512.b0", !6725, i64 0}
!6725 = !{!"000002090609C8B0.w1024.b0", !6726, i64 0}
!6726 = !{!"000002090609C8B0", !21, i64 0}
!6727 = !{!6728, !6728, i64 0}
!6728 = !{!"000002090609C8B0.w8.b8", !6719, i64 0}
!6729 = !{!6730, !6730, i64 0}
!6730 = !{!"000002090609C8B0.w8.b16", !6731, i64 0}
!6731 = !{!"000002090609C8B0.w16.b16", !6720, i64 0}
!6732 = !{!6733, !6733, i64 0}
!6733 = !{!"000002090609C8B0.w8.b24", !6731, i64 0}
!6734 = !{!6735, !6735, i64 0}
!6735 = !{!"000002090609C8B0.w8.b32", !6736, i64 0}
!6736 = !{!"000002090609C8B0.w16.b32", !6737, i64 0}
!6737 = !{!"000002090609C8B0.w32.b32", !6721, i64 0}
!6738 = !{!6739, !6739, i64 0}
!6739 = !{!"000002090609C8B0.w8.b40", !6736, i64 0}
!6740 = !{!6741, !6741, i64 0}
!6741 = !{!"000002090609C7F0.w8.b0", !6742, i64 0}
!6742 = !{!"000002090609C7F0.w16.b0", !6743, i64 0}
!6743 = !{!"000002090609C7F0.w32.b0", !6744, i64 0}
!6744 = !{!"000002090609C7F0.w64.b0", !6745, i64 0}
!6745 = !{!"000002090609C7F0.w128.b0", !6746, i64 0}
!6746 = !{!"000002090609C7F0.w256.b0", !6747, i64 0}
!6747 = !{!"000002090609C7F0.w512.b0", !6748, i64 0}
!6748 = !{!"000002090609C7F0.w1024.b0", !6749, i64 0}
!6749 = !{!"000002090609C7F0", !21, i64 0}
!6750 = !{!6751, !6751, i64 0}
!6751 = !{!"000002090609C7F0.w8.b8", !6742, i64 0}
!6752 = !{!6753, !6753, i64 0}
!6753 = !{!"000002090609C7F0.w8.b32", !6754, i64 0}
!6754 = !{!"000002090609C7F0.w16.b32", !6755, i64 0}
!6755 = !{!"000002090609C7F0.w32.b32", !6744, i64 0}
!6756 = !{!6757, !6757, i64 0}
!6757 = !{!"000002090609C7F0.w8.b40", !6754, i64 0}
!6758 = !{!6759, !6759, i64 0}
!6759 = !{!"000002090609EAB0.w8.b0", !6760, i64 0}
!6760 = !{!"000002090609EAB0.w16.b0", !6761, i64 0}
!6761 = !{!"000002090609EAB0.w32.b0", !6762, i64 0}
!6762 = !{!"000002090609EAB0.w64.b0", !6763, i64 0}
!6763 = !{!"000002090609EAB0.w128.b0", !6764, i64 0}
!6764 = !{!"000002090609EAB0.w256.b0", !6765, i64 0}
!6765 = !{!"000002090609EAB0.w512.b0", !6766, i64 0}
!6766 = !{!"000002090609EAB0.w1024.b0", !6767, i64 0}
!6767 = !{!"000002090609EAB0", !21, i64 0}
!6768 = !{!6769, !6769, i64 0}
!6769 = !{!"000002090609EAB0.w8.b8", !6760, i64 0}
!6770 = !{!6771, !6771, i64 0}
!6771 = !{!"000002090609EAB0.w8.b16", !6772, i64 0}
!6772 = !{!"000002090609EAB0.w16.b16", !6761, i64 0}
!6773 = !{!6774, !6774, i64 0}
!6774 = !{!"000002090609EAB0.w8.b24", !6772, i64 0}
!6775 = !{!6776, !6776, i64 0}
!6776 = !{!"000002090609EAB0.w8.b32", !6777, i64 0}
!6777 = !{!"000002090609EAB0.w16.b32", !6778, i64 0}
!6778 = !{!"000002090609EAB0.w32.b32", !6762, i64 0}
!6779 = !{!6780, !6780, i64 0}
!6780 = !{!"000002090609F3B0.w8.b8", !6781, i64 0}
!6781 = !{!"000002090609F3B0.w16.b0", !6782, i64 0}
!6782 = !{!"000002090609F3B0.w32.b0", !6783, i64 0}
!6783 = !{!"000002090609F3B0.w64.b0", !6784, i64 0}
!6784 = !{!"000002090609F3B0.w128.b0", !6785, i64 0}
!6785 = !{!"000002090609F3B0.w256.b0", !6786, i64 0}
!6786 = !{!"000002090609F3B0.w512.b0", !6787, i64 0}
!6787 = !{!"000002090609F3B0.w1024.b0", !6788, i64 0}
!6788 = !{!"000002090609F3B0", !21, i64 0}
!6789 = !{!6790, !6790, i64 0}
!6790 = !{!"000002090609F3B0.w8.b16", !6791, i64 0}
!6791 = !{!"000002090609F3B0.w16.b16", !6782, i64 0}
!6792 = !{!6793, !6793, i64 0}
!6793 = !{!"000002090609F3B0.w8.b24", !6791, i64 0}
!6794 = !{!6795, !6795, i64 0}
!6795 = !{!"000002090609F3B0.w8.b32", !6796, i64 0}
!6796 = !{!"000002090609F3B0.w16.b32", !6797, i64 0}
!6797 = !{!"000002090609F3B0.w32.b32", !6783, i64 0}
!6798 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6799)
!6799 = !{!6800, !6801, !6802, !6803, !6804, !6805}
!6800 = !DILocalVariable(name: "arg1", arg: 1, scope: !6798, file: !1, type: !8)
!6801 = !DILocalVariable(name: "arg2", arg: 2, scope: !6798, file: !1, type: !9)
!6802 = !DILocalVariable(name: "arg3", arg: 3, scope: !6798, file: !1, type: !7)
!6803 = !DILocalVariable(name: "arg4", arg: 4, scope: !6798, file: !1, type: !8)
!6804 = !DILocalVariable(name: "arg5", arg: 5, scope: !6798, file: !1, type: !9)
!6805 = !DILocalVariable(name: "arg6", arg: 6, scope: !6798, file: !1, type: !8)
!6806 = !DILocation(line: 0, scope: !6798)
!6807 = !{!6808, !6808, i64 0}
!6808 = !{!"0000020905FFA7B0.w4.b0", !6809, i64 0}
!6809 = !{!"0000020905FFA7B0.w8.b0", !6810, i64 0}
!6810 = !{!"0000020905FFA7B0.w16.b0", !6811, i64 0}
!6811 = !{!"0000020905FFA7B0.w32.b0", !6812, i64 0}
!6812 = !{!"0000020905FFA7B0.w64.b0", !6813, i64 0}
!6813 = !{!"0000020905FFA7B0.w128.b0", !6814, i64 0}
!6814 = !{!"0000020905FFA7B0.w256.b0", !6815, i64 0}
!6815 = !{!"0000020905FFA7B0.w512.b0", !6816, i64 0}
!6816 = !{!"0000020905FFA7B0.w1024.b0", !6817, i64 0}
!6817 = !{!"0000020905FFA7B0", !21, i64 0}
!6818 = !{!6819, !6819, i64 0}
!6819 = !{!"0000020905FFA7B0.w4.b4", !6809, i64 0}
!6820 = !{!6821, !6821, i64 0}
!6821 = !{!"0000020905FFA7B0.w4.b8", !6822, i64 0}
!6822 = !{!"0000020905FFA7B0.w8.b8", !6810, i64 0}
!6823 = !{!6824, !6824, i64 0}
!6824 = !{!"0000020905FFA7B0.w4.b12", !6822, i64 0}
!6825 = !{!6826, !6826, i64 0}
!6826 = !{!"0000020905FFA7B0.w4.b16", !6827, i64 0}
!6827 = !{!"0000020905FFA7B0.w8.b16", !6828, i64 0}
!6828 = !{!"0000020905FFA7B0.w16.b16", !6811, i64 0}
!6829 = !{!6830, !6830, i64 0}
!6830 = !{!"0000020906001170.w8.b0", !6831, i64 0}
!6831 = !{!"0000020906001170.w16.b0", !6832, i64 0}
!6832 = !{!"0000020906001170.w32.b0", !6833, i64 0}
!6833 = !{!"0000020906001170.w64.b0", !6834, i64 0}
!6834 = !{!"0000020906001170.w128.b0", !6835, i64 0}
!6835 = !{!"0000020906001170.w256.b0", !6836, i64 0}
!6836 = !{!"0000020906001170.w512.b0", !6837, i64 0}
!6837 = !{!"0000020906001170.w1024.b0", !6838, i64 0}
!6838 = !{!"0000020906001170", !21, i64 0}
!6839 = !{!6840, !6840, i64 0}
!6840 = !{!"0000020906001170.w8.b8", !6831, i64 0}
!6841 = !{!6842, !6842, i64 0}
!6842 = !{!"0000020906001170.w8.b16", !6843, i64 0}
!6843 = !{!"0000020906001170.w16.b16", !6832, i64 0}
!6844 = !{!6845, !6845, i64 0}
!6845 = !{!"0000020906001170.w8.b24", !6843, i64 0}
!6846 = !{!6847, !6847, i64 0}
!6847 = !{!"0000020906001170.w8.b32", !6848, i64 0}
!6848 = !{!"0000020906001170.w16.b32", !6849, i64 0}
!6849 = !{!"0000020906001170.w32.b32", !6833, i64 0}
!6850 = !{!6851, !6851, i64 0}
!6851 = !{!"00000209060017F0.w8.b8", !6852, i64 0}
!6852 = !{!"00000209060017F0.w16.b0", !6853, i64 0}
!6853 = !{!"00000209060017F0.w32.b0", !6854, i64 0}
!6854 = !{!"00000209060017F0.w64.b0", !6855, i64 0}
!6855 = !{!"00000209060017F0.w128.b0", !6856, i64 0}
!6856 = !{!"00000209060017F0.w256.b0", !6857, i64 0}
!6857 = !{!"00000209060017F0.w512.b0", !6858, i64 0}
!6858 = !{!"00000209060017F0.w1024.b0", !6859, i64 0}
!6859 = !{!"00000209060017F0", !21, i64 0}
!6860 = !{!6861, !6861, i64 0}
!6861 = !{!"00000209060017F0.w8.b16", !6862, i64 0}
!6862 = !{!"00000209060017F0.w16.b16", !6853, i64 0}
!6863 = !{!6864, !6864, i64 0}
!6864 = !{!"00000209060017F0.w8.b24", !6862, i64 0}
!6865 = !{!6866, !6866, i64 0}
!6866 = !{!"00000209060017F0.w8.b32", !6867, i64 0}
!6867 = !{!"00000209060017F0.w16.b32", !6868, i64 0}
!6868 = !{!"00000209060017F0.w32.b32", !6854, i64 0}
!6869 = !{!6870, !6870, i64 0}
!6870 = !{!"00000209060023F0.w8.b0", !6871, i64 0}
!6871 = !{!"00000209060023F0.w16.b0", !6872, i64 0}
!6872 = !{!"00000209060023F0.w32.b0", !6873, i64 0}
!6873 = !{!"00000209060023F0.w64.b0", !6874, i64 0}
!6874 = !{!"00000209060023F0.w128.b0", !6875, i64 0}
!6875 = !{!"00000209060023F0.w256.b0", !6876, i64 0}
!6876 = !{!"00000209060023F0.w512.b0", !6877, i64 0}
!6877 = !{!"00000209060023F0.w1024.b0", !6878, i64 0}
!6878 = !{!"00000209060023F0", !21, i64 0}
!6879 = !{!6880, !6880, i64 0}
!6880 = !{!"00000209060023F0.w8.b8", !6871, i64 0}
!6881 = !{!6882, !6882, i64 0}
!6882 = !{!"00000209060023F0.w8.b16", !6883, i64 0}
!6883 = !{!"00000209060023F0.w16.b16", !6872, i64 0}
!6884 = !{!6885, !6885, i64 0}
!6885 = !{!"00000209060023F0.w8.b24", !6883, i64 0}
!6886 = !{!6887, !6887, i64 0}
!6887 = !{!"00000209060023F0.w8.b32", !6888, i64 0}
!6888 = !{!"00000209060023F0.w16.b32", !6889, i64 0}
!6889 = !{!"00000209060023F0.w32.b32", !6873, i64 0}
!6890 = !{!6891, !6891, i64 0}
!6891 = !{!"00000209060023F0.w8.b40", !6888, i64 0}
!6892 = !{!6893, !6893, i64 0}
!6893 = !{!"0000020906002270.w8.b0", !6894, i64 0}
!6894 = !{!"0000020906002270.w16.b0", !6895, i64 0}
!6895 = !{!"0000020906002270.w32.b0", !6896, i64 0}
!6896 = !{!"0000020906002270.w64.b0", !6897, i64 0}
!6897 = !{!"0000020906002270.w128.b0", !6898, i64 0}
!6898 = !{!"0000020906002270.w256.b0", !6899, i64 0}
!6899 = !{!"0000020906002270.w512.b0", !6900, i64 0}
!6900 = !{!"0000020906002270.w1024.b0", !6901, i64 0}
!6901 = !{!"0000020906002270", !21, i64 0}
!6902 = !{!6903, !6903, i64 0}
!6903 = !{!"0000020906002270.w8.b8", !6894, i64 0}
!6904 = !{!6905, !6905, i64 0}
!6905 = !{!"0000020906002270.w8.b16", !6906, i64 0}
!6906 = !{!"0000020906002270.w16.b16", !6895, i64 0}
!6907 = !{!6908, !6908, i64 0}
!6908 = !{!"0000020906002270.w8.b24", !6906, i64 0}
!6909 = !{!6910, !6910, i64 0}
!6910 = !{!"0000020906002270.w8.b32", !6911, i64 0}
!6911 = !{!"0000020906002270.w16.b32", !6912, i64 0}
!6912 = !{!"0000020906002270.w32.b32", !6896, i64 0}
!6913 = !{!6914, !6914, i64 0}
!6914 = !{!"0000020906002270.w8.b40", !6911, i64 0}
!6915 = !{!6916, !6916, i64 0}
!6916 = !{!"0000020906004830.w8.b0", !6917, i64 0}
!6917 = !{!"0000020906004830.w16.b0", !6918, i64 0}
!6918 = !{!"0000020906004830.w32.b0", !6919, i64 0}
!6919 = !{!"0000020906004830.w64.b0", !6920, i64 0}
!6920 = !{!"0000020906004830.w128.b0", !6921, i64 0}
!6921 = !{!"0000020906004830.w256.b0", !6922, i64 0}
!6922 = !{!"0000020906004830.w512.b0", !6923, i64 0}
!6923 = !{!"0000020906004830.w1024.b0", !6924, i64 0}
!6924 = !{!"0000020906004830", !21, i64 0}
!6925 = !{!6926, !6926, i64 0}
!6926 = !{!"0000020906004830.w8.b8", !6917, i64 0}
!6927 = !{!6928, !6928, i64 0}
!6928 = !{!"0000020906004830.w8.b16", !6929, i64 0}
!6929 = !{!"0000020906004830.w16.b16", !6918, i64 0}
!6930 = !{!6931, !6931, i64 0}
!6931 = !{!"0000020906004830.w8.b24", !6929, i64 0}
!6932 = !{!6933, !6933, i64 0}
!6933 = !{!"0000020906004830.w8.b32", !6934, i64 0}
!6934 = !{!"0000020906004830.w16.b32", !6935, i64 0}
!6935 = !{!"0000020906004830.w32.b32", !6919, i64 0}
!6936 = !{!6937, !6937, i64 0}
!6937 = !{!"0000020906003BB0.w8.b8", !6938, i64 0}
!6938 = !{!"0000020906003BB0.w16.b0", !6939, i64 0}
!6939 = !{!"0000020906003BB0.w32.b0", !6940, i64 0}
!6940 = !{!"0000020906003BB0.w64.b0", !6941, i64 0}
!6941 = !{!"0000020906003BB0.w128.b0", !6942, i64 0}
!6942 = !{!"0000020906003BB0.w256.b0", !6943, i64 0}
!6943 = !{!"0000020906003BB0.w512.b0", !6944, i64 0}
!6944 = !{!"0000020906003BB0.w1024.b0", !6945, i64 0}
!6945 = !{!"0000020906003BB0", !21, i64 0}
!6946 = !{!6947, !6947, i64 0}
!6947 = !{!"0000020906003BB0.w8.b16", !6948, i64 0}
!6948 = !{!"0000020906003BB0.w16.b16", !6939, i64 0}
!6949 = !{!6950, !6950, i64 0}
!6950 = !{!"0000020906003BB0.w8.b24", !6948, i64 0}
!6951 = !{!6952, !6952, i64 0}
!6952 = !{!"0000020906003BB0.w8.b32", !6953, i64 0}
!6953 = !{!"0000020906003BB0.w16.b32", !6954, i64 0}
!6954 = !{!"0000020906003BB0.w32.b32", !6940, i64 0}
!6955 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6956)
!6956 = !{!6957, !6958, !6959, !6960, !6961, !6962}
!6957 = !DILocalVariable(name: "arg1", arg: 1, scope: !6955, file: !1, type: !8)
!6958 = !DILocalVariable(name: "arg2", arg: 2, scope: !6955, file: !1, type: !9)
!6959 = !DILocalVariable(name: "arg3", arg: 3, scope: !6955, file: !1, type: !7)
!6960 = !DILocalVariable(name: "arg4", arg: 4, scope: !6955, file: !1, type: !8)
!6961 = !DILocalVariable(name: "arg5", arg: 5, scope: !6955, file: !1, type: !9)
!6962 = !DILocalVariable(name: "arg6", arg: 6, scope: !6955, file: !1, type: !8)
!6963 = !DILocation(line: 0, scope: !6955)
!6964 = !{!6965, !6965, i64 0}
!6965 = !{!"000002090605BB20.w4.b0", !6966, i64 0}
!6966 = !{!"000002090605BB20.w8.b0", !6967, i64 0}
!6967 = !{!"000002090605BB20.w16.b0", !6968, i64 0}
!6968 = !{!"000002090605BB20.w32.b0", !6969, i64 0}
!6969 = !{!"000002090605BB20.w64.b0", !6970, i64 0}
!6970 = !{!"000002090605BB20.w128.b0", !6971, i64 0}
!6971 = !{!"000002090605BB20.w256.b0", !6972, i64 0}
!6972 = !{!"000002090605BB20.w512.b0", !6973, i64 0}
!6973 = !{!"000002090605BB20.w1024.b0", !6974, i64 0}
!6974 = !{!"000002090605BB20", !21, i64 0}
!6975 = !{!6976, !6976, i64 0}
!6976 = !{!"000002090605BB20.w4.b4", !6966, i64 0}
!6977 = !{!6978, !6978, i64 0}
!6978 = !{!"000002090605BB20.w4.b8", !6979, i64 0}
!6979 = !{!"000002090605BB20.w8.b8", !6967, i64 0}
!6980 = !{!6981, !6981, i64 0}
!6981 = !{!"000002090605BB20.w4.b12", !6979, i64 0}
!6982 = !{!6983, !6983, i64 0}
!6983 = !{!"000002090600DA60.w8.b0", !6984, i64 0}
!6984 = !{!"000002090600DA60.w16.b0", !6985, i64 0}
!6985 = !{!"000002090600DA60.w32.b0", !6986, i64 0}
!6986 = !{!"000002090600DA60.w64.b0", !6987, i64 0}
!6987 = !{!"000002090600DA60.w128.b0", !6988, i64 0}
!6988 = !{!"000002090600DA60.w256.b0", !6989, i64 0}
!6989 = !{!"000002090600DA60.w512.b0", !6990, i64 0}
!6990 = !{!"000002090600DA60.w1024.b0", !6991, i64 0}
!6991 = !{!"000002090600DA60", !21, i64 0}
!6992 = !{!6993, !6993, i64 0}
!6993 = !{!"000002090600DA60.w8.b8", !6984, i64 0}
!6994 = !{!6995, !6995, i64 0}
!6995 = !{!"000002090600FA20.w8.b8", !6996, i64 0}
!6996 = !{!"000002090600FA20.w16.b0", !6997, i64 0}
!6997 = !{!"000002090600FA20.w32.b0", !6998, i64 0}
!6998 = !{!"000002090600FA20.w64.b0", !6999, i64 0}
!6999 = !{!"000002090600FA20.w128.b0", !7000, i64 0}
!7000 = !{!"000002090600FA20.w256.b0", !7001, i64 0}
!7001 = !{!"000002090600FA20.w512.b0", !7002, i64 0}
!7002 = !{!"000002090600FA20.w1024.b0", !7003, i64 0}
!7003 = !{!"000002090600FA20", !21, i64 0}
!7004 = !{!7005, !7005, i64 0}
!7005 = !{!"0000020906098030.w8.b0", !7006, i64 0}
!7006 = !{!"0000020906098030.w16.b0", !7007, i64 0}
!7007 = !{!"0000020906098030.w32.b0", !7008, i64 0}
!7008 = !{!"0000020906098030.w64.b0", !7009, i64 0}
!7009 = !{!"0000020906098030.w128.b0", !7010, i64 0}
!7010 = !{!"0000020906098030.w256.b0", !7011, i64 0}
!7011 = !{!"0000020906098030.w512.b0", !7012, i64 0}
!7012 = !{!"0000020906098030.w1024.b0", !7013, i64 0}
!7013 = !{!"0000020906098030", !21, i64 0}
!7014 = !{!7015, !7015, i64 0}
!7015 = !{!"0000020906098030.w8.b8", !7006, i64 0}
!7016 = !{!7017, !7017, i64 0}
!7017 = !{!"0000020906098030.w8.b16", !7018, i64 0}
!7018 = !{!"0000020906098030.w16.b16", !7007, i64 0}
!7019 = !{!7020, !7020, i64 0}
!7020 = !{!"0000020906097D30.w8.b0", !7021, i64 0}
!7021 = !{!"0000020906097D30.w16.b0", !7022, i64 0}
!7022 = !{!"0000020906097D30.w32.b0", !7023, i64 0}
!7023 = !{!"0000020906097D30.w64.b0", !7024, i64 0}
!7024 = !{!"0000020906097D30.w128.b0", !7025, i64 0}
!7025 = !{!"0000020906097D30.w256.b0", !7026, i64 0}
!7026 = !{!"0000020906097D30.w512.b0", !7027, i64 0}
!7027 = !{!"0000020906097D30.w1024.b0", !7028, i64 0}
!7028 = !{!"0000020906097D30", !21, i64 0}
!7029 = !{!7030, !7030, i64 0}
!7030 = !{!"0000020906097D30.w8.b8", !7021, i64 0}
!7031 = !{!7032, !7032, i64 0}
!7032 = !{!"0000020906097D30.w8.b16", !7033, i64 0}
!7033 = !{!"0000020906097D30.w16.b16", !7022, i64 0}
!7034 = !{!7035, !7035, i64 0}
!7035 = !{!"0000020906098BB0.w8.b0", !7036, i64 0}
!7036 = !{!"0000020906098BB0.w16.b0", !7037, i64 0}
!7037 = !{!"0000020906098BB0.w32.b0", !7038, i64 0}
!7038 = !{!"0000020906098BB0.w64.b0", !7039, i64 0}
!7039 = !{!"0000020906098BB0.w128.b0", !7040, i64 0}
!7040 = !{!"0000020906098BB0.w256.b0", !7041, i64 0}
!7041 = !{!"0000020906098BB0.w512.b0", !7042, i64 0}
!7042 = !{!"0000020906098BB0.w1024.b0", !7043, i64 0}
!7043 = !{!"0000020906098BB0", !21, i64 0}
!7044 = !{!7045, !7045, i64 0}
!7045 = !{!"0000020906098BB0.w8.b8", !7036, i64 0}
!7046 = !{!7047, !7047, i64 0}
!7047 = !{!"0000020906098B30.w8.b8", !7048, i64 0}
!7048 = !{!"0000020906098B30.w16.b0", !7049, i64 0}
!7049 = !{!"0000020906098B30.w32.b0", !7050, i64 0}
!7050 = !{!"0000020906098B30.w64.b0", !7051, i64 0}
!7051 = !{!"0000020906098B30.w128.b0", !7052, i64 0}
!7052 = !{!"0000020906098B30.w256.b0", !7053, i64 0}
!7053 = !{!"0000020906098B30.w512.b0", !7054, i64 0}
!7054 = !{!"0000020906098B30.w1024.b0", !7055, i64 0}
!7055 = !{!"0000020906098B30", !21, i64 0}
!7056 = !{!7057, !7057, i64 0}
!7057 = !{!"0000020906098B70.w8.b0", !7058, i64 0}
!7058 = !{!"0000020906098B70.w16.b0", !7059, i64 0}
!7059 = !{!"0000020906098B70.w32.b0", !7060, i64 0}
!7060 = !{!"0000020906098B70.w64.b0", !7061, i64 0}
!7061 = !{!"0000020906098B70.w128.b0", !7062, i64 0}
!7062 = !{!"0000020906098B70.w256.b0", !7063, i64 0}
!7063 = !{!"0000020906098B70.w512.b0", !7064, i64 0}
!7064 = !{!"0000020906098B70.w1024.b0", !7065, i64 0}
!7065 = !{!"0000020906098B70", !21, i64 0}
!7066 = !{!7067, !7067, i64 0}
!7067 = !{!"0000020906098B70.w8.b8", !7058, i64 0}
!7068 = !{!7069, !7069, i64 0}
!7069 = !{!"0000020906098CF0.w8.b8", !7070, i64 0}
!7070 = !{!"0000020906098CF0.w16.b0", !7071, i64 0}
!7071 = !{!"0000020906098CF0.w32.b0", !7072, i64 0}
!7072 = !{!"0000020906098CF0.w64.b0", !7073, i64 0}
!7073 = !{!"0000020906098CF0.w128.b0", !7074, i64 0}
!7074 = !{!"0000020906098CF0.w256.b0", !7075, i64 0}
!7075 = !{!"0000020906098CF0.w512.b0", !7076, i64 0}
!7076 = !{!"0000020906098CF0.w1024.b0", !7077, i64 0}
!7077 = !{!"0000020906098CF0", !21, i64 0}
!7078 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7079)
!7079 = !{!7080, !7081, !7082, !7083, !7084, !7085}
!7080 = !DILocalVariable(name: "arg1", arg: 1, scope: !7078, file: !1, type: !8)
!7081 = !DILocalVariable(name: "arg2", arg: 2, scope: !7078, file: !1, type: !9)
!7082 = !DILocalVariable(name: "arg3", arg: 3, scope: !7078, file: !1, type: !7)
!7083 = !DILocalVariable(name: "arg4", arg: 4, scope: !7078, file: !1, type: !8)
!7084 = !DILocalVariable(name: "arg5", arg: 5, scope: !7078, file: !1, type: !9)
!7085 = !DILocalVariable(name: "arg6", arg: 6, scope: !7078, file: !1, type: !8)
!7086 = !DILocation(line: 0, scope: !7078)
!7087 = !{!7088, !7088, i64 0}
!7088 = !{!"00000209060A2BF0.w4.b0", !7089, i64 0}
!7089 = !{!"00000209060A2BF0.w8.b0", !7090, i64 0}
!7090 = !{!"00000209060A2BF0.w16.b0", !7091, i64 0}
!7091 = !{!"00000209060A2BF0.w32.b0", !7092, i64 0}
!7092 = !{!"00000209060A2BF0.w64.b0", !7093, i64 0}
!7093 = !{!"00000209060A2BF0.w128.b0", !7094, i64 0}
!7094 = !{!"00000209060A2BF0.w256.b0", !7095, i64 0}
!7095 = !{!"00000209060A2BF0.w512.b0", !7096, i64 0}
!7096 = !{!"00000209060A2BF0.w1024.b0", !7097, i64 0}
!7097 = !{!"00000209060A2BF0", !21, i64 0}
!7098 = !{!7099, !7099, i64 0}
!7099 = !{!"00000209060A2BF0.w4.b4", !7089, i64 0}
!7100 = !{!7101, !7101, i64 0}
!7101 = !{!"00000209060A88B0.w8.b0", !7102, i64 0}
!7102 = !{!"00000209060A88B0.w16.b0", !7103, i64 0}
!7103 = !{!"00000209060A88B0.w32.b0", !7104, i64 0}
!7104 = !{!"00000209060A88B0.w64.b0", !7105, i64 0}
!7105 = !{!"00000209060A88B0.w128.b0", !7106, i64 0}
!7106 = !{!"00000209060A88B0.w256.b0", !7107, i64 0}
!7107 = !{!"00000209060A88B0.w512.b0", !7108, i64 0}
!7108 = !{!"00000209060A88B0.w1024.b0", !7109, i64 0}
!7109 = !{!"00000209060A88B0", !21, i64 0}
!7110 = !{!7111, !7111, i64 0}
!7111 = !{!"00000209060A88B0.w8.b8", !7102, i64 0}
!7112 = !{!7113, !7113, i64 0}
!7113 = !{!"00000209060A88B0.w8.b16", !7114, i64 0}
!7114 = !{!"00000209060A88B0.w16.b16", !7103, i64 0}
!7115 = !{!7116, !7116, i64 0}
!7116 = !{!"00000209060A88B0.w8.b24", !7114, i64 0}
!7117 = !{!7118, !7118, i64 0}
!7118 = !{!"00000209060A88B0.w8.b32", !7119, i64 0}
!7119 = !{!"00000209060A88B0.w16.b32", !7120, i64 0}
!7120 = !{!"00000209060A88B0.w32.b32", !7104, i64 0}
!7121 = !{!7122, !7122, i64 0}
!7122 = !{!"00000209060A9030.w8.b8", !7123, i64 0}
!7123 = !{!"00000209060A9030.w16.b0", !7124, i64 0}
!7124 = !{!"00000209060A9030.w32.b0", !7125, i64 0}
!7125 = !{!"00000209060A9030.w64.b0", !7126, i64 0}
!7126 = !{!"00000209060A9030.w128.b0", !7127, i64 0}
!7127 = !{!"00000209060A9030.w256.b0", !7128, i64 0}
!7128 = !{!"00000209060A9030.w512.b0", !7129, i64 0}
!7129 = !{!"00000209060A9030.w1024.b0", !7130, i64 0}
!7130 = !{!"00000209060A9030", !21, i64 0}
!7131 = !{!7132, !7132, i64 0}
!7132 = !{!"00000209060A9030.w8.b16", !7133, i64 0}
!7133 = !{!"00000209060A9030.w16.b16", !7124, i64 0}
!7134 = !{!7135, !7135, i64 0}
!7135 = !{!"00000209060A9030.w8.b24", !7133, i64 0}
!7136 = !{!7137, !7137, i64 0}
!7137 = !{!"00000209060A9030.w8.b32", !7138, i64 0}
!7138 = !{!"00000209060A9030.w16.b32", !7139, i64 0}
!7139 = !{!"00000209060A9030.w32.b32", !7125, i64 0}
!7140 = !{!7141, !7141, i64 0}
!7141 = !{!"00000209060AC0B0.w8.b0", !7142, i64 0}
!7142 = !{!"00000209060AC0B0.w16.b0", !7143, i64 0}
!7143 = !{!"00000209060AC0B0.w32.b0", !7144, i64 0}
!7144 = !{!"00000209060AC0B0.w64.b0", !7145, i64 0}
!7145 = !{!"00000209060AC0B0.w128.b0", !7146, i64 0}
!7146 = !{!"00000209060AC0B0.w256.b0", !7147, i64 0}
!7147 = !{!"00000209060AC0B0.w512.b0", !7148, i64 0}
!7148 = !{!"00000209060AC0B0.w1024.b0", !7149, i64 0}
!7149 = !{!"00000209060AC0B0", !21, i64 0}
!7150 = !{!7151, !7151, i64 0}
!7151 = !{!"00000209060AC0B0.w8.b8", !7142, i64 0}
!7152 = !{!7153, !7153, i64 0}
!7153 = !{!"00000209060AC0B0.w8.b16", !7154, i64 0}
!7154 = !{!"00000209060AC0B0.w16.b16", !7143, i64 0}
!7155 = !{!7156, !7156, i64 0}
!7156 = !{!"00000209060AC0B0.w8.b24", !7154, i64 0}
!7157 = !{!7158, !7158, i64 0}
!7158 = !{!"00000209060AC0B0.w8.b32", !7159, i64 0}
!7159 = !{!"00000209060AC0B0.w16.b32", !7160, i64 0}
!7160 = !{!"00000209060AC0B0.w32.b32", !7144, i64 0}
!7161 = !{!7162, !7162, i64 0}
!7162 = !{!"00000209060AC8F0.w8.b8", !7163, i64 0}
!7163 = !{!"00000209060AC8F0.w16.b0", !7164, i64 0}
!7164 = !{!"00000209060AC8F0.w32.b0", !7165, i64 0}
!7165 = !{!"00000209060AC8F0.w64.b0", !7166, i64 0}
!7166 = !{!"00000209060AC8F0.w128.b0", !7167, i64 0}
!7167 = !{!"00000209060AC8F0.w256.b0", !7168, i64 0}
!7168 = !{!"00000209060AC8F0.w512.b0", !7169, i64 0}
!7169 = !{!"00000209060AC8F0.w1024.b0", !7170, i64 0}
!7170 = !{!"00000209060AC8F0", !21, i64 0}
!7171 = !{!7172, !7172, i64 0}
!7172 = !{!"00000209060AC8F0.w8.b16", !7173, i64 0}
!7173 = !{!"00000209060AC8F0.w16.b16", !7164, i64 0}
!7174 = !{!7175, !7175, i64 0}
!7175 = !{!"00000209060AC8F0.w8.b24", !7173, i64 0}
!7176 = !{!7177, !7177, i64 0}
!7177 = !{!"00000209060AC8F0.w8.b32", !7178, i64 0}
!7178 = !{!"00000209060AC8F0.w16.b32", !7179, i64 0}
!7179 = !{!"00000209060AC8F0.w32.b32", !7165, i64 0}
!7180 = !{!7181, !7181, i64 0}
!7181 = !{!"0000020900CE8E20", !21, i64 0}
!7182 = !{!7183, !7183, i64 0}
!7183 = !{!"0000020900CE8DA0", !21, i64 0}
!7184 = !{!7185, !7185, i64 0}
!7185 = !{!"0000020900CE8420", !21, i64 0}
!7186 = !{!7187, !7187, i64 0}
!7187 = !{!"0000020900EB5C70", !21, i64 0}
!7188 = !{!7189, !7189, i64 0}
!7189 = !{!"0000020900EB51F0", !21, i64 0}
!7190 = !{!7191, !7191, i64 0}
!7191 = !{!"0000020900EB60B0", !21, i64 0}
!7192 = !{!7193, !7193, i64 0}
!7193 = !{!"0000020905B48520", !21, i64 0}
!7194 = !{!7195, !7195, i64 0}
!7195 = !{!"0000020905B48C20", !21, i64 0}
!7196 = !{!7197, !7197, i64 0}
!7197 = !{!"0000020905B48F20", !21, i64 0}
!7198 = !{!7199, !7199, i64 0}
!7199 = !{!"0000020905D6D3A0", !21, i64 0}
!7200 = !{!7201, !7201, i64 0}
!7201 = !{!"0000020905D6DB60", !21, i64 0}
!7202 = !{!7203, !7203, i64 0}
!7203 = !{!"0000020905D6DBE0", !21, i64 0}
!7204 = !{!7205, !7205, i64 0}
!7205 = !{!"0000020905E977F0", !21, i64 0}
!7206 = !{!7207, !7207, i64 0}
!7207 = !{!"0000020905E97EB0", !21, i64 0}
!7208 = !{!7209, !7209, i64 0}
!7209 = !{!"00000209094160A0.w2.b0", !7210, i64 0}
!7210 = !{!"00000209094160A0.w4.b0", !7211, i64 0}
!7211 = !{!"00000209094160A0.w8.b0", !7212, i64 0}
!7212 = !{!"00000209094160A0.w16.b0", !7213, i64 0}
!7213 = !{!"00000209094160A0.w32.b0", !7214, i64 0}
!7214 = !{!"00000209094160A0.w64.b0", !7215, i64 0}
!7215 = !{!"00000209094160A0.w128.b0", !7216, i64 0}
!7216 = !{!"00000209094160A0.w256.b0", !7217, i64 0}
!7217 = !{!"00000209094160A0.w512.b0", !7218, i64 0}
!7218 = !{!"00000209094160A0.w1024.b0", !7219, i64 0}
!7219 = !{!"00000209094160A0", !21, i64 0}
!7220 = !{!7221, !7221, i64 0}
!7221 = !{!"00000209094158E0.w2.b0", !7222, i64 0}
!7222 = !{!"00000209094158E0.w4.b0", !7223, i64 0}
!7223 = !{!"00000209094158E0.w8.b0", !7224, i64 0}
!7224 = !{!"00000209094158E0.w16.b0", !7225, i64 0}
!7225 = !{!"00000209094158E0.w32.b0", !7226, i64 0}
!7226 = !{!"00000209094158E0.w64.b0", !7227, i64 0}
!7227 = !{!"00000209094158E0.w128.b0", !7228, i64 0}
!7228 = !{!"00000209094158E0.w256.b0", !7229, i64 0}
!7229 = !{!"00000209094158E0.w512.b0", !7230, i64 0}
!7230 = !{!"00000209094158E0.w1024.b0", !7231, i64 0}
!7231 = !{!"00000209094158E0", !21, i64 0}
!7232 = !{!7233, !7233, i64 0}
!7233 = !{!"0000020909415F60", !21, i64 0}
!7234 = !{!7235, !7235, i64 0}
!7235 = !{!"00000209094156E0", !21, i64 0}
!7236 = !{!7237, !7237, i64 0}
!7237 = !{!"0000020909415B20", !21, i64 0}
!7238 = !{!7239, !7239, i64 0}
!7239 = !{!"0000020909415920", !21, i64 0}
!7240 = !{!7241, !7241, i64 0}
!7241 = !{!"0000020900DFA820.w2.b0", !7242, i64 0}
!7242 = !{!"0000020900DFA820.w4.b0", !7243, i64 0}
!7243 = !{!"0000020900DFA820.w8.b0", !7244, i64 0}
!7244 = !{!"0000020900DFA820.w16.b0", !7245, i64 0}
!7245 = !{!"0000020900DFA820.w32.b0", !7246, i64 0}
!7246 = !{!"0000020900DFA820.w64.b0", !7247, i64 0}
!7247 = !{!"0000020900DFA820.w128.b0", !7248, i64 0}
!7248 = !{!"0000020900DFA820.w256.b0", !7249, i64 0}
!7249 = !{!"0000020900DFA820.w512.b0", !7250, i64 0}
!7250 = !{!"0000020900DFA820.w1024.b0", !7251, i64 0}
!7251 = !{!"0000020900DFA820", !21, i64 0}
!7252 = !{!7253, !7253, i64 0}
!7253 = !{!"0000020900DFAAE0.w2.b0", !7254, i64 0}
!7254 = !{!"0000020900DFAAE0.w4.b0", !7255, i64 0}
!7255 = !{!"0000020900DFAAE0.w8.b0", !7256, i64 0}
!7256 = !{!"0000020900DFAAE0.w16.b0", !7257, i64 0}
!7257 = !{!"0000020900DFAAE0.w32.b0", !7258, i64 0}
!7258 = !{!"0000020900DFAAE0.w64.b0", !7259, i64 0}
!7259 = !{!"0000020900DFAAE0.w128.b0", !7260, i64 0}
!7260 = !{!"0000020900DFAAE0.w256.b0", !7261, i64 0}
!7261 = !{!"0000020900DFAAE0.w512.b0", !7262, i64 0}
!7262 = !{!"0000020900DFAAE0.w1024.b0", !7263, i64 0}
!7263 = !{!"0000020900DFAAE0", !21, i64 0}
!7264 = !{!7265, !7265, i64 0}
!7265 = !{!"0000020900DFB020", !21, i64 0}
!7266 = !{!7267, !7267, i64 0}
!7267 = !{!"0000020900DFA260", !21, i64 0}
!7268 = !{!7269, !7269, i64 0}
!7269 = !{!"0000020900DFA960", !21, i64 0}
!7270 = !{!7271, !7271, i64 0}
!7271 = !{!"0000020900DFA9E0", !21, i64 0}
!7272 = !{!7273, !7273, i64 0}
!7273 = !{!"0000020900E00F60.w2.b0", !7274, i64 0}
!7274 = !{!"0000020900E00F60.w4.b0", !7275, i64 0}
!7275 = !{!"0000020900E00F60.w8.b0", !7276, i64 0}
!7276 = !{!"0000020900E00F60.w16.b0", !7277, i64 0}
!7277 = !{!"0000020900E00F60.w32.b0", !7278, i64 0}
!7278 = !{!"0000020900E00F60.w64.b0", !7279, i64 0}
!7279 = !{!"0000020900E00F60.w128.b0", !7280, i64 0}
!7280 = !{!"0000020900E00F60.w256.b0", !7281, i64 0}
!7281 = !{!"0000020900E00F60.w512.b0", !7282, i64 0}
!7282 = !{!"0000020900E00F60.w1024.b0", !7283, i64 0}
!7283 = !{!"0000020900E00F60", !21, i64 0}
!7284 = !{!7285, !7285, i64 0}
!7285 = !{!"0000020900E00960.w2.b0", !7286, i64 0}
!7286 = !{!"0000020900E00960.w4.b0", !7287, i64 0}
!7287 = !{!"0000020900E00960.w8.b0", !7288, i64 0}
!7288 = !{!"0000020900E00960.w16.b0", !7289, i64 0}
!7289 = !{!"0000020900E00960.w32.b0", !7290, i64 0}
!7290 = !{!"0000020900E00960.w64.b0", !7291, i64 0}
!7291 = !{!"0000020900E00960.w128.b0", !7292, i64 0}
!7292 = !{!"0000020900E00960.w256.b0", !7293, i64 0}
!7293 = !{!"0000020900E00960.w512.b0", !7294, i64 0}
!7294 = !{!"0000020900E00960.w1024.b0", !7295, i64 0}
!7295 = !{!"0000020900E00960", !21, i64 0}
!7296 = !{!7297, !7297, i64 0}
!7297 = !{!"0000020900E00F20", !21, i64 0}
!7298 = !{!7299, !7299, i64 0}
!7299 = !{!"0000020900E003E0", !21, i64 0}
!7300 = !{!7301, !7301, i64 0}
!7301 = !{!"0000020900E00860", !21, i64 0}
!7302 = !{!7303, !7303, i64 0}
!7303 = !{!"0000020900E00360", !21, i64 0}
!7304 = !{!7305, !7305, i64 0}
!7305 = !{!"0000020900FA49E0.w2.b0", !7306, i64 0}
!7306 = !{!"0000020900FA49E0.w4.b0", !7307, i64 0}
!7307 = !{!"0000020900FA49E0.w8.b0", !7308, i64 0}
!7308 = !{!"0000020900FA49E0.w16.b0", !7309, i64 0}
!7309 = !{!"0000020900FA49E0.w32.b0", !7310, i64 0}
!7310 = !{!"0000020900FA49E0.w64.b0", !7311, i64 0}
!7311 = !{!"0000020900FA49E0.w128.b0", !7312, i64 0}
!7312 = !{!"0000020900FA49E0.w256.b0", !7313, i64 0}
!7313 = !{!"0000020900FA49E0.w512.b0", !7314, i64 0}
!7314 = !{!"0000020900FA49E0.w1024.b0", !7315, i64 0}
!7315 = !{!"0000020900FA49E0", !21, i64 0}
!7316 = !{!7317, !7317, i64 0}
!7317 = !{!"0000020900FA4B20.w2.b0", !7318, i64 0}
!7318 = !{!"0000020900FA4B20.w4.b0", !7319, i64 0}
!7319 = !{!"0000020900FA4B20.w8.b0", !7320, i64 0}
!7320 = !{!"0000020900FA4B20.w16.b0", !7321, i64 0}
!7321 = !{!"0000020900FA4B20.w32.b0", !7322, i64 0}
!7322 = !{!"0000020900FA4B20.w64.b0", !7323, i64 0}
!7323 = !{!"0000020900FA4B20.w128.b0", !7324, i64 0}
!7324 = !{!"0000020900FA4B20.w256.b0", !7325, i64 0}
!7325 = !{!"0000020900FA4B20.w512.b0", !7326, i64 0}
!7326 = !{!"0000020900FA4B20.w1024.b0", !7327, i64 0}
!7327 = !{!"0000020900FA4B20", !21, i64 0}
!7328 = !{!7329, !7329, i64 0}
!7329 = !{!"0000020900FA4DE0", !21, i64 0}
!7330 = !{!7331, !7331, i64 0}
!7331 = !{!"0000020900FA4960", !21, i64 0}
!7332 = !{!7333, !7333, i64 0}
!7333 = !{!"0000020900FA4EA0", !21, i64 0}
!7334 = !{!7335, !7335, i64 0}
!7335 = !{!"0000020900FA4EE0", !21, i64 0}
!7336 = !{!7337, !7337, i64 0}
!7337 = !{!"0000020905A293A0.w2.b0", !7338, i64 0}
!7338 = !{!"0000020905A293A0.w4.b0", !7339, i64 0}
!7339 = !{!"0000020905A293A0.w8.b0", !7340, i64 0}
!7340 = !{!"0000020905A293A0.w16.b0", !7341, i64 0}
!7341 = !{!"0000020905A293A0.w32.b0", !7342, i64 0}
!7342 = !{!"0000020905A293A0.w64.b0", !7343, i64 0}
!7343 = !{!"0000020905A293A0.w128.b0", !7344, i64 0}
!7344 = !{!"0000020905A293A0.w256.b0", !7345, i64 0}
!7345 = !{!"0000020905A293A0.w512.b0", !7346, i64 0}
!7346 = !{!"0000020905A293A0.w1024.b0", !7347, i64 0}
!7347 = !{!"0000020905A293A0", !21, i64 0}
!7348 = !{!7349, !7349, i64 0}
!7349 = !{!"0000020905A298A0.w2.b0", !7350, i64 0}
!7350 = !{!"0000020905A298A0.w4.b0", !7351, i64 0}
!7351 = !{!"0000020905A298A0.w8.b0", !7352, i64 0}
!7352 = !{!"0000020905A298A0.w16.b0", !7353, i64 0}
!7353 = !{!"0000020905A298A0.w32.b0", !7354, i64 0}
!7354 = !{!"0000020905A298A0.w64.b0", !7355, i64 0}
!7355 = !{!"0000020905A298A0.w128.b0", !7356, i64 0}
!7356 = !{!"0000020905A298A0.w256.b0", !7357, i64 0}
!7357 = !{!"0000020905A298A0.w512.b0", !7358, i64 0}
!7358 = !{!"0000020905A298A0.w1024.b0", !7359, i64 0}
!7359 = !{!"0000020905A298A0", !21, i64 0}
!7360 = !{!7361, !7361, i64 0}
!7361 = !{!"0000020905A291E0", !21, i64 0}
!7362 = !{!7363, !7363, i64 0}
!7363 = !{!"0000020905A2A0A0", !21, i64 0}
!7364 = !{!7365, !7365, i64 0}
!7365 = !{!"0000020905A29620", !21, i64 0}
!7366 = !{!7367, !7367, i64 0}
!7367 = !{!"0000020905A29220", !21, i64 0}
!7368 = !{!7369, !7369, i64 0}
!7369 = !{!"0000020905C61F20.w2.b0", !7370, i64 0}
!7370 = !{!"0000020905C61F20.w4.b0", !7371, i64 0}
!7371 = !{!"0000020905C61F20.w8.b0", !7372, i64 0}
!7372 = !{!"0000020905C61F20.w16.b0", !7373, i64 0}
!7373 = !{!"0000020905C61F20.w32.b0", !7374, i64 0}
!7374 = !{!"0000020905C61F20.w64.b0", !7375, i64 0}
!7375 = !{!"0000020905C61F20.w128.b0", !7376, i64 0}
!7376 = !{!"0000020905C61F20.w256.b0", !7377, i64 0}
!7377 = !{!"0000020905C61F20.w512.b0", !7378, i64 0}
!7378 = !{!"0000020905C61F20.w1024.b0", !7379, i64 0}
!7379 = !{!"0000020905C61F20", !21, i64 0}
!7380 = !{!7381, !7381, i64 0}
!7381 = !{!"0000020905C61BE0.w2.b0", !7382, i64 0}
!7382 = !{!"0000020905C61BE0.w4.b0", !7383, i64 0}
!7383 = !{!"0000020905C61BE0.w8.b0", !7384, i64 0}
!7384 = !{!"0000020905C61BE0.w16.b0", !7385, i64 0}
!7385 = !{!"0000020905C61BE0.w32.b0", !7386, i64 0}
!7386 = !{!"0000020905C61BE0.w64.b0", !7387, i64 0}
!7387 = !{!"0000020905C61BE0.w128.b0", !7388, i64 0}
!7388 = !{!"0000020905C61BE0.w256.b0", !7389, i64 0}
!7389 = !{!"0000020905C61BE0.w512.b0", !7390, i64 0}
!7390 = !{!"0000020905C61BE0.w1024.b0", !7391, i64 0}
!7391 = !{!"0000020905C61BE0", !21, i64 0}
!7392 = !{!7393, !7393, i64 0}
!7393 = !{!"0000020905C61B60", !21, i64 0}
!7394 = !{!7395, !7395, i64 0}
!7395 = !{!"0000020905C618E0", !21, i64 0}
!7396 = !{!7397, !7397, i64 0}
!7397 = !{!"0000020905C61D20", !21, i64 0}
!7398 = !{!7399, !7399, i64 0}
!7399 = !{!"0000020905C61FE0", !21, i64 0}
!7400 = !{!7401, !7401, i64 0}
!7401 = !{!"000002097E5EA640.w2.b0", !7402, i64 0}
!7402 = !{!"000002097E5EA640.w4.b0", !7403, i64 0}
!7403 = !{!"000002097E5EA640.w8.b0", !7404, i64 0}
!7404 = !{!"000002097E5EA640.w16.b0", !7405, i64 0}
!7405 = !{!"000002097E5EA640.w32.b0", !7406, i64 0}
!7406 = !{!"000002097E5EA640.w64.b0", !7407, i64 0}
!7407 = !{!"000002097E5EA640.w128.b0", !7408, i64 0}
!7408 = !{!"000002097E5EA640.w256.b0", !7409, i64 0}
!7409 = !{!"000002097E5EA640.w512.b0", !7410, i64 0}
!7410 = !{!"000002097E5EA640.w1024.b0", !7411, i64 0}
!7411 = !{!"000002097E5EA640", !21, i64 0}
!7412 = !{!7413, !7413, i64 0}
!7413 = !{!"000002097E5F9800.w2.b0", !7414, i64 0}
!7414 = !{!"000002097E5F9800.w4.b0", !7415, i64 0}
!7415 = !{!"000002097E5F9800.w8.b0", !7416, i64 0}
!7416 = !{!"000002097E5F9800.w16.b0", !7417, i64 0}
!7417 = !{!"000002097E5F9800.w32.b0", !7418, i64 0}
!7418 = !{!"000002097E5F9800.w64.b0", !7419, i64 0}
!7419 = !{!"000002097E5F9800.w128.b0", !7420, i64 0}
!7420 = !{!"000002097E5F9800.w256.b0", !7421, i64 0}
!7421 = !{!"000002097E5F9800.w512.b0", !7422, i64 0}
!7422 = !{!"000002097E5F9800.w1024.b0", !7423, i64 0}
!7423 = !{!"000002097E5F9800", !21, i64 0}
!7424 = !{!7425, !7425, i64 0}
!7425 = !{!"000002097E5F8840", !21, i64 0}
!7426 = !{!7427, !7427, i64 0}
!7427 = !{!"000002097E5F5B80", !21, i64 0}
!7428 = !{!7429, !7429, i64 0}
!7429 = !{!"000002097E5F2700", !21, i64 0}
!7430 = !{!7431, !7431, i64 0}
!7431 = !{!"0000020900F62630", !21, i64 0}
!7432 = !{!7433, !7433, i64 0}
!7433 = !{!"0000020900CE29A0.w2.b0", !7434, i64 0}
!7434 = !{!"0000020900CE29A0.w4.b0", !7435, i64 0}
!7435 = !{!"0000020900CE29A0.w8.b0", !7436, i64 0}
!7436 = !{!"0000020900CE29A0.w16.b0", !7437, i64 0}
!7437 = !{!"0000020900CE29A0.w32.b0", !7438, i64 0}
!7438 = !{!"0000020900CE29A0.w64.b0", !7439, i64 0}
!7439 = !{!"0000020900CE29A0.w128.b0", !7440, i64 0}
!7440 = !{!"0000020900CE29A0.w256.b0", !7441, i64 0}
!7441 = !{!"0000020900CE29A0.w512.b0", !7442, i64 0}
!7442 = !{!"0000020900CE29A0.w1024.b0", !7443, i64 0}
!7443 = !{!"0000020900CE29A0", !21, i64 0}
!7444 = !{!7445, !7445, i64 0}
!7445 = !{!"0000020900CE2960", !21, i64 0}
!7446 = !{!7447, !7447, i64 0}
!7447 = !{!"0000020900CE2BA0", !21, i64 0}
!7448 = !{!7449, !7449, i64 0}
!7449 = !{!"0000020900CE2920", !21, i64 0}
!7450 = !{!7451, !7451, i64 0}
!7451 = !{!"0000020900CE2860", !21, i64 0}
!7452 = !{!"branch_weights", i32 1, i32 524287}
!7453 = !{!7454, !7454, i64 0}
!7454 = !{!"0000020900EBDD30.w2.b0", !7455, i64 0}
!7455 = !{!"0000020900EBDD30.w4.b0", !7456, i64 0}
!7456 = !{!"0000020900EBDD30.w8.b0", !7457, i64 0}
!7457 = !{!"0000020900EBDD30.w16.b0", !7458, i64 0}
!7458 = !{!"0000020900EBDD30.w32.b0", !7459, i64 0}
!7459 = !{!"0000020900EBDD30.w64.b0", !7460, i64 0}
!7460 = !{!"0000020900EBDD30.w128.b0", !7461, i64 0}
!7461 = !{!"0000020900EBDD30.w256.b0", !7462, i64 0}
!7462 = !{!"0000020900EBDD30.w512.b0", !7463, i64 0}
!7463 = !{!"0000020900EBDD30.w1024.b0", !7464, i64 0}
!7464 = !{!"0000020900EBDD30", !21, i64 0}
!7465 = !{!7466, !7466, i64 0}
!7466 = !{!"0000020900EBE030", !21, i64 0}
!7467 = !{!7468, !7468, i64 0}
!7468 = !{!"0000020900EBD3F0", !21, i64 0}
!7469 = !{!7470, !7470, i64 0}
!7470 = !{!"0000020900EBDDB0", !21, i64 0}
!7471 = !{!7472, !7472, i64 0}
!7472 = !{!"0000020900EBD970", !21, i64 0}
!7473 = !{!7474, !7474, i64 0}
!7474 = !{!"0000020905A30860.w2.b0", !7475, i64 0}
!7475 = !{!"0000020905A30860.w4.b0", !7476, i64 0}
!7476 = !{!"0000020905A30860.w8.b0", !7477, i64 0}
!7477 = !{!"0000020905A30860.w16.b0", !7478, i64 0}
!7478 = !{!"0000020905A30860.w32.b0", !7479, i64 0}
!7479 = !{!"0000020905A30860.w64.b0", !7480, i64 0}
!7480 = !{!"0000020905A30860.w128.b0", !7481, i64 0}
!7481 = !{!"0000020905A30860.w256.b0", !7482, i64 0}
!7482 = !{!"0000020905A30860.w512.b0", !7483, i64 0}
!7483 = !{!"0000020905A30860.w1024.b0", !7484, i64 0}
!7484 = !{!"0000020905A30860", !21, i64 0}
!7485 = !{!7486, !7486, i64 0}
!7486 = !{!"0000020905A310E0", !21, i64 0}
!7487 = !{!7488, !7488, i64 0}
!7488 = !{!"0000020905A30CA0", !21, i64 0}
!7489 = !{!7490, !7490, i64 0}
!7490 = !{!"0000020905A304A0", !21, i64 0}
!7491 = !{!7492, !7492, i64 0}
!7492 = !{!"0000020905A30260", !21, i64 0}
!7493 = !{!7494, !7494, i64 0}
!7494 = !{!"0000020905D62BA0.w2.b0", !7495, i64 0}
!7495 = !{!"0000020905D62BA0.w4.b0", !7496, i64 0}
!7496 = !{!"0000020905D62BA0.w8.b0", !7497, i64 0}
!7497 = !{!"0000020905D62BA0.w16.b0", !7498, i64 0}
!7498 = !{!"0000020905D62BA0.w32.b0", !7499, i64 0}
!7499 = !{!"0000020905D62BA0.w64.b0", !7500, i64 0}
!7500 = !{!"0000020905D62BA0.w128.b0", !7501, i64 0}
!7501 = !{!"0000020905D62BA0.w256.b0", !7502, i64 0}
!7502 = !{!"0000020905D62BA0.w512.b0", !7503, i64 0}
!7503 = !{!"0000020905D62BA0.w1024.b0", !7504, i64 0}
!7504 = !{!"0000020905D62BA0", !21, i64 0}
!7505 = !{!7506, !7506, i64 0}
!7506 = !{!"0000020905D62F20", !21, i64 0}
!7507 = !{!7508, !7508, i64 0}
!7508 = !{!"0000020905D62160", !21, i64 0}
!7509 = !{!7510, !7510, i64 0}
!7510 = !{!"0000020905D629E0", !21, i64 0}
!7511 = !{!7512, !7512, i64 0}
!7512 = !{!"0000020905D624E0", !21, i64 0}
!7513 = !{!7514, !7514, i64 0}
!7514 = !{!"0000020905E961F0.w2.b0", !7515, i64 0}
!7515 = !{!"0000020905E961F0.w4.b0", !7516, i64 0}
!7516 = !{!"0000020905E961F0.w8.b0", !7517, i64 0}
!7517 = !{!"0000020905E961F0.w16.b0", !7518, i64 0}
!7518 = !{!"0000020905E961F0.w32.b0", !7519, i64 0}
!7519 = !{!"0000020905E961F0.w64.b0", !7520, i64 0}
!7520 = !{!"0000020905E961F0.w128.b0", !7521, i64 0}
!7521 = !{!"0000020905E961F0.w256.b0", !7522, i64 0}
!7522 = !{!"0000020905E961F0.w512.b0", !7523, i64 0}
!7523 = !{!"0000020905E961F0.w1024.b0", !7524, i64 0}
!7524 = !{!"0000020905E961F0", !21, i64 0}
!7525 = !{!7526, !7526, i64 0}
!7526 = !{!"0000020905E96570.w2.b0", !7527, i64 0}
!7527 = !{!"0000020905E96570.w4.b0", !7528, i64 0}
!7528 = !{!"0000020905E96570.w8.b0", !7529, i64 0}
!7529 = !{!"0000020905E96570.w16.b0", !7530, i64 0}
!7530 = !{!"0000020905E96570.w32.b0", !7531, i64 0}
!7531 = !{!"0000020905E96570.w64.b0", !7532, i64 0}
!7532 = !{!"0000020905E96570.w128.b0", !7533, i64 0}
!7533 = !{!"0000020905E96570.w256.b0", !7534, i64 0}
!7534 = !{!"0000020905E96570.w512.b0", !7535, i64 0}
!7535 = !{!"0000020905E96570.w1024.b0", !7536, i64 0}
!7536 = !{!"0000020905E96570", !21, i64 0}
!7537 = !{!7538, !7538, i64 0}
!7538 = !{!"0000020905E96630", !21, i64 0}
!7539 = !{!7540, !7540, i64 0}
!7540 = !{!"0000020905E965F0", !21, i64 0}
!7541 = !{!7542, !7542, i64 0}
!7542 = !{!"0000020905E96CF0", !21, i64 0}
!7543 = !{!7544, !7544, i64 0}
!7544 = !{!"0000020905E96D70", !21, i64 0}
!7545 = !{!7546, !7546, i64 0}
!7546 = !{!"000002096CB8BC40", !21, i64 0}
!7547 = !{!7548, !7548, i64 0}
!7548 = !{!"000002096CB8BF80", !21, i64 0}
!7549 = !{!7550, !7550, i64 0}
!7550 = !{!"000002096CB961C0", !21, i64 0}
!7551 = !{!7552, !7552, i64 0}
!7552 = !{!"000002096CB96280", !21, i64 0}
!7553 = !{!7554, !7554, i64 0}
!7554 = !{!"000002096CB953C0", !21, i64 0}
!7555 = !{!7556, !7556, i64 0}
!7556 = !{!"000002096CB96600", !21, i64 0}
!7557 = !{!7558, !7558, i64 0}
!7558 = !{!"000002097447D5E0", !21, i64 0}
!7559 = !{!7560, !7560, i64 0}
!7560 = !{!"000002097447E0A0", !21, i64 0}
!7561 = !{!7562, !7562, i64 0}
!7562 = !{!"0000020905E99330", !21, i64 0}
!7563 = !{!7564, !7564, i64 0}
!7564 = !{!"0000020905E99DF0", !21, i64 0}
!7565 = !{!7566, !7566, i64 0}
!7566 = !{!"0000020905E99370", !21, i64 0}
!7567 = !{!"branch_weights", i32 1, i32 262143}
!7568 = distinct !{!7568, !7569, !7570}
!7569 = !{!"llvm.loop.isvectorized", i32 1}
!7570 = !{!"llvm.loop.unroll.runtime.disable"}
!7571 = !{!"branch_weights", i32 1, i32 0}
!7572 = distinct !{!7572, !7570, !7569}
!7573 = !{!7574, !7574, i64 0}
!7574 = !{!"000002096CB91580", !21, i64 0}
!7575 = !{!7576, !7576, i64 0}
!7576 = !{!"000002096CB901C0", !21, i64 0}
!7577 = !{!7578, !7578, i64 0}
!7578 = !{!"000002096CB95C40.w128.b0", !7579, i64 0}
!7579 = !{!"000002096CB95C40.w256.b0", !7580, i64 0}
!7580 = !{!"000002096CB95C40.w512.b0", !7581, i64 0}
!7581 = !{!"000002096CB95C40.w1024.b0", !7582, i64 0}
!7582 = !{!"000002096CB95C40", !21, i64 0}
!7583 = !{!7584, !7584, i64 0}
!7584 = !{!"000002096CB95C40.w128.b128", !7579, i64 0}
!7585 = !{!7586, !7586, i64 0}
!7586 = !{!"000002096CB95C40.w128.b256", !7587, i64 0}
!7587 = !{!"000002096CB95C40.w256.b256", !7580, i64 0}
!7588 = !{!7589, !7589, i64 0}
!7589 = !{!"000002096CB95C40.w128.b384", !7587, i64 0}
!7590 = !{!7591, !7591, i64 0}
!7591 = !{!"000002096CB95C40.w128.b512", !7592, i64 0}
!7592 = !{!"000002096CB95C40.w256.b512", !7593, i64 0}
!7593 = !{!"000002096CB95C40.w512.b512", !7581, i64 0}
!7594 = !{!7595, !7595, i64 0}
!7595 = !{!"000002096CB95C40.w128.b640", !7592, i64 0}
!7596 = !{!7597, !7597, i64 0}
!7597 = !{!"000002096CB95C40.w128.b768", !7598, i64 0}
!7598 = !{!"000002096CB95C40.w256.b768", !7593, i64 0}
!7599 = !{!7600, !7600, i64 0}
!7600 = !{!"000002096CB95C40.w128.b896", !7598, i64 0}
!7601 = !{!7602, !7602, i64 0}
!7602 = !{!"000002096CB90E00", !21, i64 0}
!7603 = !{!7604, !7604, i64 0}
!7604 = !{!"000002096CB906C0", !21, i64 0}
!7605 = !{!7606, !7606, i64 0}
!7606 = !{!"000002096E3F7AE0.w2.b0", !7607, i64 0}
!7607 = !{!"000002096E3F7AE0.w4.b0", !7608, i64 0}
!7608 = !{!"000002096E3F7AE0.w8.b0", !7609, i64 0}
!7609 = !{!"000002096E3F7AE0.w16.b0", !7610, i64 0}
!7610 = !{!"000002096E3F7AE0.w32.b0", !7611, i64 0}
!7611 = !{!"000002096E3F7AE0.w64.b0", !7612, i64 0}
!7612 = !{!"000002096E3F7AE0.w128.b0", !7613, i64 0}
!7613 = !{!"000002096E3F7AE0.w256.b0", !7614, i64 0}
!7614 = !{!"000002096E3F7AE0.w512.b0", !7615, i64 0}
!7615 = !{!"000002096E3F7AE0.w1024.b0", !7616, i64 0}
!7616 = !{!"000002096E3F7AE0", !21, i64 0}
!7617 = !{!7618, !7618, i64 0}
!7618 = !{!"000002096E3F7CA0.w2.b0", !7619, i64 0}
!7619 = !{!"000002096E3F7CA0.w4.b0", !7620, i64 0}
!7620 = !{!"000002096E3F7CA0.w8.b0", !7621, i64 0}
!7621 = !{!"000002096E3F7CA0.w16.b0", !7622, i64 0}
!7622 = !{!"000002096E3F7CA0.w32.b0", !7623, i64 0}
!7623 = !{!"000002096E3F7CA0.w64.b0", !7624, i64 0}
!7624 = !{!"000002096E3F7CA0.w128.b0", !7625, i64 0}
!7625 = !{!"000002096E3F7CA0.w256.b0", !7626, i64 0}
!7626 = !{!"000002096E3F7CA0.w512.b0", !7627, i64 0}
!7627 = !{!"000002096E3F7CA0.w1024.b0", !7628, i64 0}
!7628 = !{!"000002096E3F7CA0", !21, i64 0}
!7629 = !{!7630, !7630, i64 0}
!7630 = !{!"000002096CBA27C0", !21, i64 0}
!7631 = !{!7632, !7632, i64 0}
!7632 = !{!"000002096E3F62E0", !21, i64 0}
!7633 = !{!7634, !7634, i64 0}
!7634 = !{!"000002096E3F55A0", !21, i64 0}
!7635 = !{!7636, !7636, i64 0}
!7636 = !{!"000002096E3F8020", !21, i64 0}
!7637 = !{!7638, !7638, i64 0}
!7638 = !{!"000002090941CF60", !21, i64 0}
!7639 = !{!7640, !7640, i64 0}
!7640 = !{!"000002090941F2A0", !21, i64 0}
!7641 = !{!7642, !7642, i64 0}
!7642 = !{!"000002090941FB20.w2.b0", !7643, i64 0}
!7643 = !{!"000002090941FB20.w4.b0", !7644, i64 0}
!7644 = !{!"000002090941FB20.w8.b0", !7645, i64 0}
!7645 = !{!"000002090941FB20.w16.b0", !7646, i64 0}
!7646 = !{!"000002090941FB20.w32.b0", !7647, i64 0}
!7647 = !{!"000002090941FB20.w64.b0", !7648, i64 0}
!7648 = !{!"000002090941FB20.w128.b0", !7649, i64 0}
!7649 = !{!"000002090941FB20.w256.b0", !7650, i64 0}
!7650 = !{!"000002090941FB20.w512.b0", !7651, i64 0}
!7651 = !{!"000002090941FB20.w1024.b0", !7652, i64 0}
!7652 = !{!"000002090941FB20", !21, i64 0}
!7653 = !{!7654, !7654, i64 0}
!7654 = !{!"000002090941F720.w2.b0", !7655, i64 0}
!7655 = !{!"000002090941F720.w4.b0", !7656, i64 0}
!7656 = !{!"000002090941F720.w8.b0", !7657, i64 0}
!7657 = !{!"000002090941F720.w16.b0", !7658, i64 0}
!7658 = !{!"000002090941F720.w32.b0", !7659, i64 0}
!7659 = !{!"000002090941F720.w64.b0", !7660, i64 0}
!7660 = !{!"000002090941F720.w128.b0", !7661, i64 0}
!7661 = !{!"000002090941F720.w256.b0", !7662, i64 0}
!7662 = !{!"000002090941F720.w512.b0", !7663, i64 0}
!7663 = !{!"000002090941F720.w1024.b0", !7664, i64 0}
!7664 = !{!"000002090941F720", !21, i64 0}
!7665 = !{!7666, !7666, i64 0}
!7666 = !{!"000002090941F6E0", !21, i64 0}
!7667 = !{!7668, !7668, i64 0}
!7668 = !{!"000002090940C8A0", !21, i64 0}
!7669 = !{!7670, !7670, i64 0}
!7670 = !{!"000002090941FBE0", !21, i64 0}
!7671 = !{!7672, !7672, i64 0}
!7672 = !{!"0000020900FBDA60.w2.b0", !7673, i64 0}
!7673 = !{!"0000020900FBDA60.w4.b0", !7674, i64 0}
!7674 = !{!"0000020900FBDA60.w8.b0", !7675, i64 0}
!7675 = !{!"0000020900FBDA60.w16.b0", !7676, i64 0}
!7676 = !{!"0000020900FBDA60.w32.b0", !7677, i64 0}
!7677 = !{!"0000020900FBDA60.w64.b0", !7678, i64 0}
!7678 = !{!"0000020900FBDA60.w128.b0", !7679, i64 0}
!7679 = !{!"0000020900FBDA60.w256.b0", !7680, i64 0}
!7680 = !{!"0000020900FBDA60.w512.b0", !7681, i64 0}
!7681 = !{!"0000020900FBDA60.w1024.b0", !7682, i64 0}
!7682 = !{!"0000020900FBDA60", !21, i64 0}
!7683 = !{!7684, !7684, i64 0}
!7684 = !{!"0000020900FBDF20.w2.b0", !7685, i64 0}
!7685 = !{!"0000020900FBDF20.w4.b0", !7686, i64 0}
!7686 = !{!"0000020900FBDF20.w8.b0", !7687, i64 0}
!7687 = !{!"0000020900FBDF20.w16.b0", !7688, i64 0}
!7688 = !{!"0000020900FBDF20.w32.b0", !7689, i64 0}
!7689 = !{!"0000020900FBDF20.w64.b0", !7690, i64 0}
!7690 = !{!"0000020900FBDF20.w128.b0", !7691, i64 0}
!7691 = !{!"0000020900FBDF20.w256.b0", !7692, i64 0}
!7692 = !{!"0000020900FBDF20.w512.b0", !7693, i64 0}
!7693 = !{!"0000020900FBDF20.w1024.b0", !7694, i64 0}
!7694 = !{!"0000020900FBDF20", !21, i64 0}
!7695 = !{!7696, !7696, i64 0}
!7696 = !{!"0000020900F9E3E0.w8.b0", !7697, i64 0}
!7697 = !{!"0000020900F9E3E0.w16.b0", !7698, i64 0}
!7698 = !{!"0000020900F9E3E0.w32.b0", !7699, i64 0}
!7699 = !{!"0000020900F9E3E0.w64.b0", !7700, i64 0}
!7700 = !{!"0000020900F9E3E0.w128.b0", !7701, i64 0}
!7701 = !{!"0000020900F9E3E0.w256.b0", !7702, i64 0}
!7702 = !{!"0000020900F9E3E0.w512.b0", !7703, i64 0}
!7703 = !{!"0000020900F9E3E0.w1024.b0", !7704, i64 0}
!7704 = !{!"0000020900F9E3E0", !21, i64 0}
!7705 = !{!7706, !7706, i64 0}
!7706 = !{!"0000020900F9E3E0.w8.b8", !7697, i64 0}
!7707 = !{!7708, !7708, i64 0}
!7708 = !{!"0000020900F9E3E0.w8.b16", !7709, i64 0}
!7709 = !{!"0000020900F9E3E0.w16.b16", !7698, i64 0}
!7710 = !{!7711, !7711, i64 0}
!7711 = !{!"0000020900F9E3E0.w8.b24", !7709, i64 0}
!7712 = !{!7713, !7713, i64 0}
!7713 = !{!"0000020900F9E3E0.w8.b32", !7714, i64 0}
!7714 = !{!"0000020900F9E3E0.w16.b32", !7715, i64 0}
!7715 = !{!"0000020900F9E3E0.w32.b32", !7699, i64 0}
!7716 = !{!7717, !7717, i64 0}
!7717 = !{!"0000020900F9E3E0.w8.b40", !7714, i64 0}
!7718 = !{!7719, !7719, i64 0}
!7719 = !{!"0000020900F9E3E0.w8.b48", !7720, i64 0}
!7720 = !{!"0000020900F9E3E0.w16.b48", !7715, i64 0}
!7721 = !{!7722, !7722, i64 0}
!7722 = !{!"0000020900F9E3E0.w8.b56", !7720, i64 0}
!7723 = !{!7724, !7724, i64 0}
!7724 = !{!"0000020900F9E3E0.w8.b64", !7725, i64 0}
!7725 = !{!"0000020900F9E3E0.w16.b64", !7726, i64 0}
!7726 = !{!"0000020900F9E3E0.w32.b64", !7727, i64 0}
!7727 = !{!"0000020900F9E3E0.w64.b64", !7700, i64 0}
!7728 = !{!7729, !7729, i64 0}
!7729 = !{!"0000020900F9E3E0.w8.b72", !7725, i64 0}
!7730 = !{!7731, !7731, i64 0}
!7731 = !{!"0000020900F9E3E0.w8.b80", !7732, i64 0}
!7732 = !{!"0000020900F9E3E0.w16.b80", !7726, i64 0}
!7733 = !{!7734, !7734, i64 0}
!7734 = !{!"0000020900F9E3E0.w8.b88", !7732, i64 0}
!7735 = !{!7736, !7736, i64 0}
!7736 = !{!"0000020900F9E3E0.w8.b96", !7737, i64 0}
!7737 = !{!"0000020900F9E3E0.w16.b96", !7738, i64 0}
!7738 = !{!"0000020900F9E3E0.w32.b96", !7727, i64 0}
!7739 = !{!7740, !7740, i64 0}
!7740 = !{!"0000020900F9E3E0.w8.b104", !7737, i64 0}
!7741 = !{!7742, !7742, i64 0}
!7742 = !{!"0000020900F9E3E0.w8.b112", !7743, i64 0}
!7743 = !{!"0000020900F9E3E0.w16.b112", !7738, i64 0}
!7744 = !{!7745, !7745, i64 0}
!7745 = !{!"0000020900F9E3E0.w8.b120", !7743, i64 0}
!7746 = !{!7747, !7747, i64 0}
!7747 = !{!"0000020900F9E3E0.w8.b128", !7748, i64 0}
!7748 = !{!"0000020900F9E3E0.w16.b128", !7749, i64 0}
!7749 = !{!"0000020900F9E3E0.w32.b128", !7750, i64 0}
!7750 = !{!"0000020900F9E3E0.w64.b128", !7751, i64 0}
!7751 = !{!"0000020900F9E3E0.w128.b128", !7701, i64 0}
!7752 = !{!7753, !7753, i64 0}
!7753 = !{!"0000020900F9E3E0.w8.b136", !7748, i64 0}
!7754 = !{!7755, !7755, i64 0}
!7755 = !{!"0000020900F9E3E0.w8.b144", !7756, i64 0}
!7756 = !{!"0000020900F9E3E0.w16.b144", !7749, i64 0}
!7757 = !{!7758, !7758, i64 0}
!7758 = !{!"0000020900F9E3E0.w8.b152", !7756, i64 0}
!7759 = !{!7760, !7760, i64 0}
!7760 = !{!"0000020900F9E3E0.w8.b160", !7761, i64 0}
!7761 = !{!"0000020900F9E3E0.w16.b160", !7762, i64 0}
!7762 = !{!"0000020900F9E3E0.w32.b160", !7750, i64 0}
!7763 = !{!7764, !7764, i64 0}
!7764 = !{!"0000020900F9E3E0.w8.b168", !7761, i64 0}
!7765 = !{!7766, !7766, i64 0}
!7766 = !{!"0000020900F9E3E0.w8.b176", !7767, i64 0}
!7767 = !{!"0000020900F9E3E0.w16.b176", !7762, i64 0}
!7768 = !{!7769, !7769, i64 0}
!7769 = !{!"0000020900F9E3E0.w8.b184", !7767, i64 0}
!7770 = !{!7771, !7771, i64 0}
!7771 = !{!"0000020900F9E3E0.w8.b192", !7772, i64 0}
!7772 = !{!"0000020900F9E3E0.w16.b192", !7773, i64 0}
!7773 = !{!"0000020900F9E3E0.w32.b192", !7774, i64 0}
!7774 = !{!"0000020900F9E3E0.w64.b192", !7751, i64 0}
!7775 = !{!7776, !7776, i64 0}
!7776 = !{!"0000020900F9E3E0.w8.b200", !7772, i64 0}
!7777 = !{!7778, !7778, i64 0}
!7778 = !{!"0000020900F9E3E0.w8.b208", !7779, i64 0}
!7779 = !{!"0000020900F9E3E0.w16.b208", !7773, i64 0}
!7780 = !{!7781, !7781, i64 0}
!7781 = !{!"0000020900F9E3E0.w8.b216", !7779, i64 0}
!7782 = !{!7783, !7783, i64 0}
!7783 = !{!"0000020900FBD860", !21, i64 0}
!7784 = !{!7785, !7785, i64 0}
!7785 = !{!"0000020900FBDB60", !21, i64 0}
!7786 = !{!7704, !7704, i64 0}
!7787 = !{!7788, !7788, i64 0}
!7788 = !{!"0000020900FBD4E0", !21, i64 0}
!7789 = !{!7790, !7790, i64 0}
!7790 = !{!"0000020900FBB460", !21, i64 0}
!7791 = !{!7792, !7792, i64 0}
!7792 = !{!"0000020900FBDE60", !21, i64 0}
!7793 = !{!7794, !7794, i64 0}
!7794 = !{!"0000020900FBD2E0.w2.b0", !7795, i64 0}
!7795 = !{!"0000020900FBD2E0.w4.b0", !7796, i64 0}
!7796 = !{!"0000020900FBD2E0.w8.b0", !7797, i64 0}
!7797 = !{!"0000020900FBD2E0.w16.b0", !7798, i64 0}
!7798 = !{!"0000020900FBD2E0.w32.b0", !7799, i64 0}
!7799 = !{!"0000020900FBD2E0.w64.b0", !7800, i64 0}
!7800 = !{!"0000020900FBD2E0.w128.b0", !7801, i64 0}
!7801 = !{!"0000020900FBD2E0.w256.b0", !7802, i64 0}
!7802 = !{!"0000020900FBD2E0.w512.b0", !7803, i64 0}
!7803 = !{!"0000020900FBD2E0.w1024.b0", !7804, i64 0}
!7804 = !{!"0000020900FBD2E0", !21, i64 0}
!7805 = !{!7806, !7806, i64 0}
!7806 = !{!"0000020900FBD6A0.w2.b0", !7807, i64 0}
!7807 = !{!"0000020900FBD6A0.w4.b0", !7808, i64 0}
!7808 = !{!"0000020900FBD6A0.w8.b0", !7809, i64 0}
!7809 = !{!"0000020900FBD6A0.w16.b0", !7810, i64 0}
!7810 = !{!"0000020900FBD6A0.w32.b0", !7811, i64 0}
!7811 = !{!"0000020900FBD6A0.w64.b0", !7812, i64 0}
!7812 = !{!"0000020900FBD6A0.w128.b0", !7813, i64 0}
!7813 = !{!"0000020900FBD6A0.w256.b0", !7814, i64 0}
!7814 = !{!"0000020900FBD6A0.w512.b0", !7815, i64 0}
!7815 = !{!"0000020900FBD6A0.w1024.b0", !7816, i64 0}
!7816 = !{!"0000020900FBD6A0", !21, i64 0}
!7817 = !{!7818, !7818, i64 0}
!7818 = !{!"0000020900FBD160", !21, i64 0}
!7819 = !{!7820, !7820, i64 0}
!7820 = !{!"0000020900FBDEA0", !21, i64 0}
!7821 = !{!7822, !7822, i64 0}
!7822 = !{!"0000020905A2D2A0.w2.b0", !7823, i64 0}
!7823 = !{!"0000020905A2D2A0.w4.b0", !7824, i64 0}
!7824 = !{!"0000020905A2D2A0.w8.b0", !7825, i64 0}
!7825 = !{!"0000020905A2D2A0.w16.b0", !7826, i64 0}
!7826 = !{!"0000020905A2D2A0.w32.b0", !7827, i64 0}
!7827 = !{!"0000020905A2D2A0.w64.b0", !7828, i64 0}
!7828 = !{!"0000020905A2D2A0.w128.b0", !7829, i64 0}
!7829 = !{!"0000020905A2D2A0.w256.b0", !7830, i64 0}
!7830 = !{!"0000020905A2D2A0.w512.b0", !7831, i64 0}
!7831 = !{!"0000020905A2D2A0.w1024.b0", !7832, i64 0}
!7832 = !{!"0000020905A2D2A0", !21, i64 0}
!7833 = !{!7834, !7834, i64 0}
!7834 = !{!"0000020905A2DAE0.w2.b0", !7835, i64 0}
!7835 = !{!"0000020905A2DAE0.w4.b0", !7836, i64 0}
!7836 = !{!"0000020905A2DAE0.w8.b0", !7837, i64 0}
!7837 = !{!"0000020905A2DAE0.w16.b0", !7838, i64 0}
!7838 = !{!"0000020905A2DAE0.w32.b0", !7839, i64 0}
!7839 = !{!"0000020905A2DAE0.w64.b0", !7840, i64 0}
!7840 = !{!"0000020905A2DAE0.w128.b0", !7841, i64 0}
!7841 = !{!"0000020905A2DAE0.w256.b0", !7842, i64 0}
!7842 = !{!"0000020905A2DAE0.w512.b0", !7843, i64 0}
!7843 = !{!"0000020905A2DAE0.w1024.b0", !7844, i64 0}
!7844 = !{!"0000020905A2DAE0", !21, i64 0}
!7845 = !{!7846, !7846, i64 0}
!7846 = !{!"0000020905A2DB20", !21, i64 0}
!7847 = !{!7848, !7848, i64 0}
!7848 = !{!"0000020905A2E060", !21, i64 0}
!7849 = !{!7850, !7850, i64 0}
!7850 = !{!"0000020905A2D7E0", !21, i64 0}
!7851 = !{!7852, !7852, i64 0}
!7852 = !{!"0000020905A1D7E0.w2.b0", !7853, i64 0}
!7853 = !{!"0000020905A1D7E0.w4.b0", !7854, i64 0}
!7854 = !{!"0000020905A1D7E0.w8.b0", !7855, i64 0}
!7855 = !{!"0000020905A1D7E0.w16.b0", !7856, i64 0}
!7856 = !{!"0000020905A1D7E0.w32.b0", !7857, i64 0}
!7857 = !{!"0000020905A1D7E0.w64.b0", !7858, i64 0}
!7858 = !{!"0000020905A1D7E0.w128.b0", !7859, i64 0}
!7859 = !{!"0000020905A1D7E0.w256.b0", !7860, i64 0}
!7860 = !{!"0000020905A1D7E0.w512.b0", !7861, i64 0}
!7861 = !{!"0000020905A1D7E0.w1024.b0", !7862, i64 0}
!7862 = !{!"0000020905A1D7E0", !21, i64 0}
!7863 = !{!7864, !7864, i64 0}
!7864 = !{!"0000020905A1DBA0.w2.b0", !7865, i64 0}
!7865 = !{!"0000020905A1DBA0.w4.b0", !7866, i64 0}
!7866 = !{!"0000020905A1DBA0.w8.b0", !7867, i64 0}
!7867 = !{!"0000020905A1DBA0.w16.b0", !7868, i64 0}
!7868 = !{!"0000020905A1DBA0.w32.b0", !7869, i64 0}
!7869 = !{!"0000020905A1DBA0.w64.b0", !7870, i64 0}
!7870 = !{!"0000020905A1DBA0.w128.b0", !7871, i64 0}
!7871 = !{!"0000020905A1DBA0.w256.b0", !7872, i64 0}
!7872 = !{!"0000020905A1DBA0.w512.b0", !7873, i64 0}
!7873 = !{!"0000020905A1DBA0.w1024.b0", !7874, i64 0}
!7874 = !{!"0000020905A1DBA0", !21, i64 0}
!7875 = !{!7876, !7876, i64 0}
!7876 = !{!"0000020905A1E120", !21, i64 0}
!7877 = !{!7878, !7878, i64 0}
!7878 = !{!"0000020905A1D360", !21, i64 0}
!7879 = !{!7880, !7880, i64 0}
!7880 = !{!"0000020905A1D6E0", !21, i64 0}
!7881 = !{!7882, !7882, i64 0}
!7882 = !{!"0000020905B51CE0.w2.b0", !7883, i64 0}
!7883 = !{!"0000020905B51CE0.w4.b0", !7884, i64 0}
!7884 = !{!"0000020905B51CE0.w8.b0", !7885, i64 0}
!7885 = !{!"0000020905B51CE0.w16.b0", !7886, i64 0}
!7886 = !{!"0000020905B51CE0.w32.b0", !7887, i64 0}
!7887 = !{!"0000020905B51CE0.w64.b0", !7888, i64 0}
!7888 = !{!"0000020905B51CE0.w128.b0", !7889, i64 0}
!7889 = !{!"0000020905B51CE0.w256.b0", !7890, i64 0}
!7890 = !{!"0000020905B51CE0.w512.b0", !7891, i64 0}
!7891 = !{!"0000020905B51CE0.w1024.b0", !7892, i64 0}
!7892 = !{!"0000020905B51CE0", !21, i64 0}
!7893 = !{!7894, !7894, i64 0}
!7894 = !{!"0000020905B519A0.w2.b0", !7895, i64 0}
!7895 = !{!"0000020905B519A0.w4.b0", !7896, i64 0}
!7896 = !{!"0000020905B519A0.w8.b0", !7897, i64 0}
!7897 = !{!"0000020905B519A0.w16.b0", !7898, i64 0}
!7898 = !{!"0000020905B519A0.w32.b0", !7899, i64 0}
!7899 = !{!"0000020905B519A0.w64.b0", !7900, i64 0}
!7900 = !{!"0000020905B519A0.w128.b0", !7901, i64 0}
!7901 = !{!"0000020905B519A0.w256.b0", !7902, i64 0}
!7902 = !{!"0000020905B519A0.w512.b0", !7903, i64 0}
!7903 = !{!"0000020905B519A0.w1024.b0", !7904, i64 0}
!7904 = !{!"0000020905B519A0", !21, i64 0}
!7905 = !{!7906, !7906, i64 0}
!7906 = !{!"0000020905B51AE0", !21, i64 0}
!7907 = !{!7908, !7908, i64 0}
!7908 = !{!"0000020905B51920", !21, i64 0}
!7909 = !{!7910, !7910, i64 0}
!7910 = !{!"0000020905B51620", !21, i64 0}
!7911 = !{!7912, !7912, i64 0}
!7912 = !{!"0000020900F62270", !21, i64 0}
!7913 = !{!7914, !7914, i64 0}
!7914 = !{!"0000020900F63730", !21, i64 0}
!7915 = !{!7916, !7916, i64 0}
!7916 = !{!"0000020900F64030.w2.b0", !7917, i64 0}
!7917 = !{!"0000020900F64030.w4.b0", !7918, i64 0}
!7918 = !{!"0000020900F64030.w8.b0", !7919, i64 0}
!7919 = !{!"0000020900F64030.w16.b0", !7920, i64 0}
!7920 = !{!"0000020900F64030.w32.b0", !7921, i64 0}
!7921 = !{!"0000020900F64030.w64.b0", !7922, i64 0}
!7922 = !{!"0000020900F64030.w128.b0", !7923, i64 0}
!7923 = !{!"0000020900F64030.w256.b0", !7924, i64 0}
!7924 = !{!"0000020900F64030.w512.b0", !7925, i64 0}
!7925 = !{!"0000020900F64030.w1024.b0", !7926, i64 0}
!7926 = !{!"0000020900F64030", !21, i64 0}
!7927 = !{!7928, !7928, i64 0}
!7928 = !{!"0000020900F633F0.w2.b0", !7929, i64 0}
!7929 = !{!"0000020900F633F0.w4.b0", !7930, i64 0}
!7930 = !{!"0000020900F633F0.w8.b0", !7931, i64 0}
!7931 = !{!"0000020900F633F0.w16.b0", !7932, i64 0}
!7932 = !{!"0000020900F633F0.w32.b0", !7933, i64 0}
!7933 = !{!"0000020900F633F0.w64.b0", !7934, i64 0}
!7934 = !{!"0000020900F633F0.w128.b0", !7935, i64 0}
!7935 = !{!"0000020900F633F0.w256.b0", !7936, i64 0}
!7936 = !{!"0000020900F633F0.w512.b0", !7937, i64 0}
!7937 = !{!"0000020900F633F0.w1024.b0", !7938, i64 0}
!7938 = !{!"0000020900F633F0", !21, i64 0}
!7939 = !{!7940, !7940, i64 0}
!7940 = !{!"0000020900F63230", !21, i64 0}
!7941 = !{!7942, !7942, i64 0}
!7942 = !{!"0000020900F633B0", !21, i64 0}
!7943 = !{!7944, !7944, i64 0}
!7944 = !{!"0000020905C74BE0.w2.b0", !7945, i64 0}
!7945 = !{!"0000020905C74BE0.w4.b0", !7946, i64 0}
!7946 = !{!"0000020905C74BE0.w8.b0", !7947, i64 0}
!7947 = !{!"0000020905C74BE0.w16.b0", !7948, i64 0}
!7948 = !{!"0000020905C74BE0.w32.b0", !7949, i64 0}
!7949 = !{!"0000020905C74BE0.w64.b0", !7950, i64 0}
!7950 = !{!"0000020905C74BE0.w128.b0", !7951, i64 0}
!7951 = !{!"0000020905C74BE0.w256.b0", !7952, i64 0}
!7952 = !{!"0000020905C74BE0.w512.b0", !7953, i64 0}
!7953 = !{!"0000020905C74BE0.w1024.b0", !7954, i64 0}
!7954 = !{!"0000020905C74BE0", !21, i64 0}
!7955 = !{!7956, !7956, i64 0}
!7956 = !{!"0000020905C748E0.w2.b0", !7957, i64 0}
!7957 = !{!"0000020905C748E0.w4.b0", !7958, i64 0}
!7958 = !{!"0000020905C748E0.w8.b0", !7959, i64 0}
!7959 = !{!"0000020905C748E0.w16.b0", !7960, i64 0}
!7960 = !{!"0000020905C748E0.w32.b0", !7961, i64 0}
!7961 = !{!"0000020905C748E0.w64.b0", !7962, i64 0}
!7962 = !{!"0000020905C748E0.w128.b0", !7963, i64 0}
!7963 = !{!"0000020905C748E0.w256.b0", !7964, i64 0}
!7964 = !{!"0000020905C748E0.w512.b0", !7965, i64 0}
!7965 = !{!"0000020905C748E0.w1024.b0", !7966, i64 0}
!7966 = !{!"0000020905C748E0", !21, i64 0}
!7967 = !{!7968, !7968, i64 0}
!7968 = !{!"0000020905C74620", !21, i64 0}
!7969 = !{!7970, !7970, i64 0}
!7970 = !{!"0000020905C746E0", !21, i64 0}
!7971 = !{!7972, !7972, i64 0}
!7972 = !{!"0000020905C74560", !21, i64 0}
!7973 = !{!7974, !7974, i64 0}
!7974 = !{!"0000020905C6CBE0", !21, i64 0}
!7975 = !{!7976, !7976, i64 0}
!7976 = !{!"0000020905C6D260", !21, i64 0}
!7977 = !{!7978, !7978, i64 0}
!7978 = !{!"0000020905C6DAA0.w2.b0", !7979, i64 0}
!7979 = !{!"0000020905C6DAA0.w4.b0", !7980, i64 0}
!7980 = !{!"0000020905C6DAA0.w8.b0", !7981, i64 0}
!7981 = !{!"0000020905C6DAA0.w16.b0", !7982, i64 0}
!7982 = !{!"0000020905C6DAA0.w32.b0", !7983, i64 0}
!7983 = !{!"0000020905C6DAA0.w64.b0", !7984, i64 0}
!7984 = !{!"0000020905C6DAA0.w128.b0", !7985, i64 0}
!7985 = !{!"0000020905C6DAA0.w256.b0", !7986, i64 0}
!7986 = !{!"0000020905C6DAA0.w512.b0", !7987, i64 0}
!7987 = !{!"0000020905C6DAA0.w1024.b0", !7988, i64 0}
!7988 = !{!"0000020905C6DAA0", !21, i64 0}
!7989 = !{!7990, !7990, i64 0}
!7990 = !{!"0000020905C6D420.w2.b0", !7991, i64 0}
!7991 = !{!"0000020905C6D420.w4.b0", !7992, i64 0}
!7992 = !{!"0000020905C6D420.w8.b0", !7993, i64 0}
!7993 = !{!"0000020905C6D420.w16.b0", !7994, i64 0}
!7994 = !{!"0000020905C6D420.w32.b0", !7995, i64 0}
!7995 = !{!"0000020905C6D420.w64.b0", !7996, i64 0}
!7996 = !{!"0000020905C6D420.w128.b0", !7997, i64 0}
!7997 = !{!"0000020905C6D420.w256.b0", !7998, i64 0}
!7998 = !{!"0000020905C6D420.w512.b0", !7999, i64 0}
!7999 = !{!"0000020905C6D420.w1024.b0", !8000, i64 0}
!8000 = !{!"0000020905C6D420", !21, i64 0}
!8001 = !{!8002, !8002, i64 0}
!8002 = !{!"0000020905C6D460", !21, i64 0}
!8003 = !{!8004, !8004, i64 0}
!8004 = !{!"0000020905C6D3E0", !21, i64 0}
!8005 = !{!8006, !8006, i64 0}
!8006 = !{!"0000020905D5C6A0.w2.b0", !8007, i64 0}
!8007 = !{!"0000020905D5C6A0.w4.b0", !8008, i64 0}
!8008 = !{!"0000020905D5C6A0.w8.b0", !8009, i64 0}
!8009 = !{!"0000020905D5C6A0.w16.b0", !8010, i64 0}
!8010 = !{!"0000020905D5C6A0.w32.b0", !8011, i64 0}
!8011 = !{!"0000020905D5C6A0.w64.b0", !8012, i64 0}
!8012 = !{!"0000020905D5C6A0.w128.b0", !8013, i64 0}
!8013 = !{!"0000020905D5C6A0.w256.b0", !8014, i64 0}
!8014 = !{!"0000020905D5C6A0.w512.b0", !8015, i64 0}
!8015 = !{!"0000020905D5C6A0.w1024.b0", !8016, i64 0}
!8016 = !{!"0000020905D5C6A0", !21, i64 0}
!8017 = !{!8018, !8018, i64 0}
!8018 = !{!"0000020905D5C4E0.w2.b0", !8019, i64 0}
!8019 = !{!"0000020905D5C4E0.w4.b0", !8020, i64 0}
!8020 = !{!"0000020905D5C4E0.w8.b0", !8021, i64 0}
!8021 = !{!"0000020905D5C4E0.w16.b0", !8022, i64 0}
!8022 = !{!"0000020905D5C4E0.w32.b0", !8023, i64 0}
!8023 = !{!"0000020905D5C4E0.w64.b0", !8024, i64 0}
!8024 = !{!"0000020905D5C4E0.w128.b0", !8025, i64 0}
!8025 = !{!"0000020905D5C4E0.w256.b0", !8026, i64 0}
!8026 = !{!"0000020905D5C4E0.w512.b0", !8027, i64 0}
!8027 = !{!"0000020905D5C4E0.w1024.b0", !8028, i64 0}
!8028 = !{!"0000020905D5C4E0", !21, i64 0}
!8029 = !{!8030, !8030, i64 0}
!8030 = !{!"0000020905D5CC60", !21, i64 0}
!8031 = !{!8032, !8032, i64 0}
!8032 = !{!"0000020905D5D120", !21, i64 0}
!8033 = !{!8034, !8034, i64 0}
!8034 = !{!"0000020905D5C1E0", !21, i64 0}
!8035 = !{!8036, !8036, i64 0}
!8036 = !{!"0000020905D67160.w2.b0", !8037, i64 0}
!8037 = !{!"0000020905D67160.w4.b0", !8038, i64 0}
!8038 = !{!"0000020905D67160.w8.b0", !8039, i64 0}
!8039 = !{!"0000020905D67160.w16.b0", !8040, i64 0}
!8040 = !{!"0000020905D67160.w32.b0", !8041, i64 0}
!8041 = !{!"0000020905D67160.w64.b0", !8042, i64 0}
!8042 = !{!"0000020905D67160.w128.b0", !8043, i64 0}
!8043 = !{!"0000020905D67160.w256.b0", !8044, i64 0}
!8044 = !{!"0000020905D67160.w512.b0", !8045, i64 0}
!8045 = !{!"0000020905D67160.w1024.b0", !8046, i64 0}
!8046 = !{!"0000020905D67160", !21, i64 0}
!8047 = !{!8048, !8048, i64 0}
!8048 = !{!"0000020905D674E0.w2.b0", !8049, i64 0}
!8049 = !{!"0000020905D674E0.w4.b0", !8050, i64 0}
!8050 = !{!"0000020905D674E0.w8.b0", !8051, i64 0}
!8051 = !{!"0000020905D674E0.w16.b0", !8052, i64 0}
!8052 = !{!"0000020905D674E0.w32.b0", !8053, i64 0}
!8053 = !{!"0000020905D674E0.w64.b0", !8054, i64 0}
!8054 = !{!"0000020905D674E0.w128.b0", !8055, i64 0}
!8055 = !{!"0000020905D674E0.w256.b0", !8056, i64 0}
!8056 = !{!"0000020905D674E0.w512.b0", !8057, i64 0}
!8057 = !{!"0000020905D674E0.w1024.b0", !8058, i64 0}
!8058 = !{!"0000020905D674E0", !21, i64 0}
!8059 = !{!8060, !8060, i64 0}
!8060 = !{!"0000020905D67320", !21, i64 0}
!8061 = !{!8062, !8062, i64 0}
!8062 = !{!"0000020905D68120", !21, i64 0}
!8063 = !{!8064, !8064, i64 0}
!8064 = !{!"0000020905D680A0", !21, i64 0}
!8065 = !{!8066, !8066, i64 0}
!8066 = !{!"00000209001B20F0.w2.b0", !8067, i64 0}
!8067 = !{!"00000209001B20F0.w4.b0", !8068, i64 0}
!8068 = !{!"00000209001B20F0.w8.b0", !8069, i64 0}
!8069 = !{!"00000209001B20F0.w16.b0", !8070, i64 0}
!8070 = !{!"00000209001B20F0.w32.b0", !8071, i64 0}
!8071 = !{!"00000209001B20F0.w64.b0", !8072, i64 0}
!8072 = !{!"00000209001B20F0.w128.b0", !8073, i64 0}
!8073 = !{!"00000209001B20F0.w256.b0", !8074, i64 0}
!8074 = !{!"00000209001B20F0.w512.b0", !8075, i64 0}
!8075 = !{!"00000209001B20F0.w1024.b0", !8076, i64 0}
!8076 = !{!"00000209001B20F0", !21, i64 0}
!8077 = !{!8078, !8078, i64 0}
!8078 = !{!"00000209001B2EB0.w2.b0", !8079, i64 0}
!8079 = !{!"00000209001B2EB0.w4.b0", !8080, i64 0}
!8080 = !{!"00000209001B2EB0.w8.b0", !8081, i64 0}
!8081 = !{!"00000209001B2EB0.w16.b0", !8082, i64 0}
!8082 = !{!"00000209001B2EB0.w32.b0", !8083, i64 0}
!8083 = !{!"00000209001B2EB0.w64.b0", !8084, i64 0}
!8084 = !{!"00000209001B2EB0.w128.b0", !8085, i64 0}
!8085 = !{!"00000209001B2EB0.w256.b0", !8086, i64 0}
!8086 = !{!"00000209001B2EB0.w512.b0", !8087, i64 0}
!8087 = !{!"00000209001B2EB0.w1024.b0", !8088, i64 0}
!8088 = !{!"00000209001B2EB0", !21, i64 0}
!8089 = !{!8090, !8090, i64 0}
!8090 = !{!"00000209001A7930", !21, i64 0}
!8091 = !{!8092, !8092, i64 0}
!8092 = !{!"00000209001B2730", !21, i64 0}
!8093 = !{!8094, !8094, i64 0}
!8094 = !{!"00000209001B2CF0", !21, i64 0}
!8095 = !{!8096, !8096, i64 0}
!8096 = !{!"00000209001B2F70", !21, i64 0}
!8097 = !{!8098, !8098, i64 0}
!8098 = !{!"0000020905D72E20.w2.b0", !8099, i64 0}
!8099 = !{!"0000020905D72E20.w4.b0", !8100, i64 0}
!8100 = !{!"0000020905D72E20.w8.b0", !8101, i64 0}
!8101 = !{!"0000020905D72E20.w16.b0", !8102, i64 0}
!8102 = !{!"0000020905D72E20.w32.b0", !8103, i64 0}
!8103 = !{!"0000020905D72E20.w64.b0", !8104, i64 0}
!8104 = !{!"0000020905D72E20.w128.b0", !8105, i64 0}
!8105 = !{!"0000020905D72E20.w256.b0", !8106, i64 0}
!8106 = !{!"0000020905D72E20.w512.b0", !8107, i64 0}
!8107 = !{!"0000020905D72E20.w1024.b0", !8108, i64 0}
!8108 = !{!"0000020905D72E20", !21, i64 0}
!8109 = !{!8110, !8110, i64 0}
!8110 = !{!"0000020905D72C20.w2.b0", !8111, i64 0}
!8111 = !{!"0000020905D72C20.w4.b0", !8112, i64 0}
!8112 = !{!"0000020905D72C20.w8.b0", !8113, i64 0}
!8113 = !{!"0000020905D72C20.w16.b0", !8114, i64 0}
!8114 = !{!"0000020905D72C20.w32.b0", !8115, i64 0}
!8115 = !{!"0000020905D72C20.w64.b0", !8116, i64 0}
!8116 = !{!"0000020905D72C20.w128.b0", !8117, i64 0}
!8117 = !{!"0000020905D72C20.w256.b0", !8118, i64 0}
!8118 = !{!"0000020905D72C20.w512.b0", !8119, i64 0}
!8119 = !{!"0000020905D72C20.w1024.b0", !8120, i64 0}
!8120 = !{!"0000020905D72C20", !21, i64 0}
!8121 = !{!8122, !8122, i64 0}
!8122 = !{!"0000020905D724A0", !21, i64 0}
!8123 = !{!8124, !8124, i64 0}
!8124 = !{!"0000020905D72BA0", !21, i64 0}
!8125 = !{!8126, !8126, i64 0}
!8126 = !{!"0000020905D72360", !21, i64 0}
!8127 = !{!8128, !8128, i64 0}
!8128 = !{!"0000020905D7A0A0", !21, i64 0}
!8129 = !{!8130, !8130, i64 0}
!8130 = !{!"0000020905D79AA0", !21, i64 0}
!8131 = !{!8132, !8132, i64 0}
!8132 = !{!"0000020905D797E0.w2.b0", !8133, i64 0}
!8133 = !{!"0000020905D797E0.w4.b0", !8134, i64 0}
!8134 = !{!"0000020905D797E0.w8.b0", !8135, i64 0}
!8135 = !{!"0000020905D797E0.w16.b0", !8136, i64 0}
!8136 = !{!"0000020905D797E0.w32.b0", !8137, i64 0}
!8137 = !{!"0000020905D797E0.w64.b0", !8138, i64 0}
!8138 = !{!"0000020905D797E0.w128.b0", !8139, i64 0}
!8139 = !{!"0000020905D797E0.w256.b0", !8140, i64 0}
!8140 = !{!"0000020905D797E0.w512.b0", !8141, i64 0}
!8141 = !{!"0000020905D797E0.w1024.b0", !8142, i64 0}
!8142 = !{!"0000020905D797E0", !21, i64 0}
!8143 = !{!8144, !8144, i64 0}
!8144 = !{!"0000020905D795E0.w2.b0", !8145, i64 0}
!8145 = !{!"0000020905D795E0.w4.b0", !8146, i64 0}
!8146 = !{!"0000020905D795E0.w8.b0", !8147, i64 0}
!8147 = !{!"0000020905D795E0.w16.b0", !8148, i64 0}
!8148 = !{!"0000020905D795E0.w32.b0", !8149, i64 0}
!8149 = !{!"0000020905D795E0.w64.b0", !8150, i64 0}
!8150 = !{!"0000020905D795E0.w128.b0", !8151, i64 0}
!8151 = !{!"0000020905D795E0.w256.b0", !8152, i64 0}
!8152 = !{!"0000020905D795E0.w512.b0", !8153, i64 0}
!8153 = !{!"0000020905D795E0.w1024.b0", !8154, i64 0}
!8154 = !{!"0000020905D795E0", !21, i64 0}
!8155 = !{!8156, !8156, i64 0}
!8156 = !{!"0000020905D79D60", !21, i64 0}
!8157 = !{!8158, !8158, i64 0}
!8158 = !{!"0000020905D7A120", !21, i64 0}
!8159 = !{!8160, !8160, i64 0}
!8160 = !{!"0000020900CD3E20.w2.b0", !8161, i64 0}
!8161 = !{!"0000020900CD3E20.w4.b0", !8162, i64 0}
!8162 = !{!"0000020900CD3E20.w8.b0", !8163, i64 0}
!8163 = !{!"0000020900CD3E20.w16.b0", !8164, i64 0}
!8164 = !{!"0000020900CD3E20.w32.b0", !8165, i64 0}
!8165 = !{!"0000020900CD3E20.w64.b0", !8166, i64 0}
!8166 = !{!"0000020900CD3E20.w128.b0", !8167, i64 0}
!8167 = !{!"0000020900CD3E20.w256.b0", !8168, i64 0}
!8168 = !{!"0000020900CD3E20.w512.b0", !8169, i64 0}
!8169 = !{!"0000020900CD3E20.w1024.b0", !8170, i64 0}
!8170 = !{!"0000020900CD3E20", !21, i64 0}
!8171 = !{!8172, !8172, i64 0}
!8172 = !{!"0000020900CD3220.w2.b0", !8173, i64 0}
!8173 = !{!"0000020900CD3220.w4.b0", !8174, i64 0}
!8174 = !{!"0000020900CD3220.w8.b0", !8175, i64 0}
!8175 = !{!"0000020900CD3220.w16.b0", !8176, i64 0}
!8176 = !{!"0000020900CD3220.w32.b0", !8177, i64 0}
!8177 = !{!"0000020900CD3220.w64.b0", !8178, i64 0}
!8178 = !{!"0000020900CD3220.w128.b0", !8179, i64 0}
!8179 = !{!"0000020900CD3220.w256.b0", !8180, i64 0}
!8180 = !{!"0000020900CD3220.w512.b0", !8181, i64 0}
!8181 = !{!"0000020900CD3220.w1024.b0", !8182, i64 0}
!8182 = !{!"0000020900CD3220", !21, i64 0}
!8183 = !{!8184, !8184, i64 0}
!8184 = !{!"0000020900CE72E0", !21, i64 0}
!8185 = !{!8186, !8186, i64 0}
!8186 = !{!"0000020900CD3520", !21, i64 0}
!8187 = !{!8188, !8188, i64 0}
!8188 = !{!"0000020900CD3D60", !21, i64 0}
!8189 = !{!8190, !8190, i64 0}
!8190 = !{!"0000020900CD33E0", !21, i64 0}
!8191 = !{!8192, !8192, i64 0}
!8192 = !{!"0000020900D3D5B0.w2.b0", !8193, i64 0}
!8193 = !{!"0000020900D3D5B0.w4.b0", !8194, i64 0}
!8194 = !{!"0000020900D3D5B0.w8.b0", !8195, i64 0}
!8195 = !{!"0000020900D3D5B0.w16.b0", !8196, i64 0}
!8196 = !{!"0000020900D3D5B0.w32.b0", !8197, i64 0}
!8197 = !{!"0000020900D3D5B0.w64.b0", !8198, i64 0}
!8198 = !{!"0000020900D3D5B0.w128.b0", !8199, i64 0}
!8199 = !{!"0000020900D3D5B0.w256.b0", !8200, i64 0}
!8200 = !{!"0000020900D3D5B0.w512.b0", !8201, i64 0}
!8201 = !{!"0000020900D3D5B0.w1024.b0", !8202, i64 0}
!8202 = !{!"0000020900D3D5B0", !21, i64 0}
!8203 = !{!8204, !8204, i64 0}
!8204 = !{!"0000020900D3DA30.w2.b0", !8205, i64 0}
!8205 = !{!"0000020900D3DA30.w4.b0", !8206, i64 0}
!8206 = !{!"0000020900D3DA30.w8.b0", !8207, i64 0}
!8207 = !{!"0000020900D3DA30.w16.b0", !8208, i64 0}
!8208 = !{!"0000020900D3DA30.w32.b0", !8209, i64 0}
!8209 = !{!"0000020900D3DA30.w64.b0", !8210, i64 0}
!8210 = !{!"0000020900D3DA30.w128.b0", !8211, i64 0}
!8211 = !{!"0000020900D3DA30.w256.b0", !8212, i64 0}
!8212 = !{!"0000020900D3DA30.w512.b0", !8213, i64 0}
!8213 = !{!"0000020900D3DA30.w1024.b0", !8214, i64 0}
!8214 = !{!"0000020900D3DA30", !21, i64 0}
!8215 = !{!8216, !8216, i64 0}
!8216 = !{!"0000020900D3FA70", !21, i64 0}
!8217 = !{!8218, !8218, i64 0}
!8218 = !{!"0000020900D3D5F0", !21, i64 0}
!8219 = !{!8220, !8220, i64 0}
!8220 = !{!"0000020900D3D1B0", !21, i64 0}
!8221 = !{!8222, !8222, i64 0}
!8222 = !{!"0000020900D3D770", !21, i64 0}
!8223 = !{!8224, !8224, i64 0}
!8224 = !{!"0000020900DFE8E0", !21, i64 0}
!8225 = !{!8226, !8226, i64 0}
!8226 = !{!"0000020900DFFC20", !21, i64 0}
!8227 = distinct !{!8227, !8228}
!8228 = !{!"llvm.loop.peeled.count", i32 1}
!8229 = !{!8230, !8230, i64 0}
!8230 = !{!"0000020900DFF6E0.w2.b0", !8231, i64 0}
!8231 = !{!"0000020900DFF6E0.w4.b0", !8232, i64 0}
!8232 = !{!"0000020900DFF6E0.w8.b0", !8233, i64 0}
!8233 = !{!"0000020900DFF6E0.w16.b0", !8234, i64 0}
!8234 = !{!"0000020900DFF6E0.w32.b0", !8235, i64 0}
!8235 = !{!"0000020900DFF6E0.w64.b0", !8236, i64 0}
!8236 = !{!"0000020900DFF6E0.w128.b0", !8237, i64 0}
!8237 = !{!"0000020900DFF6E0.w256.b0", !8238, i64 0}
!8238 = !{!"0000020900DFF6E0.w512.b0", !8239, i64 0}
!8239 = !{!"0000020900DFF6E0.w1024.b0", !8240, i64 0}
!8240 = !{!"0000020900DFF6E0", !21, i64 0}
!8241 = !{!8242, !8242, i64 0}
!8242 = !{!"0000020900DFFF20.w2.b0", !8243, i64 0}
!8243 = !{!"0000020900DFFF20.w4.b0", !8244, i64 0}
!8244 = !{!"0000020900DFFF20.w8.b0", !8245, i64 0}
!8245 = !{!"0000020900DFFF20.w16.b0", !8246, i64 0}
!8246 = !{!"0000020900DFFF20.w32.b0", !8247, i64 0}
!8247 = !{!"0000020900DFFF20.w64.b0", !8248, i64 0}
!8248 = !{!"0000020900DFFF20.w128.b0", !8249, i64 0}
!8249 = !{!"0000020900DFFF20.w256.b0", !8250, i64 0}
!8250 = !{!"0000020900DFFF20.w512.b0", !8251, i64 0}
!8251 = !{!"0000020900DFFF20.w1024.b0", !8252, i64 0}
!8252 = !{!"0000020900DFFF20", !21, i64 0}
!8253 = !{!8254, !8254, i64 0}
!8254 = !{!"0000020900DE1660.w8.b0", !8255, i64 0}
!8255 = !{!"0000020900DE1660.w16.b0", !8256, i64 0}
!8256 = !{!"0000020900DE1660.w32.b0", !8257, i64 0}
!8257 = !{!"0000020900DE1660.w64.b0", !8258, i64 0}
!8258 = !{!"0000020900DE1660.w128.b0", !8259, i64 0}
!8259 = !{!"0000020900DE1660.w256.b0", !8260, i64 0}
!8260 = !{!"0000020900DE1660.w512.b0", !8261, i64 0}
!8261 = !{!"0000020900DE1660.w1024.b0", !8262, i64 0}
!8262 = !{!"0000020900DE1660", !21, i64 0}
!8263 = !{!8264, !8264, i64 0}
!8264 = !{!"0000020900DE1660.w8.b8", !8255, i64 0}
!8265 = !{!8266, !8266, i64 0}
!8266 = !{!"0000020900DE1660.w8.b16", !8267, i64 0}
!8267 = !{!"0000020900DE1660.w16.b16", !8256, i64 0}
!8268 = !{!8269, !8269, i64 0}
!8269 = !{!"0000020900DE1660.w8.b24", !8267, i64 0}
!8270 = !{!8271, !8271, i64 0}
!8271 = !{!"0000020900DE1660.w8.b32", !8272, i64 0}
!8272 = !{!"0000020900DE1660.w16.b32", !8273, i64 0}
!8273 = !{!"0000020900DE1660.w32.b32", !8257, i64 0}
!8274 = !{!8275, !8275, i64 0}
!8275 = !{!"0000020900DE1660.w8.b40", !8272, i64 0}
!8276 = !{!8277, !8277, i64 0}
!8277 = !{!"0000020900DE1660.w8.b48", !8278, i64 0}
!8278 = !{!"0000020900DE1660.w16.b48", !8273, i64 0}
!8279 = !{!8280, !8280, i64 0}
!8280 = !{!"0000020900DE1660.w8.b56", !8278, i64 0}
!8281 = !{!8282, !8282, i64 0}
!8282 = !{!"0000020900DE1660.w8.b64", !8283, i64 0}
!8283 = !{!"0000020900DE1660.w16.b64", !8284, i64 0}
!8284 = !{!"0000020900DE1660.w32.b64", !8285, i64 0}
!8285 = !{!"0000020900DE1660.w64.b64", !8258, i64 0}
!8286 = !{!8287, !8287, i64 0}
!8287 = !{!"0000020900DE1660.w8.b72", !8283, i64 0}
!8288 = !{!8289, !8289, i64 0}
!8289 = !{!"0000020900DE1660.w8.b80", !8290, i64 0}
!8290 = !{!"0000020900DE1660.w16.b80", !8284, i64 0}
!8291 = !{!8292, !8292, i64 0}
!8292 = !{!"0000020900DE1660.w8.b88", !8290, i64 0}
!8293 = !{!8294, !8294, i64 0}
!8294 = !{!"0000020900DE1660.w8.b96", !8295, i64 0}
!8295 = !{!"0000020900DE1660.w16.b96", !8296, i64 0}
!8296 = !{!"0000020900DE1660.w32.b96", !8285, i64 0}
!8297 = !{!8298, !8298, i64 0}
!8298 = !{!"0000020900DE1660.w8.b104", !8295, i64 0}
!8299 = !{!8300, !8300, i64 0}
!8300 = !{!"0000020900DE1660.w8.b112", !8301, i64 0}
!8301 = !{!"0000020900DE1660.w16.b112", !8296, i64 0}
!8302 = !{!8303, !8303, i64 0}
!8303 = !{!"0000020900DE1660.w8.b120", !8301, i64 0}
!8304 = !{!8305, !8305, i64 0}
!8305 = !{!"0000020900DE1660.w8.b128", !8306, i64 0}
!8306 = !{!"0000020900DE1660.w16.b128", !8307, i64 0}
!8307 = !{!"0000020900DE1660.w32.b128", !8308, i64 0}
!8308 = !{!"0000020900DE1660.w64.b128", !8309, i64 0}
!8309 = !{!"0000020900DE1660.w128.b128", !8259, i64 0}
!8310 = !{!8311, !8311, i64 0}
!8311 = !{!"0000020900DE1660.w8.b136", !8306, i64 0}
!8312 = !{!8313, !8313, i64 0}
!8313 = !{!"0000020900DE1660.w8.b144", !8314, i64 0}
!8314 = !{!"0000020900DE1660.w16.b144", !8307, i64 0}
!8315 = !{!8316, !8316, i64 0}
!8316 = !{!"0000020900DE1660.w8.b152", !8314, i64 0}
!8317 = !{!8318, !8318, i64 0}
!8318 = !{!"0000020900DE1660.w8.b160", !8319, i64 0}
!8319 = !{!"0000020900DE1660.w16.b160", !8320, i64 0}
!8320 = !{!"0000020900DE1660.w32.b160", !8308, i64 0}
!8321 = !{!8322, !8322, i64 0}
!8322 = !{!"0000020900DE1660.w8.b168", !8319, i64 0}
!8323 = !{!8324, !8324, i64 0}
!8324 = !{!"0000020900DE1660.w8.b176", !8325, i64 0}
!8325 = !{!"0000020900DE1660.w16.b176", !8320, i64 0}
!8326 = !{!8327, !8327, i64 0}
!8327 = !{!"0000020900DE1660.w8.b184", !8325, i64 0}
!8328 = !{!8329, !8329, i64 0}
!8329 = !{!"0000020900DE1660.w8.b192", !8330, i64 0}
!8330 = !{!"0000020900DE1660.w16.b192", !8331, i64 0}
!8331 = !{!"0000020900DE1660.w32.b192", !8332, i64 0}
!8332 = !{!"0000020900DE1660.w64.b192", !8309, i64 0}
!8333 = !{!8334, !8334, i64 0}
!8334 = !{!"0000020900DE1660.w8.b200", !8330, i64 0}
!8335 = !{!8336, !8336, i64 0}
!8336 = !{!"0000020900DE1660.w8.b208", !8337, i64 0}
!8337 = !{!"0000020900DE1660.w16.b208", !8331, i64 0}
!8338 = !{!8339, !8339, i64 0}
!8339 = !{!"0000020900DE1660.w8.b216", !8337, i64 0}
!8340 = !{!8341, !8341, i64 0}
!8341 = !{!"0000020900DFF6A0", !21, i64 0}
!8342 = !{!8262, !8262, i64 0}
!8343 = !{!8344, !8344, i64 0}
!8344 = !{!"0000020900DFF5A0", !21, i64 0}
!8345 = !{!8346, !8346, i64 0}
!8346 = !{!"000002090941FF20.w2.b0", !8347, i64 0}
!8347 = !{!"000002090941FF20.w4.b0", !8348, i64 0}
!8348 = !{!"000002090941FF20.w8.b0", !8349, i64 0}
!8349 = !{!"000002090941FF20.w16.b0", !8350, i64 0}
!8350 = !{!"000002090941FF20.w32.b0", !8351, i64 0}
!8351 = !{!"000002090941FF20.w64.b0", !8352, i64 0}
!8352 = !{!"000002090941FF20.w128.b0", !8353, i64 0}
!8353 = !{!"000002090941FF20.w256.b0", !8354, i64 0}
!8354 = !{!"000002090941FF20.w512.b0", !8355, i64 0}
!8355 = !{!"000002090941FF20.w1024.b0", !8356, i64 0}
!8356 = !{!"000002090941FF20", !21, i64 0}
!8357 = !{!8358, !8358, i64 0}
!8358 = !{!"000002090941FDA0.w2.b0", !8359, i64 0}
!8359 = !{!"000002090941FDA0.w4.b0", !8360, i64 0}
!8360 = !{!"000002090941FDA0.w8.b0", !8361, i64 0}
!8361 = !{!"000002090941FDA0.w16.b0", !8362, i64 0}
!8362 = !{!"000002090941FDA0.w32.b0", !8363, i64 0}
!8363 = !{!"000002090941FDA0.w64.b0", !8364, i64 0}
!8364 = !{!"000002090941FDA0.w128.b0", !8365, i64 0}
!8365 = !{!"000002090941FDA0.w256.b0", !8366, i64 0}
!8366 = !{!"000002090941FDA0.w512.b0", !8367, i64 0}
!8367 = !{!"000002090941FDA0.w1024.b0", !8368, i64 0}
!8368 = !{!"000002090941FDA0", !21, i64 0}
!8369 = !{!8370, !8370, i64 0}
!8370 = !{!"0000020900CDA5E0.w8.b0", !8371, i64 0}
!8371 = !{!"0000020900CDA5E0.w16.b0", !8372, i64 0}
!8372 = !{!"0000020900CDA5E0.w32.b0", !8373, i64 0}
!8373 = !{!"0000020900CDA5E0.w64.b0", !8374, i64 0}
!8374 = !{!"0000020900CDA5E0.w128.b0", !8375, i64 0}
!8375 = !{!"0000020900CDA5E0.w256.b0", !8376, i64 0}
!8376 = !{!"0000020900CDA5E0.w512.b0", !8377, i64 0}
!8377 = !{!"0000020900CDA5E0.w1024.b0", !8378, i64 0}
!8378 = !{!"0000020900CDA5E0", !21, i64 0}
!8379 = !{!8380, !8380, i64 0}
!8380 = !{!"0000020900CDA5E0.w8.b8", !8371, i64 0}
!8381 = !{!8382, !8382, i64 0}
!8382 = !{!"0000020900CDA5E0.w8.b16", !8383, i64 0}
!8383 = !{!"0000020900CDA5E0.w16.b16", !8372, i64 0}
!8384 = !{!8385, !8385, i64 0}
!8385 = !{!"0000020900CDA5E0.w8.b24", !8383, i64 0}
!8386 = !{!8387, !8387, i64 0}
!8387 = !{!"0000020900CDA5E0.w8.b32", !8388, i64 0}
!8388 = !{!"0000020900CDA5E0.w16.b32", !8389, i64 0}
!8389 = !{!"0000020900CDA5E0.w32.b32", !8373, i64 0}
!8390 = !{!8391, !8391, i64 0}
!8391 = !{!"0000020900CDA5E0.w8.b40", !8388, i64 0}
!8392 = !{!8393, !8393, i64 0}
!8393 = !{!"0000020900CDA5E0.w8.b48", !8394, i64 0}
!8394 = !{!"0000020900CDA5E0.w16.b48", !8389, i64 0}
!8395 = !{!8396, !8396, i64 0}
!8396 = !{!"0000020900CDA5E0.w8.b56", !8394, i64 0}
!8397 = !{!8398, !8398, i64 0}
!8398 = !{!"0000020900CDA5E0.w8.b64", !8399, i64 0}
!8399 = !{!"0000020900CDA5E0.w16.b64", !8400, i64 0}
!8400 = !{!"0000020900CDA5E0.w32.b64", !8401, i64 0}
!8401 = !{!"0000020900CDA5E0.w64.b64", !8374, i64 0}
!8402 = !{!8403, !8403, i64 0}
!8403 = !{!"0000020900CDA5E0.w8.b72", !8399, i64 0}
!8404 = !{!8405, !8405, i64 0}
!8405 = !{!"0000020900CDA5E0.w8.b80", !8406, i64 0}
!8406 = !{!"0000020900CDA5E0.w16.b80", !8400, i64 0}
!8407 = !{!8408, !8408, i64 0}
!8408 = !{!"0000020900CDA5E0.w8.b88", !8406, i64 0}
!8409 = !{!8410, !8410, i64 0}
!8410 = !{!"0000020900CDA5E0.w8.b96", !8411, i64 0}
!8411 = !{!"0000020900CDA5E0.w16.b96", !8412, i64 0}
!8412 = !{!"0000020900CDA5E0.w32.b96", !8401, i64 0}
!8413 = !{!8414, !8414, i64 0}
!8414 = !{!"0000020900CDA5E0.w8.b104", !8411, i64 0}
!8415 = !{!8416, !8416, i64 0}
!8416 = !{!"0000020900CDA5E0.w8.b112", !8417, i64 0}
!8417 = !{!"0000020900CDA5E0.w16.b112", !8412, i64 0}
!8418 = !{!8419, !8419, i64 0}
!8419 = !{!"0000020900CDA5E0.w8.b120", !8417, i64 0}
!8420 = !{!8421, !8421, i64 0}
!8421 = !{!"0000020900CDA5E0.w8.b128", !8422, i64 0}
!8422 = !{!"0000020900CDA5E0.w16.b128", !8423, i64 0}
!8423 = !{!"0000020900CDA5E0.w32.b128", !8424, i64 0}
!8424 = !{!"0000020900CDA5E0.w64.b128", !8425, i64 0}
!8425 = !{!"0000020900CDA5E0.w128.b128", !8375, i64 0}
!8426 = !{!8427, !8427, i64 0}
!8427 = !{!"0000020900CDA5E0.w8.b136", !8422, i64 0}
!8428 = !{!8429, !8429, i64 0}
!8429 = !{!"0000020900CDA5E0.w8.b144", !8430, i64 0}
!8430 = !{!"0000020900CDA5E0.w16.b144", !8423, i64 0}
!8431 = !{!8432, !8432, i64 0}
!8432 = !{!"0000020900CDA5E0.w8.b152", !8430, i64 0}
!8433 = !{!8434, !8434, i64 0}
!8434 = !{!"0000020900CDA5E0.w8.b160", !8435, i64 0}
!8435 = !{!"0000020900CDA5E0.w16.b160", !8436, i64 0}
!8436 = !{!"0000020900CDA5E0.w32.b160", !8424, i64 0}
!8437 = !{!8438, !8438, i64 0}
!8438 = !{!"0000020900CDA5E0.w8.b168", !8435, i64 0}
!8439 = !{!8440, !8440, i64 0}
!8440 = !{!"0000020900CDA5E0.w8.b176", !8441, i64 0}
!8441 = !{!"0000020900CDA5E0.w16.b176", !8436, i64 0}
!8442 = !{!8443, !8443, i64 0}
!8443 = !{!"0000020900CDA5E0.w8.b184", !8441, i64 0}
!8444 = !{!8445, !8445, i64 0}
!8445 = !{!"0000020900CDA5E0.w8.b192", !8446, i64 0}
!8446 = !{!"0000020900CDA5E0.w16.b192", !8447, i64 0}
!8447 = !{!"0000020900CDA5E0.w32.b192", !8448, i64 0}
!8448 = !{!"0000020900CDA5E0.w64.b192", !8425, i64 0}
!8449 = !{!8450, !8450, i64 0}
!8450 = !{!"0000020900CDA5E0.w8.b200", !8446, i64 0}
!8451 = !{!8452, !8452, i64 0}
!8452 = !{!"0000020900CDA5E0.w8.b208", !8453, i64 0}
!8453 = !{!"0000020900CDA5E0.w16.b208", !8447, i64 0}
!8454 = !{!8455, !8455, i64 0}
!8455 = !{!"0000020900CDA5E0.w8.b216", !8453, i64 0}
!8456 = !{!8457, !8457, i64 0}
!8457 = !{!"000002090941F6A0", !21, i64 0}
!8458 = !{!8459, !8459, i64 0}
!8459 = !{!"00000209094201A0", !21, i64 0}
!8460 = !{!8378, !8378, i64 0}
!8461 = !{!8462, !8462, i64 0}
!8462 = !{!"000002090941F7A0", !21, i64 0}
!8463 = !{!8464, !8464, i64 0}
!8464 = !{!"0000020900EC7070.w2.b0", !8465, i64 0}
!8465 = !{!"0000020900EC7070.w4.b0", !8466, i64 0}
!8466 = !{!"0000020900EC7070.w8.b0", !8467, i64 0}
!8467 = !{!"0000020900EC7070.w16.b0", !8468, i64 0}
!8468 = !{!"0000020900EC7070.w32.b0", !8469, i64 0}
!8469 = !{!"0000020900EC7070.w64.b0", !8470, i64 0}
!8470 = !{!"0000020900EC7070.w128.b0", !8471, i64 0}
!8471 = !{!"0000020900EC7070.w256.b0", !8472, i64 0}
!8472 = !{!"0000020900EC7070.w512.b0", !8473, i64 0}
!8473 = !{!"0000020900EC7070.w1024.b0", !8474, i64 0}
!8474 = !{!"0000020900EC7070", !21, i64 0}
!8475 = !{!8476, !8476, i64 0}
!8476 = !{!"0000020900EC6EB0.w2.b0", !8477, i64 0}
!8477 = !{!"0000020900EC6EB0.w4.b0", !8478, i64 0}
!8478 = !{!"0000020900EC6EB0.w8.b0", !8479, i64 0}
!8479 = !{!"0000020900EC6EB0.w16.b0", !8480, i64 0}
!8480 = !{!"0000020900EC6EB0.w32.b0", !8481, i64 0}
!8481 = !{!"0000020900EC6EB0.w64.b0", !8482, i64 0}
!8482 = !{!"0000020900EC6EB0.w128.b0", !8483, i64 0}
!8483 = !{!"0000020900EC6EB0.w256.b0", !8484, i64 0}
!8484 = !{!"0000020900EC6EB0.w512.b0", !8485, i64 0}
!8485 = !{!"0000020900EC6EB0.w1024.b0", !8486, i64 0}
!8486 = !{!"0000020900EC6EB0", !21, i64 0}
!8487 = !{!8488, !8488, i64 0}
!8488 = !{!"0000020900EC8C30.w8.b0", !8489, i64 0}
!8489 = !{!"0000020900EC8C30.w16.b0", !8490, i64 0}
!8490 = !{!"0000020900EC8C30.w32.b0", !8491, i64 0}
!8491 = !{!"0000020900EC8C30.w64.b0", !8492, i64 0}
!8492 = !{!"0000020900EC8C30.w128.b0", !8493, i64 0}
!8493 = !{!"0000020900EC8C30.w256.b0", !8494, i64 0}
!8494 = !{!"0000020900EC8C30.w512.b0", !8495, i64 0}
!8495 = !{!"0000020900EC8C30.w1024.b0", !8496, i64 0}
!8496 = !{!"0000020900EC8C30", !21, i64 0}
!8497 = !{!8498, !8498, i64 0}
!8498 = !{!"0000020900EC8C30.w8.b8", !8489, i64 0}
!8499 = !{!8500, !8500, i64 0}
!8500 = !{!"0000020900EC8C30.w8.b16", !8501, i64 0}
!8501 = !{!"0000020900EC8C30.w16.b16", !8490, i64 0}
!8502 = !{!8503, !8503, i64 0}
!8503 = !{!"0000020900EC8C30.w8.b24", !8501, i64 0}
!8504 = !{!8505, !8505, i64 0}
!8505 = !{!"0000020900EC8C30.w8.b32", !8506, i64 0}
!8506 = !{!"0000020900EC8C30.w16.b32", !8507, i64 0}
!8507 = !{!"0000020900EC8C30.w32.b32", !8491, i64 0}
!8508 = !{!8509, !8509, i64 0}
!8509 = !{!"0000020900EC8C30.w8.b40", !8506, i64 0}
!8510 = !{!8511, !8511, i64 0}
!8511 = !{!"0000020900EC8C30.w8.b48", !8512, i64 0}
!8512 = !{!"0000020900EC8C30.w16.b48", !8507, i64 0}
!8513 = !{!8514, !8514, i64 0}
!8514 = !{!"0000020900EC8C30.w8.b56", !8512, i64 0}
!8515 = !{!8516, !8516, i64 0}
!8516 = !{!"0000020900EC8C30.w8.b64", !8517, i64 0}
!8517 = !{!"0000020900EC8C30.w16.b64", !8518, i64 0}
!8518 = !{!"0000020900EC8C30.w32.b64", !8519, i64 0}
!8519 = !{!"0000020900EC8C30.w64.b64", !8492, i64 0}
!8520 = !{!8521, !8521, i64 0}
!8521 = !{!"0000020900EC8C30.w8.b72", !8517, i64 0}
!8522 = !{!8523, !8523, i64 0}
!8523 = !{!"0000020900EC8C30.w8.b80", !8524, i64 0}
!8524 = !{!"0000020900EC8C30.w16.b80", !8518, i64 0}
!8525 = !{!8526, !8526, i64 0}
!8526 = !{!"0000020900EC8C30.w8.b88", !8524, i64 0}
!8527 = !{!8528, !8528, i64 0}
!8528 = !{!"0000020900EC8C30.w8.b96", !8529, i64 0}
!8529 = !{!"0000020900EC8C30.w16.b96", !8530, i64 0}
!8530 = !{!"0000020900EC8C30.w32.b96", !8519, i64 0}
!8531 = !{!8532, !8532, i64 0}
!8532 = !{!"0000020900EC8C30.w8.b104", !8529, i64 0}
!8533 = !{!8534, !8534, i64 0}
!8534 = !{!"0000020900EC8C30.w8.b112", !8535, i64 0}
!8535 = !{!"0000020900EC8C30.w16.b112", !8530, i64 0}
!8536 = !{!8537, !8537, i64 0}
!8537 = !{!"0000020900EC8C30.w8.b120", !8535, i64 0}
!8538 = !{!8539, !8539, i64 0}
!8539 = !{!"0000020900EC8C30.w8.b128", !8540, i64 0}
!8540 = !{!"0000020900EC8C30.w16.b128", !8541, i64 0}
!8541 = !{!"0000020900EC8C30.w32.b128", !8542, i64 0}
!8542 = !{!"0000020900EC8C30.w64.b128", !8543, i64 0}
!8543 = !{!"0000020900EC8C30.w128.b128", !8493, i64 0}
!8544 = !{!8545, !8545, i64 0}
!8545 = !{!"0000020900EC8C30.w8.b136", !8540, i64 0}
!8546 = !{!8547, !8547, i64 0}
!8547 = !{!"0000020900EC8C30.w8.b144", !8548, i64 0}
!8548 = !{!"0000020900EC8C30.w16.b144", !8541, i64 0}
!8549 = !{!8550, !8550, i64 0}
!8550 = !{!"0000020900EC8C30.w8.b152", !8548, i64 0}
!8551 = !{!8552, !8552, i64 0}
!8552 = !{!"0000020900EC8C30.w8.b160", !8553, i64 0}
!8553 = !{!"0000020900EC8C30.w16.b160", !8554, i64 0}
!8554 = !{!"0000020900EC8C30.w32.b160", !8542, i64 0}
!8555 = !{!8556, !8556, i64 0}
!8556 = !{!"0000020900EC8C30.w8.b168", !8553, i64 0}
!8557 = !{!8558, !8558, i64 0}
!8558 = !{!"0000020900EC8C30.w8.b176", !8559, i64 0}
!8559 = !{!"0000020900EC8C30.w16.b176", !8554, i64 0}
!8560 = !{!8561, !8561, i64 0}
!8561 = !{!"0000020900EC8C30.w8.b184", !8559, i64 0}
!8562 = !{!8563, !8563, i64 0}
!8563 = !{!"0000020900EC8C30.w8.b192", !8564, i64 0}
!8564 = !{!"0000020900EC8C30.w16.b192", !8565, i64 0}
!8565 = !{!"0000020900EC8C30.w32.b192", !8566, i64 0}
!8566 = !{!"0000020900EC8C30.w64.b192", !8543, i64 0}
!8567 = !{!8568, !8568, i64 0}
!8568 = !{!"0000020900EC8C30.w8.b200", !8564, i64 0}
!8569 = !{!8570, !8570, i64 0}
!8570 = !{!"0000020900EC8C30.w8.b208", !8571, i64 0}
!8571 = !{!"0000020900EC8C30.w16.b208", !8565, i64 0}
!8572 = !{!8573, !8573, i64 0}
!8573 = !{!"0000020900EC8C30.w8.b216", !8571, i64 0}
!8574 = !{!8575, !8575, i64 0}
!8575 = !{!"0000020900EC6770", !21, i64 0}
!8576 = !{!8577, !8577, i64 0}
!8577 = !{!"0000020900EC6670", !21, i64 0}
!8578 = !{!8496, !8496, i64 0}
!8579 = !{!8580, !8580, i64 0}
!8580 = !{!"0000020900EC70F0", !21, i64 0}
!8581 = !{!8582, !8582, i64 0}
!8582 = !{!"0000020974606830.w2.b0", !8583, i64 0}
!8583 = !{!"0000020974606830.w4.b0", !8584, i64 0}
!8584 = !{!"0000020974606830.w8.b0", !8585, i64 0}
!8585 = !{!"0000020974606830.w16.b0", !8586, i64 0}
!8586 = !{!"0000020974606830.w32.b0", !8587, i64 0}
!8587 = !{!"0000020974606830.w64.b0", !8588, i64 0}
!8588 = !{!"0000020974606830.w128.b0", !8589, i64 0}
!8589 = !{!"0000020974606830.w256.b0", !8590, i64 0}
!8590 = !{!"0000020974606830.w512.b0", !8591, i64 0}
!8591 = !{!"0000020974606830.w1024.b0", !8592, i64 0}
!8592 = !{!"0000020974606830", !21, i64 0}
!8593 = !{!8594, !8594, i64 0}
!8594 = !{!"0000020974606770.w2.b0", !8595, i64 0}
!8595 = !{!"0000020974606770.w4.b0", !8596, i64 0}
!8596 = !{!"0000020974606770.w8.b0", !8597, i64 0}
!8597 = !{!"0000020974606770.w16.b0", !8598, i64 0}
!8598 = !{!"0000020974606770.w32.b0", !8599, i64 0}
!8599 = !{!"0000020974606770.w64.b0", !8600, i64 0}
!8600 = !{!"0000020974606770.w128.b0", !8601, i64 0}
!8601 = !{!"0000020974606770.w256.b0", !8602, i64 0}
!8602 = !{!"0000020974606770.w512.b0", !8603, i64 0}
!8603 = !{!"0000020974606770.w1024.b0", !8604, i64 0}
!8604 = !{!"0000020974606770", !21, i64 0}
!8605 = !{!8606, !8606, i64 0}
!8606 = !{!"000002096EB49F60.w8.b0", !8607, i64 0}
!8607 = !{!"000002096EB49F60.w16.b0", !8608, i64 0}
!8608 = !{!"000002096EB49F60.w32.b0", !8609, i64 0}
!8609 = !{!"000002096EB49F60.w64.b0", !8610, i64 0}
!8610 = !{!"000002096EB49F60.w128.b0", !8611, i64 0}
!8611 = !{!"000002096EB49F60.w256.b0", !8612, i64 0}
!8612 = !{!"000002096EB49F60.w512.b0", !8613, i64 0}
!8613 = !{!"000002096EB49F60.w1024.b0", !8614, i64 0}
!8614 = !{!"000002096EB49F60", !21, i64 0}
!8615 = !{!8616, !8616, i64 0}
!8616 = !{!"000002096EB49F60.w8.b8", !8607, i64 0}
!8617 = !{!8618, !8618, i64 0}
!8618 = !{!"000002096EB49F60.w8.b16", !8619, i64 0}
!8619 = !{!"000002096EB49F60.w16.b16", !8608, i64 0}
!8620 = !{!8621, !8621, i64 0}
!8621 = !{!"000002096EB49F60.w8.b24", !8619, i64 0}
!8622 = !{!8623, !8623, i64 0}
!8623 = !{!"000002096EB49F60.w8.b32", !8624, i64 0}
!8624 = !{!"000002096EB49F60.w16.b32", !8625, i64 0}
!8625 = !{!"000002096EB49F60.w32.b32", !8609, i64 0}
!8626 = !{!8627, !8627, i64 0}
!8627 = !{!"000002096EB49F60.w8.b40", !8624, i64 0}
!8628 = !{!8629, !8629, i64 0}
!8629 = !{!"000002096EB49F60.w8.b48", !8630, i64 0}
!8630 = !{!"000002096EB49F60.w16.b48", !8625, i64 0}
!8631 = !{!8632, !8632, i64 0}
!8632 = !{!"000002096EB49F60.w8.b56", !8630, i64 0}
!8633 = !{!8634, !8634, i64 0}
!8634 = !{!"000002096EB49F60.w8.b64", !8635, i64 0}
!8635 = !{!"000002096EB49F60.w16.b64", !8636, i64 0}
!8636 = !{!"000002096EB49F60.w32.b64", !8637, i64 0}
!8637 = !{!"000002096EB49F60.w64.b64", !8610, i64 0}
!8638 = !{!8639, !8639, i64 0}
!8639 = !{!"000002096EB49F60.w8.b72", !8635, i64 0}
!8640 = !{!8641, !8641, i64 0}
!8641 = !{!"000002096EB49F60.w8.b80", !8642, i64 0}
!8642 = !{!"000002096EB49F60.w16.b80", !8636, i64 0}
!8643 = !{!8644, !8644, i64 0}
!8644 = !{!"000002096EB49F60.w8.b88", !8642, i64 0}
!8645 = !{!8646, !8646, i64 0}
!8646 = !{!"000002096EB49F60.w8.b96", !8647, i64 0}
!8647 = !{!"000002096EB49F60.w16.b96", !8648, i64 0}
!8648 = !{!"000002096EB49F60.w32.b96", !8637, i64 0}
!8649 = !{!8650, !8650, i64 0}
!8650 = !{!"000002096EB49F60.w8.b104", !8647, i64 0}
!8651 = !{!8652, !8652, i64 0}
!8652 = !{!"000002096EB49F60.w8.b112", !8653, i64 0}
!8653 = !{!"000002096EB49F60.w16.b112", !8648, i64 0}
!8654 = !{!8655, !8655, i64 0}
!8655 = !{!"000002096EB49F60.w8.b120", !8653, i64 0}
!8656 = !{!8657, !8657, i64 0}
!8657 = !{!"000002096EB49F60.w8.b128", !8658, i64 0}
!8658 = !{!"000002096EB49F60.w16.b128", !8659, i64 0}
!8659 = !{!"000002096EB49F60.w32.b128", !8660, i64 0}
!8660 = !{!"000002096EB49F60.w64.b128", !8661, i64 0}
!8661 = !{!"000002096EB49F60.w128.b128", !8611, i64 0}
!8662 = !{!8663, !8663, i64 0}
!8663 = !{!"000002096EB49F60.w8.b136", !8658, i64 0}
!8664 = !{!8665, !8665, i64 0}
!8665 = !{!"000002096EB49F60.w8.b144", !8666, i64 0}
!8666 = !{!"000002096EB49F60.w16.b144", !8659, i64 0}
!8667 = !{!8668, !8668, i64 0}
!8668 = !{!"000002096EB49F60.w8.b152", !8666, i64 0}
!8669 = !{!8670, !8670, i64 0}
!8670 = !{!"000002096EB49F60.w8.b160", !8671, i64 0}
!8671 = !{!"000002096EB49F60.w16.b160", !8672, i64 0}
!8672 = !{!"000002096EB49F60.w32.b160", !8660, i64 0}
!8673 = !{!8674, !8674, i64 0}
!8674 = !{!"000002096EB49F60.w8.b168", !8671, i64 0}
!8675 = !{!8676, !8676, i64 0}
!8676 = !{!"000002096EB49F60.w8.b176", !8677, i64 0}
!8677 = !{!"000002096EB49F60.w16.b176", !8672, i64 0}
!8678 = !{!8679, !8679, i64 0}
!8679 = !{!"000002096EB49F60.w8.b184", !8677, i64 0}
!8680 = !{!8681, !8681, i64 0}
!8681 = !{!"000002096EB49F60.w8.b192", !8682, i64 0}
!8682 = !{!"000002096EB49F60.w16.b192", !8683, i64 0}
!8683 = !{!"000002096EB49F60.w32.b192", !8684, i64 0}
!8684 = !{!"000002096EB49F60.w64.b192", !8661, i64 0}
!8685 = !{!8686, !8686, i64 0}
!8686 = !{!"000002096EB49F60.w8.b200", !8682, i64 0}
!8687 = !{!8688, !8688, i64 0}
!8688 = !{!"000002096EB49F60.w8.b208", !8689, i64 0}
!8689 = !{!"000002096EB49F60.w16.b208", !8683, i64 0}
!8690 = !{!8691, !8691, i64 0}
!8691 = !{!"000002096EB49F60.w8.b216", !8689, i64 0}
!8692 = !{!8693, !8693, i64 0}
!8693 = !{!"0000020974606270", !21, i64 0}
!8694 = !{!8695, !8695, i64 0}
!8695 = !{!"0000020974606D30", !21, i64 0}
!8696 = !{!8614, !8614, i64 0}
!8697 = !{!8698, !8698, i64 0}
!8698 = !{!"00000209746062B0", !21, i64 0}
!8699 = !{!8700, !8700, i64 0}
!8700 = !{!"0000020900F5ABF0", !21, i64 0}
!8701 = !{!8702, !8702, i64 0}
!8702 = !{!"0000020900F5AA30", !21, i64 0}
!8703 = !{!8704, !8704, i64 0}
!8704 = !{!"0000020900F5A930.w2.b0", !8705, i64 0}
!8705 = !{!"0000020900F5A930.w4.b0", !8706, i64 0}
!8706 = !{!"0000020900F5A930.w8.b0", !8707, i64 0}
!8707 = !{!"0000020900F5A930.w16.b0", !8708, i64 0}
!8708 = !{!"0000020900F5A930.w32.b0", !8709, i64 0}
!8709 = !{!"0000020900F5A930.w64.b0", !8710, i64 0}
!8710 = !{!"0000020900F5A930.w128.b0", !8711, i64 0}
!8711 = !{!"0000020900F5A930.w256.b0", !8712, i64 0}
!8712 = !{!"0000020900F5A930.w512.b0", !8713, i64 0}
!8713 = !{!"0000020900F5A930.w1024.b0", !8714, i64 0}
!8714 = !{!"0000020900F5A930", !21, i64 0}
!8715 = !{!8716, !8716, i64 0}
!8716 = !{!"0000020900F5AA70.w2.b0", !8717, i64 0}
!8717 = !{!"0000020900F5AA70.w4.b0", !8718, i64 0}
!8718 = !{!"0000020900F5AA70.w8.b0", !8719, i64 0}
!8719 = !{!"0000020900F5AA70.w16.b0", !8720, i64 0}
!8720 = !{!"0000020900F5AA70.w32.b0", !8721, i64 0}
!8721 = !{!"0000020900F5AA70.w64.b0", !8722, i64 0}
!8722 = !{!"0000020900F5AA70.w128.b0", !8723, i64 0}
!8723 = !{!"0000020900F5AA70.w256.b0", !8724, i64 0}
!8724 = !{!"0000020900F5AA70.w512.b0", !8725, i64 0}
!8725 = !{!"0000020900F5AA70.w1024.b0", !8726, i64 0}
!8726 = !{!"0000020900F5AA70", !21, i64 0}
!8727 = !{!8728, !8728, i64 0}
!8728 = !{!"0000020900F61EB0.w8.b0", !8729, i64 0}
!8729 = !{!"0000020900F61EB0.w16.b0", !8730, i64 0}
!8730 = !{!"0000020900F61EB0.w32.b0", !8731, i64 0}
!8731 = !{!"0000020900F61EB0.w64.b0", !8732, i64 0}
!8732 = !{!"0000020900F61EB0.w128.b0", !8733, i64 0}
!8733 = !{!"0000020900F61EB0.w256.b0", !8734, i64 0}
!8734 = !{!"0000020900F61EB0.w512.b0", !8735, i64 0}
!8735 = !{!"0000020900F61EB0.w1024.b0", !8736, i64 0}
!8736 = !{!"0000020900F61EB0", !21, i64 0}
!8737 = !{!8738, !8738, i64 0}
!8738 = !{!"0000020900F61EB0.w8.b8", !8729, i64 0}
!8739 = !{!8740, !8740, i64 0}
!8740 = !{!"0000020900F61EB0.w8.b16", !8741, i64 0}
!8741 = !{!"0000020900F61EB0.w16.b16", !8730, i64 0}
!8742 = !{!8743, !8743, i64 0}
!8743 = !{!"0000020900F61EB0.w8.b24", !8741, i64 0}
!8744 = !{!8745, !8745, i64 0}
!8745 = !{!"0000020900F61EB0.w8.b32", !8746, i64 0}
!8746 = !{!"0000020900F61EB0.w16.b32", !8747, i64 0}
!8747 = !{!"0000020900F61EB0.w32.b32", !8731, i64 0}
!8748 = !{!8749, !8749, i64 0}
!8749 = !{!"0000020900F61EB0.w8.b40", !8746, i64 0}
!8750 = !{!8751, !8751, i64 0}
!8751 = !{!"0000020900F61EB0.w8.b48", !8752, i64 0}
!8752 = !{!"0000020900F61EB0.w16.b48", !8747, i64 0}
!8753 = !{!8754, !8754, i64 0}
!8754 = !{!"0000020900F61EB0.w8.b56", !8752, i64 0}
!8755 = !{!8756, !8756, i64 0}
!8756 = !{!"0000020900F61EB0.w8.b64", !8757, i64 0}
!8757 = !{!"0000020900F61EB0.w16.b64", !8758, i64 0}
!8758 = !{!"0000020900F61EB0.w32.b64", !8759, i64 0}
!8759 = !{!"0000020900F61EB0.w64.b64", !8732, i64 0}
!8760 = !{!8761, !8761, i64 0}
!8761 = !{!"0000020900F61EB0.w8.b72", !8757, i64 0}
!8762 = !{!8763, !8763, i64 0}
!8763 = !{!"0000020900F61EB0.w8.b80", !8764, i64 0}
!8764 = !{!"0000020900F61EB0.w16.b80", !8758, i64 0}
!8765 = !{!8766, !8766, i64 0}
!8766 = !{!"0000020900F61EB0.w8.b88", !8764, i64 0}
!8767 = !{!8768, !8768, i64 0}
!8768 = !{!"0000020900F61EB0.w8.b96", !8769, i64 0}
!8769 = !{!"0000020900F61EB0.w16.b96", !8770, i64 0}
!8770 = !{!"0000020900F61EB0.w32.b96", !8759, i64 0}
!8771 = !{!8772, !8772, i64 0}
!8772 = !{!"0000020900F61EB0.w8.b104", !8769, i64 0}
!8773 = !{!8774, !8774, i64 0}
!8774 = !{!"0000020900F61EB0.w8.b112", !8775, i64 0}
!8775 = !{!"0000020900F61EB0.w16.b112", !8770, i64 0}
!8776 = !{!8777, !8777, i64 0}
!8777 = !{!"0000020900F61EB0.w8.b120", !8775, i64 0}
!8778 = !{!8779, !8779, i64 0}
!8779 = !{!"0000020900F61EB0.w8.b128", !8780, i64 0}
!8780 = !{!"0000020900F61EB0.w16.b128", !8781, i64 0}
!8781 = !{!"0000020900F61EB0.w32.b128", !8782, i64 0}
!8782 = !{!"0000020900F61EB0.w64.b128", !8783, i64 0}
!8783 = !{!"0000020900F61EB0.w128.b128", !8733, i64 0}
!8784 = !{!8785, !8785, i64 0}
!8785 = !{!"0000020900F61EB0.w8.b136", !8780, i64 0}
!8786 = !{!8787, !8787, i64 0}
!8787 = !{!"0000020900F61EB0.w8.b144", !8788, i64 0}
!8788 = !{!"0000020900F61EB0.w16.b144", !8781, i64 0}
!8789 = !{!8790, !8790, i64 0}
!8790 = !{!"0000020900F61EB0.w8.b152", !8788, i64 0}
!8791 = !{!8792, !8792, i64 0}
!8792 = !{!"0000020900F61EB0.w8.b160", !8793, i64 0}
!8793 = !{!"0000020900F61EB0.w16.b160", !8794, i64 0}
!8794 = !{!"0000020900F61EB0.w32.b160", !8782, i64 0}
!8795 = !{!8796, !8796, i64 0}
!8796 = !{!"0000020900F61EB0.w8.b168", !8793, i64 0}
!8797 = !{!8798, !8798, i64 0}
!8798 = !{!"0000020900F61EB0.w8.b176", !8799, i64 0}
!8799 = !{!"0000020900F61EB0.w16.b176", !8794, i64 0}
!8800 = !{!8801, !8801, i64 0}
!8801 = !{!"0000020900F61EB0.w8.b184", !8799, i64 0}
!8802 = !{!8803, !8803, i64 0}
!8803 = !{!"0000020900F61EB0.w8.b192", !8804, i64 0}
!8804 = !{!"0000020900F61EB0.w16.b192", !8805, i64 0}
!8805 = !{!"0000020900F61EB0.w32.b192", !8806, i64 0}
!8806 = !{!"0000020900F61EB0.w64.b192", !8783, i64 0}
!8807 = !{!8808, !8808, i64 0}
!8808 = !{!"0000020900F61EB0.w8.b200", !8804, i64 0}
!8809 = !{!8810, !8810, i64 0}
!8810 = !{!"0000020900F61EB0.w8.b208", !8811, i64 0}
!8811 = !{!"0000020900F61EB0.w16.b208", !8805, i64 0}
!8812 = !{!8813, !8813, i64 0}
!8813 = !{!"0000020900F61EB0.w8.b216", !8811, i64 0}
!8814 = !{!8815, !8815, i64 0}
!8815 = !{!"0000020900F5B030", !21, i64 0}
!8816 = !{!8736, !8736, i64 0}
!8817 = !{!8818, !8818, i64 0}
!8818 = !{!"0000020900F5A570", !21, i64 0}
!8819 = !{!8820, !8820, i64 0}
!8820 = !{!"0000020905E9DA70", !21, i64 0}
!8821 = !{!8822, !8822, i64 0}
!8822 = !{!"0000020905E9D430", !21, i64 0}
!8823 = !{!8824, !8824, i64 0}
!8824 = !{!"0000020905E9D7B0", !21, i64 0}
!8825 = !{!8826, !8826, i64 0}
!8826 = !{!"0000020905E9D7F0", !21, i64 0}
!8827 = !{!8828, !8828, i64 0}
!8828 = !{!"000002096CBA4EC0", !21, i64 0}
!8829 = !{!8830, !8830, i64 0}
!8830 = !{!"000002096CBA4D40", !21, i64 0}

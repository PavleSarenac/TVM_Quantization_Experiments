; ModuleID = 'TVMMod'
source_filename = "TVMMod"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

%0 = type { double }
%1 = type { ptr, %2, i32, %3, ptr, ptr, i64 }
%2 = type { i32, i32 }
%3 = type { i8, i8, i16 }
%4 = type { ptr, i32 }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.0 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.1 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.2 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.3 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.4 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.5 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.6 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.7 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.8 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.9 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.10 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.11 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.12 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.13 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.14 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.15 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.16 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.17 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.18 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.19 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.20 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused = type { i32, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.21 = type { i32, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22 = type { i32, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.23 = type { ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.24 = type { i32, ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25 = type { i32, ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26 = type { i32, ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27 = type { ptr, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.28 = type { i32, ptr, ptr, ptr, ptr }
%closure_loop_parallel_i0.i1.fused.i2.fused = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.29 = type { i32, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30 = type { i32, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.32 = type { ptr, ptr, ptr, ptr }
%closure_loop_parallel_i0.i1.fused.i2.fused.31 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.33 = type { ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.35 = type { ptr, ptr, ptr, ptr }
%closure_loop_parallel_i0.i1.fused.i2.fused.34 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.36 = type { ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.38 = type { ptr, ptr, ptr, ptr }
%closure_loop_parallel_i0.i1.fused.i2.fused.37 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.40 = type { i32, ptr, ptr, ptr, ptr }
%closure_loop_parallel_i0.i1.fused.i2.fused.39 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.41 = type { i32, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.42 = type { ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.44 = type { ptr, ptr, ptr, ptr }
%closure_loop_parallel_i0.i1.fused.i2.fused.43 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45 = type { i32, ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.47 = type { i32, ptr, ptr, ptr, ptr }
%closure_loop_parallel_i0.i1.fused.i2.fused.46 = type { ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.48 = type { ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.50 = type { ptr, ptr, ptr, ptr }
%closure_loop_parallel_i0.i1.fused.i2.fused.49 = type { ptr, ptr }
%closure_loop_parallel_ax1.outer.ax0.outer.fused = type { ptr, ptr, ptr, ptr }
%closure_loop_parallel_ax0.ax1.fused.ax2.fused.51 = type { ptr, ptr }

$__TVMAPISetLastError = comdat any

$__TVMBackendParallelLaunch = comdat any

$__TVMBackendAllocWorkspace = comdat any

$__TVMBackendFreeWorkspace = comdat any

@__TVMAPISetLastError = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@__TVMBackendParallelLaunch = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@.str = private constant [88 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform: num_args should be 2\00", align 1
@.str.1 = private constant [143 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform: Expect arg[0] to be pointer\00", align 1
@.str.2 = private constant [191 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform: Expect arg[1] to be pointer\00", align 1
@.str.3 = private constant [124 x i8] c"Assert fail: 4 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform.p0.ndim is expected to equal 4\00", align 1
@.str.4 = private constant [248 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform.p0.dtype is expected to be float32\00", align 1
@.str.5 = private constant [248 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_shape[0])\00", align 1
@.str.6 = private constant [248 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_shape[1]) == 3, Argument tvmgen_default_fused_layout_transform.p0.shape[1] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_shape[1])\00", align 1
@.str.7 = private constant [252 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_shape[2]) == 224, Argument tvmgen_default_fused_layout_transform.p0.shape[2] has an unsatisfied constraint: 224 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_shape[2])\00", align 1
@.str.8 = private constant [252 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_shape[3]) == 224, Argument tvmgen_default_fused_layout_transform.p0.shape[3] has an unsatisfied constraint: 224 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_shape[3])\00", align 1
@.str.9 = private constant [329 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_strides[2]) and 50176 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_p0_strides[1]), tvmgen_default_fused_layout_transform.p0.strides: expected to be compact array\00", align 1
@.str.10 = private constant [211 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.11 = private constant [191 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.12 = private constant [148 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.13 = private constant [296 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.14 = private constant [284 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[0])\00", align 1
@.str.15 = private constant [284 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[1]) == 1, Argument tvmgen_default_fused_layout_transform.T_layout_trans.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[1])\00", align 1
@.str.16 = private constant [288 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[2]) == 224, Argument tvmgen_default_fused_layout_transform.T_layout_trans.shape[2] has an unsatisfied constraint: 224 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[2])\00", align 1
@.str.17 = private constant [288 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[3]) == 224, Argument tvmgen_default_fused_layout_transform.T_layout_trans.shape[3] has an unsatisfied constraint: 224 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[3])\00", align 1
@.str.18 = private constant [284 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[4]) == 3, Argument tvmgen_default_fused_layout_transform.T_layout_trans.shape[4] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_shape[4])\00", align 1
@.str.19 = private constant [373 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_strides[4]) and 3 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_strides[3]) and 672 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_T_layout_trans_strides[2]), tvmgen_default_fused_layout_transform.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.20 = private constant [247 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.21 = private constant [227 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.22 = private constant [233 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.23 = private constant [90 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_1: num_args should be 2\00", align 1
@.str.24 = private constant [145 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_1: Expect arg[0] to be pointer\00", align 1
@.str.25 = private constant [193 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_1: Expect arg[1] to be pointer\00", align 1
@.str.26 = private constant [126 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_1.p0.ndim is expected to equal 5\00", align 1
@.str.27 = private constant [250 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_1.p0.dtype is expected to be float32\00", align 1
@.str.28 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_1.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_p0_shape[0])\00", align 1
@.str.29 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_p0_shape[1]) == 2, Argument tvmgen_default_fused_layout_transform_1.p0.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_p0_shape[1])\00", align 1
@.str.30 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_p0_shape[2]) == 56, Argument tvmgen_default_fused_layout_transform_1.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_p0_shape[2])\00", align 1
@.str.31 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_p0_shape[3]) == 56, Argument tvmgen_default_fused_layout_transform_1.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_p0_shape[3])\00", align 1
@.str.32 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_p0_shape[4]) == 32, Argument tvmgen_default_fused_layout_transform_1.p0.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_p0_shape[4])\00", align 1
@.str.33 = private constant [420 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_p0_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_p0_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_p0_strides[2]) and 100352 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_p0_strides[1]), tvmgen_default_fused_layout_transform_1.p0.strides: expected to be compact array\00", align 1
@.str.34 = private constant [213 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_1.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.35 = private constant [193 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_1.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.36 = private constant [150 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_1.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.37 = private constant [298 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_1.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.38 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_1.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_T_layout_trans_shape[0])\00", align 1
@.str.39 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_T_layout_trans_shape[1]) == 4, Argument tvmgen_default_fused_layout_transform_1.T_layout_trans.shape[1] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_T_layout_trans_shape[1])\00", align 1
@.str.40 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_T_layout_trans_shape[2]) == 56, Argument tvmgen_default_fused_layout_transform_1.T_layout_trans.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_T_layout_trans_shape[2])\00", align 1
@.str.41 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_T_layout_trans_shape[3]) == 56, Argument tvmgen_default_fused_layout_transform_1.T_layout_trans.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_T_layout_trans_shape[3])\00", align 1
@.str.42 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_T_layout_trans_shape[4]) == 16, Argument tvmgen_default_fused_layout_transform_1.T_layout_trans.shape[4] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_T_layout_trans_shape[4])\00", align 1
@.str.43 = private constant [478 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_T_layout_trans_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_T_layout_trans_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_T_layout_trans_strides[2]) and 50176 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_1_T_layout_trans_strides[1]), tvmgen_default_fused_layout_transform_1.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.44 = private constant [249 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_1.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.45 = private constant [229 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_1.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.46 = private constant [235 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_1.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.48 = private constant [91 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_10: num_args should be 2\00", align 1
@.str.49 = private constant [146 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_10: Expect arg[0] to be pointer\00", align 1
@.str.50 = private constant [194 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_10: Expect arg[1] to be pointer\00", align 1
@.str.51 = private constant [127 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_10.p0.ndim is expected to equal 5\00", align 1
@.str.52 = private constant [251 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_10.p0.dtype is expected to be float32\00", align 1
@.str.53 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_10.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_p0_shape[0])\00", align 1
@.str.54 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_p0_shape[1]) == 4, Argument tvmgen_default_fused_layout_transform_10.p0.shape[1] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_p0_shape[1])\00", align 1
@.str.55 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_p0_shape[2]) == 28, Argument tvmgen_default_fused_layout_transform_10.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_p0_shape[2])\00", align 1
@.str.56 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_p0_shape[3]) == 28, Argument tvmgen_default_fused_layout_transform_10.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_p0_shape[3])\00", align 1
@.str.57 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_p0_shape[4]) == 32, Argument tvmgen_default_fused_layout_transform_10.p0.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_p0_shape[4])\00", align 1
@.str.58 = private constant [423 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_p0_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_p0_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_p0_strides[2]) and 25088 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_p0_strides[1]), tvmgen_default_fused_layout_transform_10.p0.strides: expected to be compact array\00", align 1
@.str.59 = private constant [214 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_10.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.60 = private constant [194 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_10.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.61 = private constant [151 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_10.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.62 = private constant [299 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_10.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.63 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_10.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_T_layout_trans_shape[0])\00", align 1
@.str.64 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_T_layout_trans_shape[1]) == 32, Argument tvmgen_default_fused_layout_transform_10.T_layout_trans.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_T_layout_trans_shape[1])\00", align 1
@.str.65 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_T_layout_trans_shape[2]) == 28, Argument tvmgen_default_fused_layout_transform_10.T_layout_trans.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_T_layout_trans_shape[2])\00", align 1
@.str.66 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_T_layout_trans_shape[3]) == 28, Argument tvmgen_default_fused_layout_transform_10.T_layout_trans.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_T_layout_trans_shape[3])\00", align 1
@.str.67 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_T_layout_trans_shape[4]) == 4, Argument tvmgen_default_fused_layout_transform_10.T_layout_trans.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_T_layout_trans_shape[4])\00", align 1
@.str.68 = private constant [481 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_T_layout_trans_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_T_layout_trans_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_T_layout_trans_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_10_T_layout_trans_strides[1]), tvmgen_default_fused_layout_transform_10.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.69 = private constant [250 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_10.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.70 = private constant [230 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_10.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.71 = private constant [236 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_10.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.73 = private constant [91 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_11: num_args should be 2\00", align 1
@.str.74 = private constant [146 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_11: Expect arg[0] to be pointer\00", align 1
@.str.75 = private constant [194 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_11: Expect arg[1] to be pointer\00", align 1
@.str.76 = private constant [127 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_11.p0.ndim is expected to equal 5\00", align 1
@.str.77 = private constant [251 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_11.p0.dtype is expected to be float32\00", align 1
@.str.78 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_11.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_p0_shape[0])\00", align 1
@.str.79 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_p0_shape[1]) == 16, Argument tvmgen_default_fused_layout_transform_11.p0.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_p0_shape[1])\00", align 1
@.str.80 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_p0_shape[2]) == 28, Argument tvmgen_default_fused_layout_transform_11.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_p0_shape[2])\00", align 1
@.str.81 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_p0_shape[3]) == 28, Argument tvmgen_default_fused_layout_transform_11.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_p0_shape[3])\00", align 1
@.str.82 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_p0_shape[4]) == 32, Argument tvmgen_default_fused_layout_transform_11.p0.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_p0_shape[4])\00", align 1
@.str.83 = private constant [423 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_p0_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_p0_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_p0_strides[2]) and 25088 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_p0_strides[1]), tvmgen_default_fused_layout_transform_11.p0.strides: expected to be compact array\00", align 1
@.str.84 = private constant [214 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_11.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.85 = private constant [194 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_11.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.86 = private constant [151 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_11.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.87 = private constant [299 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_11.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.88 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_11.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_T_layout_trans_shape[0])\00", align 1
@.str.89 = private constant [297 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_T_layout_trans_shape[1]) == 128, Argument tvmgen_default_fused_layout_transform_11.T_layout_trans.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_T_layout_trans_shape[1])\00", align 1
@.str.90 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_T_layout_trans_shape[2]) == 28, Argument tvmgen_default_fused_layout_transform_11.T_layout_trans.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_T_layout_trans_shape[2])\00", align 1
@.str.91 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_T_layout_trans_shape[3]) == 28, Argument tvmgen_default_fused_layout_transform_11.T_layout_trans.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_T_layout_trans_shape[3])\00", align 1
@.str.92 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_T_layout_trans_shape[4]) == 4, Argument tvmgen_default_fused_layout_transform_11.T_layout_trans.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_T_layout_trans_shape[4])\00", align 1
@.str.93 = private constant [481 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_T_layout_trans_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_T_layout_trans_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_T_layout_trans_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_11_T_layout_trans_strides[1]), tvmgen_default_fused_layout_transform_11.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.94 = private constant [250 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_11.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.95 = private constant [230 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_11.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.96 = private constant [236 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_11.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.98 = private constant [91 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_12: num_args should be 2\00", align 1
@.str.99 = private constant [146 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_12: Expect arg[0] to be pointer\00", align 1
@.str.100 = private constant [194 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_12: Expect arg[1] to be pointer\00", align 1
@.str.101 = private constant [127 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_12.p0.ndim is expected to equal 5\00", align 1
@.str.102 = private constant [251 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_12.p0.dtype is expected to be float32\00", align 1
@.str.103 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_12.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_p0_shape[0])\00", align 1
@.str.104 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_p0_shape[1]) == 64, Argument tvmgen_default_fused_layout_transform_12.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_p0_shape[1])\00", align 1
@.str.105 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_p0_shape[2]) == 14, Argument tvmgen_default_fused_layout_transform_12.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_p0_shape[2])\00", align 1
@.str.106 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_p0_shape[3]) == 14, Argument tvmgen_default_fused_layout_transform_12.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_p0_shape[3])\00", align 1
@.str.107 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_p0_shape[4]) == 4, Argument tvmgen_default_fused_layout_transform_12.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_p0_shape[4])\00", align 1
@.str.108 = private constant [419 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_p0_strides[1]), tvmgen_default_fused_layout_transform_12.p0.strides: expected to be compact array\00", align 1
@.str.109 = private constant [214 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_12.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.110 = private constant [194 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_12.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.111 = private constant [151 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_12.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.112 = private constant [299 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_12.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.113 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_12.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_T_layout_trans_shape[0])\00", align 1
@.str.114 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_T_layout_trans_shape[1]) == 1, Argument tvmgen_default_fused_layout_transform_12.T_layout_trans.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_T_layout_trans_shape[1])\00", align 1
@.str.115 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_T_layout_trans_shape[2]) == 14, Argument tvmgen_default_fused_layout_transform_12.T_layout_trans.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_T_layout_trans_shape[2])\00", align 1
@.str.116 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_T_layout_trans_shape[3]) == 14, Argument tvmgen_default_fused_layout_transform_12.T_layout_trans.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_T_layout_trans_shape[3])\00", align 1
@.str.117 = private constant [297 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_T_layout_trans_shape[4]) == 256, Argument tvmgen_default_fused_layout_transform_12.T_layout_trans.shape[4] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_T_layout_trans_shape[4])\00", align 1
@.str.118 = private constant [388 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_T_layout_trans_strides[4]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_T_layout_trans_strides[3]) and 3584 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_12_T_layout_trans_strides[2]), tvmgen_default_fused_layout_transform_12.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.119 = private constant [250 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_12.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.120 = private constant [230 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_12.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.121 = private constant [236 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_12.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.123 = private constant [91 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_13: num_args should be 2\00", align 1
@.str.124 = private constant [146 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_13: Expect arg[0] to be pointer\00", align 1
@.str.125 = private constant [194 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_13: Expect arg[1] to be pointer\00", align 1
@.str.126 = private constant [127 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_13.p0.ndim is expected to equal 5\00", align 1
@.str.127 = private constant [251 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_13.p0.dtype is expected to be float32\00", align 1
@.str.128 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_13.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_p0_shape[0])\00", align 1
@.str.129 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_p0_shape[1]) == 16, Argument tvmgen_default_fused_layout_transform_13.p0.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_p0_shape[1])\00", align 1
@.str.130 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_p0_shape[2]) == 14, Argument tvmgen_default_fused_layout_transform_13.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_p0_shape[2])\00", align 1
@.str.131 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_p0_shape[3]) == 14, Argument tvmgen_default_fused_layout_transform_13.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_p0_shape[3])\00", align 1
@.str.132 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_p0_shape[4]) == 64, Argument tvmgen_default_fused_layout_transform_13.p0.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_p0_shape[4])\00", align 1
@.str.133 = private constant [423 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_p0_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_p0_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_p0_strides[1]), tvmgen_default_fused_layout_transform_13.p0.strides: expected to be compact array\00", align 1
@.str.134 = private constant [214 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_13.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.135 = private constant [194 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_13.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.136 = private constant [151 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_13.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.137 = private constant [299 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_13.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.138 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_13.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_T_layout_trans_shape[0])\00", align 1
@.str.139 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_T_layout_trans_shape[1]) == 2, Argument tvmgen_default_fused_layout_transform_13.T_layout_trans.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_T_layout_trans_shape[1])\00", align 1
@.str.140 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_T_layout_trans_shape[2]) == 14, Argument tvmgen_default_fused_layout_transform_13.T_layout_trans.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_T_layout_trans_shape[2])\00", align 1
@.str.141 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_T_layout_trans_shape[3]) == 14, Argument tvmgen_default_fused_layout_transform_13.T_layout_trans.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_T_layout_trans_shape[3])\00", align 1
@.str.142 = private constant [297 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_T_layout_trans_shape[4]) == 512, Argument tvmgen_default_fused_layout_transform_13.T_layout_trans.shape[4] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_T_layout_trans_shape[4])\00", align 1
@.str.143 = private constant [486 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_T_layout_trans_strides[4]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_T_layout_trans_strides[3]) and 7168 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_T_layout_trans_strides[2]) and 100352 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_13_T_layout_trans_strides[1]), tvmgen_default_fused_layout_transform_13.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.144 = private constant [250 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_13.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.145 = private constant [230 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_13.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.146 = private constant [236 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_13.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.148 = private constant [91 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_14: num_args should be 2\00", align 1
@.str.149 = private constant [146 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_14: Expect arg[0] to be pointer\00", align 1
@.str.150 = private constant [194 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_14: Expect arg[1] to be pointer\00", align 1
@.str.151 = private constant [127 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_14.p0.ndim is expected to equal 5\00", align 1
@.str.152 = private constant [251 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_14.p0.dtype is expected to be float32\00", align 1
@.str.153 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_14.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_p0_shape[0])\00", align 1
@.str.154 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_p0_shape[1]) == 4, Argument tvmgen_default_fused_layout_transform_14.p0.shape[1] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_p0_shape[1])\00", align 1
@.str.155 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_p0_shape[2]) == 14, Argument tvmgen_default_fused_layout_transform_14.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_p0_shape[2])\00", align 1
@.str.156 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_p0_shape[3]) == 14, Argument tvmgen_default_fused_layout_transform_14.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_p0_shape[3])\00", align 1
@.str.157 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_p0_shape[4]) == 64, Argument tvmgen_default_fused_layout_transform_14.p0.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_p0_shape[4])\00", align 1
@.str.158 = private constant [423 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_p0_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_p0_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_p0_strides[1]), tvmgen_default_fused_layout_transform_14.p0.strides: expected to be compact array\00", align 1
@.str.159 = private constant [214 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_14.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.160 = private constant [194 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_14.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.161 = private constant [151 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_14.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.162 = private constant [299 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_14.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.163 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_14.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_T_layout_trans_shape[0])\00", align 1
@.str.164 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_T_layout_trans_shape[1]) == 2, Argument tvmgen_default_fused_layout_transform_14.T_layout_trans.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_T_layout_trans_shape[1])\00", align 1
@.str.165 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_T_layout_trans_shape[2]) == 14, Argument tvmgen_default_fused_layout_transform_14.T_layout_trans.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_T_layout_trans_shape[2])\00", align 1
@.str.166 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_T_layout_trans_shape[3]) == 14, Argument tvmgen_default_fused_layout_transform_14.T_layout_trans.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_T_layout_trans_shape[3])\00", align 1
@.str.167 = private constant [297 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_T_layout_trans_shape[4]) == 128, Argument tvmgen_default_fused_layout_transform_14.T_layout_trans.shape[4] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_T_layout_trans_shape[4])\00", align 1
@.str.168 = private constant [485 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_T_layout_trans_strides[4]) and 128 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_T_layout_trans_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_T_layout_trans_strides[2]) and 25088 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_14_T_layout_trans_strides[1]), tvmgen_default_fused_layout_transform_14.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.169 = private constant [250 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_14.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.170 = private constant [230 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_14.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.171 = private constant [236 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_14.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.173 = private constant [91 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_15: num_args should be 2\00", align 1
@.str.174 = private constant [146 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_15: Expect arg[0] to be pointer\00", align 1
@.str.175 = private constant [194 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_15: Expect arg[1] to be pointer\00", align 1
@.str.176 = private constant [127 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_15.p0.ndim is expected to equal 5\00", align 1
@.str.177 = private constant [251 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_15.p0.dtype is expected to be float32\00", align 1
@.str.178 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_15.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_p0_shape[0])\00", align 1
@.str.179 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_p0_shape[1]) == 16, Argument tvmgen_default_fused_layout_transform_15.p0.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_p0_shape[1])\00", align 1
@.str.180 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_p0_shape[2]) == 14, Argument tvmgen_default_fused_layout_transform_15.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_p0_shape[2])\00", align 1
@.str.181 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_p0_shape[3]) == 14, Argument tvmgen_default_fused_layout_transform_15.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_p0_shape[3])\00", align 1
@.str.182 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_p0_shape[4]) == 16, Argument tvmgen_default_fused_layout_transform_15.p0.shape[4] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_p0_shape[4])\00", align 1
@.str.183 = private constant [422 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_p0_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_p0_strides[1]), tvmgen_default_fused_layout_transform_15.p0.strides: expected to be compact array\00", align 1
@.str.184 = private constant [214 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_15.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.185 = private constant [194 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_15.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.186 = private constant [151 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_15.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.187 = private constant [299 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_15.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.188 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_15.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_T_layout_trans_shape[0])\00", align 1
@.str.189 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_T_layout_trans_shape[1]) == 1, Argument tvmgen_default_fused_layout_transform_15.T_layout_trans.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_T_layout_trans_shape[1])\00", align 1
@.str.190 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_T_layout_trans_shape[2]) == 14, Argument tvmgen_default_fused_layout_transform_15.T_layout_trans.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_T_layout_trans_shape[2])\00", align 1
@.str.191 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_T_layout_trans_shape[3]) == 14, Argument tvmgen_default_fused_layout_transform_15.T_layout_trans.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_T_layout_trans_shape[3])\00", align 1
@.str.192 = private constant [297 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_T_layout_trans_shape[4]) == 256, Argument tvmgen_default_fused_layout_transform_15.T_layout_trans.shape[4] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_T_layout_trans_shape[4])\00", align 1
@.str.193 = private constant [388 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_T_layout_trans_strides[4]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_T_layout_trans_strides[3]) and 3584 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_15_T_layout_trans_strides[2]), tvmgen_default_fused_layout_transform_15.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.194 = private constant [250 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_15.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.195 = private constant [230 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_15.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.196 = private constant [236 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_15.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.198 = private constant [91 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_16: num_args should be 2\00", align 1
@.str.199 = private constant [146 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_16: Expect arg[0] to be pointer\00", align 1
@.str.200 = private constant [194 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_16: Expect arg[1] to be pointer\00", align 1
@.str.201 = private constant [127 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_16.p0.ndim is expected to equal 5\00", align 1
@.str.202 = private constant [251 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_16.p0.dtype is expected to be float32\00", align 1
@.str.203 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_16.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_p0_shape[0])\00", align 1
@.str.204 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_p0_shape[1]) == 16, Argument tvmgen_default_fused_layout_transform_16.p0.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_p0_shape[1])\00", align 1
@.str.205 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_p0_shape[2]) == 14, Argument tvmgen_default_fused_layout_transform_16.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_p0_shape[2])\00", align 1
@.str.206 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_p0_shape[3]) == 14, Argument tvmgen_default_fused_layout_transform_16.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_p0_shape[3])\00", align 1
@.str.207 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_p0_shape[4]) == 64, Argument tvmgen_default_fused_layout_transform_16.p0.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_p0_shape[4])\00", align 1
@.str.208 = private constant [423 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_p0_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_p0_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_p0_strides[1]), tvmgen_default_fused_layout_transform_16.p0.strides: expected to be compact array\00", align 1
@.str.209 = private constant [214 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_16.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.210 = private constant [194 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_16.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.211 = private constant [151 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_16.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.212 = private constant [299 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_16.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.213 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_16.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_T_layout_trans_shape[0])\00", align 1
@.str.214 = private constant [297 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_T_layout_trans_shape[1]) == 256, Argument tvmgen_default_fused_layout_transform_16.T_layout_trans.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_T_layout_trans_shape[1])\00", align 1
@.str.215 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_T_layout_trans_shape[2]) == 14, Argument tvmgen_default_fused_layout_transform_16.T_layout_trans.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_T_layout_trans_shape[2])\00", align 1
@.str.216 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_T_layout_trans_shape[3]) == 14, Argument tvmgen_default_fused_layout_transform_16.T_layout_trans.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_T_layout_trans_shape[3])\00", align 1
@.str.217 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_T_layout_trans_shape[4]) == 4, Argument tvmgen_default_fused_layout_transform_16.T_layout_trans.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_T_layout_trans_shape[4])\00", align 1
@.str.218 = private constant [479 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_T_layout_trans_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_T_layout_trans_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_T_layout_trans_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_16_T_layout_trans_strides[1]), tvmgen_default_fused_layout_transform_16.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.219 = private constant [250 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_16.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.220 = private constant [230 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_16.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.221 = private constant [236 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_16.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.223 = private constant [91 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_17: num_args should be 2\00", align 1
@.str.224 = private constant [146 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_17: Expect arg[0] to be pointer\00", align 1
@.str.225 = private constant [194 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_17: Expect arg[1] to be pointer\00", align 1
@.str.226 = private constant [127 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_17.p0.ndim is expected to equal 5\00", align 1
@.str.227 = private constant [251 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_17.p0.dtype is expected to be float32\00", align 1
@.str.228 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_17.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_p0_shape[0])\00", align 1
@.str.229 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_p0_shape[1]) == 16, Argument tvmgen_default_fused_layout_transform_17.p0.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_p0_shape[1])\00", align 1
@.str.230 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_p0_shape[2]) == 14, Argument tvmgen_default_fused_layout_transform_17.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_p0_shape[2])\00", align 1
@.str.231 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_p0_shape[3]) == 14, Argument tvmgen_default_fused_layout_transform_17.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_p0_shape[3])\00", align 1
@.str.232 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_p0_shape[4]) == 64, Argument tvmgen_default_fused_layout_transform_17.p0.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_p0_shape[4])\00", align 1
@.str.233 = private constant [423 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_p0_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_p0_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_p0_strides[1]), tvmgen_default_fused_layout_transform_17.p0.strides: expected to be compact array\00", align 1
@.str.234 = private constant [214 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_17.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.235 = private constant [194 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_17.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.236 = private constant [151 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_17.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.237 = private constant [299 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_17.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.238 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_17.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_T_layout_trans_shape[0])\00", align 1
@.str.239 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_T_layout_trans_shape[1]) == 1, Argument tvmgen_default_fused_layout_transform_17.T_layout_trans.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_T_layout_trans_shape[1])\00", align 1
@.str.240 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_T_layout_trans_shape[2]) == 14, Argument tvmgen_default_fused_layout_transform_17.T_layout_trans.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_T_layout_trans_shape[2])\00", align 1
@.str.241 = private constant [295 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_T_layout_trans_shape[3]) == 14, Argument tvmgen_default_fused_layout_transform_17.T_layout_trans.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_T_layout_trans_shape[3])\00", align 1
@.str.242 = private constant [299 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_T_layout_trans_shape[4]) == 1024, Argument tvmgen_default_fused_layout_transform_17.T_layout_trans.shape[4] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_T_layout_trans_shape[4])\00", align 1
@.str.243 = private constant [390 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_T_layout_trans_strides[4]) and 1024 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_T_layout_trans_strides[3]) and 14336 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_17_T_layout_trans_strides[2]), tvmgen_default_fused_layout_transform_17.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.244 = private constant [250 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_17.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.245 = private constant [230 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_17.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.246 = private constant [236 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_17.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.248 = private constant [91 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_18: num_args should be 2\00", align 1
@.str.249 = private constant [146 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_18: Expect arg[0] to be pointer\00", align 1
@.str.250 = private constant [194 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_18: Expect arg[1] to be pointer\00", align 1
@.str.251 = private constant [127 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_18.p0.ndim is expected to equal 5\00", align 1
@.str.252 = private constant [251 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_18.p0.dtype is expected to be float32\00", align 1
@.str.253 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_18.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_p0_shape[0])\00", align 1
@.str.254 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_p0_shape[1]) == 64, Argument tvmgen_default_fused_layout_transform_18.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_p0_shape[1])\00", align 1
@.str.255 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_p0_shape[2]) == 7, Argument tvmgen_default_fused_layout_transform_18.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_p0_shape[2])\00", align 1
@.str.256 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_p0_shape[3]) == 7, Argument tvmgen_default_fused_layout_transform_18.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_p0_shape[3])\00", align 1
@.str.257 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_p0_shape[4]) == 32, Argument tvmgen_default_fused_layout_transform_18.p0.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_p0_shape[4])\00", align 1
@.str.258 = private constant [422 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_p0_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_p0_strides[2]) and 1568 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_p0_strides[1]), tvmgen_default_fused_layout_transform_18.p0.strides: expected to be compact array\00", align 1
@.str.259 = private constant [214 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_18.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.260 = private constant [194 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_18.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.261 = private constant [151 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_18.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.262 = private constant [299 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_18.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.263 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_18.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_T_layout_trans_shape[0])\00", align 1
@.str.264 = private constant [297 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_T_layout_trans_shape[1]) == 512, Argument tvmgen_default_fused_layout_transform_18.T_layout_trans.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_T_layout_trans_shape[1])\00", align 1
@.str.265 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_T_layout_trans_shape[2]) == 7, Argument tvmgen_default_fused_layout_transform_18.T_layout_trans.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_T_layout_trans_shape[2])\00", align 1
@.str.266 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_T_layout_trans_shape[3]) == 7, Argument tvmgen_default_fused_layout_transform_18.T_layout_trans.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_T_layout_trans_shape[3])\00", align 1
@.str.267 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_T_layout_trans_shape[4]) == 4, Argument tvmgen_default_fused_layout_transform_18.T_layout_trans.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_T_layout_trans_shape[4])\00", align 1
@.str.268 = private constant [479 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_T_layout_trans_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_T_layout_trans_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_T_layout_trans_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_18_T_layout_trans_strides[1]), tvmgen_default_fused_layout_transform_18.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.269 = private constant [250 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_18.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.270 = private constant [230 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_18.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.271 = private constant [236 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_18.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.273 = private constant [91 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_19: num_args should be 2\00", align 1
@.str.274 = private constant [146 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_19: Expect arg[0] to be pointer\00", align 1
@.str.275 = private constant [194 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_19: Expect arg[1] to be pointer\00", align 1
@.str.276 = private constant [127 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_19.p0.ndim is expected to equal 5\00", align 1
@.str.277 = private constant [251 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_19.p0.dtype is expected to be float32\00", align 1
@.str.278 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_19.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_p0_shape[0])\00", align 1
@.str.279 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_p0_shape[1]) == 16, Argument tvmgen_default_fused_layout_transform_19.p0.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_p0_shape[1])\00", align 1
@.str.280 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_p0_shape[2]) == 7, Argument tvmgen_default_fused_layout_transform_19.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_p0_shape[2])\00", align 1
@.str.281 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_p0_shape[3]) == 7, Argument tvmgen_default_fused_layout_transform_19.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_p0_shape[3])\00", align 1
@.str.282 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_p0_shape[4]) == 32, Argument tvmgen_default_fused_layout_transform_19.p0.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_p0_shape[4])\00", align 1
@.str.283 = private constant [422 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_p0_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_p0_strides[2]) and 1568 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_p0_strides[1]), tvmgen_default_fused_layout_transform_19.p0.strides: expected to be compact array\00", align 1
@.str.284 = private constant [214 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_19.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.285 = private constant [194 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_19.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.286 = private constant [151 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_19.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.287 = private constant [299 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_19.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.288 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_19.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_T_layout_trans_shape[0])\00", align 1
@.str.289 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_T_layout_trans_shape[1]) == 1, Argument tvmgen_default_fused_layout_transform_19.T_layout_trans.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_T_layout_trans_shape[1])\00", align 1
@.str.290 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_T_layout_trans_shape[2]) == 7, Argument tvmgen_default_fused_layout_transform_19.T_layout_trans.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_T_layout_trans_shape[2])\00", align 1
@.str.291 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_T_layout_trans_shape[3]) == 7, Argument tvmgen_default_fused_layout_transform_19.T_layout_trans.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_T_layout_trans_shape[3])\00", align 1
@.str.292 = private constant [297 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_T_layout_trans_shape[4]) == 512, Argument tvmgen_default_fused_layout_transform_19.T_layout_trans.shape[4] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_T_layout_trans_shape[4])\00", align 1
@.str.293 = private constant [388 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_T_layout_trans_strides[4]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_T_layout_trans_strides[3]) and 3584 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_19_T_layout_trans_strides[2]), tvmgen_default_fused_layout_transform_19.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.294 = private constant [250 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_19.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.295 = private constant [230 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_19.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.296 = private constant [236 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_19.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.298 = private constant [90 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_2: num_args should be 2\00", align 1
@.str.299 = private constant [145 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_2: Expect arg[0] to be pointer\00", align 1
@.str.300 = private constant [193 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_2: Expect arg[1] to be pointer\00", align 1
@.str.301 = private constant [126 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_2.p0.ndim is expected to equal 5\00", align 1
@.str.302 = private constant [250 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_2.p0.dtype is expected to be float32\00", align 1
@.str.303 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_2.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_p0_shape[0])\00", align 1
@.str.304 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_p0_shape[1]) == 4, Argument tvmgen_default_fused_layout_transform_2.p0.shape[1] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_p0_shape[1])\00", align 1
@.str.305 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_p0_shape[2]) == 56, Argument tvmgen_default_fused_layout_transform_2.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_p0_shape[2])\00", align 1
@.str.306 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_p0_shape[3]) == 56, Argument tvmgen_default_fused_layout_transform_2.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_p0_shape[3])\00", align 1
@.str.307 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_p0_shape[4]) == 16, Argument tvmgen_default_fused_layout_transform_2.p0.shape[4] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_p0_shape[4])\00", align 1
@.str.308 = private constant [418 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_p0_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_p0_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_p0_strides[2]) and 50176 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_p0_strides[1]), tvmgen_default_fused_layout_transform_2.p0.strides: expected to be compact array\00", align 1
@.str.309 = private constant [213 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_2.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.310 = private constant [193 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_2.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.311 = private constant [150 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_2.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.312 = private constant [298 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_2.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.313 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_2.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_T_layout_trans_shape[0])\00", align 1
@.str.314 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_T_layout_trans_shape[1]) == 1, Argument tvmgen_default_fused_layout_transform_2.T_layout_trans.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_T_layout_trans_shape[1])\00", align 1
@.str.315 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_T_layout_trans_shape[2]) == 56, Argument tvmgen_default_fused_layout_transform_2.T_layout_trans.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_T_layout_trans_shape[2])\00", align 1
@.str.316 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_T_layout_trans_shape[3]) == 56, Argument tvmgen_default_fused_layout_transform_2.T_layout_trans.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_T_layout_trans_shape[3])\00", align 1
@.str.317 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_T_layout_trans_shape[4]) == 64, Argument tvmgen_default_fused_layout_transform_2.T_layout_trans.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_T_layout_trans_shape[4])\00", align 1
@.str.318 = private constant [383 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_T_layout_trans_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_T_layout_trans_strides[3]) and 3584 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_2_T_layout_trans_strides[2]), tvmgen_default_fused_layout_transform_2.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.319 = private constant [249 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_2.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.320 = private constant [229 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_2.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.321 = private constant [235 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_2.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.323 = private constant [91 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_20: num_args should be 2\00", align 1
@.str.324 = private constant [146 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_20: Expect arg[0] to be pointer\00", align 1
@.str.325 = private constant [194 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_20: Expect arg[1] to be pointer\00", align 1
@.str.326 = private constant [127 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_20.p0.ndim is expected to equal 5\00", align 1
@.str.327 = private constant [251 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_20.p0.dtype is expected to be float32\00", align 1
@.str.328 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_20.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_p0_shape[0])\00", align 1
@.str.329 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_p0_shape[1]) == 16, Argument tvmgen_default_fused_layout_transform_20.p0.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_p0_shape[1])\00", align 1
@.str.330 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_p0_shape[2]) == 7, Argument tvmgen_default_fused_layout_transform_20.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_p0_shape[2])\00", align 1
@.str.331 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_p0_shape[3]) == 7, Argument tvmgen_default_fused_layout_transform_20.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_p0_shape[3])\00", align 1
@.str.332 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_p0_shape[4]) == 32, Argument tvmgen_default_fused_layout_transform_20.p0.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_p0_shape[4])\00", align 1
@.str.333 = private constant [422 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_p0_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_p0_strides[2]) and 1568 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_p0_strides[1]), tvmgen_default_fused_layout_transform_20.p0.strides: expected to be compact array\00", align 1
@.str.334 = private constant [214 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_20.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.335 = private constant [194 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_20.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.336 = private constant [151 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_20.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.337 = private constant [299 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_20.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.338 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_20.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_T_layout_trans_shape[0])\00", align 1
@.str.339 = private constant [297 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_T_layout_trans_shape[1]) == 128, Argument tvmgen_default_fused_layout_transform_20.T_layout_trans.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_T_layout_trans_shape[1])\00", align 1
@.str.340 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_T_layout_trans_shape[2]) == 7, Argument tvmgen_default_fused_layout_transform_20.T_layout_trans.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_T_layout_trans_shape[2])\00", align 1
@.str.341 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_T_layout_trans_shape[3]) == 7, Argument tvmgen_default_fused_layout_transform_20.T_layout_trans.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_T_layout_trans_shape[3])\00", align 1
@.str.342 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_T_layout_trans_shape[4]) == 4, Argument tvmgen_default_fused_layout_transform_20.T_layout_trans.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_T_layout_trans_shape[4])\00", align 1
@.str.343 = private constant [479 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_T_layout_trans_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_T_layout_trans_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_T_layout_trans_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_20_T_layout_trans_strides[1]), tvmgen_default_fused_layout_transform_20.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.344 = private constant [250 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_20.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.345 = private constant [230 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_20.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.346 = private constant [236 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_20.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.348 = private constant [90 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_3: num_args should be 2\00", align 1
@.str.349 = private constant [145 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_3: Expect arg[0] to be pointer\00", align 1
@.str.350 = private constant [193 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_3: Expect arg[1] to be pointer\00", align 1
@.str.351 = private constant [126 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_3.p0.ndim is expected to equal 5\00", align 1
@.str.352 = private constant [250 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_3.p0.dtype is expected to be float32\00", align 1
@.str.353 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_3.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_p0_shape[0])\00", align 1
@.str.354 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_p0_shape[1]) == 2, Argument tvmgen_default_fused_layout_transform_3.p0.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_p0_shape[1])\00", align 1
@.str.355 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_p0_shape[2]) == 56, Argument tvmgen_default_fused_layout_transform_3.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_p0_shape[2])\00", align 1
@.str.356 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_p0_shape[3]) == 56, Argument tvmgen_default_fused_layout_transform_3.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_p0_shape[3])\00", align 1
@.str.357 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_p0_shape[4]) == 32, Argument tvmgen_default_fused_layout_transform_3.p0.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_p0_shape[4])\00", align 1
@.str.358 = private constant [420 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_p0_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_p0_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_p0_strides[2]) and 100352 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_p0_strides[1]), tvmgen_default_fused_layout_transform_3.p0.strides: expected to be compact array\00", align 1
@.str.359 = private constant [213 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_3.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.360 = private constant [193 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_3.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.361 = private constant [150 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_3.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.362 = private constant [298 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_3.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.363 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_3.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_T_layout_trans_shape[0])\00", align 1
@.str.364 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_T_layout_trans_shape[1]) == 16, Argument tvmgen_default_fused_layout_transform_3.T_layout_trans.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_T_layout_trans_shape[1])\00", align 1
@.str.365 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_T_layout_trans_shape[2]) == 56, Argument tvmgen_default_fused_layout_transform_3.T_layout_trans.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_T_layout_trans_shape[2])\00", align 1
@.str.366 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_T_layout_trans_shape[3]) == 56, Argument tvmgen_default_fused_layout_transform_3.T_layout_trans.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_T_layout_trans_shape[3])\00", align 1
@.str.367 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_T_layout_trans_shape[4]) == 4, Argument tvmgen_default_fused_layout_transform_3.T_layout_trans.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_T_layout_trans_shape[4])\00", align 1
@.str.368 = private constant [477 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_T_layout_trans_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_T_layout_trans_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_T_layout_trans_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_3_T_layout_trans_strides[1]), tvmgen_default_fused_layout_transform_3.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.369 = private constant [249 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_3.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.370 = private constant [229 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_3.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.371 = private constant [235 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_3.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.373 = private constant [90 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_4: num_args should be 2\00", align 1
@.str.374 = private constant [145 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_4: Expect arg[0] to be pointer\00", align 1
@.str.375 = private constant [193 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_4: Expect arg[1] to be pointer\00", align 1
@.str.376 = private constant [126 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_4.p0.ndim is expected to equal 5\00", align 1
@.str.377 = private constant [250 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_4.p0.dtype is expected to be float32\00", align 1
@.str.378 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_4.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_p0_shape[0])\00", align 1
@.str.379 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_p0_shape[1]) == 8, Argument tvmgen_default_fused_layout_transform_4.p0.shape[1] has an unsatisfied constraint: 8 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_p0_shape[1])\00", align 1
@.str.380 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_p0_shape[2]) == 56, Argument tvmgen_default_fused_layout_transform_4.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_p0_shape[2])\00", align 1
@.str.381 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_p0_shape[3]) == 56, Argument tvmgen_default_fused_layout_transform_4.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_p0_shape[3])\00", align 1
@.str.382 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_p0_shape[4]) == 32, Argument tvmgen_default_fused_layout_transform_4.p0.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_p0_shape[4])\00", align 1
@.str.383 = private constant [420 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_p0_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_p0_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_p0_strides[2]) and 100352 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_p0_strides[1]), tvmgen_default_fused_layout_transform_4.p0.strides: expected to be compact array\00", align 1
@.str.384 = private constant [213 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_4.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.385 = private constant [193 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_4.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.386 = private constant [150 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_4.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.387 = private constant [298 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_4.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.388 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_4.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_T_layout_trans_shape[0])\00", align 1
@.str.389 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_T_layout_trans_shape[1]) == 1, Argument tvmgen_default_fused_layout_transform_4.T_layout_trans.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_T_layout_trans_shape[1])\00", align 1
@.str.390 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_T_layout_trans_shape[2]) == 56, Argument tvmgen_default_fused_layout_transform_4.T_layout_trans.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_T_layout_trans_shape[2])\00", align 1
@.str.391 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_T_layout_trans_shape[3]) == 56, Argument tvmgen_default_fused_layout_transform_4.T_layout_trans.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_T_layout_trans_shape[3])\00", align 1
@.str.392 = private constant [294 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_T_layout_trans_shape[4]) == 256, Argument tvmgen_default_fused_layout_transform_4.T_layout_trans.shape[4] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_T_layout_trans_shape[4])\00", align 1
@.str.393 = private constant [385 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_T_layout_trans_strides[4]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_T_layout_trans_strides[3]) and 14336 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_4_T_layout_trans_strides[2]), tvmgen_default_fused_layout_transform_4.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.394 = private constant [249 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_4.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.395 = private constant [229 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_4.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.396 = private constant [235 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_4.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.398 = private constant [90 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_5: num_args should be 2\00", align 1
@.str.399 = private constant [145 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_5: Expect arg[0] to be pointer\00", align 1
@.str.400 = private constant [193 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_5: Expect arg[1] to be pointer\00", align 1
@.str.401 = private constant [126 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_5.p0.ndim is expected to equal 5\00", align 1
@.str.402 = private constant [250 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_5.p0.dtype is expected to be float32\00", align 1
@.str.403 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_5.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_p0_shape[0])\00", align 1
@.str.404 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_p0_shape[1]) == 2, Argument tvmgen_default_fused_layout_transform_5.p0.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_p0_shape[1])\00", align 1
@.str.405 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_p0_shape[2]) == 56, Argument tvmgen_default_fused_layout_transform_5.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_p0_shape[2])\00", align 1
@.str.406 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_p0_shape[3]) == 56, Argument tvmgen_default_fused_layout_transform_5.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_p0_shape[3])\00", align 1
@.str.407 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_p0_shape[4]) == 32, Argument tvmgen_default_fused_layout_transform_5.p0.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_p0_shape[4])\00", align 1
@.str.408 = private constant [420 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_p0_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_p0_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_p0_strides[2]) and 100352 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_p0_strides[1]), tvmgen_default_fused_layout_transform_5.p0.strides: expected to be compact array\00", align 1
@.str.409 = private constant [213 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_5.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.410 = private constant [193 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_5.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.411 = private constant [150 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_5.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.412 = private constant [298 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_5.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.413 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_5.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_T_layout_trans_shape[0])\00", align 1
@.str.414 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_T_layout_trans_shape[1]) == 1, Argument tvmgen_default_fused_layout_transform_5.T_layout_trans.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_T_layout_trans_shape[1])\00", align 1
@.str.415 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_T_layout_trans_shape[2]) == 56, Argument tvmgen_default_fused_layout_transform_5.T_layout_trans.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_T_layout_trans_shape[2])\00", align 1
@.str.416 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_T_layout_trans_shape[3]) == 56, Argument tvmgen_default_fused_layout_transform_5.T_layout_trans.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_T_layout_trans_shape[3])\00", align 1
@.str.417 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_T_layout_trans_shape[4]) == 64, Argument tvmgen_default_fused_layout_transform_5.T_layout_trans.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_T_layout_trans_shape[4])\00", align 1
@.str.418 = private constant [383 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_T_layout_trans_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_T_layout_trans_strides[3]) and 3584 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_5_T_layout_trans_strides[2]), tvmgen_default_fused_layout_transform_5.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.419 = private constant [249 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_5.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.420 = private constant [229 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_5.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.421 = private constant [235 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_5.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.423 = private constant [90 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_6: num_args should be 2\00", align 1
@.str.424 = private constant [145 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_6: Expect arg[0] to be pointer\00", align 1
@.str.425 = private constant [193 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_6: Expect arg[1] to be pointer\00", align 1
@.str.426 = private constant [126 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_6.p0.ndim is expected to equal 5\00", align 1
@.str.427 = private constant [250 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_6.p0.dtype is expected to be float32\00", align 1
@.str.428 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_6.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_p0_shape[0])\00", align 1
@.str.429 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_p0_shape[1]) == 8, Argument tvmgen_default_fused_layout_transform_6.p0.shape[1] has an unsatisfied constraint: 8 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_p0_shape[1])\00", align 1
@.str.430 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_p0_shape[2]) == 56, Argument tvmgen_default_fused_layout_transform_6.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_p0_shape[2])\00", align 1
@.str.431 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_p0_shape[3]) == 56, Argument tvmgen_default_fused_layout_transform_6.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_p0_shape[3])\00", align 1
@.str.432 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_p0_shape[4]) == 32, Argument tvmgen_default_fused_layout_transform_6.p0.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_p0_shape[4])\00", align 1
@.str.433 = private constant [420 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_p0_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_p0_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_p0_strides[2]) and 100352 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_p0_strides[1]), tvmgen_default_fused_layout_transform_6.p0.strides: expected to be compact array\00", align 1
@.str.434 = private constant [213 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_6.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.435 = private constant [193 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_6.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.436 = private constant [150 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_6.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.437 = private constant [298 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_6.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.438 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_6.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_T_layout_trans_shape[0])\00", align 1
@.str.439 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_T_layout_trans_shape[1]) == 64, Argument tvmgen_default_fused_layout_transform_6.T_layout_trans.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_T_layout_trans_shape[1])\00", align 1
@.str.440 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_T_layout_trans_shape[2]) == 56, Argument tvmgen_default_fused_layout_transform_6.T_layout_trans.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_T_layout_trans_shape[2])\00", align 1
@.str.441 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_T_layout_trans_shape[3]) == 56, Argument tvmgen_default_fused_layout_transform_6.T_layout_trans.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_T_layout_trans_shape[3])\00", align 1
@.str.442 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_T_layout_trans_shape[4]) == 4, Argument tvmgen_default_fused_layout_transform_6.T_layout_trans.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_T_layout_trans_shape[4])\00", align 1
@.str.443 = private constant [477 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_T_layout_trans_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_T_layout_trans_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_T_layout_trans_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_6_T_layout_trans_strides[1]), tvmgen_default_fused_layout_transform_6.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.444 = private constant [249 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_6.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.445 = private constant [229 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_6.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.446 = private constant [235 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_6.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.448 = private constant [90 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_7: num_args should be 2\00", align 1
@.str.449 = private constant [145 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_7: Expect arg[0] to be pointer\00", align 1
@.str.450 = private constant [193 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_7: Expect arg[1] to be pointer\00", align 1
@.str.451 = private constant [126 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_7.p0.ndim is expected to equal 5\00", align 1
@.str.452 = private constant [250 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_7.p0.dtype is expected to be float32\00", align 1
@.str.453 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_7.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_p0_shape[0])\00", align 1
@.str.454 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_p0_shape[1]) == 8, Argument tvmgen_default_fused_layout_transform_7.p0.shape[1] has an unsatisfied constraint: 8 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_p0_shape[1])\00", align 1
@.str.455 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_p0_shape[2]) == 28, Argument tvmgen_default_fused_layout_transform_7.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_p0_shape[2])\00", align 1
@.str.456 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_p0_shape[3]) == 28, Argument tvmgen_default_fused_layout_transform_7.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_p0_shape[3])\00", align 1
@.str.457 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_p0_shape[4]) == 64, Argument tvmgen_default_fused_layout_transform_7.p0.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_p0_shape[4])\00", align 1
@.str.458 = private constant [419 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_p0_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_p0_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_p0_strides[2]) and 50176 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_p0_strides[1]), tvmgen_default_fused_layout_transform_7.p0.strides: expected to be compact array\00", align 1
@.str.459 = private constant [213 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_7.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.460 = private constant [193 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_7.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.461 = private constant [150 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_7.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.462 = private constant [298 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_7.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.463 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_7.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_T_layout_trans_shape[0])\00", align 1
@.str.464 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_T_layout_trans_shape[1]) == 16, Argument tvmgen_default_fused_layout_transform_7.T_layout_trans.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_T_layout_trans_shape[1])\00", align 1
@.str.465 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_T_layout_trans_shape[2]) == 28, Argument tvmgen_default_fused_layout_transform_7.T_layout_trans.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_T_layout_trans_shape[2])\00", align 1
@.str.466 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_T_layout_trans_shape[3]) == 28, Argument tvmgen_default_fused_layout_transform_7.T_layout_trans.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_T_layout_trans_shape[3])\00", align 1
@.str.467 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_T_layout_trans_shape[4]) == 32, Argument tvmgen_default_fused_layout_transform_7.T_layout_trans.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_T_layout_trans_shape[4])\00", align 1
@.str.468 = private constant [478 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_T_layout_trans_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_T_layout_trans_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_T_layout_trans_strides[2]) and 25088 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_7_T_layout_trans_strides[1]), tvmgen_default_fused_layout_transform_7.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.469 = private constant [249 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_7.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.470 = private constant [229 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_7.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.471 = private constant [235 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_7.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.473 = private constant [90 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_8: num_args should be 2\00", align 1
@.str.474 = private constant [145 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_8: Expect arg[0] to be pointer\00", align 1
@.str.475 = private constant [193 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_8: Expect arg[1] to be pointer\00", align 1
@.str.476 = private constant [126 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_8.p0.ndim is expected to equal 5\00", align 1
@.str.477 = private constant [250 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_8.p0.dtype is expected to be float32\00", align 1
@.str.478 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_8.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_p0_shape[0])\00", align 1
@.str.479 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_p0_shape[1]) == 16, Argument tvmgen_default_fused_layout_transform_8.p0.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_p0_shape[1])\00", align 1
@.str.480 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_p0_shape[2]) == 28, Argument tvmgen_default_fused_layout_transform_8.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_p0_shape[2])\00", align 1
@.str.481 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_p0_shape[3]) == 28, Argument tvmgen_default_fused_layout_transform_8.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_p0_shape[3])\00", align 1
@.str.482 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_p0_shape[4]) == 32, Argument tvmgen_default_fused_layout_transform_8.p0.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_p0_shape[4])\00", align 1
@.str.483 = private constant [418 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_p0_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_p0_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_p0_strides[2]) and 25088 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_p0_strides[1]), tvmgen_default_fused_layout_transform_8.p0.strides: expected to be compact array\00", align 1
@.str.484 = private constant [213 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_8.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.485 = private constant [193 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_8.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.486 = private constant [150 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_8.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.487 = private constant [298 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_8.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.488 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_8.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_T_layout_trans_shape[0])\00", align 1
@.str.489 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_T_layout_trans_shape[1]) == 1, Argument tvmgen_default_fused_layout_transform_8.T_layout_trans.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_T_layout_trans_shape[1])\00", align 1
@.str.490 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_T_layout_trans_shape[2]) == 28, Argument tvmgen_default_fused_layout_transform_8.T_layout_trans.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_T_layout_trans_shape[2])\00", align 1
@.str.491 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_T_layout_trans_shape[3]) == 28, Argument tvmgen_default_fused_layout_transform_8.T_layout_trans.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_T_layout_trans_shape[3])\00", align 1
@.str.492 = private constant [294 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_T_layout_trans_shape[4]) == 512, Argument tvmgen_default_fused_layout_transform_8.T_layout_trans.shape[4] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_T_layout_trans_shape[4])\00", align 1
@.str.493 = private constant [385 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_T_layout_trans_strides[4]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_T_layout_trans_strides[3]) and 14336 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_8_T_layout_trans_strides[2]), tvmgen_default_fused_layout_transform_8.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.494 = private constant [249 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_8.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.495 = private constant [229 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_8.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.496 = private constant [235 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_8.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.498 = private constant [90 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_9: num_args should be 2\00", align 1
@.str.499 = private constant [145 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_9: Expect arg[0] to be pointer\00", align 1
@.str.500 = private constant [193 x i8] c"Assert fail: T_layout_trans_code == 3 or T_layout_trans_code == 13 or T_layout_trans_code == 7 or T_layout_trans_code == 4, tvmgen_default_fused_layout_transform_9: Expect arg[1] to be pointer\00", align 1
@.str.501 = private constant [126 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_9.p0.ndim is expected to equal 5\00", align 1
@.str.502 = private constant [250 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_9.p0.dtype is expected to be float32\00", align 1
@.str.503 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_9.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_p0_shape[0])\00", align 1
@.str.504 = private constant [254 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_p0_shape[1]) == 2, Argument tvmgen_default_fused_layout_transform_9.p0.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_p0_shape[1])\00", align 1
@.str.505 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_p0_shape[2]) == 28, Argument tvmgen_default_fused_layout_transform_9.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_p0_shape[2])\00", align 1
@.str.506 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_p0_shape[3]) == 28, Argument tvmgen_default_fused_layout_transform_9.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_p0_shape[3])\00", align 1
@.str.507 = private constant [256 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_p0_shape[4]) == 64, Argument tvmgen_default_fused_layout_transform_9.p0.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_p0_shape[4])\00", align 1
@.str.508 = private constant [419 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_p0_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_p0_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_p0_strides[2]) and 50176 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_p0_strides[1]), tvmgen_default_fused_layout_transform_9.p0.strides: expected to be compact array\00", align 1
@.str.509 = private constant [213 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_9.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.510 = private constant [193 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_9.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.511 = private constant [150 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_layout_trans, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_9.T_layout_trans.ndim is expected to equal 5\00", align 1
@.str.512 = private constant [298 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_layout_trans, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_layout_trans, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_9.T_layout_trans.dtype is expected to be float32\00", align 1
@.str.513 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_T_layout_trans_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_9.T_layout_trans.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_T_layout_trans_shape[0])\00", align 1
@.str.514 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_T_layout_trans_shape[1]) == 1, Argument tvmgen_default_fused_layout_transform_9.T_layout_trans.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_T_layout_trans_shape[1])\00", align 1
@.str.515 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_T_layout_trans_shape[2]) == 28, Argument tvmgen_default_fused_layout_transform_9.T_layout_trans.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_T_layout_trans_shape[2])\00", align 1
@.str.516 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_T_layout_trans_shape[3]) == 28, Argument tvmgen_default_fused_layout_transform_9.T_layout_trans.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_T_layout_trans_shape[3])\00", align 1
@.str.517 = private constant [294 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_T_layout_trans_shape[4]) == 128, Argument tvmgen_default_fused_layout_transform_9.T_layout_trans.shape[4] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_T_layout_trans_shape[4])\00", align 1
@.str.518 = private constant [384 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_T_layout_trans_strides[4]) and 128 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_T_layout_trans_strides[3]) and 3584 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_9_T_layout_trans_strides[2]), tvmgen_default_fused_layout_transform_9.T_layout_trans.strides: expected to be compact array\00", align 1
@.str.519 = private constant [249 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_9.T_layout_trans.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_layout_trans, 0, 8, \22uint64\22)\00", align 1
@.str.520 = private constant [229 x i8] c"Assert fail: T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_9.T_layout_trans.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_layout_trans, 0, 10, \22int32\22)\00", align 1
@.str.521 = private constant [235 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_9.T_layout_trans.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_layout_trans, 0, 9, \22int32\22)\00", align 1
@.str.523 = private constant [104 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_layout_transform_reshape_squeeze: num_args should be 2\00", align 1
@.str.524 = private constant [159 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_layout_transform_reshape_squeeze: Expect arg[0] to be pointer\00", align 1
@.str.525 = private constant [187 x i8] c"Assert fail: T_squeeze_code == 3 or T_squeeze_code == 13 or T_squeeze_code == 7 or T_squeeze_code == 4, tvmgen_default_fused_layout_transform_reshape_squeeze: Expect arg[1] to be pointer\00", align 1
@.str.526 = private constant [140 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_reshape_squeeze.p0.ndim is expected to equal 5\00", align 1
@.str.527 = private constant [264 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_reshape_squeeze.p0.dtype is expected to be float32\00", align 1
@.str.528 = private constant [296 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[0])\00", align 1
@.str.529 = private constant [298 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[1]) == 64, Argument tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[1])\00", align 1
@.str.530 = private constant [296 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[2]) == 1, Argument tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[2])\00", align 1
@.str.531 = private constant [296 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[3]) == 1, Argument tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[3])\00", align 1
@.str.532 = private constant [298 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[4]) == 32, Argument tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_shape[4])\00", align 1
@.str.533 = private constant [294 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_p0_strides[1]), tvmgen_default_fused_layout_transform_reshape_squeeze.p0.strides: expected to be compact array\00", align 1
@.str.534 = private constant [227 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_reshape_squeeze.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.535 = private constant [207 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_reshape_squeeze.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.536 = private constant [154 x i8] c"Assert fail: 2 == T.tvm_struct_get(T_squeeze, 0, 4, \22int32\22), tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.ndim is expected to equal 2\00", align 1
@.str.537 = private constant [292 x i8] c"Assert fail: T.tvm_struct_get(T_squeeze, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_squeeze, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_squeeze, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.dtype is expected to be float32\00", align 1
@.str.538 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_T_squeeze_shape[0]) == 1, Argument tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_T_squeeze_shape[0])\00", align 1
@.str.539 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_T_squeeze_shape[1]) == 2048, Argument tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_T_squeeze_shape[1])\00", align 1
@.str.540 = private constant [213 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_layout_transform_reshape_squeeze_T_squeeze_strides[1]), tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.strides: expected to be compact array\00", align 1
@.str.541 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_squeeze, 0, 8, \22uint64\22), Argument tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_squeeze, 0, 8, \22uint64\22)\00", align 1
@.str.542 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(T_squeeze, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_squeeze, 0, 10, \22int32\22)\00", align 1
@.str.543 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_squeeze, 0, 9, \22int32\22), Argument tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_squeeze, 0, 9, \22int32\22)\00", align 1
@.str.544 = private constant [94 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_nn_adaptive_avg_pool2d: num_args should be 2\00", align 1
@.str.545 = private constant [149 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_adaptive_avg_pool2d: Expect arg[0] to be pointer\00", align 1
@.str.546 = private constant [209 x i8] c"Assert fail: adaptive_pool_avg_code == 3 or adaptive_pool_avg_code == 13 or adaptive_pool_avg_code == 7 or adaptive_pool_avg_code == 4, tvmgen_default_fused_nn_adaptive_avg_pool2d: Expect arg[1] to be pointer\00", align 1
@.str.547 = private constant [130 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.ndim is expected to equal 5\00", align 1
@.str.548 = private constant [254 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.dtype is expected to be float32\00", align 1
@.str.549 = private constant [266 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[0])\00", align 1
@.str.550 = private constant [268 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[1])\00", align 1
@.str.551 = private constant [266 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[2]) == 7, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[2])\00", align 1
@.str.552 = private constant [266 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[3]) == 7, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[3])\00", align 1
@.str.553 = private constant [268 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[4]) == 32, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_shape[4])\00", align 1
@.str.554 = private constant [437 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_strides[2]) and 1568 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_p0_strides[1]), tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides: expected to be compact array\00", align 1
@.str.555 = private constant [217 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.556 = private constant [197 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.557 = private constant [160 x i8] c"Assert fail: 5 == T.tvm_struct_get(adaptive_pool_avg, 0, 4, \22int32\22), tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.ndim is expected to equal 5\00", align 1
@.str.558 = private constant [314 x i8] c"Assert fail: T.tvm_struct_get(adaptive_pool_avg, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(adaptive_pool_avg, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(adaptive_pool_avg, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.dtype is expected to be float32\00", align 1
@.str.559 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[0]) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[0])\00", align 1
@.str.560 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[1]) == 64, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[1])\00", align 1
@.str.561 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[2]) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[2])\00", align 1
@.str.562 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[3]) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[3])\00", align 1
@.str.563 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[4]) == 32, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_shape[4])\00", align 1
@.str.564 = private constant [309 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_adaptive_avg_pool2d_adaptive_pool_avg_strides[1]), tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.strides: expected to be compact array\00", align 1
@.str.565 = private constant [262 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(adaptive_pool_avg, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(adaptive_pool_avg, 0, 8, \22uint64\22)\00", align 1
@.str.566 = private constant [242 x i8] c"Assert fail: T.tvm_struct_get(adaptive_pool_avg, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(adaptive_pool_avg, 0, 10, \22int32\22)\00", align 1
@.str.567 = private constant [248 x i8] c"Assert fail: dev_id == T.tvm_struct_get(adaptive_pool_avg, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(adaptive_pool_avg, 0, 9, \22int32\22)\00", align 1
@__TVMBackendAllocWorkspace = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@__TVMBackendFreeWorkspace = linkonce dllexport local_unnamed_addr global ptr null, comdat, align 8
@.str.570 = private constant [99 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add: num_args should be 4\00", align 1
@.str.571 = private constant [154 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add: Expect arg[0] to be pointer\00", align 1
@.str.572 = private constant [154 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add: Expect arg[1] to be pointer\00", align 1
@.str.573 = private constant [154 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add: Expect arg[2] to be pointer\00", align 1
@.str.574 = private constant [166 x i8] c"Assert fail: T_add_code == 3 or T_add_code == 13 or T_add_code == 7 or T_add_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add: Expect arg[3] to be pointer\00", align 1
@.str.575 = private constant [135 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.ndim is expected to equal 5\00", align 1
@.str.576 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.dtype is expected to be float32\00", align 1
@.str.577 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p0_shape[0])\00", align 1
@.str.578 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p0_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p0_shape[1])\00", align 1
@.str.579 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p0_shape[2])\00", align 1
@.str.580 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p0_shape[3])\00", align 1
@.str.581 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p0_shape[4])\00", align 1
@.str.582 = private constant [462 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.strides: expected to be compact array\00", align 1
@.str.583 = private constant [222 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.584 = private constant [202 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.585 = private constant [135 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.ndim is expected to equal 6\00", align 1
@.str.586 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.dtype is expected to be float32\00", align 1
@.str.587 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p1_shape[0]) == 8, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.shape[0] has an unsatisfied constraint: 8 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p1_shape[0])\00", align 1
@.str.588 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p1_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p1_shape[1])\00", align 1
@.str.589 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p1_shape[2])\00", align 1
@.str.590 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p1_shape[3])\00", align 1
@.str.591 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p1_shape[4])\00", align 1
@.str.592 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p1_shape[5]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.shape[5] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p1_shape[5])\00", align 1
@.str.593 = private constant [462 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p1_strides[5]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p1_strides[4]) and 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p1_strides[1]) and 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.strides: expected to be compact array\00", align 1
@.str.594 = private constant [222 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.595 = private constant [202 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.596 = private constant [208 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.597 = private constant [135 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.ndim is expected to equal 5\00", align 1
@.str.598 = private constant [259 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.dtype is expected to be float32\00", align 1
@.str.599 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p2_shape[0])\00", align 1
@.str.600 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p2_shape[1]) == 8, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.shape[1] has an unsatisfied constraint: 8 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p2_shape[1])\00", align 1
@.str.601 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p2_shape[2])\00", align 1
@.str.602 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p2_shape[3])\00", align 1
@.str.603 = private constant [283 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p2_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p2_shape[4])\00", align 1
@.str.604 = private constant [279 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p2_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.strides: expected to be compact array\00", align 1
@.str.605 = private constant [222 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.606 = private constant [202 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.607 = private constant [208 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.608 = private constant [141 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_add, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.ndim is expected to equal 5\00", align 1
@.str.609 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_add, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_add, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.dtype is expected to be float32\00", align 1
@.str.610 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_T_add_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_T_add_shape[0])\00", align 1
@.str.611 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_T_add_shape[1]) == 8, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.shape[1] has an unsatisfied constraint: 8 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_T_add_shape[1])\00", align 1
@.str.612 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_T_add_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_T_add_shape[2])\00", align 1
@.str.613 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_T_add_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_T_add_shape[3])\00", align 1
@.str.614 = private constant [292 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_T_add_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_T_add_shape[4])\00", align 1
@.str.615 = private constant [480 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_T_add_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_T_add_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_T_add_strides[2]) and 100352 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_T_add_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.strides: expected to be compact array\00", align 1
@.str.616 = private constant [231 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22)\00", align 1
@.str.617 = private constant [211 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_add, 0, 10, \22int32\22)\00", align 1
@.str.618 = private constant [217 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22)\00", align 1
@.str.620 = private constant [101 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1: num_args should be 4\00", align 1
@.str.621 = private constant [156 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1: Expect arg[0] to be pointer\00", align 1
@.str.622 = private constant [156 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1: Expect arg[1] to be pointer\00", align 1
@.str.623 = private constant [156 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1: Expect arg[2] to be pointer\00", align 1
@.str.624 = private constant [168 x i8] c"Assert fail: T_add_code == 3 or T_add_code == 13 or T_add_code == 7 or T_add_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1: Expect arg[3] to be pointer\00", align 1
@.str.625 = private constant [137 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.ndim is expected to equal 5\00", align 1
@.str.626 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.dtype is expected to be float32\00", align 1
@.str.627 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p0_shape[0])\00", align 1
@.str.628 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p0_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p0_shape[1])\00", align 1
@.str.629 = private constant [289 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p0_shape[2])\00", align 1
@.str.630 = private constant [289 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p0_shape[3])\00", align 1
@.str.631 = private constant [291 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p0_shape[4]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.shape[4] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p0_shape[4])\00", align 1
@.str.632 = private constant [381 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p0_strides[4]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p0_strides[3]) and 14336 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p0_strides[2]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.strides: expected to be compact array\00", align 1
@.str.633 = private constant [224 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.634 = private constant [204 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.635 = private constant [137 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.ndim is expected to equal 6\00", align 1
@.str.636 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.dtype is expected to be float32\00", align 1
@.str.637 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p1_shape[0]) == 8, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.shape[0] has an unsatisfied constraint: 8 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p1_shape[0])\00", align 1
@.str.638 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p1_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p1_shape[1])\00", align 1
@.str.639 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p1_shape[2])\00", align 1
@.str.640 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p1_shape[3])\00", align 1
@.str.641 = private constant [291 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p1_shape[4]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.shape[4] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p1_shape[4])\00", align 1
@.str.642 = private constant [289 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p1_shape[5]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.shape[5] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p1_shape[5])\00", align 1
@.str.643 = private constant [380 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p1_strides[5]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p1_strides[4]) and 16384 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.strides: expected to be compact array\00", align 1
@.str.644 = private constant [224 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.645 = private constant [204 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.646 = private constant [210 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.647 = private constant [137 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.ndim is expected to equal 5\00", align 1
@.str.648 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.dtype is expected to be float32\00", align 1
@.str.649 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p2_shape[0])\00", align 1
@.str.650 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p2_shape[1]) == 8, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.shape[1] has an unsatisfied constraint: 8 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p2_shape[1])\00", align 1
@.str.651 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p2_shape[2])\00", align 1
@.str.652 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p2_shape[3])\00", align 1
@.str.653 = private constant [289 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p2_shape[4]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p2_shape[4])\00", align 1
@.str.654 = private constant [285 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p2_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.strides: expected to be compact array\00", align 1
@.str.655 = private constant [224 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.656 = private constant [204 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.657 = private constant [210 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.658 = private constant [143 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_add, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.ndim is expected to equal 5\00", align 1
@.str.659 = private constant [273 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_add, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_add, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.dtype is expected to be float32\00", align 1
@.str.660 = private constant [296 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_T_add_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_T_add_shape[0])\00", align 1
@.str.661 = private constant [296 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_T_add_shape[1]) == 8, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.shape[1] has an unsatisfied constraint: 8 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_T_add_shape[1])\00", align 1
@.str.662 = private constant [298 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_T_add_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_T_add_shape[2])\00", align 1
@.str.663 = private constant [298 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_T_add_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_T_add_shape[3])\00", align 1
@.str.664 = private constant [298 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_T_add_shape[4]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_T_add_shape[4])\00", align 1
@.str.665 = private constant [489 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_T_add_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_T_add_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_T_add_strides[2]) and 50176 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_T_add_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.strides: expected to be compact array\00", align 1
@.str.666 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22)\00", align 1
@.str.667 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_add, 0, 10, \22int32\22)\00", align 1
@.str.668 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22)\00", align 1
@.str.670 = private constant [101 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2: num_args should be 4\00", align 1
@.str.671 = private constant [156 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2: Expect arg[0] to be pointer\00", align 1
@.str.672 = private constant [156 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2: Expect arg[1] to be pointer\00", align 1
@.str.673 = private constant [156 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2: Expect arg[2] to be pointer\00", align 1
@.str.674 = private constant [168 x i8] c"Assert fail: T_add_code == 3 or T_add_code == 13 or T_add_code == 7 or T_add_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2: Expect arg[3] to be pointer\00", align 1
@.str.675 = private constant [137 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.ndim is expected to equal 5\00", align 1
@.str.676 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.dtype is expected to be float32\00", align 1
@.str.677 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p0_shape[0])\00", align 1
@.str.678 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p0_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p0_shape[1])\00", align 1
@.str.679 = private constant [289 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p0_shape[2])\00", align 1
@.str.680 = private constant [289 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p0_shape[3])\00", align 1
@.str.681 = private constant [291 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p0_shape[4]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.shape[4] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p0_shape[4])\00", align 1
@.str.682 = private constant [381 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p0_strides[4]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p0_strides[3]) and 14336 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p0_strides[2]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.strides: expected to be compact array\00", align 1
@.str.683 = private constant [224 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.684 = private constant [204 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.685 = private constant [137 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.ndim is expected to equal 6\00", align 1
@.str.686 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.dtype is expected to be float32\00", align 1
@.str.687 = private constant [289 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p1_shape[0]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.shape[0] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p1_shape[0])\00", align 1
@.str.688 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p1_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p1_shape[1])\00", align 1
@.str.689 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p1_shape[2])\00", align 1
@.str.690 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p1_shape[3])\00", align 1
@.str.691 = private constant [291 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p1_shape[4]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.shape[4] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p1_shape[4])\00", align 1
@.str.692 = private constant [289 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p1_shape[5]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.shape[5] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p1_shape[5])\00", align 1
@.str.693 = private constant [380 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p1_strides[5]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p1_strides[4]) and 32768 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.strides: expected to be compact array\00", align 1
@.str.694 = private constant [224 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.695 = private constant [204 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.696 = private constant [210 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.697 = private constant [137 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.ndim is expected to equal 5\00", align 1
@.str.698 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.dtype is expected to be float32\00", align 1
@.str.699 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p2_shape[0])\00", align 1
@.str.700 = private constant [289 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p2_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p2_shape[1])\00", align 1
@.str.701 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p2_shape[2])\00", align 1
@.str.702 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p2_shape[3])\00", align 1
@.str.703 = private constant [289 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p2_shape[4]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p2_shape[4])\00", align 1
@.str.704 = private constant [285 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p2_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.strides: expected to be compact array\00", align 1
@.str.705 = private constant [224 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.706 = private constant [204 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.707 = private constant [210 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.708 = private constant [143 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_add, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.ndim is expected to equal 5\00", align 1
@.str.709 = private constant [273 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_add, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_add, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.dtype is expected to be float32\00", align 1
@.str.710 = private constant [296 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_T_add_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_T_add_shape[0])\00", align 1
@.str.711 = private constant [298 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_T_add_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_T_add_shape[1])\00", align 1
@.str.712 = private constant [298 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_T_add_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_T_add_shape[2])\00", align 1
@.str.713 = private constant [298 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_T_add_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_T_add_shape[3])\00", align 1
@.str.714 = private constant [298 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_T_add_shape[4]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_T_add_shape[4])\00", align 1
@.str.715 = private constant [488 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_T_add_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_T_add_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_T_add_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_T_add_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.strides: expected to be compact array\00", align 1
@.str.716 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22)\00", align 1
@.str.717 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_add, 0, 10, \22int32\22)\00", align 1
@.str.718 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22)\00", align 1
@.str.720 = private constant [101 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3: num_args should be 4\00", align 1
@.str.721 = private constant [156 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3: Expect arg[0] to be pointer\00", align 1
@.str.722 = private constant [156 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3: Expect arg[1] to be pointer\00", align 1
@.str.723 = private constant [156 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3: Expect arg[2] to be pointer\00", align 1
@.str.724 = private constant [168 x i8] c"Assert fail: T_add_code == 3 or T_add_code == 13 or T_add_code == 7 or T_add_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3: Expect arg[3] to be pointer\00", align 1
@.str.725 = private constant [137 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.ndim is expected to equal 5\00", align 1
@.str.726 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.dtype is expected to be float32\00", align 1
@.str.727 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p0_shape[0])\00", align 1
@.str.728 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p0_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p0_shape[1])\00", align 1
@.str.729 = private constant [289 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p0_shape[2])\00", align 1
@.str.730 = private constant [289 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p0_shape[3])\00", align 1
@.str.731 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p0_shape[4]) == 1024, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.shape[4] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p0_shape[4])\00", align 1
@.str.732 = private constant [382 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p0_strides[4]) and 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p0_strides[3]) and 14336 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p0_strides[2]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.strides: expected to be compact array\00", align 1
@.str.733 = private constant [224 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.734 = private constant [204 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.735 = private constant [137 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.ndim is expected to equal 6\00", align 1
@.str.736 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.dtype is expected to be float32\00", align 1
@.str.737 = private constant [289 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p1_shape[0]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.shape[0] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p1_shape[0])\00", align 1
@.str.738 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p1_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p1_shape[1])\00", align 1
@.str.739 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p1_shape[2])\00", align 1
@.str.740 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p1_shape[3])\00", align 1
@.str.741 = private constant [293 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p1_shape[4]) == 1024, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.shape[4] has an unsatisfied constraint: 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p1_shape[4])\00", align 1
@.str.742 = private constant [289 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p1_shape[5]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.shape[5] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p1_shape[5])\00", align 1
@.str.743 = private constant [380 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p1_strides[5]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p1_strides[4]) and 32768 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.strides: expected to be compact array\00", align 1
@.str.744 = private constant [224 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.745 = private constant [204 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.746 = private constant [210 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.747 = private constant [137 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.ndim is expected to equal 5\00", align 1
@.str.748 = private constant [261 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.dtype is expected to be float32\00", align 1
@.str.749 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p2_shape[0])\00", align 1
@.str.750 = private constant [289 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p2_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p2_shape[1])\00", align 1
@.str.751 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p2_shape[2])\00", align 1
@.str.752 = private constant [287 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p2_shape[3])\00", align 1
@.str.753 = private constant [289 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p2_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p2_shape[4])\00", align 1
@.str.754 = private constant [285 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p2_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.strides: expected to be compact array\00", align 1
@.str.755 = private constant [224 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.756 = private constant [204 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.757 = private constant [210 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.758 = private constant [143 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_add, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.ndim is expected to equal 5\00", align 1
@.str.759 = private constant [273 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_add, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_add, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.dtype is expected to be float32\00", align 1
@.str.760 = private constant [296 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_T_add_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_T_add_shape[0])\00", align 1
@.str.761 = private constant [298 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_T_add_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_T_add_shape[1])\00", align 1
@.str.762 = private constant [296 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_T_add_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_T_add_shape[2])\00", align 1
@.str.763 = private constant [296 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_T_add_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_T_add_shape[3])\00", align 1
@.str.764 = private constant [298 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_T_add_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_T_add_shape[4])\00", align 1
@.str.765 = private constant [487 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_T_add_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_T_add_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_T_add_strides[2]) and 1568 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_T_add_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.strides: expected to be compact array\00", align 1
@.str.766 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22)\00", align 1
@.str.767 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_add, 0, 10, \22int32\22)\00", align 1
@.str.768 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22)\00", align 1
@.str.770 = private constant [111 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu: num_args should be 5\00", align 1
@.str.771 = private constant [166 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu: Expect arg[0] to be pointer\00", align 1
@.str.772 = private constant [166 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu: Expect arg[1] to be pointer\00", align 1
@.str.773 = private constant [166 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu: Expect arg[2] to be pointer\00", align 1
@.str.774 = private constant [166 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu: Expect arg[3] to be pointer\00", align 1
@.str.775 = private constant [182 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu: Expect arg[4] to be pointer\00", align 1
@.str.776 = private constant [147 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.ndim is expected to equal 5\00", align 1
@.str.777 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.dtype is expected to be float32\00", align 1
@.str.778 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p0_shape[0])\00", align 1
@.str.779 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p0_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p0_shape[1])\00", align 1
@.str.780 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p0_shape[2])\00", align 1
@.str.781 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p0_shape[3])\00", align 1
@.str.782 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p0_shape[4])\00", align 1
@.str.783 = private constant [522 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.strides: expected to be compact array\00", align 1
@.str.784 = private constant [234 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.785 = private constant [214 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.786 = private constant [147 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.ndim is expected to equal 6\00", align 1
@.str.787 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.dtype is expected to be float32\00", align 1
@.str.788 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p1_shape[0]) == 8, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.shape[0] has an unsatisfied constraint: 8 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p1_shape[0])\00", align 1
@.str.789 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p1_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p1_shape[1])\00", align 1
@.str.790 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p1_shape[2])\00", align 1
@.str.791 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p1_shape[3])\00", align 1
@.str.792 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p1_shape[4])\00", align 1
@.str.793 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p1_shape[5]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.shape[5] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p1_shape[5])\00", align 1
@.str.794 = private constant [522 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p1_strides[5]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p1_strides[4]) and 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p1_strides[1]) and 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.strides: expected to be compact array\00", align 1
@.str.795 = private constant [234 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.796 = private constant [214 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.797 = private constant [220 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.798 = private constant [147 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.ndim is expected to equal 5\00", align 1
@.str.799 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.dtype is expected to be float32\00", align 1
@.str.800 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p2_shape[0])\00", align 1
@.str.801 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p2_shape[1]) == 8, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.shape[1] has an unsatisfied constraint: 8 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p2_shape[1])\00", align 1
@.str.802 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p2_shape[2])\00", align 1
@.str.803 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p2_shape[3])\00", align 1
@.str.804 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p2_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p2_shape[4])\00", align 1
@.str.805 = private constant [315 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p2_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.strides: expected to be compact array\00", align 1
@.str.806 = private constant [234 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.807 = private constant [214 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.808 = private constant [220 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.809 = private constant [147 x i8] c"Assert fail: 5 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.ndim is expected to equal 5\00", align 1
@.str.810 = private constant [271 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.dtype is expected to be float32\00", align 1
@.str.811 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p3_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p3_shape[0])\00", align 1
@.str.812 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p3_shape[1]) == 8, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.shape[1] has an unsatisfied constraint: 8 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p3_shape[1])\00", align 1
@.str.813 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p3_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p3_shape[2])\00", align 1
@.str.814 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p3_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p3_shape[3])\00", align 1
@.str.815 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p3_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p3_shape[4])\00", align 1
@.str.816 = private constant [525 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p3_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p3_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p3_strides[2]) and 100352 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_p3_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.strides: expected to be compact array\00", align 1
@.str.817 = private constant [234 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.818 = private constant [214 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.819 = private constant [220 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.820 = private constant [155 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.ndim is expected to equal 5\00", align 1
@.str.821 = private constant [287 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.dtype is expected to be float32\00", align 1
@.str.822 = private constant [329 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_T_relu_shape[0])\00", align 1
@.str.823 = private constant [329 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_T_relu_shape[1]) == 8, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.shape[1] has an unsatisfied constraint: 8 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_T_relu_shape[1])\00", align 1
@.str.824 = private constant [331 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_T_relu_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_T_relu_shape[2])\00", align 1
@.str.825 = private constant [331 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_T_relu_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_T_relu_shape[3])\00", align 1
@.str.826 = private constant [331 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_T_relu_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_T_relu_shape[4])\00", align 1
@.str.827 = private constant [545 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_T_relu_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_T_relu_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_T_relu_strides[2]) and 100352 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.strides: expected to be compact array\00", align 1
@.str.828 = private constant [246 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.829 = private constant [226 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.830 = private constant [232 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.832 = private constant [113 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1: num_args should be 5\00", align 1
@.str.833 = private constant [168 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1: Expect arg[0] to be pointer\00", align 1
@.str.834 = private constant [168 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1: Expect arg[1] to be pointer\00", align 1
@.str.835 = private constant [168 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1: Expect arg[2] to be pointer\00", align 1
@.str.836 = private constant [168 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1: Expect arg[3] to be pointer\00", align 1
@.str.837 = private constant [184 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1: Expect arg[4] to be pointer\00", align 1
@.str.838 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.ndim is expected to equal 5\00", align 1
@.str.839 = private constant [273 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.dtype is expected to be float32\00", align 1
@.str.840 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p0_shape[0])\00", align 1
@.str.841 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p0_shape[1]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p0_shape[1])\00", align 1
@.str.842 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p0_shape[2])\00", align 1
@.str.843 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p0_shape[3])\00", align 1
@.str.844 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p0_shape[4])\00", align 1
@.str.845 = private constant [531 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p0_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.strides: expected to be compact array\00", align 1
@.str.846 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.847 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.848 = private constant [149 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.ndim is expected to equal 6\00", align 1
@.str.849 = private constant [273 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.dtype is expected to be float32\00", align 1
@.str.850 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p1_shape[0]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.shape[0] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p1_shape[0])\00", align 1
@.str.851 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p1_shape[1]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p1_shape[1])\00", align 1
@.str.852 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p1_shape[2])\00", align 1
@.str.853 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p1_shape[3])\00", align 1
@.str.854 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p1_shape[4])\00", align 1
@.str.855 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p1_shape[5]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.shape[5] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p1_shape[5])\00", align 1
@.str.856 = private constant [532 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p1_strides[5]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p1_strides[4]) and 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p1_strides[1]) and 4096 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.strides: expected to be compact array\00", align 1
@.str.857 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.858 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.859 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.860 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.ndim is expected to equal 5\00", align 1
@.str.861 = private constant [273 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.dtype is expected to be float32\00", align 1
@.str.862 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p2_shape[0])\00", align 1
@.str.863 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p2_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p2_shape[1])\00", align 1
@.str.864 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p2_shape[2])\00", align 1
@.str.865 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p2_shape[3])\00", align 1
@.str.866 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p2_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p2_shape[4])\00", align 1
@.str.867 = private constant [321 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p2_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.strides: expected to be compact array\00", align 1
@.str.868 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.869 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.870 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.871 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.ndim is expected to equal 5\00", align 1
@.str.872 = private constant [273 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.dtype is expected to be float32\00", align 1
@.str.873 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p3_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p3_shape[0])\00", align 1
@.str.874 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p3_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p3_shape[1])\00", align 1
@.str.875 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p3_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p3_shape[2])\00", align 1
@.str.876 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p3_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p3_shape[3])\00", align 1
@.str.877 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p3_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p3_shape[4])\00", align 1
@.str.878 = private constant [533 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p3_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p3_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p3_strides[2]) and 25088 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_p3_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.strides: expected to be compact array\00", align 1
@.str.879 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.880 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.881 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.882 = private constant [157 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.ndim is expected to equal 5\00", align 1
@.str.883 = private constant [289 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.dtype is expected to be float32\00", align 1
@.str.884 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_T_relu_shape[0])\00", align 1
@.str.885 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_T_relu_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_T_relu_shape[1])\00", align 1
@.str.886 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_T_relu_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_T_relu_shape[2])\00", align 1
@.str.887 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_T_relu_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_T_relu_shape[3])\00", align 1
@.str.888 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_T_relu_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_T_relu_shape[4])\00", align 1
@.str.889 = private constant [553 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_T_relu_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_T_relu_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_T_relu_strides[2]) and 25088 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.strides: expected to be compact array\00", align 1
@.str.890 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.891 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.892 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.894 = private constant [113 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2: num_args should be 5\00", align 1
@.str.895 = private constant [168 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2: Expect arg[0] to be pointer\00", align 1
@.str.896 = private constant [168 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2: Expect arg[1] to be pointer\00", align 1
@.str.897 = private constant [168 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2: Expect arg[2] to be pointer\00", align 1
@.str.898 = private constant [168 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2: Expect arg[3] to be pointer\00", align 1
@.str.899 = private constant [184 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2: Expect arg[4] to be pointer\00", align 1
@.str.900 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.ndim is expected to equal 5\00", align 1
@.str.901 = private constant [273 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.dtype is expected to be float32\00", align 1
@.str.902 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p0_shape[0])\00", align 1
@.str.903 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p0_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p0_shape[1])\00", align 1
@.str.904 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p0_shape[2])\00", align 1
@.str.905 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p0_shape[3])\00", align 1
@.str.906 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p0_shape[4]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.shape[4] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p0_shape[4])\00", align 1
@.str.907 = private constant [428 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p0_strides[4]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p0_strides[3]) and 3584 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p0_strides[2]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.strides: expected to be compact array\00", align 1
@.str.908 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.909 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.910 = private constant [149 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.ndim is expected to equal 6\00", align 1
@.str.911 = private constant [273 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.dtype is expected to be float32\00", align 1
@.str.912 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p1_shape[0]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.shape[0] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p1_shape[0])\00", align 1
@.str.913 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p1_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p1_shape[1])\00", align 1
@.str.914 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p1_shape[2])\00", align 1
@.str.915 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p1_shape[3])\00", align 1
@.str.916 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p1_shape[4]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.shape[4] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p1_shape[4])\00", align 1
@.str.917 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p1_shape[5]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.shape[5] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p1_shape[5])\00", align 1
@.str.918 = private constant [428 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p1_strides[5]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p1_strides[4]) and 16384 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.strides: expected to be compact array\00", align 1
@.str.919 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.920 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.921 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.922 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.ndim is expected to equal 5\00", align 1
@.str.923 = private constant [273 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.dtype is expected to be float32\00", align 1
@.str.924 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p2_shape[0])\00", align 1
@.str.925 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p2_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p2_shape[1])\00", align 1
@.str.926 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p2_shape[2])\00", align 1
@.str.927 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p2_shape[3])\00", align 1
@.str.928 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p2_shape[4]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p2_shape[4])\00", align 1
@.str.929 = private constant [321 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p2_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.strides: expected to be compact array\00", align 1
@.str.930 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.931 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.932 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.933 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.ndim is expected to equal 5\00", align 1
@.str.934 = private constant [273 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.dtype is expected to be float32\00", align 1
@.str.935 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p3_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p3_shape[0])\00", align 1
@.str.936 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p3_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p3_shape[1])\00", align 1
@.str.937 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p3_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p3_shape[2])\00", align 1
@.str.938 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p3_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p3_shape[3])\00", align 1
@.str.939 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p3_shape[4]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p3_shape[4])\00", align 1
@.str.940 = private constant [533 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p3_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p3_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p3_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_p3_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.strides: expected to be compact array\00", align 1
@.str.941 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.942 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.943 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.944 = private constant [157 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.ndim is expected to equal 5\00", align 1
@.str.945 = private constant [289 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.dtype is expected to be float32\00", align 1
@.str.946 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_T_relu_shape[0])\00", align 1
@.str.947 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_T_relu_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_T_relu_shape[1])\00", align 1
@.str.948 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_T_relu_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_T_relu_shape[2])\00", align 1
@.str.949 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_T_relu_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_T_relu_shape[3])\00", align 1
@.str.950 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_T_relu_shape[4]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_T_relu_shape[4])\00", align 1
@.str.951 = private constant [553 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_T_relu_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_T_relu_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_T_relu_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.strides: expected to be compact array\00", align 1
@.str.952 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.953 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.954 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.956 = private constant [113 x i8] c"Assert fail: num_args == 5, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3: num_args should be 5\00", align 1
@.str.957 = private constant [168 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3: Expect arg[0] to be pointer\00", align 1
@.str.958 = private constant [168 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3: Expect arg[1] to be pointer\00", align 1
@.str.959 = private constant [168 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3: Expect arg[2] to be pointer\00", align 1
@.str.960 = private constant [168 x i8] c"Assert fail: p3_code == 3 or p3_code == 13 or p3_code == 7 or p3_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3: Expect arg[3] to be pointer\00", align 1
@.str.961 = private constant [184 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3: Expect arg[4] to be pointer\00", align 1
@.str.962 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.ndim is expected to equal 5\00", align 1
@.str.963 = private constant [273 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.dtype is expected to be float32\00", align 1
@.str.964 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p0_shape[0])\00", align 1
@.str.965 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p0_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p0_shape[1])\00", align 1
@.str.966 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p0_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p0_shape[2])\00", align 1
@.str.967 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p0_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p0_shape[3])\00", align 1
@.str.968 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p0_shape[4])\00", align 1
@.str.969 = private constant [529 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.strides: expected to be compact array\00", align 1
@.str.970 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.971 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.972 = private constant [149 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.ndim is expected to equal 6\00", align 1
@.str.973 = private constant [273 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.dtype is expected to be float32\00", align 1
@.str.974 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p1_shape[0]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.shape[0] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p1_shape[0])\00", align 1
@.str.975 = private constant [327 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p1_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p1_shape[1])\00", align 1
@.str.976 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p1_shape[2])\00", align 1
@.str.977 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p1_shape[3])\00", align 1
@.str.978 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p1_shape[4])\00", align 1
@.str.979 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p1_shape[5]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.shape[5] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p1_shape[5])\00", align 1
@.str.980 = private constant [533 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p1_strides[5]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p1_strides[4]) and 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p1_strides[1]) and 16384 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.strides: expected to be compact array\00", align 1
@.str.981 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.982 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.983 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.984 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.ndim is expected to equal 5\00", align 1
@.str.985 = private constant [273 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.dtype is expected to be float32\00", align 1
@.str.986 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p2_shape[0])\00", align 1
@.str.987 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p2_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p2_shape[1])\00", align 1
@.str.988 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p2_shape[2])\00", align 1
@.str.989 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p2_shape[3])\00", align 1
@.str.990 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p2_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p2_shape[4])\00", align 1
@.str.991 = private constant [321 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p2_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.strides: expected to be compact array\00", align 1
@.str.992 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.993 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.994 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.995 = private constant [149 x i8] c"Assert fail: 5 == T.tvm_struct_get(p3, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.ndim is expected to equal 5\00", align 1
@.str.996 = private constant [273 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p3, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p3, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.dtype is expected to be float32\00", align 1
@.str.997 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p3_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p3_shape[0])\00", align 1
@.str.998 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p3_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p3_shape[1])\00", align 1
@.str.999 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p3_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p3_shape[2])\00", align 1
@.str.1000 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p3_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p3_shape[3])\00", align 1
@.str.1001 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p3_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p3_shape[4])\00", align 1
@.str.1002 = private constant [532 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p3_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p3_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p3_strides[2]) and 1568 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_p3_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.strides: expected to be compact array\00", align 1
@.str.1003 = private constant [236 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p3, 0, 8, \22uint64\22)\00", align 1
@.str.1004 = private constant [216 x i8] c"Assert fail: T.tvm_struct_get(p3, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p3, 0, 10, \22int32\22)\00", align 1
@.str.1005 = private constant [222 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p3, 0, 9, \22int32\22)\00", align 1
@.str.1006 = private constant [157 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.ndim is expected to equal 5\00", align 1
@.str.1007 = private constant [289 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.dtype is expected to be float32\00", align 1
@.str.1008 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_T_relu_shape[0])\00", align 1
@.str.1009 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_T_relu_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_T_relu_shape[1])\00", align 1
@.str.1010 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_T_relu_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_T_relu_shape[2])\00", align 1
@.str.1011 = private constant [335 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_T_relu_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_T_relu_shape[3])\00", align 1
@.str.1012 = private constant [337 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_T_relu_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_T_relu_shape[4])\00", align 1
@.str.1013 = private constant [552 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_T_relu_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_T_relu_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_T_relu_strides[2]) and 1568 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.strides: expected to be compact array\00", align 1
@.str.1014 = private constant [248 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1015 = private constant [228 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1016 = private constant [234 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.1018 = private constant [107 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu: num_args should be 4\00", align 1
@.str.1019 = private constant [162 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu: Expect arg[0] to be pointer\00", align 1
@.str.1020 = private constant [162 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu: Expect arg[1] to be pointer\00", align 1
@.str.1021 = private constant [162 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu: Expect arg[2] to be pointer\00", align 1
@.str.1022 = private constant [178 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu: Expect arg[3] to be pointer\00", align 1
@.str.1023 = private constant [143 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.ndim is expected to equal 5\00", align 1
@.str.1024 = private constant [267 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.dtype is expected to be float32\00", align 1
@.str.1025 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p0_shape[0])\00", align 1
@.str.1026 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p0_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p0_shape[1])\00", align 1
@.str.1027 = private constant [309 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p0_shape[2]) == 224, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.shape[2] has an unsatisfied constraint: 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p0_shape[2])\00", align 1
@.str.1028 = private constant [309 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p0_shape[3]) == 224, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.shape[3] has an unsatisfied constraint: 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p0_shape[3])\00", align 1
@.str.1029 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p0_shape[4]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.shape[4] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p0_shape[4])\00", align 1
@.str.1030 = private constant [401 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p0_strides[4]) and 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p0_strides[3]) and 672 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p0_strides[2]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.strides: expected to be compact array\00", align 1
@.str.1031 = private constant [230 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1032 = private constant [210 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1033 = private constant [143 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.ndim is expected to equal 6\00", align 1
@.str.1034 = private constant [267 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.dtype is expected to be float32\00", align 1
@.str.1035 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p1_shape[0]) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.shape[0] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p1_shape[0])\00", align 1
@.str.1036 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p1_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p1_shape[1])\00", align 1
@.str.1037 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p1_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p1_shape[2])\00", align 1
@.str.1038 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p1_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p1_shape[3])\00", align 1
@.str.1039 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p1_shape[4]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.shape[4] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p1_shape[4])\00", align 1
@.str.1040 = private constant [307 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p1_shape[5]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.shape[5] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p1_shape[5])\00", align 1
@.str.1041 = private constant [600 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p1_strides[5]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p1_strides[4]) and 96 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p1_strides[3]) and 672 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p1_strides[2]) and 4704 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.strides: expected to be compact array\00", align 1
@.str.1042 = private constant [230 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1043 = private constant [210 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1044 = private constant [216 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1045 = private constant [143 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.ndim is expected to equal 5\00", align 1
@.str.1046 = private constant [267 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.dtype is expected to be float32\00", align 1
@.str.1047 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p2_shape[0])\00", align 1
@.str.1048 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p2_shape[1]) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p2_shape[1])\00", align 1
@.str.1049 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p2_shape[2])\00", align 1
@.str.1050 = private constant [305 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p2_shape[3])\00", align 1
@.str.1051 = private constant [307 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p2_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p2_shape[4])\00", align 1
@.str.1052 = private constant [303 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p2_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.strides: expected to be compact array\00", align 1
@.str.1053 = private constant [230 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1054 = private constant [210 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1055 = private constant [216 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1056 = private constant [151 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.ndim is expected to equal 5\00", align 1
@.str.1057 = private constant [283 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.dtype is expected to be float32\00", align 1
@.str.1058 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_T_relu_shape[0])\00", align 1
@.str.1059 = private constant [317 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_T_relu_shape[1]) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_T_relu_shape[1])\00", align 1
@.str.1060 = private constant [321 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_T_relu_shape[2]) == 112, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.shape[2] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_T_relu_shape[2])\00", align 1
@.str.1061 = private constant [321 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_T_relu_shape[3]) == 112, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.shape[3] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_T_relu_shape[3])\00", align 1
@.str.1062 = private constant [319 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_T_relu_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_T_relu_shape[4])\00", align 1
@.str.1063 = private constant [525 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_T_relu_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_T_relu_strides[3]) and 3584 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_T_relu_strides[2]) and 401408 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.strides: expected to be compact array\00", align 1
@.str.1064 = private constant [242 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1065 = private constant [222 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1066 = private constant [228 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.1069 = private constant [109 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1: num_args should be 4\00", align 1
@.str.1070 = private constant [164 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1: Expect arg[0] to be pointer\00", align 1
@.str.1071 = private constant [164 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1: Expect arg[1] to be pointer\00", align 1
@.str.1072 = private constant [164 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1: Expect arg[2] to be pointer\00", align 1
@.str.1073 = private constant [180 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1: Expect arg[3] to be pointer\00", align 1
@.str.1074 = private constant [145 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.ndim is expected to equal 5\00", align 1
@.str.1075 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.dtype is expected to be float32\00", align 1
@.str.1076 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p0_shape[0])\00", align 1
@.str.1077 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p0_shape[1]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.shape[1] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p0_shape[1])\00", align 1
@.str.1078 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p0_shape[2])\00", align 1
@.str.1079 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p0_shape[3])\00", align 1
@.str.1080 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p0_shape[4]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.shape[4] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p0_shape[4])\00", align 1
@.str.1081 = private constant [513 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p0_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p0_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p0_strides[2]) and 50176 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.strides: expected to be compact array\00", align 1
@.str.1082 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1083 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1084 = private constant [145 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.ndim is expected to equal 6\00", align 1
@.str.1085 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.dtype is expected to be float32\00", align 1
@.str.1086 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p1_shape[0]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.shape[0] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p1_shape[0])\00", align 1
@.str.1087 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p1_shape[1]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.shape[1] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p1_shape[1])\00", align 1
@.str.1088 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p1_shape[2])\00", align 1
@.str.1089 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p1_shape[3])\00", align 1
@.str.1090 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p1_shape[4]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.shape[4] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p1_shape[4])\00", align 1
@.str.1091 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p1_shape[5]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.shape[5] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p1_shape[5])\00", align 1
@.str.1092 = private constant [512 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p1_strides[5]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p1_strides[4]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p1_strides[1]) and 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.strides: expected to be compact array\00", align 1
@.str.1093 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1094 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1095 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1096 = private constant [145 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.ndim is expected to equal 5\00", align 1
@.str.1097 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.dtype is expected to be float32\00", align 1
@.str.1098 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p2_shape[0])\00", align 1
@.str.1099 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p2_shape[1]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.shape[1] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p2_shape[1])\00", align 1
@.str.1100 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p2_shape[2])\00", align 1
@.str.1101 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p2_shape[3])\00", align 1
@.str.1102 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p2_shape[4]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.shape[4] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p2_shape[4])\00", align 1
@.str.1103 = private constant [309 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p2_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.strides: expected to be compact array\00", align 1
@.str.1104 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1105 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1106 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1107 = private constant [153 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.ndim is expected to equal 5\00", align 1
@.str.1108 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.dtype is expected to be float32\00", align 1
@.str.1109 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_T_relu_shape[0])\00", align 1
@.str.1110 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_T_relu_shape[1]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.shape[1] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_T_relu_shape[1])\00", align 1
@.str.1111 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_T_relu_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_T_relu_shape[2])\00", align 1
@.str.1112 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_T_relu_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_T_relu_shape[3])\00", align 1
@.str.1113 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_T_relu_shape[4]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.shape[4] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_T_relu_shape[4])\00", align 1
@.str.1114 = private constant [533 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_T_relu_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_T_relu_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_T_relu_strides[2]) and 50176 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.strides: expected to be compact array\00", align 1
@.str.1115 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1116 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1117 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.1119 = private constant [110 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10: num_args should be 4\00", align 1
@.str.1120 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10: Expect arg[0] to be pointer\00", align 1
@.str.1121 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10: Expect arg[1] to be pointer\00", align 1
@.str.1122 = private constant [165 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10: Expect arg[2] to be pointer\00", align 1
@.str.1123 = private constant [181 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10: Expect arg[3] to be pointer\00", align 1
@.str.1124 = private constant [146 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.ndim is expected to equal 5\00", align 1
@.str.1125 = private constant [270 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.dtype is expected to be float32\00", align 1
@.str.1126 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p0_shape[0])\00", align 1
@.str.1127 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p0_shape[1]) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p0_shape[1])\00", align 1
@.str.1128 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p0_shape[2])\00", align 1
@.str.1129 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p0_shape[3])\00", align 1
@.str.1130 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p0_shape[4]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.shape[4] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p0_shape[4])\00", align 1
@.str.1131 = private constant [521 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p0_strides[4]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p0_strides[3]) and 7168 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p0_strides[2]) and 100352 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.strides: expected to be compact array\00", align 1
@.str.1132 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1133 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1134 = private constant [146 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.ndim is expected to equal 6\00", align 1
@.str.1135 = private constant [270 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.dtype is expected to be float32\00", align 1
@.str.1136 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p1_shape[0]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.shape[0] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p1_shape[0])\00", align 1
@.str.1137 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p1_shape[1]) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p1_shape[1])\00", align 1
@.str.1138 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p1_shape[2])\00", align 1
@.str.1139 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p1_shape[3])\00", align 1
@.str.1140 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p1_shape[4]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.shape[4] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p1_shape[4])\00", align 1
@.str.1141 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p1_shape[5]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.shape[5] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p1_shape[5])\00", align 1
@.str.1142 = private constant [520 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p1_strides[5]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p1_strides[4]) and 32768 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p1_strides[1]) and 65536 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.strides: expected to be compact array\00", align 1
@.str.1143 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1144 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1145 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1146 = private constant [146 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.ndim is expected to equal 5\00", align 1
@.str.1147 = private constant [270 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.dtype is expected to be float32\00", align 1
@.str.1148 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p2_shape[0])\00", align 1
@.str.1149 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p2_shape[1]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.shape[1] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p2_shape[1])\00", align 1
@.str.1150 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p2_shape[2])\00", align 1
@.str.1151 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p2_shape[3])\00", align 1
@.str.1152 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p2_shape[4]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p2_shape[4])\00", align 1
@.str.1153 = private constant [312 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p2_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.strides: expected to be compact array\00", align 1
@.str.1154 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1155 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1156 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1157 = private constant [154 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.ndim is expected to equal 5\00", align 1
@.str.1158 = private constant [286 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.dtype is expected to be float32\00", align 1
@.str.1159 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_T_relu_shape[0])\00", align 1
@.str.1160 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_T_relu_shape[1]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.shape[1] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_T_relu_shape[1])\00", align 1
@.str.1161 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_T_relu_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_T_relu_shape[2])\00", align 1
@.str.1162 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_T_relu_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_T_relu_shape[3])\00", align 1
@.str.1163 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_T_relu_shape[4]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_T_relu_shape[4])\00", align 1
@.str.1164 = private constant [538 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_T_relu_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_T_relu_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_T_relu_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.strides: expected to be compact array\00", align 1
@.str.1165 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1166 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1167 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.1169 = private constant [110 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11: num_args should be 4\00", align 1
@.str.1170 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11: Expect arg[0] to be pointer\00", align 1
@.str.1171 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11: Expect arg[1] to be pointer\00", align 1
@.str.1172 = private constant [165 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11: Expect arg[2] to be pointer\00", align 1
@.str.1173 = private constant [181 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11: Expect arg[3] to be pointer\00", align 1
@.str.1174 = private constant [146 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.ndim is expected to equal 5\00", align 1
@.str.1175 = private constant [270 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.dtype is expected to be float32\00", align 1
@.str.1176 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p0_shape[0])\00", align 1
@.str.1177 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p0_shape[1]) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p0_shape[1])\00", align 1
@.str.1178 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p0_shape[2])\00", align 1
@.str.1179 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p0_shape[3])\00", align 1
@.str.1180 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p0_shape[4]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.shape[4] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p0_shape[4])\00", align 1
@.str.1181 = private constant [520 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p0_strides[4]) and 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p0_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p0_strides[2]) and 25088 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.strides: expected to be compact array\00", align 1
@.str.1182 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1183 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1184 = private constant [146 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.ndim is expected to equal 6\00", align 1
@.str.1185 = private constant [270 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.dtype is expected to be float32\00", align 1
@.str.1186 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p1_shape[0]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.shape[0] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p1_shape[0])\00", align 1
@.str.1187 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p1_shape[1]) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p1_shape[1])\00", align 1
@.str.1188 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p1_shape[2])\00", align 1
@.str.1189 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p1_shape[3])\00", align 1
@.str.1190 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p1_shape[4]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.shape[4] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p1_shape[4])\00", align 1
@.str.1191 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p1_shape[5]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.shape[5] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p1_shape[5])\00", align 1
@.str.1192 = private constant [726 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p1_strides[5]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p1_strides[4]) and 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p1_strides[3]) and 6144 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p1_strides[2]) and 18432 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p1_strides[1]) and 36864 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.strides: expected to be compact array\00", align 1
@.str.1193 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1194 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1195 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1196 = private constant [146 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.ndim is expected to equal 5\00", align 1
@.str.1197 = private constant [270 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.dtype is expected to be float32\00", align 1
@.str.1198 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p2_shape[0])\00", align 1
@.str.1199 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p2_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p2_shape[1])\00", align 1
@.str.1200 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p2_shape[2])\00", align 1
@.str.1201 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p2_shape[3])\00", align 1
@.str.1202 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p2_shape[4]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.shape[4] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p2_shape[4])\00", align 1
@.str.1203 = private constant [312 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p2_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.strides: expected to be compact array\00", align 1
@.str.1204 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1205 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1206 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1207 = private constant [154 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.ndim is expected to equal 5\00", align 1
@.str.1208 = private constant [286 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.dtype is expected to be float32\00", align 1
@.str.1209 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_T_relu_shape[0])\00", align 1
@.str.1210 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_T_relu_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_T_relu_shape[1])\00", align 1
@.str.1211 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_T_relu_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_T_relu_shape[2])\00", align 1
@.str.1212 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_T_relu_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_T_relu_shape[3])\00", align 1
@.str.1213 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_T_relu_shape[4]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.shape[4] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_T_relu_shape[4])\00", align 1
@.str.1214 = private constant [537 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_T_relu_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_T_relu_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_T_relu_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.strides: expected to be compact array\00", align 1
@.str.1215 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1216 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1217 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.1220 = private constant [110 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12: num_args should be 4\00", align 1
@.str.1221 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12: Expect arg[0] to be pointer\00", align 1
@.str.1222 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12: Expect arg[1] to be pointer\00", align 1
@.str.1223 = private constant [165 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12: Expect arg[2] to be pointer\00", align 1
@.str.1224 = private constant [181 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12: Expect arg[3] to be pointer\00", align 1
@.str.1225 = private constant [146 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.ndim is expected to equal 5\00", align 1
@.str.1226 = private constant [270 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.dtype is expected to be float32\00", align 1
@.str.1227 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p0_shape[0])\00", align 1
@.str.1228 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p0_shape[1]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p0_shape[1])\00", align 1
@.str.1229 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p0_shape[2])\00", align 1
@.str.1230 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p0_shape[3])\00", align 1
@.str.1231 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p0_shape[4])\00", align 1
@.str.1232 = private constant [514 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.strides: expected to be compact array\00", align 1
@.str.1233 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1234 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1235 = private constant [146 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.ndim is expected to equal 6\00", align 1
@.str.1236 = private constant [270 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.dtype is expected to be float32\00", align 1
@.str.1237 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p1_shape[0]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.shape[0] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p1_shape[0])\00", align 1
@.str.1238 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p1_shape[1]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.shape[1] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p1_shape[1])\00", align 1
@.str.1239 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p1_shape[2])\00", align 1
@.str.1240 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p1_shape[3])\00", align 1
@.str.1241 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p1_shape[4])\00", align 1
@.str.1242 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p1_shape[5])\00", align 1
@.str.1243 = private constant [515 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p1_strides[1]) and 4096 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.strides: expected to be compact array\00", align 1
@.str.1244 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1245 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1246 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1247 = private constant [146 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.ndim is expected to equal 5\00", align 1
@.str.1248 = private constant [270 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.dtype is expected to be float32\00", align 1
@.str.1249 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p2_shape[0])\00", align 1
@.str.1250 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p2_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p2_shape[1])\00", align 1
@.str.1251 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p2_shape[2])\00", align 1
@.str.1252 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p2_shape[3])\00", align 1
@.str.1253 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p2_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p2_shape[4])\00", align 1
@.str.1254 = private constant [311 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p2_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.strides: expected to be compact array\00", align 1
@.str.1255 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1256 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1257 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1258 = private constant [154 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.ndim is expected to equal 5\00", align 1
@.str.1259 = private constant [286 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.dtype is expected to be float32\00", align 1
@.str.1260 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_T_relu_shape[0])\00", align 1
@.str.1261 = private constant [330 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_T_relu_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_T_relu_shape[1])\00", align 1
@.str.1262 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_T_relu_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_T_relu_shape[2])\00", align 1
@.str.1263 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_T_relu_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_T_relu_shape[3])\00", align 1
@.str.1264 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_T_relu_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_T_relu_shape[4])\00", align 1
@.str.1265 = private constant [534 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_T_relu_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_T_relu_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_T_relu_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.strides: expected to be compact array\00", align 1
@.str.1266 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1267 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1268 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.1270 = private constant [110 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13: num_args should be 4\00", align 1
@.str.1271 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13: Expect arg[0] to be pointer\00", align 1
@.str.1272 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13: Expect arg[1] to be pointer\00", align 1
@.str.1273 = private constant [165 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13: Expect arg[2] to be pointer\00", align 1
@.str.1274 = private constant [181 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13: Expect arg[3] to be pointer\00", align 1
@.str.1275 = private constant [146 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.ndim is expected to equal 5\00", align 1
@.str.1276 = private constant [270 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.dtype is expected to be float32\00", align 1
@.str.1277 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p0_shape[0])\00", align 1
@.str.1278 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p0_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p0_shape[1])\00", align 1
@.str.1279 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p0_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p0_shape[2])\00", align 1
@.str.1280 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p0_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p0_shape[3])\00", align 1
@.str.1281 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p0_shape[4])\00", align 1
@.str.1282 = private constant [514 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p0_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p0_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.strides: expected to be compact array\00", align 1
@.str.1283 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1284 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1285 = private constant [146 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.ndim is expected to equal 6\00", align 1
@.str.1286 = private constant [270 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.dtype is expected to be float32\00", align 1
@.str.1287 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p1_shape[0]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.shape[0] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p1_shape[0])\00", align 1
@.str.1288 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p1_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p1_shape[1])\00", align 1
@.str.1289 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p1_shape[2])\00", align 1
@.str.1290 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p1_shape[3])\00", align 1
@.str.1291 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p1_shape[4])\00", align 1
@.str.1292 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p1_shape[5])\00", align 1
@.str.1293 = private constant [719 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p1_strides[3]) and 48 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p1_strides[2]) and 144 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p1_strides[1]) and 18432 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.strides: expected to be compact array\00", align 1
@.str.1294 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1295 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1296 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1297 = private constant [146 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.ndim is expected to equal 5\00", align 1
@.str.1298 = private constant [270 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.dtype is expected to be float32\00", align 1
@.str.1299 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p2_shape[0])\00", align 1
@.str.1300 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p2_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p2_shape[1])\00", align 1
@.str.1301 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p2_shape[2])\00", align 1
@.str.1302 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p2_shape[3])\00", align 1
@.str.1303 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p2_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p2_shape[4])\00", align 1
@.str.1304 = private constant [311 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p2_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.strides: expected to be compact array\00", align 1
@.str.1305 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1306 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1307 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1308 = private constant [154 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.ndim is expected to equal 5\00", align 1
@.str.1309 = private constant [286 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.dtype is expected to be float32\00", align 1
@.str.1310 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_T_relu_shape[0])\00", align 1
@.str.1311 = private constant [330 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_T_relu_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_T_relu_shape[1])\00", align 1
@.str.1312 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_T_relu_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_T_relu_shape[2])\00", align 1
@.str.1313 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_T_relu_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_T_relu_shape[3])\00", align 1
@.str.1314 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_T_relu_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_T_relu_shape[4])\00", align 1
@.str.1315 = private constant [534 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_T_relu_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_T_relu_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_T_relu_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.strides: expected to be compact array\00", align 1
@.str.1316 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1317 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1318 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.1321 = private constant [110 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14: num_args should be 4\00", align 1
@.str.1322 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14: Expect arg[0] to be pointer\00", align 1
@.str.1323 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14: Expect arg[1] to be pointer\00", align 1
@.str.1324 = private constant [165 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14: Expect arg[2] to be pointer\00", align 1
@.str.1325 = private constant [181 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14: Expect arg[3] to be pointer\00", align 1
@.str.1326 = private constant [146 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.ndim is expected to equal 5\00", align 1
@.str.1327 = private constant [270 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.dtype is expected to be float32\00", align 1
@.str.1328 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p0_shape[0])\00", align 1
@.str.1329 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p0_shape[1]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p0_shape[1])\00", align 1
@.str.1330 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p0_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p0_shape[2])\00", align 1
@.str.1331 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p0_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p0_shape[3])\00", align 1
@.str.1332 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p0_shape[4])\00", align 1
@.str.1333 = private constant [514 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p0_strides[3]) and 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p0_strides[2]) and 196 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.strides: expected to be compact array\00", align 1
@.str.1334 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1335 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1336 = private constant [146 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.ndim is expected to equal 6\00", align 1
@.str.1337 = private constant [270 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.dtype is expected to be float32\00", align 1
@.str.1338 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p1_shape[0]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.shape[0] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p1_shape[0])\00", align 1
@.str.1339 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p1_shape[1]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.shape[1] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p1_shape[1])\00", align 1
@.str.1340 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p1_shape[2])\00", align 1
@.str.1341 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p1_shape[3])\00", align 1
@.str.1342 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p1_shape[4])\00", align 1
@.str.1343 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p1_shape[5]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.shape[5] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p1_shape[5])\00", align 1
@.str.1344 = private constant [518 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p1_strides[5]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p1_strides[4]) and 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p1_strides[1]) and 65536 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.strides: expected to be compact array\00", align 1
@.str.1345 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1346 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1347 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1348 = private constant [146 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.ndim is expected to equal 5\00", align 1
@.str.1349 = private constant [270 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.dtype is expected to be float32\00", align 1
@.str.1350 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p2_shape[0])\00", align 1
@.str.1351 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p2_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p2_shape[1])\00", align 1
@.str.1352 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p2_shape[2])\00", align 1
@.str.1353 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p2_shape[3])\00", align 1
@.str.1354 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p2_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p2_shape[4])\00", align 1
@.str.1355 = private constant [312 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p2_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.strides: expected to be compact array\00", align 1
@.str.1356 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1357 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1358 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1359 = private constant [154 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.ndim is expected to equal 5\00", align 1
@.str.1360 = private constant [286 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.dtype is expected to be float32\00", align 1
@.str.1361 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_T_relu_shape[0])\00", align 1
@.str.1362 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_T_relu_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_T_relu_shape[1])\00", align 1
@.str.1363 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_T_relu_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_T_relu_shape[2])\00", align 1
@.str.1364 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_T_relu_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_T_relu_shape[3])\00", align 1
@.str.1365 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_T_relu_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_T_relu_shape[4])\00", align 1
@.str.1366 = private constant [537 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_T_relu_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_T_relu_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_T_relu_strides[2]) and 1568 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.strides: expected to be compact array\00", align 1
@.str.1367 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1368 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1369 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.1371 = private constant [110 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15: num_args should be 4\00", align 1
@.str.1372 = private constant [165 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15: Expect arg[0] to be pointer\00", align 1
@.str.1373 = private constant [165 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15: Expect arg[1] to be pointer\00", align 1
@.str.1374 = private constant [165 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15: Expect arg[2] to be pointer\00", align 1
@.str.1375 = private constant [181 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15: Expect arg[3] to be pointer\00", align 1
@.str.1376 = private constant [146 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.ndim is expected to equal 5\00", align 1
@.str.1377 = private constant [270 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.dtype is expected to be float32\00", align 1
@.str.1378 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p0_shape[0])\00", align 1
@.str.1379 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p0_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p0_shape[1])\00", align 1
@.str.1380 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p0_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p0_shape[2])\00", align 1
@.str.1381 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p0_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p0_shape[3])\00", align 1
@.str.1382 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p0_shape[4]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.shape[4] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p0_shape[4])\00", align 1
@.str.1383 = private constant [416 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p0_strides[4]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p0_strides[3]) and 3584 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p0_strides[2]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.strides: expected to be compact array\00", align 1
@.str.1384 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1385 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1386 = private constant [146 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.ndim is expected to equal 6\00", align 1
@.str.1387 = private constant [270 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.dtype is expected to be float32\00", align 1
@.str.1388 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p1_shape[0]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.shape[0] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p1_shape[0])\00", align 1
@.str.1389 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p1_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p1_shape[1])\00", align 1
@.str.1390 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p1_shape[2])\00", align 1
@.str.1391 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p1_shape[3])\00", align 1
@.str.1392 = private constant [318 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p1_shape[4]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.shape[4] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p1_shape[4])\00", align 1
@.str.1393 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p1_shape[5]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.shape[5] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p1_shape[5])\00", align 1
@.str.1394 = private constant [625 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p1_strides[5]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p1_strides[4]) and 16384 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p1_strides[3]) and 49152 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p1_strides[2]) and 147456 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.strides: expected to be compact array\00", align 1
@.str.1395 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1396 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1397 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1398 = private constant [146 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.ndim is expected to equal 5\00", align 1
@.str.1399 = private constant [270 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.dtype is expected to be float32\00", align 1
@.str.1400 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p2_shape[0])\00", align 1
@.str.1401 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p2_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p2_shape[1])\00", align 1
@.str.1402 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p2_shape[2])\00", align 1
@.str.1403 = private constant [314 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p2_shape[3])\00", align 1
@.str.1404 = private constant [316 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p2_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p2_shape[4])\00", align 1
@.str.1405 = private constant [312 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p2_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.strides: expected to be compact array\00", align 1
@.str.1406 = private constant [233 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1407 = private constant [213 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1408 = private constant [219 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1409 = private constant [154 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.ndim is expected to equal 5\00", align 1
@.str.1410 = private constant [286 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.dtype is expected to be float32\00", align 1
@.str.1411 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_T_relu_shape[0])\00", align 1
@.str.1412 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_T_relu_shape[1]) == 16, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.shape[1] has an unsatisfied constraint: 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_T_relu_shape[1])\00", align 1
@.str.1413 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_T_relu_shape[2]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.shape[2] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_T_relu_shape[2])\00", align 1
@.str.1414 = private constant [326 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_T_relu_shape[3]) == 7, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.shape[3] has an unsatisfied constraint: 7 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_T_relu_shape[3])\00", align 1
@.str.1415 = private constant [328 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_T_relu_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_T_relu_shape[4])\00", align 1
@.str.1416 = private constant [537 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_T_relu_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_T_relu_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_T_relu_strides[2]) and 1568 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.strides: expected to be compact array\00", align 1
@.str.1417 = private constant [245 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1418 = private constant [225 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1419 = private constant [231 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.1422 = private constant [109 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2: num_args should be 4\00", align 1
@.str.1423 = private constant [164 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2: Expect arg[0] to be pointer\00", align 1
@.str.1424 = private constant [164 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2: Expect arg[1] to be pointer\00", align 1
@.str.1425 = private constant [164 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2: Expect arg[2] to be pointer\00", align 1
@.str.1426 = private constant [180 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2: Expect arg[3] to be pointer\00", align 1
@.str.1427 = private constant [145 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.ndim is expected to equal 5\00", align 1
@.str.1428 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.dtype is expected to be float32\00", align 1
@.str.1429 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p0_shape[0])\00", align 1
@.str.1430 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p0_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p0_shape[1])\00", align 1
@.str.1431 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p0_shape[2])\00", align 1
@.str.1432 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p0_shape[3])\00", align 1
@.str.1433 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p0_shape[4]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p0_shape[4])\00", align 1
@.str.1434 = private constant [411 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p0_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p0_strides[3]) and 3584 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p0_strides[2]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.strides: expected to be compact array\00", align 1
@.str.1435 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1436 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1437 = private constant [145 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.ndim is expected to equal 6\00", align 1
@.str.1438 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.dtype is expected to be float32\00", align 1
@.str.1439 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p1_shape[0]) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.shape[0] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p1_shape[0])\00", align 1
@.str.1440 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p1_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p1_shape[1])\00", align 1
@.str.1441 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p1_shape[2])\00", align 1
@.str.1442 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p1_shape[3])\00", align 1
@.str.1443 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p1_shape[4]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p1_shape[4])\00", align 1
@.str.1444 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p1_shape[5]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.shape[5] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p1_shape[5])\00", align 1
@.str.1445 = private constant [616 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p1_strides[5]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p1_strides[4]) and 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p1_strides[3]) and 6144 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p1_strides[2]) and 18432 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.strides: expected to be compact array\00", align 1
@.str.1446 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1447 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1448 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1449 = private constant [145 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.ndim is expected to equal 5\00", align 1
@.str.1450 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.dtype is expected to be float32\00", align 1
@.str.1451 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p2_shape[0])\00", align 1
@.str.1452 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p2_shape[1]) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p2_shape[1])\00", align 1
@.str.1453 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p2_shape[2])\00", align 1
@.str.1454 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p2_shape[3])\00", align 1
@.str.1455 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p2_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p2_shape[4])\00", align 1
@.str.1456 = private constant [309 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p2_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.strides: expected to be compact array\00", align 1
@.str.1457 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1458 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1459 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1460 = private constant [153 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.ndim is expected to equal 5\00", align 1
@.str.1461 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.dtype is expected to be float32\00", align 1
@.str.1462 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_T_relu_shape[0])\00", align 1
@.str.1463 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_T_relu_shape[1]) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_T_relu_shape[1])\00", align 1
@.str.1464 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_T_relu_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_T_relu_shape[2])\00", align 1
@.str.1465 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_T_relu_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_T_relu_shape[3])\00", align 1
@.str.1466 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_T_relu_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_T_relu_shape[4])\00", align 1
@.str.1467 = private constant [535 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_T_relu_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_T_relu_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_T_relu_strides[2]) and 100352 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.strides: expected to be compact array\00", align 1
@.str.1468 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1469 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1470 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.1473 = private constant [109 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3: num_args should be 4\00", align 1
@.str.1474 = private constant [164 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3: Expect arg[0] to be pointer\00", align 1
@.str.1475 = private constant [164 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3: Expect arg[1] to be pointer\00", align 1
@.str.1476 = private constant [164 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3: Expect arg[2] to be pointer\00", align 1
@.str.1477 = private constant [180 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3: Expect arg[3] to be pointer\00", align 1
@.str.1478 = private constant [145 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.ndim is expected to equal 5\00", align 1
@.str.1479 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.dtype is expected to be float32\00", align 1
@.str.1480 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p0_shape[0])\00", align 1
@.str.1481 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p0_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p0_shape[1])\00", align 1
@.str.1482 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p0_shape[2])\00", align 1
@.str.1483 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p0_shape[3])\00", align 1
@.str.1484 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p0_shape[4]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.shape[4] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p0_shape[4])\00", align 1
@.str.1485 = private constant [413 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p0_strides[4]) and 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p0_strides[3]) and 14336 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p0_strides[2]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.strides: expected to be compact array\00", align 1
@.str.1486 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1487 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1488 = private constant [145 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.ndim is expected to equal 6\00", align 1
@.str.1489 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.dtype is expected to be float32\00", align 1
@.str.1490 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p1_shape[0]) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.shape[0] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p1_shape[0])\00", align 1
@.str.1491 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p1_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p1_shape[1])\00", align 1
@.str.1492 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p1_shape[2])\00", align 1
@.str.1493 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p1_shape[3])\00", align 1
@.str.1494 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p1_shape[4]) == 256, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.shape[4] has an unsatisfied constraint: 256 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p1_shape[4])\00", align 1
@.str.1495 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p1_shape[5]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.shape[5] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p1_shape[5])\00", align 1
@.str.1496 = private constant [411 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p1_strides[5]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p1_strides[4]) and 8192 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.strides: expected to be compact array\00", align 1
@.str.1497 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1498 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1499 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1500 = private constant [145 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.ndim is expected to equal 5\00", align 1
@.str.1501 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.dtype is expected to be float32\00", align 1
@.str.1502 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p2_shape[0])\00", align 1
@.str.1503 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p2_shape[1]) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p2_shape[1])\00", align 1
@.str.1504 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p2_shape[2])\00", align 1
@.str.1505 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p2_shape[3])\00", align 1
@.str.1506 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p2_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p2_shape[4])\00", align 1
@.str.1507 = private constant [309 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p2_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.strides: expected to be compact array\00", align 1
@.str.1508 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1509 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1510 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1511 = private constant [153 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.ndim is expected to equal 5\00", align 1
@.str.1512 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.dtype is expected to be float32\00", align 1
@.str.1513 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_T_relu_shape[0])\00", align 1
@.str.1514 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_T_relu_shape[1]) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_T_relu_shape[1])\00", align 1
@.str.1515 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_T_relu_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_T_relu_shape[2])\00", align 1
@.str.1516 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_T_relu_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_T_relu_shape[3])\00", align 1
@.str.1517 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_T_relu_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_T_relu_shape[4])\00", align 1
@.str.1518 = private constant [535 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_T_relu_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_T_relu_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_T_relu_strides[2]) and 100352 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.strides: expected to be compact array\00", align 1
@.str.1519 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1520 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1521 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.1523 = private constant [109 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4: num_args should be 4\00", align 1
@.str.1524 = private constant [164 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4: Expect arg[0] to be pointer\00", align 1
@.str.1525 = private constant [164 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4: Expect arg[1] to be pointer\00", align 1
@.str.1526 = private constant [164 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4: Expect arg[2] to be pointer\00", align 1
@.str.1527 = private constant [180 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4: Expect arg[3] to be pointer\00", align 1
@.str.1528 = private constant [145 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.ndim is expected to equal 5\00", align 1
@.str.1529 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.dtype is expected to be float32\00", align 1
@.str.1530 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p0_shape[0])\00", align 1
@.str.1531 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p0_shape[1])\00", align 1
@.str.1532 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p0_shape[2])\00", align 1
@.str.1533 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p0_shape[3])\00", align 1
@.str.1534 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p0_shape[4])\00", align 1
@.str.1535 = private constant [512 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.strides: expected to be compact array\00", align 1
@.str.1536 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1537 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1538 = private constant [145 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.ndim is expected to equal 6\00", align 1
@.str.1539 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.dtype is expected to be float32\00", align 1
@.str.1540 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p1_shape[0]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.shape[0] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p1_shape[0])\00", align 1
@.str.1541 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p1_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p1_shape[1])\00", align 1
@.str.1542 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p1_shape[2])\00", align 1
@.str.1543 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p1_shape[3])\00", align 1
@.str.1544 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p1_shape[4])\00", align 1
@.str.1545 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p1_shape[5])\00", align 1
@.str.1546 = private constant [510 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p1_strides[1]) and 1024 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.strides: expected to be compact array\00", align 1
@.str.1547 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1548 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1549 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1550 = private constant [145 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.ndim is expected to equal 5\00", align 1
@.str.1551 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.dtype is expected to be float32\00", align 1
@.str.1552 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p2_shape[0])\00", align 1
@.str.1553 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p2_shape[1]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p2_shape[1])\00", align 1
@.str.1554 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p2_shape[2])\00", align 1
@.str.1555 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p2_shape[3])\00", align 1
@.str.1556 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p2_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p2_shape[4])\00", align 1
@.str.1557 = private constant [308 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p2_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.strides: expected to be compact array\00", align 1
@.str.1558 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1559 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1560 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1561 = private constant [153 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.ndim is expected to equal 5\00", align 1
@.str.1562 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.dtype is expected to be float32\00", align 1
@.str.1563 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_T_relu_shape[0])\00", align 1
@.str.1564 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_T_relu_shape[1]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_T_relu_shape[1])\00", align 1
@.str.1565 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_T_relu_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_T_relu_shape[2])\00", align 1
@.str.1566 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_T_relu_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_T_relu_shape[3])\00", align 1
@.str.1567 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_T_relu_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_T_relu_shape[4])\00", align 1
@.str.1568 = private constant [532 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_T_relu_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_T_relu_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_T_relu_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.strides: expected to be compact array\00", align 1
@.str.1569 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1570 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1571 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.1573 = private constant [109 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5: num_args should be 4\00", align 1
@.str.1574 = private constant [164 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5: Expect arg[0] to be pointer\00", align 1
@.str.1575 = private constant [164 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5: Expect arg[1] to be pointer\00", align 1
@.str.1576 = private constant [164 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5: Expect arg[2] to be pointer\00", align 1
@.str.1577 = private constant [180 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5: Expect arg[3] to be pointer\00", align 1
@.str.1578 = private constant [145 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.ndim is expected to equal 5\00", align 1
@.str.1579 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.dtype is expected to be float32\00", align 1
@.str.1580 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p0_shape[0])\00", align 1
@.str.1581 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p0_shape[1]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p0_shape[1])\00", align 1
@.str.1582 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p0_shape[2]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p0_shape[2])\00", align 1
@.str.1583 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p0_shape[3]) == 56, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p0_shape[3])\00", align 1
@.str.1584 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p0_shape[4])\00", align 1
@.str.1585 = private constant [512 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p0_strides[3]) and 224 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p0_strides[2]) and 12544 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.strides: expected to be compact array\00", align 1
@.str.1586 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1587 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1588 = private constant [145 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.ndim is expected to equal 6\00", align 1
@.str.1589 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.dtype is expected to be float32\00", align 1
@.str.1590 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p1_shape[0]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.shape[0] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p1_shape[0])\00", align 1
@.str.1591 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p1_shape[1]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p1_shape[1])\00", align 1
@.str.1592 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p1_shape[2])\00", align 1
@.str.1593 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p1_shape[3])\00", align 1
@.str.1594 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p1_shape[4])\00", align 1
@.str.1595 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p1_shape[5])\00", align 1
@.str.1596 = private constant [711 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p1_strides[3]) and 48 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p1_strides[2]) and 144 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p1_strides[1]) and 4608 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.strides: expected to be compact array\00", align 1
@.str.1597 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1598 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1599 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1600 = private constant [145 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.ndim is expected to equal 5\00", align 1
@.str.1601 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.dtype is expected to be float32\00", align 1
@.str.1602 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p2_shape[0])\00", align 1
@.str.1603 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p2_shape[1]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p2_shape[1])\00", align 1
@.str.1604 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p2_shape[2])\00", align 1
@.str.1605 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p2_shape[3])\00", align 1
@.str.1606 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p2_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p2_shape[4])\00", align 1
@.str.1607 = private constant [308 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p2_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.strides: expected to be compact array\00", align 1
@.str.1608 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1609 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1610 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1611 = private constant [153 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.ndim is expected to equal 5\00", align 1
@.str.1612 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.dtype is expected to be float32\00", align 1
@.str.1613 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_T_relu_shape[0])\00", align 1
@.str.1614 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_T_relu_shape[1]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.shape[1] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_T_relu_shape[1])\00", align 1
@.str.1615 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_T_relu_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_T_relu_shape[2])\00", align 1
@.str.1616 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_T_relu_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_T_relu_shape[3])\00", align 1
@.str.1617 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_T_relu_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_T_relu_shape[4])\00", align 1
@.str.1618 = private constant [531 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_T_relu_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_T_relu_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_T_relu_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.strides: expected to be compact array\00", align 1
@.str.1619 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1620 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1621 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.1624 = private constant [109 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6: num_args should be 4\00", align 1
@.str.1625 = private constant [164 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6: Expect arg[0] to be pointer\00", align 1
@.str.1626 = private constant [164 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6: Expect arg[1] to be pointer\00", align 1
@.str.1627 = private constant [164 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6: Expect arg[2] to be pointer\00", align 1
@.str.1628 = private constant [180 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6: Expect arg[3] to be pointer\00", align 1
@.str.1629 = private constant [145 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.ndim is expected to equal 5\00", align 1
@.str.1630 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.dtype is expected to be float32\00", align 1
@.str.1631 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p0_shape[0])\00", align 1
@.str.1632 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p0_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p0_shape[1])\00", align 1
@.str.1633 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p0_shape[2])\00", align 1
@.str.1634 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p0_shape[3])\00", align 1
@.str.1635 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p0_shape[4]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.shape[4] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p0_shape[4])\00", align 1
@.str.1636 = private constant [413 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p0_strides[4]) and 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p0_strides[3]) and 14336 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p0_strides[2]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.strides: expected to be compact array\00", align 1
@.str.1637 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1638 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1639 = private constant [145 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.ndim is expected to equal 6\00", align 1
@.str.1640 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.dtype is expected to be float32\00", align 1
@.str.1641 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p1_shape[0]) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.shape[0] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p1_shape[0])\00", align 1
@.str.1642 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p1_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p1_shape[1])\00", align 1
@.str.1643 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p1_shape[2])\00", align 1
@.str.1644 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p1_shape[3])\00", align 1
@.str.1645 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p1_shape[4]) == 512, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.shape[4] has an unsatisfied constraint: 512 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p1_shape[4])\00", align 1
@.str.1646 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p1_shape[5]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.shape[5] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p1_shape[5])\00", align 1
@.str.1647 = private constant [412 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p1_strides[5]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p1_strides[4]) and 32768 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.strides: expected to be compact array\00", align 1
@.str.1648 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1649 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1650 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1651 = private constant [145 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.ndim is expected to equal 5\00", align 1
@.str.1652 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.dtype is expected to be float32\00", align 1
@.str.1653 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p2_shape[0])\00", align 1
@.str.1654 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p2_shape[1]) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p2_shape[1])\00", align 1
@.str.1655 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p2_shape[2])\00", align 1
@.str.1656 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p2_shape[3])\00", align 1
@.str.1657 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p2_shape[4]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p2_shape[4])\00", align 1
@.str.1658 = private constant [309 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p2_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.strides: expected to be compact array\00", align 1
@.str.1659 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1660 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1661 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1662 = private constant [153 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.ndim is expected to equal 5\00", align 1
@.str.1663 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.dtype is expected to be float32\00", align 1
@.str.1664 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_T_relu_shape[0])\00", align 1
@.str.1665 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_T_relu_shape[1]) == 2, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_T_relu_shape[1])\00", align 1
@.str.1666 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_T_relu_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_T_relu_shape[2])\00", align 1
@.str.1667 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_T_relu_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_T_relu_shape[3])\00", align 1
@.str.1668 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_T_relu_shape[4]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.shape[4] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_T_relu_shape[4])\00", align 1
@.str.1669 = private constant [534 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_T_relu_strides[4]) and 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_T_relu_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_T_relu_strides[2]) and 50176 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.strides: expected to be compact array\00", align 1
@.str.1670 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1671 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1672 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.1674 = private constant [109 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7: num_args should be 4\00", align 1
@.str.1675 = private constant [164 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7: Expect arg[0] to be pointer\00", align 1
@.str.1676 = private constant [164 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7: Expect arg[1] to be pointer\00", align 1
@.str.1677 = private constant [164 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7: Expect arg[2] to be pointer\00", align 1
@.str.1678 = private constant [180 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7: Expect arg[3] to be pointer\00", align 1
@.str.1679 = private constant [145 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.ndim is expected to equal 5\00", align 1
@.str.1680 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.dtype is expected to be float32\00", align 1
@.str.1681 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p0_shape[0])\00", align 1
@.str.1682 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p0_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p0_shape[1])\00", align 1
@.str.1683 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p0_shape[2])\00", align 1
@.str.1684 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p0_shape[3])\00", align 1
@.str.1685 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p0_shape[4]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.shape[4] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p0_shape[4])\00", align 1
@.str.1686 = private constant [412 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p0_strides[4]) and 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p0_strides[3]) and 3584 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p0_strides[2]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.strides: expected to be compact array\00", align 1
@.str.1687 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1688 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1689 = private constant [145 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.ndim is expected to equal 6\00", align 1
@.str.1690 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.dtype is expected to be float32\00", align 1
@.str.1691 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p1_shape[0]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.shape[0] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p1_shape[0])\00", align 1
@.str.1692 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p1_shape[1]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.shape[1] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p1_shape[1])\00", align 1
@.str.1693 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p1_shape[2])\00", align 1
@.str.1694 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p1_shape[3])\00", align 1
@.str.1695 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p1_shape[4]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.shape[4] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p1_shape[4])\00", align 1
@.str.1696 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p1_shape[5]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.shape[5] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p1_shape[5])\00", align 1
@.str.1697 = private constant [617 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p1_strides[5]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p1_strides[4]) and 4096 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p1_strides[3]) and 12288 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p1_strides[2]) and 36864 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.strides: expected to be compact array\00", align 1
@.str.1698 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1699 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1700 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1701 = private constant [145 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.ndim is expected to equal 5\00", align 1
@.str.1702 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.dtype is expected to be float32\00", align 1
@.str.1703 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p2_shape[0])\00", align 1
@.str.1704 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p2_shape[1]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.shape[1] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p2_shape[1])\00", align 1
@.str.1705 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p2_shape[2])\00", align 1
@.str.1706 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p2_shape[3])\00", align 1
@.str.1707 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p2_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p2_shape[4])\00", align 1
@.str.1708 = private constant [309 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p2_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.strides: expected to be compact array\00", align 1
@.str.1709 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1710 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1711 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1712 = private constant [153 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.ndim is expected to equal 5\00", align 1
@.str.1713 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.dtype is expected to be float32\00", align 1
@.str.1714 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_T_relu_shape[0])\00", align 1
@.str.1715 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_T_relu_shape[1]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.shape[1] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_T_relu_shape[1])\00", align 1
@.str.1716 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_T_relu_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_T_relu_shape[2])\00", align 1
@.str.1717 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_T_relu_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_T_relu_shape[3])\00", align 1
@.str.1718 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_T_relu_shape[4]) == 32, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_T_relu_shape[4])\00", align 1
@.str.1719 = private constant [533 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_T_relu_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_T_relu_strides[3]) and 896 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_T_relu_strides[2]) and 25088 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.strides: expected to be compact array\00", align 1
@.str.1720 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1721 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1722 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.1725 = private constant [109 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8: num_args should be 4\00", align 1
@.str.1726 = private constant [164 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8: Expect arg[0] to be pointer\00", align 1
@.str.1727 = private constant [164 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8: Expect arg[1] to be pointer\00", align 1
@.str.1728 = private constant [164 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8: Expect arg[2] to be pointer\00", align 1
@.str.1729 = private constant [180 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8: Expect arg[3] to be pointer\00", align 1
@.str.1730 = private constant [145 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.ndim is expected to equal 5\00", align 1
@.str.1731 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.dtype is expected to be float32\00", align 1
@.str.1732 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p0_shape[0])\00", align 1
@.str.1733 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p0_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p0_shape[1])\00", align 1
@.str.1734 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p0_shape[2])\00", align 1
@.str.1735 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p0_shape[3])\00", align 1
@.str.1736 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p0_shape[4])\00", align 1
@.str.1737 = private constant [511 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p0_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.strides: expected to be compact array\00", align 1
@.str.1738 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1739 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1740 = private constant [145 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.ndim is expected to equal 6\00", align 1
@.str.1741 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.dtype is expected to be float32\00", align 1
@.str.1742 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p1_shape[0]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.shape[0] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p1_shape[0])\00", align 1
@.str.1743 = private constant [315 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p1_shape[1]) == 128, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.shape[1] has an unsatisfied constraint: 128 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p1_shape[1])\00", align 1
@.str.1744 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p1_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p1_shape[2])\00", align 1
@.str.1745 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p1_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p1_shape[3])\00", align 1
@.str.1746 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p1_shape[4])\00", align 1
@.str.1747 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p1_shape[5])\00", align 1
@.str.1748 = private constant [510 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p1_strides[1]) and 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.strides: expected to be compact array\00", align 1
@.str.1749 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1750 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1751 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1752 = private constant [145 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.ndim is expected to equal 5\00", align 1
@.str.1753 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.dtype is expected to be float32\00", align 1
@.str.1754 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p2_shape[0])\00", align 1
@.str.1755 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p2_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p2_shape[1])\00", align 1
@.str.1756 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p2_shape[2])\00", align 1
@.str.1757 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p2_shape[3])\00", align 1
@.str.1758 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p2_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p2_shape[4])\00", align 1
@.str.1759 = private constant [308 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p2_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.strides: expected to be compact array\00", align 1
@.str.1760 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1761 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1762 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1763 = private constant [153 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.ndim is expected to equal 5\00", align 1
@.str.1764 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.dtype is expected to be float32\00", align 1
@.str.1765 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_T_relu_shape[0])\00", align 1
@.str.1766 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_T_relu_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_T_relu_shape[1])\00", align 1
@.str.1767 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_T_relu_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_T_relu_shape[2])\00", align 1
@.str.1768 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_T_relu_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_T_relu_shape[3])\00", align 1
@.str.1769 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_T_relu_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_T_relu_shape[4])\00", align 1
@.str.1770 = private constant [531 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_T_relu_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_T_relu_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_T_relu_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.strides: expected to be compact array\00", align 1
@.str.1771 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1772 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1773 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.1775 = private constant [109 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9: num_args should be 4\00", align 1
@.str.1776 = private constant [164 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9: Expect arg[0] to be pointer\00", align 1
@.str.1777 = private constant [164 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9: Expect arg[1] to be pointer\00", align 1
@.str.1778 = private constant [164 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9: Expect arg[2] to be pointer\00", align 1
@.str.1779 = private constant [180 x i8] c"Assert fail: T_relu_code == 3 or T_relu_code == 13 or T_relu_code == 7 or T_relu_code == 4, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9: Expect arg[3] to be pointer\00", align 1
@.str.1780 = private constant [145 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.ndim is expected to equal 5\00", align 1
@.str.1781 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.dtype is expected to be float32\00", align 1
@.str.1782 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p0_shape[0])\00", align 1
@.str.1783 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p0_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p0_shape[1])\00", align 1
@.str.1784 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p0_shape[2]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.shape[2] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p0_shape[2])\00", align 1
@.str.1785 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p0_shape[3]) == 28, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.shape[3] has an unsatisfied constraint: 28 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p0_shape[3])\00", align 1
@.str.1786 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p0_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p0_shape[4])\00", align 1
@.str.1787 = private constant [511 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p0_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p0_strides[3]) and 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p0_strides[2]) and 3136 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p0_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.strides: expected to be compact array\00", align 1
@.str.1788 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1789 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1790 = private constant [145 x i8] c"Assert fail: 6 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.ndim is expected to equal 6\00", align 1
@.str.1791 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.dtype is expected to be float32\00", align 1
@.str.1792 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p1_shape[0]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.shape[0] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p1_shape[0])\00", align 1
@.str.1793 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p1_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p1_shape[1])\00", align 1
@.str.1794 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p1_shape[2]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.shape[2] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p1_shape[2])\00", align 1
@.str.1795 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p1_shape[3]) == 3, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.shape[3] has an unsatisfied constraint: 3 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p1_shape[3])\00", align 1
@.str.1796 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p1_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p1_shape[4])\00", align 1
@.str.1797 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p1_shape[5]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.shape[5] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p1_shape[5])\00", align 1
@.str.1798 = private constant [711 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p1_strides[5]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p1_strides[4]) and 16 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p1_strides[3]) and 48 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p1_strides[2]) and 144 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p1_strides[1]) and 9216 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p1_strides[0]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.strides: expected to be compact array\00", align 1
@.str.1799 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1800 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1801 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1802 = private constant [145 x i8] c"Assert fail: 5 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.ndim is expected to equal 5\00", align 1
@.str.1803 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.dtype is expected to be float32\00", align 1
@.str.1804 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p2_shape[0])\00", align 1
@.str.1805 = private constant [313 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p2_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p2_shape[1])\00", align 1
@.str.1806 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p2_shape[2]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.shape[2] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p2_shape[2])\00", align 1
@.str.1807 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p2_shape[3]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.shape[3] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p2_shape[3])\00", align 1
@.str.1808 = private constant [311 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p2_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p2_shape[4])\00", align 1
@.str.1809 = private constant [308 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p2_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_p2_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.strides: expected to be compact array\00", align 1
@.str.1810 = private constant [232 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1811 = private constant [212 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1812 = private constant [218 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1813 = private constant [153 x i8] c"Assert fail: 5 == T.tvm_struct_get(T_relu, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.ndim is expected to equal 5\00", align 1
@.str.1814 = private constant [285 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_relu, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_relu, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.dtype is expected to be float32\00", align 1
@.str.1815 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_T_relu_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_T_relu_shape[0])\00", align 1
@.str.1816 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_T_relu_shape[1]) == 64, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.shape[1] has an unsatisfied constraint: 64 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_T_relu_shape[1])\00", align 1
@.str.1817 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_T_relu_shape[2]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.shape[2] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_T_relu_shape[2])\00", align 1
@.str.1818 = private constant [325 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_T_relu_shape[3]) == 14, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.shape[3] has an unsatisfied constraint: 14 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_T_relu_shape[3])\00", align 1
@.str.1819 = private constant [323 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_T_relu_shape[4]) == 4, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.shape[4] has an unsatisfied constraint: 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_T_relu_shape[4])\00", align 1
@.str.1820 = private constant [529 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_T_relu_strides[4]) and 4 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_T_relu_strides[3]) and 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_T_relu_strides[2]) and 784 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_T_relu_strides[1]), tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.strides: expected to be compact array\00", align 1
@.str.1821 = private constant [244 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_relu, 0, 8, \22uint64\22)\00", align 1
@.str.1822 = private constant [224 x i8] c"Assert fail: T.tvm_struct_get(T_relu, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_relu, 0, 10, \22int32\22)\00", align 1
@.str.1823 = private constant [230 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_relu, 0, 9, \22int32\22)\00", align 1
@.str.1826 = private constant [97 x i8] c"Assert fail: num_args == 4, tvmgen_default_fused_nn_contrib_dense_pack_add: num_args should be 4\00", align 1
@.str.1827 = private constant [152 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_contrib_dense_pack_add: Expect arg[0] to be pointer\00", align 1
@.str.1828 = private constant [152 x i8] c"Assert fail: p1_code == 3 or p1_code == 13 or p1_code == 7 or p1_code == 4, tvmgen_default_fused_nn_contrib_dense_pack_add: Expect arg[1] to be pointer\00", align 1
@.str.1829 = private constant [152 x i8] c"Assert fail: p2_code == 3 or p2_code == 13 or p2_code == 7 or p2_code == 4, tvmgen_default_fused_nn_contrib_dense_pack_add: Expect arg[2] to be pointer\00", align 1
@.str.1830 = private constant [164 x i8] c"Assert fail: T_add_code == 3 or T_add_code == 13 or T_add_code == 7 or T_add_code == 4, tvmgen_default_fused_nn_contrib_dense_pack_add: Expect arg[3] to be pointer\00", align 1
@.str.1831 = private constant [133 x i8] c"Assert fail: 2 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_dense_pack_add.p0.ndim is expected to equal 2\00", align 1
@.str.1832 = private constant [257 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_dense_pack_add.p0.dtype is expected to be float32\00", align 1
@.str.1833 = private constant [275 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p0_shape[0])\00", align 1
@.str.1834 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p0_shape[1]) == 2048, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p0.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p0_shape[1])\00", align 1
@.str.1835 = private constant [185 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p0_strides[1]), tvmgen_default_fused_nn_contrib_dense_pack_add.p0.strides: expected to be compact array\00", align 1
@.str.1836 = private constant [220 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1837 = private constant [200 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1838 = private constant [133 x i8] c"Assert fail: 3 == T.tvm_struct_get(p1, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_dense_pack_add.p1.ndim is expected to equal 3\00", align 1
@.str.1839 = private constant [257 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p1, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p1, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_dense_pack_add.p1.dtype is expected to be float32\00", align 1
@.str.1840 = private constant [279 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p1_shape[0]) == 125, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p1.shape[0] has an unsatisfied constraint: 125 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p1_shape[0])\00", align 1
@.str.1841 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p1_shape[1]) == 2048, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p1.shape[1] has an unsatisfied constraint: 2048 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p1_shape[1])\00", align 1
@.str.1842 = private constant [275 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p1_shape[2]) == 8, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p1.shape[2] has an unsatisfied constraint: 8 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p1_shape[2])\00", align 1
@.str.1843 = private constant [363 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p1_strides[2]) and 8 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p1_strides[1]) and 16384 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p1_strides[0]), tvmgen_default_fused_nn_contrib_dense_pack_add.p1.strides: expected to be compact array\00", align 1
@.str.1844 = private constant [220 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p1.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p1, 0, 8, \22uint64\22)\00", align 1
@.str.1845 = private constant [200 x i8] c"Assert fail: T.tvm_struct_get(p1, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p1.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p1, 0, 10, \22int32\22)\00", align 1
@.str.1846 = private constant [206 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p1.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p1, 0, 9, \22int32\22)\00", align 1
@.str.1847 = private constant [133 x i8] c"Assert fail: 2 == T.tvm_struct_get(p2, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_dense_pack_add.p2.ndim is expected to equal 2\00", align 1
@.str.1848 = private constant [257 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p2, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p2, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_dense_pack_add.p2.dtype is expected to be float32\00", align 1
@.str.1849 = private constant [275 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p2_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p2.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p2_shape[0])\00", align 1
@.str.1850 = private constant [281 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p2_shape[1]) == 1000, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p2.shape[1] has an unsatisfied constraint: 1000 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p2_shape[1])\00", align 1
@.str.1851 = private constant [185 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_p2_strides[1]), tvmgen_default_fused_nn_contrib_dense_pack_add.p2.strides: expected to be compact array\00", align 1
@.str.1852 = private constant [220 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p2.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p2, 0, 8, \22uint64\22)\00", align 1
@.str.1853 = private constant [200 x i8] c"Assert fail: T.tvm_struct_get(p2, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p2.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p2, 0, 10, \22int32\22)\00", align 1
@.str.1854 = private constant [206 x i8] c"Assert fail: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_dense_pack_add.p2.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(p2, 0, 9, \22int32\22)\00", align 1
@.str.1855 = private constant [139 x i8] c"Assert fail: 2 == T.tvm_struct_get(T_add, 0, 4, \22int32\22), tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.ndim is expected to equal 2\00", align 1
@.str.1856 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(T_add, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(T_add, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.dtype is expected to be float32\00", align 1
@.str.1857 = private constant [284 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_T_add_shape[0]) == 1, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_T_add_shape[0])\00", align 1
@.str.1858 = private constant [290 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_T_add_shape[1]) == 1000, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.shape[1] has an unsatisfied constraint: 1000 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_T_add_shape[1])\00", align 1
@.str.1859 = private constant [191 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_contrib_dense_pack_add_T_add_strides[1]), tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.strides: expected to be compact array\00", align 1
@.str.1860 = private constant [229 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(T_add, 0, 8, \22uint64\22)\00", align 1
@.str.1861 = private constant [209 x i8] c"Assert fail: T.tvm_struct_get(T_add, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(T_add, 0, 10, \22int32\22)\00", align 1
@.str.1862 = private constant [215 x i8] c"Assert fail: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(T_add, 0, 9, \22int32\22)\00", align 1
@.str.1864 = private constant [85 x i8] c"Assert fail: num_args == 2, tvmgen_default_fused_nn_max_pool2d: num_args should be 2\00", align 1
@.str.1865 = private constant [140 x i8] c"Assert fail: p0_code == 3 or p0_code == 13 or p0_code == 7 or p0_code == 4, tvmgen_default_fused_nn_max_pool2d: Expect arg[0] to be pointer\00", align 1
@.str.1866 = private constant [164 x i8] c"Assert fail: pool_max_code == 3 or pool_max_code == 13 or pool_max_code == 7 or pool_max_code == 4, tvmgen_default_fused_nn_max_pool2d: Expect arg[1] to be pointer\00", align 1
@.str.1867 = private constant [121 x i8] c"Assert fail: 5 == T.tvm_struct_get(p0, 0, 4, \22int32\22), tvmgen_default_fused_nn_max_pool2d.p0.ndim is expected to equal 5\00", align 1
@.str.1868 = private constant [245 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(p0, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(p0, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_max_pool2d.p0.dtype is expected to be float32\00", align 1
@.str.1869 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[0]) == 1, Argument tvmgen_default_fused_nn_max_pool2d.p0.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[0])\00", align 1
@.str.1870 = private constant [239 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[1]) == 2, Argument tvmgen_default_fused_nn_max_pool2d.p0.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[1])\00", align 1
@.str.1871 = private constant [243 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[2]) == 112, Argument tvmgen_default_fused_nn_max_pool2d.p0.shape[2] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[2])\00", align 1
@.str.1872 = private constant [243 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[3]) == 112, Argument tvmgen_default_fused_nn_max_pool2d.p0.shape[3] has an unsatisfied constraint: 112 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[3])\00", align 1
@.str.1873 = private constant [241 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[4]) == 32, Argument tvmgen_default_fused_nn_max_pool2d.p0.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_shape[4])\00", align 1
@.str.1874 = private constant [395 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_strides[3]) and 3584 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_strides[2]) and 401408 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_p0_strides[1]), tvmgen_default_fused_nn_max_pool2d.p0.strides: expected to be compact array\00", align 1
@.str.1875 = private constant [208 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_max_pool2d.p0.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(p0, 0, 8, \22uint64\22)\00", align 1
@.str.1876 = private constant [188 x i8] c"Assert fail: T.tvm_struct_get(p0, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_max_pool2d.p0.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(p0, 0, 10, \22int32\22)\00", align 1
@.str.1877 = private constant [133 x i8] c"Assert fail: 5 == T.tvm_struct_get(pool_max, 0, 4, \22int32\22), tvmgen_default_fused_nn_max_pool2d.pool_max.ndim is expected to equal 5\00", align 1
@.str.1878 = private constant [269 x i8] c"Assert fail: T.tvm_struct_get(pool_max, 0, 5, \22uint8\22) == T.uint8(2) and T.tvm_struct_get(pool_max, 0, 6, \22uint8\22) == T.uint8(32) and T.tvm_struct_get(pool_max, 0, 7, \22uint16\22) == T.uint16(1), tvmgen_default_fused_nn_max_pool2d.pool_max.dtype is expected to be float32\00", align 1
@.str.1879 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[0]) == 1, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.shape[0] has an unsatisfied constraint: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[0])\00", align 1
@.str.1880 = private constant [257 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[1]) == 2, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.shape[1] has an unsatisfied constraint: 2 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[1])\00", align 1
@.str.1881 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[2]) == 56, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.shape[2] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[2])\00", align 1
@.str.1882 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[3]) == 56, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.shape[3] has an unsatisfied constraint: 56 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[3])\00", align 1
@.str.1883 = private constant [259 x i8] c"Assert fail: T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[4]) == 32, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.shape[4] has an unsatisfied constraint: 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_shape[4])\00", align 1
@.str.1884 = private constant [425 x i8] c"Assert fail: 1 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_strides[4]) and 32 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_strides[3]) and 1792 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_strides[2]) and 100352 == T.Cast(\22int32\22, tvmgen_default_fused_nn_max_pool2d_pool_max_strides[1]), tvmgen_default_fused_nn_max_pool2d.pool_max.strides: expected to be compact array\00", align 1
@.str.1885 = private constant [226 x i8] c"Assert fail: T.uint64(0) == T.tvm_struct_get(pool_max, 0, 8, \22uint64\22), Argument tvmgen_default_fused_nn_max_pool2d.pool_max.byte_offset has an unsatisfied constraint: T.uint64(0) == T.tvm_struct_get(pool_max, 0, 8, \22uint64\22)\00", align 1
@.str.1886 = private constant [206 x i8] c"Assert fail: T.tvm_struct_get(pool_max, 0, 10, \22int32\22) == 1, Argument tvmgen_default_fused_nn_max_pool2d.pool_max.device_type has an unsatisfied constraint: 1 == T.tvm_struct_get(pool_max, 0, 10, \22int32\22)\00", align 1
@.str.1887 = private constant [212 x i8] c"Assert fail: dev_id == T.tvm_struct_get(pool_max, 0, 9, \22int32\22), Argument tvmgen_default_fused_nn_max_pool2d.pool_max.device_id has an unsatisfied constraint: dev_id == T.tvm_struct_get(pool_max, 0, 9, \22int32\22)\00", align 1
@llvm.global_ctors = appending global [0 x { i32, ptr, ptr }] zeroinitializer

define dllexport i32 @tvmgen_default_fused_layout_transform(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !11, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !12, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !13, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !14, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !15, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !16, metadata !DIExpression()), !dbg !17
  %0 = icmp eq i32 %num_args, 2, !dbg !17
  br i1 %0, label %assert_end, label %assert_fail, !dbg !17, !prof !18

common.ret:                                       ; preds = %assert_end52, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ %136, %assert_end52 ]
  ret i32 %common.ret.op, !dbg !17

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %1(ptr nonnull @.str), !dbg !17
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !17, !tbaa !22
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !17
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !17, !tbaa !33
  %p0 = load ptr, ptr %args, align 8, !dbg !17
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !17
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !17
  %p054 = load ptr, ptr %p0, align 8, !dbg !17
  call void @llvm.assume(i1 true) [ "align"(ptr %p054, i64 64) ], !dbg !17
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !17
  %tvmgen_default_fused_layout_transform.p0.shape = load ptr, ptr %4, align 8, !dbg !17
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !17
  %tvmgen_default_fused_layout_transform.p0.strides = load ptr, ptr %5, align 8, !dbg !17
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !17
  %dev_id = load i32, ptr %6, align 4, !dbg !17
  %T_layout_trans53 = load ptr, ptr %T_layout_trans, align 8, !dbg !17
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans53, i64 64) ], !dbg !17
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !17
  %tvmgen_default_fused_layout_transform.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !17
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !17
  %tvmgen_default_fused_layout_transform.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !17
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !17

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %9(ptr nonnull @.str.1), !dbg !17
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !17

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %10(ptr nonnull @.str.2), !dbg !17
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !17
  %12 = load i32, ptr %11, align 4, !dbg !17
  %13 = icmp eq i32 %12, 4, !dbg !17
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !17, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %14(ptr nonnull @.str.3), !dbg !17
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !17
  %16 = load i16, ptr %15, align 2, !dbg !17
  %17 = icmp eq i16 %16, 1, !dbg !17
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !17
  %19 = load i8, ptr %18, align 1, !dbg !17
  %20 = icmp eq i8 %19, 32, !dbg !17
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !17
  %22 = load i8, ptr %21, align 1, !dbg !17
  %23 = icmp eq i8 %22, 2, !dbg !17
  %24 = and i1 %20, %23, !dbg !17
  %25 = and i1 %17, %24, !dbg !17
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !17, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %26(ptr nonnull @.str.4), !dbg !17
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform.p0.shape, align 8, !dbg !17, !tbaa !35
  %28 = and i64 %27, 4294967295, !dbg !17
  %29 = icmp eq i64 %28, 1, !dbg !17
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !17, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %30(ptr nonnull @.str.5), !dbg !17
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.p0.shape, i64 1, !dbg !17
  %32 = load i64, ptr %31, align 8, !dbg !17, !tbaa !45
  %33 = and i64 %32, 4294967295, !dbg !17
  %34 = icmp eq i64 %33, 3, !dbg !17
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !17, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %35(ptr nonnull @.str.6), !dbg !17
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.p0.shape, i64 2, !dbg !17
  %37 = load i64, ptr %36, align 8, !dbg !17, !tbaa !47
  %38 = and i64 %37, 4294967295, !dbg !17
  %39 = icmp eq i64 %38, 224, !dbg !17
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !17, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %40(ptr nonnull @.str.7), !dbg !17
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.p0.shape, i64 3, !dbg !17
  %42 = load i64, ptr %41, align 8, !dbg !17, !tbaa !50
  %43 = and i64 %42, 4294967295, !dbg !17
  %44 = icmp eq i64 %43, 224, !dbg !17
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !17, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %45(ptr nonnull @.str.8), !dbg !17
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform.p0.strides, null, !dbg !17
  br i1 %.not, label %if_end, label %if_then, !dbg !17, !prof !52

if_then:                                          ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.p0.strides, i64 1, !dbg !17
  %47 = load i64, ptr %46, align 8, !dbg !17, !tbaa !53
  %48 = and i64 %47, 4294967295, !dbg !17
  %49 = icmp eq i64 %48, 50176, !dbg !17
  %50 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.p0.strides, i64 2, !dbg !17
  %51 = load i64, ptr %50, align 8, !dbg !17, !tbaa !63
  %52 = and i64 %51, 4294967295, !dbg !17
  %53 = icmp eq i64 %52, 224, !dbg !17
  %54 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.p0.strides, i64 3, !dbg !17
  %55 = load i64, ptr %54, align 8, !dbg !17, !tbaa !66
  %56 = and i64 %55, 4294967295, !dbg !17
  %57 = icmp eq i64 %56, 1, !dbg !17
  %58 = and i1 %53, %57, !dbg !17
  %59 = and i1 %49, %58, !dbg !17
  br i1 %59, label %if_end, label %assert_fail21, !dbg !17, !prof !18

if_end:                                           ; preds = %if_then, %assert_end20
  %60 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !17
  %61 = load i64, ptr %60, align 8, !dbg !17
  %62 = icmp eq i64 %61, 0, !dbg !17
  br i1 %62, label %assert_end24, label %assert_fail23, !dbg !17, !prof !18

assert_fail21:                                    ; preds = %if_then
  %63 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %63(ptr nonnull @.str.9), !dbg !17
  br label %common.ret

assert_fail23:                                    ; preds = %if_end
  %64 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %64(ptr nonnull @.str.10), !dbg !17
  br label %common.ret

assert_end24:                                     ; preds = %if_end
  %65 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !17
  %66 = load i32, ptr %65, align 4, !dbg !17
  %67 = icmp eq i32 %66, 1, !dbg !17
  br i1 %67, label %assert_end26, label %assert_fail25, !dbg !17, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %68 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %68(ptr nonnull @.str.11), !dbg !17
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %69 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !17
  %70 = load i32, ptr %69, align 4, !dbg !17
  %71 = icmp eq i32 %70, 5, !dbg !17
  br i1 %71, label %assert_end30, label %assert_fail27, !dbg !17, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %72 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %72(ptr nonnull @.str.12), !dbg !17
  br label %common.ret

assert_end30:                                     ; preds = %assert_end26
  %73 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !17
  %74 = load i16, ptr %73, align 2, !dbg !17
  %75 = icmp eq i16 %74, 1, !dbg !17
  %76 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !17
  %77 = load i8, ptr %76, align 1, !dbg !17
  %78 = icmp eq i8 %77, 32, !dbg !17
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !17
  %80 = load i8, ptr %79, align 1, !dbg !17
  %81 = icmp eq i8 %80, 2, !dbg !17
  %82 = and i1 %78, %81, !dbg !17
  %83 = and i1 %75, %82, !dbg !17
  br i1 %83, label %assert_end32, label %assert_fail31, !dbg !17, !prof !18

assert_fail31:                                    ; preds = %assert_end30
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %84(ptr nonnull @.str.13), !dbg !17
  br label %common.ret

assert_end32:                                     ; preds = %assert_end30
  %85 = load i64, ptr %tvmgen_default_fused_layout_transform.T_layout_trans.shape, align 8, !dbg !17, !tbaa !68
  %86 = and i64 %85, 4294967295, !dbg !17
  %87 = icmp eq i64 %86, 1, !dbg !17
  br i1 %87, label %assert_end34, label %assert_fail33, !dbg !17, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %88(ptr nonnull @.str.14), !dbg !17
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %89 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.T_layout_trans.shape, i64 1, !dbg !17
  %90 = load i64, ptr %89, align 8, !dbg !17, !tbaa !78
  %91 = and i64 %90, 4294967295, !dbg !17
  %92 = icmp eq i64 %91, 1, !dbg !17
  br i1 %92, label %assert_end36, label %assert_fail35, !dbg !17, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %93(ptr nonnull @.str.15), !dbg !17
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %94 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.T_layout_trans.shape, i64 2, !dbg !17
  %95 = load i64, ptr %94, align 8, !dbg !17, !tbaa !80
  %96 = and i64 %95, 4294967295, !dbg !17
  %97 = icmp eq i64 %96, 224, !dbg !17
  br i1 %97, label %assert_end38, label %assert_fail37, !dbg !17, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %98(ptr nonnull @.str.16), !dbg !17
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.T_layout_trans.shape, i64 3, !dbg !17
  %100 = load i64, ptr %99, align 8, !dbg !17, !tbaa !83
  %101 = and i64 %100, 4294967295, !dbg !17
  %102 = icmp eq i64 %101, 224, !dbg !17
  br i1 %102, label %assert_end40, label %assert_fail39, !dbg !17, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %103(ptr nonnull @.str.17), !dbg !17
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.T_layout_trans.shape, i64 4, !dbg !17
  %105 = load i64, ptr %104, align 8, !dbg !17, !tbaa !85
  %106 = and i64 %105, 4294967295, !dbg !17
  %107 = icmp eq i64 %106, 3, !dbg !17
  br i1 %107, label %assert_end42, label %assert_fail41, !dbg !17, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %108(ptr nonnull @.str.18), !dbg !17
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %.not55 = icmp eq ptr %tvmgen_default_fused_layout_transform.T_layout_trans.strides, null, !dbg !17
  br i1 %.not55, label %if_end44, label %if_then43, !dbg !17, !prof !52

if_then43:                                        ; preds = %assert_end42
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.T_layout_trans.strides, i64 2, !dbg !17
  %110 = load i64, ptr %109, align 8, !dbg !17, !tbaa !89
  %111 = and i64 %110, 4294967295, !dbg !17
  %112 = icmp eq i64 %111, 672, !dbg !17
  %113 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.T_layout_trans.strides, i64 3, !dbg !17
  %114 = load i64, ptr %113, align 8, !dbg !17, !tbaa !99
  %115 = and i64 %114, 4294967295, !dbg !17
  %116 = icmp eq i64 %115, 3, !dbg !17
  %117 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform.T_layout_trans.strides, i64 4, !dbg !17
  %118 = load i64, ptr %117, align 8, !dbg !17, !tbaa !101
  %119 = and i64 %118, 4294967295, !dbg !17
  %120 = icmp eq i64 %119, 1, !dbg !17
  %121 = and i1 %116, %120, !dbg !17
  %122 = and i1 %112, %121, !dbg !17
  br i1 %122, label %if_end44, label %assert_fail45, !dbg !17, !prof !18

if_end44:                                         ; preds = %if_then43, %assert_end42
  %123 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !17
  %124 = load i64, ptr %123, align 8, !dbg !17
  %125 = icmp eq i64 %124, 0, !dbg !17
  br i1 %125, label %assert_end48, label %assert_fail47, !dbg !17, !prof !18

assert_fail45:                                    ; preds = %if_then43
  %126 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %126(ptr nonnull @.str.19), !dbg !17
  br label %common.ret

assert_fail47:                                    ; preds = %if_end44
  %127 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %127(ptr nonnull @.str.20), !dbg !17
  br label %common.ret

assert_end48:                                     ; preds = %if_end44
  %128 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !17
  %129 = load i32, ptr %128, align 4, !dbg !17
  %130 = icmp eq i32 %129, 1, !dbg !17
  br i1 %130, label %assert_end50, label %assert_fail49, !dbg !17, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %131(ptr nonnull @.str.21), !dbg !17
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %132 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !17
  %133 = load i32, ptr %132, align 4, !dbg !17
  %134 = icmp eq i32 %dev_id, %133, !dbg !17
  br i1 %134, label %assert_end52, label %assert_fail51, !dbg !17, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %135 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !17, !tbaa !19
  tail call void %135(ptr nonnull @.str.22), !dbg !17
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %136 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_compute_(ptr %T_layout_trans53, ptr %p054), !dbg !17
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_1(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !105 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !107, metadata !DIExpression()), !dbg !113
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !108, metadata !DIExpression()), !dbg !113
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !109, metadata !DIExpression()), !dbg !113
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !110, metadata !DIExpression()), !dbg !113
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !111, metadata !DIExpression()), !dbg !113
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !112, metadata !DIExpression()), !dbg !113
  %0 = icmp eq i32 %num_args, 2, !dbg !113
  br i1 %0, label %assert_end, label %assert_fail, !dbg !113, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %151, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !113

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %1(ptr nonnull @.str.23), !dbg !113
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !113, !tbaa !114
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !113
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !113, !tbaa !125
  %p0 = load ptr, ptr %args, align 8, !dbg !113
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !113
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !113
  %p056 = load ptr, ptr %p0, align 8, !dbg !113
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !113
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !113
  %tvmgen_default_fused_layout_transform_1.p0.shape = load ptr, ptr %4, align 8, !dbg !113
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !113
  %tvmgen_default_fused_layout_transform_1.p0.strides = load ptr, ptr %5, align 8, !dbg !113
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !113
  %dev_id = load i32, ptr %6, align 4, !dbg !113
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !113
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !113
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !113
  %tvmgen_default_fused_layout_transform_1.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !113
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !113
  %tvmgen_default_fused_layout_transform_1.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !113
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !113

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %9(ptr nonnull @.str.24), !dbg !113
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !113

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %10(ptr nonnull @.str.25), !dbg !113
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !113
  %12 = load i32, ptr %11, align 4, !dbg !113
  %13 = icmp eq i32 %12, 5, !dbg !113
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !113, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %14(ptr nonnull @.str.26), !dbg !113
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !113
  %16 = load i16, ptr %15, align 2, !dbg !113
  %17 = icmp eq i16 %16, 1, !dbg !113
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !113
  %19 = load i8, ptr %18, align 1, !dbg !113
  %20 = icmp eq i8 %19, 32, !dbg !113
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !113
  %22 = load i8, ptr %21, align 1, !dbg !113
  %23 = icmp eq i8 %22, 2, !dbg !113
  %24 = and i1 %20, %23, !dbg !113
  %25 = and i1 %17, %24, !dbg !113
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !113, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %26(ptr nonnull @.str.27), !dbg !113
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_1.p0.shape, align 8, !dbg !113, !tbaa !127
  %28 = and i64 %27, 4294967295, !dbg !113
  %29 = icmp eq i64 %28, 1, !dbg !113
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !113, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %30(ptr nonnull @.str.28), !dbg !113
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_1.p0.shape, i64 1, !dbg !113
  %32 = load i64, ptr %31, align 8, !dbg !113, !tbaa !137
  %33 = and i64 %32, 4294967295, !dbg !113
  %34 = icmp eq i64 %33, 2, !dbg !113
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !113, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %35(ptr nonnull @.str.29), !dbg !113
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_1.p0.shape, i64 2, !dbg !113
  %37 = load i64, ptr %36, align 8, !dbg !113, !tbaa !139
  %38 = and i64 %37, 4294967295, !dbg !113
  %39 = icmp eq i64 %38, 56, !dbg !113
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !113, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %40(ptr nonnull @.str.30), !dbg !113
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_1.p0.shape, i64 3, !dbg !113
  %42 = load i64, ptr %41, align 8, !dbg !113, !tbaa !142
  %43 = and i64 %42, 4294967295, !dbg !113
  %44 = icmp eq i64 %43, 56, !dbg !113
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !113, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %45(ptr nonnull @.str.31), !dbg !113
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_1.p0.shape, i64 4, !dbg !113
  %47 = load i64, ptr %46, align 8, !dbg !113, !tbaa !144
  %48 = and i64 %47, 4294967295, !dbg !113
  %49 = icmp eq i64 %48, 32, !dbg !113
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !113, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %50(ptr nonnull @.str.32), !dbg !113
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_1.p0.strides, null, !dbg !113
  br i1 %.not, label %if_end, label %if_then, !dbg !113, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_1.p0.strides, i64 1, !dbg !113
  %52 = load i64, ptr %51, align 8, !dbg !113, !tbaa !148
  %53 = and i64 %52, 4294967295, !dbg !113
  %54 = icmp eq i64 %53, 100352, !dbg !113
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_1.p0.strides, i64 2, !dbg !113
  %56 = load i64, ptr %55, align 8, !dbg !113, !tbaa !158
  %57 = and i64 %56, 4294967295, !dbg !113
  %58 = icmp eq i64 %57, 1792, !dbg !113
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_1.p0.strides, i64 3, !dbg !113
  %60 = load i64, ptr %59, align 8, !dbg !113, !tbaa !161
  %61 = and i64 %60, 4294967295, !dbg !113
  %62 = icmp eq i64 %61, 32, !dbg !113
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_1.p0.strides, i64 4, !dbg !113
  %64 = load i64, ptr %63, align 8, !dbg !113, !tbaa !163
  %65 = and i64 %64, 4294967295, !dbg !113
  %66 = icmp eq i64 %65, 1, !dbg !113
  %67 = and i1 %62, %66, !dbg !113
  %68 = and i1 %58, %67, !dbg !113
  %69 = and i1 %54, %68, !dbg !113
  br i1 %69, label %if_end, label %assert_fail23, !dbg !113, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !113
  %71 = load i64, ptr %70, align 8, !dbg !113
  %72 = icmp eq i64 %71, 0, !dbg !113
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !113, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %73(ptr nonnull @.str.33), !dbg !113
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %74(ptr nonnull @.str.34), !dbg !113
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !113
  %76 = load i32, ptr %75, align 4, !dbg !113
  %77 = icmp eq i32 %76, 1, !dbg !113
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !113, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %78(ptr nonnull @.str.35), !dbg !113
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !113
  %80 = load i32, ptr %79, align 4, !dbg !113
  %81 = icmp eq i32 %80, 5, !dbg !113
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !113, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %82(ptr nonnull @.str.36), !dbg !113
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !113
  %84 = load i16, ptr %83, align 2, !dbg !113
  %85 = icmp eq i16 %84, 1, !dbg !113
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !113
  %87 = load i8, ptr %86, align 1, !dbg !113
  %88 = icmp eq i8 %87, 32, !dbg !113
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !113
  %90 = load i8, ptr %89, align 1, !dbg !113
  %91 = icmp eq i8 %90, 2, !dbg !113
  %92 = and i1 %88, %91, !dbg !113
  %93 = and i1 %85, %92, !dbg !113
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !113, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %94(ptr nonnull @.str.37), !dbg !113
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_1.T_layout_trans.shape, align 8, !dbg !113, !tbaa !167
  %96 = and i64 %95, 4294967295, !dbg !113
  %97 = icmp eq i64 %96, 1, !dbg !113
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !113, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %98(ptr nonnull @.str.38), !dbg !113
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_1.T_layout_trans.shape, i64 1, !dbg !113
  %100 = load i64, ptr %99, align 8, !dbg !113, !tbaa !177
  %101 = and i64 %100, 4294967295, !dbg !113
  %102 = icmp eq i64 %101, 4, !dbg !113
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !113, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %103(ptr nonnull @.str.39), !dbg !113
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_1.T_layout_trans.shape, i64 2, !dbg !113
  %105 = load i64, ptr %104, align 8, !dbg !113, !tbaa !179
  %106 = and i64 %105, 4294967295, !dbg !113
  %107 = icmp eq i64 %106, 56, !dbg !113
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !113, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %108(ptr nonnull @.str.40), !dbg !113
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_1.T_layout_trans.shape, i64 3, !dbg !113
  %110 = load i64, ptr %109, align 8, !dbg !113, !tbaa !182
  %111 = and i64 %110, 4294967295, !dbg !113
  %112 = icmp eq i64 %111, 56, !dbg !113
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !113, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %113(ptr nonnull @.str.41), !dbg !113
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_1.T_layout_trans.shape, i64 4, !dbg !113
  %115 = load i64, ptr %114, align 8, !dbg !113, !tbaa !184
  %116 = and i64 %115, 4294967295, !dbg !113
  %117 = icmp eq i64 %116, 16, !dbg !113
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !113, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %118(ptr nonnull @.str.42), !dbg !113
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_1.T_layout_trans.strides, null, !dbg !113
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !113, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_1.T_layout_trans.strides, i64 1, !dbg !113
  %120 = load i64, ptr %119, align 8, !dbg !113, !tbaa !188
  %121 = and i64 %120, 4294967295, !dbg !113
  %122 = icmp eq i64 %121, 50176, !dbg !113
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_1.T_layout_trans.strides, i64 2, !dbg !113
  %124 = load i64, ptr %123, align 8, !dbg !113, !tbaa !198
  %125 = and i64 %124, 4294967295, !dbg !113
  %126 = icmp eq i64 %125, 896, !dbg !113
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_1.T_layout_trans.strides, i64 3, !dbg !113
  %128 = load i64, ptr %127, align 8, !dbg !113, !tbaa !201
  %129 = and i64 %128, 4294967295, !dbg !113
  %130 = icmp eq i64 %129, 16, !dbg !113
  %131 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_1.T_layout_trans.strides, i64 4, !dbg !113
  %132 = load i64, ptr %131, align 8, !dbg !113, !tbaa !203
  %133 = and i64 %132, 4294967295, !dbg !113
  %134 = icmp eq i64 %133, 1, !dbg !113
  %135 = and i1 %130, %134, !dbg !113
  %136 = and i1 %126, %135, !dbg !113
  %137 = and i1 %122, %136, !dbg !113
  br i1 %137, label %if_end46, label %assert_fail47, !dbg !113, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !113
  %139 = load i64, ptr %138, align 8, !dbg !113
  %140 = icmp eq i64 %139, 0, !dbg !113
  br i1 %140, label %assert_end50, label %assert_fail49, !dbg !113, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %141(ptr nonnull @.str.43), !dbg !113
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %142 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %142(ptr nonnull @.str.44), !dbg !113
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %143 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !113
  %144 = load i32, ptr %143, align 4, !dbg !113
  %145 = icmp eq i32 %144, 1, !dbg !113
  br i1 %145, label %assert_end52, label %assert_fail51, !dbg !113, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %146(ptr nonnull @.str.45), !dbg !113
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %147 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !113
  %148 = load i32, ptr %147, align 4, !dbg !113
  %149 = icmp eq i32 %dev_id, %148, !dbg !113
  br i1 %149, label %assert_end54, label %assert_fail53, !dbg !113, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !113, !tbaa !19
  tail call void %150(ptr nonnull @.str.46), !dbg !113
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %151 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_1_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !113
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_10(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !207 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !209, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !210, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !211, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !212, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !213, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !214, metadata !DIExpression()), !dbg !215
  %0 = icmp eq i32 %num_args, 2, !dbg !215
  br i1 %0, label %assert_end, label %assert_fail, !dbg !215, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %151, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !215

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %1(ptr nonnull @.str.48), !dbg !215
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !215, !tbaa !216
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !215
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !215, !tbaa !227
  %p0 = load ptr, ptr %args, align 8, !dbg !215
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !215
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !215
  %p056 = load ptr, ptr %p0, align 8, !dbg !215
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !215
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !215
  %tvmgen_default_fused_layout_transform_10.p0.shape = load ptr, ptr %4, align 8, !dbg !215
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !215
  %tvmgen_default_fused_layout_transform_10.p0.strides = load ptr, ptr %5, align 8, !dbg !215
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !215
  %dev_id = load i32, ptr %6, align 4, !dbg !215
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !215
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !215
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !215
  %tvmgen_default_fused_layout_transform_10.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !215
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !215
  %tvmgen_default_fused_layout_transform_10.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !215
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !215

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %9(ptr nonnull @.str.49), !dbg !215
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !215

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %10(ptr nonnull @.str.50), !dbg !215
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !215
  %12 = load i32, ptr %11, align 4, !dbg !215
  %13 = icmp eq i32 %12, 5, !dbg !215
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !215, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %14(ptr nonnull @.str.51), !dbg !215
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !215
  %16 = load i16, ptr %15, align 2, !dbg !215
  %17 = icmp eq i16 %16, 1, !dbg !215
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !215
  %19 = load i8, ptr %18, align 1, !dbg !215
  %20 = icmp eq i8 %19, 32, !dbg !215
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !215
  %22 = load i8, ptr %21, align 1, !dbg !215
  %23 = icmp eq i8 %22, 2, !dbg !215
  %24 = and i1 %20, %23, !dbg !215
  %25 = and i1 %17, %24, !dbg !215
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !215, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %26(ptr nonnull @.str.52), !dbg !215
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_10.p0.shape, align 8, !dbg !215, !tbaa !229
  %28 = and i64 %27, 4294967295, !dbg !215
  %29 = icmp eq i64 %28, 1, !dbg !215
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !215, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %30(ptr nonnull @.str.53), !dbg !215
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_10.p0.shape, i64 1, !dbg !215
  %32 = load i64, ptr %31, align 8, !dbg !215, !tbaa !239
  %33 = and i64 %32, 4294967295, !dbg !215
  %34 = icmp eq i64 %33, 4, !dbg !215
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !215, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %35(ptr nonnull @.str.54), !dbg !215
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_10.p0.shape, i64 2, !dbg !215
  %37 = load i64, ptr %36, align 8, !dbg !215, !tbaa !241
  %38 = and i64 %37, 4294967295, !dbg !215
  %39 = icmp eq i64 %38, 28, !dbg !215
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !215, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %40(ptr nonnull @.str.55), !dbg !215
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_10.p0.shape, i64 3, !dbg !215
  %42 = load i64, ptr %41, align 8, !dbg !215, !tbaa !244
  %43 = and i64 %42, 4294967295, !dbg !215
  %44 = icmp eq i64 %43, 28, !dbg !215
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !215, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %45(ptr nonnull @.str.56), !dbg !215
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_10.p0.shape, i64 4, !dbg !215
  %47 = load i64, ptr %46, align 8, !dbg !215, !tbaa !246
  %48 = and i64 %47, 4294967295, !dbg !215
  %49 = icmp eq i64 %48, 32, !dbg !215
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !215, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %50(ptr nonnull @.str.57), !dbg !215
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_10.p0.strides, null, !dbg !215
  br i1 %.not, label %if_end, label %if_then, !dbg !215, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_10.p0.strides, i64 1, !dbg !215
  %52 = load i64, ptr %51, align 8, !dbg !215, !tbaa !250
  %53 = and i64 %52, 4294967295, !dbg !215
  %54 = icmp eq i64 %53, 25088, !dbg !215
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_10.p0.strides, i64 2, !dbg !215
  %56 = load i64, ptr %55, align 8, !dbg !215, !tbaa !260
  %57 = and i64 %56, 4294967295, !dbg !215
  %58 = icmp eq i64 %57, 896, !dbg !215
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_10.p0.strides, i64 3, !dbg !215
  %60 = load i64, ptr %59, align 8, !dbg !215, !tbaa !263
  %61 = and i64 %60, 4294967295, !dbg !215
  %62 = icmp eq i64 %61, 32, !dbg !215
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_10.p0.strides, i64 4, !dbg !215
  %64 = load i64, ptr %63, align 8, !dbg !215, !tbaa !265
  %65 = and i64 %64, 4294967295, !dbg !215
  %66 = icmp eq i64 %65, 1, !dbg !215
  %67 = and i1 %62, %66, !dbg !215
  %68 = and i1 %58, %67, !dbg !215
  %69 = and i1 %54, %68, !dbg !215
  br i1 %69, label %if_end, label %assert_fail23, !dbg !215, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !215
  %71 = load i64, ptr %70, align 8, !dbg !215
  %72 = icmp eq i64 %71, 0, !dbg !215
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !215, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %73(ptr nonnull @.str.58), !dbg !215
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %74(ptr nonnull @.str.59), !dbg !215
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !215
  %76 = load i32, ptr %75, align 4, !dbg !215
  %77 = icmp eq i32 %76, 1, !dbg !215
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !215, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %78(ptr nonnull @.str.60), !dbg !215
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !215
  %80 = load i32, ptr %79, align 4, !dbg !215
  %81 = icmp eq i32 %80, 5, !dbg !215
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !215, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %82(ptr nonnull @.str.61), !dbg !215
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !215
  %84 = load i16, ptr %83, align 2, !dbg !215
  %85 = icmp eq i16 %84, 1, !dbg !215
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !215
  %87 = load i8, ptr %86, align 1, !dbg !215
  %88 = icmp eq i8 %87, 32, !dbg !215
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !215
  %90 = load i8, ptr %89, align 1, !dbg !215
  %91 = icmp eq i8 %90, 2, !dbg !215
  %92 = and i1 %88, %91, !dbg !215
  %93 = and i1 %85, %92, !dbg !215
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !215, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %94(ptr nonnull @.str.62), !dbg !215
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_10.T_layout_trans.shape, align 8, !dbg !215, !tbaa !269
  %96 = and i64 %95, 4294967295, !dbg !215
  %97 = icmp eq i64 %96, 1, !dbg !215
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !215, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %98(ptr nonnull @.str.63), !dbg !215
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_10.T_layout_trans.shape, i64 1, !dbg !215
  %100 = load i64, ptr %99, align 8, !dbg !215, !tbaa !279
  %101 = and i64 %100, 4294967295, !dbg !215
  %102 = icmp eq i64 %101, 32, !dbg !215
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !215, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %103(ptr nonnull @.str.64), !dbg !215
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_10.T_layout_trans.shape, i64 2, !dbg !215
  %105 = load i64, ptr %104, align 8, !dbg !215, !tbaa !281
  %106 = and i64 %105, 4294967295, !dbg !215
  %107 = icmp eq i64 %106, 28, !dbg !215
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !215, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %108(ptr nonnull @.str.65), !dbg !215
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_10.T_layout_trans.shape, i64 3, !dbg !215
  %110 = load i64, ptr %109, align 8, !dbg !215, !tbaa !284
  %111 = and i64 %110, 4294967295, !dbg !215
  %112 = icmp eq i64 %111, 28, !dbg !215
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !215, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %113(ptr nonnull @.str.66), !dbg !215
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_10.T_layout_trans.shape, i64 4, !dbg !215
  %115 = load i64, ptr %114, align 8, !dbg !215, !tbaa !286
  %116 = and i64 %115, 4294967295, !dbg !215
  %117 = icmp eq i64 %116, 4, !dbg !215
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !215, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %118(ptr nonnull @.str.67), !dbg !215
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_10.T_layout_trans.strides, null, !dbg !215
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !215, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_10.T_layout_trans.strides, i64 1, !dbg !215
  %120 = load i64, ptr %119, align 8, !dbg !215, !tbaa !290
  %121 = and i64 %120, 4294967295, !dbg !215
  %122 = icmp eq i64 %121, 3136, !dbg !215
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_10.T_layout_trans.strides, i64 2, !dbg !215
  %124 = load i64, ptr %123, align 8, !dbg !215, !tbaa !300
  %125 = and i64 %124, 4294967295, !dbg !215
  %126 = icmp eq i64 %125, 112, !dbg !215
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_10.T_layout_trans.strides, i64 3, !dbg !215
  %128 = load i64, ptr %127, align 8, !dbg !215, !tbaa !303
  %129 = and i64 %128, 4294967295, !dbg !215
  %130 = icmp eq i64 %129, 4, !dbg !215
  %131 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_10.T_layout_trans.strides, i64 4, !dbg !215
  %132 = load i64, ptr %131, align 8, !dbg !215, !tbaa !305
  %133 = and i64 %132, 4294967295, !dbg !215
  %134 = icmp eq i64 %133, 1, !dbg !215
  %135 = and i1 %130, %134, !dbg !215
  %136 = and i1 %126, %135, !dbg !215
  %137 = and i1 %122, %136, !dbg !215
  br i1 %137, label %if_end46, label %assert_fail47, !dbg !215, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !215
  %139 = load i64, ptr %138, align 8, !dbg !215
  %140 = icmp eq i64 %139, 0, !dbg !215
  br i1 %140, label %assert_end50, label %assert_fail49, !dbg !215, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %141(ptr nonnull @.str.68), !dbg !215
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %142 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %142(ptr nonnull @.str.69), !dbg !215
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %143 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !215
  %144 = load i32, ptr %143, align 4, !dbg !215
  %145 = icmp eq i32 %144, 1, !dbg !215
  br i1 %145, label %assert_end52, label %assert_fail51, !dbg !215, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %146(ptr nonnull @.str.70), !dbg !215
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %147 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !215
  %148 = load i32, ptr %147, align 4, !dbg !215
  %149 = icmp eq i32 %dev_id, %148, !dbg !215
  br i1 %149, label %assert_end54, label %assert_fail53, !dbg !215, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !215, !tbaa !19
  tail call void %150(ptr nonnull @.str.71), !dbg !215
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %151 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_10_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !215
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_11(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !309 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !311, metadata !DIExpression()), !dbg !317
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !312, metadata !DIExpression()), !dbg !317
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !313, metadata !DIExpression()), !dbg !317
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !314, metadata !DIExpression()), !dbg !317
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !315, metadata !DIExpression()), !dbg !317
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !316, metadata !DIExpression()), !dbg !317
  %0 = icmp eq i32 %num_args, 2, !dbg !317
  br i1 %0, label %assert_end, label %assert_fail, !dbg !317, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %151, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !317

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %1(ptr nonnull @.str.73), !dbg !317
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !317, !tbaa !318
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !317
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !317, !tbaa !329
  %p0 = load ptr, ptr %args, align 8, !dbg !317
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !317
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !317
  %p056 = load ptr, ptr %p0, align 8, !dbg !317
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !317
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !317
  %tvmgen_default_fused_layout_transform_11.p0.shape = load ptr, ptr %4, align 8, !dbg !317
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !317
  %tvmgen_default_fused_layout_transform_11.p0.strides = load ptr, ptr %5, align 8, !dbg !317
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !317
  %dev_id = load i32, ptr %6, align 4, !dbg !317
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !317
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !317
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !317
  %tvmgen_default_fused_layout_transform_11.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !317
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !317
  %tvmgen_default_fused_layout_transform_11.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !317
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !317

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %9(ptr nonnull @.str.74), !dbg !317
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !317

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %10(ptr nonnull @.str.75), !dbg !317
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !317
  %12 = load i32, ptr %11, align 4, !dbg !317
  %13 = icmp eq i32 %12, 5, !dbg !317
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !317, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %14(ptr nonnull @.str.76), !dbg !317
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !317
  %16 = load i16, ptr %15, align 2, !dbg !317
  %17 = icmp eq i16 %16, 1, !dbg !317
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !317
  %19 = load i8, ptr %18, align 1, !dbg !317
  %20 = icmp eq i8 %19, 32, !dbg !317
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !317
  %22 = load i8, ptr %21, align 1, !dbg !317
  %23 = icmp eq i8 %22, 2, !dbg !317
  %24 = and i1 %20, %23, !dbg !317
  %25 = and i1 %17, %24, !dbg !317
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !317, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %26(ptr nonnull @.str.77), !dbg !317
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_11.p0.shape, align 8, !dbg !317, !tbaa !331
  %28 = and i64 %27, 4294967295, !dbg !317
  %29 = icmp eq i64 %28, 1, !dbg !317
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !317, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %30(ptr nonnull @.str.78), !dbg !317
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_11.p0.shape, i64 1, !dbg !317
  %32 = load i64, ptr %31, align 8, !dbg !317, !tbaa !341
  %33 = and i64 %32, 4294967295, !dbg !317
  %34 = icmp eq i64 %33, 16, !dbg !317
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !317, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %35(ptr nonnull @.str.79), !dbg !317
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_11.p0.shape, i64 2, !dbg !317
  %37 = load i64, ptr %36, align 8, !dbg !317, !tbaa !343
  %38 = and i64 %37, 4294967295, !dbg !317
  %39 = icmp eq i64 %38, 28, !dbg !317
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !317, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %40(ptr nonnull @.str.80), !dbg !317
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_11.p0.shape, i64 3, !dbg !317
  %42 = load i64, ptr %41, align 8, !dbg !317, !tbaa !346
  %43 = and i64 %42, 4294967295, !dbg !317
  %44 = icmp eq i64 %43, 28, !dbg !317
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !317, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %45(ptr nonnull @.str.81), !dbg !317
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_11.p0.shape, i64 4, !dbg !317
  %47 = load i64, ptr %46, align 8, !dbg !317, !tbaa !348
  %48 = and i64 %47, 4294967295, !dbg !317
  %49 = icmp eq i64 %48, 32, !dbg !317
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !317, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %50(ptr nonnull @.str.82), !dbg !317
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_11.p0.strides, null, !dbg !317
  br i1 %.not, label %if_end, label %if_then, !dbg !317, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_11.p0.strides, i64 1, !dbg !317
  %52 = load i64, ptr %51, align 8, !dbg !317, !tbaa !352
  %53 = and i64 %52, 4294967295, !dbg !317
  %54 = icmp eq i64 %53, 25088, !dbg !317
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_11.p0.strides, i64 2, !dbg !317
  %56 = load i64, ptr %55, align 8, !dbg !317, !tbaa !362
  %57 = and i64 %56, 4294967295, !dbg !317
  %58 = icmp eq i64 %57, 896, !dbg !317
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_11.p0.strides, i64 3, !dbg !317
  %60 = load i64, ptr %59, align 8, !dbg !317, !tbaa !365
  %61 = and i64 %60, 4294967295, !dbg !317
  %62 = icmp eq i64 %61, 32, !dbg !317
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_11.p0.strides, i64 4, !dbg !317
  %64 = load i64, ptr %63, align 8, !dbg !317, !tbaa !367
  %65 = and i64 %64, 4294967295, !dbg !317
  %66 = icmp eq i64 %65, 1, !dbg !317
  %67 = and i1 %62, %66, !dbg !317
  %68 = and i1 %58, %67, !dbg !317
  %69 = and i1 %54, %68, !dbg !317
  br i1 %69, label %if_end, label %assert_fail23, !dbg !317, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !317
  %71 = load i64, ptr %70, align 8, !dbg !317
  %72 = icmp eq i64 %71, 0, !dbg !317
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !317, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %73(ptr nonnull @.str.83), !dbg !317
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %74(ptr nonnull @.str.84), !dbg !317
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !317
  %76 = load i32, ptr %75, align 4, !dbg !317
  %77 = icmp eq i32 %76, 1, !dbg !317
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !317, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %78(ptr nonnull @.str.85), !dbg !317
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !317
  %80 = load i32, ptr %79, align 4, !dbg !317
  %81 = icmp eq i32 %80, 5, !dbg !317
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !317, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %82(ptr nonnull @.str.86), !dbg !317
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !317
  %84 = load i16, ptr %83, align 2, !dbg !317
  %85 = icmp eq i16 %84, 1, !dbg !317
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !317
  %87 = load i8, ptr %86, align 1, !dbg !317
  %88 = icmp eq i8 %87, 32, !dbg !317
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !317
  %90 = load i8, ptr %89, align 1, !dbg !317
  %91 = icmp eq i8 %90, 2, !dbg !317
  %92 = and i1 %88, %91, !dbg !317
  %93 = and i1 %85, %92, !dbg !317
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !317, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %94(ptr nonnull @.str.87), !dbg !317
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_11.T_layout_trans.shape, align 8, !dbg !317, !tbaa !371
  %96 = and i64 %95, 4294967295, !dbg !317
  %97 = icmp eq i64 %96, 1, !dbg !317
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !317, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %98(ptr nonnull @.str.88), !dbg !317
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_11.T_layout_trans.shape, i64 1, !dbg !317
  %100 = load i64, ptr %99, align 8, !dbg !317, !tbaa !381
  %101 = and i64 %100, 4294967295, !dbg !317
  %102 = icmp eq i64 %101, 128, !dbg !317
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !317, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %103(ptr nonnull @.str.89), !dbg !317
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_11.T_layout_trans.shape, i64 2, !dbg !317
  %105 = load i64, ptr %104, align 8, !dbg !317, !tbaa !383
  %106 = and i64 %105, 4294967295, !dbg !317
  %107 = icmp eq i64 %106, 28, !dbg !317
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !317, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %108(ptr nonnull @.str.90), !dbg !317
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_11.T_layout_trans.shape, i64 3, !dbg !317
  %110 = load i64, ptr %109, align 8, !dbg !317, !tbaa !386
  %111 = and i64 %110, 4294967295, !dbg !317
  %112 = icmp eq i64 %111, 28, !dbg !317
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !317, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %113(ptr nonnull @.str.91), !dbg !317
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_11.T_layout_trans.shape, i64 4, !dbg !317
  %115 = load i64, ptr %114, align 8, !dbg !317, !tbaa !388
  %116 = and i64 %115, 4294967295, !dbg !317
  %117 = icmp eq i64 %116, 4, !dbg !317
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !317, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %118(ptr nonnull @.str.92), !dbg !317
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_11.T_layout_trans.strides, null, !dbg !317
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !317, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_11.T_layout_trans.strides, i64 1, !dbg !317
  %120 = load i64, ptr %119, align 8, !dbg !317, !tbaa !392
  %121 = and i64 %120, 4294967295, !dbg !317
  %122 = icmp eq i64 %121, 3136, !dbg !317
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_11.T_layout_trans.strides, i64 2, !dbg !317
  %124 = load i64, ptr %123, align 8, !dbg !317, !tbaa !402
  %125 = and i64 %124, 4294967295, !dbg !317
  %126 = icmp eq i64 %125, 112, !dbg !317
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_11.T_layout_trans.strides, i64 3, !dbg !317
  %128 = load i64, ptr %127, align 8, !dbg !317, !tbaa !405
  %129 = and i64 %128, 4294967295, !dbg !317
  %130 = icmp eq i64 %129, 4, !dbg !317
  %131 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_11.T_layout_trans.strides, i64 4, !dbg !317
  %132 = load i64, ptr %131, align 8, !dbg !317, !tbaa !407
  %133 = and i64 %132, 4294967295, !dbg !317
  %134 = icmp eq i64 %133, 1, !dbg !317
  %135 = and i1 %130, %134, !dbg !317
  %136 = and i1 %126, %135, !dbg !317
  %137 = and i1 %122, %136, !dbg !317
  br i1 %137, label %if_end46, label %assert_fail47, !dbg !317, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !317
  %139 = load i64, ptr %138, align 8, !dbg !317
  %140 = icmp eq i64 %139, 0, !dbg !317
  br i1 %140, label %assert_end50, label %assert_fail49, !dbg !317, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %141(ptr nonnull @.str.93), !dbg !317
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %142 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %142(ptr nonnull @.str.94), !dbg !317
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %143 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !317
  %144 = load i32, ptr %143, align 4, !dbg !317
  %145 = icmp eq i32 %144, 1, !dbg !317
  br i1 %145, label %assert_end52, label %assert_fail51, !dbg !317, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %146(ptr nonnull @.str.95), !dbg !317
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %147 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !317
  %148 = load i32, ptr %147, align 4, !dbg !317
  %149 = icmp eq i32 %dev_id, %148, !dbg !317
  br i1 %149, label %assert_end54, label %assert_fail53, !dbg !317, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !317, !tbaa !19
  tail call void %150(ptr nonnull @.str.96), !dbg !317
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %151 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_11_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !317
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_12(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !411 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !413, metadata !DIExpression()), !dbg !419
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !414, metadata !DIExpression()), !dbg !419
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !415, metadata !DIExpression()), !dbg !419
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !416, metadata !DIExpression()), !dbg !419
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !417, metadata !DIExpression()), !dbg !419
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !418, metadata !DIExpression()), !dbg !419
  %0 = icmp eq i32 %num_args, 2, !dbg !419
  br i1 %0, label %assert_end, label %assert_fail, !dbg !419, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %146, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !419

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %1(ptr nonnull @.str.98), !dbg !419
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !419, !tbaa !420
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !419
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !419, !tbaa !431
  %p0 = load ptr, ptr %args, align 8, !dbg !419
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !419
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !419
  %p056 = load ptr, ptr %p0, align 8, !dbg !419
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !419
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !419
  %tvmgen_default_fused_layout_transform_12.p0.shape = load ptr, ptr %4, align 8, !dbg !419
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !419
  %tvmgen_default_fused_layout_transform_12.p0.strides = load ptr, ptr %5, align 8, !dbg !419
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !419
  %dev_id = load i32, ptr %6, align 4, !dbg !419
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !419
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !419
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !419
  %tvmgen_default_fused_layout_transform_12.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !419
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !419
  %tvmgen_default_fused_layout_transform_12.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !419
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !419

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %9(ptr nonnull @.str.99), !dbg !419
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !419

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %10(ptr nonnull @.str.100), !dbg !419
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !419
  %12 = load i32, ptr %11, align 4, !dbg !419
  %13 = icmp eq i32 %12, 5, !dbg !419
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !419, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %14(ptr nonnull @.str.101), !dbg !419
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !419
  %16 = load i16, ptr %15, align 2, !dbg !419
  %17 = icmp eq i16 %16, 1, !dbg !419
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !419
  %19 = load i8, ptr %18, align 1, !dbg !419
  %20 = icmp eq i8 %19, 32, !dbg !419
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !419
  %22 = load i8, ptr %21, align 1, !dbg !419
  %23 = icmp eq i8 %22, 2, !dbg !419
  %24 = and i1 %20, %23, !dbg !419
  %25 = and i1 %17, %24, !dbg !419
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !419, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %26(ptr nonnull @.str.102), !dbg !419
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_12.p0.shape, align 8, !dbg !419, !tbaa !433
  %28 = and i64 %27, 4294967295, !dbg !419
  %29 = icmp eq i64 %28, 1, !dbg !419
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !419, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %30(ptr nonnull @.str.103), !dbg !419
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_12.p0.shape, i64 1, !dbg !419
  %32 = load i64, ptr %31, align 8, !dbg !419, !tbaa !443
  %33 = and i64 %32, 4294967295, !dbg !419
  %34 = icmp eq i64 %33, 64, !dbg !419
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !419, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %35(ptr nonnull @.str.104), !dbg !419
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_12.p0.shape, i64 2, !dbg !419
  %37 = load i64, ptr %36, align 8, !dbg !419, !tbaa !445
  %38 = and i64 %37, 4294967295, !dbg !419
  %39 = icmp eq i64 %38, 14, !dbg !419
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !419, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %40(ptr nonnull @.str.105), !dbg !419
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_12.p0.shape, i64 3, !dbg !419
  %42 = load i64, ptr %41, align 8, !dbg !419, !tbaa !448
  %43 = and i64 %42, 4294967295, !dbg !419
  %44 = icmp eq i64 %43, 14, !dbg !419
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !419, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %45(ptr nonnull @.str.106), !dbg !419
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_12.p0.shape, i64 4, !dbg !419
  %47 = load i64, ptr %46, align 8, !dbg !419, !tbaa !450
  %48 = and i64 %47, 4294967295, !dbg !419
  %49 = icmp eq i64 %48, 4, !dbg !419
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !419, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %50(ptr nonnull @.str.107), !dbg !419
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_12.p0.strides, null, !dbg !419
  br i1 %.not, label %if_end, label %if_then, !dbg !419, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_12.p0.strides, i64 1, !dbg !419
  %52 = load i64, ptr %51, align 8, !dbg !419, !tbaa !454
  %53 = and i64 %52, 4294967295, !dbg !419
  %54 = icmp eq i64 %53, 784, !dbg !419
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_12.p0.strides, i64 2, !dbg !419
  %56 = load i64, ptr %55, align 8, !dbg !419, !tbaa !464
  %57 = and i64 %56, 4294967295, !dbg !419
  %58 = icmp eq i64 %57, 56, !dbg !419
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_12.p0.strides, i64 3, !dbg !419
  %60 = load i64, ptr %59, align 8, !dbg !419, !tbaa !467
  %61 = and i64 %60, 4294967295, !dbg !419
  %62 = icmp eq i64 %61, 4, !dbg !419
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_12.p0.strides, i64 4, !dbg !419
  %64 = load i64, ptr %63, align 8, !dbg !419, !tbaa !469
  %65 = and i64 %64, 4294967295, !dbg !419
  %66 = icmp eq i64 %65, 1, !dbg !419
  %67 = and i1 %62, %66, !dbg !419
  %68 = and i1 %58, %67, !dbg !419
  %69 = and i1 %54, %68, !dbg !419
  br i1 %69, label %if_end, label %assert_fail23, !dbg !419, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !419
  %71 = load i64, ptr %70, align 8, !dbg !419
  %72 = icmp eq i64 %71, 0, !dbg !419
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !419, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %73(ptr nonnull @.str.108), !dbg !419
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %74(ptr nonnull @.str.109), !dbg !419
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !419
  %76 = load i32, ptr %75, align 4, !dbg !419
  %77 = icmp eq i32 %76, 1, !dbg !419
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !419, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %78(ptr nonnull @.str.110), !dbg !419
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !419
  %80 = load i32, ptr %79, align 4, !dbg !419
  %81 = icmp eq i32 %80, 5, !dbg !419
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !419, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %82(ptr nonnull @.str.111), !dbg !419
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !419
  %84 = load i16, ptr %83, align 2, !dbg !419
  %85 = icmp eq i16 %84, 1, !dbg !419
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !419
  %87 = load i8, ptr %86, align 1, !dbg !419
  %88 = icmp eq i8 %87, 32, !dbg !419
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !419
  %90 = load i8, ptr %89, align 1, !dbg !419
  %91 = icmp eq i8 %90, 2, !dbg !419
  %92 = and i1 %88, %91, !dbg !419
  %93 = and i1 %85, %92, !dbg !419
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !419, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %94(ptr nonnull @.str.112), !dbg !419
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_12.T_layout_trans.shape, align 8, !dbg !419, !tbaa !473
  %96 = and i64 %95, 4294967295, !dbg !419
  %97 = icmp eq i64 %96, 1, !dbg !419
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !419, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %98(ptr nonnull @.str.113), !dbg !419
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_12.T_layout_trans.shape, i64 1, !dbg !419
  %100 = load i64, ptr %99, align 8, !dbg !419, !tbaa !483
  %101 = and i64 %100, 4294967295, !dbg !419
  %102 = icmp eq i64 %101, 1, !dbg !419
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !419, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %103(ptr nonnull @.str.114), !dbg !419
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_12.T_layout_trans.shape, i64 2, !dbg !419
  %105 = load i64, ptr %104, align 8, !dbg !419, !tbaa !485
  %106 = and i64 %105, 4294967295, !dbg !419
  %107 = icmp eq i64 %106, 14, !dbg !419
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !419, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %108(ptr nonnull @.str.115), !dbg !419
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_12.T_layout_trans.shape, i64 3, !dbg !419
  %110 = load i64, ptr %109, align 8, !dbg !419, !tbaa !488
  %111 = and i64 %110, 4294967295, !dbg !419
  %112 = icmp eq i64 %111, 14, !dbg !419
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !419, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %113(ptr nonnull @.str.116), !dbg !419
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_12.T_layout_trans.shape, i64 4, !dbg !419
  %115 = load i64, ptr %114, align 8, !dbg !419, !tbaa !490
  %116 = and i64 %115, 4294967295, !dbg !419
  %117 = icmp eq i64 %116, 256, !dbg !419
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !419, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %118(ptr nonnull @.str.117), !dbg !419
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_12.T_layout_trans.strides, null, !dbg !419
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !419, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_12.T_layout_trans.strides, i64 2, !dbg !419
  %120 = load i64, ptr %119, align 8, !dbg !419, !tbaa !494
  %121 = and i64 %120, 4294967295, !dbg !419
  %122 = icmp eq i64 %121, 3584, !dbg !419
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_12.T_layout_trans.strides, i64 3, !dbg !419
  %124 = load i64, ptr %123, align 8, !dbg !419, !tbaa !504
  %125 = and i64 %124, 4294967295, !dbg !419
  %126 = icmp eq i64 %125, 256, !dbg !419
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_12.T_layout_trans.strides, i64 4, !dbg !419
  %128 = load i64, ptr %127, align 8, !dbg !419, !tbaa !506
  %129 = and i64 %128, 4294967295, !dbg !419
  %130 = icmp eq i64 %129, 1, !dbg !419
  %131 = and i1 %126, %130, !dbg !419
  %132 = and i1 %122, %131, !dbg !419
  br i1 %132, label %if_end46, label %assert_fail47, !dbg !419, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %133 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !419
  %134 = load i64, ptr %133, align 8, !dbg !419
  %135 = icmp eq i64 %134, 0, !dbg !419
  br i1 %135, label %assert_end50, label %assert_fail49, !dbg !419, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %136(ptr nonnull @.str.118), !dbg !419
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %137 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %137(ptr nonnull @.str.119), !dbg !419
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !419
  %139 = load i32, ptr %138, align 4, !dbg !419
  %140 = icmp eq i32 %139, 1, !dbg !419
  br i1 %140, label %assert_end52, label %assert_fail51, !dbg !419, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %141(ptr nonnull @.str.120), !dbg !419
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %142 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !419
  %143 = load i32, ptr %142, align 4, !dbg !419
  %144 = icmp eq i32 %dev_id, %143, !dbg !419
  br i1 %144, label %assert_end54, label %assert_fail53, !dbg !419, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !419, !tbaa !19
  tail call void %145(ptr nonnull @.str.121), !dbg !419
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %146 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_12_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !419
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_13(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !510 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !512, metadata !DIExpression()), !dbg !518
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !513, metadata !DIExpression()), !dbg !518
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !514, metadata !DIExpression()), !dbg !518
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !515, metadata !DIExpression()), !dbg !518
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !516, metadata !DIExpression()), !dbg !518
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !517, metadata !DIExpression()), !dbg !518
  %0 = icmp eq i32 %num_args, 2, !dbg !518
  br i1 %0, label %assert_end, label %assert_fail, !dbg !518, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %151, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !518

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %1(ptr nonnull @.str.123), !dbg !518
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !518, !tbaa !519
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !518
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !518, !tbaa !530
  %p0 = load ptr, ptr %args, align 8, !dbg !518
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !518
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !518
  %p056 = load ptr, ptr %p0, align 8, !dbg !518
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !518
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !518
  %tvmgen_default_fused_layout_transform_13.p0.shape = load ptr, ptr %4, align 8, !dbg !518
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !518
  %tvmgen_default_fused_layout_transform_13.p0.strides = load ptr, ptr %5, align 8, !dbg !518
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !518
  %dev_id = load i32, ptr %6, align 4, !dbg !518
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !518
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !518
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !518
  %tvmgen_default_fused_layout_transform_13.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !518
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !518
  %tvmgen_default_fused_layout_transform_13.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !518
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !518

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %9(ptr nonnull @.str.124), !dbg !518
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !518

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %10(ptr nonnull @.str.125), !dbg !518
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !518
  %12 = load i32, ptr %11, align 4, !dbg !518
  %13 = icmp eq i32 %12, 5, !dbg !518
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !518, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %14(ptr nonnull @.str.126), !dbg !518
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !518
  %16 = load i16, ptr %15, align 2, !dbg !518
  %17 = icmp eq i16 %16, 1, !dbg !518
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !518
  %19 = load i8, ptr %18, align 1, !dbg !518
  %20 = icmp eq i8 %19, 32, !dbg !518
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !518
  %22 = load i8, ptr %21, align 1, !dbg !518
  %23 = icmp eq i8 %22, 2, !dbg !518
  %24 = and i1 %20, %23, !dbg !518
  %25 = and i1 %17, %24, !dbg !518
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !518, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %26(ptr nonnull @.str.127), !dbg !518
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_13.p0.shape, align 8, !dbg !518, !tbaa !532
  %28 = and i64 %27, 4294967295, !dbg !518
  %29 = icmp eq i64 %28, 1, !dbg !518
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !518, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %30(ptr nonnull @.str.128), !dbg !518
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_13.p0.shape, i64 1, !dbg !518
  %32 = load i64, ptr %31, align 8, !dbg !518, !tbaa !542
  %33 = and i64 %32, 4294967295, !dbg !518
  %34 = icmp eq i64 %33, 16, !dbg !518
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !518, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %35(ptr nonnull @.str.129), !dbg !518
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_13.p0.shape, i64 2, !dbg !518
  %37 = load i64, ptr %36, align 8, !dbg !518, !tbaa !544
  %38 = and i64 %37, 4294967295, !dbg !518
  %39 = icmp eq i64 %38, 14, !dbg !518
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !518, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %40(ptr nonnull @.str.130), !dbg !518
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_13.p0.shape, i64 3, !dbg !518
  %42 = load i64, ptr %41, align 8, !dbg !518, !tbaa !547
  %43 = and i64 %42, 4294967295, !dbg !518
  %44 = icmp eq i64 %43, 14, !dbg !518
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !518, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %45(ptr nonnull @.str.131), !dbg !518
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_13.p0.shape, i64 4, !dbg !518
  %47 = load i64, ptr %46, align 8, !dbg !518, !tbaa !549
  %48 = and i64 %47, 4294967295, !dbg !518
  %49 = icmp eq i64 %48, 64, !dbg !518
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !518, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %50(ptr nonnull @.str.132), !dbg !518
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_13.p0.strides, null, !dbg !518
  br i1 %.not, label %if_end, label %if_then, !dbg !518, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_13.p0.strides, i64 1, !dbg !518
  %52 = load i64, ptr %51, align 8, !dbg !518, !tbaa !553
  %53 = and i64 %52, 4294967295, !dbg !518
  %54 = icmp eq i64 %53, 12544, !dbg !518
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_13.p0.strides, i64 2, !dbg !518
  %56 = load i64, ptr %55, align 8, !dbg !518, !tbaa !563
  %57 = and i64 %56, 4294967295, !dbg !518
  %58 = icmp eq i64 %57, 896, !dbg !518
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_13.p0.strides, i64 3, !dbg !518
  %60 = load i64, ptr %59, align 8, !dbg !518, !tbaa !566
  %61 = and i64 %60, 4294967295, !dbg !518
  %62 = icmp eq i64 %61, 64, !dbg !518
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_13.p0.strides, i64 4, !dbg !518
  %64 = load i64, ptr %63, align 8, !dbg !518, !tbaa !568
  %65 = and i64 %64, 4294967295, !dbg !518
  %66 = icmp eq i64 %65, 1, !dbg !518
  %67 = and i1 %62, %66, !dbg !518
  %68 = and i1 %58, %67, !dbg !518
  %69 = and i1 %54, %68, !dbg !518
  br i1 %69, label %if_end, label %assert_fail23, !dbg !518, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !518
  %71 = load i64, ptr %70, align 8, !dbg !518
  %72 = icmp eq i64 %71, 0, !dbg !518
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !518, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %73(ptr nonnull @.str.133), !dbg !518
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %74(ptr nonnull @.str.134), !dbg !518
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !518
  %76 = load i32, ptr %75, align 4, !dbg !518
  %77 = icmp eq i32 %76, 1, !dbg !518
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !518, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %78(ptr nonnull @.str.135), !dbg !518
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !518
  %80 = load i32, ptr %79, align 4, !dbg !518
  %81 = icmp eq i32 %80, 5, !dbg !518
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !518, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %82(ptr nonnull @.str.136), !dbg !518
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !518
  %84 = load i16, ptr %83, align 2, !dbg !518
  %85 = icmp eq i16 %84, 1, !dbg !518
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !518
  %87 = load i8, ptr %86, align 1, !dbg !518
  %88 = icmp eq i8 %87, 32, !dbg !518
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !518
  %90 = load i8, ptr %89, align 1, !dbg !518
  %91 = icmp eq i8 %90, 2, !dbg !518
  %92 = and i1 %88, %91, !dbg !518
  %93 = and i1 %85, %92, !dbg !518
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !518, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %94(ptr nonnull @.str.137), !dbg !518
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_13.T_layout_trans.shape, align 8, !dbg !518, !tbaa !572
  %96 = and i64 %95, 4294967295, !dbg !518
  %97 = icmp eq i64 %96, 1, !dbg !518
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !518, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %98(ptr nonnull @.str.138), !dbg !518
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_13.T_layout_trans.shape, i64 1, !dbg !518
  %100 = load i64, ptr %99, align 8, !dbg !518, !tbaa !582
  %101 = and i64 %100, 4294967295, !dbg !518
  %102 = icmp eq i64 %101, 2, !dbg !518
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !518, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %103(ptr nonnull @.str.139), !dbg !518
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_13.T_layout_trans.shape, i64 2, !dbg !518
  %105 = load i64, ptr %104, align 8, !dbg !518, !tbaa !584
  %106 = and i64 %105, 4294967295, !dbg !518
  %107 = icmp eq i64 %106, 14, !dbg !518
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !518, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %108(ptr nonnull @.str.140), !dbg !518
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_13.T_layout_trans.shape, i64 3, !dbg !518
  %110 = load i64, ptr %109, align 8, !dbg !518, !tbaa !587
  %111 = and i64 %110, 4294967295, !dbg !518
  %112 = icmp eq i64 %111, 14, !dbg !518
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !518, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %113(ptr nonnull @.str.141), !dbg !518
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_13.T_layout_trans.shape, i64 4, !dbg !518
  %115 = load i64, ptr %114, align 8, !dbg !518, !tbaa !589
  %116 = and i64 %115, 4294967295, !dbg !518
  %117 = icmp eq i64 %116, 512, !dbg !518
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !518, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %118(ptr nonnull @.str.142), !dbg !518
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_13.T_layout_trans.strides, null, !dbg !518
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !518, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_13.T_layout_trans.strides, i64 1, !dbg !518
  %120 = load i64, ptr %119, align 8, !dbg !518, !tbaa !593
  %121 = and i64 %120, 4294967295, !dbg !518
  %122 = icmp eq i64 %121, 100352, !dbg !518
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_13.T_layout_trans.strides, i64 2, !dbg !518
  %124 = load i64, ptr %123, align 8, !dbg !518, !tbaa !603
  %125 = and i64 %124, 4294967295, !dbg !518
  %126 = icmp eq i64 %125, 7168, !dbg !518
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_13.T_layout_trans.strides, i64 3, !dbg !518
  %128 = load i64, ptr %127, align 8, !dbg !518, !tbaa !606
  %129 = and i64 %128, 4294967295, !dbg !518
  %130 = icmp eq i64 %129, 512, !dbg !518
  %131 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_13.T_layout_trans.strides, i64 4, !dbg !518
  %132 = load i64, ptr %131, align 8, !dbg !518, !tbaa !608
  %133 = and i64 %132, 4294967295, !dbg !518
  %134 = icmp eq i64 %133, 1, !dbg !518
  %135 = and i1 %130, %134, !dbg !518
  %136 = and i1 %126, %135, !dbg !518
  %137 = and i1 %122, %136, !dbg !518
  br i1 %137, label %if_end46, label %assert_fail47, !dbg !518, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !518
  %139 = load i64, ptr %138, align 8, !dbg !518
  %140 = icmp eq i64 %139, 0, !dbg !518
  br i1 %140, label %assert_end50, label %assert_fail49, !dbg !518, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %141(ptr nonnull @.str.143), !dbg !518
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %142 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %142(ptr nonnull @.str.144), !dbg !518
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %143 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !518
  %144 = load i32, ptr %143, align 4, !dbg !518
  %145 = icmp eq i32 %144, 1, !dbg !518
  br i1 %145, label %assert_end52, label %assert_fail51, !dbg !518, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %146(ptr nonnull @.str.145), !dbg !518
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %147 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !518
  %148 = load i32, ptr %147, align 4, !dbg !518
  %149 = icmp eq i32 %dev_id, %148, !dbg !518
  br i1 %149, label %assert_end54, label %assert_fail53, !dbg !518, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !518, !tbaa !19
  tail call void %150(ptr nonnull @.str.146), !dbg !518
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %151 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_13_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !518
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_14(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !612 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !614, metadata !DIExpression()), !dbg !620
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !615, metadata !DIExpression()), !dbg !620
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !616, metadata !DIExpression()), !dbg !620
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !617, metadata !DIExpression()), !dbg !620
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !618, metadata !DIExpression()), !dbg !620
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !619, metadata !DIExpression()), !dbg !620
  %0 = icmp eq i32 %num_args, 2, !dbg !620
  br i1 %0, label %assert_end, label %assert_fail, !dbg !620, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %151, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !620

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %1(ptr nonnull @.str.148), !dbg !620
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !620, !tbaa !621
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !620
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !620, !tbaa !632
  %p0 = load ptr, ptr %args, align 8, !dbg !620
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !620
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !620
  %p056 = load ptr, ptr %p0, align 8, !dbg !620
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !620
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !620
  %tvmgen_default_fused_layout_transform_14.p0.shape = load ptr, ptr %4, align 8, !dbg !620
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !620
  %tvmgen_default_fused_layout_transform_14.p0.strides = load ptr, ptr %5, align 8, !dbg !620
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !620
  %dev_id = load i32, ptr %6, align 4, !dbg !620
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !620
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !620
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !620
  %tvmgen_default_fused_layout_transform_14.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !620
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !620
  %tvmgen_default_fused_layout_transform_14.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !620
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !620

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %9(ptr nonnull @.str.149), !dbg !620
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !620

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %10(ptr nonnull @.str.150), !dbg !620
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !620
  %12 = load i32, ptr %11, align 4, !dbg !620
  %13 = icmp eq i32 %12, 5, !dbg !620
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !620, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %14(ptr nonnull @.str.151), !dbg !620
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !620
  %16 = load i16, ptr %15, align 2, !dbg !620
  %17 = icmp eq i16 %16, 1, !dbg !620
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !620
  %19 = load i8, ptr %18, align 1, !dbg !620
  %20 = icmp eq i8 %19, 32, !dbg !620
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !620
  %22 = load i8, ptr %21, align 1, !dbg !620
  %23 = icmp eq i8 %22, 2, !dbg !620
  %24 = and i1 %20, %23, !dbg !620
  %25 = and i1 %17, %24, !dbg !620
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !620, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %26(ptr nonnull @.str.152), !dbg !620
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_14.p0.shape, align 8, !dbg !620, !tbaa !634
  %28 = and i64 %27, 4294967295, !dbg !620
  %29 = icmp eq i64 %28, 1, !dbg !620
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !620, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %30(ptr nonnull @.str.153), !dbg !620
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_14.p0.shape, i64 1, !dbg !620
  %32 = load i64, ptr %31, align 8, !dbg !620, !tbaa !644
  %33 = and i64 %32, 4294967295, !dbg !620
  %34 = icmp eq i64 %33, 4, !dbg !620
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !620, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %35(ptr nonnull @.str.154), !dbg !620
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_14.p0.shape, i64 2, !dbg !620
  %37 = load i64, ptr %36, align 8, !dbg !620, !tbaa !646
  %38 = and i64 %37, 4294967295, !dbg !620
  %39 = icmp eq i64 %38, 14, !dbg !620
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !620, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %40(ptr nonnull @.str.155), !dbg !620
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_14.p0.shape, i64 3, !dbg !620
  %42 = load i64, ptr %41, align 8, !dbg !620, !tbaa !649
  %43 = and i64 %42, 4294967295, !dbg !620
  %44 = icmp eq i64 %43, 14, !dbg !620
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !620, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %45(ptr nonnull @.str.156), !dbg !620
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_14.p0.shape, i64 4, !dbg !620
  %47 = load i64, ptr %46, align 8, !dbg !620, !tbaa !651
  %48 = and i64 %47, 4294967295, !dbg !620
  %49 = icmp eq i64 %48, 64, !dbg !620
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !620, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %50(ptr nonnull @.str.157), !dbg !620
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_14.p0.strides, null, !dbg !620
  br i1 %.not, label %if_end, label %if_then, !dbg !620, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_14.p0.strides, i64 1, !dbg !620
  %52 = load i64, ptr %51, align 8, !dbg !620, !tbaa !655
  %53 = and i64 %52, 4294967295, !dbg !620
  %54 = icmp eq i64 %53, 12544, !dbg !620
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_14.p0.strides, i64 2, !dbg !620
  %56 = load i64, ptr %55, align 8, !dbg !620, !tbaa !665
  %57 = and i64 %56, 4294967295, !dbg !620
  %58 = icmp eq i64 %57, 896, !dbg !620
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_14.p0.strides, i64 3, !dbg !620
  %60 = load i64, ptr %59, align 8, !dbg !620, !tbaa !668
  %61 = and i64 %60, 4294967295, !dbg !620
  %62 = icmp eq i64 %61, 64, !dbg !620
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_14.p0.strides, i64 4, !dbg !620
  %64 = load i64, ptr %63, align 8, !dbg !620, !tbaa !670
  %65 = and i64 %64, 4294967295, !dbg !620
  %66 = icmp eq i64 %65, 1, !dbg !620
  %67 = and i1 %62, %66, !dbg !620
  %68 = and i1 %58, %67, !dbg !620
  %69 = and i1 %54, %68, !dbg !620
  br i1 %69, label %if_end, label %assert_fail23, !dbg !620, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !620
  %71 = load i64, ptr %70, align 8, !dbg !620
  %72 = icmp eq i64 %71, 0, !dbg !620
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !620, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %73(ptr nonnull @.str.158), !dbg !620
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %74(ptr nonnull @.str.159), !dbg !620
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !620
  %76 = load i32, ptr %75, align 4, !dbg !620
  %77 = icmp eq i32 %76, 1, !dbg !620
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !620, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %78(ptr nonnull @.str.160), !dbg !620
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !620
  %80 = load i32, ptr %79, align 4, !dbg !620
  %81 = icmp eq i32 %80, 5, !dbg !620
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !620, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %82(ptr nonnull @.str.161), !dbg !620
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !620
  %84 = load i16, ptr %83, align 2, !dbg !620
  %85 = icmp eq i16 %84, 1, !dbg !620
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !620
  %87 = load i8, ptr %86, align 1, !dbg !620
  %88 = icmp eq i8 %87, 32, !dbg !620
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !620
  %90 = load i8, ptr %89, align 1, !dbg !620
  %91 = icmp eq i8 %90, 2, !dbg !620
  %92 = and i1 %88, %91, !dbg !620
  %93 = and i1 %85, %92, !dbg !620
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !620, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %94(ptr nonnull @.str.162), !dbg !620
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_14.T_layout_trans.shape, align 8, !dbg !620, !tbaa !674
  %96 = and i64 %95, 4294967295, !dbg !620
  %97 = icmp eq i64 %96, 1, !dbg !620
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !620, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %98(ptr nonnull @.str.163), !dbg !620
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_14.T_layout_trans.shape, i64 1, !dbg !620
  %100 = load i64, ptr %99, align 8, !dbg !620, !tbaa !684
  %101 = and i64 %100, 4294967295, !dbg !620
  %102 = icmp eq i64 %101, 2, !dbg !620
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !620, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %103(ptr nonnull @.str.164), !dbg !620
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_14.T_layout_trans.shape, i64 2, !dbg !620
  %105 = load i64, ptr %104, align 8, !dbg !620, !tbaa !686
  %106 = and i64 %105, 4294967295, !dbg !620
  %107 = icmp eq i64 %106, 14, !dbg !620
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !620, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %108(ptr nonnull @.str.165), !dbg !620
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_14.T_layout_trans.shape, i64 3, !dbg !620
  %110 = load i64, ptr %109, align 8, !dbg !620, !tbaa !689
  %111 = and i64 %110, 4294967295, !dbg !620
  %112 = icmp eq i64 %111, 14, !dbg !620
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !620, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %113(ptr nonnull @.str.166), !dbg !620
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_14.T_layout_trans.shape, i64 4, !dbg !620
  %115 = load i64, ptr %114, align 8, !dbg !620, !tbaa !691
  %116 = and i64 %115, 4294967295, !dbg !620
  %117 = icmp eq i64 %116, 128, !dbg !620
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !620, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %118(ptr nonnull @.str.167), !dbg !620
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_14.T_layout_trans.strides, null, !dbg !620
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !620, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_14.T_layout_trans.strides, i64 1, !dbg !620
  %120 = load i64, ptr %119, align 8, !dbg !620, !tbaa !695
  %121 = and i64 %120, 4294967295, !dbg !620
  %122 = icmp eq i64 %121, 25088, !dbg !620
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_14.T_layout_trans.strides, i64 2, !dbg !620
  %124 = load i64, ptr %123, align 8, !dbg !620, !tbaa !705
  %125 = and i64 %124, 4294967295, !dbg !620
  %126 = icmp eq i64 %125, 1792, !dbg !620
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_14.T_layout_trans.strides, i64 3, !dbg !620
  %128 = load i64, ptr %127, align 8, !dbg !620, !tbaa !708
  %129 = and i64 %128, 4294967295, !dbg !620
  %130 = icmp eq i64 %129, 128, !dbg !620
  %131 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_14.T_layout_trans.strides, i64 4, !dbg !620
  %132 = load i64, ptr %131, align 8, !dbg !620, !tbaa !710
  %133 = and i64 %132, 4294967295, !dbg !620
  %134 = icmp eq i64 %133, 1, !dbg !620
  %135 = and i1 %130, %134, !dbg !620
  %136 = and i1 %126, %135, !dbg !620
  %137 = and i1 %122, %136, !dbg !620
  br i1 %137, label %if_end46, label %assert_fail47, !dbg !620, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !620
  %139 = load i64, ptr %138, align 8, !dbg !620
  %140 = icmp eq i64 %139, 0, !dbg !620
  br i1 %140, label %assert_end50, label %assert_fail49, !dbg !620, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %141(ptr nonnull @.str.168), !dbg !620
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %142 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %142(ptr nonnull @.str.169), !dbg !620
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %143 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !620
  %144 = load i32, ptr %143, align 4, !dbg !620
  %145 = icmp eq i32 %144, 1, !dbg !620
  br i1 %145, label %assert_end52, label %assert_fail51, !dbg !620, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %146(ptr nonnull @.str.170), !dbg !620
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %147 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !620
  %148 = load i32, ptr %147, align 4, !dbg !620
  %149 = icmp eq i32 %dev_id, %148, !dbg !620
  br i1 %149, label %assert_end54, label %assert_fail53, !dbg !620, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !620, !tbaa !19
  tail call void %150(ptr nonnull @.str.171), !dbg !620
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %151 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_14_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !620
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_15(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !714 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !716, metadata !DIExpression()), !dbg !722
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !717, metadata !DIExpression()), !dbg !722
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !718, metadata !DIExpression()), !dbg !722
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !719, metadata !DIExpression()), !dbg !722
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !720, metadata !DIExpression()), !dbg !722
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !721, metadata !DIExpression()), !dbg !722
  %0 = icmp eq i32 %num_args, 2, !dbg !722
  br i1 %0, label %assert_end, label %assert_fail, !dbg !722, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %146, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !722

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %1(ptr nonnull @.str.173), !dbg !722
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !722, !tbaa !723
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !722
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !722, !tbaa !734
  %p0 = load ptr, ptr %args, align 8, !dbg !722
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !722
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !722
  %p056 = load ptr, ptr %p0, align 8, !dbg !722
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !722
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !722
  %tvmgen_default_fused_layout_transform_15.p0.shape = load ptr, ptr %4, align 8, !dbg !722
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !722
  %tvmgen_default_fused_layout_transform_15.p0.strides = load ptr, ptr %5, align 8, !dbg !722
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !722
  %dev_id = load i32, ptr %6, align 4, !dbg !722
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !722
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !722
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !722
  %tvmgen_default_fused_layout_transform_15.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !722
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !722
  %tvmgen_default_fused_layout_transform_15.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !722
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !722

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %9(ptr nonnull @.str.174), !dbg !722
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !722

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %10(ptr nonnull @.str.175), !dbg !722
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !722
  %12 = load i32, ptr %11, align 4, !dbg !722
  %13 = icmp eq i32 %12, 5, !dbg !722
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !722, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %14(ptr nonnull @.str.176), !dbg !722
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !722
  %16 = load i16, ptr %15, align 2, !dbg !722
  %17 = icmp eq i16 %16, 1, !dbg !722
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !722
  %19 = load i8, ptr %18, align 1, !dbg !722
  %20 = icmp eq i8 %19, 32, !dbg !722
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !722
  %22 = load i8, ptr %21, align 1, !dbg !722
  %23 = icmp eq i8 %22, 2, !dbg !722
  %24 = and i1 %20, %23, !dbg !722
  %25 = and i1 %17, %24, !dbg !722
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !722, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %26(ptr nonnull @.str.177), !dbg !722
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_15.p0.shape, align 8, !dbg !722, !tbaa !736
  %28 = and i64 %27, 4294967295, !dbg !722
  %29 = icmp eq i64 %28, 1, !dbg !722
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !722, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %30(ptr nonnull @.str.178), !dbg !722
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_15.p0.shape, i64 1, !dbg !722
  %32 = load i64, ptr %31, align 8, !dbg !722, !tbaa !746
  %33 = and i64 %32, 4294967295, !dbg !722
  %34 = icmp eq i64 %33, 16, !dbg !722
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !722, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %35(ptr nonnull @.str.179), !dbg !722
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_15.p0.shape, i64 2, !dbg !722
  %37 = load i64, ptr %36, align 8, !dbg !722, !tbaa !748
  %38 = and i64 %37, 4294967295, !dbg !722
  %39 = icmp eq i64 %38, 14, !dbg !722
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !722, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %40(ptr nonnull @.str.180), !dbg !722
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_15.p0.shape, i64 3, !dbg !722
  %42 = load i64, ptr %41, align 8, !dbg !722, !tbaa !751
  %43 = and i64 %42, 4294967295, !dbg !722
  %44 = icmp eq i64 %43, 14, !dbg !722
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !722, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %45(ptr nonnull @.str.181), !dbg !722
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_15.p0.shape, i64 4, !dbg !722
  %47 = load i64, ptr %46, align 8, !dbg !722, !tbaa !753
  %48 = and i64 %47, 4294967295, !dbg !722
  %49 = icmp eq i64 %48, 16, !dbg !722
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !722, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %50(ptr nonnull @.str.182), !dbg !722
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_15.p0.strides, null, !dbg !722
  br i1 %.not, label %if_end, label %if_then, !dbg !722, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_15.p0.strides, i64 1, !dbg !722
  %52 = load i64, ptr %51, align 8, !dbg !722, !tbaa !757
  %53 = and i64 %52, 4294967295, !dbg !722
  %54 = icmp eq i64 %53, 3136, !dbg !722
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_15.p0.strides, i64 2, !dbg !722
  %56 = load i64, ptr %55, align 8, !dbg !722, !tbaa !767
  %57 = and i64 %56, 4294967295, !dbg !722
  %58 = icmp eq i64 %57, 224, !dbg !722
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_15.p0.strides, i64 3, !dbg !722
  %60 = load i64, ptr %59, align 8, !dbg !722, !tbaa !770
  %61 = and i64 %60, 4294967295, !dbg !722
  %62 = icmp eq i64 %61, 16, !dbg !722
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_15.p0.strides, i64 4, !dbg !722
  %64 = load i64, ptr %63, align 8, !dbg !722, !tbaa !772
  %65 = and i64 %64, 4294967295, !dbg !722
  %66 = icmp eq i64 %65, 1, !dbg !722
  %67 = and i1 %62, %66, !dbg !722
  %68 = and i1 %58, %67, !dbg !722
  %69 = and i1 %54, %68, !dbg !722
  br i1 %69, label %if_end, label %assert_fail23, !dbg !722, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !722
  %71 = load i64, ptr %70, align 8, !dbg !722
  %72 = icmp eq i64 %71, 0, !dbg !722
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !722, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %73(ptr nonnull @.str.183), !dbg !722
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %74(ptr nonnull @.str.184), !dbg !722
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !722
  %76 = load i32, ptr %75, align 4, !dbg !722
  %77 = icmp eq i32 %76, 1, !dbg !722
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !722, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %78(ptr nonnull @.str.185), !dbg !722
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !722
  %80 = load i32, ptr %79, align 4, !dbg !722
  %81 = icmp eq i32 %80, 5, !dbg !722
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !722, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %82(ptr nonnull @.str.186), !dbg !722
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !722
  %84 = load i16, ptr %83, align 2, !dbg !722
  %85 = icmp eq i16 %84, 1, !dbg !722
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !722
  %87 = load i8, ptr %86, align 1, !dbg !722
  %88 = icmp eq i8 %87, 32, !dbg !722
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !722
  %90 = load i8, ptr %89, align 1, !dbg !722
  %91 = icmp eq i8 %90, 2, !dbg !722
  %92 = and i1 %88, %91, !dbg !722
  %93 = and i1 %85, %92, !dbg !722
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !722, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %94(ptr nonnull @.str.187), !dbg !722
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_15.T_layout_trans.shape, align 8, !dbg !722, !tbaa !776
  %96 = and i64 %95, 4294967295, !dbg !722
  %97 = icmp eq i64 %96, 1, !dbg !722
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !722, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %98(ptr nonnull @.str.188), !dbg !722
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_15.T_layout_trans.shape, i64 1, !dbg !722
  %100 = load i64, ptr %99, align 8, !dbg !722, !tbaa !786
  %101 = and i64 %100, 4294967295, !dbg !722
  %102 = icmp eq i64 %101, 1, !dbg !722
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !722, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %103(ptr nonnull @.str.189), !dbg !722
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_15.T_layout_trans.shape, i64 2, !dbg !722
  %105 = load i64, ptr %104, align 8, !dbg !722, !tbaa !788
  %106 = and i64 %105, 4294967295, !dbg !722
  %107 = icmp eq i64 %106, 14, !dbg !722
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !722, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %108(ptr nonnull @.str.190), !dbg !722
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_15.T_layout_trans.shape, i64 3, !dbg !722
  %110 = load i64, ptr %109, align 8, !dbg !722, !tbaa !791
  %111 = and i64 %110, 4294967295, !dbg !722
  %112 = icmp eq i64 %111, 14, !dbg !722
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !722, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %113(ptr nonnull @.str.191), !dbg !722
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_15.T_layout_trans.shape, i64 4, !dbg !722
  %115 = load i64, ptr %114, align 8, !dbg !722, !tbaa !793
  %116 = and i64 %115, 4294967295, !dbg !722
  %117 = icmp eq i64 %116, 256, !dbg !722
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !722, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %118(ptr nonnull @.str.192), !dbg !722
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_15.T_layout_trans.strides, null, !dbg !722
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !722, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_15.T_layout_trans.strides, i64 2, !dbg !722
  %120 = load i64, ptr %119, align 8, !dbg !722, !tbaa !797
  %121 = and i64 %120, 4294967295, !dbg !722
  %122 = icmp eq i64 %121, 3584, !dbg !722
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_15.T_layout_trans.strides, i64 3, !dbg !722
  %124 = load i64, ptr %123, align 8, !dbg !722, !tbaa !807
  %125 = and i64 %124, 4294967295, !dbg !722
  %126 = icmp eq i64 %125, 256, !dbg !722
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_15.T_layout_trans.strides, i64 4, !dbg !722
  %128 = load i64, ptr %127, align 8, !dbg !722, !tbaa !809
  %129 = and i64 %128, 4294967295, !dbg !722
  %130 = icmp eq i64 %129, 1, !dbg !722
  %131 = and i1 %126, %130, !dbg !722
  %132 = and i1 %122, %131, !dbg !722
  br i1 %132, label %if_end46, label %assert_fail47, !dbg !722, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %133 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !722
  %134 = load i64, ptr %133, align 8, !dbg !722
  %135 = icmp eq i64 %134, 0, !dbg !722
  br i1 %135, label %assert_end50, label %assert_fail49, !dbg !722, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %136(ptr nonnull @.str.193), !dbg !722
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %137 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %137(ptr nonnull @.str.194), !dbg !722
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !722
  %139 = load i32, ptr %138, align 4, !dbg !722
  %140 = icmp eq i32 %139, 1, !dbg !722
  br i1 %140, label %assert_end52, label %assert_fail51, !dbg !722, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %141(ptr nonnull @.str.195), !dbg !722
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %142 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !722
  %143 = load i32, ptr %142, align 4, !dbg !722
  %144 = icmp eq i32 %dev_id, %143, !dbg !722
  br i1 %144, label %assert_end54, label %assert_fail53, !dbg !722, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !722, !tbaa !19
  tail call void %145(ptr nonnull @.str.196), !dbg !722
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %146 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_15_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !722
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_16(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !813 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !815, metadata !DIExpression()), !dbg !821
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !816, metadata !DIExpression()), !dbg !821
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !817, metadata !DIExpression()), !dbg !821
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !818, metadata !DIExpression()), !dbg !821
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !819, metadata !DIExpression()), !dbg !821
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !820, metadata !DIExpression()), !dbg !821
  %0 = icmp eq i32 %num_args, 2, !dbg !821
  br i1 %0, label %assert_end, label %assert_fail, !dbg !821, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %151, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !821

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %1(ptr nonnull @.str.198), !dbg !821
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !821, !tbaa !822
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !821
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !821, !tbaa !833
  %p0 = load ptr, ptr %args, align 8, !dbg !821
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !821
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !821
  %p056 = load ptr, ptr %p0, align 8, !dbg !821
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !821
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !821
  %tvmgen_default_fused_layout_transform_16.p0.shape = load ptr, ptr %4, align 8, !dbg !821
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !821
  %tvmgen_default_fused_layout_transform_16.p0.strides = load ptr, ptr %5, align 8, !dbg !821
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !821
  %dev_id = load i32, ptr %6, align 4, !dbg !821
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !821
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !821
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !821
  %tvmgen_default_fused_layout_transform_16.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !821
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !821
  %tvmgen_default_fused_layout_transform_16.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !821
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !821

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %9(ptr nonnull @.str.199), !dbg !821
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !821

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %10(ptr nonnull @.str.200), !dbg !821
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !821
  %12 = load i32, ptr %11, align 4, !dbg !821
  %13 = icmp eq i32 %12, 5, !dbg !821
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !821, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %14(ptr nonnull @.str.201), !dbg !821
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !821
  %16 = load i16, ptr %15, align 2, !dbg !821
  %17 = icmp eq i16 %16, 1, !dbg !821
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !821
  %19 = load i8, ptr %18, align 1, !dbg !821
  %20 = icmp eq i8 %19, 32, !dbg !821
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !821
  %22 = load i8, ptr %21, align 1, !dbg !821
  %23 = icmp eq i8 %22, 2, !dbg !821
  %24 = and i1 %20, %23, !dbg !821
  %25 = and i1 %17, %24, !dbg !821
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !821, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %26(ptr nonnull @.str.202), !dbg !821
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_16.p0.shape, align 8, !dbg !821, !tbaa !835
  %28 = and i64 %27, 4294967295, !dbg !821
  %29 = icmp eq i64 %28, 1, !dbg !821
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !821, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %30(ptr nonnull @.str.203), !dbg !821
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_16.p0.shape, i64 1, !dbg !821
  %32 = load i64, ptr %31, align 8, !dbg !821, !tbaa !845
  %33 = and i64 %32, 4294967295, !dbg !821
  %34 = icmp eq i64 %33, 16, !dbg !821
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !821, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %35(ptr nonnull @.str.204), !dbg !821
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_16.p0.shape, i64 2, !dbg !821
  %37 = load i64, ptr %36, align 8, !dbg !821, !tbaa !847
  %38 = and i64 %37, 4294967295, !dbg !821
  %39 = icmp eq i64 %38, 14, !dbg !821
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !821, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %40(ptr nonnull @.str.205), !dbg !821
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_16.p0.shape, i64 3, !dbg !821
  %42 = load i64, ptr %41, align 8, !dbg !821, !tbaa !850
  %43 = and i64 %42, 4294967295, !dbg !821
  %44 = icmp eq i64 %43, 14, !dbg !821
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !821, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %45(ptr nonnull @.str.206), !dbg !821
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_16.p0.shape, i64 4, !dbg !821
  %47 = load i64, ptr %46, align 8, !dbg !821, !tbaa !852
  %48 = and i64 %47, 4294967295, !dbg !821
  %49 = icmp eq i64 %48, 64, !dbg !821
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !821, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %50(ptr nonnull @.str.207), !dbg !821
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_16.p0.strides, null, !dbg !821
  br i1 %.not, label %if_end, label %if_then, !dbg !821, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_16.p0.strides, i64 1, !dbg !821
  %52 = load i64, ptr %51, align 8, !dbg !821, !tbaa !856
  %53 = and i64 %52, 4294967295, !dbg !821
  %54 = icmp eq i64 %53, 12544, !dbg !821
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_16.p0.strides, i64 2, !dbg !821
  %56 = load i64, ptr %55, align 8, !dbg !821, !tbaa !866
  %57 = and i64 %56, 4294967295, !dbg !821
  %58 = icmp eq i64 %57, 896, !dbg !821
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_16.p0.strides, i64 3, !dbg !821
  %60 = load i64, ptr %59, align 8, !dbg !821, !tbaa !869
  %61 = and i64 %60, 4294967295, !dbg !821
  %62 = icmp eq i64 %61, 64, !dbg !821
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_16.p0.strides, i64 4, !dbg !821
  %64 = load i64, ptr %63, align 8, !dbg !821, !tbaa !871
  %65 = and i64 %64, 4294967295, !dbg !821
  %66 = icmp eq i64 %65, 1, !dbg !821
  %67 = and i1 %62, %66, !dbg !821
  %68 = and i1 %58, %67, !dbg !821
  %69 = and i1 %54, %68, !dbg !821
  br i1 %69, label %if_end, label %assert_fail23, !dbg !821, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !821
  %71 = load i64, ptr %70, align 8, !dbg !821
  %72 = icmp eq i64 %71, 0, !dbg !821
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !821, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %73(ptr nonnull @.str.208), !dbg !821
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %74(ptr nonnull @.str.209), !dbg !821
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !821
  %76 = load i32, ptr %75, align 4, !dbg !821
  %77 = icmp eq i32 %76, 1, !dbg !821
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !821, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %78(ptr nonnull @.str.210), !dbg !821
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !821
  %80 = load i32, ptr %79, align 4, !dbg !821
  %81 = icmp eq i32 %80, 5, !dbg !821
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !821, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %82(ptr nonnull @.str.211), !dbg !821
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !821
  %84 = load i16, ptr %83, align 2, !dbg !821
  %85 = icmp eq i16 %84, 1, !dbg !821
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !821
  %87 = load i8, ptr %86, align 1, !dbg !821
  %88 = icmp eq i8 %87, 32, !dbg !821
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !821
  %90 = load i8, ptr %89, align 1, !dbg !821
  %91 = icmp eq i8 %90, 2, !dbg !821
  %92 = and i1 %88, %91, !dbg !821
  %93 = and i1 %85, %92, !dbg !821
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !821, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %94(ptr nonnull @.str.212), !dbg !821
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_16.T_layout_trans.shape, align 8, !dbg !821, !tbaa !875
  %96 = and i64 %95, 4294967295, !dbg !821
  %97 = icmp eq i64 %96, 1, !dbg !821
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !821, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %98(ptr nonnull @.str.213), !dbg !821
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_16.T_layout_trans.shape, i64 1, !dbg !821
  %100 = load i64, ptr %99, align 8, !dbg !821, !tbaa !885
  %101 = and i64 %100, 4294967295, !dbg !821
  %102 = icmp eq i64 %101, 256, !dbg !821
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !821, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %103(ptr nonnull @.str.214), !dbg !821
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_16.T_layout_trans.shape, i64 2, !dbg !821
  %105 = load i64, ptr %104, align 8, !dbg !821, !tbaa !887
  %106 = and i64 %105, 4294967295, !dbg !821
  %107 = icmp eq i64 %106, 14, !dbg !821
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !821, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %108(ptr nonnull @.str.215), !dbg !821
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_16.T_layout_trans.shape, i64 3, !dbg !821
  %110 = load i64, ptr %109, align 8, !dbg !821, !tbaa !890
  %111 = and i64 %110, 4294967295, !dbg !821
  %112 = icmp eq i64 %111, 14, !dbg !821
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !821, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %113(ptr nonnull @.str.216), !dbg !821
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_16.T_layout_trans.shape, i64 4, !dbg !821
  %115 = load i64, ptr %114, align 8, !dbg !821, !tbaa !892
  %116 = and i64 %115, 4294967295, !dbg !821
  %117 = icmp eq i64 %116, 4, !dbg !821
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !821, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %118(ptr nonnull @.str.217), !dbg !821
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_16.T_layout_trans.strides, null, !dbg !821
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !821, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_16.T_layout_trans.strides, i64 1, !dbg !821
  %120 = load i64, ptr %119, align 8, !dbg !821, !tbaa !896
  %121 = and i64 %120, 4294967295, !dbg !821
  %122 = icmp eq i64 %121, 784, !dbg !821
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_16.T_layout_trans.strides, i64 2, !dbg !821
  %124 = load i64, ptr %123, align 8, !dbg !821, !tbaa !906
  %125 = and i64 %124, 4294967295, !dbg !821
  %126 = icmp eq i64 %125, 56, !dbg !821
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_16.T_layout_trans.strides, i64 3, !dbg !821
  %128 = load i64, ptr %127, align 8, !dbg !821, !tbaa !909
  %129 = and i64 %128, 4294967295, !dbg !821
  %130 = icmp eq i64 %129, 4, !dbg !821
  %131 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_16.T_layout_trans.strides, i64 4, !dbg !821
  %132 = load i64, ptr %131, align 8, !dbg !821, !tbaa !911
  %133 = and i64 %132, 4294967295, !dbg !821
  %134 = icmp eq i64 %133, 1, !dbg !821
  %135 = and i1 %130, %134, !dbg !821
  %136 = and i1 %126, %135, !dbg !821
  %137 = and i1 %122, %136, !dbg !821
  br i1 %137, label %if_end46, label %assert_fail47, !dbg !821, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !821
  %139 = load i64, ptr %138, align 8, !dbg !821
  %140 = icmp eq i64 %139, 0, !dbg !821
  br i1 %140, label %assert_end50, label %assert_fail49, !dbg !821, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %141(ptr nonnull @.str.218), !dbg !821
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %142 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %142(ptr nonnull @.str.219), !dbg !821
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %143 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !821
  %144 = load i32, ptr %143, align 4, !dbg !821
  %145 = icmp eq i32 %144, 1, !dbg !821
  br i1 %145, label %assert_end52, label %assert_fail51, !dbg !821, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %146(ptr nonnull @.str.220), !dbg !821
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %147 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !821
  %148 = load i32, ptr %147, align 4, !dbg !821
  %149 = icmp eq i32 %dev_id, %148, !dbg !821
  br i1 %149, label %assert_end54, label %assert_fail53, !dbg !821, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !821, !tbaa !19
  tail call void %150(ptr nonnull @.str.221), !dbg !821
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %151 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_16_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !821
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_17(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !915 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !917, metadata !DIExpression()), !dbg !923
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !918, metadata !DIExpression()), !dbg !923
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !919, metadata !DIExpression()), !dbg !923
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !920, metadata !DIExpression()), !dbg !923
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !921, metadata !DIExpression()), !dbg !923
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !922, metadata !DIExpression()), !dbg !923
  %0 = icmp eq i32 %num_args, 2, !dbg !923
  br i1 %0, label %assert_end, label %assert_fail, !dbg !923, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %146, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !923

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %1(ptr nonnull @.str.223), !dbg !923
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !923, !tbaa !924
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !923
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !923, !tbaa !935
  %p0 = load ptr, ptr %args, align 8, !dbg !923
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !923
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !923
  %p056 = load ptr, ptr %p0, align 8, !dbg !923
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !923
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !923
  %tvmgen_default_fused_layout_transform_17.p0.shape = load ptr, ptr %4, align 8, !dbg !923
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !923
  %tvmgen_default_fused_layout_transform_17.p0.strides = load ptr, ptr %5, align 8, !dbg !923
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !923
  %dev_id = load i32, ptr %6, align 4, !dbg !923
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !923
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !923
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !923
  %tvmgen_default_fused_layout_transform_17.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !923
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !923
  %tvmgen_default_fused_layout_transform_17.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !923
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !923

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %9(ptr nonnull @.str.224), !dbg !923
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !923

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %10(ptr nonnull @.str.225), !dbg !923
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !923
  %12 = load i32, ptr %11, align 4, !dbg !923
  %13 = icmp eq i32 %12, 5, !dbg !923
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !923, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %14(ptr nonnull @.str.226), !dbg !923
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !923
  %16 = load i16, ptr %15, align 2, !dbg !923
  %17 = icmp eq i16 %16, 1, !dbg !923
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !923
  %19 = load i8, ptr %18, align 1, !dbg !923
  %20 = icmp eq i8 %19, 32, !dbg !923
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !923
  %22 = load i8, ptr %21, align 1, !dbg !923
  %23 = icmp eq i8 %22, 2, !dbg !923
  %24 = and i1 %20, %23, !dbg !923
  %25 = and i1 %17, %24, !dbg !923
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !923, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %26(ptr nonnull @.str.227), !dbg !923
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_17.p0.shape, align 8, !dbg !923, !tbaa !937
  %28 = and i64 %27, 4294967295, !dbg !923
  %29 = icmp eq i64 %28, 1, !dbg !923
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !923, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %30(ptr nonnull @.str.228), !dbg !923
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_17.p0.shape, i64 1, !dbg !923
  %32 = load i64, ptr %31, align 8, !dbg !923, !tbaa !947
  %33 = and i64 %32, 4294967295, !dbg !923
  %34 = icmp eq i64 %33, 16, !dbg !923
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !923, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %35(ptr nonnull @.str.229), !dbg !923
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_17.p0.shape, i64 2, !dbg !923
  %37 = load i64, ptr %36, align 8, !dbg !923, !tbaa !949
  %38 = and i64 %37, 4294967295, !dbg !923
  %39 = icmp eq i64 %38, 14, !dbg !923
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !923, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %40(ptr nonnull @.str.230), !dbg !923
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_17.p0.shape, i64 3, !dbg !923
  %42 = load i64, ptr %41, align 8, !dbg !923, !tbaa !952
  %43 = and i64 %42, 4294967295, !dbg !923
  %44 = icmp eq i64 %43, 14, !dbg !923
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !923, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %45(ptr nonnull @.str.231), !dbg !923
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_17.p0.shape, i64 4, !dbg !923
  %47 = load i64, ptr %46, align 8, !dbg !923, !tbaa !954
  %48 = and i64 %47, 4294967295, !dbg !923
  %49 = icmp eq i64 %48, 64, !dbg !923
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !923, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %50(ptr nonnull @.str.232), !dbg !923
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_17.p0.strides, null, !dbg !923
  br i1 %.not, label %if_end, label %if_then, !dbg !923, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_17.p0.strides, i64 1, !dbg !923
  %52 = load i64, ptr %51, align 8, !dbg !923, !tbaa !958
  %53 = and i64 %52, 4294967295, !dbg !923
  %54 = icmp eq i64 %53, 12544, !dbg !923
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_17.p0.strides, i64 2, !dbg !923
  %56 = load i64, ptr %55, align 8, !dbg !923, !tbaa !968
  %57 = and i64 %56, 4294967295, !dbg !923
  %58 = icmp eq i64 %57, 896, !dbg !923
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_17.p0.strides, i64 3, !dbg !923
  %60 = load i64, ptr %59, align 8, !dbg !923, !tbaa !971
  %61 = and i64 %60, 4294967295, !dbg !923
  %62 = icmp eq i64 %61, 64, !dbg !923
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_17.p0.strides, i64 4, !dbg !923
  %64 = load i64, ptr %63, align 8, !dbg !923, !tbaa !973
  %65 = and i64 %64, 4294967295, !dbg !923
  %66 = icmp eq i64 %65, 1, !dbg !923
  %67 = and i1 %62, %66, !dbg !923
  %68 = and i1 %58, %67, !dbg !923
  %69 = and i1 %54, %68, !dbg !923
  br i1 %69, label %if_end, label %assert_fail23, !dbg !923, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !923
  %71 = load i64, ptr %70, align 8, !dbg !923
  %72 = icmp eq i64 %71, 0, !dbg !923
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !923, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %73(ptr nonnull @.str.233), !dbg !923
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %74(ptr nonnull @.str.234), !dbg !923
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !923
  %76 = load i32, ptr %75, align 4, !dbg !923
  %77 = icmp eq i32 %76, 1, !dbg !923
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !923, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %78(ptr nonnull @.str.235), !dbg !923
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !923
  %80 = load i32, ptr %79, align 4, !dbg !923
  %81 = icmp eq i32 %80, 5, !dbg !923
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !923, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %82(ptr nonnull @.str.236), !dbg !923
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !923
  %84 = load i16, ptr %83, align 2, !dbg !923
  %85 = icmp eq i16 %84, 1, !dbg !923
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !923
  %87 = load i8, ptr %86, align 1, !dbg !923
  %88 = icmp eq i8 %87, 32, !dbg !923
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !923
  %90 = load i8, ptr %89, align 1, !dbg !923
  %91 = icmp eq i8 %90, 2, !dbg !923
  %92 = and i1 %88, %91, !dbg !923
  %93 = and i1 %85, %92, !dbg !923
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !923, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %94(ptr nonnull @.str.237), !dbg !923
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_17.T_layout_trans.shape, align 8, !dbg !923, !tbaa !977
  %96 = and i64 %95, 4294967295, !dbg !923
  %97 = icmp eq i64 %96, 1, !dbg !923
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !923, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %98(ptr nonnull @.str.238), !dbg !923
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_17.T_layout_trans.shape, i64 1, !dbg !923
  %100 = load i64, ptr %99, align 8, !dbg !923, !tbaa !987
  %101 = and i64 %100, 4294967295, !dbg !923
  %102 = icmp eq i64 %101, 1, !dbg !923
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !923, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %103(ptr nonnull @.str.239), !dbg !923
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_17.T_layout_trans.shape, i64 2, !dbg !923
  %105 = load i64, ptr %104, align 8, !dbg !923, !tbaa !989
  %106 = and i64 %105, 4294967295, !dbg !923
  %107 = icmp eq i64 %106, 14, !dbg !923
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !923, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %108(ptr nonnull @.str.240), !dbg !923
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_17.T_layout_trans.shape, i64 3, !dbg !923
  %110 = load i64, ptr %109, align 8, !dbg !923, !tbaa !992
  %111 = and i64 %110, 4294967295, !dbg !923
  %112 = icmp eq i64 %111, 14, !dbg !923
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !923, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %113(ptr nonnull @.str.241), !dbg !923
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_17.T_layout_trans.shape, i64 4, !dbg !923
  %115 = load i64, ptr %114, align 8, !dbg !923, !tbaa !994
  %116 = and i64 %115, 4294967295, !dbg !923
  %117 = icmp eq i64 %116, 1024, !dbg !923
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !923, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %118(ptr nonnull @.str.242), !dbg !923
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_17.T_layout_trans.strides, null, !dbg !923
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !923, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_17.T_layout_trans.strides, i64 2, !dbg !923
  %120 = load i64, ptr %119, align 8, !dbg !923, !tbaa !998
  %121 = and i64 %120, 4294967295, !dbg !923
  %122 = icmp eq i64 %121, 14336, !dbg !923
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_17.T_layout_trans.strides, i64 3, !dbg !923
  %124 = load i64, ptr %123, align 8, !dbg !923, !tbaa !1008
  %125 = and i64 %124, 4294967295, !dbg !923
  %126 = icmp eq i64 %125, 1024, !dbg !923
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_17.T_layout_trans.strides, i64 4, !dbg !923
  %128 = load i64, ptr %127, align 8, !dbg !923, !tbaa !1010
  %129 = and i64 %128, 4294967295, !dbg !923
  %130 = icmp eq i64 %129, 1, !dbg !923
  %131 = and i1 %126, %130, !dbg !923
  %132 = and i1 %122, %131, !dbg !923
  br i1 %132, label %if_end46, label %assert_fail47, !dbg !923, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %133 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !923
  %134 = load i64, ptr %133, align 8, !dbg !923
  %135 = icmp eq i64 %134, 0, !dbg !923
  br i1 %135, label %assert_end50, label %assert_fail49, !dbg !923, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %136(ptr nonnull @.str.243), !dbg !923
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %137 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %137(ptr nonnull @.str.244), !dbg !923
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !923
  %139 = load i32, ptr %138, align 4, !dbg !923
  %140 = icmp eq i32 %139, 1, !dbg !923
  br i1 %140, label %assert_end52, label %assert_fail51, !dbg !923, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %141(ptr nonnull @.str.245), !dbg !923
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %142 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !923
  %143 = load i32, ptr %142, align 4, !dbg !923
  %144 = icmp eq i32 %dev_id, %143, !dbg !923
  br i1 %144, label %assert_end54, label %assert_fail53, !dbg !923, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !923, !tbaa !19
  tail call void %145(ptr nonnull @.str.246), !dbg !923
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %146 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_17_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !923
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_18(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1014 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1016, metadata !DIExpression()), !dbg !1022
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1017, metadata !DIExpression()), !dbg !1022
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1018, metadata !DIExpression()), !dbg !1022
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1019, metadata !DIExpression()), !dbg !1022
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1020, metadata !DIExpression()), !dbg !1022
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1021, metadata !DIExpression()), !dbg !1022
  %0 = icmp eq i32 %num_args, 2, !dbg !1022
  br i1 %0, label %assert_end, label %assert_fail, !dbg !1022, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %151, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !1022

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %1(ptr nonnull @.str.248), !dbg !1022
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1022, !tbaa !1023
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1022
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !1022, !tbaa !1034
  %p0 = load ptr, ptr %args, align 8, !dbg !1022
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1022
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !1022
  %p056 = load ptr, ptr %p0, align 8, !dbg !1022
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !1022
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1022
  %tvmgen_default_fused_layout_transform_18.p0.shape = load ptr, ptr %4, align 8, !dbg !1022
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1022
  %tvmgen_default_fused_layout_transform_18.p0.strides = load ptr, ptr %5, align 8, !dbg !1022
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1022
  %dev_id = load i32, ptr %6, align 4, !dbg !1022
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !1022
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !1022
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !1022
  %tvmgen_default_fused_layout_transform_18.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !1022
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !1022
  %tvmgen_default_fused_layout_transform_18.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !1022
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !1022

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %9(ptr nonnull @.str.249), !dbg !1022
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !1022

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %10(ptr nonnull @.str.250), !dbg !1022
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1022
  %12 = load i32, ptr %11, align 4, !dbg !1022
  %13 = icmp eq i32 %12, 5, !dbg !1022
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !1022, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %14(ptr nonnull @.str.251), !dbg !1022
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1022
  %16 = load i16, ptr %15, align 2, !dbg !1022
  %17 = icmp eq i16 %16, 1, !dbg !1022
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1022
  %19 = load i8, ptr %18, align 1, !dbg !1022
  %20 = icmp eq i8 %19, 32, !dbg !1022
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1022
  %22 = load i8, ptr %21, align 1, !dbg !1022
  %23 = icmp eq i8 %22, 2, !dbg !1022
  %24 = and i1 %20, %23, !dbg !1022
  %25 = and i1 %17, %24, !dbg !1022
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !1022, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %26(ptr nonnull @.str.252), !dbg !1022
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_18.p0.shape, align 8, !dbg !1022, !tbaa !1036
  %28 = and i64 %27, 4294967295, !dbg !1022
  %29 = icmp eq i64 %28, 1, !dbg !1022
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !1022, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %30(ptr nonnull @.str.253), !dbg !1022
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_18.p0.shape, i64 1, !dbg !1022
  %32 = load i64, ptr %31, align 8, !dbg !1022, !tbaa !1046
  %33 = and i64 %32, 4294967295, !dbg !1022
  %34 = icmp eq i64 %33, 64, !dbg !1022
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !1022, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %35(ptr nonnull @.str.254), !dbg !1022
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_18.p0.shape, i64 2, !dbg !1022
  %37 = load i64, ptr %36, align 8, !dbg !1022, !tbaa !1048
  %38 = and i64 %37, 4294967295, !dbg !1022
  %39 = icmp eq i64 %38, 7, !dbg !1022
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !1022, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %40(ptr nonnull @.str.255), !dbg !1022
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_18.p0.shape, i64 3, !dbg !1022
  %42 = load i64, ptr %41, align 8, !dbg !1022, !tbaa !1051
  %43 = and i64 %42, 4294967295, !dbg !1022
  %44 = icmp eq i64 %43, 7, !dbg !1022
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !1022, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %45(ptr nonnull @.str.256), !dbg !1022
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_18.p0.shape, i64 4, !dbg !1022
  %47 = load i64, ptr %46, align 8, !dbg !1022, !tbaa !1053
  %48 = and i64 %47, 4294967295, !dbg !1022
  %49 = icmp eq i64 %48, 32, !dbg !1022
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !1022, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %50(ptr nonnull @.str.257), !dbg !1022
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_18.p0.strides, null, !dbg !1022
  br i1 %.not, label %if_end, label %if_then, !dbg !1022, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_18.p0.strides, i64 1, !dbg !1022
  %52 = load i64, ptr %51, align 8, !dbg !1022, !tbaa !1057
  %53 = and i64 %52, 4294967295, !dbg !1022
  %54 = icmp eq i64 %53, 1568, !dbg !1022
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_18.p0.strides, i64 2, !dbg !1022
  %56 = load i64, ptr %55, align 8, !dbg !1022, !tbaa !1067
  %57 = and i64 %56, 4294967295, !dbg !1022
  %58 = icmp eq i64 %57, 224, !dbg !1022
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_18.p0.strides, i64 3, !dbg !1022
  %60 = load i64, ptr %59, align 8, !dbg !1022, !tbaa !1070
  %61 = and i64 %60, 4294967295, !dbg !1022
  %62 = icmp eq i64 %61, 32, !dbg !1022
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_18.p0.strides, i64 4, !dbg !1022
  %64 = load i64, ptr %63, align 8, !dbg !1022, !tbaa !1072
  %65 = and i64 %64, 4294967295, !dbg !1022
  %66 = icmp eq i64 %65, 1, !dbg !1022
  %67 = and i1 %62, %66, !dbg !1022
  %68 = and i1 %58, %67, !dbg !1022
  %69 = and i1 %54, %68, !dbg !1022
  br i1 %69, label %if_end, label %assert_fail23, !dbg !1022, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1022
  %71 = load i64, ptr %70, align 8, !dbg !1022
  %72 = icmp eq i64 %71, 0, !dbg !1022
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !1022, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %73(ptr nonnull @.str.258), !dbg !1022
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %74(ptr nonnull @.str.259), !dbg !1022
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1022
  %76 = load i32, ptr %75, align 4, !dbg !1022
  %77 = icmp eq i32 %76, 1, !dbg !1022
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !1022, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %78(ptr nonnull @.str.260), !dbg !1022
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !1022
  %80 = load i32, ptr %79, align 4, !dbg !1022
  %81 = icmp eq i32 %80, 5, !dbg !1022
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !1022, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %82(ptr nonnull @.str.261), !dbg !1022
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !1022
  %84 = load i16, ptr %83, align 2, !dbg !1022
  %85 = icmp eq i16 %84, 1, !dbg !1022
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !1022
  %87 = load i8, ptr %86, align 1, !dbg !1022
  %88 = icmp eq i8 %87, 32, !dbg !1022
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !1022
  %90 = load i8, ptr %89, align 1, !dbg !1022
  %91 = icmp eq i8 %90, 2, !dbg !1022
  %92 = and i1 %88, %91, !dbg !1022
  %93 = and i1 %85, %92, !dbg !1022
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !1022, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %94(ptr nonnull @.str.262), !dbg !1022
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_18.T_layout_trans.shape, align 8, !dbg !1022, !tbaa !1076
  %96 = and i64 %95, 4294967295, !dbg !1022
  %97 = icmp eq i64 %96, 1, !dbg !1022
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !1022, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %98(ptr nonnull @.str.263), !dbg !1022
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_18.T_layout_trans.shape, i64 1, !dbg !1022
  %100 = load i64, ptr %99, align 8, !dbg !1022, !tbaa !1086
  %101 = and i64 %100, 4294967295, !dbg !1022
  %102 = icmp eq i64 %101, 512, !dbg !1022
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !1022, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %103(ptr nonnull @.str.264), !dbg !1022
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_18.T_layout_trans.shape, i64 2, !dbg !1022
  %105 = load i64, ptr %104, align 8, !dbg !1022, !tbaa !1088
  %106 = and i64 %105, 4294967295, !dbg !1022
  %107 = icmp eq i64 %106, 7, !dbg !1022
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !1022, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %108(ptr nonnull @.str.265), !dbg !1022
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_18.T_layout_trans.shape, i64 3, !dbg !1022
  %110 = load i64, ptr %109, align 8, !dbg !1022, !tbaa !1091
  %111 = and i64 %110, 4294967295, !dbg !1022
  %112 = icmp eq i64 %111, 7, !dbg !1022
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !1022, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %113(ptr nonnull @.str.266), !dbg !1022
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_18.T_layout_trans.shape, i64 4, !dbg !1022
  %115 = load i64, ptr %114, align 8, !dbg !1022, !tbaa !1093
  %116 = and i64 %115, 4294967295, !dbg !1022
  %117 = icmp eq i64 %116, 4, !dbg !1022
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !1022, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %118(ptr nonnull @.str.267), !dbg !1022
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_18.T_layout_trans.strides, null, !dbg !1022
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !1022, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_18.T_layout_trans.strides, i64 1, !dbg !1022
  %120 = load i64, ptr %119, align 8, !dbg !1022, !tbaa !1097
  %121 = and i64 %120, 4294967295, !dbg !1022
  %122 = icmp eq i64 %121, 196, !dbg !1022
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_18.T_layout_trans.strides, i64 2, !dbg !1022
  %124 = load i64, ptr %123, align 8, !dbg !1022, !tbaa !1107
  %125 = and i64 %124, 4294967295, !dbg !1022
  %126 = icmp eq i64 %125, 28, !dbg !1022
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_18.T_layout_trans.strides, i64 3, !dbg !1022
  %128 = load i64, ptr %127, align 8, !dbg !1022, !tbaa !1110
  %129 = and i64 %128, 4294967295, !dbg !1022
  %130 = icmp eq i64 %129, 4, !dbg !1022
  %131 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_18.T_layout_trans.strides, i64 4, !dbg !1022
  %132 = load i64, ptr %131, align 8, !dbg !1022, !tbaa !1112
  %133 = and i64 %132, 4294967295, !dbg !1022
  %134 = icmp eq i64 %133, 1, !dbg !1022
  %135 = and i1 %130, %134, !dbg !1022
  %136 = and i1 %126, %135, !dbg !1022
  %137 = and i1 %122, %136, !dbg !1022
  br i1 %137, label %if_end46, label %assert_fail47, !dbg !1022, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !1022
  %139 = load i64, ptr %138, align 8, !dbg !1022
  %140 = icmp eq i64 %139, 0, !dbg !1022
  br i1 %140, label %assert_end50, label %assert_fail49, !dbg !1022, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %141(ptr nonnull @.str.268), !dbg !1022
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %142 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %142(ptr nonnull @.str.269), !dbg !1022
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %143 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !1022
  %144 = load i32, ptr %143, align 4, !dbg !1022
  %145 = icmp eq i32 %144, 1, !dbg !1022
  br i1 %145, label %assert_end52, label %assert_fail51, !dbg !1022, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %146(ptr nonnull @.str.270), !dbg !1022
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %147 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !1022
  %148 = load i32, ptr %147, align 4, !dbg !1022
  %149 = icmp eq i32 %dev_id, %148, !dbg !1022
  br i1 %149, label %assert_end54, label %assert_fail53, !dbg !1022, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1022, !tbaa !19
  tail call void %150(ptr nonnull @.str.271), !dbg !1022
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %151 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_18_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !1022
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_19(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1116 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1118, metadata !DIExpression()), !dbg !1124
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1119, metadata !DIExpression()), !dbg !1124
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1120, metadata !DIExpression()), !dbg !1124
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1121, metadata !DIExpression()), !dbg !1124
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1122, metadata !DIExpression()), !dbg !1124
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1123, metadata !DIExpression()), !dbg !1124
  %0 = icmp eq i32 %num_args, 2, !dbg !1124
  br i1 %0, label %assert_end, label %assert_fail, !dbg !1124, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %146, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !1124

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %1(ptr nonnull @.str.273), !dbg !1124
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1124, !tbaa !1125
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1124
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !1124, !tbaa !1136
  %p0 = load ptr, ptr %args, align 8, !dbg !1124
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1124
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !1124
  %p056 = load ptr, ptr %p0, align 8, !dbg !1124
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !1124
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1124
  %tvmgen_default_fused_layout_transform_19.p0.shape = load ptr, ptr %4, align 8, !dbg !1124
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1124
  %tvmgen_default_fused_layout_transform_19.p0.strides = load ptr, ptr %5, align 8, !dbg !1124
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1124
  %dev_id = load i32, ptr %6, align 4, !dbg !1124
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !1124
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !1124
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !1124
  %tvmgen_default_fused_layout_transform_19.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !1124
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !1124
  %tvmgen_default_fused_layout_transform_19.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !1124
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !1124

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %9(ptr nonnull @.str.274), !dbg !1124
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !1124

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %10(ptr nonnull @.str.275), !dbg !1124
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1124
  %12 = load i32, ptr %11, align 4, !dbg !1124
  %13 = icmp eq i32 %12, 5, !dbg !1124
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !1124, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %14(ptr nonnull @.str.276), !dbg !1124
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1124
  %16 = load i16, ptr %15, align 2, !dbg !1124
  %17 = icmp eq i16 %16, 1, !dbg !1124
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1124
  %19 = load i8, ptr %18, align 1, !dbg !1124
  %20 = icmp eq i8 %19, 32, !dbg !1124
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1124
  %22 = load i8, ptr %21, align 1, !dbg !1124
  %23 = icmp eq i8 %22, 2, !dbg !1124
  %24 = and i1 %20, %23, !dbg !1124
  %25 = and i1 %17, %24, !dbg !1124
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !1124, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %26(ptr nonnull @.str.277), !dbg !1124
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_19.p0.shape, align 8, !dbg !1124, !tbaa !1138
  %28 = and i64 %27, 4294967295, !dbg !1124
  %29 = icmp eq i64 %28, 1, !dbg !1124
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !1124, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %30(ptr nonnull @.str.278), !dbg !1124
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_19.p0.shape, i64 1, !dbg !1124
  %32 = load i64, ptr %31, align 8, !dbg !1124, !tbaa !1148
  %33 = and i64 %32, 4294967295, !dbg !1124
  %34 = icmp eq i64 %33, 16, !dbg !1124
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !1124, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %35(ptr nonnull @.str.279), !dbg !1124
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_19.p0.shape, i64 2, !dbg !1124
  %37 = load i64, ptr %36, align 8, !dbg !1124, !tbaa !1150
  %38 = and i64 %37, 4294967295, !dbg !1124
  %39 = icmp eq i64 %38, 7, !dbg !1124
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !1124, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %40(ptr nonnull @.str.280), !dbg !1124
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_19.p0.shape, i64 3, !dbg !1124
  %42 = load i64, ptr %41, align 8, !dbg !1124, !tbaa !1153
  %43 = and i64 %42, 4294967295, !dbg !1124
  %44 = icmp eq i64 %43, 7, !dbg !1124
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !1124, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %45(ptr nonnull @.str.281), !dbg !1124
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_19.p0.shape, i64 4, !dbg !1124
  %47 = load i64, ptr %46, align 8, !dbg !1124, !tbaa !1155
  %48 = and i64 %47, 4294967295, !dbg !1124
  %49 = icmp eq i64 %48, 32, !dbg !1124
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !1124, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %50(ptr nonnull @.str.282), !dbg !1124
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_19.p0.strides, null, !dbg !1124
  br i1 %.not, label %if_end, label %if_then, !dbg !1124, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_19.p0.strides, i64 1, !dbg !1124
  %52 = load i64, ptr %51, align 8, !dbg !1124, !tbaa !1159
  %53 = and i64 %52, 4294967295, !dbg !1124
  %54 = icmp eq i64 %53, 1568, !dbg !1124
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_19.p0.strides, i64 2, !dbg !1124
  %56 = load i64, ptr %55, align 8, !dbg !1124, !tbaa !1169
  %57 = and i64 %56, 4294967295, !dbg !1124
  %58 = icmp eq i64 %57, 224, !dbg !1124
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_19.p0.strides, i64 3, !dbg !1124
  %60 = load i64, ptr %59, align 8, !dbg !1124, !tbaa !1172
  %61 = and i64 %60, 4294967295, !dbg !1124
  %62 = icmp eq i64 %61, 32, !dbg !1124
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_19.p0.strides, i64 4, !dbg !1124
  %64 = load i64, ptr %63, align 8, !dbg !1124, !tbaa !1174
  %65 = and i64 %64, 4294967295, !dbg !1124
  %66 = icmp eq i64 %65, 1, !dbg !1124
  %67 = and i1 %62, %66, !dbg !1124
  %68 = and i1 %58, %67, !dbg !1124
  %69 = and i1 %54, %68, !dbg !1124
  br i1 %69, label %if_end, label %assert_fail23, !dbg !1124, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1124
  %71 = load i64, ptr %70, align 8, !dbg !1124
  %72 = icmp eq i64 %71, 0, !dbg !1124
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !1124, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %73(ptr nonnull @.str.283), !dbg !1124
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %74(ptr nonnull @.str.284), !dbg !1124
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1124
  %76 = load i32, ptr %75, align 4, !dbg !1124
  %77 = icmp eq i32 %76, 1, !dbg !1124
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !1124, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %78(ptr nonnull @.str.285), !dbg !1124
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !1124
  %80 = load i32, ptr %79, align 4, !dbg !1124
  %81 = icmp eq i32 %80, 5, !dbg !1124
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !1124, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %82(ptr nonnull @.str.286), !dbg !1124
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !1124
  %84 = load i16, ptr %83, align 2, !dbg !1124
  %85 = icmp eq i16 %84, 1, !dbg !1124
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !1124
  %87 = load i8, ptr %86, align 1, !dbg !1124
  %88 = icmp eq i8 %87, 32, !dbg !1124
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !1124
  %90 = load i8, ptr %89, align 1, !dbg !1124
  %91 = icmp eq i8 %90, 2, !dbg !1124
  %92 = and i1 %88, %91, !dbg !1124
  %93 = and i1 %85, %92, !dbg !1124
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !1124, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %94(ptr nonnull @.str.287), !dbg !1124
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_19.T_layout_trans.shape, align 8, !dbg !1124, !tbaa !1178
  %96 = and i64 %95, 4294967295, !dbg !1124
  %97 = icmp eq i64 %96, 1, !dbg !1124
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !1124, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %98(ptr nonnull @.str.288), !dbg !1124
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_19.T_layout_trans.shape, i64 1, !dbg !1124
  %100 = load i64, ptr %99, align 8, !dbg !1124, !tbaa !1188
  %101 = and i64 %100, 4294967295, !dbg !1124
  %102 = icmp eq i64 %101, 1, !dbg !1124
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !1124, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %103(ptr nonnull @.str.289), !dbg !1124
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_19.T_layout_trans.shape, i64 2, !dbg !1124
  %105 = load i64, ptr %104, align 8, !dbg !1124, !tbaa !1190
  %106 = and i64 %105, 4294967295, !dbg !1124
  %107 = icmp eq i64 %106, 7, !dbg !1124
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !1124, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %108(ptr nonnull @.str.290), !dbg !1124
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_19.T_layout_trans.shape, i64 3, !dbg !1124
  %110 = load i64, ptr %109, align 8, !dbg !1124, !tbaa !1193
  %111 = and i64 %110, 4294967295, !dbg !1124
  %112 = icmp eq i64 %111, 7, !dbg !1124
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !1124, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %113(ptr nonnull @.str.291), !dbg !1124
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_19.T_layout_trans.shape, i64 4, !dbg !1124
  %115 = load i64, ptr %114, align 8, !dbg !1124, !tbaa !1195
  %116 = and i64 %115, 4294967295, !dbg !1124
  %117 = icmp eq i64 %116, 512, !dbg !1124
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !1124, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %118(ptr nonnull @.str.292), !dbg !1124
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_19.T_layout_trans.strides, null, !dbg !1124
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !1124, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_19.T_layout_trans.strides, i64 2, !dbg !1124
  %120 = load i64, ptr %119, align 8, !dbg !1124, !tbaa !1199
  %121 = and i64 %120, 4294967295, !dbg !1124
  %122 = icmp eq i64 %121, 3584, !dbg !1124
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_19.T_layout_trans.strides, i64 3, !dbg !1124
  %124 = load i64, ptr %123, align 8, !dbg !1124, !tbaa !1209
  %125 = and i64 %124, 4294967295, !dbg !1124
  %126 = icmp eq i64 %125, 512, !dbg !1124
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_19.T_layout_trans.strides, i64 4, !dbg !1124
  %128 = load i64, ptr %127, align 8, !dbg !1124, !tbaa !1211
  %129 = and i64 %128, 4294967295, !dbg !1124
  %130 = icmp eq i64 %129, 1, !dbg !1124
  %131 = and i1 %126, %130, !dbg !1124
  %132 = and i1 %122, %131, !dbg !1124
  br i1 %132, label %if_end46, label %assert_fail47, !dbg !1124, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %133 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !1124
  %134 = load i64, ptr %133, align 8, !dbg !1124
  %135 = icmp eq i64 %134, 0, !dbg !1124
  br i1 %135, label %assert_end50, label %assert_fail49, !dbg !1124, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %136(ptr nonnull @.str.293), !dbg !1124
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %137 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %137(ptr nonnull @.str.294), !dbg !1124
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !1124
  %139 = load i32, ptr %138, align 4, !dbg !1124
  %140 = icmp eq i32 %139, 1, !dbg !1124
  br i1 %140, label %assert_end52, label %assert_fail51, !dbg !1124, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %141(ptr nonnull @.str.295), !dbg !1124
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %142 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !1124
  %143 = load i32, ptr %142, align 4, !dbg !1124
  %144 = icmp eq i32 %dev_id, %143, !dbg !1124
  br i1 %144, label %assert_end54, label %assert_fail53, !dbg !1124, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1124, !tbaa !19
  tail call void %145(ptr nonnull @.str.296), !dbg !1124
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %146 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_19_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !1124
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_2(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1215 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1217, metadata !DIExpression()), !dbg !1223
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1218, metadata !DIExpression()), !dbg !1223
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1219, metadata !DIExpression()), !dbg !1223
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1220, metadata !DIExpression()), !dbg !1223
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1221, metadata !DIExpression()), !dbg !1223
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1222, metadata !DIExpression()), !dbg !1223
  %0 = icmp eq i32 %num_args, 2, !dbg !1223
  br i1 %0, label %assert_end, label %assert_fail, !dbg !1223, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %146, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !1223

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %1(ptr nonnull @.str.298), !dbg !1223
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1223, !tbaa !1224
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1223
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !1223, !tbaa !1235
  %p0 = load ptr, ptr %args, align 8, !dbg !1223
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1223
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !1223
  %p056 = load ptr, ptr %p0, align 8, !dbg !1223
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !1223
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1223
  %tvmgen_default_fused_layout_transform_2.p0.shape = load ptr, ptr %4, align 8, !dbg !1223
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1223
  %tvmgen_default_fused_layout_transform_2.p0.strides = load ptr, ptr %5, align 8, !dbg !1223
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1223
  %dev_id = load i32, ptr %6, align 4, !dbg !1223
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !1223
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !1223
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !1223
  %tvmgen_default_fused_layout_transform_2.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !1223
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !1223
  %tvmgen_default_fused_layout_transform_2.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !1223
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !1223

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %9(ptr nonnull @.str.299), !dbg !1223
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !1223

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %10(ptr nonnull @.str.300), !dbg !1223
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1223
  %12 = load i32, ptr %11, align 4, !dbg !1223
  %13 = icmp eq i32 %12, 5, !dbg !1223
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !1223, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %14(ptr nonnull @.str.301), !dbg !1223
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1223
  %16 = load i16, ptr %15, align 2, !dbg !1223
  %17 = icmp eq i16 %16, 1, !dbg !1223
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1223
  %19 = load i8, ptr %18, align 1, !dbg !1223
  %20 = icmp eq i8 %19, 32, !dbg !1223
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1223
  %22 = load i8, ptr %21, align 1, !dbg !1223
  %23 = icmp eq i8 %22, 2, !dbg !1223
  %24 = and i1 %20, %23, !dbg !1223
  %25 = and i1 %17, %24, !dbg !1223
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !1223, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %26(ptr nonnull @.str.302), !dbg !1223
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_2.p0.shape, align 8, !dbg !1223, !tbaa !1237
  %28 = and i64 %27, 4294967295, !dbg !1223
  %29 = icmp eq i64 %28, 1, !dbg !1223
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !1223, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %30(ptr nonnull @.str.303), !dbg !1223
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_2.p0.shape, i64 1, !dbg !1223
  %32 = load i64, ptr %31, align 8, !dbg !1223, !tbaa !1247
  %33 = and i64 %32, 4294967295, !dbg !1223
  %34 = icmp eq i64 %33, 4, !dbg !1223
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !1223, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %35(ptr nonnull @.str.304), !dbg !1223
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_2.p0.shape, i64 2, !dbg !1223
  %37 = load i64, ptr %36, align 8, !dbg !1223, !tbaa !1249
  %38 = and i64 %37, 4294967295, !dbg !1223
  %39 = icmp eq i64 %38, 56, !dbg !1223
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !1223, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %40(ptr nonnull @.str.305), !dbg !1223
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_2.p0.shape, i64 3, !dbg !1223
  %42 = load i64, ptr %41, align 8, !dbg !1223, !tbaa !1252
  %43 = and i64 %42, 4294967295, !dbg !1223
  %44 = icmp eq i64 %43, 56, !dbg !1223
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !1223, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %45(ptr nonnull @.str.306), !dbg !1223
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_2.p0.shape, i64 4, !dbg !1223
  %47 = load i64, ptr %46, align 8, !dbg !1223, !tbaa !1254
  %48 = and i64 %47, 4294967295, !dbg !1223
  %49 = icmp eq i64 %48, 16, !dbg !1223
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !1223, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %50(ptr nonnull @.str.307), !dbg !1223
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_2.p0.strides, null, !dbg !1223
  br i1 %.not, label %if_end, label %if_then, !dbg !1223, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_2.p0.strides, i64 1, !dbg !1223
  %52 = load i64, ptr %51, align 8, !dbg !1223, !tbaa !1258
  %53 = and i64 %52, 4294967295, !dbg !1223
  %54 = icmp eq i64 %53, 50176, !dbg !1223
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_2.p0.strides, i64 2, !dbg !1223
  %56 = load i64, ptr %55, align 8, !dbg !1223, !tbaa !1268
  %57 = and i64 %56, 4294967295, !dbg !1223
  %58 = icmp eq i64 %57, 896, !dbg !1223
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_2.p0.strides, i64 3, !dbg !1223
  %60 = load i64, ptr %59, align 8, !dbg !1223, !tbaa !1271
  %61 = and i64 %60, 4294967295, !dbg !1223
  %62 = icmp eq i64 %61, 16, !dbg !1223
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_2.p0.strides, i64 4, !dbg !1223
  %64 = load i64, ptr %63, align 8, !dbg !1223, !tbaa !1273
  %65 = and i64 %64, 4294967295, !dbg !1223
  %66 = icmp eq i64 %65, 1, !dbg !1223
  %67 = and i1 %62, %66, !dbg !1223
  %68 = and i1 %58, %67, !dbg !1223
  %69 = and i1 %54, %68, !dbg !1223
  br i1 %69, label %if_end, label %assert_fail23, !dbg !1223, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1223
  %71 = load i64, ptr %70, align 8, !dbg !1223
  %72 = icmp eq i64 %71, 0, !dbg !1223
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !1223, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %73(ptr nonnull @.str.308), !dbg !1223
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %74(ptr nonnull @.str.309), !dbg !1223
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1223
  %76 = load i32, ptr %75, align 4, !dbg !1223
  %77 = icmp eq i32 %76, 1, !dbg !1223
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !1223, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %78(ptr nonnull @.str.310), !dbg !1223
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !1223
  %80 = load i32, ptr %79, align 4, !dbg !1223
  %81 = icmp eq i32 %80, 5, !dbg !1223
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !1223, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %82(ptr nonnull @.str.311), !dbg !1223
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !1223
  %84 = load i16, ptr %83, align 2, !dbg !1223
  %85 = icmp eq i16 %84, 1, !dbg !1223
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !1223
  %87 = load i8, ptr %86, align 1, !dbg !1223
  %88 = icmp eq i8 %87, 32, !dbg !1223
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !1223
  %90 = load i8, ptr %89, align 1, !dbg !1223
  %91 = icmp eq i8 %90, 2, !dbg !1223
  %92 = and i1 %88, %91, !dbg !1223
  %93 = and i1 %85, %92, !dbg !1223
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !1223, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %94(ptr nonnull @.str.312), !dbg !1223
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_2.T_layout_trans.shape, align 8, !dbg !1223, !tbaa !1277
  %96 = and i64 %95, 4294967295, !dbg !1223
  %97 = icmp eq i64 %96, 1, !dbg !1223
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !1223, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %98(ptr nonnull @.str.313), !dbg !1223
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_2.T_layout_trans.shape, i64 1, !dbg !1223
  %100 = load i64, ptr %99, align 8, !dbg !1223, !tbaa !1287
  %101 = and i64 %100, 4294967295, !dbg !1223
  %102 = icmp eq i64 %101, 1, !dbg !1223
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !1223, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %103(ptr nonnull @.str.314), !dbg !1223
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_2.T_layout_trans.shape, i64 2, !dbg !1223
  %105 = load i64, ptr %104, align 8, !dbg !1223, !tbaa !1289
  %106 = and i64 %105, 4294967295, !dbg !1223
  %107 = icmp eq i64 %106, 56, !dbg !1223
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !1223, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %108(ptr nonnull @.str.315), !dbg !1223
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_2.T_layout_trans.shape, i64 3, !dbg !1223
  %110 = load i64, ptr %109, align 8, !dbg !1223, !tbaa !1292
  %111 = and i64 %110, 4294967295, !dbg !1223
  %112 = icmp eq i64 %111, 56, !dbg !1223
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !1223, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %113(ptr nonnull @.str.316), !dbg !1223
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_2.T_layout_trans.shape, i64 4, !dbg !1223
  %115 = load i64, ptr %114, align 8, !dbg !1223, !tbaa !1294
  %116 = and i64 %115, 4294967295, !dbg !1223
  %117 = icmp eq i64 %116, 64, !dbg !1223
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !1223, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %118(ptr nonnull @.str.317), !dbg !1223
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_2.T_layout_trans.strides, null, !dbg !1223
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !1223, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_2.T_layout_trans.strides, i64 2, !dbg !1223
  %120 = load i64, ptr %119, align 8, !dbg !1223, !tbaa !1298
  %121 = and i64 %120, 4294967295, !dbg !1223
  %122 = icmp eq i64 %121, 3584, !dbg !1223
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_2.T_layout_trans.strides, i64 3, !dbg !1223
  %124 = load i64, ptr %123, align 8, !dbg !1223, !tbaa !1308
  %125 = and i64 %124, 4294967295, !dbg !1223
  %126 = icmp eq i64 %125, 64, !dbg !1223
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_2.T_layout_trans.strides, i64 4, !dbg !1223
  %128 = load i64, ptr %127, align 8, !dbg !1223, !tbaa !1310
  %129 = and i64 %128, 4294967295, !dbg !1223
  %130 = icmp eq i64 %129, 1, !dbg !1223
  %131 = and i1 %126, %130, !dbg !1223
  %132 = and i1 %122, %131, !dbg !1223
  br i1 %132, label %if_end46, label %assert_fail47, !dbg !1223, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %133 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !1223
  %134 = load i64, ptr %133, align 8, !dbg !1223
  %135 = icmp eq i64 %134, 0, !dbg !1223
  br i1 %135, label %assert_end50, label %assert_fail49, !dbg !1223, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %136(ptr nonnull @.str.318), !dbg !1223
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %137 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %137(ptr nonnull @.str.319), !dbg !1223
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !1223
  %139 = load i32, ptr %138, align 4, !dbg !1223
  %140 = icmp eq i32 %139, 1, !dbg !1223
  br i1 %140, label %assert_end52, label %assert_fail51, !dbg !1223, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %141(ptr nonnull @.str.320), !dbg !1223
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %142 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !1223
  %143 = load i32, ptr %142, align 4, !dbg !1223
  %144 = icmp eq i32 %dev_id, %143, !dbg !1223
  br i1 %144, label %assert_end54, label %assert_fail53, !dbg !1223, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1223, !tbaa !19
  tail call void %145(ptr nonnull @.str.321), !dbg !1223
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %146 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_2_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !1223
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_20(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1314 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1316, metadata !DIExpression()), !dbg !1322
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1317, metadata !DIExpression()), !dbg !1322
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1318, metadata !DIExpression()), !dbg !1322
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1319, metadata !DIExpression()), !dbg !1322
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1320, metadata !DIExpression()), !dbg !1322
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1321, metadata !DIExpression()), !dbg !1322
  %0 = icmp eq i32 %num_args, 2, !dbg !1322
  br i1 %0, label %assert_end, label %assert_fail, !dbg !1322, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %151, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !1322

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %1(ptr nonnull @.str.323), !dbg !1322
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1322, !tbaa !1323
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1322
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !1322, !tbaa !1334
  %p0 = load ptr, ptr %args, align 8, !dbg !1322
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1322
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !1322
  %p056 = load ptr, ptr %p0, align 8, !dbg !1322
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !1322
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1322
  %tvmgen_default_fused_layout_transform_20.p0.shape = load ptr, ptr %4, align 8, !dbg !1322
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1322
  %tvmgen_default_fused_layout_transform_20.p0.strides = load ptr, ptr %5, align 8, !dbg !1322
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1322
  %dev_id = load i32, ptr %6, align 4, !dbg !1322
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !1322
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !1322
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !1322
  %tvmgen_default_fused_layout_transform_20.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !1322
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !1322
  %tvmgen_default_fused_layout_transform_20.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !1322
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !1322

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %9(ptr nonnull @.str.324), !dbg !1322
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !1322

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %10(ptr nonnull @.str.325), !dbg !1322
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1322
  %12 = load i32, ptr %11, align 4, !dbg !1322
  %13 = icmp eq i32 %12, 5, !dbg !1322
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !1322, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %14(ptr nonnull @.str.326), !dbg !1322
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1322
  %16 = load i16, ptr %15, align 2, !dbg !1322
  %17 = icmp eq i16 %16, 1, !dbg !1322
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1322
  %19 = load i8, ptr %18, align 1, !dbg !1322
  %20 = icmp eq i8 %19, 32, !dbg !1322
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1322
  %22 = load i8, ptr %21, align 1, !dbg !1322
  %23 = icmp eq i8 %22, 2, !dbg !1322
  %24 = and i1 %20, %23, !dbg !1322
  %25 = and i1 %17, %24, !dbg !1322
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !1322, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %26(ptr nonnull @.str.327), !dbg !1322
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_20.p0.shape, align 8, !dbg !1322, !tbaa !1336
  %28 = and i64 %27, 4294967295, !dbg !1322
  %29 = icmp eq i64 %28, 1, !dbg !1322
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !1322, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %30(ptr nonnull @.str.328), !dbg !1322
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_20.p0.shape, i64 1, !dbg !1322
  %32 = load i64, ptr %31, align 8, !dbg !1322, !tbaa !1346
  %33 = and i64 %32, 4294967295, !dbg !1322
  %34 = icmp eq i64 %33, 16, !dbg !1322
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !1322, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %35(ptr nonnull @.str.329), !dbg !1322
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_20.p0.shape, i64 2, !dbg !1322
  %37 = load i64, ptr %36, align 8, !dbg !1322, !tbaa !1348
  %38 = and i64 %37, 4294967295, !dbg !1322
  %39 = icmp eq i64 %38, 7, !dbg !1322
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !1322, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %40(ptr nonnull @.str.330), !dbg !1322
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_20.p0.shape, i64 3, !dbg !1322
  %42 = load i64, ptr %41, align 8, !dbg !1322, !tbaa !1351
  %43 = and i64 %42, 4294967295, !dbg !1322
  %44 = icmp eq i64 %43, 7, !dbg !1322
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !1322, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %45(ptr nonnull @.str.331), !dbg !1322
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_20.p0.shape, i64 4, !dbg !1322
  %47 = load i64, ptr %46, align 8, !dbg !1322, !tbaa !1353
  %48 = and i64 %47, 4294967295, !dbg !1322
  %49 = icmp eq i64 %48, 32, !dbg !1322
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !1322, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %50(ptr nonnull @.str.332), !dbg !1322
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_20.p0.strides, null, !dbg !1322
  br i1 %.not, label %if_end, label %if_then, !dbg !1322, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_20.p0.strides, i64 1, !dbg !1322
  %52 = load i64, ptr %51, align 8, !dbg !1322, !tbaa !1357
  %53 = and i64 %52, 4294967295, !dbg !1322
  %54 = icmp eq i64 %53, 1568, !dbg !1322
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_20.p0.strides, i64 2, !dbg !1322
  %56 = load i64, ptr %55, align 8, !dbg !1322, !tbaa !1367
  %57 = and i64 %56, 4294967295, !dbg !1322
  %58 = icmp eq i64 %57, 224, !dbg !1322
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_20.p0.strides, i64 3, !dbg !1322
  %60 = load i64, ptr %59, align 8, !dbg !1322, !tbaa !1370
  %61 = and i64 %60, 4294967295, !dbg !1322
  %62 = icmp eq i64 %61, 32, !dbg !1322
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_20.p0.strides, i64 4, !dbg !1322
  %64 = load i64, ptr %63, align 8, !dbg !1322, !tbaa !1372
  %65 = and i64 %64, 4294967295, !dbg !1322
  %66 = icmp eq i64 %65, 1, !dbg !1322
  %67 = and i1 %62, %66, !dbg !1322
  %68 = and i1 %58, %67, !dbg !1322
  %69 = and i1 %54, %68, !dbg !1322
  br i1 %69, label %if_end, label %assert_fail23, !dbg !1322, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1322
  %71 = load i64, ptr %70, align 8, !dbg !1322
  %72 = icmp eq i64 %71, 0, !dbg !1322
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !1322, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %73(ptr nonnull @.str.333), !dbg !1322
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %74(ptr nonnull @.str.334), !dbg !1322
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1322
  %76 = load i32, ptr %75, align 4, !dbg !1322
  %77 = icmp eq i32 %76, 1, !dbg !1322
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !1322, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %78(ptr nonnull @.str.335), !dbg !1322
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !1322
  %80 = load i32, ptr %79, align 4, !dbg !1322
  %81 = icmp eq i32 %80, 5, !dbg !1322
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !1322, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %82(ptr nonnull @.str.336), !dbg !1322
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !1322
  %84 = load i16, ptr %83, align 2, !dbg !1322
  %85 = icmp eq i16 %84, 1, !dbg !1322
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !1322
  %87 = load i8, ptr %86, align 1, !dbg !1322
  %88 = icmp eq i8 %87, 32, !dbg !1322
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !1322
  %90 = load i8, ptr %89, align 1, !dbg !1322
  %91 = icmp eq i8 %90, 2, !dbg !1322
  %92 = and i1 %88, %91, !dbg !1322
  %93 = and i1 %85, %92, !dbg !1322
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !1322, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %94(ptr nonnull @.str.337), !dbg !1322
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_20.T_layout_trans.shape, align 8, !dbg !1322, !tbaa !1376
  %96 = and i64 %95, 4294967295, !dbg !1322
  %97 = icmp eq i64 %96, 1, !dbg !1322
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !1322, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %98(ptr nonnull @.str.338), !dbg !1322
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_20.T_layout_trans.shape, i64 1, !dbg !1322
  %100 = load i64, ptr %99, align 8, !dbg !1322, !tbaa !1386
  %101 = and i64 %100, 4294967295, !dbg !1322
  %102 = icmp eq i64 %101, 128, !dbg !1322
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !1322, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %103(ptr nonnull @.str.339), !dbg !1322
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_20.T_layout_trans.shape, i64 2, !dbg !1322
  %105 = load i64, ptr %104, align 8, !dbg !1322, !tbaa !1388
  %106 = and i64 %105, 4294967295, !dbg !1322
  %107 = icmp eq i64 %106, 7, !dbg !1322
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !1322, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %108(ptr nonnull @.str.340), !dbg !1322
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_20.T_layout_trans.shape, i64 3, !dbg !1322
  %110 = load i64, ptr %109, align 8, !dbg !1322, !tbaa !1391
  %111 = and i64 %110, 4294967295, !dbg !1322
  %112 = icmp eq i64 %111, 7, !dbg !1322
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !1322, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %113(ptr nonnull @.str.341), !dbg !1322
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_20.T_layout_trans.shape, i64 4, !dbg !1322
  %115 = load i64, ptr %114, align 8, !dbg !1322, !tbaa !1393
  %116 = and i64 %115, 4294967295, !dbg !1322
  %117 = icmp eq i64 %116, 4, !dbg !1322
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !1322, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %118(ptr nonnull @.str.342), !dbg !1322
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_20.T_layout_trans.strides, null, !dbg !1322
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !1322, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_20.T_layout_trans.strides, i64 1, !dbg !1322
  %120 = load i64, ptr %119, align 8, !dbg !1322, !tbaa !1397
  %121 = and i64 %120, 4294967295, !dbg !1322
  %122 = icmp eq i64 %121, 196, !dbg !1322
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_20.T_layout_trans.strides, i64 2, !dbg !1322
  %124 = load i64, ptr %123, align 8, !dbg !1322, !tbaa !1407
  %125 = and i64 %124, 4294967295, !dbg !1322
  %126 = icmp eq i64 %125, 28, !dbg !1322
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_20.T_layout_trans.strides, i64 3, !dbg !1322
  %128 = load i64, ptr %127, align 8, !dbg !1322, !tbaa !1410
  %129 = and i64 %128, 4294967295, !dbg !1322
  %130 = icmp eq i64 %129, 4, !dbg !1322
  %131 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_20.T_layout_trans.strides, i64 4, !dbg !1322
  %132 = load i64, ptr %131, align 8, !dbg !1322, !tbaa !1412
  %133 = and i64 %132, 4294967295, !dbg !1322
  %134 = icmp eq i64 %133, 1, !dbg !1322
  %135 = and i1 %130, %134, !dbg !1322
  %136 = and i1 %126, %135, !dbg !1322
  %137 = and i1 %122, %136, !dbg !1322
  br i1 %137, label %if_end46, label %assert_fail47, !dbg !1322, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !1322
  %139 = load i64, ptr %138, align 8, !dbg !1322
  %140 = icmp eq i64 %139, 0, !dbg !1322
  br i1 %140, label %assert_end50, label %assert_fail49, !dbg !1322, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %141(ptr nonnull @.str.343), !dbg !1322
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %142 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %142(ptr nonnull @.str.344), !dbg !1322
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %143 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !1322
  %144 = load i32, ptr %143, align 4, !dbg !1322
  %145 = icmp eq i32 %144, 1, !dbg !1322
  br i1 %145, label %assert_end52, label %assert_fail51, !dbg !1322, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %146(ptr nonnull @.str.345), !dbg !1322
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %147 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !1322
  %148 = load i32, ptr %147, align 4, !dbg !1322
  %149 = icmp eq i32 %dev_id, %148, !dbg !1322
  br i1 %149, label %assert_end54, label %assert_fail53, !dbg !1322, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1322, !tbaa !19
  tail call void %150(ptr nonnull @.str.346), !dbg !1322
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %151 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_20_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !1322
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_3(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1416 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1418, metadata !DIExpression()), !dbg !1424
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1419, metadata !DIExpression()), !dbg !1424
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1420, metadata !DIExpression()), !dbg !1424
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1421, metadata !DIExpression()), !dbg !1424
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1422, metadata !DIExpression()), !dbg !1424
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1423, metadata !DIExpression()), !dbg !1424
  %0 = icmp eq i32 %num_args, 2, !dbg !1424
  br i1 %0, label %assert_end, label %assert_fail, !dbg !1424, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %151, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !1424

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %1(ptr nonnull @.str.348), !dbg !1424
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1424, !tbaa !1425
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1424
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !1424, !tbaa !1436
  %p0 = load ptr, ptr %args, align 8, !dbg !1424
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1424
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !1424
  %p056 = load ptr, ptr %p0, align 8, !dbg !1424
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !1424
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1424
  %tvmgen_default_fused_layout_transform_3.p0.shape = load ptr, ptr %4, align 8, !dbg !1424
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1424
  %tvmgen_default_fused_layout_transform_3.p0.strides = load ptr, ptr %5, align 8, !dbg !1424
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1424
  %dev_id = load i32, ptr %6, align 4, !dbg !1424
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !1424
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !1424
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !1424
  %tvmgen_default_fused_layout_transform_3.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !1424
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !1424
  %tvmgen_default_fused_layout_transform_3.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !1424
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !1424

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %9(ptr nonnull @.str.349), !dbg !1424
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !1424

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %10(ptr nonnull @.str.350), !dbg !1424
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1424
  %12 = load i32, ptr %11, align 4, !dbg !1424
  %13 = icmp eq i32 %12, 5, !dbg !1424
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !1424, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %14(ptr nonnull @.str.351), !dbg !1424
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1424
  %16 = load i16, ptr %15, align 2, !dbg !1424
  %17 = icmp eq i16 %16, 1, !dbg !1424
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1424
  %19 = load i8, ptr %18, align 1, !dbg !1424
  %20 = icmp eq i8 %19, 32, !dbg !1424
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1424
  %22 = load i8, ptr %21, align 1, !dbg !1424
  %23 = icmp eq i8 %22, 2, !dbg !1424
  %24 = and i1 %20, %23, !dbg !1424
  %25 = and i1 %17, %24, !dbg !1424
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !1424, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %26(ptr nonnull @.str.352), !dbg !1424
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_3.p0.shape, align 8, !dbg !1424, !tbaa !1438
  %28 = and i64 %27, 4294967295, !dbg !1424
  %29 = icmp eq i64 %28, 1, !dbg !1424
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !1424, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %30(ptr nonnull @.str.353), !dbg !1424
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_3.p0.shape, i64 1, !dbg !1424
  %32 = load i64, ptr %31, align 8, !dbg !1424, !tbaa !1448
  %33 = and i64 %32, 4294967295, !dbg !1424
  %34 = icmp eq i64 %33, 2, !dbg !1424
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !1424, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %35(ptr nonnull @.str.354), !dbg !1424
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_3.p0.shape, i64 2, !dbg !1424
  %37 = load i64, ptr %36, align 8, !dbg !1424, !tbaa !1450
  %38 = and i64 %37, 4294967295, !dbg !1424
  %39 = icmp eq i64 %38, 56, !dbg !1424
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !1424, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %40(ptr nonnull @.str.355), !dbg !1424
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_3.p0.shape, i64 3, !dbg !1424
  %42 = load i64, ptr %41, align 8, !dbg !1424, !tbaa !1453
  %43 = and i64 %42, 4294967295, !dbg !1424
  %44 = icmp eq i64 %43, 56, !dbg !1424
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !1424, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %45(ptr nonnull @.str.356), !dbg !1424
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_3.p0.shape, i64 4, !dbg !1424
  %47 = load i64, ptr %46, align 8, !dbg !1424, !tbaa !1455
  %48 = and i64 %47, 4294967295, !dbg !1424
  %49 = icmp eq i64 %48, 32, !dbg !1424
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !1424, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %50(ptr nonnull @.str.357), !dbg !1424
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_3.p0.strides, null, !dbg !1424
  br i1 %.not, label %if_end, label %if_then, !dbg !1424, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_3.p0.strides, i64 1, !dbg !1424
  %52 = load i64, ptr %51, align 8, !dbg !1424, !tbaa !1459
  %53 = and i64 %52, 4294967295, !dbg !1424
  %54 = icmp eq i64 %53, 100352, !dbg !1424
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_3.p0.strides, i64 2, !dbg !1424
  %56 = load i64, ptr %55, align 8, !dbg !1424, !tbaa !1469
  %57 = and i64 %56, 4294967295, !dbg !1424
  %58 = icmp eq i64 %57, 1792, !dbg !1424
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_3.p0.strides, i64 3, !dbg !1424
  %60 = load i64, ptr %59, align 8, !dbg !1424, !tbaa !1472
  %61 = and i64 %60, 4294967295, !dbg !1424
  %62 = icmp eq i64 %61, 32, !dbg !1424
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_3.p0.strides, i64 4, !dbg !1424
  %64 = load i64, ptr %63, align 8, !dbg !1424, !tbaa !1474
  %65 = and i64 %64, 4294967295, !dbg !1424
  %66 = icmp eq i64 %65, 1, !dbg !1424
  %67 = and i1 %62, %66, !dbg !1424
  %68 = and i1 %58, %67, !dbg !1424
  %69 = and i1 %54, %68, !dbg !1424
  br i1 %69, label %if_end, label %assert_fail23, !dbg !1424, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1424
  %71 = load i64, ptr %70, align 8, !dbg !1424
  %72 = icmp eq i64 %71, 0, !dbg !1424
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !1424, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %73(ptr nonnull @.str.358), !dbg !1424
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %74(ptr nonnull @.str.359), !dbg !1424
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1424
  %76 = load i32, ptr %75, align 4, !dbg !1424
  %77 = icmp eq i32 %76, 1, !dbg !1424
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !1424, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %78(ptr nonnull @.str.360), !dbg !1424
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !1424
  %80 = load i32, ptr %79, align 4, !dbg !1424
  %81 = icmp eq i32 %80, 5, !dbg !1424
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !1424, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %82(ptr nonnull @.str.361), !dbg !1424
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !1424
  %84 = load i16, ptr %83, align 2, !dbg !1424
  %85 = icmp eq i16 %84, 1, !dbg !1424
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !1424
  %87 = load i8, ptr %86, align 1, !dbg !1424
  %88 = icmp eq i8 %87, 32, !dbg !1424
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !1424
  %90 = load i8, ptr %89, align 1, !dbg !1424
  %91 = icmp eq i8 %90, 2, !dbg !1424
  %92 = and i1 %88, %91, !dbg !1424
  %93 = and i1 %85, %92, !dbg !1424
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !1424, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %94(ptr nonnull @.str.362), !dbg !1424
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_3.T_layout_trans.shape, align 8, !dbg !1424, !tbaa !1478
  %96 = and i64 %95, 4294967295, !dbg !1424
  %97 = icmp eq i64 %96, 1, !dbg !1424
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !1424, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %98(ptr nonnull @.str.363), !dbg !1424
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_3.T_layout_trans.shape, i64 1, !dbg !1424
  %100 = load i64, ptr %99, align 8, !dbg !1424, !tbaa !1488
  %101 = and i64 %100, 4294967295, !dbg !1424
  %102 = icmp eq i64 %101, 16, !dbg !1424
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !1424, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %103(ptr nonnull @.str.364), !dbg !1424
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_3.T_layout_trans.shape, i64 2, !dbg !1424
  %105 = load i64, ptr %104, align 8, !dbg !1424, !tbaa !1490
  %106 = and i64 %105, 4294967295, !dbg !1424
  %107 = icmp eq i64 %106, 56, !dbg !1424
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !1424, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %108(ptr nonnull @.str.365), !dbg !1424
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_3.T_layout_trans.shape, i64 3, !dbg !1424
  %110 = load i64, ptr %109, align 8, !dbg !1424, !tbaa !1493
  %111 = and i64 %110, 4294967295, !dbg !1424
  %112 = icmp eq i64 %111, 56, !dbg !1424
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !1424, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %113(ptr nonnull @.str.366), !dbg !1424
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_3.T_layout_trans.shape, i64 4, !dbg !1424
  %115 = load i64, ptr %114, align 8, !dbg !1424, !tbaa !1495
  %116 = and i64 %115, 4294967295, !dbg !1424
  %117 = icmp eq i64 %116, 4, !dbg !1424
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !1424, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %118(ptr nonnull @.str.367), !dbg !1424
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_3.T_layout_trans.strides, null, !dbg !1424
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !1424, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_3.T_layout_trans.strides, i64 1, !dbg !1424
  %120 = load i64, ptr %119, align 8, !dbg !1424, !tbaa !1499
  %121 = and i64 %120, 4294967295, !dbg !1424
  %122 = icmp eq i64 %121, 12544, !dbg !1424
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_3.T_layout_trans.strides, i64 2, !dbg !1424
  %124 = load i64, ptr %123, align 8, !dbg !1424, !tbaa !1509
  %125 = and i64 %124, 4294967295, !dbg !1424
  %126 = icmp eq i64 %125, 224, !dbg !1424
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_3.T_layout_trans.strides, i64 3, !dbg !1424
  %128 = load i64, ptr %127, align 8, !dbg !1424, !tbaa !1512
  %129 = and i64 %128, 4294967295, !dbg !1424
  %130 = icmp eq i64 %129, 4, !dbg !1424
  %131 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_3.T_layout_trans.strides, i64 4, !dbg !1424
  %132 = load i64, ptr %131, align 8, !dbg !1424, !tbaa !1514
  %133 = and i64 %132, 4294967295, !dbg !1424
  %134 = icmp eq i64 %133, 1, !dbg !1424
  %135 = and i1 %130, %134, !dbg !1424
  %136 = and i1 %126, %135, !dbg !1424
  %137 = and i1 %122, %136, !dbg !1424
  br i1 %137, label %if_end46, label %assert_fail47, !dbg !1424, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !1424
  %139 = load i64, ptr %138, align 8, !dbg !1424
  %140 = icmp eq i64 %139, 0, !dbg !1424
  br i1 %140, label %assert_end50, label %assert_fail49, !dbg !1424, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %141(ptr nonnull @.str.368), !dbg !1424
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %142 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %142(ptr nonnull @.str.369), !dbg !1424
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %143 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !1424
  %144 = load i32, ptr %143, align 4, !dbg !1424
  %145 = icmp eq i32 %144, 1, !dbg !1424
  br i1 %145, label %assert_end52, label %assert_fail51, !dbg !1424, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %146(ptr nonnull @.str.370), !dbg !1424
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %147 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !1424
  %148 = load i32, ptr %147, align 4, !dbg !1424
  %149 = icmp eq i32 %dev_id, %148, !dbg !1424
  br i1 %149, label %assert_end54, label %assert_fail53, !dbg !1424, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1424, !tbaa !19
  tail call void %150(ptr nonnull @.str.371), !dbg !1424
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %151 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_3_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !1424
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_4(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1518 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1520, metadata !DIExpression()), !dbg !1526
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1521, metadata !DIExpression()), !dbg !1526
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1522, metadata !DIExpression()), !dbg !1526
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1523, metadata !DIExpression()), !dbg !1526
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1524, metadata !DIExpression()), !dbg !1526
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1525, metadata !DIExpression()), !dbg !1526
  %0 = icmp eq i32 %num_args, 2, !dbg !1526
  br i1 %0, label %assert_end, label %assert_fail, !dbg !1526, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %146, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !1526

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %1(ptr nonnull @.str.373), !dbg !1526
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1526, !tbaa !1527
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1526
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !1526, !tbaa !1538
  %p0 = load ptr, ptr %args, align 8, !dbg !1526
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1526
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !1526
  %p056 = load ptr, ptr %p0, align 8, !dbg !1526
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !1526
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1526
  %tvmgen_default_fused_layout_transform_4.p0.shape = load ptr, ptr %4, align 8, !dbg !1526
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1526
  %tvmgen_default_fused_layout_transform_4.p0.strides = load ptr, ptr %5, align 8, !dbg !1526
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1526
  %dev_id = load i32, ptr %6, align 4, !dbg !1526
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !1526
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !1526
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !1526
  %tvmgen_default_fused_layout_transform_4.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !1526
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !1526
  %tvmgen_default_fused_layout_transform_4.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !1526
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !1526

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %9(ptr nonnull @.str.374), !dbg !1526
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !1526

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %10(ptr nonnull @.str.375), !dbg !1526
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1526
  %12 = load i32, ptr %11, align 4, !dbg !1526
  %13 = icmp eq i32 %12, 5, !dbg !1526
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !1526, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %14(ptr nonnull @.str.376), !dbg !1526
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1526
  %16 = load i16, ptr %15, align 2, !dbg !1526
  %17 = icmp eq i16 %16, 1, !dbg !1526
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1526
  %19 = load i8, ptr %18, align 1, !dbg !1526
  %20 = icmp eq i8 %19, 32, !dbg !1526
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1526
  %22 = load i8, ptr %21, align 1, !dbg !1526
  %23 = icmp eq i8 %22, 2, !dbg !1526
  %24 = and i1 %20, %23, !dbg !1526
  %25 = and i1 %17, %24, !dbg !1526
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !1526, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %26(ptr nonnull @.str.377), !dbg !1526
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_4.p0.shape, align 8, !dbg !1526, !tbaa !1540
  %28 = and i64 %27, 4294967295, !dbg !1526
  %29 = icmp eq i64 %28, 1, !dbg !1526
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !1526, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %30(ptr nonnull @.str.378), !dbg !1526
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_4.p0.shape, i64 1, !dbg !1526
  %32 = load i64, ptr %31, align 8, !dbg !1526, !tbaa !1550
  %33 = and i64 %32, 4294967295, !dbg !1526
  %34 = icmp eq i64 %33, 8, !dbg !1526
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !1526, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %35(ptr nonnull @.str.379), !dbg !1526
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_4.p0.shape, i64 2, !dbg !1526
  %37 = load i64, ptr %36, align 8, !dbg !1526, !tbaa !1552
  %38 = and i64 %37, 4294967295, !dbg !1526
  %39 = icmp eq i64 %38, 56, !dbg !1526
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !1526, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %40(ptr nonnull @.str.380), !dbg !1526
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_4.p0.shape, i64 3, !dbg !1526
  %42 = load i64, ptr %41, align 8, !dbg !1526, !tbaa !1555
  %43 = and i64 %42, 4294967295, !dbg !1526
  %44 = icmp eq i64 %43, 56, !dbg !1526
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !1526, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %45(ptr nonnull @.str.381), !dbg !1526
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_4.p0.shape, i64 4, !dbg !1526
  %47 = load i64, ptr %46, align 8, !dbg !1526, !tbaa !1557
  %48 = and i64 %47, 4294967295, !dbg !1526
  %49 = icmp eq i64 %48, 32, !dbg !1526
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !1526, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %50(ptr nonnull @.str.382), !dbg !1526
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_4.p0.strides, null, !dbg !1526
  br i1 %.not, label %if_end, label %if_then, !dbg !1526, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_4.p0.strides, i64 1, !dbg !1526
  %52 = load i64, ptr %51, align 8, !dbg !1526, !tbaa !1561
  %53 = and i64 %52, 4294967295, !dbg !1526
  %54 = icmp eq i64 %53, 100352, !dbg !1526
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_4.p0.strides, i64 2, !dbg !1526
  %56 = load i64, ptr %55, align 8, !dbg !1526, !tbaa !1571
  %57 = and i64 %56, 4294967295, !dbg !1526
  %58 = icmp eq i64 %57, 1792, !dbg !1526
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_4.p0.strides, i64 3, !dbg !1526
  %60 = load i64, ptr %59, align 8, !dbg !1526, !tbaa !1574
  %61 = and i64 %60, 4294967295, !dbg !1526
  %62 = icmp eq i64 %61, 32, !dbg !1526
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_4.p0.strides, i64 4, !dbg !1526
  %64 = load i64, ptr %63, align 8, !dbg !1526, !tbaa !1576
  %65 = and i64 %64, 4294967295, !dbg !1526
  %66 = icmp eq i64 %65, 1, !dbg !1526
  %67 = and i1 %62, %66, !dbg !1526
  %68 = and i1 %58, %67, !dbg !1526
  %69 = and i1 %54, %68, !dbg !1526
  br i1 %69, label %if_end, label %assert_fail23, !dbg !1526, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1526
  %71 = load i64, ptr %70, align 8, !dbg !1526
  %72 = icmp eq i64 %71, 0, !dbg !1526
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !1526, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %73(ptr nonnull @.str.383), !dbg !1526
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %74(ptr nonnull @.str.384), !dbg !1526
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1526
  %76 = load i32, ptr %75, align 4, !dbg !1526
  %77 = icmp eq i32 %76, 1, !dbg !1526
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !1526, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %78(ptr nonnull @.str.385), !dbg !1526
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !1526
  %80 = load i32, ptr %79, align 4, !dbg !1526
  %81 = icmp eq i32 %80, 5, !dbg !1526
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !1526, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %82(ptr nonnull @.str.386), !dbg !1526
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !1526
  %84 = load i16, ptr %83, align 2, !dbg !1526
  %85 = icmp eq i16 %84, 1, !dbg !1526
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !1526
  %87 = load i8, ptr %86, align 1, !dbg !1526
  %88 = icmp eq i8 %87, 32, !dbg !1526
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !1526
  %90 = load i8, ptr %89, align 1, !dbg !1526
  %91 = icmp eq i8 %90, 2, !dbg !1526
  %92 = and i1 %88, %91, !dbg !1526
  %93 = and i1 %85, %92, !dbg !1526
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !1526, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %94(ptr nonnull @.str.387), !dbg !1526
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_4.T_layout_trans.shape, align 8, !dbg !1526, !tbaa !1580
  %96 = and i64 %95, 4294967295, !dbg !1526
  %97 = icmp eq i64 %96, 1, !dbg !1526
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !1526, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %98(ptr nonnull @.str.388), !dbg !1526
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_4.T_layout_trans.shape, i64 1, !dbg !1526
  %100 = load i64, ptr %99, align 8, !dbg !1526, !tbaa !1590
  %101 = and i64 %100, 4294967295, !dbg !1526
  %102 = icmp eq i64 %101, 1, !dbg !1526
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !1526, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %103(ptr nonnull @.str.389), !dbg !1526
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_4.T_layout_trans.shape, i64 2, !dbg !1526
  %105 = load i64, ptr %104, align 8, !dbg !1526, !tbaa !1592
  %106 = and i64 %105, 4294967295, !dbg !1526
  %107 = icmp eq i64 %106, 56, !dbg !1526
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !1526, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %108(ptr nonnull @.str.390), !dbg !1526
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_4.T_layout_trans.shape, i64 3, !dbg !1526
  %110 = load i64, ptr %109, align 8, !dbg !1526, !tbaa !1595
  %111 = and i64 %110, 4294967295, !dbg !1526
  %112 = icmp eq i64 %111, 56, !dbg !1526
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !1526, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %113(ptr nonnull @.str.391), !dbg !1526
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_4.T_layout_trans.shape, i64 4, !dbg !1526
  %115 = load i64, ptr %114, align 8, !dbg !1526, !tbaa !1597
  %116 = and i64 %115, 4294967295, !dbg !1526
  %117 = icmp eq i64 %116, 256, !dbg !1526
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !1526, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %118(ptr nonnull @.str.392), !dbg !1526
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_4.T_layout_trans.strides, null, !dbg !1526
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !1526, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_4.T_layout_trans.strides, i64 2, !dbg !1526
  %120 = load i64, ptr %119, align 8, !dbg !1526, !tbaa !1601
  %121 = and i64 %120, 4294967295, !dbg !1526
  %122 = icmp eq i64 %121, 14336, !dbg !1526
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_4.T_layout_trans.strides, i64 3, !dbg !1526
  %124 = load i64, ptr %123, align 8, !dbg !1526, !tbaa !1611
  %125 = and i64 %124, 4294967295, !dbg !1526
  %126 = icmp eq i64 %125, 256, !dbg !1526
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_4.T_layout_trans.strides, i64 4, !dbg !1526
  %128 = load i64, ptr %127, align 8, !dbg !1526, !tbaa !1613
  %129 = and i64 %128, 4294967295, !dbg !1526
  %130 = icmp eq i64 %129, 1, !dbg !1526
  %131 = and i1 %126, %130, !dbg !1526
  %132 = and i1 %122, %131, !dbg !1526
  br i1 %132, label %if_end46, label %assert_fail47, !dbg !1526, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %133 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !1526
  %134 = load i64, ptr %133, align 8, !dbg !1526
  %135 = icmp eq i64 %134, 0, !dbg !1526
  br i1 %135, label %assert_end50, label %assert_fail49, !dbg !1526, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %136(ptr nonnull @.str.393), !dbg !1526
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %137 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %137(ptr nonnull @.str.394), !dbg !1526
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !1526
  %139 = load i32, ptr %138, align 4, !dbg !1526
  %140 = icmp eq i32 %139, 1, !dbg !1526
  br i1 %140, label %assert_end52, label %assert_fail51, !dbg !1526, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %141(ptr nonnull @.str.395), !dbg !1526
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %142 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !1526
  %143 = load i32, ptr %142, align 4, !dbg !1526
  %144 = icmp eq i32 %dev_id, %143, !dbg !1526
  br i1 %144, label %assert_end54, label %assert_fail53, !dbg !1526, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1526, !tbaa !19
  tail call void %145(ptr nonnull @.str.396), !dbg !1526
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %146 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_4_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !1526
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_5(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1617 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1619, metadata !DIExpression()), !dbg !1625
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1620, metadata !DIExpression()), !dbg !1625
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1621, metadata !DIExpression()), !dbg !1625
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1622, metadata !DIExpression()), !dbg !1625
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1623, metadata !DIExpression()), !dbg !1625
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1624, metadata !DIExpression()), !dbg !1625
  %0 = icmp eq i32 %num_args, 2, !dbg !1625
  br i1 %0, label %assert_end, label %assert_fail, !dbg !1625, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %146, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !1625

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %1(ptr nonnull @.str.398), !dbg !1625
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1625, !tbaa !1626
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1625
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !1625, !tbaa !1637
  %p0 = load ptr, ptr %args, align 8, !dbg !1625
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1625
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !1625
  %p056 = load ptr, ptr %p0, align 8, !dbg !1625
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !1625
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1625
  %tvmgen_default_fused_layout_transform_5.p0.shape = load ptr, ptr %4, align 8, !dbg !1625
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1625
  %tvmgen_default_fused_layout_transform_5.p0.strides = load ptr, ptr %5, align 8, !dbg !1625
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1625
  %dev_id = load i32, ptr %6, align 4, !dbg !1625
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !1625
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !1625
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !1625
  %tvmgen_default_fused_layout_transform_5.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !1625
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !1625
  %tvmgen_default_fused_layout_transform_5.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !1625
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !1625

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %9(ptr nonnull @.str.399), !dbg !1625
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !1625

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %10(ptr nonnull @.str.400), !dbg !1625
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1625
  %12 = load i32, ptr %11, align 4, !dbg !1625
  %13 = icmp eq i32 %12, 5, !dbg !1625
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !1625, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %14(ptr nonnull @.str.401), !dbg !1625
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1625
  %16 = load i16, ptr %15, align 2, !dbg !1625
  %17 = icmp eq i16 %16, 1, !dbg !1625
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1625
  %19 = load i8, ptr %18, align 1, !dbg !1625
  %20 = icmp eq i8 %19, 32, !dbg !1625
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1625
  %22 = load i8, ptr %21, align 1, !dbg !1625
  %23 = icmp eq i8 %22, 2, !dbg !1625
  %24 = and i1 %20, %23, !dbg !1625
  %25 = and i1 %17, %24, !dbg !1625
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !1625, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %26(ptr nonnull @.str.402), !dbg !1625
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_5.p0.shape, align 8, !dbg !1625, !tbaa !1639
  %28 = and i64 %27, 4294967295, !dbg !1625
  %29 = icmp eq i64 %28, 1, !dbg !1625
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !1625, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %30(ptr nonnull @.str.403), !dbg !1625
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_5.p0.shape, i64 1, !dbg !1625
  %32 = load i64, ptr %31, align 8, !dbg !1625, !tbaa !1649
  %33 = and i64 %32, 4294967295, !dbg !1625
  %34 = icmp eq i64 %33, 2, !dbg !1625
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !1625, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %35(ptr nonnull @.str.404), !dbg !1625
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_5.p0.shape, i64 2, !dbg !1625
  %37 = load i64, ptr %36, align 8, !dbg !1625, !tbaa !1651
  %38 = and i64 %37, 4294967295, !dbg !1625
  %39 = icmp eq i64 %38, 56, !dbg !1625
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !1625, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %40(ptr nonnull @.str.405), !dbg !1625
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_5.p0.shape, i64 3, !dbg !1625
  %42 = load i64, ptr %41, align 8, !dbg !1625, !tbaa !1654
  %43 = and i64 %42, 4294967295, !dbg !1625
  %44 = icmp eq i64 %43, 56, !dbg !1625
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !1625, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %45(ptr nonnull @.str.406), !dbg !1625
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_5.p0.shape, i64 4, !dbg !1625
  %47 = load i64, ptr %46, align 8, !dbg !1625, !tbaa !1656
  %48 = and i64 %47, 4294967295, !dbg !1625
  %49 = icmp eq i64 %48, 32, !dbg !1625
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !1625, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %50(ptr nonnull @.str.407), !dbg !1625
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_5.p0.strides, null, !dbg !1625
  br i1 %.not, label %if_end, label %if_then, !dbg !1625, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_5.p0.strides, i64 1, !dbg !1625
  %52 = load i64, ptr %51, align 8, !dbg !1625, !tbaa !1660
  %53 = and i64 %52, 4294967295, !dbg !1625
  %54 = icmp eq i64 %53, 100352, !dbg !1625
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_5.p0.strides, i64 2, !dbg !1625
  %56 = load i64, ptr %55, align 8, !dbg !1625, !tbaa !1670
  %57 = and i64 %56, 4294967295, !dbg !1625
  %58 = icmp eq i64 %57, 1792, !dbg !1625
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_5.p0.strides, i64 3, !dbg !1625
  %60 = load i64, ptr %59, align 8, !dbg !1625, !tbaa !1673
  %61 = and i64 %60, 4294967295, !dbg !1625
  %62 = icmp eq i64 %61, 32, !dbg !1625
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_5.p0.strides, i64 4, !dbg !1625
  %64 = load i64, ptr %63, align 8, !dbg !1625, !tbaa !1675
  %65 = and i64 %64, 4294967295, !dbg !1625
  %66 = icmp eq i64 %65, 1, !dbg !1625
  %67 = and i1 %62, %66, !dbg !1625
  %68 = and i1 %58, %67, !dbg !1625
  %69 = and i1 %54, %68, !dbg !1625
  br i1 %69, label %if_end, label %assert_fail23, !dbg !1625, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1625
  %71 = load i64, ptr %70, align 8, !dbg !1625
  %72 = icmp eq i64 %71, 0, !dbg !1625
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !1625, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %73(ptr nonnull @.str.408), !dbg !1625
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %74(ptr nonnull @.str.409), !dbg !1625
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1625
  %76 = load i32, ptr %75, align 4, !dbg !1625
  %77 = icmp eq i32 %76, 1, !dbg !1625
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !1625, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %78(ptr nonnull @.str.410), !dbg !1625
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !1625
  %80 = load i32, ptr %79, align 4, !dbg !1625
  %81 = icmp eq i32 %80, 5, !dbg !1625
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !1625, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %82(ptr nonnull @.str.411), !dbg !1625
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !1625
  %84 = load i16, ptr %83, align 2, !dbg !1625
  %85 = icmp eq i16 %84, 1, !dbg !1625
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !1625
  %87 = load i8, ptr %86, align 1, !dbg !1625
  %88 = icmp eq i8 %87, 32, !dbg !1625
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !1625
  %90 = load i8, ptr %89, align 1, !dbg !1625
  %91 = icmp eq i8 %90, 2, !dbg !1625
  %92 = and i1 %88, %91, !dbg !1625
  %93 = and i1 %85, %92, !dbg !1625
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !1625, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %94(ptr nonnull @.str.412), !dbg !1625
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_5.T_layout_trans.shape, align 8, !dbg !1625, !tbaa !1679
  %96 = and i64 %95, 4294967295, !dbg !1625
  %97 = icmp eq i64 %96, 1, !dbg !1625
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !1625, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %98(ptr nonnull @.str.413), !dbg !1625
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_5.T_layout_trans.shape, i64 1, !dbg !1625
  %100 = load i64, ptr %99, align 8, !dbg !1625, !tbaa !1689
  %101 = and i64 %100, 4294967295, !dbg !1625
  %102 = icmp eq i64 %101, 1, !dbg !1625
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !1625, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %103(ptr nonnull @.str.414), !dbg !1625
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_5.T_layout_trans.shape, i64 2, !dbg !1625
  %105 = load i64, ptr %104, align 8, !dbg !1625, !tbaa !1691
  %106 = and i64 %105, 4294967295, !dbg !1625
  %107 = icmp eq i64 %106, 56, !dbg !1625
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !1625, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %108(ptr nonnull @.str.415), !dbg !1625
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_5.T_layout_trans.shape, i64 3, !dbg !1625
  %110 = load i64, ptr %109, align 8, !dbg !1625, !tbaa !1694
  %111 = and i64 %110, 4294967295, !dbg !1625
  %112 = icmp eq i64 %111, 56, !dbg !1625
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !1625, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %113(ptr nonnull @.str.416), !dbg !1625
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_5.T_layout_trans.shape, i64 4, !dbg !1625
  %115 = load i64, ptr %114, align 8, !dbg !1625, !tbaa !1696
  %116 = and i64 %115, 4294967295, !dbg !1625
  %117 = icmp eq i64 %116, 64, !dbg !1625
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !1625, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %118(ptr nonnull @.str.417), !dbg !1625
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_5.T_layout_trans.strides, null, !dbg !1625
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !1625, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_5.T_layout_trans.strides, i64 2, !dbg !1625
  %120 = load i64, ptr %119, align 8, !dbg !1625, !tbaa !1700
  %121 = and i64 %120, 4294967295, !dbg !1625
  %122 = icmp eq i64 %121, 3584, !dbg !1625
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_5.T_layout_trans.strides, i64 3, !dbg !1625
  %124 = load i64, ptr %123, align 8, !dbg !1625, !tbaa !1710
  %125 = and i64 %124, 4294967295, !dbg !1625
  %126 = icmp eq i64 %125, 64, !dbg !1625
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_5.T_layout_trans.strides, i64 4, !dbg !1625
  %128 = load i64, ptr %127, align 8, !dbg !1625, !tbaa !1712
  %129 = and i64 %128, 4294967295, !dbg !1625
  %130 = icmp eq i64 %129, 1, !dbg !1625
  %131 = and i1 %126, %130, !dbg !1625
  %132 = and i1 %122, %131, !dbg !1625
  br i1 %132, label %if_end46, label %assert_fail47, !dbg !1625, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %133 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !1625
  %134 = load i64, ptr %133, align 8, !dbg !1625
  %135 = icmp eq i64 %134, 0, !dbg !1625
  br i1 %135, label %assert_end50, label %assert_fail49, !dbg !1625, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %136(ptr nonnull @.str.418), !dbg !1625
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %137 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %137(ptr nonnull @.str.419), !dbg !1625
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !1625
  %139 = load i32, ptr %138, align 4, !dbg !1625
  %140 = icmp eq i32 %139, 1, !dbg !1625
  br i1 %140, label %assert_end52, label %assert_fail51, !dbg !1625, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %141(ptr nonnull @.str.420), !dbg !1625
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %142 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !1625
  %143 = load i32, ptr %142, align 4, !dbg !1625
  %144 = icmp eq i32 %dev_id, %143, !dbg !1625
  br i1 %144, label %assert_end54, label %assert_fail53, !dbg !1625, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1625, !tbaa !19
  tail call void %145(ptr nonnull @.str.421), !dbg !1625
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %146 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_5_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !1625
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_6(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1716 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1718, metadata !DIExpression()), !dbg !1724
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1719, metadata !DIExpression()), !dbg !1724
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1720, metadata !DIExpression()), !dbg !1724
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1721, metadata !DIExpression()), !dbg !1724
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1722, metadata !DIExpression()), !dbg !1724
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1723, metadata !DIExpression()), !dbg !1724
  %0 = icmp eq i32 %num_args, 2, !dbg !1724
  br i1 %0, label %assert_end, label %assert_fail, !dbg !1724, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %151, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !1724

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %1(ptr nonnull @.str.423), !dbg !1724
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1724, !tbaa !1725
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1724
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !1724, !tbaa !1736
  %p0 = load ptr, ptr %args, align 8, !dbg !1724
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1724
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !1724
  %p056 = load ptr, ptr %p0, align 8, !dbg !1724
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !1724
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1724
  %tvmgen_default_fused_layout_transform_6.p0.shape = load ptr, ptr %4, align 8, !dbg !1724
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1724
  %tvmgen_default_fused_layout_transform_6.p0.strides = load ptr, ptr %5, align 8, !dbg !1724
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1724
  %dev_id = load i32, ptr %6, align 4, !dbg !1724
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !1724
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !1724
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !1724
  %tvmgen_default_fused_layout_transform_6.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !1724
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !1724
  %tvmgen_default_fused_layout_transform_6.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !1724
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !1724

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %9(ptr nonnull @.str.424), !dbg !1724
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !1724

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %10(ptr nonnull @.str.425), !dbg !1724
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1724
  %12 = load i32, ptr %11, align 4, !dbg !1724
  %13 = icmp eq i32 %12, 5, !dbg !1724
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !1724, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %14(ptr nonnull @.str.426), !dbg !1724
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1724
  %16 = load i16, ptr %15, align 2, !dbg !1724
  %17 = icmp eq i16 %16, 1, !dbg !1724
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1724
  %19 = load i8, ptr %18, align 1, !dbg !1724
  %20 = icmp eq i8 %19, 32, !dbg !1724
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1724
  %22 = load i8, ptr %21, align 1, !dbg !1724
  %23 = icmp eq i8 %22, 2, !dbg !1724
  %24 = and i1 %20, %23, !dbg !1724
  %25 = and i1 %17, %24, !dbg !1724
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !1724, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %26(ptr nonnull @.str.427), !dbg !1724
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_6.p0.shape, align 8, !dbg !1724, !tbaa !1738
  %28 = and i64 %27, 4294967295, !dbg !1724
  %29 = icmp eq i64 %28, 1, !dbg !1724
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !1724, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %30(ptr nonnull @.str.428), !dbg !1724
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_6.p0.shape, i64 1, !dbg !1724
  %32 = load i64, ptr %31, align 8, !dbg !1724, !tbaa !1748
  %33 = and i64 %32, 4294967295, !dbg !1724
  %34 = icmp eq i64 %33, 8, !dbg !1724
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !1724, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %35(ptr nonnull @.str.429), !dbg !1724
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_6.p0.shape, i64 2, !dbg !1724
  %37 = load i64, ptr %36, align 8, !dbg !1724, !tbaa !1750
  %38 = and i64 %37, 4294967295, !dbg !1724
  %39 = icmp eq i64 %38, 56, !dbg !1724
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !1724, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %40(ptr nonnull @.str.430), !dbg !1724
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_6.p0.shape, i64 3, !dbg !1724
  %42 = load i64, ptr %41, align 8, !dbg !1724, !tbaa !1753
  %43 = and i64 %42, 4294967295, !dbg !1724
  %44 = icmp eq i64 %43, 56, !dbg !1724
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !1724, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %45(ptr nonnull @.str.431), !dbg !1724
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_6.p0.shape, i64 4, !dbg !1724
  %47 = load i64, ptr %46, align 8, !dbg !1724, !tbaa !1755
  %48 = and i64 %47, 4294967295, !dbg !1724
  %49 = icmp eq i64 %48, 32, !dbg !1724
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !1724, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %50(ptr nonnull @.str.432), !dbg !1724
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_6.p0.strides, null, !dbg !1724
  br i1 %.not, label %if_end, label %if_then, !dbg !1724, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_6.p0.strides, i64 1, !dbg !1724
  %52 = load i64, ptr %51, align 8, !dbg !1724, !tbaa !1759
  %53 = and i64 %52, 4294967295, !dbg !1724
  %54 = icmp eq i64 %53, 100352, !dbg !1724
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_6.p0.strides, i64 2, !dbg !1724
  %56 = load i64, ptr %55, align 8, !dbg !1724, !tbaa !1769
  %57 = and i64 %56, 4294967295, !dbg !1724
  %58 = icmp eq i64 %57, 1792, !dbg !1724
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_6.p0.strides, i64 3, !dbg !1724
  %60 = load i64, ptr %59, align 8, !dbg !1724, !tbaa !1772
  %61 = and i64 %60, 4294967295, !dbg !1724
  %62 = icmp eq i64 %61, 32, !dbg !1724
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_6.p0.strides, i64 4, !dbg !1724
  %64 = load i64, ptr %63, align 8, !dbg !1724, !tbaa !1774
  %65 = and i64 %64, 4294967295, !dbg !1724
  %66 = icmp eq i64 %65, 1, !dbg !1724
  %67 = and i1 %62, %66, !dbg !1724
  %68 = and i1 %58, %67, !dbg !1724
  %69 = and i1 %54, %68, !dbg !1724
  br i1 %69, label %if_end, label %assert_fail23, !dbg !1724, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1724
  %71 = load i64, ptr %70, align 8, !dbg !1724
  %72 = icmp eq i64 %71, 0, !dbg !1724
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !1724, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %73(ptr nonnull @.str.433), !dbg !1724
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %74(ptr nonnull @.str.434), !dbg !1724
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1724
  %76 = load i32, ptr %75, align 4, !dbg !1724
  %77 = icmp eq i32 %76, 1, !dbg !1724
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !1724, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %78(ptr nonnull @.str.435), !dbg !1724
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !1724
  %80 = load i32, ptr %79, align 4, !dbg !1724
  %81 = icmp eq i32 %80, 5, !dbg !1724
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !1724, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %82(ptr nonnull @.str.436), !dbg !1724
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !1724
  %84 = load i16, ptr %83, align 2, !dbg !1724
  %85 = icmp eq i16 %84, 1, !dbg !1724
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !1724
  %87 = load i8, ptr %86, align 1, !dbg !1724
  %88 = icmp eq i8 %87, 32, !dbg !1724
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !1724
  %90 = load i8, ptr %89, align 1, !dbg !1724
  %91 = icmp eq i8 %90, 2, !dbg !1724
  %92 = and i1 %88, %91, !dbg !1724
  %93 = and i1 %85, %92, !dbg !1724
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !1724, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %94(ptr nonnull @.str.437), !dbg !1724
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_6.T_layout_trans.shape, align 8, !dbg !1724, !tbaa !1778
  %96 = and i64 %95, 4294967295, !dbg !1724
  %97 = icmp eq i64 %96, 1, !dbg !1724
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !1724, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %98(ptr nonnull @.str.438), !dbg !1724
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_6.T_layout_trans.shape, i64 1, !dbg !1724
  %100 = load i64, ptr %99, align 8, !dbg !1724, !tbaa !1788
  %101 = and i64 %100, 4294967295, !dbg !1724
  %102 = icmp eq i64 %101, 64, !dbg !1724
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !1724, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %103(ptr nonnull @.str.439), !dbg !1724
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_6.T_layout_trans.shape, i64 2, !dbg !1724
  %105 = load i64, ptr %104, align 8, !dbg !1724, !tbaa !1790
  %106 = and i64 %105, 4294967295, !dbg !1724
  %107 = icmp eq i64 %106, 56, !dbg !1724
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !1724, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %108(ptr nonnull @.str.440), !dbg !1724
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_6.T_layout_trans.shape, i64 3, !dbg !1724
  %110 = load i64, ptr %109, align 8, !dbg !1724, !tbaa !1793
  %111 = and i64 %110, 4294967295, !dbg !1724
  %112 = icmp eq i64 %111, 56, !dbg !1724
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !1724, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %113(ptr nonnull @.str.441), !dbg !1724
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_6.T_layout_trans.shape, i64 4, !dbg !1724
  %115 = load i64, ptr %114, align 8, !dbg !1724, !tbaa !1795
  %116 = and i64 %115, 4294967295, !dbg !1724
  %117 = icmp eq i64 %116, 4, !dbg !1724
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !1724, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %118(ptr nonnull @.str.442), !dbg !1724
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_6.T_layout_trans.strides, null, !dbg !1724
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !1724, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_6.T_layout_trans.strides, i64 1, !dbg !1724
  %120 = load i64, ptr %119, align 8, !dbg !1724, !tbaa !1799
  %121 = and i64 %120, 4294967295, !dbg !1724
  %122 = icmp eq i64 %121, 12544, !dbg !1724
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_6.T_layout_trans.strides, i64 2, !dbg !1724
  %124 = load i64, ptr %123, align 8, !dbg !1724, !tbaa !1809
  %125 = and i64 %124, 4294967295, !dbg !1724
  %126 = icmp eq i64 %125, 224, !dbg !1724
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_6.T_layout_trans.strides, i64 3, !dbg !1724
  %128 = load i64, ptr %127, align 8, !dbg !1724, !tbaa !1812
  %129 = and i64 %128, 4294967295, !dbg !1724
  %130 = icmp eq i64 %129, 4, !dbg !1724
  %131 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_6.T_layout_trans.strides, i64 4, !dbg !1724
  %132 = load i64, ptr %131, align 8, !dbg !1724, !tbaa !1814
  %133 = and i64 %132, 4294967295, !dbg !1724
  %134 = icmp eq i64 %133, 1, !dbg !1724
  %135 = and i1 %130, %134, !dbg !1724
  %136 = and i1 %126, %135, !dbg !1724
  %137 = and i1 %122, %136, !dbg !1724
  br i1 %137, label %if_end46, label %assert_fail47, !dbg !1724, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !1724
  %139 = load i64, ptr %138, align 8, !dbg !1724
  %140 = icmp eq i64 %139, 0, !dbg !1724
  br i1 %140, label %assert_end50, label %assert_fail49, !dbg !1724, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %141(ptr nonnull @.str.443), !dbg !1724
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %142 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %142(ptr nonnull @.str.444), !dbg !1724
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %143 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !1724
  %144 = load i32, ptr %143, align 4, !dbg !1724
  %145 = icmp eq i32 %144, 1, !dbg !1724
  br i1 %145, label %assert_end52, label %assert_fail51, !dbg !1724, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %146(ptr nonnull @.str.445), !dbg !1724
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %147 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !1724
  %148 = load i32, ptr %147, align 4, !dbg !1724
  %149 = icmp eq i32 %dev_id, %148, !dbg !1724
  br i1 %149, label %assert_end54, label %assert_fail53, !dbg !1724, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1724, !tbaa !19
  tail call void %150(ptr nonnull @.str.446), !dbg !1724
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %151 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_6_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !1724
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_7(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1818 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1820, metadata !DIExpression()), !dbg !1826
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1821, metadata !DIExpression()), !dbg !1826
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1822, metadata !DIExpression()), !dbg !1826
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1823, metadata !DIExpression()), !dbg !1826
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1824, metadata !DIExpression()), !dbg !1826
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1825, metadata !DIExpression()), !dbg !1826
  %0 = icmp eq i32 %num_args, 2, !dbg !1826
  br i1 %0, label %assert_end, label %assert_fail, !dbg !1826, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %151, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !1826

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %1(ptr nonnull @.str.448), !dbg !1826
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1826, !tbaa !1827
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1826
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !1826, !tbaa !1838
  %p0 = load ptr, ptr %args, align 8, !dbg !1826
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1826
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !1826
  %p056 = load ptr, ptr %p0, align 8, !dbg !1826
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !1826
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1826
  %tvmgen_default_fused_layout_transform_7.p0.shape = load ptr, ptr %4, align 8, !dbg !1826
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1826
  %tvmgen_default_fused_layout_transform_7.p0.strides = load ptr, ptr %5, align 8, !dbg !1826
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1826
  %dev_id = load i32, ptr %6, align 4, !dbg !1826
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !1826
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !1826
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !1826
  %tvmgen_default_fused_layout_transform_7.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !1826
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !1826
  %tvmgen_default_fused_layout_transform_7.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !1826
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !1826

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %9(ptr nonnull @.str.449), !dbg !1826
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !1826

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %10(ptr nonnull @.str.450), !dbg !1826
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1826
  %12 = load i32, ptr %11, align 4, !dbg !1826
  %13 = icmp eq i32 %12, 5, !dbg !1826
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !1826, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %14(ptr nonnull @.str.451), !dbg !1826
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1826
  %16 = load i16, ptr %15, align 2, !dbg !1826
  %17 = icmp eq i16 %16, 1, !dbg !1826
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1826
  %19 = load i8, ptr %18, align 1, !dbg !1826
  %20 = icmp eq i8 %19, 32, !dbg !1826
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1826
  %22 = load i8, ptr %21, align 1, !dbg !1826
  %23 = icmp eq i8 %22, 2, !dbg !1826
  %24 = and i1 %20, %23, !dbg !1826
  %25 = and i1 %17, %24, !dbg !1826
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !1826, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %26(ptr nonnull @.str.452), !dbg !1826
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_7.p0.shape, align 8, !dbg !1826, !tbaa !1840
  %28 = and i64 %27, 4294967295, !dbg !1826
  %29 = icmp eq i64 %28, 1, !dbg !1826
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !1826, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %30(ptr nonnull @.str.453), !dbg !1826
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_7.p0.shape, i64 1, !dbg !1826
  %32 = load i64, ptr %31, align 8, !dbg !1826, !tbaa !1850
  %33 = and i64 %32, 4294967295, !dbg !1826
  %34 = icmp eq i64 %33, 8, !dbg !1826
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !1826, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %35(ptr nonnull @.str.454), !dbg !1826
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_7.p0.shape, i64 2, !dbg !1826
  %37 = load i64, ptr %36, align 8, !dbg !1826, !tbaa !1852
  %38 = and i64 %37, 4294967295, !dbg !1826
  %39 = icmp eq i64 %38, 28, !dbg !1826
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !1826, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %40(ptr nonnull @.str.455), !dbg !1826
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_7.p0.shape, i64 3, !dbg !1826
  %42 = load i64, ptr %41, align 8, !dbg !1826, !tbaa !1855
  %43 = and i64 %42, 4294967295, !dbg !1826
  %44 = icmp eq i64 %43, 28, !dbg !1826
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !1826, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %45(ptr nonnull @.str.456), !dbg !1826
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_7.p0.shape, i64 4, !dbg !1826
  %47 = load i64, ptr %46, align 8, !dbg !1826, !tbaa !1857
  %48 = and i64 %47, 4294967295, !dbg !1826
  %49 = icmp eq i64 %48, 64, !dbg !1826
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !1826, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %50(ptr nonnull @.str.457), !dbg !1826
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_7.p0.strides, null, !dbg !1826
  br i1 %.not, label %if_end, label %if_then, !dbg !1826, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_7.p0.strides, i64 1, !dbg !1826
  %52 = load i64, ptr %51, align 8, !dbg !1826, !tbaa !1861
  %53 = and i64 %52, 4294967295, !dbg !1826
  %54 = icmp eq i64 %53, 50176, !dbg !1826
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_7.p0.strides, i64 2, !dbg !1826
  %56 = load i64, ptr %55, align 8, !dbg !1826, !tbaa !1871
  %57 = and i64 %56, 4294967295, !dbg !1826
  %58 = icmp eq i64 %57, 1792, !dbg !1826
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_7.p0.strides, i64 3, !dbg !1826
  %60 = load i64, ptr %59, align 8, !dbg !1826, !tbaa !1874
  %61 = and i64 %60, 4294967295, !dbg !1826
  %62 = icmp eq i64 %61, 64, !dbg !1826
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_7.p0.strides, i64 4, !dbg !1826
  %64 = load i64, ptr %63, align 8, !dbg !1826, !tbaa !1876
  %65 = and i64 %64, 4294967295, !dbg !1826
  %66 = icmp eq i64 %65, 1, !dbg !1826
  %67 = and i1 %62, %66, !dbg !1826
  %68 = and i1 %58, %67, !dbg !1826
  %69 = and i1 %54, %68, !dbg !1826
  br i1 %69, label %if_end, label %assert_fail23, !dbg !1826, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1826
  %71 = load i64, ptr %70, align 8, !dbg !1826
  %72 = icmp eq i64 %71, 0, !dbg !1826
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !1826, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %73(ptr nonnull @.str.458), !dbg !1826
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %74(ptr nonnull @.str.459), !dbg !1826
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1826
  %76 = load i32, ptr %75, align 4, !dbg !1826
  %77 = icmp eq i32 %76, 1, !dbg !1826
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !1826, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %78(ptr nonnull @.str.460), !dbg !1826
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !1826
  %80 = load i32, ptr %79, align 4, !dbg !1826
  %81 = icmp eq i32 %80, 5, !dbg !1826
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !1826, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %82(ptr nonnull @.str.461), !dbg !1826
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !1826
  %84 = load i16, ptr %83, align 2, !dbg !1826
  %85 = icmp eq i16 %84, 1, !dbg !1826
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !1826
  %87 = load i8, ptr %86, align 1, !dbg !1826
  %88 = icmp eq i8 %87, 32, !dbg !1826
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !1826
  %90 = load i8, ptr %89, align 1, !dbg !1826
  %91 = icmp eq i8 %90, 2, !dbg !1826
  %92 = and i1 %88, %91, !dbg !1826
  %93 = and i1 %85, %92, !dbg !1826
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !1826, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %94(ptr nonnull @.str.462), !dbg !1826
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_7.T_layout_trans.shape, align 8, !dbg !1826, !tbaa !1880
  %96 = and i64 %95, 4294967295, !dbg !1826
  %97 = icmp eq i64 %96, 1, !dbg !1826
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !1826, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %98(ptr nonnull @.str.463), !dbg !1826
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_7.T_layout_trans.shape, i64 1, !dbg !1826
  %100 = load i64, ptr %99, align 8, !dbg !1826, !tbaa !1890
  %101 = and i64 %100, 4294967295, !dbg !1826
  %102 = icmp eq i64 %101, 16, !dbg !1826
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !1826, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %103(ptr nonnull @.str.464), !dbg !1826
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_7.T_layout_trans.shape, i64 2, !dbg !1826
  %105 = load i64, ptr %104, align 8, !dbg !1826, !tbaa !1892
  %106 = and i64 %105, 4294967295, !dbg !1826
  %107 = icmp eq i64 %106, 28, !dbg !1826
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !1826, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %108(ptr nonnull @.str.465), !dbg !1826
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_7.T_layout_trans.shape, i64 3, !dbg !1826
  %110 = load i64, ptr %109, align 8, !dbg !1826, !tbaa !1895
  %111 = and i64 %110, 4294967295, !dbg !1826
  %112 = icmp eq i64 %111, 28, !dbg !1826
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !1826, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %113(ptr nonnull @.str.466), !dbg !1826
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_7.T_layout_trans.shape, i64 4, !dbg !1826
  %115 = load i64, ptr %114, align 8, !dbg !1826, !tbaa !1897
  %116 = and i64 %115, 4294967295, !dbg !1826
  %117 = icmp eq i64 %116, 32, !dbg !1826
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !1826, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %118(ptr nonnull @.str.467), !dbg !1826
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_7.T_layout_trans.strides, null, !dbg !1826
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !1826, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_7.T_layout_trans.strides, i64 1, !dbg !1826
  %120 = load i64, ptr %119, align 8, !dbg !1826, !tbaa !1901
  %121 = and i64 %120, 4294967295, !dbg !1826
  %122 = icmp eq i64 %121, 25088, !dbg !1826
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_7.T_layout_trans.strides, i64 2, !dbg !1826
  %124 = load i64, ptr %123, align 8, !dbg !1826, !tbaa !1911
  %125 = and i64 %124, 4294967295, !dbg !1826
  %126 = icmp eq i64 %125, 896, !dbg !1826
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_7.T_layout_trans.strides, i64 3, !dbg !1826
  %128 = load i64, ptr %127, align 8, !dbg !1826, !tbaa !1914
  %129 = and i64 %128, 4294967295, !dbg !1826
  %130 = icmp eq i64 %129, 32, !dbg !1826
  %131 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_7.T_layout_trans.strides, i64 4, !dbg !1826
  %132 = load i64, ptr %131, align 8, !dbg !1826, !tbaa !1916
  %133 = and i64 %132, 4294967295, !dbg !1826
  %134 = icmp eq i64 %133, 1, !dbg !1826
  %135 = and i1 %130, %134, !dbg !1826
  %136 = and i1 %126, %135, !dbg !1826
  %137 = and i1 %122, %136, !dbg !1826
  br i1 %137, label %if_end46, label %assert_fail47, !dbg !1826, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !1826
  %139 = load i64, ptr %138, align 8, !dbg !1826
  %140 = icmp eq i64 %139, 0, !dbg !1826
  br i1 %140, label %assert_end50, label %assert_fail49, !dbg !1826, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %141(ptr nonnull @.str.468), !dbg !1826
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %142 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %142(ptr nonnull @.str.469), !dbg !1826
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %143 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !1826
  %144 = load i32, ptr %143, align 4, !dbg !1826
  %145 = icmp eq i32 %144, 1, !dbg !1826
  br i1 %145, label %assert_end52, label %assert_fail51, !dbg !1826, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %146(ptr nonnull @.str.470), !dbg !1826
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %147 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !1826
  %148 = load i32, ptr %147, align 4, !dbg !1826
  %149 = icmp eq i32 %dev_id, %148, !dbg !1826
  br i1 %149, label %assert_end54, label %assert_fail53, !dbg !1826, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1826, !tbaa !19
  tail call void %150(ptr nonnull @.str.471), !dbg !1826
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %151 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_7_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !1826
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_8(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !1920 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !1922, metadata !DIExpression()), !dbg !1928
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !1923, metadata !DIExpression()), !dbg !1928
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !1924, metadata !DIExpression()), !dbg !1928
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !1925, metadata !DIExpression()), !dbg !1928
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !1926, metadata !DIExpression()), !dbg !1928
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !1927, metadata !DIExpression()), !dbg !1928
  %0 = icmp eq i32 %num_args, 2, !dbg !1928
  br i1 %0, label %assert_end, label %assert_fail, !dbg !1928, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %146, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !1928

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %1(ptr nonnull @.str.473), !dbg !1928
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !1928, !tbaa !1929
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !1928
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !1928, !tbaa !1940
  %p0 = load ptr, ptr %args, align 8, !dbg !1928
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !1928
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !1928
  %p056 = load ptr, ptr %p0, align 8, !dbg !1928
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !1928
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !1928
  %tvmgen_default_fused_layout_transform_8.p0.shape = load ptr, ptr %4, align 8, !dbg !1928
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !1928
  %tvmgen_default_fused_layout_transform_8.p0.strides = load ptr, ptr %5, align 8, !dbg !1928
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !1928
  %dev_id = load i32, ptr %6, align 4, !dbg !1928
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !1928
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !1928
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !1928
  %tvmgen_default_fused_layout_transform_8.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !1928
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !1928
  %tvmgen_default_fused_layout_transform_8.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !1928
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !1928

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %9(ptr nonnull @.str.474), !dbg !1928
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !1928

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %10(ptr nonnull @.str.475), !dbg !1928
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !1928
  %12 = load i32, ptr %11, align 4, !dbg !1928
  %13 = icmp eq i32 %12, 5, !dbg !1928
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !1928, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %14(ptr nonnull @.str.476), !dbg !1928
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !1928
  %16 = load i16, ptr %15, align 2, !dbg !1928
  %17 = icmp eq i16 %16, 1, !dbg !1928
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !1928
  %19 = load i8, ptr %18, align 1, !dbg !1928
  %20 = icmp eq i8 %19, 32, !dbg !1928
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !1928
  %22 = load i8, ptr %21, align 1, !dbg !1928
  %23 = icmp eq i8 %22, 2, !dbg !1928
  %24 = and i1 %20, %23, !dbg !1928
  %25 = and i1 %17, %24, !dbg !1928
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !1928, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %26(ptr nonnull @.str.477), !dbg !1928
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_8.p0.shape, align 8, !dbg !1928, !tbaa !1942
  %28 = and i64 %27, 4294967295, !dbg !1928
  %29 = icmp eq i64 %28, 1, !dbg !1928
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !1928, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %30(ptr nonnull @.str.478), !dbg !1928
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_8.p0.shape, i64 1, !dbg !1928
  %32 = load i64, ptr %31, align 8, !dbg !1928, !tbaa !1952
  %33 = and i64 %32, 4294967295, !dbg !1928
  %34 = icmp eq i64 %33, 16, !dbg !1928
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !1928, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %35(ptr nonnull @.str.479), !dbg !1928
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_8.p0.shape, i64 2, !dbg !1928
  %37 = load i64, ptr %36, align 8, !dbg !1928, !tbaa !1954
  %38 = and i64 %37, 4294967295, !dbg !1928
  %39 = icmp eq i64 %38, 28, !dbg !1928
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !1928, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %40(ptr nonnull @.str.480), !dbg !1928
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_8.p0.shape, i64 3, !dbg !1928
  %42 = load i64, ptr %41, align 8, !dbg !1928, !tbaa !1957
  %43 = and i64 %42, 4294967295, !dbg !1928
  %44 = icmp eq i64 %43, 28, !dbg !1928
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !1928, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %45(ptr nonnull @.str.481), !dbg !1928
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_8.p0.shape, i64 4, !dbg !1928
  %47 = load i64, ptr %46, align 8, !dbg !1928, !tbaa !1959
  %48 = and i64 %47, 4294967295, !dbg !1928
  %49 = icmp eq i64 %48, 32, !dbg !1928
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !1928, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %50(ptr nonnull @.str.482), !dbg !1928
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_8.p0.strides, null, !dbg !1928
  br i1 %.not, label %if_end, label %if_then, !dbg !1928, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_8.p0.strides, i64 1, !dbg !1928
  %52 = load i64, ptr %51, align 8, !dbg !1928, !tbaa !1963
  %53 = and i64 %52, 4294967295, !dbg !1928
  %54 = icmp eq i64 %53, 25088, !dbg !1928
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_8.p0.strides, i64 2, !dbg !1928
  %56 = load i64, ptr %55, align 8, !dbg !1928, !tbaa !1973
  %57 = and i64 %56, 4294967295, !dbg !1928
  %58 = icmp eq i64 %57, 896, !dbg !1928
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_8.p0.strides, i64 3, !dbg !1928
  %60 = load i64, ptr %59, align 8, !dbg !1928, !tbaa !1976
  %61 = and i64 %60, 4294967295, !dbg !1928
  %62 = icmp eq i64 %61, 32, !dbg !1928
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_8.p0.strides, i64 4, !dbg !1928
  %64 = load i64, ptr %63, align 8, !dbg !1928, !tbaa !1978
  %65 = and i64 %64, 4294967295, !dbg !1928
  %66 = icmp eq i64 %65, 1, !dbg !1928
  %67 = and i1 %62, %66, !dbg !1928
  %68 = and i1 %58, %67, !dbg !1928
  %69 = and i1 %54, %68, !dbg !1928
  br i1 %69, label %if_end, label %assert_fail23, !dbg !1928, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !1928
  %71 = load i64, ptr %70, align 8, !dbg !1928
  %72 = icmp eq i64 %71, 0, !dbg !1928
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !1928, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %73(ptr nonnull @.str.483), !dbg !1928
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %74(ptr nonnull @.str.484), !dbg !1928
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !1928
  %76 = load i32, ptr %75, align 4, !dbg !1928
  %77 = icmp eq i32 %76, 1, !dbg !1928
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !1928, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %78(ptr nonnull @.str.485), !dbg !1928
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !1928
  %80 = load i32, ptr %79, align 4, !dbg !1928
  %81 = icmp eq i32 %80, 5, !dbg !1928
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !1928, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %82(ptr nonnull @.str.486), !dbg !1928
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !1928
  %84 = load i16, ptr %83, align 2, !dbg !1928
  %85 = icmp eq i16 %84, 1, !dbg !1928
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !1928
  %87 = load i8, ptr %86, align 1, !dbg !1928
  %88 = icmp eq i8 %87, 32, !dbg !1928
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !1928
  %90 = load i8, ptr %89, align 1, !dbg !1928
  %91 = icmp eq i8 %90, 2, !dbg !1928
  %92 = and i1 %88, %91, !dbg !1928
  %93 = and i1 %85, %92, !dbg !1928
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !1928, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %94(ptr nonnull @.str.487), !dbg !1928
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_8.T_layout_trans.shape, align 8, !dbg !1928, !tbaa !1982
  %96 = and i64 %95, 4294967295, !dbg !1928
  %97 = icmp eq i64 %96, 1, !dbg !1928
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !1928, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %98(ptr nonnull @.str.488), !dbg !1928
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_8.T_layout_trans.shape, i64 1, !dbg !1928
  %100 = load i64, ptr %99, align 8, !dbg !1928, !tbaa !1992
  %101 = and i64 %100, 4294967295, !dbg !1928
  %102 = icmp eq i64 %101, 1, !dbg !1928
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !1928, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %103(ptr nonnull @.str.489), !dbg !1928
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_8.T_layout_trans.shape, i64 2, !dbg !1928
  %105 = load i64, ptr %104, align 8, !dbg !1928, !tbaa !1994
  %106 = and i64 %105, 4294967295, !dbg !1928
  %107 = icmp eq i64 %106, 28, !dbg !1928
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !1928, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %108(ptr nonnull @.str.490), !dbg !1928
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_8.T_layout_trans.shape, i64 3, !dbg !1928
  %110 = load i64, ptr %109, align 8, !dbg !1928, !tbaa !1997
  %111 = and i64 %110, 4294967295, !dbg !1928
  %112 = icmp eq i64 %111, 28, !dbg !1928
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !1928, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %113(ptr nonnull @.str.491), !dbg !1928
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_8.T_layout_trans.shape, i64 4, !dbg !1928
  %115 = load i64, ptr %114, align 8, !dbg !1928, !tbaa !1999
  %116 = and i64 %115, 4294967295, !dbg !1928
  %117 = icmp eq i64 %116, 512, !dbg !1928
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !1928, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %118(ptr nonnull @.str.492), !dbg !1928
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_8.T_layout_trans.strides, null, !dbg !1928
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !1928, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_8.T_layout_trans.strides, i64 2, !dbg !1928
  %120 = load i64, ptr %119, align 8, !dbg !1928, !tbaa !2003
  %121 = and i64 %120, 4294967295, !dbg !1928
  %122 = icmp eq i64 %121, 14336, !dbg !1928
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_8.T_layout_trans.strides, i64 3, !dbg !1928
  %124 = load i64, ptr %123, align 8, !dbg !1928, !tbaa !2013
  %125 = and i64 %124, 4294967295, !dbg !1928
  %126 = icmp eq i64 %125, 512, !dbg !1928
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_8.T_layout_trans.strides, i64 4, !dbg !1928
  %128 = load i64, ptr %127, align 8, !dbg !1928, !tbaa !2015
  %129 = and i64 %128, 4294967295, !dbg !1928
  %130 = icmp eq i64 %129, 1, !dbg !1928
  %131 = and i1 %126, %130, !dbg !1928
  %132 = and i1 %122, %131, !dbg !1928
  br i1 %132, label %if_end46, label %assert_fail47, !dbg !1928, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %133 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !1928
  %134 = load i64, ptr %133, align 8, !dbg !1928
  %135 = icmp eq i64 %134, 0, !dbg !1928
  br i1 %135, label %assert_end50, label %assert_fail49, !dbg !1928, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %136(ptr nonnull @.str.493), !dbg !1928
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %137 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %137(ptr nonnull @.str.494), !dbg !1928
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !1928
  %139 = load i32, ptr %138, align 4, !dbg !1928
  %140 = icmp eq i32 %139, 1, !dbg !1928
  br i1 %140, label %assert_end52, label %assert_fail51, !dbg !1928, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %141(ptr nonnull @.str.495), !dbg !1928
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %142 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !1928
  %143 = load i32, ptr %142, align 4, !dbg !1928
  %144 = icmp eq i32 %dev_id, %143, !dbg !1928
  br i1 %144, label %assert_end54, label %assert_fail53, !dbg !1928, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !1928, !tbaa !19
  tail call void %145(ptr nonnull @.str.496), !dbg !1928
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %146 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_8_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !1928
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_9(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2019 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2021, metadata !DIExpression()), !dbg !2027
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2022, metadata !DIExpression()), !dbg !2027
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2023, metadata !DIExpression()), !dbg !2027
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2024, metadata !DIExpression()), !dbg !2027
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2025, metadata !DIExpression()), !dbg !2027
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2026, metadata !DIExpression()), !dbg !2027
  %0 = icmp eq i32 %num_args, 2, !dbg !2027
  br i1 %0, label %assert_end, label %assert_fail, !dbg !2027, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %146, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !2027

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %1(ptr nonnull @.str.498), !dbg !2027
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2027, !tbaa !2028
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2027
  %T_layout_trans.code = load i32, ptr %2, align 4, !dbg !2027, !tbaa !2039
  %p0 = load ptr, ptr %args, align 8, !dbg !2027
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2027
  %T_layout_trans = load ptr, ptr %3, align 8, !dbg !2027
  %p056 = load ptr, ptr %p0, align 8, !dbg !2027
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !2027
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2027
  %tvmgen_default_fused_layout_transform_9.p0.shape = load ptr, ptr %4, align 8, !dbg !2027
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2027
  %tvmgen_default_fused_layout_transform_9.p0.strides = load ptr, ptr %5, align 8, !dbg !2027
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2027
  %dev_id = load i32, ptr %6, align 4, !dbg !2027
  %T_layout_trans55 = load ptr, ptr %T_layout_trans, align 8, !dbg !2027
  call void @llvm.assume(i1 true) [ "align"(ptr %T_layout_trans55, i64 64) ], !dbg !2027
  %7 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 4, !dbg !2027
  %tvmgen_default_fused_layout_transform_9.T_layout_trans.shape = load ptr, ptr %7, align 8, !dbg !2027
  %8 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 5, !dbg !2027
  %tvmgen_default_fused_layout_transform_9.T_layout_trans.strides = load ptr, ptr %8, align 8, !dbg !2027
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !2027

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %9(ptr nonnull @.str.499), !dbg !2027
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_layout_trans.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2027

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %10(ptr nonnull @.str.500), !dbg !2027
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2027
  %12 = load i32, ptr %11, align 4, !dbg !2027
  %13 = icmp eq i32 %12, 5, !dbg !2027
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !2027, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %14(ptr nonnull @.str.501), !dbg !2027
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2027
  %16 = load i16, ptr %15, align 2, !dbg !2027
  %17 = icmp eq i16 %16, 1, !dbg !2027
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2027
  %19 = load i8, ptr %18, align 1, !dbg !2027
  %20 = icmp eq i8 %19, 32, !dbg !2027
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2027
  %22 = load i8, ptr %21, align 1, !dbg !2027
  %23 = icmp eq i8 %22, 2, !dbg !2027
  %24 = and i1 %20, %23, !dbg !2027
  %25 = and i1 %17, %24, !dbg !2027
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !2027, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %26(ptr nonnull @.str.502), !dbg !2027
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_9.p0.shape, align 8, !dbg !2027, !tbaa !2041
  %28 = and i64 %27, 4294967295, !dbg !2027
  %29 = icmp eq i64 %28, 1, !dbg !2027
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !2027, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %30(ptr nonnull @.str.503), !dbg !2027
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_9.p0.shape, i64 1, !dbg !2027
  %32 = load i64, ptr %31, align 8, !dbg !2027, !tbaa !2051
  %33 = and i64 %32, 4294967295, !dbg !2027
  %34 = icmp eq i64 %33, 2, !dbg !2027
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !2027, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %35(ptr nonnull @.str.504), !dbg !2027
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_9.p0.shape, i64 2, !dbg !2027
  %37 = load i64, ptr %36, align 8, !dbg !2027, !tbaa !2053
  %38 = and i64 %37, 4294967295, !dbg !2027
  %39 = icmp eq i64 %38, 28, !dbg !2027
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !2027, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %40(ptr nonnull @.str.505), !dbg !2027
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_9.p0.shape, i64 3, !dbg !2027
  %42 = load i64, ptr %41, align 8, !dbg !2027, !tbaa !2056
  %43 = and i64 %42, 4294967295, !dbg !2027
  %44 = icmp eq i64 %43, 28, !dbg !2027
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !2027, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %45(ptr nonnull @.str.506), !dbg !2027
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_9.p0.shape, i64 4, !dbg !2027
  %47 = load i64, ptr %46, align 8, !dbg !2027, !tbaa !2058
  %48 = and i64 %47, 4294967295, !dbg !2027
  %49 = icmp eq i64 %48, 64, !dbg !2027
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !2027, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %50(ptr nonnull @.str.507), !dbg !2027
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_9.p0.strides, null, !dbg !2027
  br i1 %.not, label %if_end, label %if_then, !dbg !2027, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_9.p0.strides, i64 1, !dbg !2027
  %52 = load i64, ptr %51, align 8, !dbg !2027, !tbaa !2062
  %53 = and i64 %52, 4294967295, !dbg !2027
  %54 = icmp eq i64 %53, 50176, !dbg !2027
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_9.p0.strides, i64 2, !dbg !2027
  %56 = load i64, ptr %55, align 8, !dbg !2027, !tbaa !2072
  %57 = and i64 %56, 4294967295, !dbg !2027
  %58 = icmp eq i64 %57, 1792, !dbg !2027
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_9.p0.strides, i64 3, !dbg !2027
  %60 = load i64, ptr %59, align 8, !dbg !2027, !tbaa !2075
  %61 = and i64 %60, 4294967295, !dbg !2027
  %62 = icmp eq i64 %61, 64, !dbg !2027
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_9.p0.strides, i64 4, !dbg !2027
  %64 = load i64, ptr %63, align 8, !dbg !2027, !tbaa !2077
  %65 = and i64 %64, 4294967295, !dbg !2027
  %66 = icmp eq i64 %65, 1, !dbg !2027
  %67 = and i1 %62, %66, !dbg !2027
  %68 = and i1 %58, %67, !dbg !2027
  %69 = and i1 %54, %68, !dbg !2027
  br i1 %69, label %if_end, label %assert_fail23, !dbg !2027, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2027
  %71 = load i64, ptr %70, align 8, !dbg !2027
  %72 = icmp eq i64 %71, 0, !dbg !2027
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !2027, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %73(ptr nonnull @.str.508), !dbg !2027
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %74(ptr nonnull @.str.509), !dbg !2027
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2027
  %76 = load i32, ptr %75, align 4, !dbg !2027
  %77 = icmp eq i32 %76, 1, !dbg !2027
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !2027, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %78(ptr nonnull @.str.510), !dbg !2027
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 2, !dbg !2027
  %80 = load i32, ptr %79, align 4, !dbg !2027
  %81 = icmp eq i32 %80, 5, !dbg !2027
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !2027, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %82(ptr nonnull @.str.511), !dbg !2027
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 2, !dbg !2027
  %84 = load i16, ptr %83, align 2, !dbg !2027
  %85 = icmp eq i16 %84, 1, !dbg !2027
  %86 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 1, !dbg !2027
  %87 = load i8, ptr %86, align 1, !dbg !2027
  %88 = icmp eq i8 %87, 32, !dbg !2027
  %89 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 3, i32 0, !dbg !2027
  %90 = load i8, ptr %89, align 1, !dbg !2027
  %91 = icmp eq i8 %90, 2, !dbg !2027
  %92 = and i1 %88, %91, !dbg !2027
  %93 = and i1 %85, %92, !dbg !2027
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !2027, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %94(ptr nonnull @.str.512), !dbg !2027
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_layout_transform_9.T_layout_trans.shape, align 8, !dbg !2027, !tbaa !2081
  %96 = and i64 %95, 4294967295, !dbg !2027
  %97 = icmp eq i64 %96, 1, !dbg !2027
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !2027, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %98(ptr nonnull @.str.513), !dbg !2027
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_9.T_layout_trans.shape, i64 1, !dbg !2027
  %100 = load i64, ptr %99, align 8, !dbg !2027, !tbaa !2091
  %101 = and i64 %100, 4294967295, !dbg !2027
  %102 = icmp eq i64 %101, 1, !dbg !2027
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !2027, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %103(ptr nonnull @.str.514), !dbg !2027
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_9.T_layout_trans.shape, i64 2, !dbg !2027
  %105 = load i64, ptr %104, align 8, !dbg !2027, !tbaa !2093
  %106 = and i64 %105, 4294967295, !dbg !2027
  %107 = icmp eq i64 %106, 28, !dbg !2027
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !2027, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %108(ptr nonnull @.str.515), !dbg !2027
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_9.T_layout_trans.shape, i64 3, !dbg !2027
  %110 = load i64, ptr %109, align 8, !dbg !2027, !tbaa !2096
  %111 = and i64 %110, 4294967295, !dbg !2027
  %112 = icmp eq i64 %111, 28, !dbg !2027
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !2027, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %113(ptr nonnull @.str.516), !dbg !2027
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_9.T_layout_trans.shape, i64 4, !dbg !2027
  %115 = load i64, ptr %114, align 8, !dbg !2027, !tbaa !2098
  %116 = and i64 %115, 4294967295, !dbg !2027
  %117 = icmp eq i64 %116, 128, !dbg !2027
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !2027, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %118(ptr nonnull @.str.517), !dbg !2027
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_layout_transform_9.T_layout_trans.strides, null, !dbg !2027
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !2027, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_9.T_layout_trans.strides, i64 2, !dbg !2027
  %120 = load i64, ptr %119, align 8, !dbg !2027, !tbaa !2102
  %121 = and i64 %120, 4294967295, !dbg !2027
  %122 = icmp eq i64 %121, 3584, !dbg !2027
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_9.T_layout_trans.strides, i64 3, !dbg !2027
  %124 = load i64, ptr %123, align 8, !dbg !2027, !tbaa !2112
  %125 = and i64 %124, 4294967295, !dbg !2027
  %126 = icmp eq i64 %125, 128, !dbg !2027
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_9.T_layout_trans.strides, i64 4, !dbg !2027
  %128 = load i64, ptr %127, align 8, !dbg !2027, !tbaa !2114
  %129 = and i64 %128, 4294967295, !dbg !2027
  %130 = icmp eq i64 %129, 1, !dbg !2027
  %131 = and i1 %126, %130, !dbg !2027
  %132 = and i1 %122, %131, !dbg !2027
  br i1 %132, label %if_end46, label %assert_fail47, !dbg !2027, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %133 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 6, !dbg !2027
  %134 = load i64, ptr %133, align 8, !dbg !2027
  %135 = icmp eq i64 %134, 0, !dbg !2027
  br i1 %135, label %assert_end50, label %assert_fail49, !dbg !2027, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %136(ptr nonnull @.str.518), !dbg !2027
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %137 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %137(ptr nonnull @.str.519), !dbg !2027
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %138 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 0, !dbg !2027
  %139 = load i32, ptr %138, align 4, !dbg !2027
  %140 = icmp eq i32 %139, 1, !dbg !2027
  br i1 %140, label %assert_end52, label %assert_fail51, !dbg !2027, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %141(ptr nonnull @.str.520), !dbg !2027
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %142 = getelementptr inbounds %1, ptr %T_layout_trans, i64 0, i32 1, i32 1, !dbg !2027
  %143 = load i32, ptr %142, align 4, !dbg !2027
  %144 = icmp eq i32 %dev_id, %143, !dbg !2027
  br i1 %144, label %assert_end54, label %assert_fail53, !dbg !2027, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2027, !tbaa !19
  tail call void %145(ptr nonnull @.str.521), !dbg !2027
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %146 = tail call fastcc i32 @tvmgen_default_fused_layout_transform_9_compute_(ptr %T_layout_trans55, ptr %p056), !dbg !2027
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_layout_transform_reshape_squeeze(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2118 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2120, metadata !DIExpression()), !dbg !2126
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2121, metadata !DIExpression()), !dbg !2126
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2122, metadata !DIExpression()), !dbg !2126
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2123, metadata !DIExpression()), !dbg !2126
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2124, metadata !DIExpression()), !dbg !2126
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2125, metadata !DIExpression()), !dbg !2126
  %0 = icmp eq i32 %num_args, 2, !dbg !2126
  br i1 %0, label %assert_end, label %assert_fail, !dbg !2126, !prof !18

common.ret:                                       ; preds = %assert_end48, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ 0, %assert_end48 ]
  ret i32 %common.ret.op, !dbg !2126

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %1(ptr nonnull @.str.523), !dbg !2126
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2126, !tbaa !2127
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2126
  %T_squeeze.code = load i32, ptr %2, align 4, !dbg !2126, !tbaa !2138
  %p0 = load ptr, ptr %args, align 8, !dbg !2126
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2126
  %T_squeeze = load ptr, ptr %3, align 8, !dbg !2126
  %p050 = load ptr, ptr %p0, align 8, !dbg !2126
  call void @llvm.assume(i1 true) [ "align"(ptr %p050, i64 64) ], !dbg !2126
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2126
  %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape = load ptr, ptr %4, align 8, !dbg !2126
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2126
  %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.strides = load ptr, ptr %5, align 8, !dbg !2126
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2126
  %dev_id = load i32, ptr %6, align 4, !dbg !2126
  %T_squeeze49 = load ptr, ptr %T_squeeze, align 8, !dbg !2126
  call void @llvm.assume(i1 true) [ "align"(ptr %T_squeeze49, i64 64) ], !dbg !2126
  %7 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 4, !dbg !2126
  %tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.shape = load ptr, ptr %7, align 8, !dbg !2126
  %8 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 5, !dbg !2126
  %tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.strides = load ptr, ptr %8, align 8, !dbg !2126
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !2126

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %9(ptr nonnull @.str.524), !dbg !2126
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %T_squeeze.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2126

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %10(ptr nonnull @.str.525), !dbg !2126
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2126
  %12 = load i32, ptr %11, align 4, !dbg !2126
  %13 = icmp eq i32 %12, 5, !dbg !2126
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !2126, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %14(ptr nonnull @.str.526), !dbg !2126
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2126
  %16 = load i16, ptr %15, align 2, !dbg !2126
  %17 = icmp eq i16 %16, 1, !dbg !2126
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2126
  %19 = load i8, ptr %18, align 1, !dbg !2126
  %20 = icmp eq i8 %19, 32, !dbg !2126
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2126
  %22 = load i8, ptr %21, align 1, !dbg !2126
  %23 = icmp eq i8 %22, 2, !dbg !2126
  %24 = and i1 %20, %23, !dbg !2126
  %25 = and i1 %17, %24, !dbg !2126
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !2126, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %26(ptr nonnull @.str.527), !dbg !2126
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape, align 8, !dbg !2126, !tbaa !2140
  %28 = and i64 %27, 4294967295, !dbg !2126
  %29 = icmp eq i64 %28, 1, !dbg !2126
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !2126, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %30(ptr nonnull @.str.528), !dbg !2126
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape, i64 1, !dbg !2126
  %32 = load i64, ptr %31, align 8, !dbg !2126, !tbaa !2150
  %33 = and i64 %32, 4294967295, !dbg !2126
  %34 = icmp eq i64 %33, 64, !dbg !2126
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !2126, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %35(ptr nonnull @.str.529), !dbg !2126
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape, i64 2, !dbg !2126
  %37 = load i64, ptr %36, align 8, !dbg !2126, !tbaa !2152
  %38 = and i64 %37, 4294967295, !dbg !2126
  %39 = icmp eq i64 %38, 1, !dbg !2126
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !2126, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %40(ptr nonnull @.str.530), !dbg !2126
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape, i64 3, !dbg !2126
  %42 = load i64, ptr %41, align 8, !dbg !2126, !tbaa !2155
  %43 = and i64 %42, 4294967295, !dbg !2126
  %44 = icmp eq i64 %43, 1, !dbg !2126
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !2126, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %45(ptr nonnull @.str.531), !dbg !2126
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.shape, i64 4, !dbg !2126
  %47 = load i64, ptr %46, align 8, !dbg !2126, !tbaa !2157
  %48 = and i64 %47, 4294967295, !dbg !2126
  %49 = icmp eq i64 %48, 32, !dbg !2126
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !2126, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %50(ptr nonnull @.str.532), !dbg !2126
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.strides, null, !dbg !2126
  br i1 %.not, label %if_end, label %if_then, !dbg !2126, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.strides, i64 1, !dbg !2126
  %52 = load i64, ptr %51, align 8, !dbg !2126, !tbaa !2161
  %53 = and i64 %52, 4294967295, !dbg !2126
  %54 = icmp eq i64 %53, 32, !dbg !2126
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.p0.strides, i64 4, !dbg !2126
  %56 = load i64, ptr %55, align 8, !dbg !2126, !tbaa !2171
  %57 = and i64 %56, 4294967295, !dbg !2126
  %58 = icmp eq i64 %57, 1, !dbg !2126
  %59 = and i1 %54, %58, !dbg !2126
  br i1 %59, label %if_end, label %assert_fail23, !dbg !2126, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %60 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2126
  %61 = load i64, ptr %60, align 8, !dbg !2126
  %62 = icmp eq i64 %61, 0, !dbg !2126
  br i1 %62, label %assert_end26, label %assert_fail25, !dbg !2126, !prof !18

assert_fail23:                                    ; preds = %if_then
  %63 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %63(ptr nonnull @.str.533), !dbg !2126
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %64 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %64(ptr nonnull @.str.534), !dbg !2126
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %65 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2126
  %66 = load i32, ptr %65, align 4, !dbg !2126
  %67 = icmp eq i32 %66, 1, !dbg !2126
  br i1 %67, label %assert_end28, label %assert_fail27, !dbg !2126, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %68 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %68(ptr nonnull @.str.535), !dbg !2126
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %69 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 2, !dbg !2126
  %70 = load i32, ptr %69, align 4, !dbg !2126
  %71 = icmp eq i32 %70, 2, !dbg !2126
  br i1 %71, label %assert_end32, label %assert_fail29, !dbg !2126, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %72 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %72(ptr nonnull @.str.536), !dbg !2126
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %73 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 3, i32 2, !dbg !2126
  %74 = load i16, ptr %73, align 2, !dbg !2126
  %75 = icmp eq i16 %74, 1, !dbg !2126
  %76 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 3, i32 1, !dbg !2126
  %77 = load i8, ptr %76, align 1, !dbg !2126
  %78 = icmp eq i8 %77, 32, !dbg !2126
  %79 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 3, i32 0, !dbg !2126
  %80 = load i8, ptr %79, align 1, !dbg !2126
  %81 = icmp eq i8 %80, 2, !dbg !2126
  %82 = and i1 %78, %81, !dbg !2126
  %83 = and i1 %75, %82, !dbg !2126
  br i1 %83, label %assert_end34, label %assert_fail33, !dbg !2126, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %84(ptr nonnull @.str.537), !dbg !2126
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %85 = load i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.shape, align 8, !dbg !2126, !tbaa !2175
  %86 = and i64 %85, 4294967295, !dbg !2126
  %87 = icmp eq i64 %86, 1, !dbg !2126
  br i1 %87, label %assert_end36, label %assert_fail35, !dbg !2126, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %88(ptr nonnull @.str.538), !dbg !2126
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %89 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.shape, i64 1, !dbg !2126
  %90 = load i64, ptr %89, align 8, !dbg !2126, !tbaa !2185
  %91 = and i64 %90, 4294967295, !dbg !2126
  %92 = icmp eq i64 %91, 2048, !dbg !2126
  br i1 %92, label %assert_end38, label %assert_fail37, !dbg !2126, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %93(ptr nonnull @.str.539), !dbg !2126
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %.not51 = icmp eq ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.strides, null, !dbg !2126
  br i1 %.not51, label %if_end40, label %if_then39, !dbg !2126, !prof !52

if_then39:                                        ; preds = %assert_end38
  %94 = getelementptr inbounds i64, ptr %tvmgen_default_fused_layout_transform_reshape_squeeze.T_squeeze.strides, i64 1, !dbg !2126
  %95 = load i64, ptr %94, align 8, !dbg !2126, !tbaa !2187
  %96 = and i64 %95, 4294967295, !dbg !2126
  %97 = icmp eq i64 %96, 1, !dbg !2126
  br i1 %97, label %if_end40, label %assert_fail41, !dbg !2126, !prof !18

if_end40:                                         ; preds = %if_then39, %assert_end38
  %98 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 6, !dbg !2126
  %99 = load i64, ptr %98, align 8, !dbg !2126
  %100 = icmp eq i64 %99, 0, !dbg !2126
  br i1 %100, label %assert_end44, label %assert_fail43, !dbg !2126, !prof !18

assert_fail41:                                    ; preds = %if_then39
  %101 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %101(ptr nonnull @.str.540), !dbg !2126
  br label %common.ret

assert_fail43:                                    ; preds = %if_end40
  %102 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %102(ptr nonnull @.str.541), !dbg !2126
  br label %common.ret

assert_end44:                                     ; preds = %if_end40
  %103 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 1, i32 0, !dbg !2126
  %104 = load i32, ptr %103, align 4, !dbg !2126
  %105 = icmp eq i32 %104, 1, !dbg !2126
  br i1 %105, label %assert_end46, label %assert_fail45, !dbg !2126, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %106 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %106(ptr nonnull @.str.542), !dbg !2126
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %107 = getelementptr inbounds %1, ptr %T_squeeze, i64 0, i32 1, i32 1, !dbg !2126
  %108 = load i32, ptr %107, align 4, !dbg !2126
  %109 = icmp eq i32 %dev_id, %108, !dbg !2126
  br i1 %109, label %assert_end48, label %assert_fail47, !dbg !2126, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %110 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2126, !tbaa !19
  tail call void %110(ptr nonnull @.str.543), !dbg !2126
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  tail call fastcc void @tvmgen_default_fused_layout_transform_reshape_squeeze_compute_(ptr %T_squeeze49, ptr %p050), !dbg !2126
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_adaptive_avg_pool2d(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2197 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2199, metadata !DIExpression()), !dbg !2205
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2200, metadata !DIExpression()), !dbg !2205
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2201, metadata !DIExpression()), !dbg !2205
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2202, metadata !DIExpression()), !dbg !2205
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2203, metadata !DIExpression()), !dbg !2205
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2204, metadata !DIExpression()), !dbg !2205
  %0 = icmp eq i32 %num_args, 2, !dbg !2205
  br i1 %0, label %assert_end, label %assert_fail, !dbg !2205, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %141, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !2205

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %1(ptr nonnull @.str.544), !dbg !2205
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2205, !tbaa !2206
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2205
  %adaptive_pool_avg.code = load i32, ptr %2, align 4, !dbg !2205, !tbaa !2217
  %p0 = load ptr, ptr %args, align 8, !dbg !2205
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2205
  %adaptive_pool_avg = load ptr, ptr %3, align 8, !dbg !2205
  %p055 = load ptr, ptr %p0, align 8, !dbg !2205
  call void @llvm.assume(i1 true) [ "align"(ptr %p055, i64 64) ], !dbg !2205
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2205
  %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape = load ptr, ptr %4, align 8, !dbg !2205
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2205
  %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides = load ptr, ptr %5, align 8, !dbg !2205
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2205
  %dev_id = load i32, ptr %6, align 4, !dbg !2205
  %adaptive_pool_avg56 = load ptr, ptr %adaptive_pool_avg, align 8, !dbg !2205
  call void @llvm.assume(i1 true) [ "align"(ptr %adaptive_pool_avg56, i64 64) ], !dbg !2205
  %7 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 4, !dbg !2205
  %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape = load ptr, ptr %7, align 8, !dbg !2205
  %8 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 5, !dbg !2205
  %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.strides = load ptr, ptr %8, align 8, !dbg !2205
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !2205

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %9(ptr nonnull @.str.545), !dbg !2205
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %adaptive_pool_avg.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2205

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %10(ptr nonnull @.str.546), !dbg !2205
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2205
  %12 = load i32, ptr %11, align 4, !dbg !2205
  %13 = icmp eq i32 %12, 5, !dbg !2205
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !2205, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %14(ptr nonnull @.str.547), !dbg !2205
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2205
  %16 = load i16, ptr %15, align 2, !dbg !2205
  %17 = icmp eq i16 %16, 1, !dbg !2205
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2205
  %19 = load i8, ptr %18, align 1, !dbg !2205
  %20 = icmp eq i8 %19, 32, !dbg !2205
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2205
  %22 = load i8, ptr %21, align 1, !dbg !2205
  %23 = icmp eq i8 %22, 2, !dbg !2205
  %24 = and i1 %20, %23, !dbg !2205
  %25 = and i1 %17, %24, !dbg !2205
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !2205, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %26(ptr nonnull @.str.548), !dbg !2205
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape, align 8, !dbg !2205, !tbaa !2219
  %28 = and i64 %27, 4294967295, !dbg !2205
  %29 = icmp eq i64 %28, 1, !dbg !2205
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !2205, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %30(ptr nonnull @.str.549), !dbg !2205
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape, i64 1, !dbg !2205
  %32 = load i64, ptr %31, align 8, !dbg !2205, !tbaa !2229
  %33 = and i64 %32, 4294967295, !dbg !2205
  %34 = icmp eq i64 %33, 64, !dbg !2205
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !2205, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %35(ptr nonnull @.str.550), !dbg !2205
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape, i64 2, !dbg !2205
  %37 = load i64, ptr %36, align 8, !dbg !2205, !tbaa !2231
  %38 = and i64 %37, 4294967295, !dbg !2205
  %39 = icmp eq i64 %38, 7, !dbg !2205
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !2205, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %40(ptr nonnull @.str.551), !dbg !2205
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape, i64 3, !dbg !2205
  %42 = load i64, ptr %41, align 8, !dbg !2205, !tbaa !2234
  %43 = and i64 %42, 4294967295, !dbg !2205
  %44 = icmp eq i64 %43, 7, !dbg !2205
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !2205, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %45(ptr nonnull @.str.552), !dbg !2205
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.shape, i64 4, !dbg !2205
  %47 = load i64, ptr %46, align 8, !dbg !2205, !tbaa !2236
  %48 = and i64 %47, 4294967295, !dbg !2205
  %49 = icmp eq i64 %48, 32, !dbg !2205
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !2205, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %50(ptr nonnull @.str.553), !dbg !2205
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides, null, !dbg !2205
  br i1 %.not, label %if_end, label %if_then, !dbg !2205, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides, i64 1, !dbg !2205
  %52 = load i64, ptr %51, align 8, !dbg !2205, !tbaa !2240
  %53 = and i64 %52, 4294967295, !dbg !2205
  %54 = icmp eq i64 %53, 1568, !dbg !2205
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides, i64 2, !dbg !2205
  %56 = load i64, ptr %55, align 8, !dbg !2205, !tbaa !2250
  %57 = and i64 %56, 4294967295, !dbg !2205
  %58 = icmp eq i64 %57, 224, !dbg !2205
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides, i64 3, !dbg !2205
  %60 = load i64, ptr %59, align 8, !dbg !2205, !tbaa !2253
  %61 = and i64 %60, 4294967295, !dbg !2205
  %62 = icmp eq i64 %61, 32, !dbg !2205
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.p0.strides, i64 4, !dbg !2205
  %64 = load i64, ptr %63, align 8, !dbg !2205, !tbaa !2255
  %65 = and i64 %64, 4294967295, !dbg !2205
  %66 = icmp eq i64 %65, 1, !dbg !2205
  %67 = and i1 %62, %66, !dbg !2205
  %68 = and i1 %58, %67, !dbg !2205
  %69 = and i1 %54, %68, !dbg !2205
  br i1 %69, label %if_end, label %assert_fail23, !dbg !2205, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2205
  %71 = load i64, ptr %70, align 8, !dbg !2205
  %72 = icmp eq i64 %71, 0, !dbg !2205
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !2205, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %73(ptr nonnull @.str.554), !dbg !2205
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %74(ptr nonnull @.str.555), !dbg !2205
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2205
  %76 = load i32, ptr %75, align 4, !dbg !2205
  %77 = icmp eq i32 %76, 1, !dbg !2205
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !2205, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %78(ptr nonnull @.str.556), !dbg !2205
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 2, !dbg !2205
  %80 = load i32, ptr %79, align 4, !dbg !2205
  %81 = icmp eq i32 %80, 5, !dbg !2205
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !2205, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %82(ptr nonnull @.str.557), !dbg !2205
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 3, i32 2, !dbg !2205
  %84 = load i16, ptr %83, align 2, !dbg !2205
  %85 = icmp eq i16 %84, 1, !dbg !2205
  %86 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 3, i32 1, !dbg !2205
  %87 = load i8, ptr %86, align 1, !dbg !2205
  %88 = icmp eq i8 %87, 32, !dbg !2205
  %89 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 3, i32 0, !dbg !2205
  %90 = load i8, ptr %89, align 1, !dbg !2205
  %91 = icmp eq i8 %90, 2, !dbg !2205
  %92 = and i1 %88, %91, !dbg !2205
  %93 = and i1 %85, %92, !dbg !2205
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !2205, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %94(ptr nonnull @.str.558), !dbg !2205
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape, align 8, !dbg !2205, !tbaa !2259
  %96 = and i64 %95, 4294967295, !dbg !2205
  %97 = icmp eq i64 %96, 1, !dbg !2205
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !2205, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %98(ptr nonnull @.str.559), !dbg !2205
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape, i64 1, !dbg !2205
  %100 = load i64, ptr %99, align 8, !dbg !2205, !tbaa !2269
  %101 = and i64 %100, 4294967295, !dbg !2205
  %102 = icmp eq i64 %101, 64, !dbg !2205
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !2205, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %103(ptr nonnull @.str.560), !dbg !2205
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape, i64 2, !dbg !2205
  %105 = load i64, ptr %104, align 8, !dbg !2205, !tbaa !2271
  %106 = and i64 %105, 4294967295, !dbg !2205
  %107 = icmp eq i64 %106, 1, !dbg !2205
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !2205, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %108(ptr nonnull @.str.561), !dbg !2205
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape, i64 3, !dbg !2205
  %110 = load i64, ptr %109, align 8, !dbg !2205, !tbaa !2274
  %111 = and i64 %110, 4294967295, !dbg !2205
  %112 = icmp eq i64 %111, 1, !dbg !2205
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !2205, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %113(ptr nonnull @.str.562), !dbg !2205
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.shape, i64 4, !dbg !2205
  %115 = load i64, ptr %114, align 8, !dbg !2205, !tbaa !2276
  %116 = and i64 %115, 4294967295, !dbg !2205
  %117 = icmp eq i64 %116, 32, !dbg !2205
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !2205, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %118(ptr nonnull @.str.563), !dbg !2205
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.strides, null, !dbg !2205
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !2205, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.strides, i64 1, !dbg !2205
  %120 = load i64, ptr %119, align 8, !dbg !2205, !tbaa !2280
  %121 = and i64 %120, 4294967295, !dbg !2205
  %122 = icmp eq i64 %121, 32, !dbg !2205
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_adaptive_avg_pool2d.adaptive_pool_avg.strides, i64 4, !dbg !2205
  %124 = load i64, ptr %123, align 8, !dbg !2205, !tbaa !2290
  %125 = and i64 %124, 4294967295, !dbg !2205
  %126 = icmp eq i64 %125, 1, !dbg !2205
  %127 = and i1 %122, %126, !dbg !2205
  br i1 %127, label %if_end46, label %assert_fail47, !dbg !2205, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %128 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 6, !dbg !2205
  %129 = load i64, ptr %128, align 8, !dbg !2205
  %130 = icmp eq i64 %129, 0, !dbg !2205
  br i1 %130, label %assert_end50, label %assert_fail49, !dbg !2205, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %131 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %131(ptr nonnull @.str.564), !dbg !2205
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %132 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %132(ptr nonnull @.str.565), !dbg !2205
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %133 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 1, i32 0, !dbg !2205
  %134 = load i32, ptr %133, align 4, !dbg !2205
  %135 = icmp eq i32 %134, 1, !dbg !2205
  br i1 %135, label %assert_end52, label %assert_fail51, !dbg !2205, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %136 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %136(ptr nonnull @.str.566), !dbg !2205
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %137 = getelementptr inbounds %1, ptr %adaptive_pool_avg, i64 0, i32 1, i32 1, !dbg !2205
  %138 = load i32, ptr %137, align 4, !dbg !2205
  %139 = icmp eq i32 %dev_id, %138, !dbg !2205
  br i1 %139, label %assert_end54, label %assert_fail53, !dbg !2205, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %140 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2205, !tbaa !19
  tail call void %140(ptr nonnull @.str.567), !dbg !2205
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %141 = tail call fastcc i32 @tvmgen_default_fused_nn_adaptive_avg_pool2d_compute_(i32 %dev_id, ptr %p055, ptr %adaptive_pool_avg56), !dbg !2205
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2294 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2296, metadata !DIExpression()), !dbg !2302
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2297, metadata !DIExpression()), !dbg !2302
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2298, metadata !DIExpression()), !dbg !2302
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2299, metadata !DIExpression()), !dbg !2302
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2300, metadata !DIExpression()), !dbg !2302
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2301, metadata !DIExpression()), !dbg !2302
  %0 = icmp eq i32 %num_args, 4, !dbg !2302
  br i1 %0, label %assert_end, label %assert_fail, !dbg !2302, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %299, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !2302

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %1(ptr nonnull @.str.570), !dbg !2302
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2302, !tbaa !2303
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2302
  %p1.code = load i32, ptr %2, align 4, !dbg !2302, !tbaa !2314
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2302
  %p2.code = load i32, ptr %3, align 4, !dbg !2302, !tbaa !2316
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2302
  %T_add.code = load i32, ptr %4, align 4, !dbg !2302, !tbaa !2319
  %p0 = load ptr, ptr %args, align 8, !dbg !2302
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2302
  %p1 = load ptr, ptr %5, align 8, !dbg !2302
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2302
  %p2 = load ptr, ptr %6, align 8, !dbg !2302
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2302
  %T_add = load ptr, ptr %7, align 8, !dbg !2302
  %p0115 = load ptr, ptr %p0, align 8, !dbg !2302
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !2302
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2302
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.shape = load ptr, ptr %8, align 8, !dbg !2302
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2302
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.strides = load ptr, ptr %9, align 8, !dbg !2302
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2302
  %dev_id = load i32, ptr %10, align 4, !dbg !2302
  %p1116 = load ptr, ptr %p1, align 8, !dbg !2302
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !2302
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2302
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.shape = load ptr, ptr %11, align 8, !dbg !2302
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2302
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.strides = load ptr, ptr %12, align 8, !dbg !2302
  %p2118 = load ptr, ptr %p2, align 8, !dbg !2302
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !2302
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2302
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.shape = load ptr, ptr %13, align 8, !dbg !2302
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2302
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.strides = load ptr, ptr %14, align 8, !dbg !2302
  %T_add117 = load ptr, ptr %T_add, align 8, !dbg !2302
  call void @llvm.assume(i1 true) [ "align"(ptr %T_add117, i64 64) ], !dbg !2302
  %15 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 4, !dbg !2302
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.shape = load ptr, ptr %15, align 8, !dbg !2302
  %16 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 5, !dbg !2302
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.strides = load ptr, ptr %16, align 8, !dbg !2302
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2302

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %17(ptr nonnull @.str.571), !dbg !2302
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !2302

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %18(ptr nonnull @.str.572), !dbg !2302
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !2302

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %19(ptr nonnull @.str.573), !dbg !2302
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_add.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !2302

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %20(ptr nonnull @.str.574), !dbg !2302
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2302
  %22 = load i32, ptr %21, align 4, !dbg !2302
  %23 = icmp eq i32 %22, 5, !dbg !2302
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !2302, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %24(ptr nonnull @.str.575), !dbg !2302
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2302
  %26 = load i16, ptr %25, align 2, !dbg !2302
  %27 = icmp eq i16 %26, 1, !dbg !2302
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2302
  %29 = load i8, ptr %28, align 1, !dbg !2302
  %30 = icmp eq i8 %29, 32, !dbg !2302
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2302
  %32 = load i8, ptr %31, align 1, !dbg !2302
  %33 = icmp eq i8 %32, 2, !dbg !2302
  %34 = and i1 %30, %33, !dbg !2302
  %35 = and i1 %27, %34, !dbg !2302
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !2302, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %36(ptr nonnull @.str.576), !dbg !2302
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.shape, align 8, !dbg !2302, !tbaa !2321
  %38 = and i64 %37, 4294967295, !dbg !2302
  %39 = icmp eq i64 %38, 1, !dbg !2302
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !2302, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %40(ptr nonnull @.str.577), !dbg !2302
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.shape, i64 1, !dbg !2302
  %42 = load i64, ptr %41, align 8, !dbg !2302, !tbaa !2331
  %43 = and i64 %42, 4294967295, !dbg !2302
  %44 = icmp eq i64 %43, 16, !dbg !2302
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !2302, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %45(ptr nonnull @.str.578), !dbg !2302
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.shape, i64 2, !dbg !2302
  %47 = load i64, ptr %46, align 8, !dbg !2302, !tbaa !2333
  %48 = and i64 %47, 4294967295, !dbg !2302
  %49 = icmp eq i64 %48, 56, !dbg !2302
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !2302, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %50(ptr nonnull @.str.579), !dbg !2302
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.shape, i64 3, !dbg !2302
  %52 = load i64, ptr %51, align 8, !dbg !2302, !tbaa !2336
  %53 = and i64 %52, 4294967295, !dbg !2302
  %54 = icmp eq i64 %53, 56, !dbg !2302
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !2302, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %55(ptr nonnull @.str.580), !dbg !2302
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.shape, i64 4, !dbg !2302
  %57 = load i64, ptr %56, align 8, !dbg !2302, !tbaa !2338
  %58 = and i64 %57, 4294967295, !dbg !2302
  %59 = icmp eq i64 %58, 4, !dbg !2302
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !2302, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %60(ptr nonnull @.str.581), !dbg !2302
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.strides, null, !dbg !2302
  br i1 %.not, label %if_end, label %if_then, !dbg !2302, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.strides, i64 1, !dbg !2302
  %62 = load i64, ptr %61, align 8, !dbg !2302, !tbaa !2342
  %63 = and i64 %62, 4294967295, !dbg !2302
  %64 = icmp eq i64 %63, 12544, !dbg !2302
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.strides, i64 2, !dbg !2302
  %66 = load i64, ptr %65, align 8, !dbg !2302, !tbaa !2352
  %67 = and i64 %66, 4294967295, !dbg !2302
  %68 = icmp eq i64 %67, 224, !dbg !2302
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.strides, i64 3, !dbg !2302
  %70 = load i64, ptr %69, align 8, !dbg !2302, !tbaa !2355
  %71 = and i64 %70, 4294967295, !dbg !2302
  %72 = icmp eq i64 %71, 4, !dbg !2302
  %73 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p0.strides, i64 4, !dbg !2302
  %74 = load i64, ptr %73, align 8, !dbg !2302, !tbaa !2357
  %75 = and i64 %74, 4294967295, !dbg !2302
  %76 = icmp eq i64 %75, 1, !dbg !2302
  %77 = and i1 %72, %76, !dbg !2302
  %78 = and i1 %68, %77, !dbg !2302
  %79 = and i1 %64, %78, !dbg !2302
  br i1 %79, label %if_end, label %assert_fail29, !dbg !2302, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2302
  %81 = load i64, ptr %80, align 8, !dbg !2302
  %82 = icmp eq i64 %81, 0, !dbg !2302
  br i1 %82, label %assert_end32, label %assert_fail31, !dbg !2302, !prof !18

assert_fail29:                                    ; preds = %if_then
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %83(ptr nonnull @.str.582), !dbg !2302
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %84(ptr nonnull @.str.583), !dbg !2302
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %85 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2302
  %86 = load i32, ptr %85, align 4, !dbg !2302
  %87 = icmp eq i32 %86, 1, !dbg !2302
  br i1 %87, label %assert_end34, label %assert_fail33, !dbg !2302, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %88(ptr nonnull @.str.584), !dbg !2302
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %89 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2302
  %90 = load i32, ptr %89, align 4, !dbg !2302
  %91 = icmp eq i32 %90, 6, !dbg !2302
  br i1 %91, label %assert_end38, label %assert_fail35, !dbg !2302, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %92 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %92(ptr nonnull @.str.585), !dbg !2302
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %93 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2302
  %94 = load i16, ptr %93, align 2, !dbg !2302
  %95 = icmp eq i16 %94, 1, !dbg !2302
  %96 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2302
  %97 = load i8, ptr %96, align 1, !dbg !2302
  %98 = icmp eq i8 %97, 32, !dbg !2302
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2302
  %100 = load i8, ptr %99, align 1, !dbg !2302
  %101 = icmp eq i8 %100, 2, !dbg !2302
  %102 = and i1 %98, %101, !dbg !2302
  %103 = and i1 %95, %102, !dbg !2302
  br i1 %103, label %assert_end40, label %assert_fail39, !dbg !2302, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %104(ptr nonnull @.str.586), !dbg !2302
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %105 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.shape, align 8, !dbg !2302, !tbaa !2361
  %106 = and i64 %105, 4294967295, !dbg !2302
  %107 = icmp eq i64 %106, 8, !dbg !2302
  br i1 %107, label %assert_end42, label %assert_fail41, !dbg !2302, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %108(ptr nonnull @.str.587), !dbg !2302
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.shape, i64 1, !dbg !2302
  %110 = load i64, ptr %109, align 8, !dbg !2302, !tbaa !2371
  %111 = and i64 %110, 4294967295, !dbg !2302
  %112 = icmp eq i64 %111, 16, !dbg !2302
  br i1 %112, label %assert_end44, label %assert_fail43, !dbg !2302, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %113(ptr nonnull @.str.588), !dbg !2302
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.shape, i64 2, !dbg !2302
  %115 = load i64, ptr %114, align 8, !dbg !2302, !tbaa !2373
  %116 = and i64 %115, 4294967295, !dbg !2302
  %117 = icmp eq i64 %116, 1, !dbg !2302
  br i1 %117, label %assert_end46, label %assert_fail45, !dbg !2302, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %118(ptr nonnull @.str.589), !dbg !2302
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.shape, i64 3, !dbg !2302
  %120 = load i64, ptr %119, align 8, !dbg !2302, !tbaa !2376
  %121 = and i64 %120, 4294967295, !dbg !2302
  %122 = icmp eq i64 %121, 1, !dbg !2302
  br i1 %122, label %assert_end48, label %assert_fail47, !dbg !2302, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %123(ptr nonnull @.str.590), !dbg !2302
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.shape, i64 4, !dbg !2302
  %125 = load i64, ptr %124, align 8, !dbg !2302, !tbaa !2378
  %126 = and i64 %125, 4294967295, !dbg !2302
  %127 = icmp eq i64 %126, 4, !dbg !2302
  br i1 %127, label %assert_end50, label %assert_fail49, !dbg !2302, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %128(ptr nonnull @.str.591), !dbg !2302
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %129 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.shape, i64 5, !dbg !2302
  %130 = load i64, ptr %129, align 8, !dbg !2302, !tbaa !2382
  %131 = and i64 %130, 4294967295, !dbg !2302
  %132 = icmp eq i64 %131, 32, !dbg !2302
  br i1 %132, label %assert_end52, label %assert_fail51, !dbg !2302, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %133 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %133(ptr nonnull @.str.592), !dbg !2302
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.strides, null, !dbg !2302
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !2302, !prof !52

if_then53:                                        ; preds = %assert_end52
  %134 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.strides, align 8, !dbg !2302, !tbaa !2384
  %135 = and i64 %134, 4294967295, !dbg !2302
  %136 = icmp eq i64 %135, 2048, !dbg !2302
  %137 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.strides, i64 1, !dbg !2302
  %138 = load i64, ptr %137, align 8, !dbg !2302, !tbaa !2394
  %139 = and i64 %138, 4294967295, !dbg !2302
  %140 = icmp eq i64 %139, 128, !dbg !2302
  %141 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.strides, i64 4, !dbg !2302
  %142 = load i64, ptr %141, align 8, !dbg !2302, !tbaa !2396
  %143 = and i64 %142, 4294967295, !dbg !2302
  %144 = icmp eq i64 %143, 32, !dbg !2302
  %145 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p1.strides, i64 5, !dbg !2302
  %146 = load i64, ptr %145, align 8, !dbg !2302, !tbaa !2400
  %147 = and i64 %146, 4294967295, !dbg !2302
  %148 = icmp eq i64 %147, 1, !dbg !2302
  %149 = and i1 %144, %148, !dbg !2302
  %150 = and i1 %140, %149, !dbg !2302
  %151 = and i1 %136, %150, !dbg !2302
  br i1 %151, label %if_end54, label %assert_fail55, !dbg !2302, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %152 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2302
  %153 = load i64, ptr %152, align 8, !dbg !2302
  %154 = icmp eq i64 %153, 0, !dbg !2302
  br i1 %154, label %assert_end58, label %assert_fail57, !dbg !2302, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %155(ptr nonnull @.str.593), !dbg !2302
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %156(ptr nonnull @.str.594), !dbg !2302
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %157 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2302
  %158 = load i32, ptr %157, align 4, !dbg !2302
  %159 = icmp eq i32 %158, 1, !dbg !2302
  br i1 %159, label %assert_end60, label %assert_fail59, !dbg !2302, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %160(ptr nonnull @.str.595), !dbg !2302
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %161 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2302
  %162 = load i32, ptr %161, align 4, !dbg !2302
  %163 = icmp eq i32 %dev_id, %162, !dbg !2302
  br i1 %163, label %assert_end62, label %assert_fail61, !dbg !2302, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %164 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %164(ptr nonnull @.str.596), !dbg !2302
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %165 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2302
  %166 = load i32, ptr %165, align 4, !dbg !2302
  %167 = icmp eq i32 %166, 5, !dbg !2302
  br i1 %167, label %assert_end66, label %assert_fail63, !dbg !2302, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %168 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %168(ptr nonnull @.str.597), !dbg !2302
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %169 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2302
  %170 = load i16, ptr %169, align 2, !dbg !2302
  %171 = icmp eq i16 %170, 1, !dbg !2302
  %172 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2302
  %173 = load i8, ptr %172, align 1, !dbg !2302
  %174 = icmp eq i8 %173, 32, !dbg !2302
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2302
  %176 = load i8, ptr %175, align 1, !dbg !2302
  %177 = icmp eq i8 %176, 2, !dbg !2302
  %178 = and i1 %174, %177, !dbg !2302
  %179 = and i1 %171, %178, !dbg !2302
  br i1 %179, label %assert_end68, label %assert_fail67, !dbg !2302, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %180(ptr nonnull @.str.598), !dbg !2302
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %181 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.shape, align 8, !dbg !2302, !tbaa !2402
  %182 = and i64 %181, 4294967295, !dbg !2302
  %183 = icmp eq i64 %182, 1, !dbg !2302
  br i1 %183, label %assert_end70, label %assert_fail69, !dbg !2302, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %184(ptr nonnull @.str.599), !dbg !2302
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %185 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.shape, i64 1, !dbg !2302
  %186 = load i64, ptr %185, align 8, !dbg !2302, !tbaa !2412
  %187 = and i64 %186, 4294967295, !dbg !2302
  %188 = icmp eq i64 %187, 8, !dbg !2302
  br i1 %188, label %assert_end72, label %assert_fail71, !dbg !2302, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %189(ptr nonnull @.str.600), !dbg !2302
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.shape, i64 2, !dbg !2302
  %191 = load i64, ptr %190, align 8, !dbg !2302, !tbaa !2414
  %192 = and i64 %191, 4294967295, !dbg !2302
  %193 = icmp eq i64 %192, 1, !dbg !2302
  br i1 %193, label %assert_end74, label %assert_fail73, !dbg !2302, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %194(ptr nonnull @.str.601), !dbg !2302
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.shape, i64 3, !dbg !2302
  %196 = load i64, ptr %195, align 8, !dbg !2302, !tbaa !2417
  %197 = and i64 %196, 4294967295, !dbg !2302
  %198 = icmp eq i64 %197, 1, !dbg !2302
  br i1 %198, label %assert_end76, label %assert_fail75, !dbg !2302, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %199(ptr nonnull @.str.602), !dbg !2302
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.shape, i64 4, !dbg !2302
  %201 = load i64, ptr %200, align 8, !dbg !2302, !tbaa !2419
  %202 = and i64 %201, 4294967295, !dbg !2302
  %203 = icmp eq i64 %202, 32, !dbg !2302
  br i1 %203, label %assert_end78, label %assert_fail77, !dbg !2302, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %204(ptr nonnull @.str.603), !dbg !2302
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.strides, null, !dbg !2302
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !2302, !prof !52

if_then79:                                        ; preds = %assert_end78
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.strides, i64 1, !dbg !2302
  %206 = load i64, ptr %205, align 8, !dbg !2302, !tbaa !2423
  %207 = and i64 %206, 4294967295, !dbg !2302
  %208 = icmp eq i64 %207, 32, !dbg !2302
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.p2.strides, i64 4, !dbg !2302
  %210 = load i64, ptr %209, align 8, !dbg !2302, !tbaa !2433
  %211 = and i64 %210, 4294967295, !dbg !2302
  %212 = icmp eq i64 %211, 1, !dbg !2302
  %213 = and i1 %208, %212, !dbg !2302
  br i1 %213, label %if_end80, label %assert_fail81, !dbg !2302, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %214 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2302
  %215 = load i64, ptr %214, align 8, !dbg !2302
  %216 = icmp eq i64 %215, 0, !dbg !2302
  br i1 %216, label %assert_end84, label %assert_fail83, !dbg !2302, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %217(ptr nonnull @.str.604), !dbg !2302
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %218(ptr nonnull @.str.605), !dbg !2302
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %219 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2302
  %220 = load i32, ptr %219, align 4, !dbg !2302
  %221 = icmp eq i32 %220, 1, !dbg !2302
  br i1 %221, label %assert_end86, label %assert_fail85, !dbg !2302, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %222(ptr nonnull @.str.606), !dbg !2302
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %223 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2302
  %224 = load i32, ptr %223, align 4, !dbg !2302
  %225 = icmp eq i32 %dev_id, %224, !dbg !2302
  br i1 %225, label %assert_end88, label %assert_fail87, !dbg !2302, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %226 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %226(ptr nonnull @.str.607), !dbg !2302
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %227 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 2, !dbg !2302
  %228 = load i32, ptr %227, align 4, !dbg !2302
  %229 = icmp eq i32 %228, 5, !dbg !2302
  br i1 %229, label %assert_end92, label %assert_fail89, !dbg !2302, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %230 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %230(ptr nonnull @.str.608), !dbg !2302
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %231 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 2, !dbg !2302
  %232 = load i16, ptr %231, align 2, !dbg !2302
  %233 = icmp eq i16 %232, 1, !dbg !2302
  %234 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 1, !dbg !2302
  %235 = load i8, ptr %234, align 1, !dbg !2302
  %236 = icmp eq i8 %235, 32, !dbg !2302
  %237 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 0, !dbg !2302
  %238 = load i8, ptr %237, align 1, !dbg !2302
  %239 = icmp eq i8 %238, 2, !dbg !2302
  %240 = and i1 %236, %239, !dbg !2302
  %241 = and i1 %233, %240, !dbg !2302
  br i1 %241, label %assert_end94, label %assert_fail93, !dbg !2302, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %242(ptr nonnull @.str.609), !dbg !2302
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %243 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.shape, align 8, !dbg !2302, !tbaa !2437
  %244 = and i64 %243, 4294967295, !dbg !2302
  %245 = icmp eq i64 %244, 1, !dbg !2302
  br i1 %245, label %assert_end96, label %assert_fail95, !dbg !2302, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %246(ptr nonnull @.str.610), !dbg !2302
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.shape, i64 1, !dbg !2302
  %248 = load i64, ptr %247, align 8, !dbg !2302, !tbaa !2447
  %249 = and i64 %248, 4294967295, !dbg !2302
  %250 = icmp eq i64 %249, 8, !dbg !2302
  br i1 %250, label %assert_end98, label %assert_fail97, !dbg !2302, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %251(ptr nonnull @.str.611), !dbg !2302
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.shape, i64 2, !dbg !2302
  %253 = load i64, ptr %252, align 8, !dbg !2302, !tbaa !2449
  %254 = and i64 %253, 4294967295, !dbg !2302
  %255 = icmp eq i64 %254, 56, !dbg !2302
  br i1 %255, label %assert_end100, label %assert_fail99, !dbg !2302, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %256(ptr nonnull @.str.612), !dbg !2302
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.shape, i64 3, !dbg !2302
  %258 = load i64, ptr %257, align 8, !dbg !2302, !tbaa !2452
  %259 = and i64 %258, 4294967295, !dbg !2302
  %260 = icmp eq i64 %259, 56, !dbg !2302
  br i1 %260, label %assert_end102, label %assert_fail101, !dbg !2302, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %261(ptr nonnull @.str.613), !dbg !2302
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.shape, i64 4, !dbg !2302
  %263 = load i64, ptr %262, align 8, !dbg !2302, !tbaa !2454
  %264 = and i64 %263, 4294967295, !dbg !2302
  %265 = icmp eq i64 %264, 32, !dbg !2302
  br i1 %265, label %assert_end104, label %assert_fail103, !dbg !2302, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %266(ptr nonnull @.str.614), !dbg !2302
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.strides, null, !dbg !2302
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !2302, !prof !52

if_then105:                                       ; preds = %assert_end104
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.strides, i64 1, !dbg !2302
  %268 = load i64, ptr %267, align 8, !dbg !2302, !tbaa !2458
  %269 = and i64 %268, 4294967295, !dbg !2302
  %270 = icmp eq i64 %269, 100352, !dbg !2302
  %271 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.strides, i64 2, !dbg !2302
  %272 = load i64, ptr %271, align 8, !dbg !2302, !tbaa !2468
  %273 = and i64 %272, 4294967295, !dbg !2302
  %274 = icmp eq i64 %273, 1792, !dbg !2302
  %275 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.strides, i64 3, !dbg !2302
  %276 = load i64, ptr %275, align 8, !dbg !2302, !tbaa !2471
  %277 = and i64 %276, 4294967295, !dbg !2302
  %278 = icmp eq i64 %277, 32, !dbg !2302
  %279 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add.T_add.strides, i64 4, !dbg !2302
  %280 = load i64, ptr %279, align 8, !dbg !2302, !tbaa !2473
  %281 = and i64 %280, 4294967295, !dbg !2302
  %282 = icmp eq i64 %281, 1, !dbg !2302
  %283 = and i1 %278, %282, !dbg !2302
  %284 = and i1 %274, %283, !dbg !2302
  %285 = and i1 %270, %284, !dbg !2302
  br i1 %285, label %if_end106, label %assert_fail107, !dbg !2302, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %286 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 6, !dbg !2302
  %287 = load i64, ptr %286, align 8, !dbg !2302
  %288 = icmp eq i64 %287, 0, !dbg !2302
  br i1 %288, label %assert_end110, label %assert_fail109, !dbg !2302, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %289(ptr nonnull @.str.615), !dbg !2302
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %290(ptr nonnull @.str.616), !dbg !2302
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %291 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 0, !dbg !2302
  %292 = load i32, ptr %291, align 4, !dbg !2302
  %293 = icmp eq i32 %292, 1, !dbg !2302
  br i1 %293, label %assert_end112, label %assert_fail111, !dbg !2302, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %294(ptr nonnull @.str.617), !dbg !2302
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %295 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 1, !dbg !2302
  %296 = load i32, ptr %295, align 4, !dbg !2302
  %297 = icmp eq i32 %dev_id, %296, !dbg !2302
  br i1 %297, label %assert_end114, label %assert_fail113, !dbg !2302, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %298 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2302, !tbaa !19
  tail call void %298(ptr nonnull @.str.618), !dbg !2302
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %299 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_compute_(i32 %dev_id, ptr %p0115, ptr %p1116, ptr %T_add117, ptr %p2118), !dbg !2302
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2477 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2479, metadata !DIExpression()), !dbg !2485
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2480, metadata !DIExpression()), !dbg !2485
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2481, metadata !DIExpression()), !dbg !2485
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2482, metadata !DIExpression()), !dbg !2485
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2483, metadata !DIExpression()), !dbg !2485
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2484, metadata !DIExpression()), !dbg !2485
  %0 = icmp eq i32 %num_args, 4, !dbg !2485
  br i1 %0, label %assert_end, label %assert_fail, !dbg !2485, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %289, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !2485

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %1(ptr nonnull @.str.620), !dbg !2485
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2485, !tbaa !2486
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2485
  %p1.code = load i32, ptr %2, align 4, !dbg !2485, !tbaa !2497
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2485
  %p2.code = load i32, ptr %3, align 4, !dbg !2485, !tbaa !2499
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2485
  %T_add.code = load i32, ptr %4, align 4, !dbg !2485, !tbaa !2502
  %p0 = load ptr, ptr %args, align 8, !dbg !2485
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2485
  %p1 = load ptr, ptr %5, align 8, !dbg !2485
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2485
  %p2 = load ptr, ptr %6, align 8, !dbg !2485
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2485
  %T_add = load ptr, ptr %7, align 8, !dbg !2485
  %p0115 = load ptr, ptr %p0, align 8, !dbg !2485
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !2485
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2485
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.shape = load ptr, ptr %8, align 8, !dbg !2485
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2485
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.strides = load ptr, ptr %9, align 8, !dbg !2485
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2485
  %dev_id = load i32, ptr %10, align 4, !dbg !2485
  %p1116 = load ptr, ptr %p1, align 8, !dbg !2485
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !2485
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2485
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.shape = load ptr, ptr %11, align 8, !dbg !2485
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2485
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.strides = load ptr, ptr %12, align 8, !dbg !2485
  %p2118 = load ptr, ptr %p2, align 8, !dbg !2485
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !2485
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2485
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.shape = load ptr, ptr %13, align 8, !dbg !2485
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2485
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.strides = load ptr, ptr %14, align 8, !dbg !2485
  %T_add117 = load ptr, ptr %T_add, align 8, !dbg !2485
  call void @llvm.assume(i1 true) [ "align"(ptr %T_add117, i64 64) ], !dbg !2485
  %15 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 4, !dbg !2485
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.shape = load ptr, ptr %15, align 8, !dbg !2485
  %16 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 5, !dbg !2485
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.strides = load ptr, ptr %16, align 8, !dbg !2485
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2485

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %17(ptr nonnull @.str.621), !dbg !2485
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !2485

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %18(ptr nonnull @.str.622), !dbg !2485
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !2485

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %19(ptr nonnull @.str.623), !dbg !2485
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_add.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !2485

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %20(ptr nonnull @.str.624), !dbg !2485
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2485
  %22 = load i32, ptr %21, align 4, !dbg !2485
  %23 = icmp eq i32 %22, 5, !dbg !2485
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !2485, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %24(ptr nonnull @.str.625), !dbg !2485
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2485
  %26 = load i16, ptr %25, align 2, !dbg !2485
  %27 = icmp eq i16 %26, 1, !dbg !2485
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2485
  %29 = load i8, ptr %28, align 1, !dbg !2485
  %30 = icmp eq i8 %29, 32, !dbg !2485
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2485
  %32 = load i8, ptr %31, align 1, !dbg !2485
  %33 = icmp eq i8 %32, 2, !dbg !2485
  %34 = and i1 %30, %33, !dbg !2485
  %35 = and i1 %27, %34, !dbg !2485
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !2485, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %36(ptr nonnull @.str.626), !dbg !2485
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.shape, align 8, !dbg !2485, !tbaa !2504
  %38 = and i64 %37, 4294967295, !dbg !2485
  %39 = icmp eq i64 %38, 1, !dbg !2485
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !2485, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %40(ptr nonnull @.str.627), !dbg !2485
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.shape, i64 1, !dbg !2485
  %42 = load i64, ptr %41, align 8, !dbg !2485, !tbaa !2514
  %43 = and i64 %42, 4294967295, !dbg !2485
  %44 = icmp eq i64 %43, 1, !dbg !2485
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !2485, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %45(ptr nonnull @.str.628), !dbg !2485
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.shape, i64 2, !dbg !2485
  %47 = load i64, ptr %46, align 8, !dbg !2485, !tbaa !2516
  %48 = and i64 %47, 4294967295, !dbg !2485
  %49 = icmp eq i64 %48, 56, !dbg !2485
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !2485, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %50(ptr nonnull @.str.629), !dbg !2485
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.shape, i64 3, !dbg !2485
  %52 = load i64, ptr %51, align 8, !dbg !2485, !tbaa !2519
  %53 = and i64 %52, 4294967295, !dbg !2485
  %54 = icmp eq i64 %53, 56, !dbg !2485
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !2485, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %55(ptr nonnull @.str.630), !dbg !2485
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.shape, i64 4, !dbg !2485
  %57 = load i64, ptr %56, align 8, !dbg !2485, !tbaa !2521
  %58 = and i64 %57, 4294967295, !dbg !2485
  %59 = icmp eq i64 %58, 256, !dbg !2485
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !2485, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %60(ptr nonnull @.str.631), !dbg !2485
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.strides, null, !dbg !2485
  br i1 %.not, label %if_end, label %if_then, !dbg !2485, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.strides, i64 2, !dbg !2485
  %62 = load i64, ptr %61, align 8, !dbg !2485, !tbaa !2525
  %63 = and i64 %62, 4294967295, !dbg !2485
  %64 = icmp eq i64 %63, 14336, !dbg !2485
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.strides, i64 3, !dbg !2485
  %66 = load i64, ptr %65, align 8, !dbg !2485, !tbaa !2535
  %67 = and i64 %66, 4294967295, !dbg !2485
  %68 = icmp eq i64 %67, 256, !dbg !2485
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p0.strides, i64 4, !dbg !2485
  %70 = load i64, ptr %69, align 8, !dbg !2485, !tbaa !2537
  %71 = and i64 %70, 4294967295, !dbg !2485
  %72 = icmp eq i64 %71, 1, !dbg !2485
  %73 = and i1 %68, %72, !dbg !2485
  %74 = and i1 %64, %73, !dbg !2485
  br i1 %74, label %if_end, label %assert_fail29, !dbg !2485, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2485
  %76 = load i64, ptr %75, align 8, !dbg !2485
  %77 = icmp eq i64 %76, 0, !dbg !2485
  br i1 %77, label %assert_end32, label %assert_fail31, !dbg !2485, !prof !18

assert_fail29:                                    ; preds = %if_then
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %78(ptr nonnull @.str.632), !dbg !2485
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %79(ptr nonnull @.str.633), !dbg !2485
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2485
  %81 = load i32, ptr %80, align 4, !dbg !2485
  %82 = icmp eq i32 %81, 1, !dbg !2485
  br i1 %82, label %assert_end34, label %assert_fail33, !dbg !2485, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %83(ptr nonnull @.str.634), !dbg !2485
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2485
  %85 = load i32, ptr %84, align 4, !dbg !2485
  %86 = icmp eq i32 %85, 6, !dbg !2485
  br i1 %86, label %assert_end38, label %assert_fail35, !dbg !2485, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %87 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %87(ptr nonnull @.str.635), !dbg !2485
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %88 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2485
  %89 = load i16, ptr %88, align 2, !dbg !2485
  %90 = icmp eq i16 %89, 1, !dbg !2485
  %91 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2485
  %92 = load i8, ptr %91, align 1, !dbg !2485
  %93 = icmp eq i8 %92, 32, !dbg !2485
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2485
  %95 = load i8, ptr %94, align 1, !dbg !2485
  %96 = icmp eq i8 %95, 2, !dbg !2485
  %97 = and i1 %93, %96, !dbg !2485
  %98 = and i1 %90, %97, !dbg !2485
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !2485, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %99(ptr nonnull @.str.636), !dbg !2485
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.shape, align 8, !dbg !2485, !tbaa !2541
  %101 = and i64 %100, 4294967295, !dbg !2485
  %102 = icmp eq i64 %101, 8, !dbg !2485
  br i1 %102, label %assert_end42, label %assert_fail41, !dbg !2485, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %103(ptr nonnull @.str.637), !dbg !2485
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.shape, i64 1, !dbg !2485
  %105 = load i64, ptr %104, align 8, !dbg !2485, !tbaa !2551
  %106 = and i64 %105, 4294967295, !dbg !2485
  %107 = icmp eq i64 %106, 1, !dbg !2485
  br i1 %107, label %assert_end44, label %assert_fail43, !dbg !2485, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %108(ptr nonnull @.str.638), !dbg !2485
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.shape, i64 2, !dbg !2485
  %110 = load i64, ptr %109, align 8, !dbg !2485, !tbaa !2553
  %111 = and i64 %110, 4294967295, !dbg !2485
  %112 = icmp eq i64 %111, 1, !dbg !2485
  br i1 %112, label %assert_end46, label %assert_fail45, !dbg !2485, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %113(ptr nonnull @.str.639), !dbg !2485
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.shape, i64 3, !dbg !2485
  %115 = load i64, ptr %114, align 8, !dbg !2485, !tbaa !2556
  %116 = and i64 %115, 4294967295, !dbg !2485
  %117 = icmp eq i64 %116, 1, !dbg !2485
  br i1 %117, label %assert_end48, label %assert_fail47, !dbg !2485, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %118(ptr nonnull @.str.640), !dbg !2485
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.shape, i64 4, !dbg !2485
  %120 = load i64, ptr %119, align 8, !dbg !2485, !tbaa !2558
  %121 = and i64 %120, 4294967295, !dbg !2485
  %122 = icmp eq i64 %121, 256, !dbg !2485
  br i1 %122, label %assert_end50, label %assert_fail49, !dbg !2485, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %123(ptr nonnull @.str.641), !dbg !2485
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.shape, i64 5, !dbg !2485
  %125 = load i64, ptr %124, align 8, !dbg !2485, !tbaa !2562
  %126 = and i64 %125, 4294967295, !dbg !2485
  %127 = icmp eq i64 %126, 64, !dbg !2485
  br i1 %127, label %assert_end52, label %assert_fail51, !dbg !2485, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %128(ptr nonnull @.str.642), !dbg !2485
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.strides, null, !dbg !2485
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !2485, !prof !52

if_then53:                                        ; preds = %assert_end52
  %129 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.strides, align 8, !dbg !2485, !tbaa !2564
  %130 = and i64 %129, 4294967295, !dbg !2485
  %131 = icmp eq i64 %130, 16384, !dbg !2485
  %132 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.strides, i64 4, !dbg !2485
  %133 = load i64, ptr %132, align 8, !dbg !2485, !tbaa !2574
  %134 = and i64 %133, 4294967295, !dbg !2485
  %135 = icmp eq i64 %134, 64, !dbg !2485
  %136 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p1.strides, i64 5, !dbg !2485
  %137 = load i64, ptr %136, align 8, !dbg !2485, !tbaa !2578
  %138 = and i64 %137, 4294967295, !dbg !2485
  %139 = icmp eq i64 %138, 1, !dbg !2485
  %140 = and i1 %135, %139, !dbg !2485
  %141 = and i1 %131, %140, !dbg !2485
  br i1 %141, label %if_end54, label %assert_fail55, !dbg !2485, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %142 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2485
  %143 = load i64, ptr %142, align 8, !dbg !2485
  %144 = icmp eq i64 %143, 0, !dbg !2485
  br i1 %144, label %assert_end58, label %assert_fail57, !dbg !2485, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %145(ptr nonnull @.str.643), !dbg !2485
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %146(ptr nonnull @.str.644), !dbg !2485
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %147 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2485
  %148 = load i32, ptr %147, align 4, !dbg !2485
  %149 = icmp eq i32 %148, 1, !dbg !2485
  br i1 %149, label %assert_end60, label %assert_fail59, !dbg !2485, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %150(ptr nonnull @.str.645), !dbg !2485
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %151 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2485
  %152 = load i32, ptr %151, align 4, !dbg !2485
  %153 = icmp eq i32 %dev_id, %152, !dbg !2485
  br i1 %153, label %assert_end62, label %assert_fail61, !dbg !2485, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %154 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %154(ptr nonnull @.str.646), !dbg !2485
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %155 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2485
  %156 = load i32, ptr %155, align 4, !dbg !2485
  %157 = icmp eq i32 %156, 5, !dbg !2485
  br i1 %157, label %assert_end66, label %assert_fail63, !dbg !2485, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %158 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %158(ptr nonnull @.str.647), !dbg !2485
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %159 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2485
  %160 = load i16, ptr %159, align 2, !dbg !2485
  %161 = icmp eq i16 %160, 1, !dbg !2485
  %162 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2485
  %163 = load i8, ptr %162, align 1, !dbg !2485
  %164 = icmp eq i8 %163, 32, !dbg !2485
  %165 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2485
  %166 = load i8, ptr %165, align 1, !dbg !2485
  %167 = icmp eq i8 %166, 2, !dbg !2485
  %168 = and i1 %164, %167, !dbg !2485
  %169 = and i1 %161, %168, !dbg !2485
  br i1 %169, label %assert_end68, label %assert_fail67, !dbg !2485, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %170(ptr nonnull @.str.648), !dbg !2485
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %171 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.shape, align 8, !dbg !2485, !tbaa !2580
  %172 = and i64 %171, 4294967295, !dbg !2485
  %173 = icmp eq i64 %172, 1, !dbg !2485
  br i1 %173, label %assert_end70, label %assert_fail69, !dbg !2485, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %174(ptr nonnull @.str.649), !dbg !2485
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %175 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.shape, i64 1, !dbg !2485
  %176 = load i64, ptr %175, align 8, !dbg !2485, !tbaa !2590
  %177 = and i64 %176, 4294967295, !dbg !2485
  %178 = icmp eq i64 %177, 8, !dbg !2485
  br i1 %178, label %assert_end72, label %assert_fail71, !dbg !2485, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %179(ptr nonnull @.str.650), !dbg !2485
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.shape, i64 2, !dbg !2485
  %181 = load i64, ptr %180, align 8, !dbg !2485, !tbaa !2592
  %182 = and i64 %181, 4294967295, !dbg !2485
  %183 = icmp eq i64 %182, 1, !dbg !2485
  br i1 %183, label %assert_end74, label %assert_fail73, !dbg !2485, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %184(ptr nonnull @.str.651), !dbg !2485
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %185 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.shape, i64 3, !dbg !2485
  %186 = load i64, ptr %185, align 8, !dbg !2485, !tbaa !2595
  %187 = and i64 %186, 4294967295, !dbg !2485
  %188 = icmp eq i64 %187, 1, !dbg !2485
  br i1 %188, label %assert_end76, label %assert_fail75, !dbg !2485, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %189(ptr nonnull @.str.652), !dbg !2485
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.shape, i64 4, !dbg !2485
  %191 = load i64, ptr %190, align 8, !dbg !2485, !tbaa !2597
  %192 = and i64 %191, 4294967295, !dbg !2485
  %193 = icmp eq i64 %192, 64, !dbg !2485
  br i1 %193, label %assert_end78, label %assert_fail77, !dbg !2485, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %194(ptr nonnull @.str.653), !dbg !2485
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.strides, null, !dbg !2485
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !2485, !prof !52

if_then79:                                        ; preds = %assert_end78
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.strides, i64 1, !dbg !2485
  %196 = load i64, ptr %195, align 8, !dbg !2485, !tbaa !2601
  %197 = and i64 %196, 4294967295, !dbg !2485
  %198 = icmp eq i64 %197, 64, !dbg !2485
  %199 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.p2.strides, i64 4, !dbg !2485
  %200 = load i64, ptr %199, align 8, !dbg !2485, !tbaa !2611
  %201 = and i64 %200, 4294967295, !dbg !2485
  %202 = icmp eq i64 %201, 1, !dbg !2485
  %203 = and i1 %198, %202, !dbg !2485
  br i1 %203, label %if_end80, label %assert_fail81, !dbg !2485, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %204 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2485
  %205 = load i64, ptr %204, align 8, !dbg !2485
  %206 = icmp eq i64 %205, 0, !dbg !2485
  br i1 %206, label %assert_end84, label %assert_fail83, !dbg !2485, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %207(ptr nonnull @.str.654), !dbg !2485
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %208(ptr nonnull @.str.655), !dbg !2485
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %209 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2485
  %210 = load i32, ptr %209, align 4, !dbg !2485
  %211 = icmp eq i32 %210, 1, !dbg !2485
  br i1 %211, label %assert_end86, label %assert_fail85, !dbg !2485, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %212(ptr nonnull @.str.656), !dbg !2485
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %213 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2485
  %214 = load i32, ptr %213, align 4, !dbg !2485
  %215 = icmp eq i32 %dev_id, %214, !dbg !2485
  br i1 %215, label %assert_end88, label %assert_fail87, !dbg !2485, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %216 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %216(ptr nonnull @.str.657), !dbg !2485
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %217 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 2, !dbg !2485
  %218 = load i32, ptr %217, align 4, !dbg !2485
  %219 = icmp eq i32 %218, 5, !dbg !2485
  br i1 %219, label %assert_end92, label %assert_fail89, !dbg !2485, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %220 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %220(ptr nonnull @.str.658), !dbg !2485
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %221 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 2, !dbg !2485
  %222 = load i16, ptr %221, align 2, !dbg !2485
  %223 = icmp eq i16 %222, 1, !dbg !2485
  %224 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 1, !dbg !2485
  %225 = load i8, ptr %224, align 1, !dbg !2485
  %226 = icmp eq i8 %225, 32, !dbg !2485
  %227 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 0, !dbg !2485
  %228 = load i8, ptr %227, align 1, !dbg !2485
  %229 = icmp eq i8 %228, 2, !dbg !2485
  %230 = and i1 %226, %229, !dbg !2485
  %231 = and i1 %223, %230, !dbg !2485
  br i1 %231, label %assert_end94, label %assert_fail93, !dbg !2485, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %232 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %232(ptr nonnull @.str.659), !dbg !2485
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %233 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.shape, align 8, !dbg !2485, !tbaa !2615
  %234 = and i64 %233, 4294967295, !dbg !2485
  %235 = icmp eq i64 %234, 1, !dbg !2485
  br i1 %235, label %assert_end96, label %assert_fail95, !dbg !2485, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %236(ptr nonnull @.str.660), !dbg !2485
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %237 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.shape, i64 1, !dbg !2485
  %238 = load i64, ptr %237, align 8, !dbg !2485, !tbaa !2625
  %239 = and i64 %238, 4294967295, !dbg !2485
  %240 = icmp eq i64 %239, 8, !dbg !2485
  br i1 %240, label %assert_end98, label %assert_fail97, !dbg !2485, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %241(ptr nonnull @.str.661), !dbg !2485
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.shape, i64 2, !dbg !2485
  %243 = load i64, ptr %242, align 8, !dbg !2485, !tbaa !2627
  %244 = and i64 %243, 4294967295, !dbg !2485
  %245 = icmp eq i64 %244, 28, !dbg !2485
  br i1 %245, label %assert_end100, label %assert_fail99, !dbg !2485, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %246(ptr nonnull @.str.662), !dbg !2485
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.shape, i64 3, !dbg !2485
  %248 = load i64, ptr %247, align 8, !dbg !2485, !tbaa !2630
  %249 = and i64 %248, 4294967295, !dbg !2485
  %250 = icmp eq i64 %249, 28, !dbg !2485
  br i1 %250, label %assert_end102, label %assert_fail101, !dbg !2485, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %251(ptr nonnull @.str.663), !dbg !2485
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.shape, i64 4, !dbg !2485
  %253 = load i64, ptr %252, align 8, !dbg !2485, !tbaa !2632
  %254 = and i64 %253, 4294967295, !dbg !2485
  %255 = icmp eq i64 %254, 64, !dbg !2485
  br i1 %255, label %assert_end104, label %assert_fail103, !dbg !2485, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %256(ptr nonnull @.str.664), !dbg !2485
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.strides, null, !dbg !2485
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !2485, !prof !52

if_then105:                                       ; preds = %assert_end104
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.strides, i64 1, !dbg !2485
  %258 = load i64, ptr %257, align 8, !dbg !2485, !tbaa !2636
  %259 = and i64 %258, 4294967295, !dbg !2485
  %260 = icmp eq i64 %259, 50176, !dbg !2485
  %261 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.strides, i64 2, !dbg !2485
  %262 = load i64, ptr %261, align 8, !dbg !2485, !tbaa !2646
  %263 = and i64 %262, 4294967295, !dbg !2485
  %264 = icmp eq i64 %263, 1792, !dbg !2485
  %265 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.strides, i64 3, !dbg !2485
  %266 = load i64, ptr %265, align 8, !dbg !2485, !tbaa !2649
  %267 = and i64 %266, 4294967295, !dbg !2485
  %268 = icmp eq i64 %267, 64, !dbg !2485
  %269 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1.T_add.strides, i64 4, !dbg !2485
  %270 = load i64, ptr %269, align 8, !dbg !2485, !tbaa !2651
  %271 = and i64 %270, 4294967295, !dbg !2485
  %272 = icmp eq i64 %271, 1, !dbg !2485
  %273 = and i1 %268, %272, !dbg !2485
  %274 = and i1 %264, %273, !dbg !2485
  %275 = and i1 %260, %274, !dbg !2485
  br i1 %275, label %if_end106, label %assert_fail107, !dbg !2485, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %276 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 6, !dbg !2485
  %277 = load i64, ptr %276, align 8, !dbg !2485
  %278 = icmp eq i64 %277, 0, !dbg !2485
  br i1 %278, label %assert_end110, label %assert_fail109, !dbg !2485, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %279 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %279(ptr nonnull @.str.665), !dbg !2485
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %280 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %280(ptr nonnull @.str.666), !dbg !2485
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %281 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 0, !dbg !2485
  %282 = load i32, ptr %281, align 4, !dbg !2485
  %283 = icmp eq i32 %282, 1, !dbg !2485
  br i1 %283, label %assert_end112, label %assert_fail111, !dbg !2485, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %284(ptr nonnull @.str.667), !dbg !2485
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %285 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 1, !dbg !2485
  %286 = load i32, ptr %285, align 4, !dbg !2485
  %287 = icmp eq i32 %dev_id, %286, !dbg !2485
  br i1 %287, label %assert_end114, label %assert_fail113, !dbg !2485, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %288 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2485, !tbaa !19
  tail call void %288(ptr nonnull @.str.668), !dbg !2485
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %289 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_compute_(i32 %dev_id, ptr %p0115, ptr %p1116, ptr %T_add117, ptr %p2118), !dbg !2485
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2655 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2657, metadata !DIExpression()), !dbg !2663
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2658, metadata !DIExpression()), !dbg !2663
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2659, metadata !DIExpression()), !dbg !2663
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2660, metadata !DIExpression()), !dbg !2663
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2661, metadata !DIExpression()), !dbg !2663
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2662, metadata !DIExpression()), !dbg !2663
  %0 = icmp eq i32 %num_args, 4, !dbg !2663
  br i1 %0, label %assert_end, label %assert_fail, !dbg !2663, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %289, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !2663

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %1(ptr nonnull @.str.670), !dbg !2663
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2663, !tbaa !2664
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2663
  %p1.code = load i32, ptr %2, align 4, !dbg !2663, !tbaa !2675
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2663
  %p2.code = load i32, ptr %3, align 4, !dbg !2663, !tbaa !2677
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2663
  %T_add.code = load i32, ptr %4, align 4, !dbg !2663, !tbaa !2680
  %p0 = load ptr, ptr %args, align 8, !dbg !2663
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2663
  %p1 = load ptr, ptr %5, align 8, !dbg !2663
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2663
  %p2 = load ptr, ptr %6, align 8, !dbg !2663
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2663
  %T_add = load ptr, ptr %7, align 8, !dbg !2663
  %p0115 = load ptr, ptr %p0, align 8, !dbg !2663
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !2663
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2663
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.shape = load ptr, ptr %8, align 8, !dbg !2663
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2663
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.strides = load ptr, ptr %9, align 8, !dbg !2663
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2663
  %dev_id = load i32, ptr %10, align 4, !dbg !2663
  %p1116 = load ptr, ptr %p1, align 8, !dbg !2663
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !2663
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2663
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.shape = load ptr, ptr %11, align 8, !dbg !2663
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2663
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.strides = load ptr, ptr %12, align 8, !dbg !2663
  %p2118 = load ptr, ptr %p2, align 8, !dbg !2663
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !2663
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2663
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.shape = load ptr, ptr %13, align 8, !dbg !2663
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2663
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.strides = load ptr, ptr %14, align 8, !dbg !2663
  %T_add117 = load ptr, ptr %T_add, align 8, !dbg !2663
  call void @llvm.assume(i1 true) [ "align"(ptr %T_add117, i64 64) ], !dbg !2663
  %15 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 4, !dbg !2663
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.shape = load ptr, ptr %15, align 8, !dbg !2663
  %16 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 5, !dbg !2663
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.strides = load ptr, ptr %16, align 8, !dbg !2663
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2663

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %17(ptr nonnull @.str.671), !dbg !2663
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !2663

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %18(ptr nonnull @.str.672), !dbg !2663
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !2663

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %19(ptr nonnull @.str.673), !dbg !2663
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_add.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !2663

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %20(ptr nonnull @.str.674), !dbg !2663
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2663
  %22 = load i32, ptr %21, align 4, !dbg !2663
  %23 = icmp eq i32 %22, 5, !dbg !2663
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !2663, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %24(ptr nonnull @.str.675), !dbg !2663
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2663
  %26 = load i16, ptr %25, align 2, !dbg !2663
  %27 = icmp eq i16 %26, 1, !dbg !2663
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2663
  %29 = load i8, ptr %28, align 1, !dbg !2663
  %30 = icmp eq i8 %29, 32, !dbg !2663
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2663
  %32 = load i8, ptr %31, align 1, !dbg !2663
  %33 = icmp eq i8 %32, 2, !dbg !2663
  %34 = and i1 %30, %33, !dbg !2663
  %35 = and i1 %27, %34, !dbg !2663
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !2663, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %36(ptr nonnull @.str.676), !dbg !2663
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.shape, align 8, !dbg !2663, !tbaa !2682
  %38 = and i64 %37, 4294967295, !dbg !2663
  %39 = icmp eq i64 %38, 1, !dbg !2663
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !2663, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %40(ptr nonnull @.str.677), !dbg !2663
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.shape, i64 1, !dbg !2663
  %42 = load i64, ptr %41, align 8, !dbg !2663, !tbaa !2692
  %43 = and i64 %42, 4294967295, !dbg !2663
  %44 = icmp eq i64 %43, 1, !dbg !2663
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !2663, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %45(ptr nonnull @.str.678), !dbg !2663
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.shape, i64 2, !dbg !2663
  %47 = load i64, ptr %46, align 8, !dbg !2663, !tbaa !2694
  %48 = and i64 %47, 4294967295, !dbg !2663
  %49 = icmp eq i64 %48, 28, !dbg !2663
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !2663, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %50(ptr nonnull @.str.679), !dbg !2663
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.shape, i64 3, !dbg !2663
  %52 = load i64, ptr %51, align 8, !dbg !2663, !tbaa !2697
  %53 = and i64 %52, 4294967295, !dbg !2663
  %54 = icmp eq i64 %53, 28, !dbg !2663
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !2663, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %55(ptr nonnull @.str.680), !dbg !2663
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.shape, i64 4, !dbg !2663
  %57 = load i64, ptr %56, align 8, !dbg !2663, !tbaa !2699
  %58 = and i64 %57, 4294967295, !dbg !2663
  %59 = icmp eq i64 %58, 512, !dbg !2663
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !2663, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %60(ptr nonnull @.str.681), !dbg !2663
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.strides, null, !dbg !2663
  br i1 %.not, label %if_end, label %if_then, !dbg !2663, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.strides, i64 2, !dbg !2663
  %62 = load i64, ptr %61, align 8, !dbg !2663, !tbaa !2703
  %63 = and i64 %62, 4294967295, !dbg !2663
  %64 = icmp eq i64 %63, 14336, !dbg !2663
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.strides, i64 3, !dbg !2663
  %66 = load i64, ptr %65, align 8, !dbg !2663, !tbaa !2713
  %67 = and i64 %66, 4294967295, !dbg !2663
  %68 = icmp eq i64 %67, 512, !dbg !2663
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p0.strides, i64 4, !dbg !2663
  %70 = load i64, ptr %69, align 8, !dbg !2663, !tbaa !2715
  %71 = and i64 %70, 4294967295, !dbg !2663
  %72 = icmp eq i64 %71, 1, !dbg !2663
  %73 = and i1 %68, %72, !dbg !2663
  %74 = and i1 %64, %73, !dbg !2663
  br i1 %74, label %if_end, label %assert_fail29, !dbg !2663, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2663
  %76 = load i64, ptr %75, align 8, !dbg !2663
  %77 = icmp eq i64 %76, 0, !dbg !2663
  br i1 %77, label %assert_end32, label %assert_fail31, !dbg !2663, !prof !18

assert_fail29:                                    ; preds = %if_then
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %78(ptr nonnull @.str.682), !dbg !2663
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %79(ptr nonnull @.str.683), !dbg !2663
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2663
  %81 = load i32, ptr %80, align 4, !dbg !2663
  %82 = icmp eq i32 %81, 1, !dbg !2663
  br i1 %82, label %assert_end34, label %assert_fail33, !dbg !2663, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %83(ptr nonnull @.str.684), !dbg !2663
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2663
  %85 = load i32, ptr %84, align 4, !dbg !2663
  %86 = icmp eq i32 %85, 6, !dbg !2663
  br i1 %86, label %assert_end38, label %assert_fail35, !dbg !2663, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %87 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %87(ptr nonnull @.str.685), !dbg !2663
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %88 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2663
  %89 = load i16, ptr %88, align 2, !dbg !2663
  %90 = icmp eq i16 %89, 1, !dbg !2663
  %91 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2663
  %92 = load i8, ptr %91, align 1, !dbg !2663
  %93 = icmp eq i8 %92, 32, !dbg !2663
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2663
  %95 = load i8, ptr %94, align 1, !dbg !2663
  %96 = icmp eq i8 %95, 2, !dbg !2663
  %97 = and i1 %93, %96, !dbg !2663
  %98 = and i1 %90, %97, !dbg !2663
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !2663, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %99(ptr nonnull @.str.686), !dbg !2663
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.shape, align 8, !dbg !2663, !tbaa !2719
  %101 = and i64 %100, 4294967295, !dbg !2663
  %102 = icmp eq i64 %101, 16, !dbg !2663
  br i1 %102, label %assert_end42, label %assert_fail41, !dbg !2663, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %103(ptr nonnull @.str.687), !dbg !2663
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.shape, i64 1, !dbg !2663
  %105 = load i64, ptr %104, align 8, !dbg !2663, !tbaa !2729
  %106 = and i64 %105, 4294967295, !dbg !2663
  %107 = icmp eq i64 %106, 1, !dbg !2663
  br i1 %107, label %assert_end44, label %assert_fail43, !dbg !2663, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %108(ptr nonnull @.str.688), !dbg !2663
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.shape, i64 2, !dbg !2663
  %110 = load i64, ptr %109, align 8, !dbg !2663, !tbaa !2731
  %111 = and i64 %110, 4294967295, !dbg !2663
  %112 = icmp eq i64 %111, 1, !dbg !2663
  br i1 %112, label %assert_end46, label %assert_fail45, !dbg !2663, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %113(ptr nonnull @.str.689), !dbg !2663
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.shape, i64 3, !dbg !2663
  %115 = load i64, ptr %114, align 8, !dbg !2663, !tbaa !2734
  %116 = and i64 %115, 4294967295, !dbg !2663
  %117 = icmp eq i64 %116, 1, !dbg !2663
  br i1 %117, label %assert_end48, label %assert_fail47, !dbg !2663, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %118(ptr nonnull @.str.690), !dbg !2663
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.shape, i64 4, !dbg !2663
  %120 = load i64, ptr %119, align 8, !dbg !2663, !tbaa !2736
  %121 = and i64 %120, 4294967295, !dbg !2663
  %122 = icmp eq i64 %121, 512, !dbg !2663
  br i1 %122, label %assert_end50, label %assert_fail49, !dbg !2663, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %123(ptr nonnull @.str.691), !dbg !2663
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.shape, i64 5, !dbg !2663
  %125 = load i64, ptr %124, align 8, !dbg !2663, !tbaa !2740
  %126 = and i64 %125, 4294967295, !dbg !2663
  %127 = icmp eq i64 %126, 64, !dbg !2663
  br i1 %127, label %assert_end52, label %assert_fail51, !dbg !2663, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %128(ptr nonnull @.str.692), !dbg !2663
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.strides, null, !dbg !2663
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !2663, !prof !52

if_then53:                                        ; preds = %assert_end52
  %129 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.strides, align 8, !dbg !2663, !tbaa !2742
  %130 = and i64 %129, 4294967295, !dbg !2663
  %131 = icmp eq i64 %130, 32768, !dbg !2663
  %132 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.strides, i64 4, !dbg !2663
  %133 = load i64, ptr %132, align 8, !dbg !2663, !tbaa !2752
  %134 = and i64 %133, 4294967295, !dbg !2663
  %135 = icmp eq i64 %134, 64, !dbg !2663
  %136 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p1.strides, i64 5, !dbg !2663
  %137 = load i64, ptr %136, align 8, !dbg !2663, !tbaa !2756
  %138 = and i64 %137, 4294967295, !dbg !2663
  %139 = icmp eq i64 %138, 1, !dbg !2663
  %140 = and i1 %135, %139, !dbg !2663
  %141 = and i1 %131, %140, !dbg !2663
  br i1 %141, label %if_end54, label %assert_fail55, !dbg !2663, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %142 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2663
  %143 = load i64, ptr %142, align 8, !dbg !2663
  %144 = icmp eq i64 %143, 0, !dbg !2663
  br i1 %144, label %assert_end58, label %assert_fail57, !dbg !2663, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %145(ptr nonnull @.str.693), !dbg !2663
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %146(ptr nonnull @.str.694), !dbg !2663
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %147 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2663
  %148 = load i32, ptr %147, align 4, !dbg !2663
  %149 = icmp eq i32 %148, 1, !dbg !2663
  br i1 %149, label %assert_end60, label %assert_fail59, !dbg !2663, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %150(ptr nonnull @.str.695), !dbg !2663
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %151 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2663
  %152 = load i32, ptr %151, align 4, !dbg !2663
  %153 = icmp eq i32 %dev_id, %152, !dbg !2663
  br i1 %153, label %assert_end62, label %assert_fail61, !dbg !2663, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %154 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %154(ptr nonnull @.str.696), !dbg !2663
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %155 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2663
  %156 = load i32, ptr %155, align 4, !dbg !2663
  %157 = icmp eq i32 %156, 5, !dbg !2663
  br i1 %157, label %assert_end66, label %assert_fail63, !dbg !2663, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %158 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %158(ptr nonnull @.str.697), !dbg !2663
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %159 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2663
  %160 = load i16, ptr %159, align 2, !dbg !2663
  %161 = icmp eq i16 %160, 1, !dbg !2663
  %162 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2663
  %163 = load i8, ptr %162, align 1, !dbg !2663
  %164 = icmp eq i8 %163, 32, !dbg !2663
  %165 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2663
  %166 = load i8, ptr %165, align 1, !dbg !2663
  %167 = icmp eq i8 %166, 2, !dbg !2663
  %168 = and i1 %164, %167, !dbg !2663
  %169 = and i1 %161, %168, !dbg !2663
  br i1 %169, label %assert_end68, label %assert_fail67, !dbg !2663, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %170(ptr nonnull @.str.698), !dbg !2663
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %171 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.shape, align 8, !dbg !2663, !tbaa !2758
  %172 = and i64 %171, 4294967295, !dbg !2663
  %173 = icmp eq i64 %172, 1, !dbg !2663
  br i1 %173, label %assert_end70, label %assert_fail69, !dbg !2663, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %174(ptr nonnull @.str.699), !dbg !2663
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %175 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.shape, i64 1, !dbg !2663
  %176 = load i64, ptr %175, align 8, !dbg !2663, !tbaa !2768
  %177 = and i64 %176, 4294967295, !dbg !2663
  %178 = icmp eq i64 %177, 16, !dbg !2663
  br i1 %178, label %assert_end72, label %assert_fail71, !dbg !2663, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %179(ptr nonnull @.str.700), !dbg !2663
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.shape, i64 2, !dbg !2663
  %181 = load i64, ptr %180, align 8, !dbg !2663, !tbaa !2770
  %182 = and i64 %181, 4294967295, !dbg !2663
  %183 = icmp eq i64 %182, 1, !dbg !2663
  br i1 %183, label %assert_end74, label %assert_fail73, !dbg !2663, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %184(ptr nonnull @.str.701), !dbg !2663
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %185 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.shape, i64 3, !dbg !2663
  %186 = load i64, ptr %185, align 8, !dbg !2663, !tbaa !2773
  %187 = and i64 %186, 4294967295, !dbg !2663
  %188 = icmp eq i64 %187, 1, !dbg !2663
  br i1 %188, label %assert_end76, label %assert_fail75, !dbg !2663, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %189(ptr nonnull @.str.702), !dbg !2663
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.shape, i64 4, !dbg !2663
  %191 = load i64, ptr %190, align 8, !dbg !2663, !tbaa !2775
  %192 = and i64 %191, 4294967295, !dbg !2663
  %193 = icmp eq i64 %192, 64, !dbg !2663
  br i1 %193, label %assert_end78, label %assert_fail77, !dbg !2663, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %194(ptr nonnull @.str.703), !dbg !2663
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.strides, null, !dbg !2663
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !2663, !prof !52

if_then79:                                        ; preds = %assert_end78
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.strides, i64 1, !dbg !2663
  %196 = load i64, ptr %195, align 8, !dbg !2663, !tbaa !2779
  %197 = and i64 %196, 4294967295, !dbg !2663
  %198 = icmp eq i64 %197, 64, !dbg !2663
  %199 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.p2.strides, i64 4, !dbg !2663
  %200 = load i64, ptr %199, align 8, !dbg !2663, !tbaa !2789
  %201 = and i64 %200, 4294967295, !dbg !2663
  %202 = icmp eq i64 %201, 1, !dbg !2663
  %203 = and i1 %198, %202, !dbg !2663
  br i1 %203, label %if_end80, label %assert_fail81, !dbg !2663, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %204 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2663
  %205 = load i64, ptr %204, align 8, !dbg !2663
  %206 = icmp eq i64 %205, 0, !dbg !2663
  br i1 %206, label %assert_end84, label %assert_fail83, !dbg !2663, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %207(ptr nonnull @.str.704), !dbg !2663
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %208(ptr nonnull @.str.705), !dbg !2663
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %209 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2663
  %210 = load i32, ptr %209, align 4, !dbg !2663
  %211 = icmp eq i32 %210, 1, !dbg !2663
  br i1 %211, label %assert_end86, label %assert_fail85, !dbg !2663, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %212(ptr nonnull @.str.706), !dbg !2663
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %213 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2663
  %214 = load i32, ptr %213, align 4, !dbg !2663
  %215 = icmp eq i32 %dev_id, %214, !dbg !2663
  br i1 %215, label %assert_end88, label %assert_fail87, !dbg !2663, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %216 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %216(ptr nonnull @.str.707), !dbg !2663
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %217 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 2, !dbg !2663
  %218 = load i32, ptr %217, align 4, !dbg !2663
  %219 = icmp eq i32 %218, 5, !dbg !2663
  br i1 %219, label %assert_end92, label %assert_fail89, !dbg !2663, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %220 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %220(ptr nonnull @.str.708), !dbg !2663
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %221 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 2, !dbg !2663
  %222 = load i16, ptr %221, align 2, !dbg !2663
  %223 = icmp eq i16 %222, 1, !dbg !2663
  %224 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 1, !dbg !2663
  %225 = load i8, ptr %224, align 1, !dbg !2663
  %226 = icmp eq i8 %225, 32, !dbg !2663
  %227 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 0, !dbg !2663
  %228 = load i8, ptr %227, align 1, !dbg !2663
  %229 = icmp eq i8 %228, 2, !dbg !2663
  %230 = and i1 %226, %229, !dbg !2663
  %231 = and i1 %223, %230, !dbg !2663
  br i1 %231, label %assert_end94, label %assert_fail93, !dbg !2663, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %232 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %232(ptr nonnull @.str.709), !dbg !2663
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %233 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.shape, align 8, !dbg !2663, !tbaa !2793
  %234 = and i64 %233, 4294967295, !dbg !2663
  %235 = icmp eq i64 %234, 1, !dbg !2663
  br i1 %235, label %assert_end96, label %assert_fail95, !dbg !2663, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %236(ptr nonnull @.str.710), !dbg !2663
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %237 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.shape, i64 1, !dbg !2663
  %238 = load i64, ptr %237, align 8, !dbg !2663, !tbaa !2803
  %239 = and i64 %238, 4294967295, !dbg !2663
  %240 = icmp eq i64 %239, 16, !dbg !2663
  br i1 %240, label %assert_end98, label %assert_fail97, !dbg !2663, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %241(ptr nonnull @.str.711), !dbg !2663
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.shape, i64 2, !dbg !2663
  %243 = load i64, ptr %242, align 8, !dbg !2663, !tbaa !2805
  %244 = and i64 %243, 4294967295, !dbg !2663
  %245 = icmp eq i64 %244, 14, !dbg !2663
  br i1 %245, label %assert_end100, label %assert_fail99, !dbg !2663, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %246(ptr nonnull @.str.712), !dbg !2663
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.shape, i64 3, !dbg !2663
  %248 = load i64, ptr %247, align 8, !dbg !2663, !tbaa !2808
  %249 = and i64 %248, 4294967295, !dbg !2663
  %250 = icmp eq i64 %249, 14, !dbg !2663
  br i1 %250, label %assert_end102, label %assert_fail101, !dbg !2663, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %251(ptr nonnull @.str.713), !dbg !2663
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.shape, i64 4, !dbg !2663
  %253 = load i64, ptr %252, align 8, !dbg !2663, !tbaa !2810
  %254 = and i64 %253, 4294967295, !dbg !2663
  %255 = icmp eq i64 %254, 64, !dbg !2663
  br i1 %255, label %assert_end104, label %assert_fail103, !dbg !2663, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %256(ptr nonnull @.str.714), !dbg !2663
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.strides, null, !dbg !2663
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !2663, !prof !52

if_then105:                                       ; preds = %assert_end104
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.strides, i64 1, !dbg !2663
  %258 = load i64, ptr %257, align 8, !dbg !2663, !tbaa !2814
  %259 = and i64 %258, 4294967295, !dbg !2663
  %260 = icmp eq i64 %259, 12544, !dbg !2663
  %261 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.strides, i64 2, !dbg !2663
  %262 = load i64, ptr %261, align 8, !dbg !2663, !tbaa !2824
  %263 = and i64 %262, 4294967295, !dbg !2663
  %264 = icmp eq i64 %263, 896, !dbg !2663
  %265 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.strides, i64 3, !dbg !2663
  %266 = load i64, ptr %265, align 8, !dbg !2663, !tbaa !2827
  %267 = and i64 %266, 4294967295, !dbg !2663
  %268 = icmp eq i64 %267, 64, !dbg !2663
  %269 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2.T_add.strides, i64 4, !dbg !2663
  %270 = load i64, ptr %269, align 8, !dbg !2663, !tbaa !2829
  %271 = and i64 %270, 4294967295, !dbg !2663
  %272 = icmp eq i64 %271, 1, !dbg !2663
  %273 = and i1 %268, %272, !dbg !2663
  %274 = and i1 %264, %273, !dbg !2663
  %275 = and i1 %260, %274, !dbg !2663
  br i1 %275, label %if_end106, label %assert_fail107, !dbg !2663, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %276 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 6, !dbg !2663
  %277 = load i64, ptr %276, align 8, !dbg !2663
  %278 = icmp eq i64 %277, 0, !dbg !2663
  br i1 %278, label %assert_end110, label %assert_fail109, !dbg !2663, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %279 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %279(ptr nonnull @.str.715), !dbg !2663
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %280 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %280(ptr nonnull @.str.716), !dbg !2663
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %281 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 0, !dbg !2663
  %282 = load i32, ptr %281, align 4, !dbg !2663
  %283 = icmp eq i32 %282, 1, !dbg !2663
  br i1 %283, label %assert_end112, label %assert_fail111, !dbg !2663, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %284(ptr nonnull @.str.717), !dbg !2663
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %285 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 1, !dbg !2663
  %286 = load i32, ptr %285, align 4, !dbg !2663
  %287 = icmp eq i32 %dev_id, %286, !dbg !2663
  br i1 %287, label %assert_end114, label %assert_fail113, !dbg !2663, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %288 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2663, !tbaa !19
  tail call void %288(ptr nonnull @.str.718), !dbg !2663
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %289 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_compute_(i32 %dev_id, ptr %p0115, ptr %p1116, ptr %T_add117, ptr %p2118), !dbg !2663
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !2833 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !2835, metadata !DIExpression()), !dbg !2841
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !2836, metadata !DIExpression()), !dbg !2841
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !2837, metadata !DIExpression()), !dbg !2841
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !2838, metadata !DIExpression()), !dbg !2841
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !2839, metadata !DIExpression()), !dbg !2841
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !2840, metadata !DIExpression()), !dbg !2841
  %0 = icmp eq i32 %num_args, 4, !dbg !2841
  br i1 %0, label %assert_end, label %assert_fail, !dbg !2841, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %289, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !2841

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %1(ptr nonnull @.str.720), !dbg !2841
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !2841, !tbaa !2842
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !2841
  %p1.code = load i32, ptr %2, align 4, !dbg !2841, !tbaa !2853
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !2841
  %p2.code = load i32, ptr %3, align 4, !dbg !2841, !tbaa !2855
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !2841
  %T_add.code = load i32, ptr %4, align 4, !dbg !2841, !tbaa !2858
  %p0 = load ptr, ptr %args, align 8, !dbg !2841
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !2841
  %p1 = load ptr, ptr %5, align 8, !dbg !2841
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !2841
  %p2 = load ptr, ptr %6, align 8, !dbg !2841
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !2841
  %T_add = load ptr, ptr %7, align 8, !dbg !2841
  %p0115 = load ptr, ptr %p0, align 8, !dbg !2841
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !2841
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !2841
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.shape = load ptr, ptr %8, align 8, !dbg !2841
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !2841
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.strides = load ptr, ptr %9, align 8, !dbg !2841
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !2841
  %dev_id = load i32, ptr %10, align 4, !dbg !2841
  %p1116 = load ptr, ptr %p1, align 8, !dbg !2841
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !2841
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !2841
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.shape = load ptr, ptr %11, align 8, !dbg !2841
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !2841
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.strides = load ptr, ptr %12, align 8, !dbg !2841
  %p2118 = load ptr, ptr %p2, align 8, !dbg !2841
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !2841
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !2841
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.shape = load ptr, ptr %13, align 8, !dbg !2841
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !2841
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.strides = load ptr, ptr %14, align 8, !dbg !2841
  %T_add117 = load ptr, ptr %T_add, align 8, !dbg !2841
  call void @llvm.assume(i1 true) [ "align"(ptr %T_add117, i64 64) ], !dbg !2841
  %15 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 4, !dbg !2841
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.shape = load ptr, ptr %15, align 8, !dbg !2841
  %16 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 5, !dbg !2841
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.strides = load ptr, ptr %16, align 8, !dbg !2841
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !2841

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %17(ptr nonnull @.str.721), !dbg !2841
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !2841

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %18(ptr nonnull @.str.722), !dbg !2841
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !2841

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %19(ptr nonnull @.str.723), !dbg !2841
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_add.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !2841

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %20(ptr nonnull @.str.724), !dbg !2841
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !2841
  %22 = load i32, ptr %21, align 4, !dbg !2841
  %23 = icmp eq i32 %22, 5, !dbg !2841
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !2841, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %24(ptr nonnull @.str.725), !dbg !2841
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !2841
  %26 = load i16, ptr %25, align 2, !dbg !2841
  %27 = icmp eq i16 %26, 1, !dbg !2841
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !2841
  %29 = load i8, ptr %28, align 1, !dbg !2841
  %30 = icmp eq i8 %29, 32, !dbg !2841
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !2841
  %32 = load i8, ptr %31, align 1, !dbg !2841
  %33 = icmp eq i8 %32, 2, !dbg !2841
  %34 = and i1 %30, %33, !dbg !2841
  %35 = and i1 %27, %34, !dbg !2841
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !2841, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %36(ptr nonnull @.str.726), !dbg !2841
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.shape, align 8, !dbg !2841, !tbaa !2860
  %38 = and i64 %37, 4294967295, !dbg !2841
  %39 = icmp eq i64 %38, 1, !dbg !2841
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !2841, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %40(ptr nonnull @.str.727), !dbg !2841
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.shape, i64 1, !dbg !2841
  %42 = load i64, ptr %41, align 8, !dbg !2841, !tbaa !2870
  %43 = and i64 %42, 4294967295, !dbg !2841
  %44 = icmp eq i64 %43, 1, !dbg !2841
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !2841, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %45(ptr nonnull @.str.728), !dbg !2841
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.shape, i64 2, !dbg !2841
  %47 = load i64, ptr %46, align 8, !dbg !2841, !tbaa !2872
  %48 = and i64 %47, 4294967295, !dbg !2841
  %49 = icmp eq i64 %48, 14, !dbg !2841
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !2841, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %50(ptr nonnull @.str.729), !dbg !2841
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.shape, i64 3, !dbg !2841
  %52 = load i64, ptr %51, align 8, !dbg !2841, !tbaa !2875
  %53 = and i64 %52, 4294967295, !dbg !2841
  %54 = icmp eq i64 %53, 14, !dbg !2841
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !2841, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %55(ptr nonnull @.str.730), !dbg !2841
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.shape, i64 4, !dbg !2841
  %57 = load i64, ptr %56, align 8, !dbg !2841, !tbaa !2877
  %58 = and i64 %57, 4294967295, !dbg !2841
  %59 = icmp eq i64 %58, 1024, !dbg !2841
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !2841, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %60(ptr nonnull @.str.731), !dbg !2841
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.strides, null, !dbg !2841
  br i1 %.not, label %if_end, label %if_then, !dbg !2841, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.strides, i64 2, !dbg !2841
  %62 = load i64, ptr %61, align 8, !dbg !2841, !tbaa !2881
  %63 = and i64 %62, 4294967295, !dbg !2841
  %64 = icmp eq i64 %63, 14336, !dbg !2841
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.strides, i64 3, !dbg !2841
  %66 = load i64, ptr %65, align 8, !dbg !2841, !tbaa !2891
  %67 = and i64 %66, 4294967295, !dbg !2841
  %68 = icmp eq i64 %67, 1024, !dbg !2841
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p0.strides, i64 4, !dbg !2841
  %70 = load i64, ptr %69, align 8, !dbg !2841, !tbaa !2893
  %71 = and i64 %70, 4294967295, !dbg !2841
  %72 = icmp eq i64 %71, 1, !dbg !2841
  %73 = and i1 %68, %72, !dbg !2841
  %74 = and i1 %64, %73, !dbg !2841
  br i1 %74, label %if_end, label %assert_fail29, !dbg !2841, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !2841
  %76 = load i64, ptr %75, align 8, !dbg !2841
  %77 = icmp eq i64 %76, 0, !dbg !2841
  br i1 %77, label %assert_end32, label %assert_fail31, !dbg !2841, !prof !18

assert_fail29:                                    ; preds = %if_then
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %78(ptr nonnull @.str.732), !dbg !2841
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %79(ptr nonnull @.str.733), !dbg !2841
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !2841
  %81 = load i32, ptr %80, align 4, !dbg !2841
  %82 = icmp eq i32 %81, 1, !dbg !2841
  br i1 %82, label %assert_end34, label %assert_fail33, !dbg !2841, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %83(ptr nonnull @.str.734), !dbg !2841
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !2841
  %85 = load i32, ptr %84, align 4, !dbg !2841
  %86 = icmp eq i32 %85, 6, !dbg !2841
  br i1 %86, label %assert_end38, label %assert_fail35, !dbg !2841, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %87 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %87(ptr nonnull @.str.735), !dbg !2841
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %88 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !2841
  %89 = load i16, ptr %88, align 2, !dbg !2841
  %90 = icmp eq i16 %89, 1, !dbg !2841
  %91 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !2841
  %92 = load i8, ptr %91, align 1, !dbg !2841
  %93 = icmp eq i8 %92, 32, !dbg !2841
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !2841
  %95 = load i8, ptr %94, align 1, !dbg !2841
  %96 = icmp eq i8 %95, 2, !dbg !2841
  %97 = and i1 %93, %96, !dbg !2841
  %98 = and i1 %90, %97, !dbg !2841
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !2841, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %99(ptr nonnull @.str.736), !dbg !2841
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.shape, align 8, !dbg !2841, !tbaa !2897
  %101 = and i64 %100, 4294967295, !dbg !2841
  %102 = icmp eq i64 %101, 64, !dbg !2841
  br i1 %102, label %assert_end42, label %assert_fail41, !dbg !2841, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %103(ptr nonnull @.str.737), !dbg !2841
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.shape, i64 1, !dbg !2841
  %105 = load i64, ptr %104, align 8, !dbg !2841, !tbaa !2907
  %106 = and i64 %105, 4294967295, !dbg !2841
  %107 = icmp eq i64 %106, 1, !dbg !2841
  br i1 %107, label %assert_end44, label %assert_fail43, !dbg !2841, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %108(ptr nonnull @.str.738), !dbg !2841
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.shape, i64 2, !dbg !2841
  %110 = load i64, ptr %109, align 8, !dbg !2841, !tbaa !2909
  %111 = and i64 %110, 4294967295, !dbg !2841
  %112 = icmp eq i64 %111, 1, !dbg !2841
  br i1 %112, label %assert_end46, label %assert_fail45, !dbg !2841, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %113(ptr nonnull @.str.739), !dbg !2841
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.shape, i64 3, !dbg !2841
  %115 = load i64, ptr %114, align 8, !dbg !2841, !tbaa !2912
  %116 = and i64 %115, 4294967295, !dbg !2841
  %117 = icmp eq i64 %116, 1, !dbg !2841
  br i1 %117, label %assert_end48, label %assert_fail47, !dbg !2841, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %118(ptr nonnull @.str.740), !dbg !2841
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.shape, i64 4, !dbg !2841
  %120 = load i64, ptr %119, align 8, !dbg !2841, !tbaa !2914
  %121 = and i64 %120, 4294967295, !dbg !2841
  %122 = icmp eq i64 %121, 1024, !dbg !2841
  br i1 %122, label %assert_end50, label %assert_fail49, !dbg !2841, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %123(ptr nonnull @.str.741), !dbg !2841
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.shape, i64 5, !dbg !2841
  %125 = load i64, ptr %124, align 8, !dbg !2841, !tbaa !2918
  %126 = and i64 %125, 4294967295, !dbg !2841
  %127 = icmp eq i64 %126, 32, !dbg !2841
  br i1 %127, label %assert_end52, label %assert_fail51, !dbg !2841, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %128(ptr nonnull @.str.742), !dbg !2841
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.strides, null, !dbg !2841
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !2841, !prof !52

if_then53:                                        ; preds = %assert_end52
  %129 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.strides, align 8, !dbg !2841, !tbaa !2920
  %130 = and i64 %129, 4294967295, !dbg !2841
  %131 = icmp eq i64 %130, 32768, !dbg !2841
  %132 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.strides, i64 4, !dbg !2841
  %133 = load i64, ptr %132, align 8, !dbg !2841, !tbaa !2930
  %134 = and i64 %133, 4294967295, !dbg !2841
  %135 = icmp eq i64 %134, 32, !dbg !2841
  %136 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p1.strides, i64 5, !dbg !2841
  %137 = load i64, ptr %136, align 8, !dbg !2841, !tbaa !2934
  %138 = and i64 %137, 4294967295, !dbg !2841
  %139 = icmp eq i64 %138, 1, !dbg !2841
  %140 = and i1 %135, %139, !dbg !2841
  %141 = and i1 %131, %140, !dbg !2841
  br i1 %141, label %if_end54, label %assert_fail55, !dbg !2841, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %142 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !2841
  %143 = load i64, ptr %142, align 8, !dbg !2841
  %144 = icmp eq i64 %143, 0, !dbg !2841
  br i1 %144, label %assert_end58, label %assert_fail57, !dbg !2841, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %145(ptr nonnull @.str.743), !dbg !2841
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %146(ptr nonnull @.str.744), !dbg !2841
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %147 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !2841
  %148 = load i32, ptr %147, align 4, !dbg !2841
  %149 = icmp eq i32 %148, 1, !dbg !2841
  br i1 %149, label %assert_end60, label %assert_fail59, !dbg !2841, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %150(ptr nonnull @.str.745), !dbg !2841
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %151 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !2841
  %152 = load i32, ptr %151, align 4, !dbg !2841
  %153 = icmp eq i32 %dev_id, %152, !dbg !2841
  br i1 %153, label %assert_end62, label %assert_fail61, !dbg !2841, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %154 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %154(ptr nonnull @.str.746), !dbg !2841
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %155 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !2841
  %156 = load i32, ptr %155, align 4, !dbg !2841
  %157 = icmp eq i32 %156, 5, !dbg !2841
  br i1 %157, label %assert_end66, label %assert_fail63, !dbg !2841, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %158 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %158(ptr nonnull @.str.747), !dbg !2841
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %159 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !2841
  %160 = load i16, ptr %159, align 2, !dbg !2841
  %161 = icmp eq i16 %160, 1, !dbg !2841
  %162 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !2841
  %163 = load i8, ptr %162, align 1, !dbg !2841
  %164 = icmp eq i8 %163, 32, !dbg !2841
  %165 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !2841
  %166 = load i8, ptr %165, align 1, !dbg !2841
  %167 = icmp eq i8 %166, 2, !dbg !2841
  %168 = and i1 %164, %167, !dbg !2841
  %169 = and i1 %161, %168, !dbg !2841
  br i1 %169, label %assert_end68, label %assert_fail67, !dbg !2841, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %170(ptr nonnull @.str.748), !dbg !2841
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %171 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.shape, align 8, !dbg !2841, !tbaa !2936
  %172 = and i64 %171, 4294967295, !dbg !2841
  %173 = icmp eq i64 %172, 1, !dbg !2841
  br i1 %173, label %assert_end70, label %assert_fail69, !dbg !2841, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %174(ptr nonnull @.str.749), !dbg !2841
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %175 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.shape, i64 1, !dbg !2841
  %176 = load i64, ptr %175, align 8, !dbg !2841, !tbaa !2946
  %177 = and i64 %176, 4294967295, !dbg !2841
  %178 = icmp eq i64 %177, 64, !dbg !2841
  br i1 %178, label %assert_end72, label %assert_fail71, !dbg !2841, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %179(ptr nonnull @.str.750), !dbg !2841
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.shape, i64 2, !dbg !2841
  %181 = load i64, ptr %180, align 8, !dbg !2841, !tbaa !2948
  %182 = and i64 %181, 4294967295, !dbg !2841
  %183 = icmp eq i64 %182, 1, !dbg !2841
  br i1 %183, label %assert_end74, label %assert_fail73, !dbg !2841, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %184(ptr nonnull @.str.751), !dbg !2841
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %185 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.shape, i64 3, !dbg !2841
  %186 = load i64, ptr %185, align 8, !dbg !2841, !tbaa !2951
  %187 = and i64 %186, 4294967295, !dbg !2841
  %188 = icmp eq i64 %187, 1, !dbg !2841
  br i1 %188, label %assert_end76, label %assert_fail75, !dbg !2841, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %189(ptr nonnull @.str.752), !dbg !2841
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.shape, i64 4, !dbg !2841
  %191 = load i64, ptr %190, align 8, !dbg !2841, !tbaa !2953
  %192 = and i64 %191, 4294967295, !dbg !2841
  %193 = icmp eq i64 %192, 32, !dbg !2841
  br i1 %193, label %assert_end78, label %assert_fail77, !dbg !2841, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %194(ptr nonnull @.str.753), !dbg !2841
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.strides, null, !dbg !2841
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !2841, !prof !52

if_then79:                                        ; preds = %assert_end78
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.strides, i64 1, !dbg !2841
  %196 = load i64, ptr %195, align 8, !dbg !2841, !tbaa !2957
  %197 = and i64 %196, 4294967295, !dbg !2841
  %198 = icmp eq i64 %197, 32, !dbg !2841
  %199 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.p2.strides, i64 4, !dbg !2841
  %200 = load i64, ptr %199, align 8, !dbg !2841, !tbaa !2967
  %201 = and i64 %200, 4294967295, !dbg !2841
  %202 = icmp eq i64 %201, 1, !dbg !2841
  %203 = and i1 %198, %202, !dbg !2841
  br i1 %203, label %if_end80, label %assert_fail81, !dbg !2841, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %204 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !2841
  %205 = load i64, ptr %204, align 8, !dbg !2841
  %206 = icmp eq i64 %205, 0, !dbg !2841
  br i1 %206, label %assert_end84, label %assert_fail83, !dbg !2841, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %207(ptr nonnull @.str.754), !dbg !2841
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %208(ptr nonnull @.str.755), !dbg !2841
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %209 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !2841
  %210 = load i32, ptr %209, align 4, !dbg !2841
  %211 = icmp eq i32 %210, 1, !dbg !2841
  br i1 %211, label %assert_end86, label %assert_fail85, !dbg !2841, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %212(ptr nonnull @.str.756), !dbg !2841
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %213 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !2841
  %214 = load i32, ptr %213, align 4, !dbg !2841
  %215 = icmp eq i32 %dev_id, %214, !dbg !2841
  br i1 %215, label %assert_end88, label %assert_fail87, !dbg !2841, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %216 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %216(ptr nonnull @.str.757), !dbg !2841
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %217 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 2, !dbg !2841
  %218 = load i32, ptr %217, align 4, !dbg !2841
  %219 = icmp eq i32 %218, 5, !dbg !2841
  br i1 %219, label %assert_end92, label %assert_fail89, !dbg !2841, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %220 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %220(ptr nonnull @.str.758), !dbg !2841
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %221 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 2, !dbg !2841
  %222 = load i16, ptr %221, align 2, !dbg !2841
  %223 = icmp eq i16 %222, 1, !dbg !2841
  %224 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 1, !dbg !2841
  %225 = load i8, ptr %224, align 1, !dbg !2841
  %226 = icmp eq i8 %225, 32, !dbg !2841
  %227 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 0, !dbg !2841
  %228 = load i8, ptr %227, align 1, !dbg !2841
  %229 = icmp eq i8 %228, 2, !dbg !2841
  %230 = and i1 %226, %229, !dbg !2841
  %231 = and i1 %223, %230, !dbg !2841
  br i1 %231, label %assert_end94, label %assert_fail93, !dbg !2841, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %232 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %232(ptr nonnull @.str.759), !dbg !2841
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %233 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.shape, align 8, !dbg !2841, !tbaa !2971
  %234 = and i64 %233, 4294967295, !dbg !2841
  %235 = icmp eq i64 %234, 1, !dbg !2841
  br i1 %235, label %assert_end96, label %assert_fail95, !dbg !2841, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %236(ptr nonnull @.str.760), !dbg !2841
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %237 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.shape, i64 1, !dbg !2841
  %238 = load i64, ptr %237, align 8, !dbg !2841, !tbaa !2981
  %239 = and i64 %238, 4294967295, !dbg !2841
  %240 = icmp eq i64 %239, 64, !dbg !2841
  br i1 %240, label %assert_end98, label %assert_fail97, !dbg !2841, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %241(ptr nonnull @.str.761), !dbg !2841
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.shape, i64 2, !dbg !2841
  %243 = load i64, ptr %242, align 8, !dbg !2841, !tbaa !2983
  %244 = and i64 %243, 4294967295, !dbg !2841
  %245 = icmp eq i64 %244, 7, !dbg !2841
  br i1 %245, label %assert_end100, label %assert_fail99, !dbg !2841, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %246(ptr nonnull @.str.762), !dbg !2841
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.shape, i64 3, !dbg !2841
  %248 = load i64, ptr %247, align 8, !dbg !2841, !tbaa !2986
  %249 = and i64 %248, 4294967295, !dbg !2841
  %250 = icmp eq i64 %249, 7, !dbg !2841
  br i1 %250, label %assert_end102, label %assert_fail101, !dbg !2841, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %251(ptr nonnull @.str.763), !dbg !2841
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.shape, i64 4, !dbg !2841
  %253 = load i64, ptr %252, align 8, !dbg !2841, !tbaa !2988
  %254 = and i64 %253, 4294967295, !dbg !2841
  %255 = icmp eq i64 %254, 32, !dbg !2841
  br i1 %255, label %assert_end104, label %assert_fail103, !dbg !2841, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %256(ptr nonnull @.str.764), !dbg !2841
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.strides, null, !dbg !2841
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !2841, !prof !52

if_then105:                                       ; preds = %assert_end104
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.strides, i64 1, !dbg !2841
  %258 = load i64, ptr %257, align 8, !dbg !2841, !tbaa !2992
  %259 = and i64 %258, 4294967295, !dbg !2841
  %260 = icmp eq i64 %259, 1568, !dbg !2841
  %261 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.strides, i64 2, !dbg !2841
  %262 = load i64, ptr %261, align 8, !dbg !2841, !tbaa !3002
  %263 = and i64 %262, 4294967295, !dbg !2841
  %264 = icmp eq i64 %263, 224, !dbg !2841
  %265 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.strides, i64 3, !dbg !2841
  %266 = load i64, ptr %265, align 8, !dbg !2841, !tbaa !3005
  %267 = and i64 %266, 4294967295, !dbg !2841
  %268 = icmp eq i64 %267, 32, !dbg !2841
  %269 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3.T_add.strides, i64 4, !dbg !2841
  %270 = load i64, ptr %269, align 8, !dbg !2841, !tbaa !3007
  %271 = and i64 %270, 4294967295, !dbg !2841
  %272 = icmp eq i64 %271, 1, !dbg !2841
  %273 = and i1 %268, %272, !dbg !2841
  %274 = and i1 %264, %273, !dbg !2841
  %275 = and i1 %260, %274, !dbg !2841
  br i1 %275, label %if_end106, label %assert_fail107, !dbg !2841, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %276 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 6, !dbg !2841
  %277 = load i64, ptr %276, align 8, !dbg !2841
  %278 = icmp eq i64 %277, 0, !dbg !2841
  br i1 %278, label %assert_end110, label %assert_fail109, !dbg !2841, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %279 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %279(ptr nonnull @.str.765), !dbg !2841
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %280 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %280(ptr nonnull @.str.766), !dbg !2841
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %281 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 0, !dbg !2841
  %282 = load i32, ptr %281, align 4, !dbg !2841
  %283 = icmp eq i32 %282, 1, !dbg !2841
  br i1 %283, label %assert_end112, label %assert_fail111, !dbg !2841, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %284(ptr nonnull @.str.767), !dbg !2841
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %285 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 1, !dbg !2841
  %286 = load i32, ptr %285, align 4, !dbg !2841
  %287 = icmp eq i32 %dev_id, %286, !dbg !2841
  br i1 %287, label %assert_end114, label %assert_fail113, !dbg !2841, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %288 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !2841, !tbaa !19
  tail call void %288(ptr nonnull @.str.768), !dbg !2841
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %289 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_compute_(ptr %p0115, ptr %p1116, ptr %T_add117, ptr %p2118), !dbg !2841
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3011 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3013, metadata !DIExpression()), !dbg !3019
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3014, metadata !DIExpression()), !dbg !3019
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3015, metadata !DIExpression()), !dbg !3019
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3016, metadata !DIExpression()), !dbg !3019
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3017, metadata !DIExpression()), !dbg !3019
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3018, metadata !DIExpression()), !dbg !3019
  %0 = icmp eq i32 %num_args, 5, !dbg !3019
  br i1 %0, label %assert_end, label %assert_fail, !dbg !3019, !prof !18

common.ret:                                       ; preds = %assert_end143, %assert_fail142, %assert_fail140, %assert_fail138, %assert_fail136, %assert_fail132, %assert_fail130, %assert_fail128, %assert_fail126, %assert_fail124, %assert_fail122, %assert_fail118, %assert_fail116, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail106, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail92, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail80, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail80 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail92 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail106 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ -1, %assert_fail116 ], [ -1, %assert_fail118 ], [ -1, %assert_fail122 ], [ -1, %assert_fail124 ], [ -1, %assert_fail126 ], [ -1, %assert_fail128 ], [ -1, %assert_fail130 ], [ -1, %assert_fail132 ], [ -1, %assert_fail136 ], [ -1, %assert_fail138 ], [ -1, %assert_fail140 ], [ -1, %assert_fail142 ], [ %376, %assert_end143 ]
  ret i32 %common.ret.op, !dbg !3019

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %1(ptr nonnull @.str.770), !dbg !3019
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3019, !tbaa !3020
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3019
  %p1.code = load i32, ptr %2, align 4, !dbg !3019, !tbaa !3031
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3019
  %p2.code = load i32, ptr %3, align 4, !dbg !3019, !tbaa !3033
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3019
  %p3.code = load i32, ptr %4, align 4, !dbg !3019, !tbaa !3036
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !3019
  %T_relu.code = load i32, ptr %5, align 4, !dbg !3019, !tbaa !3038
  %p0 = load ptr, ptr %args, align 8, !dbg !3019
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3019
  %p1 = load ptr, ptr %6, align 8, !dbg !3019
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3019
  %p2 = load ptr, ptr %7, align 8, !dbg !3019
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3019
  %p3 = load ptr, ptr %8, align 8, !dbg !3019
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !3019
  %T_relu = load ptr, ptr %9, align 8, !dbg !3019
  %p0144 = load ptr, ptr %p0, align 8, !dbg !3019
  call void @llvm.assume(i1 true) [ "align"(ptr %p0144, i64 64) ], !dbg !3019
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3019
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.shape = load ptr, ptr %10, align 8, !dbg !3019
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3019
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.strides = load ptr, ptr %11, align 8, !dbg !3019
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3019
  %dev_id = load i32, ptr %12, align 4, !dbg !3019
  %p1145 = load ptr, ptr %p1, align 8, !dbg !3019
  call void @llvm.assume(i1 true) [ "align"(ptr %p1145, i64 64) ], !dbg !3019
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3019
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.shape = load ptr, ptr %13, align 8, !dbg !3019
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3019
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.strides = load ptr, ptr %14, align 8, !dbg !3019
  %p2147 = load ptr, ptr %p2, align 8, !dbg !3019
  call void @llvm.assume(i1 true) [ "align"(ptr %p2147, i64 64) ], !dbg !3019
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3019
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.shape = load ptr, ptr %15, align 8, !dbg !3019
  %16 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3019
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.strides = load ptr, ptr %16, align 8, !dbg !3019
  %p3148 = load ptr, ptr %p3, align 8, !dbg !3019
  call void @llvm.assume(i1 true) [ "align"(ptr %p3148, i64 64) ], !dbg !3019
  %17 = getelementptr inbounds %1, ptr %p3, i64 0, i32 4, !dbg !3019
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.shape = load ptr, ptr %17, align 8, !dbg !3019
  %18 = getelementptr inbounds %1, ptr %p3, i64 0, i32 5, !dbg !3019
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.strides = load ptr, ptr %18, align 8, !dbg !3019
  %T_relu146 = load ptr, ptr %T_relu, align 8, !dbg !3019
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu146, i64 64) ], !dbg !3019
  %19 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !3019
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.shape = load ptr, ptr %19, align 8, !dbg !3019
  %20 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !3019
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.strides = load ptr, ptr %20, align 8, !dbg !3019
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !3019

assert_fail6:                                     ; preds = %assert_end
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %21(ptr nonnull @.str.771), !dbg !3019
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !3019

assert_fail8:                                     ; preds = %assert_end7
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %22(ptr nonnull @.str.772), !dbg !3019
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !3019

assert_fail10:                                    ; preds = %assert_end9
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %23(ptr nonnull @.str.773), !dbg !3019
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !3019

assert_fail12:                                    ; preds = %assert_end11
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %24(ptr nonnull @.str.774), !dbg !3019
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_relu.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !3019

assert_fail14:                                    ; preds = %assert_end13
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %25(ptr nonnull @.str.775), !dbg !3019
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3019
  %27 = load i32, ptr %26, align 4, !dbg !3019
  %28 = icmp eq i32 %27, 5, !dbg !3019
  br i1 %28, label %assert_end19, label %assert_fail16, !dbg !3019, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %29 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %29(ptr nonnull @.str.776), !dbg !3019
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %30 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3019
  %31 = load i16, ptr %30, align 2, !dbg !3019
  %32 = icmp eq i16 %31, 1, !dbg !3019
  %33 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3019
  %34 = load i8, ptr %33, align 1, !dbg !3019
  %35 = icmp eq i8 %34, 32, !dbg !3019
  %36 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3019
  %37 = load i8, ptr %36, align 1, !dbg !3019
  %38 = icmp eq i8 %37, 2, !dbg !3019
  %39 = and i1 %35, %38, !dbg !3019
  %40 = and i1 %32, %39, !dbg !3019
  br i1 %40, label %assert_end21, label %assert_fail20, !dbg !3019, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %41(ptr nonnull @.str.777), !dbg !3019
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %42 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.shape, align 8, !dbg !3019, !tbaa !3042
  %43 = and i64 %42, 4294967295, !dbg !3019
  %44 = icmp eq i64 %43, 1, !dbg !3019
  br i1 %44, label %assert_end23, label %assert_fail22, !dbg !3019, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %45(ptr nonnull @.str.778), !dbg !3019
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.shape, i64 1, !dbg !3019
  %47 = load i64, ptr %46, align 8, !dbg !3019, !tbaa !3052
  %48 = and i64 %47, 4294967295, !dbg !3019
  %49 = icmp eq i64 %48, 16, !dbg !3019
  br i1 %49, label %assert_end25, label %assert_fail24, !dbg !3019, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %50(ptr nonnull @.str.779), !dbg !3019
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.shape, i64 2, !dbg !3019
  %52 = load i64, ptr %51, align 8, !dbg !3019, !tbaa !3054
  %53 = and i64 %52, 4294967295, !dbg !3019
  %54 = icmp eq i64 %53, 56, !dbg !3019
  br i1 %54, label %assert_end27, label %assert_fail26, !dbg !3019, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %55(ptr nonnull @.str.780), !dbg !3019
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.shape, i64 3, !dbg !3019
  %57 = load i64, ptr %56, align 8, !dbg !3019, !tbaa !3057
  %58 = and i64 %57, 4294967295, !dbg !3019
  %59 = icmp eq i64 %58, 56, !dbg !3019
  br i1 %59, label %assert_end29, label %assert_fail28, !dbg !3019, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %60(ptr nonnull @.str.781), !dbg !3019
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.shape, i64 4, !dbg !3019
  %62 = load i64, ptr %61, align 8, !dbg !3019, !tbaa !3059
  %63 = and i64 %62, 4294967295, !dbg !3019
  %64 = icmp eq i64 %63, 4, !dbg !3019
  br i1 %64, label %assert_end31, label %assert_fail30, !dbg !3019, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %65 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %65(ptr nonnull @.str.782), !dbg !3019
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.strides, null, !dbg !3019
  br i1 %.not, label %if_end, label %if_then, !dbg !3019, !prof !52

if_then:                                          ; preds = %assert_end31
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.strides, i64 1, !dbg !3019
  %67 = load i64, ptr %66, align 8, !dbg !3019, !tbaa !3063
  %68 = and i64 %67, 4294967295, !dbg !3019
  %69 = icmp eq i64 %68, 12544, !dbg !3019
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.strides, i64 2, !dbg !3019
  %71 = load i64, ptr %70, align 8, !dbg !3019, !tbaa !3073
  %72 = and i64 %71, 4294967295, !dbg !3019
  %73 = icmp eq i64 %72, 224, !dbg !3019
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.strides, i64 3, !dbg !3019
  %75 = load i64, ptr %74, align 8, !dbg !3019, !tbaa !3076
  %76 = and i64 %75, 4294967295, !dbg !3019
  %77 = icmp eq i64 %76, 4, !dbg !3019
  %78 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p0.strides, i64 4, !dbg !3019
  %79 = load i64, ptr %78, align 8, !dbg !3019, !tbaa !3078
  %80 = and i64 %79, 4294967295, !dbg !3019
  %81 = icmp eq i64 %80, 1, !dbg !3019
  %82 = and i1 %77, %81, !dbg !3019
  %83 = and i1 %73, %82, !dbg !3019
  %84 = and i1 %69, %83, !dbg !3019
  br i1 %84, label %if_end, label %assert_fail32, !dbg !3019, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %85 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3019
  %86 = load i64, ptr %85, align 8, !dbg !3019
  %87 = icmp eq i64 %86, 0, !dbg !3019
  br i1 %87, label %assert_end35, label %assert_fail34, !dbg !3019, !prof !18

assert_fail32:                                    ; preds = %if_then
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %88(ptr nonnull @.str.783), !dbg !3019
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %89(ptr nonnull @.str.784), !dbg !3019
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %90 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3019
  %91 = load i32, ptr %90, align 4, !dbg !3019
  %92 = icmp eq i32 %91, 1, !dbg !3019
  br i1 %92, label %assert_end37, label %assert_fail36, !dbg !3019, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %93(ptr nonnull @.str.785), !dbg !3019
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3019
  %95 = load i32, ptr %94, align 4, !dbg !3019
  %96 = icmp eq i32 %95, 6, !dbg !3019
  br i1 %96, label %assert_end41, label %assert_fail38, !dbg !3019, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %97 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %97(ptr nonnull @.str.786), !dbg !3019
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %98 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3019
  %99 = load i16, ptr %98, align 2, !dbg !3019
  %100 = icmp eq i16 %99, 1, !dbg !3019
  %101 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3019
  %102 = load i8, ptr %101, align 1, !dbg !3019
  %103 = icmp eq i8 %102, 32, !dbg !3019
  %104 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3019
  %105 = load i8, ptr %104, align 1, !dbg !3019
  %106 = icmp eq i8 %105, 2, !dbg !3019
  %107 = and i1 %103, %106, !dbg !3019
  %108 = and i1 %100, %107, !dbg !3019
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !3019, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %109(ptr nonnull @.str.787), !dbg !3019
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %110 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.shape, align 8, !dbg !3019, !tbaa !3082
  %111 = and i64 %110, 4294967295, !dbg !3019
  %112 = icmp eq i64 %111, 8, !dbg !3019
  br i1 %112, label %assert_end45, label %assert_fail44, !dbg !3019, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %113(ptr nonnull @.str.788), !dbg !3019
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.shape, i64 1, !dbg !3019
  %115 = load i64, ptr %114, align 8, !dbg !3019, !tbaa !3092
  %116 = and i64 %115, 4294967295, !dbg !3019
  %117 = icmp eq i64 %116, 16, !dbg !3019
  br i1 %117, label %assert_end47, label %assert_fail46, !dbg !3019, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %118(ptr nonnull @.str.789), !dbg !3019
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.shape, i64 2, !dbg !3019
  %120 = load i64, ptr %119, align 8, !dbg !3019, !tbaa !3094
  %121 = and i64 %120, 4294967295, !dbg !3019
  %122 = icmp eq i64 %121, 1, !dbg !3019
  br i1 %122, label %assert_end49, label %assert_fail48, !dbg !3019, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %123(ptr nonnull @.str.790), !dbg !3019
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.shape, i64 3, !dbg !3019
  %125 = load i64, ptr %124, align 8, !dbg !3019, !tbaa !3097
  %126 = and i64 %125, 4294967295, !dbg !3019
  %127 = icmp eq i64 %126, 1, !dbg !3019
  br i1 %127, label %assert_end51, label %assert_fail50, !dbg !3019, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %128(ptr nonnull @.str.791), !dbg !3019
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %129 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.shape, i64 4, !dbg !3019
  %130 = load i64, ptr %129, align 8, !dbg !3019, !tbaa !3099
  %131 = and i64 %130, 4294967295, !dbg !3019
  %132 = icmp eq i64 %131, 4, !dbg !3019
  br i1 %132, label %assert_end53, label %assert_fail52, !dbg !3019, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %133 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %133(ptr nonnull @.str.792), !dbg !3019
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %134 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.shape, i64 5, !dbg !3019
  %135 = load i64, ptr %134, align 8, !dbg !3019, !tbaa !3103
  %136 = and i64 %135, 4294967295, !dbg !3019
  %137 = icmp eq i64 %136, 32, !dbg !3019
  br i1 %137, label %assert_end55, label %assert_fail54, !dbg !3019, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %138 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %138(ptr nonnull @.str.793), !dbg !3019
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not149 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.strides, null, !dbg !3019
  br i1 %.not149, label %if_end57, label %if_then56, !dbg !3019, !prof !52

if_then56:                                        ; preds = %assert_end55
  %139 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.strides, align 8, !dbg !3019, !tbaa !3105
  %140 = and i64 %139, 4294967295, !dbg !3019
  %141 = icmp eq i64 %140, 2048, !dbg !3019
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.strides, i64 1, !dbg !3019
  %143 = load i64, ptr %142, align 8, !dbg !3019, !tbaa !3115
  %144 = and i64 %143, 4294967295, !dbg !3019
  %145 = icmp eq i64 %144, 128, !dbg !3019
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.strides, i64 4, !dbg !3019
  %147 = load i64, ptr %146, align 8, !dbg !3019, !tbaa !3117
  %148 = and i64 %147, 4294967295, !dbg !3019
  %149 = icmp eq i64 %148, 32, !dbg !3019
  %150 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p1.strides, i64 5, !dbg !3019
  %151 = load i64, ptr %150, align 8, !dbg !3019, !tbaa !3121
  %152 = and i64 %151, 4294967295, !dbg !3019
  %153 = icmp eq i64 %152, 1, !dbg !3019
  %154 = and i1 %149, %153, !dbg !3019
  %155 = and i1 %145, %154, !dbg !3019
  %156 = and i1 %141, %155, !dbg !3019
  br i1 %156, label %if_end57, label %assert_fail58, !dbg !3019, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %157 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3019
  %158 = load i64, ptr %157, align 8, !dbg !3019
  %159 = icmp eq i64 %158, 0, !dbg !3019
  br i1 %159, label %assert_end61, label %assert_fail60, !dbg !3019, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %160(ptr nonnull @.str.794), !dbg !3019
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %161(ptr nonnull @.str.795), !dbg !3019
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3019
  %163 = load i32, ptr %162, align 4, !dbg !3019
  %164 = icmp eq i32 %163, 1, !dbg !3019
  br i1 %164, label %assert_end63, label %assert_fail62, !dbg !3019, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %165(ptr nonnull @.str.796), !dbg !3019
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %166 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3019
  %167 = load i32, ptr %166, align 4, !dbg !3019
  %168 = icmp eq i32 %dev_id, %167, !dbg !3019
  br i1 %168, label %assert_end65, label %assert_fail64, !dbg !3019, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %169(ptr nonnull @.str.797), !dbg !3019
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3019
  %171 = load i32, ptr %170, align 4, !dbg !3019
  %172 = icmp eq i32 %171, 5, !dbg !3019
  br i1 %172, label %assert_end69, label %assert_fail66, !dbg !3019, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %173 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %173(ptr nonnull @.str.798), !dbg !3019
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %174 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3019
  %175 = load i16, ptr %174, align 2, !dbg !3019
  %176 = icmp eq i16 %175, 1, !dbg !3019
  %177 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3019
  %178 = load i8, ptr %177, align 1, !dbg !3019
  %179 = icmp eq i8 %178, 32, !dbg !3019
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3019
  %181 = load i8, ptr %180, align 1, !dbg !3019
  %182 = icmp eq i8 %181, 2, !dbg !3019
  %183 = and i1 %179, %182, !dbg !3019
  %184 = and i1 %176, %183, !dbg !3019
  br i1 %184, label %assert_end71, label %assert_fail70, !dbg !3019, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %185(ptr nonnull @.str.799), !dbg !3019
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %186 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.shape, align 8, !dbg !3019, !tbaa !3123
  %187 = and i64 %186, 4294967295, !dbg !3019
  %188 = icmp eq i64 %187, 1, !dbg !3019
  br i1 %188, label %assert_end73, label %assert_fail72, !dbg !3019, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %189(ptr nonnull @.str.800), !dbg !3019
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.shape, i64 1, !dbg !3019
  %191 = load i64, ptr %190, align 8, !dbg !3019, !tbaa !3133
  %192 = and i64 %191, 4294967295, !dbg !3019
  %193 = icmp eq i64 %192, 8, !dbg !3019
  br i1 %193, label %assert_end75, label %assert_fail74, !dbg !3019, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %194(ptr nonnull @.str.801), !dbg !3019
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.shape, i64 2, !dbg !3019
  %196 = load i64, ptr %195, align 8, !dbg !3019, !tbaa !3135
  %197 = and i64 %196, 4294967295, !dbg !3019
  %198 = icmp eq i64 %197, 1, !dbg !3019
  br i1 %198, label %assert_end77, label %assert_fail76, !dbg !3019, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %199(ptr nonnull @.str.802), !dbg !3019
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.shape, i64 3, !dbg !3019
  %201 = load i64, ptr %200, align 8, !dbg !3019, !tbaa !3138
  %202 = and i64 %201, 4294967295, !dbg !3019
  %203 = icmp eq i64 %202, 1, !dbg !3019
  br i1 %203, label %assert_end79, label %assert_fail78, !dbg !3019, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %204(ptr nonnull @.str.803), !dbg !3019
  br label %common.ret

assert_end79:                                     ; preds = %assert_end77
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.shape, i64 4, !dbg !3019
  %206 = load i64, ptr %205, align 8, !dbg !3019, !tbaa !3140
  %207 = and i64 %206, 4294967295, !dbg !3019
  %208 = icmp eq i64 %207, 32, !dbg !3019
  br i1 %208, label %assert_end81, label %assert_fail80, !dbg !3019, !prof !18

assert_fail80:                                    ; preds = %assert_end79
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %209(ptr nonnull @.str.804), !dbg !3019
  br label %common.ret

assert_end81:                                     ; preds = %assert_end79
  %.not150 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.strides, null, !dbg !3019
  br i1 %.not150, label %if_end83, label %if_then82, !dbg !3019, !prof !52

if_then82:                                        ; preds = %assert_end81
  %210 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.strides, i64 1, !dbg !3019
  %211 = load i64, ptr %210, align 8, !dbg !3019, !tbaa !3144
  %212 = and i64 %211, 4294967295, !dbg !3019
  %213 = icmp eq i64 %212, 32, !dbg !3019
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p2.strides, i64 4, !dbg !3019
  %215 = load i64, ptr %214, align 8, !dbg !3019, !tbaa !3154
  %216 = and i64 %215, 4294967295, !dbg !3019
  %217 = icmp eq i64 %216, 1, !dbg !3019
  %218 = and i1 %213, %217, !dbg !3019
  br i1 %218, label %if_end83, label %assert_fail84, !dbg !3019, !prof !18

if_end83:                                         ; preds = %if_then82, %assert_end81
  %219 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3019
  %220 = load i64, ptr %219, align 8, !dbg !3019
  %221 = icmp eq i64 %220, 0, !dbg !3019
  br i1 %221, label %assert_end87, label %assert_fail86, !dbg !3019, !prof !18

assert_fail84:                                    ; preds = %if_then82
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %222(ptr nonnull @.str.805), !dbg !3019
  br label %common.ret

assert_fail86:                                    ; preds = %if_end83
  %223 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %223(ptr nonnull @.str.806), !dbg !3019
  br label %common.ret

assert_end87:                                     ; preds = %if_end83
  %224 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3019
  %225 = load i32, ptr %224, align 4, !dbg !3019
  %226 = icmp eq i32 %225, 1, !dbg !3019
  br i1 %226, label %assert_end89, label %assert_fail88, !dbg !3019, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %227(ptr nonnull @.str.807), !dbg !3019
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %228 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3019
  %229 = load i32, ptr %228, align 4, !dbg !3019
  %230 = icmp eq i32 %dev_id, %229, !dbg !3019
  br i1 %230, label %assert_end91, label %assert_fail90, !dbg !3019, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %231 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %231(ptr nonnull @.str.808), !dbg !3019
  br label %common.ret

assert_end91:                                     ; preds = %assert_end89
  %232 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !3019
  %233 = load i32, ptr %232, align 4, !dbg !3019
  %234 = icmp eq i32 %233, 5, !dbg !3019
  br i1 %234, label %assert_end95, label %assert_fail92, !dbg !3019, !prof !18

assert_fail92:                                    ; preds = %assert_end91
  %235 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %235(ptr nonnull @.str.809), !dbg !3019
  br label %common.ret

assert_end95:                                     ; preds = %assert_end91
  %236 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !3019
  %237 = load i16, ptr %236, align 2, !dbg !3019
  %238 = icmp eq i16 %237, 1, !dbg !3019
  %239 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !3019
  %240 = load i8, ptr %239, align 1, !dbg !3019
  %241 = icmp eq i8 %240, 32, !dbg !3019
  %242 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !3019
  %243 = load i8, ptr %242, align 1, !dbg !3019
  %244 = icmp eq i8 %243, 2, !dbg !3019
  %245 = and i1 %241, %244, !dbg !3019
  %246 = and i1 %238, %245, !dbg !3019
  br i1 %246, label %assert_end97, label %assert_fail96, !dbg !3019, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %247 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %247(ptr nonnull @.str.810), !dbg !3019
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %248 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.shape, align 8, !dbg !3019, !tbaa !3158
  %249 = and i64 %248, 4294967295, !dbg !3019
  %250 = icmp eq i64 %249, 1, !dbg !3019
  br i1 %250, label %assert_end99, label %assert_fail98, !dbg !3019, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %251(ptr nonnull @.str.811), !dbg !3019
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.shape, i64 1, !dbg !3019
  %253 = load i64, ptr %252, align 8, !dbg !3019, !tbaa !3168
  %254 = and i64 %253, 4294967295, !dbg !3019
  %255 = icmp eq i64 %254, 8, !dbg !3019
  br i1 %255, label %assert_end101, label %assert_fail100, !dbg !3019, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %256(ptr nonnull @.str.812), !dbg !3019
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.shape, i64 2, !dbg !3019
  %258 = load i64, ptr %257, align 8, !dbg !3019, !tbaa !3170
  %259 = and i64 %258, 4294967295, !dbg !3019
  %260 = icmp eq i64 %259, 56, !dbg !3019
  br i1 %260, label %assert_end103, label %assert_fail102, !dbg !3019, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %261(ptr nonnull @.str.813), !dbg !3019
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.shape, i64 3, !dbg !3019
  %263 = load i64, ptr %262, align 8, !dbg !3019, !tbaa !3173
  %264 = and i64 %263, 4294967295, !dbg !3019
  %265 = icmp eq i64 %264, 56, !dbg !3019
  br i1 %265, label %assert_end105, label %assert_fail104, !dbg !3019, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %266(ptr nonnull @.str.814), !dbg !3019
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.shape, i64 4, !dbg !3019
  %268 = load i64, ptr %267, align 8, !dbg !3019, !tbaa !3175
  %269 = and i64 %268, 4294967295, !dbg !3019
  %270 = icmp eq i64 %269, 32, !dbg !3019
  br i1 %270, label %assert_end107, label %assert_fail106, !dbg !3019, !prof !18

assert_fail106:                                   ; preds = %assert_end105
  %271 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %271(ptr nonnull @.str.815), !dbg !3019
  br label %common.ret

assert_end107:                                    ; preds = %assert_end105
  %.not151 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.strides, null, !dbg !3019
  br i1 %.not151, label %if_end109, label %if_then108, !dbg !3019, !prof !52

if_then108:                                       ; preds = %assert_end107
  %272 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.strides, i64 1, !dbg !3019
  %273 = load i64, ptr %272, align 8, !dbg !3019, !tbaa !3179
  %274 = and i64 %273, 4294967295, !dbg !3019
  %275 = icmp eq i64 %274, 100352, !dbg !3019
  %276 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.strides, i64 2, !dbg !3019
  %277 = load i64, ptr %276, align 8, !dbg !3019, !tbaa !3189
  %278 = and i64 %277, 4294967295, !dbg !3019
  %279 = icmp eq i64 %278, 1792, !dbg !3019
  %280 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.strides, i64 3, !dbg !3019
  %281 = load i64, ptr %280, align 8, !dbg !3019, !tbaa !3192
  %282 = and i64 %281, 4294967295, !dbg !3019
  %283 = icmp eq i64 %282, 32, !dbg !3019
  %284 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.p3.strides, i64 4, !dbg !3019
  %285 = load i64, ptr %284, align 8, !dbg !3019, !tbaa !3194
  %286 = and i64 %285, 4294967295, !dbg !3019
  %287 = icmp eq i64 %286, 1, !dbg !3019
  %288 = and i1 %283, %287, !dbg !3019
  %289 = and i1 %279, %288, !dbg !3019
  %290 = and i1 %275, %289, !dbg !3019
  br i1 %290, label %if_end109, label %assert_fail110, !dbg !3019, !prof !18

if_end109:                                        ; preds = %if_then108, %assert_end107
  %291 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !3019
  %292 = load i64, ptr %291, align 8, !dbg !3019
  %293 = icmp eq i64 %292, 0, !dbg !3019
  br i1 %293, label %assert_end113, label %assert_fail112, !dbg !3019, !prof !18

assert_fail110:                                   ; preds = %if_then108
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %294(ptr nonnull @.str.816), !dbg !3019
  br label %common.ret

assert_fail112:                                   ; preds = %if_end109
  %295 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %295(ptr nonnull @.str.817), !dbg !3019
  br label %common.ret

assert_end113:                                    ; preds = %if_end109
  %296 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !3019
  %297 = load i32, ptr %296, align 4, !dbg !3019
  %298 = icmp eq i32 %297, 1, !dbg !3019
  br i1 %298, label %assert_end115, label %assert_fail114, !dbg !3019, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %299(ptr nonnull @.str.818), !dbg !3019
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %300 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !3019
  %301 = load i32, ptr %300, align 4, !dbg !3019
  %302 = icmp eq i32 %dev_id, %301, !dbg !3019
  br i1 %302, label %assert_end117, label %assert_fail116, !dbg !3019, !prof !18

assert_fail116:                                   ; preds = %assert_end115
  %303 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %303(ptr nonnull @.str.819), !dbg !3019
  br label %common.ret

assert_end117:                                    ; preds = %assert_end115
  %304 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !3019
  %305 = load i32, ptr %304, align 4, !dbg !3019
  %306 = icmp eq i32 %305, 5, !dbg !3019
  br i1 %306, label %assert_end121, label %assert_fail118, !dbg !3019, !prof !18

assert_fail118:                                   ; preds = %assert_end117
  %307 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %307(ptr nonnull @.str.820), !dbg !3019
  br label %common.ret

assert_end121:                                    ; preds = %assert_end117
  %308 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !3019
  %309 = load i16, ptr %308, align 2, !dbg !3019
  %310 = icmp eq i16 %309, 1, !dbg !3019
  %311 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !3019
  %312 = load i8, ptr %311, align 1, !dbg !3019
  %313 = icmp eq i8 %312, 32, !dbg !3019
  %314 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !3019
  %315 = load i8, ptr %314, align 1, !dbg !3019
  %316 = icmp eq i8 %315, 2, !dbg !3019
  %317 = and i1 %313, %316, !dbg !3019
  %318 = and i1 %310, %317, !dbg !3019
  br i1 %318, label %assert_end123, label %assert_fail122, !dbg !3019, !prof !18

assert_fail122:                                   ; preds = %assert_end121
  %319 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %319(ptr nonnull @.str.821), !dbg !3019
  br label %common.ret

assert_end123:                                    ; preds = %assert_end121
  %320 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.shape, align 8, !dbg !3019, !tbaa !3198
  %321 = and i64 %320, 4294967295, !dbg !3019
  %322 = icmp eq i64 %321, 1, !dbg !3019
  br i1 %322, label %assert_end125, label %assert_fail124, !dbg !3019, !prof !18

assert_fail124:                                   ; preds = %assert_end123
  %323 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %323(ptr nonnull @.str.822), !dbg !3019
  br label %common.ret

assert_end125:                                    ; preds = %assert_end123
  %324 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.shape, i64 1, !dbg !3019
  %325 = load i64, ptr %324, align 8, !dbg !3019, !tbaa !3208
  %326 = and i64 %325, 4294967295, !dbg !3019
  %327 = icmp eq i64 %326, 8, !dbg !3019
  br i1 %327, label %assert_end127, label %assert_fail126, !dbg !3019, !prof !18

assert_fail126:                                   ; preds = %assert_end125
  %328 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %328(ptr nonnull @.str.823), !dbg !3019
  br label %common.ret

assert_end127:                                    ; preds = %assert_end125
  %329 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.shape, i64 2, !dbg !3019
  %330 = load i64, ptr %329, align 8, !dbg !3019, !tbaa !3210
  %331 = and i64 %330, 4294967295, !dbg !3019
  %332 = icmp eq i64 %331, 56, !dbg !3019
  br i1 %332, label %assert_end129, label %assert_fail128, !dbg !3019, !prof !18

assert_fail128:                                   ; preds = %assert_end127
  %333 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %333(ptr nonnull @.str.824), !dbg !3019
  br label %common.ret

assert_end129:                                    ; preds = %assert_end127
  %334 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.shape, i64 3, !dbg !3019
  %335 = load i64, ptr %334, align 8, !dbg !3019, !tbaa !3213
  %336 = and i64 %335, 4294967295, !dbg !3019
  %337 = icmp eq i64 %336, 56, !dbg !3019
  br i1 %337, label %assert_end131, label %assert_fail130, !dbg !3019, !prof !18

assert_fail130:                                   ; preds = %assert_end129
  %338 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %338(ptr nonnull @.str.825), !dbg !3019
  br label %common.ret

assert_end131:                                    ; preds = %assert_end129
  %339 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.shape, i64 4, !dbg !3019
  %340 = load i64, ptr %339, align 8, !dbg !3019, !tbaa !3215
  %341 = and i64 %340, 4294967295, !dbg !3019
  %342 = icmp eq i64 %341, 32, !dbg !3019
  br i1 %342, label %assert_end133, label %assert_fail132, !dbg !3019, !prof !18

assert_fail132:                                   ; preds = %assert_end131
  %343 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %343(ptr nonnull @.str.826), !dbg !3019
  br label %common.ret

assert_end133:                                    ; preds = %assert_end131
  %.not152 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.strides, null, !dbg !3019
  br i1 %.not152, label %if_end135, label %if_then134, !dbg !3019, !prof !52

if_then134:                                       ; preds = %assert_end133
  %344 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.strides, i64 1, !dbg !3019
  %345 = load i64, ptr %344, align 8, !dbg !3019, !tbaa !3219
  %346 = and i64 %345, 4294967295, !dbg !3019
  %347 = icmp eq i64 %346, 100352, !dbg !3019
  %348 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.strides, i64 2, !dbg !3019
  %349 = load i64, ptr %348, align 8, !dbg !3019, !tbaa !3229
  %350 = and i64 %349, 4294967295, !dbg !3019
  %351 = icmp eq i64 %350, 1792, !dbg !3019
  %352 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.strides, i64 3, !dbg !3019
  %353 = load i64, ptr %352, align 8, !dbg !3019, !tbaa !3232
  %354 = and i64 %353, 4294967295, !dbg !3019
  %355 = icmp eq i64 %354, 32, !dbg !3019
  %356 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu.T_relu.strides, i64 4, !dbg !3019
  %357 = load i64, ptr %356, align 8, !dbg !3019, !tbaa !3234
  %358 = and i64 %357, 4294967295, !dbg !3019
  %359 = icmp eq i64 %358, 1, !dbg !3019
  %360 = and i1 %355, %359, !dbg !3019
  %361 = and i1 %351, %360, !dbg !3019
  %362 = and i1 %347, %361, !dbg !3019
  br i1 %362, label %if_end135, label %assert_fail136, !dbg !3019, !prof !18

if_end135:                                        ; preds = %if_then134, %assert_end133
  %363 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !3019
  %364 = load i64, ptr %363, align 8, !dbg !3019
  %365 = icmp eq i64 %364, 0, !dbg !3019
  br i1 %365, label %assert_end139, label %assert_fail138, !dbg !3019, !prof !18

assert_fail136:                                   ; preds = %if_then134
  %366 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %366(ptr nonnull @.str.827), !dbg !3019
  br label %common.ret

assert_fail138:                                   ; preds = %if_end135
  %367 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %367(ptr nonnull @.str.828), !dbg !3019
  br label %common.ret

assert_end139:                                    ; preds = %if_end135
  %368 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !3019
  %369 = load i32, ptr %368, align 4, !dbg !3019
  %370 = icmp eq i32 %369, 1, !dbg !3019
  br i1 %370, label %assert_end141, label %assert_fail140, !dbg !3019, !prof !18

assert_fail140:                                   ; preds = %assert_end139
  %371 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %371(ptr nonnull @.str.829), !dbg !3019
  br label %common.ret

assert_end141:                                    ; preds = %assert_end139
  %372 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !3019
  %373 = load i32, ptr %372, align 4, !dbg !3019
  %374 = icmp eq i32 %dev_id, %373, !dbg !3019
  br i1 %374, label %assert_end143, label %assert_fail142, !dbg !3019, !prof !18

assert_fail142:                                   ; preds = %assert_end141
  %375 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3019, !tbaa !19
  tail call void %375(ptr nonnull @.str.830), !dbg !3019
  br label %common.ret

assert_end143:                                    ; preds = %assert_end141
  %376 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_compute_(i32 %dev_id, ptr %p0144, ptr %p1145, ptr %T_relu146, ptr %p2147, ptr %p3148), !dbg !3019
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3238 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3240, metadata !DIExpression()), !dbg !3246
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3241, metadata !DIExpression()), !dbg !3246
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3242, metadata !DIExpression()), !dbg !3246
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3243, metadata !DIExpression()), !dbg !3246
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3244, metadata !DIExpression()), !dbg !3246
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3245, metadata !DIExpression()), !dbg !3246
  %0 = icmp eq i32 %num_args, 5, !dbg !3246
  br i1 %0, label %assert_end, label %assert_fail, !dbg !3246, !prof !18

common.ret:                                       ; preds = %assert_end143, %assert_fail142, %assert_fail140, %assert_fail138, %assert_fail136, %assert_fail132, %assert_fail130, %assert_fail128, %assert_fail126, %assert_fail124, %assert_fail122, %assert_fail118, %assert_fail116, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail106, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail92, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail80, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail80 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail92 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail106 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ -1, %assert_fail116 ], [ -1, %assert_fail118 ], [ -1, %assert_fail122 ], [ -1, %assert_fail124 ], [ -1, %assert_fail126 ], [ -1, %assert_fail128 ], [ -1, %assert_fail130 ], [ -1, %assert_fail132 ], [ -1, %assert_fail136 ], [ -1, %assert_fail138 ], [ -1, %assert_fail140 ], [ -1, %assert_fail142 ], [ %376, %assert_end143 ]
  ret i32 %common.ret.op, !dbg !3246

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %1(ptr nonnull @.str.832), !dbg !3246
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3246, !tbaa !3247
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3246
  %p1.code = load i32, ptr %2, align 4, !dbg !3246, !tbaa !3258
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3246
  %p2.code = load i32, ptr %3, align 4, !dbg !3246, !tbaa !3260
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3246
  %p3.code = load i32, ptr %4, align 4, !dbg !3246, !tbaa !3263
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !3246
  %T_relu.code = load i32, ptr %5, align 4, !dbg !3246, !tbaa !3265
  %p0 = load ptr, ptr %args, align 8, !dbg !3246
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3246
  %p1 = load ptr, ptr %6, align 8, !dbg !3246
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3246
  %p2 = load ptr, ptr %7, align 8, !dbg !3246
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3246
  %p3 = load ptr, ptr %8, align 8, !dbg !3246
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !3246
  %T_relu = load ptr, ptr %9, align 8, !dbg !3246
  %p0144 = load ptr, ptr %p0, align 8, !dbg !3246
  call void @llvm.assume(i1 true) [ "align"(ptr %p0144, i64 64) ], !dbg !3246
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3246
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.shape = load ptr, ptr %10, align 8, !dbg !3246
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3246
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.strides = load ptr, ptr %11, align 8, !dbg !3246
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3246
  %dev_id = load i32, ptr %12, align 4, !dbg !3246
  %p1145 = load ptr, ptr %p1, align 8, !dbg !3246
  call void @llvm.assume(i1 true) [ "align"(ptr %p1145, i64 64) ], !dbg !3246
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3246
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.shape = load ptr, ptr %13, align 8, !dbg !3246
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3246
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.strides = load ptr, ptr %14, align 8, !dbg !3246
  %p2147 = load ptr, ptr %p2, align 8, !dbg !3246
  call void @llvm.assume(i1 true) [ "align"(ptr %p2147, i64 64) ], !dbg !3246
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3246
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.shape = load ptr, ptr %15, align 8, !dbg !3246
  %16 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3246
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.strides = load ptr, ptr %16, align 8, !dbg !3246
  %p3148 = load ptr, ptr %p3, align 8, !dbg !3246
  call void @llvm.assume(i1 true) [ "align"(ptr %p3148, i64 64) ], !dbg !3246
  %17 = getelementptr inbounds %1, ptr %p3, i64 0, i32 4, !dbg !3246
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.shape = load ptr, ptr %17, align 8, !dbg !3246
  %18 = getelementptr inbounds %1, ptr %p3, i64 0, i32 5, !dbg !3246
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.strides = load ptr, ptr %18, align 8, !dbg !3246
  %T_relu146 = load ptr, ptr %T_relu, align 8, !dbg !3246
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu146, i64 64) ], !dbg !3246
  %19 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !3246
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.shape = load ptr, ptr %19, align 8, !dbg !3246
  %20 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !3246
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.strides = load ptr, ptr %20, align 8, !dbg !3246
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !3246

assert_fail6:                                     ; preds = %assert_end
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %21(ptr nonnull @.str.833), !dbg !3246
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !3246

assert_fail8:                                     ; preds = %assert_end7
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %22(ptr nonnull @.str.834), !dbg !3246
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !3246

assert_fail10:                                    ; preds = %assert_end9
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %23(ptr nonnull @.str.835), !dbg !3246
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !3246

assert_fail12:                                    ; preds = %assert_end11
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %24(ptr nonnull @.str.836), !dbg !3246
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_relu.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !3246

assert_fail14:                                    ; preds = %assert_end13
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %25(ptr nonnull @.str.837), !dbg !3246
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3246
  %27 = load i32, ptr %26, align 4, !dbg !3246
  %28 = icmp eq i32 %27, 5, !dbg !3246
  br i1 %28, label %assert_end19, label %assert_fail16, !dbg !3246, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %29 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %29(ptr nonnull @.str.838), !dbg !3246
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %30 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3246
  %31 = load i16, ptr %30, align 2, !dbg !3246
  %32 = icmp eq i16 %31, 1, !dbg !3246
  %33 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3246
  %34 = load i8, ptr %33, align 1, !dbg !3246
  %35 = icmp eq i8 %34, 32, !dbg !3246
  %36 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3246
  %37 = load i8, ptr %36, align 1, !dbg !3246
  %38 = icmp eq i8 %37, 2, !dbg !3246
  %39 = and i1 %35, %38, !dbg !3246
  %40 = and i1 %32, %39, !dbg !3246
  br i1 %40, label %assert_end21, label %assert_fail20, !dbg !3246, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %41(ptr nonnull @.str.839), !dbg !3246
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %42 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.shape, align 8, !dbg !3246, !tbaa !3269
  %43 = and i64 %42, 4294967295, !dbg !3246
  %44 = icmp eq i64 %43, 1, !dbg !3246
  br i1 %44, label %assert_end23, label %assert_fail22, !dbg !3246, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %45(ptr nonnull @.str.840), !dbg !3246
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.shape, i64 1, !dbg !3246
  %47 = load i64, ptr %46, align 8, !dbg !3246, !tbaa !3279
  %48 = and i64 %47, 4294967295, !dbg !3246
  %49 = icmp eq i64 %48, 32, !dbg !3246
  br i1 %49, label %assert_end25, label %assert_fail24, !dbg !3246, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %50(ptr nonnull @.str.841), !dbg !3246
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.shape, i64 2, !dbg !3246
  %52 = load i64, ptr %51, align 8, !dbg !3246, !tbaa !3281
  %53 = and i64 %52, 4294967295, !dbg !3246
  %54 = icmp eq i64 %53, 28, !dbg !3246
  br i1 %54, label %assert_end27, label %assert_fail26, !dbg !3246, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %55(ptr nonnull @.str.842), !dbg !3246
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.shape, i64 3, !dbg !3246
  %57 = load i64, ptr %56, align 8, !dbg !3246, !tbaa !3284
  %58 = and i64 %57, 4294967295, !dbg !3246
  %59 = icmp eq i64 %58, 28, !dbg !3246
  br i1 %59, label %assert_end29, label %assert_fail28, !dbg !3246, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %60(ptr nonnull @.str.843), !dbg !3246
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.shape, i64 4, !dbg !3246
  %62 = load i64, ptr %61, align 8, !dbg !3246, !tbaa !3286
  %63 = and i64 %62, 4294967295, !dbg !3246
  %64 = icmp eq i64 %63, 4, !dbg !3246
  br i1 %64, label %assert_end31, label %assert_fail30, !dbg !3246, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %65 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %65(ptr nonnull @.str.844), !dbg !3246
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.strides, null, !dbg !3246
  br i1 %.not, label %if_end, label %if_then, !dbg !3246, !prof !52

if_then:                                          ; preds = %assert_end31
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.strides, i64 1, !dbg !3246
  %67 = load i64, ptr %66, align 8, !dbg !3246, !tbaa !3290
  %68 = and i64 %67, 4294967295, !dbg !3246
  %69 = icmp eq i64 %68, 3136, !dbg !3246
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.strides, i64 2, !dbg !3246
  %71 = load i64, ptr %70, align 8, !dbg !3246, !tbaa !3300
  %72 = and i64 %71, 4294967295, !dbg !3246
  %73 = icmp eq i64 %72, 112, !dbg !3246
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.strides, i64 3, !dbg !3246
  %75 = load i64, ptr %74, align 8, !dbg !3246, !tbaa !3303
  %76 = and i64 %75, 4294967295, !dbg !3246
  %77 = icmp eq i64 %76, 4, !dbg !3246
  %78 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p0.strides, i64 4, !dbg !3246
  %79 = load i64, ptr %78, align 8, !dbg !3246, !tbaa !3305
  %80 = and i64 %79, 4294967295, !dbg !3246
  %81 = icmp eq i64 %80, 1, !dbg !3246
  %82 = and i1 %77, %81, !dbg !3246
  %83 = and i1 %73, %82, !dbg !3246
  %84 = and i1 %69, %83, !dbg !3246
  br i1 %84, label %if_end, label %assert_fail32, !dbg !3246, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %85 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3246
  %86 = load i64, ptr %85, align 8, !dbg !3246
  %87 = icmp eq i64 %86, 0, !dbg !3246
  br i1 %87, label %assert_end35, label %assert_fail34, !dbg !3246, !prof !18

assert_fail32:                                    ; preds = %if_then
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %88(ptr nonnull @.str.845), !dbg !3246
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %89(ptr nonnull @.str.846), !dbg !3246
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %90 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3246
  %91 = load i32, ptr %90, align 4, !dbg !3246
  %92 = icmp eq i32 %91, 1, !dbg !3246
  br i1 %92, label %assert_end37, label %assert_fail36, !dbg !3246, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %93(ptr nonnull @.str.847), !dbg !3246
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3246
  %95 = load i32, ptr %94, align 4, !dbg !3246
  %96 = icmp eq i32 %95, 6, !dbg !3246
  br i1 %96, label %assert_end41, label %assert_fail38, !dbg !3246, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %97 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %97(ptr nonnull @.str.848), !dbg !3246
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %98 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3246
  %99 = load i16, ptr %98, align 2, !dbg !3246
  %100 = icmp eq i16 %99, 1, !dbg !3246
  %101 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3246
  %102 = load i8, ptr %101, align 1, !dbg !3246
  %103 = icmp eq i8 %102, 32, !dbg !3246
  %104 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3246
  %105 = load i8, ptr %104, align 1, !dbg !3246
  %106 = icmp eq i8 %105, 2, !dbg !3246
  %107 = and i1 %103, %106, !dbg !3246
  %108 = and i1 %100, %107, !dbg !3246
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !3246, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %109(ptr nonnull @.str.849), !dbg !3246
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %110 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.shape, align 8, !dbg !3246, !tbaa !3309
  %111 = and i64 %110, 4294967295, !dbg !3246
  %112 = icmp eq i64 %111, 16, !dbg !3246
  br i1 %112, label %assert_end45, label %assert_fail44, !dbg !3246, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %113(ptr nonnull @.str.850), !dbg !3246
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.shape, i64 1, !dbg !3246
  %115 = load i64, ptr %114, align 8, !dbg !3246, !tbaa !3319
  %116 = and i64 %115, 4294967295, !dbg !3246
  %117 = icmp eq i64 %116, 32, !dbg !3246
  br i1 %117, label %assert_end47, label %assert_fail46, !dbg !3246, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %118(ptr nonnull @.str.851), !dbg !3246
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.shape, i64 2, !dbg !3246
  %120 = load i64, ptr %119, align 8, !dbg !3246, !tbaa !3321
  %121 = and i64 %120, 4294967295, !dbg !3246
  %122 = icmp eq i64 %121, 1, !dbg !3246
  br i1 %122, label %assert_end49, label %assert_fail48, !dbg !3246, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %123(ptr nonnull @.str.852), !dbg !3246
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.shape, i64 3, !dbg !3246
  %125 = load i64, ptr %124, align 8, !dbg !3246, !tbaa !3324
  %126 = and i64 %125, 4294967295, !dbg !3246
  %127 = icmp eq i64 %126, 1, !dbg !3246
  br i1 %127, label %assert_end51, label %assert_fail50, !dbg !3246, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %128(ptr nonnull @.str.853), !dbg !3246
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %129 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.shape, i64 4, !dbg !3246
  %130 = load i64, ptr %129, align 8, !dbg !3246, !tbaa !3326
  %131 = and i64 %130, 4294967295, !dbg !3246
  %132 = icmp eq i64 %131, 4, !dbg !3246
  br i1 %132, label %assert_end53, label %assert_fail52, !dbg !3246, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %133 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %133(ptr nonnull @.str.854), !dbg !3246
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %134 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.shape, i64 5, !dbg !3246
  %135 = load i64, ptr %134, align 8, !dbg !3246, !tbaa !3330
  %136 = and i64 %135, 4294967295, !dbg !3246
  %137 = icmp eq i64 %136, 32, !dbg !3246
  br i1 %137, label %assert_end55, label %assert_fail54, !dbg !3246, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %138 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %138(ptr nonnull @.str.855), !dbg !3246
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not149 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.strides, null, !dbg !3246
  br i1 %.not149, label %if_end57, label %if_then56, !dbg !3246, !prof !52

if_then56:                                        ; preds = %assert_end55
  %139 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.strides, align 8, !dbg !3246, !tbaa !3332
  %140 = and i64 %139, 4294967295, !dbg !3246
  %141 = icmp eq i64 %140, 4096, !dbg !3246
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.strides, i64 1, !dbg !3246
  %143 = load i64, ptr %142, align 8, !dbg !3246, !tbaa !3342
  %144 = and i64 %143, 4294967295, !dbg !3246
  %145 = icmp eq i64 %144, 128, !dbg !3246
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.strides, i64 4, !dbg !3246
  %147 = load i64, ptr %146, align 8, !dbg !3246, !tbaa !3344
  %148 = and i64 %147, 4294967295, !dbg !3246
  %149 = icmp eq i64 %148, 32, !dbg !3246
  %150 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p1.strides, i64 5, !dbg !3246
  %151 = load i64, ptr %150, align 8, !dbg !3246, !tbaa !3348
  %152 = and i64 %151, 4294967295, !dbg !3246
  %153 = icmp eq i64 %152, 1, !dbg !3246
  %154 = and i1 %149, %153, !dbg !3246
  %155 = and i1 %145, %154, !dbg !3246
  %156 = and i1 %141, %155, !dbg !3246
  br i1 %156, label %if_end57, label %assert_fail58, !dbg !3246, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %157 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3246
  %158 = load i64, ptr %157, align 8, !dbg !3246
  %159 = icmp eq i64 %158, 0, !dbg !3246
  br i1 %159, label %assert_end61, label %assert_fail60, !dbg !3246, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %160(ptr nonnull @.str.856), !dbg !3246
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %161(ptr nonnull @.str.857), !dbg !3246
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3246
  %163 = load i32, ptr %162, align 4, !dbg !3246
  %164 = icmp eq i32 %163, 1, !dbg !3246
  br i1 %164, label %assert_end63, label %assert_fail62, !dbg !3246, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %165(ptr nonnull @.str.858), !dbg !3246
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %166 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3246
  %167 = load i32, ptr %166, align 4, !dbg !3246
  %168 = icmp eq i32 %dev_id, %167, !dbg !3246
  br i1 %168, label %assert_end65, label %assert_fail64, !dbg !3246, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %169(ptr nonnull @.str.859), !dbg !3246
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3246
  %171 = load i32, ptr %170, align 4, !dbg !3246
  %172 = icmp eq i32 %171, 5, !dbg !3246
  br i1 %172, label %assert_end69, label %assert_fail66, !dbg !3246, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %173 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %173(ptr nonnull @.str.860), !dbg !3246
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %174 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3246
  %175 = load i16, ptr %174, align 2, !dbg !3246
  %176 = icmp eq i16 %175, 1, !dbg !3246
  %177 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3246
  %178 = load i8, ptr %177, align 1, !dbg !3246
  %179 = icmp eq i8 %178, 32, !dbg !3246
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3246
  %181 = load i8, ptr %180, align 1, !dbg !3246
  %182 = icmp eq i8 %181, 2, !dbg !3246
  %183 = and i1 %179, %182, !dbg !3246
  %184 = and i1 %176, %183, !dbg !3246
  br i1 %184, label %assert_end71, label %assert_fail70, !dbg !3246, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %185(ptr nonnull @.str.861), !dbg !3246
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %186 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.shape, align 8, !dbg !3246, !tbaa !3350
  %187 = and i64 %186, 4294967295, !dbg !3246
  %188 = icmp eq i64 %187, 1, !dbg !3246
  br i1 %188, label %assert_end73, label %assert_fail72, !dbg !3246, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %189(ptr nonnull @.str.862), !dbg !3246
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.shape, i64 1, !dbg !3246
  %191 = load i64, ptr %190, align 8, !dbg !3246, !tbaa !3360
  %192 = and i64 %191, 4294967295, !dbg !3246
  %193 = icmp eq i64 %192, 16, !dbg !3246
  br i1 %193, label %assert_end75, label %assert_fail74, !dbg !3246, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %194(ptr nonnull @.str.863), !dbg !3246
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.shape, i64 2, !dbg !3246
  %196 = load i64, ptr %195, align 8, !dbg !3246, !tbaa !3362
  %197 = and i64 %196, 4294967295, !dbg !3246
  %198 = icmp eq i64 %197, 1, !dbg !3246
  br i1 %198, label %assert_end77, label %assert_fail76, !dbg !3246, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %199(ptr nonnull @.str.864), !dbg !3246
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.shape, i64 3, !dbg !3246
  %201 = load i64, ptr %200, align 8, !dbg !3246, !tbaa !3365
  %202 = and i64 %201, 4294967295, !dbg !3246
  %203 = icmp eq i64 %202, 1, !dbg !3246
  br i1 %203, label %assert_end79, label %assert_fail78, !dbg !3246, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %204(ptr nonnull @.str.865), !dbg !3246
  br label %common.ret

assert_end79:                                     ; preds = %assert_end77
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.shape, i64 4, !dbg !3246
  %206 = load i64, ptr %205, align 8, !dbg !3246, !tbaa !3367
  %207 = and i64 %206, 4294967295, !dbg !3246
  %208 = icmp eq i64 %207, 32, !dbg !3246
  br i1 %208, label %assert_end81, label %assert_fail80, !dbg !3246, !prof !18

assert_fail80:                                    ; preds = %assert_end79
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %209(ptr nonnull @.str.866), !dbg !3246
  br label %common.ret

assert_end81:                                     ; preds = %assert_end79
  %.not150 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.strides, null, !dbg !3246
  br i1 %.not150, label %if_end83, label %if_then82, !dbg !3246, !prof !52

if_then82:                                        ; preds = %assert_end81
  %210 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.strides, i64 1, !dbg !3246
  %211 = load i64, ptr %210, align 8, !dbg !3246, !tbaa !3371
  %212 = and i64 %211, 4294967295, !dbg !3246
  %213 = icmp eq i64 %212, 32, !dbg !3246
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p2.strides, i64 4, !dbg !3246
  %215 = load i64, ptr %214, align 8, !dbg !3246, !tbaa !3381
  %216 = and i64 %215, 4294967295, !dbg !3246
  %217 = icmp eq i64 %216, 1, !dbg !3246
  %218 = and i1 %213, %217, !dbg !3246
  br i1 %218, label %if_end83, label %assert_fail84, !dbg !3246, !prof !18

if_end83:                                         ; preds = %if_then82, %assert_end81
  %219 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3246
  %220 = load i64, ptr %219, align 8, !dbg !3246
  %221 = icmp eq i64 %220, 0, !dbg !3246
  br i1 %221, label %assert_end87, label %assert_fail86, !dbg !3246, !prof !18

assert_fail84:                                    ; preds = %if_then82
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %222(ptr nonnull @.str.867), !dbg !3246
  br label %common.ret

assert_fail86:                                    ; preds = %if_end83
  %223 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %223(ptr nonnull @.str.868), !dbg !3246
  br label %common.ret

assert_end87:                                     ; preds = %if_end83
  %224 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3246
  %225 = load i32, ptr %224, align 4, !dbg !3246
  %226 = icmp eq i32 %225, 1, !dbg !3246
  br i1 %226, label %assert_end89, label %assert_fail88, !dbg !3246, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %227(ptr nonnull @.str.869), !dbg !3246
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %228 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3246
  %229 = load i32, ptr %228, align 4, !dbg !3246
  %230 = icmp eq i32 %dev_id, %229, !dbg !3246
  br i1 %230, label %assert_end91, label %assert_fail90, !dbg !3246, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %231 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %231(ptr nonnull @.str.870), !dbg !3246
  br label %common.ret

assert_end91:                                     ; preds = %assert_end89
  %232 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !3246
  %233 = load i32, ptr %232, align 4, !dbg !3246
  %234 = icmp eq i32 %233, 5, !dbg !3246
  br i1 %234, label %assert_end95, label %assert_fail92, !dbg !3246, !prof !18

assert_fail92:                                    ; preds = %assert_end91
  %235 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %235(ptr nonnull @.str.871), !dbg !3246
  br label %common.ret

assert_end95:                                     ; preds = %assert_end91
  %236 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !3246
  %237 = load i16, ptr %236, align 2, !dbg !3246
  %238 = icmp eq i16 %237, 1, !dbg !3246
  %239 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !3246
  %240 = load i8, ptr %239, align 1, !dbg !3246
  %241 = icmp eq i8 %240, 32, !dbg !3246
  %242 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !3246
  %243 = load i8, ptr %242, align 1, !dbg !3246
  %244 = icmp eq i8 %243, 2, !dbg !3246
  %245 = and i1 %241, %244, !dbg !3246
  %246 = and i1 %238, %245, !dbg !3246
  br i1 %246, label %assert_end97, label %assert_fail96, !dbg !3246, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %247 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %247(ptr nonnull @.str.872), !dbg !3246
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %248 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.shape, align 8, !dbg !3246, !tbaa !3385
  %249 = and i64 %248, 4294967295, !dbg !3246
  %250 = icmp eq i64 %249, 1, !dbg !3246
  br i1 %250, label %assert_end99, label %assert_fail98, !dbg !3246, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %251(ptr nonnull @.str.873), !dbg !3246
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.shape, i64 1, !dbg !3246
  %253 = load i64, ptr %252, align 8, !dbg !3246, !tbaa !3395
  %254 = and i64 %253, 4294967295, !dbg !3246
  %255 = icmp eq i64 %254, 16, !dbg !3246
  br i1 %255, label %assert_end101, label %assert_fail100, !dbg !3246, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %256(ptr nonnull @.str.874), !dbg !3246
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.shape, i64 2, !dbg !3246
  %258 = load i64, ptr %257, align 8, !dbg !3246, !tbaa !3397
  %259 = and i64 %258, 4294967295, !dbg !3246
  %260 = icmp eq i64 %259, 28, !dbg !3246
  br i1 %260, label %assert_end103, label %assert_fail102, !dbg !3246, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %261(ptr nonnull @.str.875), !dbg !3246
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.shape, i64 3, !dbg !3246
  %263 = load i64, ptr %262, align 8, !dbg !3246, !tbaa !3400
  %264 = and i64 %263, 4294967295, !dbg !3246
  %265 = icmp eq i64 %264, 28, !dbg !3246
  br i1 %265, label %assert_end105, label %assert_fail104, !dbg !3246, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %266(ptr nonnull @.str.876), !dbg !3246
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.shape, i64 4, !dbg !3246
  %268 = load i64, ptr %267, align 8, !dbg !3246, !tbaa !3402
  %269 = and i64 %268, 4294967295, !dbg !3246
  %270 = icmp eq i64 %269, 32, !dbg !3246
  br i1 %270, label %assert_end107, label %assert_fail106, !dbg !3246, !prof !18

assert_fail106:                                   ; preds = %assert_end105
  %271 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %271(ptr nonnull @.str.877), !dbg !3246
  br label %common.ret

assert_end107:                                    ; preds = %assert_end105
  %.not151 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.strides, null, !dbg !3246
  br i1 %.not151, label %if_end109, label %if_then108, !dbg !3246, !prof !52

if_then108:                                       ; preds = %assert_end107
  %272 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.strides, i64 1, !dbg !3246
  %273 = load i64, ptr %272, align 8, !dbg !3246, !tbaa !3406
  %274 = and i64 %273, 4294967295, !dbg !3246
  %275 = icmp eq i64 %274, 25088, !dbg !3246
  %276 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.strides, i64 2, !dbg !3246
  %277 = load i64, ptr %276, align 8, !dbg !3246, !tbaa !3416
  %278 = and i64 %277, 4294967295, !dbg !3246
  %279 = icmp eq i64 %278, 896, !dbg !3246
  %280 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.strides, i64 3, !dbg !3246
  %281 = load i64, ptr %280, align 8, !dbg !3246, !tbaa !3419
  %282 = and i64 %281, 4294967295, !dbg !3246
  %283 = icmp eq i64 %282, 32, !dbg !3246
  %284 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.p3.strides, i64 4, !dbg !3246
  %285 = load i64, ptr %284, align 8, !dbg !3246, !tbaa !3421
  %286 = and i64 %285, 4294967295, !dbg !3246
  %287 = icmp eq i64 %286, 1, !dbg !3246
  %288 = and i1 %283, %287, !dbg !3246
  %289 = and i1 %279, %288, !dbg !3246
  %290 = and i1 %275, %289, !dbg !3246
  br i1 %290, label %if_end109, label %assert_fail110, !dbg !3246, !prof !18

if_end109:                                        ; preds = %if_then108, %assert_end107
  %291 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !3246
  %292 = load i64, ptr %291, align 8, !dbg !3246
  %293 = icmp eq i64 %292, 0, !dbg !3246
  br i1 %293, label %assert_end113, label %assert_fail112, !dbg !3246, !prof !18

assert_fail110:                                   ; preds = %if_then108
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %294(ptr nonnull @.str.878), !dbg !3246
  br label %common.ret

assert_fail112:                                   ; preds = %if_end109
  %295 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %295(ptr nonnull @.str.879), !dbg !3246
  br label %common.ret

assert_end113:                                    ; preds = %if_end109
  %296 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !3246
  %297 = load i32, ptr %296, align 4, !dbg !3246
  %298 = icmp eq i32 %297, 1, !dbg !3246
  br i1 %298, label %assert_end115, label %assert_fail114, !dbg !3246, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %299(ptr nonnull @.str.880), !dbg !3246
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %300 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !3246
  %301 = load i32, ptr %300, align 4, !dbg !3246
  %302 = icmp eq i32 %dev_id, %301, !dbg !3246
  br i1 %302, label %assert_end117, label %assert_fail116, !dbg !3246, !prof !18

assert_fail116:                                   ; preds = %assert_end115
  %303 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %303(ptr nonnull @.str.881), !dbg !3246
  br label %common.ret

assert_end117:                                    ; preds = %assert_end115
  %304 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !3246
  %305 = load i32, ptr %304, align 4, !dbg !3246
  %306 = icmp eq i32 %305, 5, !dbg !3246
  br i1 %306, label %assert_end121, label %assert_fail118, !dbg !3246, !prof !18

assert_fail118:                                   ; preds = %assert_end117
  %307 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %307(ptr nonnull @.str.882), !dbg !3246
  br label %common.ret

assert_end121:                                    ; preds = %assert_end117
  %308 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !3246
  %309 = load i16, ptr %308, align 2, !dbg !3246
  %310 = icmp eq i16 %309, 1, !dbg !3246
  %311 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !3246
  %312 = load i8, ptr %311, align 1, !dbg !3246
  %313 = icmp eq i8 %312, 32, !dbg !3246
  %314 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !3246
  %315 = load i8, ptr %314, align 1, !dbg !3246
  %316 = icmp eq i8 %315, 2, !dbg !3246
  %317 = and i1 %313, %316, !dbg !3246
  %318 = and i1 %310, %317, !dbg !3246
  br i1 %318, label %assert_end123, label %assert_fail122, !dbg !3246, !prof !18

assert_fail122:                                   ; preds = %assert_end121
  %319 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %319(ptr nonnull @.str.883), !dbg !3246
  br label %common.ret

assert_end123:                                    ; preds = %assert_end121
  %320 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.shape, align 8, !dbg !3246, !tbaa !3425
  %321 = and i64 %320, 4294967295, !dbg !3246
  %322 = icmp eq i64 %321, 1, !dbg !3246
  br i1 %322, label %assert_end125, label %assert_fail124, !dbg !3246, !prof !18

assert_fail124:                                   ; preds = %assert_end123
  %323 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %323(ptr nonnull @.str.884), !dbg !3246
  br label %common.ret

assert_end125:                                    ; preds = %assert_end123
  %324 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.shape, i64 1, !dbg !3246
  %325 = load i64, ptr %324, align 8, !dbg !3246, !tbaa !3435
  %326 = and i64 %325, 4294967295, !dbg !3246
  %327 = icmp eq i64 %326, 16, !dbg !3246
  br i1 %327, label %assert_end127, label %assert_fail126, !dbg !3246, !prof !18

assert_fail126:                                   ; preds = %assert_end125
  %328 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %328(ptr nonnull @.str.885), !dbg !3246
  br label %common.ret

assert_end127:                                    ; preds = %assert_end125
  %329 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.shape, i64 2, !dbg !3246
  %330 = load i64, ptr %329, align 8, !dbg !3246, !tbaa !3437
  %331 = and i64 %330, 4294967295, !dbg !3246
  %332 = icmp eq i64 %331, 28, !dbg !3246
  br i1 %332, label %assert_end129, label %assert_fail128, !dbg !3246, !prof !18

assert_fail128:                                   ; preds = %assert_end127
  %333 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %333(ptr nonnull @.str.886), !dbg !3246
  br label %common.ret

assert_end129:                                    ; preds = %assert_end127
  %334 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.shape, i64 3, !dbg !3246
  %335 = load i64, ptr %334, align 8, !dbg !3246, !tbaa !3440
  %336 = and i64 %335, 4294967295, !dbg !3246
  %337 = icmp eq i64 %336, 28, !dbg !3246
  br i1 %337, label %assert_end131, label %assert_fail130, !dbg !3246, !prof !18

assert_fail130:                                   ; preds = %assert_end129
  %338 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %338(ptr nonnull @.str.887), !dbg !3246
  br label %common.ret

assert_end131:                                    ; preds = %assert_end129
  %339 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.shape, i64 4, !dbg !3246
  %340 = load i64, ptr %339, align 8, !dbg !3246, !tbaa !3442
  %341 = and i64 %340, 4294967295, !dbg !3246
  %342 = icmp eq i64 %341, 32, !dbg !3246
  br i1 %342, label %assert_end133, label %assert_fail132, !dbg !3246, !prof !18

assert_fail132:                                   ; preds = %assert_end131
  %343 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %343(ptr nonnull @.str.888), !dbg !3246
  br label %common.ret

assert_end133:                                    ; preds = %assert_end131
  %.not152 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.strides, null, !dbg !3246
  br i1 %.not152, label %if_end135, label %if_then134, !dbg !3246, !prof !52

if_then134:                                       ; preds = %assert_end133
  %344 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.strides, i64 1, !dbg !3246
  %345 = load i64, ptr %344, align 8, !dbg !3246, !tbaa !3446
  %346 = and i64 %345, 4294967295, !dbg !3246
  %347 = icmp eq i64 %346, 25088, !dbg !3246
  %348 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.strides, i64 2, !dbg !3246
  %349 = load i64, ptr %348, align 8, !dbg !3246, !tbaa !3456
  %350 = and i64 %349, 4294967295, !dbg !3246
  %351 = icmp eq i64 %350, 896, !dbg !3246
  %352 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.strides, i64 3, !dbg !3246
  %353 = load i64, ptr %352, align 8, !dbg !3246, !tbaa !3459
  %354 = and i64 %353, 4294967295, !dbg !3246
  %355 = icmp eq i64 %354, 32, !dbg !3246
  %356 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1.T_relu.strides, i64 4, !dbg !3246
  %357 = load i64, ptr %356, align 8, !dbg !3246, !tbaa !3461
  %358 = and i64 %357, 4294967295, !dbg !3246
  %359 = icmp eq i64 %358, 1, !dbg !3246
  %360 = and i1 %355, %359, !dbg !3246
  %361 = and i1 %351, %360, !dbg !3246
  %362 = and i1 %347, %361, !dbg !3246
  br i1 %362, label %if_end135, label %assert_fail136, !dbg !3246, !prof !18

if_end135:                                        ; preds = %if_then134, %assert_end133
  %363 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !3246
  %364 = load i64, ptr %363, align 8, !dbg !3246
  %365 = icmp eq i64 %364, 0, !dbg !3246
  br i1 %365, label %assert_end139, label %assert_fail138, !dbg !3246, !prof !18

assert_fail136:                                   ; preds = %if_then134
  %366 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %366(ptr nonnull @.str.889), !dbg !3246
  br label %common.ret

assert_fail138:                                   ; preds = %if_end135
  %367 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %367(ptr nonnull @.str.890), !dbg !3246
  br label %common.ret

assert_end139:                                    ; preds = %if_end135
  %368 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !3246
  %369 = load i32, ptr %368, align 4, !dbg !3246
  %370 = icmp eq i32 %369, 1, !dbg !3246
  br i1 %370, label %assert_end141, label %assert_fail140, !dbg !3246, !prof !18

assert_fail140:                                   ; preds = %assert_end139
  %371 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %371(ptr nonnull @.str.891), !dbg !3246
  br label %common.ret

assert_end141:                                    ; preds = %assert_end139
  %372 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !3246
  %373 = load i32, ptr %372, align 4, !dbg !3246
  %374 = icmp eq i32 %dev_id, %373, !dbg !3246
  br i1 %374, label %assert_end143, label %assert_fail142, !dbg !3246, !prof !18

assert_fail142:                                   ; preds = %assert_end141
  %375 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3246, !tbaa !19
  tail call void %375(ptr nonnull @.str.892), !dbg !3246
  br label %common.ret

assert_end143:                                    ; preds = %assert_end141
  %376 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_compute_(i32 %dev_id, ptr %p0144, ptr %p1145, ptr %T_relu146, ptr %p2147, ptr %p3148), !dbg !3246
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3465 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3467, metadata !DIExpression()), !dbg !3473
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3468, metadata !DIExpression()), !dbg !3473
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3469, metadata !DIExpression()), !dbg !3473
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3470, metadata !DIExpression()), !dbg !3473
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3471, metadata !DIExpression()), !dbg !3473
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3472, metadata !DIExpression()), !dbg !3473
  %0 = icmp eq i32 %num_args, 5, !dbg !3473
  br i1 %0, label %assert_end, label %assert_fail, !dbg !3473, !prof !18

common.ret:                                       ; preds = %assert_end143, %assert_fail142, %assert_fail140, %assert_fail138, %assert_fail136, %assert_fail132, %assert_fail130, %assert_fail128, %assert_fail126, %assert_fail124, %assert_fail122, %assert_fail118, %assert_fail116, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail106, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail92, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail80, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail80 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail92 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail106 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ -1, %assert_fail116 ], [ -1, %assert_fail118 ], [ -1, %assert_fail122 ], [ -1, %assert_fail124 ], [ -1, %assert_fail126 ], [ -1, %assert_fail128 ], [ -1, %assert_fail130 ], [ -1, %assert_fail132 ], [ -1, %assert_fail136 ], [ -1, %assert_fail138 ], [ -1, %assert_fail140 ], [ -1, %assert_fail142 ], [ %366, %assert_end143 ]
  ret i32 %common.ret.op, !dbg !3473

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %1(ptr nonnull @.str.894), !dbg !3473
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3473, !tbaa !3474
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3473
  %p1.code = load i32, ptr %2, align 4, !dbg !3473, !tbaa !3485
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3473
  %p2.code = load i32, ptr %3, align 4, !dbg !3473, !tbaa !3487
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3473
  %p3.code = load i32, ptr %4, align 4, !dbg !3473, !tbaa !3490
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !3473
  %T_relu.code = load i32, ptr %5, align 4, !dbg !3473, !tbaa !3492
  %p0 = load ptr, ptr %args, align 8, !dbg !3473
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3473
  %p1 = load ptr, ptr %6, align 8, !dbg !3473
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3473
  %p2 = load ptr, ptr %7, align 8, !dbg !3473
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3473
  %p3 = load ptr, ptr %8, align 8, !dbg !3473
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !3473
  %T_relu = load ptr, ptr %9, align 8, !dbg !3473
  %p0144 = load ptr, ptr %p0, align 8, !dbg !3473
  call void @llvm.assume(i1 true) [ "align"(ptr %p0144, i64 64) ], !dbg !3473
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3473
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.shape = load ptr, ptr %10, align 8, !dbg !3473
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3473
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.strides = load ptr, ptr %11, align 8, !dbg !3473
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3473
  %dev_id = load i32, ptr %12, align 4, !dbg !3473
  %p1145 = load ptr, ptr %p1, align 8, !dbg !3473
  call void @llvm.assume(i1 true) [ "align"(ptr %p1145, i64 64) ], !dbg !3473
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3473
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.shape = load ptr, ptr %13, align 8, !dbg !3473
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3473
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.strides = load ptr, ptr %14, align 8, !dbg !3473
  %p2147 = load ptr, ptr %p2, align 8, !dbg !3473
  call void @llvm.assume(i1 true) [ "align"(ptr %p2147, i64 64) ], !dbg !3473
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3473
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.shape = load ptr, ptr %15, align 8, !dbg !3473
  %16 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3473
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.strides = load ptr, ptr %16, align 8, !dbg !3473
  %p3148 = load ptr, ptr %p3, align 8, !dbg !3473
  call void @llvm.assume(i1 true) [ "align"(ptr %p3148, i64 64) ], !dbg !3473
  %17 = getelementptr inbounds %1, ptr %p3, i64 0, i32 4, !dbg !3473
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.shape = load ptr, ptr %17, align 8, !dbg !3473
  %18 = getelementptr inbounds %1, ptr %p3, i64 0, i32 5, !dbg !3473
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.strides = load ptr, ptr %18, align 8, !dbg !3473
  %T_relu146 = load ptr, ptr %T_relu, align 8, !dbg !3473
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu146, i64 64) ], !dbg !3473
  %19 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !3473
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.shape = load ptr, ptr %19, align 8, !dbg !3473
  %20 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !3473
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.strides = load ptr, ptr %20, align 8, !dbg !3473
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !3473

assert_fail6:                                     ; preds = %assert_end
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %21(ptr nonnull @.str.895), !dbg !3473
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !3473

assert_fail8:                                     ; preds = %assert_end7
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %22(ptr nonnull @.str.896), !dbg !3473
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !3473

assert_fail10:                                    ; preds = %assert_end9
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %23(ptr nonnull @.str.897), !dbg !3473
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !3473

assert_fail12:                                    ; preds = %assert_end11
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %24(ptr nonnull @.str.898), !dbg !3473
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_relu.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !3473

assert_fail14:                                    ; preds = %assert_end13
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %25(ptr nonnull @.str.899), !dbg !3473
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3473
  %27 = load i32, ptr %26, align 4, !dbg !3473
  %28 = icmp eq i32 %27, 5, !dbg !3473
  br i1 %28, label %assert_end19, label %assert_fail16, !dbg !3473, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %29 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %29(ptr nonnull @.str.900), !dbg !3473
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %30 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3473
  %31 = load i16, ptr %30, align 2, !dbg !3473
  %32 = icmp eq i16 %31, 1, !dbg !3473
  %33 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3473
  %34 = load i8, ptr %33, align 1, !dbg !3473
  %35 = icmp eq i8 %34, 32, !dbg !3473
  %36 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3473
  %37 = load i8, ptr %36, align 1, !dbg !3473
  %38 = icmp eq i8 %37, 2, !dbg !3473
  %39 = and i1 %35, %38, !dbg !3473
  %40 = and i1 %32, %39, !dbg !3473
  br i1 %40, label %assert_end21, label %assert_fail20, !dbg !3473, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %41(ptr nonnull @.str.901), !dbg !3473
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %42 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.shape, align 8, !dbg !3473, !tbaa !3496
  %43 = and i64 %42, 4294967295, !dbg !3473
  %44 = icmp eq i64 %43, 1, !dbg !3473
  br i1 %44, label %assert_end23, label %assert_fail22, !dbg !3473, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %45(ptr nonnull @.str.902), !dbg !3473
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.shape, i64 1, !dbg !3473
  %47 = load i64, ptr %46, align 8, !dbg !3473, !tbaa !3506
  %48 = and i64 %47, 4294967295, !dbg !3473
  %49 = icmp eq i64 %48, 1, !dbg !3473
  br i1 %49, label %assert_end25, label %assert_fail24, !dbg !3473, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %50(ptr nonnull @.str.903), !dbg !3473
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.shape, i64 2, !dbg !3473
  %52 = load i64, ptr %51, align 8, !dbg !3473, !tbaa !3508
  %53 = and i64 %52, 4294967295, !dbg !3473
  %54 = icmp eq i64 %53, 14, !dbg !3473
  br i1 %54, label %assert_end27, label %assert_fail26, !dbg !3473, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %55(ptr nonnull @.str.904), !dbg !3473
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.shape, i64 3, !dbg !3473
  %57 = load i64, ptr %56, align 8, !dbg !3473, !tbaa !3511
  %58 = and i64 %57, 4294967295, !dbg !3473
  %59 = icmp eq i64 %58, 14, !dbg !3473
  br i1 %59, label %assert_end29, label %assert_fail28, !dbg !3473, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %60(ptr nonnull @.str.905), !dbg !3473
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.shape, i64 4, !dbg !3473
  %62 = load i64, ptr %61, align 8, !dbg !3473, !tbaa !3513
  %63 = and i64 %62, 4294967295, !dbg !3473
  %64 = icmp eq i64 %63, 256, !dbg !3473
  br i1 %64, label %assert_end31, label %assert_fail30, !dbg !3473, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %65 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %65(ptr nonnull @.str.906), !dbg !3473
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.strides, null, !dbg !3473
  br i1 %.not, label %if_end, label %if_then, !dbg !3473, !prof !52

if_then:                                          ; preds = %assert_end31
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.strides, i64 2, !dbg !3473
  %67 = load i64, ptr %66, align 8, !dbg !3473, !tbaa !3517
  %68 = and i64 %67, 4294967295, !dbg !3473
  %69 = icmp eq i64 %68, 3584, !dbg !3473
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.strides, i64 3, !dbg !3473
  %71 = load i64, ptr %70, align 8, !dbg !3473, !tbaa !3527
  %72 = and i64 %71, 4294967295, !dbg !3473
  %73 = icmp eq i64 %72, 256, !dbg !3473
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p0.strides, i64 4, !dbg !3473
  %75 = load i64, ptr %74, align 8, !dbg !3473, !tbaa !3529
  %76 = and i64 %75, 4294967295, !dbg !3473
  %77 = icmp eq i64 %76, 1, !dbg !3473
  %78 = and i1 %73, %77, !dbg !3473
  %79 = and i1 %69, %78, !dbg !3473
  br i1 %79, label %if_end, label %assert_fail32, !dbg !3473, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3473
  %81 = load i64, ptr %80, align 8, !dbg !3473
  %82 = icmp eq i64 %81, 0, !dbg !3473
  br i1 %82, label %assert_end35, label %assert_fail34, !dbg !3473, !prof !18

assert_fail32:                                    ; preds = %if_then
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %83(ptr nonnull @.str.907), !dbg !3473
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %84(ptr nonnull @.str.908), !dbg !3473
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %85 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3473
  %86 = load i32, ptr %85, align 4, !dbg !3473
  %87 = icmp eq i32 %86, 1, !dbg !3473
  br i1 %87, label %assert_end37, label %assert_fail36, !dbg !3473, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %88(ptr nonnull @.str.909), !dbg !3473
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %89 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3473
  %90 = load i32, ptr %89, align 4, !dbg !3473
  %91 = icmp eq i32 %90, 6, !dbg !3473
  br i1 %91, label %assert_end41, label %assert_fail38, !dbg !3473, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %92 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %92(ptr nonnull @.str.910), !dbg !3473
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %93 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3473
  %94 = load i16, ptr %93, align 2, !dbg !3473
  %95 = icmp eq i16 %94, 1, !dbg !3473
  %96 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3473
  %97 = load i8, ptr %96, align 1, !dbg !3473
  %98 = icmp eq i8 %97, 32, !dbg !3473
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3473
  %100 = load i8, ptr %99, align 1, !dbg !3473
  %101 = icmp eq i8 %100, 2, !dbg !3473
  %102 = and i1 %98, %101, !dbg !3473
  %103 = and i1 %95, %102, !dbg !3473
  br i1 %103, label %assert_end43, label %assert_fail42, !dbg !3473, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %104(ptr nonnull @.str.911), !dbg !3473
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %105 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.shape, align 8, !dbg !3473, !tbaa !3533
  %106 = and i64 %105, 4294967295, !dbg !3473
  %107 = icmp eq i64 %106, 16, !dbg !3473
  br i1 %107, label %assert_end45, label %assert_fail44, !dbg !3473, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %108(ptr nonnull @.str.912), !dbg !3473
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.shape, i64 1, !dbg !3473
  %110 = load i64, ptr %109, align 8, !dbg !3473, !tbaa !3543
  %111 = and i64 %110, 4294967295, !dbg !3473
  %112 = icmp eq i64 %111, 1, !dbg !3473
  br i1 %112, label %assert_end47, label %assert_fail46, !dbg !3473, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %113(ptr nonnull @.str.913), !dbg !3473
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.shape, i64 2, !dbg !3473
  %115 = load i64, ptr %114, align 8, !dbg !3473, !tbaa !3545
  %116 = and i64 %115, 4294967295, !dbg !3473
  %117 = icmp eq i64 %116, 1, !dbg !3473
  br i1 %117, label %assert_end49, label %assert_fail48, !dbg !3473, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %118(ptr nonnull @.str.914), !dbg !3473
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.shape, i64 3, !dbg !3473
  %120 = load i64, ptr %119, align 8, !dbg !3473, !tbaa !3548
  %121 = and i64 %120, 4294967295, !dbg !3473
  %122 = icmp eq i64 %121, 1, !dbg !3473
  br i1 %122, label %assert_end51, label %assert_fail50, !dbg !3473, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %123(ptr nonnull @.str.915), !dbg !3473
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.shape, i64 4, !dbg !3473
  %125 = load i64, ptr %124, align 8, !dbg !3473, !tbaa !3550
  %126 = and i64 %125, 4294967295, !dbg !3473
  %127 = icmp eq i64 %126, 256, !dbg !3473
  br i1 %127, label %assert_end53, label %assert_fail52, !dbg !3473, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %128(ptr nonnull @.str.916), !dbg !3473
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %129 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.shape, i64 5, !dbg !3473
  %130 = load i64, ptr %129, align 8, !dbg !3473, !tbaa !3554
  %131 = and i64 %130, 4294967295, !dbg !3473
  %132 = icmp eq i64 %131, 64, !dbg !3473
  br i1 %132, label %assert_end55, label %assert_fail54, !dbg !3473, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %133 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %133(ptr nonnull @.str.917), !dbg !3473
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not149 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.strides, null, !dbg !3473
  br i1 %.not149, label %if_end57, label %if_then56, !dbg !3473, !prof !52

if_then56:                                        ; preds = %assert_end55
  %134 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.strides, align 8, !dbg !3473, !tbaa !3556
  %135 = and i64 %134, 4294967295, !dbg !3473
  %136 = icmp eq i64 %135, 16384, !dbg !3473
  %137 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.strides, i64 4, !dbg !3473
  %138 = load i64, ptr %137, align 8, !dbg !3473, !tbaa !3566
  %139 = and i64 %138, 4294967295, !dbg !3473
  %140 = icmp eq i64 %139, 64, !dbg !3473
  %141 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p1.strides, i64 5, !dbg !3473
  %142 = load i64, ptr %141, align 8, !dbg !3473, !tbaa !3570
  %143 = and i64 %142, 4294967295, !dbg !3473
  %144 = icmp eq i64 %143, 1, !dbg !3473
  %145 = and i1 %140, %144, !dbg !3473
  %146 = and i1 %136, %145, !dbg !3473
  br i1 %146, label %if_end57, label %assert_fail58, !dbg !3473, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %147 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3473
  %148 = load i64, ptr %147, align 8, !dbg !3473
  %149 = icmp eq i64 %148, 0, !dbg !3473
  br i1 %149, label %assert_end61, label %assert_fail60, !dbg !3473, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %150(ptr nonnull @.str.918), !dbg !3473
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %151 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %151(ptr nonnull @.str.919), !dbg !3473
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %152 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3473
  %153 = load i32, ptr %152, align 4, !dbg !3473
  %154 = icmp eq i32 %153, 1, !dbg !3473
  br i1 %154, label %assert_end63, label %assert_fail62, !dbg !3473, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %155(ptr nonnull @.str.920), !dbg !3473
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %156 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3473
  %157 = load i32, ptr %156, align 4, !dbg !3473
  %158 = icmp eq i32 %dev_id, %157, !dbg !3473
  br i1 %158, label %assert_end65, label %assert_fail64, !dbg !3473, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %159 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %159(ptr nonnull @.str.921), !dbg !3473
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %160 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3473
  %161 = load i32, ptr %160, align 4, !dbg !3473
  %162 = icmp eq i32 %161, 5, !dbg !3473
  br i1 %162, label %assert_end69, label %assert_fail66, !dbg !3473, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %163 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %163(ptr nonnull @.str.922), !dbg !3473
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %164 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3473
  %165 = load i16, ptr %164, align 2, !dbg !3473
  %166 = icmp eq i16 %165, 1, !dbg !3473
  %167 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3473
  %168 = load i8, ptr %167, align 1, !dbg !3473
  %169 = icmp eq i8 %168, 32, !dbg !3473
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3473
  %171 = load i8, ptr %170, align 1, !dbg !3473
  %172 = icmp eq i8 %171, 2, !dbg !3473
  %173 = and i1 %169, %172, !dbg !3473
  %174 = and i1 %166, %173, !dbg !3473
  br i1 %174, label %assert_end71, label %assert_fail70, !dbg !3473, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %175 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %175(ptr nonnull @.str.923), !dbg !3473
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %176 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.shape, align 8, !dbg !3473, !tbaa !3572
  %177 = and i64 %176, 4294967295, !dbg !3473
  %178 = icmp eq i64 %177, 1, !dbg !3473
  br i1 %178, label %assert_end73, label %assert_fail72, !dbg !3473, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %179(ptr nonnull @.str.924), !dbg !3473
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.shape, i64 1, !dbg !3473
  %181 = load i64, ptr %180, align 8, !dbg !3473, !tbaa !3582
  %182 = and i64 %181, 4294967295, !dbg !3473
  %183 = icmp eq i64 %182, 16, !dbg !3473
  br i1 %183, label %assert_end75, label %assert_fail74, !dbg !3473, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %184(ptr nonnull @.str.925), !dbg !3473
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %185 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.shape, i64 2, !dbg !3473
  %186 = load i64, ptr %185, align 8, !dbg !3473, !tbaa !3584
  %187 = and i64 %186, 4294967295, !dbg !3473
  %188 = icmp eq i64 %187, 1, !dbg !3473
  br i1 %188, label %assert_end77, label %assert_fail76, !dbg !3473, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %189(ptr nonnull @.str.926), !dbg !3473
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.shape, i64 3, !dbg !3473
  %191 = load i64, ptr %190, align 8, !dbg !3473, !tbaa !3587
  %192 = and i64 %191, 4294967295, !dbg !3473
  %193 = icmp eq i64 %192, 1, !dbg !3473
  br i1 %193, label %assert_end79, label %assert_fail78, !dbg !3473, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %194(ptr nonnull @.str.927), !dbg !3473
  br label %common.ret

assert_end79:                                     ; preds = %assert_end77
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.shape, i64 4, !dbg !3473
  %196 = load i64, ptr %195, align 8, !dbg !3473, !tbaa !3589
  %197 = and i64 %196, 4294967295, !dbg !3473
  %198 = icmp eq i64 %197, 64, !dbg !3473
  br i1 %198, label %assert_end81, label %assert_fail80, !dbg !3473, !prof !18

assert_fail80:                                    ; preds = %assert_end79
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %199(ptr nonnull @.str.928), !dbg !3473
  br label %common.ret

assert_end81:                                     ; preds = %assert_end79
  %.not150 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.strides, null, !dbg !3473
  br i1 %.not150, label %if_end83, label %if_then82, !dbg !3473, !prof !52

if_then82:                                        ; preds = %assert_end81
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.strides, i64 1, !dbg !3473
  %201 = load i64, ptr %200, align 8, !dbg !3473, !tbaa !3593
  %202 = and i64 %201, 4294967295, !dbg !3473
  %203 = icmp eq i64 %202, 64, !dbg !3473
  %204 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p2.strides, i64 4, !dbg !3473
  %205 = load i64, ptr %204, align 8, !dbg !3473, !tbaa !3603
  %206 = and i64 %205, 4294967295, !dbg !3473
  %207 = icmp eq i64 %206, 1, !dbg !3473
  %208 = and i1 %203, %207, !dbg !3473
  br i1 %208, label %if_end83, label %assert_fail84, !dbg !3473, !prof !18

if_end83:                                         ; preds = %if_then82, %assert_end81
  %209 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3473
  %210 = load i64, ptr %209, align 8, !dbg !3473
  %211 = icmp eq i64 %210, 0, !dbg !3473
  br i1 %211, label %assert_end87, label %assert_fail86, !dbg !3473, !prof !18

assert_fail84:                                    ; preds = %if_then82
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %212(ptr nonnull @.str.929), !dbg !3473
  br label %common.ret

assert_fail86:                                    ; preds = %if_end83
  %213 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %213(ptr nonnull @.str.930), !dbg !3473
  br label %common.ret

assert_end87:                                     ; preds = %if_end83
  %214 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3473
  %215 = load i32, ptr %214, align 4, !dbg !3473
  %216 = icmp eq i32 %215, 1, !dbg !3473
  br i1 %216, label %assert_end89, label %assert_fail88, !dbg !3473, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %217(ptr nonnull @.str.931), !dbg !3473
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %218 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3473
  %219 = load i32, ptr %218, align 4, !dbg !3473
  %220 = icmp eq i32 %dev_id, %219, !dbg !3473
  br i1 %220, label %assert_end91, label %assert_fail90, !dbg !3473, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %221 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %221(ptr nonnull @.str.932), !dbg !3473
  br label %common.ret

assert_end91:                                     ; preds = %assert_end89
  %222 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !3473
  %223 = load i32, ptr %222, align 4, !dbg !3473
  %224 = icmp eq i32 %223, 5, !dbg !3473
  br i1 %224, label %assert_end95, label %assert_fail92, !dbg !3473, !prof !18

assert_fail92:                                    ; preds = %assert_end91
  %225 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %225(ptr nonnull @.str.933), !dbg !3473
  br label %common.ret

assert_end95:                                     ; preds = %assert_end91
  %226 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !3473
  %227 = load i16, ptr %226, align 2, !dbg !3473
  %228 = icmp eq i16 %227, 1, !dbg !3473
  %229 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !3473
  %230 = load i8, ptr %229, align 1, !dbg !3473
  %231 = icmp eq i8 %230, 32, !dbg !3473
  %232 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !3473
  %233 = load i8, ptr %232, align 1, !dbg !3473
  %234 = icmp eq i8 %233, 2, !dbg !3473
  %235 = and i1 %231, %234, !dbg !3473
  %236 = and i1 %228, %235, !dbg !3473
  br i1 %236, label %assert_end97, label %assert_fail96, !dbg !3473, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %237 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %237(ptr nonnull @.str.934), !dbg !3473
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %238 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.shape, align 8, !dbg !3473, !tbaa !3607
  %239 = and i64 %238, 4294967295, !dbg !3473
  %240 = icmp eq i64 %239, 1, !dbg !3473
  br i1 %240, label %assert_end99, label %assert_fail98, !dbg !3473, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %241(ptr nonnull @.str.935), !dbg !3473
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.shape, i64 1, !dbg !3473
  %243 = load i64, ptr %242, align 8, !dbg !3473, !tbaa !3617
  %244 = and i64 %243, 4294967295, !dbg !3473
  %245 = icmp eq i64 %244, 16, !dbg !3473
  br i1 %245, label %assert_end101, label %assert_fail100, !dbg !3473, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %246(ptr nonnull @.str.936), !dbg !3473
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.shape, i64 2, !dbg !3473
  %248 = load i64, ptr %247, align 8, !dbg !3473, !tbaa !3619
  %249 = and i64 %248, 4294967295, !dbg !3473
  %250 = icmp eq i64 %249, 14, !dbg !3473
  br i1 %250, label %assert_end103, label %assert_fail102, !dbg !3473, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %251(ptr nonnull @.str.937), !dbg !3473
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.shape, i64 3, !dbg !3473
  %253 = load i64, ptr %252, align 8, !dbg !3473, !tbaa !3622
  %254 = and i64 %253, 4294967295, !dbg !3473
  %255 = icmp eq i64 %254, 14, !dbg !3473
  br i1 %255, label %assert_end105, label %assert_fail104, !dbg !3473, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %256(ptr nonnull @.str.938), !dbg !3473
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.shape, i64 4, !dbg !3473
  %258 = load i64, ptr %257, align 8, !dbg !3473, !tbaa !3624
  %259 = and i64 %258, 4294967295, !dbg !3473
  %260 = icmp eq i64 %259, 64, !dbg !3473
  br i1 %260, label %assert_end107, label %assert_fail106, !dbg !3473, !prof !18

assert_fail106:                                   ; preds = %assert_end105
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %261(ptr nonnull @.str.939), !dbg !3473
  br label %common.ret

assert_end107:                                    ; preds = %assert_end105
  %.not151 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.strides, null, !dbg !3473
  br i1 %.not151, label %if_end109, label %if_then108, !dbg !3473, !prof !52

if_then108:                                       ; preds = %assert_end107
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.strides, i64 1, !dbg !3473
  %263 = load i64, ptr %262, align 8, !dbg !3473, !tbaa !3628
  %264 = and i64 %263, 4294967295, !dbg !3473
  %265 = icmp eq i64 %264, 12544, !dbg !3473
  %266 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.strides, i64 2, !dbg !3473
  %267 = load i64, ptr %266, align 8, !dbg !3473, !tbaa !3638
  %268 = and i64 %267, 4294967295, !dbg !3473
  %269 = icmp eq i64 %268, 896, !dbg !3473
  %270 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.strides, i64 3, !dbg !3473
  %271 = load i64, ptr %270, align 8, !dbg !3473, !tbaa !3641
  %272 = and i64 %271, 4294967295, !dbg !3473
  %273 = icmp eq i64 %272, 64, !dbg !3473
  %274 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.p3.strides, i64 4, !dbg !3473
  %275 = load i64, ptr %274, align 8, !dbg !3473, !tbaa !3643
  %276 = and i64 %275, 4294967295, !dbg !3473
  %277 = icmp eq i64 %276, 1, !dbg !3473
  %278 = and i1 %273, %277, !dbg !3473
  %279 = and i1 %269, %278, !dbg !3473
  %280 = and i1 %265, %279, !dbg !3473
  br i1 %280, label %if_end109, label %assert_fail110, !dbg !3473, !prof !18

if_end109:                                        ; preds = %if_then108, %assert_end107
  %281 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !3473
  %282 = load i64, ptr %281, align 8, !dbg !3473
  %283 = icmp eq i64 %282, 0, !dbg !3473
  br i1 %283, label %assert_end113, label %assert_fail112, !dbg !3473, !prof !18

assert_fail110:                                   ; preds = %if_then108
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %284(ptr nonnull @.str.940), !dbg !3473
  br label %common.ret

assert_fail112:                                   ; preds = %if_end109
  %285 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %285(ptr nonnull @.str.941), !dbg !3473
  br label %common.ret

assert_end113:                                    ; preds = %if_end109
  %286 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !3473
  %287 = load i32, ptr %286, align 4, !dbg !3473
  %288 = icmp eq i32 %287, 1, !dbg !3473
  br i1 %288, label %assert_end115, label %assert_fail114, !dbg !3473, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %289(ptr nonnull @.str.942), !dbg !3473
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %290 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !3473
  %291 = load i32, ptr %290, align 4, !dbg !3473
  %292 = icmp eq i32 %dev_id, %291, !dbg !3473
  br i1 %292, label %assert_end117, label %assert_fail116, !dbg !3473, !prof !18

assert_fail116:                                   ; preds = %assert_end115
  %293 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %293(ptr nonnull @.str.943), !dbg !3473
  br label %common.ret

assert_end117:                                    ; preds = %assert_end115
  %294 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !3473
  %295 = load i32, ptr %294, align 4, !dbg !3473
  %296 = icmp eq i32 %295, 5, !dbg !3473
  br i1 %296, label %assert_end121, label %assert_fail118, !dbg !3473, !prof !18

assert_fail118:                                   ; preds = %assert_end117
  %297 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %297(ptr nonnull @.str.944), !dbg !3473
  br label %common.ret

assert_end121:                                    ; preds = %assert_end117
  %298 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !3473
  %299 = load i16, ptr %298, align 2, !dbg !3473
  %300 = icmp eq i16 %299, 1, !dbg !3473
  %301 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !3473
  %302 = load i8, ptr %301, align 1, !dbg !3473
  %303 = icmp eq i8 %302, 32, !dbg !3473
  %304 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !3473
  %305 = load i8, ptr %304, align 1, !dbg !3473
  %306 = icmp eq i8 %305, 2, !dbg !3473
  %307 = and i1 %303, %306, !dbg !3473
  %308 = and i1 %300, %307, !dbg !3473
  br i1 %308, label %assert_end123, label %assert_fail122, !dbg !3473, !prof !18

assert_fail122:                                   ; preds = %assert_end121
  %309 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %309(ptr nonnull @.str.945), !dbg !3473
  br label %common.ret

assert_end123:                                    ; preds = %assert_end121
  %310 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.shape, align 8, !dbg !3473, !tbaa !3647
  %311 = and i64 %310, 4294967295, !dbg !3473
  %312 = icmp eq i64 %311, 1, !dbg !3473
  br i1 %312, label %assert_end125, label %assert_fail124, !dbg !3473, !prof !18

assert_fail124:                                   ; preds = %assert_end123
  %313 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %313(ptr nonnull @.str.946), !dbg !3473
  br label %common.ret

assert_end125:                                    ; preds = %assert_end123
  %314 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.shape, i64 1, !dbg !3473
  %315 = load i64, ptr %314, align 8, !dbg !3473, !tbaa !3657
  %316 = and i64 %315, 4294967295, !dbg !3473
  %317 = icmp eq i64 %316, 16, !dbg !3473
  br i1 %317, label %assert_end127, label %assert_fail126, !dbg !3473, !prof !18

assert_fail126:                                   ; preds = %assert_end125
  %318 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %318(ptr nonnull @.str.947), !dbg !3473
  br label %common.ret

assert_end127:                                    ; preds = %assert_end125
  %319 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.shape, i64 2, !dbg !3473
  %320 = load i64, ptr %319, align 8, !dbg !3473, !tbaa !3659
  %321 = and i64 %320, 4294967295, !dbg !3473
  %322 = icmp eq i64 %321, 14, !dbg !3473
  br i1 %322, label %assert_end129, label %assert_fail128, !dbg !3473, !prof !18

assert_fail128:                                   ; preds = %assert_end127
  %323 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %323(ptr nonnull @.str.948), !dbg !3473
  br label %common.ret

assert_end129:                                    ; preds = %assert_end127
  %324 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.shape, i64 3, !dbg !3473
  %325 = load i64, ptr %324, align 8, !dbg !3473, !tbaa !3662
  %326 = and i64 %325, 4294967295, !dbg !3473
  %327 = icmp eq i64 %326, 14, !dbg !3473
  br i1 %327, label %assert_end131, label %assert_fail130, !dbg !3473, !prof !18

assert_fail130:                                   ; preds = %assert_end129
  %328 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %328(ptr nonnull @.str.949), !dbg !3473
  br label %common.ret

assert_end131:                                    ; preds = %assert_end129
  %329 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.shape, i64 4, !dbg !3473
  %330 = load i64, ptr %329, align 8, !dbg !3473, !tbaa !3664
  %331 = and i64 %330, 4294967295, !dbg !3473
  %332 = icmp eq i64 %331, 64, !dbg !3473
  br i1 %332, label %assert_end133, label %assert_fail132, !dbg !3473, !prof !18

assert_fail132:                                   ; preds = %assert_end131
  %333 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %333(ptr nonnull @.str.950), !dbg !3473
  br label %common.ret

assert_end133:                                    ; preds = %assert_end131
  %.not152 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.strides, null, !dbg !3473
  br i1 %.not152, label %if_end135, label %if_then134, !dbg !3473, !prof !52

if_then134:                                       ; preds = %assert_end133
  %334 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.strides, i64 1, !dbg !3473
  %335 = load i64, ptr %334, align 8, !dbg !3473, !tbaa !3668
  %336 = and i64 %335, 4294967295, !dbg !3473
  %337 = icmp eq i64 %336, 12544, !dbg !3473
  %338 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.strides, i64 2, !dbg !3473
  %339 = load i64, ptr %338, align 8, !dbg !3473, !tbaa !3678
  %340 = and i64 %339, 4294967295, !dbg !3473
  %341 = icmp eq i64 %340, 896, !dbg !3473
  %342 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.strides, i64 3, !dbg !3473
  %343 = load i64, ptr %342, align 8, !dbg !3473, !tbaa !3681
  %344 = and i64 %343, 4294967295, !dbg !3473
  %345 = icmp eq i64 %344, 64, !dbg !3473
  %346 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2.T_relu.strides, i64 4, !dbg !3473
  %347 = load i64, ptr %346, align 8, !dbg !3473, !tbaa !3683
  %348 = and i64 %347, 4294967295, !dbg !3473
  %349 = icmp eq i64 %348, 1, !dbg !3473
  %350 = and i1 %345, %349, !dbg !3473
  %351 = and i1 %341, %350, !dbg !3473
  %352 = and i1 %337, %351, !dbg !3473
  br i1 %352, label %if_end135, label %assert_fail136, !dbg !3473, !prof !18

if_end135:                                        ; preds = %if_then134, %assert_end133
  %353 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !3473
  %354 = load i64, ptr %353, align 8, !dbg !3473
  %355 = icmp eq i64 %354, 0, !dbg !3473
  br i1 %355, label %assert_end139, label %assert_fail138, !dbg !3473, !prof !18

assert_fail136:                                   ; preds = %if_then134
  %356 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %356(ptr nonnull @.str.951), !dbg !3473
  br label %common.ret

assert_fail138:                                   ; preds = %if_end135
  %357 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %357(ptr nonnull @.str.952), !dbg !3473
  br label %common.ret

assert_end139:                                    ; preds = %if_end135
  %358 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !3473
  %359 = load i32, ptr %358, align 4, !dbg !3473
  %360 = icmp eq i32 %359, 1, !dbg !3473
  br i1 %360, label %assert_end141, label %assert_fail140, !dbg !3473, !prof !18

assert_fail140:                                   ; preds = %assert_end139
  %361 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %361(ptr nonnull @.str.953), !dbg !3473
  br label %common.ret

assert_end141:                                    ; preds = %assert_end139
  %362 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !3473
  %363 = load i32, ptr %362, align 4, !dbg !3473
  %364 = icmp eq i32 %dev_id, %363, !dbg !3473
  br i1 %364, label %assert_end143, label %assert_fail142, !dbg !3473, !prof !18

assert_fail142:                                   ; preds = %assert_end141
  %365 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3473, !tbaa !19
  tail call void %365(ptr nonnull @.str.954), !dbg !3473
  br label %common.ret

assert_end143:                                    ; preds = %assert_end141
  %366 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_compute_(i32 %dev_id, ptr %p0144, ptr %p1145, ptr %T_relu146, ptr %p2147, ptr %p3148), !dbg !3473
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3687 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3689, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3690, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3691, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3692, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3693, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3694, metadata !DIExpression()), !dbg !3695
  %0 = icmp eq i32 %num_args, 5, !dbg !3695
  br i1 %0, label %assert_end, label %assert_fail, !dbg !3695, !prof !18

common.ret:                                       ; preds = %assert_end143, %assert_fail142, %assert_fail140, %assert_fail138, %assert_fail136, %assert_fail132, %assert_fail130, %assert_fail128, %assert_fail126, %assert_fail124, %assert_fail122, %assert_fail118, %assert_fail116, %assert_fail114, %assert_fail112, %assert_fail110, %assert_fail106, %assert_fail104, %assert_fail102, %assert_fail100, %assert_fail98, %assert_fail96, %assert_fail92, %assert_fail90, %assert_fail88, %assert_fail86, %assert_fail84, %assert_fail80, %assert_fail78, %assert_fail76, %assert_fail74, %assert_fail72, %assert_fail70, %assert_fail66, %assert_fail64, %assert_fail62, %assert_fail60, %assert_fail58, %assert_fail54, %assert_fail52, %assert_fail50, %assert_fail48, %assert_fail46, %assert_fail44, %assert_fail42, %assert_fail38, %assert_fail36, %assert_fail34, %assert_fail32, %assert_fail30, %assert_fail28, %assert_fail26, %assert_fail24, %assert_fail22, %assert_fail20, %assert_fail16, %assert_fail14, %assert_fail12, %assert_fail10, %assert_fail8, %assert_fail6, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail6 ], [ -1, %assert_fail8 ], [ -1, %assert_fail10 ], [ -1, %assert_fail12 ], [ -1, %assert_fail14 ], [ -1, %assert_fail16 ], [ -1, %assert_fail20 ], [ -1, %assert_fail22 ], [ -1, %assert_fail24 ], [ -1, %assert_fail26 ], [ -1, %assert_fail28 ], [ -1, %assert_fail30 ], [ -1, %assert_fail32 ], [ -1, %assert_fail34 ], [ -1, %assert_fail36 ], [ -1, %assert_fail38 ], [ -1, %assert_fail42 ], [ -1, %assert_fail44 ], [ -1, %assert_fail46 ], [ -1, %assert_fail48 ], [ -1, %assert_fail50 ], [ -1, %assert_fail52 ], [ -1, %assert_fail54 ], [ -1, %assert_fail58 ], [ -1, %assert_fail60 ], [ -1, %assert_fail62 ], [ -1, %assert_fail64 ], [ -1, %assert_fail66 ], [ -1, %assert_fail70 ], [ -1, %assert_fail72 ], [ -1, %assert_fail74 ], [ -1, %assert_fail76 ], [ -1, %assert_fail78 ], [ -1, %assert_fail80 ], [ -1, %assert_fail84 ], [ -1, %assert_fail86 ], [ -1, %assert_fail88 ], [ -1, %assert_fail90 ], [ -1, %assert_fail92 ], [ -1, %assert_fail96 ], [ -1, %assert_fail98 ], [ -1, %assert_fail100 ], [ -1, %assert_fail102 ], [ -1, %assert_fail104 ], [ -1, %assert_fail106 ], [ -1, %assert_fail110 ], [ -1, %assert_fail112 ], [ -1, %assert_fail114 ], [ -1, %assert_fail116 ], [ -1, %assert_fail118 ], [ -1, %assert_fail122 ], [ -1, %assert_fail124 ], [ -1, %assert_fail126 ], [ -1, %assert_fail128 ], [ -1, %assert_fail130 ], [ -1, %assert_fail132 ], [ -1, %assert_fail136 ], [ -1, %assert_fail138 ], [ -1, %assert_fail140 ], [ -1, %assert_fail142 ], [ %376, %assert_end143 ]
  ret i32 %common.ret.op, !dbg !3695

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %1(ptr nonnull @.str.956), !dbg !3695
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3695, !tbaa !3696
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3695
  %p1.code = load i32, ptr %2, align 4, !dbg !3695, !tbaa !3707
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3695
  %p2.code = load i32, ptr %3, align 4, !dbg !3695, !tbaa !3709
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3695
  %p3.code = load i32, ptr %4, align 4, !dbg !3695, !tbaa !3712
  %5 = getelementptr inbounds i32, ptr %arg_type_ids, i64 4, !dbg !3695
  %T_relu.code = load i32, ptr %5, align 4, !dbg !3695, !tbaa !3714
  %p0 = load ptr, ptr %args, align 8, !dbg !3695
  %6 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3695
  %p1 = load ptr, ptr %6, align 8, !dbg !3695
  %7 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3695
  %p2 = load ptr, ptr %7, align 8, !dbg !3695
  %8 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3695
  %p3 = load ptr, ptr %8, align 8, !dbg !3695
  %9 = getelementptr inbounds %0, ptr %args, i64 4, !dbg !3695
  %T_relu = load ptr, ptr %9, align 8, !dbg !3695
  %p0144 = load ptr, ptr %p0, align 8, !dbg !3695
  call void @llvm.assume(i1 true) [ "align"(ptr %p0144, i64 64) ], !dbg !3695
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3695
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.shape = load ptr, ptr %10, align 8, !dbg !3695
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3695
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.strides = load ptr, ptr %11, align 8, !dbg !3695
  %12 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3695
  %dev_id = load i32, ptr %12, align 4, !dbg !3695
  %p1145 = load ptr, ptr %p1, align 8, !dbg !3695
  call void @llvm.assume(i1 true) [ "align"(ptr %p1145, i64 64) ], !dbg !3695
  %13 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3695
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.shape = load ptr, ptr %13, align 8, !dbg !3695
  %14 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3695
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.strides = load ptr, ptr %14, align 8, !dbg !3695
  %p2147 = load ptr, ptr %p2, align 8, !dbg !3695
  call void @llvm.assume(i1 true) [ "align"(ptr %p2147, i64 64) ], !dbg !3695
  %15 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3695
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.shape = load ptr, ptr %15, align 8, !dbg !3695
  %16 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3695
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.strides = load ptr, ptr %16, align 8, !dbg !3695
  %p3148 = load ptr, ptr %p3, align 8, !dbg !3695
  call void @llvm.assume(i1 true) [ "align"(ptr %p3148, i64 64) ], !dbg !3695
  %17 = getelementptr inbounds %1, ptr %p3, i64 0, i32 4, !dbg !3695
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.shape = load ptr, ptr %17, align 8, !dbg !3695
  %18 = getelementptr inbounds %1, ptr %p3, i64 0, i32 5, !dbg !3695
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.strides = load ptr, ptr %18, align 8, !dbg !3695
  %T_relu146 = load ptr, ptr %T_relu, align 8, !dbg !3695
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu146, i64 64) ], !dbg !3695
  %19 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !3695
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.shape = load ptr, ptr %19, align 8, !dbg !3695
  %20 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !3695
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.strides = load ptr, ptr %20, align 8, !dbg !3695
  switch i32 %p0.code, label %assert_fail6 [
    i32 13, label %assert_end7
    i32 7, label %assert_end7
    i32 4, label %assert_end7
    i32 3, label %assert_end7
  ], !dbg !3695

assert_fail6:                                     ; preds = %assert_end
  %21 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %21(ptr nonnull @.str.957), !dbg !3695
  br label %common.ret

assert_end7:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail8 [
    i32 13, label %assert_end9
    i32 7, label %assert_end9
    i32 4, label %assert_end9
    i32 3, label %assert_end9
  ], !dbg !3695

assert_fail8:                                     ; preds = %assert_end7
  %22 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %22(ptr nonnull @.str.958), !dbg !3695
  br label %common.ret

assert_end9:                                      ; preds = %assert_end7, %assert_end7, %assert_end7, %assert_end7
  switch i32 %p2.code, label %assert_fail10 [
    i32 13, label %assert_end11
    i32 7, label %assert_end11
    i32 4, label %assert_end11
    i32 3, label %assert_end11
  ], !dbg !3695

assert_fail10:                                    ; preds = %assert_end9
  %23 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %23(ptr nonnull @.str.959), !dbg !3695
  br label %common.ret

assert_end11:                                     ; preds = %assert_end9, %assert_end9, %assert_end9, %assert_end9
  switch i32 %p3.code, label %assert_fail12 [
    i32 13, label %assert_end13
    i32 7, label %assert_end13
    i32 4, label %assert_end13
    i32 3, label %assert_end13
  ], !dbg !3695

assert_fail12:                                    ; preds = %assert_end11
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %24(ptr nonnull @.str.960), !dbg !3695
  br label %common.ret

assert_end13:                                     ; preds = %assert_end11, %assert_end11, %assert_end11, %assert_end11
  switch i32 %T_relu.code, label %assert_fail14 [
    i32 13, label %assert_end15
    i32 7, label %assert_end15
    i32 4, label %assert_end15
    i32 3, label %assert_end15
  ], !dbg !3695

assert_fail14:                                    ; preds = %assert_end13
  %25 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %25(ptr nonnull @.str.961), !dbg !3695
  br label %common.ret

assert_end15:                                     ; preds = %assert_end13, %assert_end13, %assert_end13, %assert_end13
  %26 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3695
  %27 = load i32, ptr %26, align 4, !dbg !3695
  %28 = icmp eq i32 %27, 5, !dbg !3695
  br i1 %28, label %assert_end19, label %assert_fail16, !dbg !3695, !prof !18

assert_fail16:                                    ; preds = %assert_end15
  %29 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %29(ptr nonnull @.str.962), !dbg !3695
  br label %common.ret

assert_end19:                                     ; preds = %assert_end15
  %30 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3695
  %31 = load i16, ptr %30, align 2, !dbg !3695
  %32 = icmp eq i16 %31, 1, !dbg !3695
  %33 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3695
  %34 = load i8, ptr %33, align 1, !dbg !3695
  %35 = icmp eq i8 %34, 32, !dbg !3695
  %36 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3695
  %37 = load i8, ptr %36, align 1, !dbg !3695
  %38 = icmp eq i8 %37, 2, !dbg !3695
  %39 = and i1 %35, %38, !dbg !3695
  %40 = and i1 %32, %39, !dbg !3695
  br i1 %40, label %assert_end21, label %assert_fail20, !dbg !3695, !prof !18

assert_fail20:                                    ; preds = %assert_end19
  %41 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %41(ptr nonnull @.str.963), !dbg !3695
  br label %common.ret

assert_end21:                                     ; preds = %assert_end19
  %42 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.shape, align 8, !dbg !3695, !tbaa !3718
  %43 = and i64 %42, 4294967295, !dbg !3695
  %44 = icmp eq i64 %43, 1, !dbg !3695
  br i1 %44, label %assert_end23, label %assert_fail22, !dbg !3695, !prof !18

assert_fail22:                                    ; preds = %assert_end21
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %45(ptr nonnull @.str.964), !dbg !3695
  br label %common.ret

assert_end23:                                     ; preds = %assert_end21
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.shape, i64 1, !dbg !3695
  %47 = load i64, ptr %46, align 8, !dbg !3695, !tbaa !3728
  %48 = and i64 %47, 4294967295, !dbg !3695
  %49 = icmp eq i64 %48, 128, !dbg !3695
  br i1 %49, label %assert_end25, label %assert_fail24, !dbg !3695, !prof !18

assert_fail24:                                    ; preds = %assert_end23
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %50(ptr nonnull @.str.965), !dbg !3695
  br label %common.ret

assert_end25:                                     ; preds = %assert_end23
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.shape, i64 2, !dbg !3695
  %52 = load i64, ptr %51, align 8, !dbg !3695, !tbaa !3730
  %53 = and i64 %52, 4294967295, !dbg !3695
  %54 = icmp eq i64 %53, 7, !dbg !3695
  br i1 %54, label %assert_end27, label %assert_fail26, !dbg !3695, !prof !18

assert_fail26:                                    ; preds = %assert_end25
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %55(ptr nonnull @.str.966), !dbg !3695
  br label %common.ret

assert_end27:                                     ; preds = %assert_end25
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.shape, i64 3, !dbg !3695
  %57 = load i64, ptr %56, align 8, !dbg !3695, !tbaa !3733
  %58 = and i64 %57, 4294967295, !dbg !3695
  %59 = icmp eq i64 %58, 7, !dbg !3695
  br i1 %59, label %assert_end29, label %assert_fail28, !dbg !3695, !prof !18

assert_fail28:                                    ; preds = %assert_end27
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %60(ptr nonnull @.str.967), !dbg !3695
  br label %common.ret

assert_end29:                                     ; preds = %assert_end27
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.shape, i64 4, !dbg !3695
  %62 = load i64, ptr %61, align 8, !dbg !3695, !tbaa !3735
  %63 = and i64 %62, 4294967295, !dbg !3695
  %64 = icmp eq i64 %63, 4, !dbg !3695
  br i1 %64, label %assert_end31, label %assert_fail30, !dbg !3695, !prof !18

assert_fail30:                                    ; preds = %assert_end29
  %65 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %65(ptr nonnull @.str.968), !dbg !3695
  br label %common.ret

assert_end31:                                     ; preds = %assert_end29
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.strides, null, !dbg !3695
  br i1 %.not, label %if_end, label %if_then, !dbg !3695, !prof !52

if_then:                                          ; preds = %assert_end31
  %66 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.strides, i64 1, !dbg !3695
  %67 = load i64, ptr %66, align 8, !dbg !3695, !tbaa !3739
  %68 = and i64 %67, 4294967295, !dbg !3695
  %69 = icmp eq i64 %68, 196, !dbg !3695
  %70 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.strides, i64 2, !dbg !3695
  %71 = load i64, ptr %70, align 8, !dbg !3695, !tbaa !3749
  %72 = and i64 %71, 4294967295, !dbg !3695
  %73 = icmp eq i64 %72, 28, !dbg !3695
  %74 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.strides, i64 3, !dbg !3695
  %75 = load i64, ptr %74, align 8, !dbg !3695, !tbaa !3752
  %76 = and i64 %75, 4294967295, !dbg !3695
  %77 = icmp eq i64 %76, 4, !dbg !3695
  %78 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p0.strides, i64 4, !dbg !3695
  %79 = load i64, ptr %78, align 8, !dbg !3695, !tbaa !3754
  %80 = and i64 %79, 4294967295, !dbg !3695
  %81 = icmp eq i64 %80, 1, !dbg !3695
  %82 = and i1 %77, %81, !dbg !3695
  %83 = and i1 %73, %82, !dbg !3695
  %84 = and i1 %69, %83, !dbg !3695
  br i1 %84, label %if_end, label %assert_fail32, !dbg !3695, !prof !18

if_end:                                           ; preds = %if_then, %assert_end31
  %85 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3695
  %86 = load i64, ptr %85, align 8, !dbg !3695
  %87 = icmp eq i64 %86, 0, !dbg !3695
  br i1 %87, label %assert_end35, label %assert_fail34, !dbg !3695, !prof !18

assert_fail32:                                    ; preds = %if_then
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %88(ptr nonnull @.str.969), !dbg !3695
  br label %common.ret

assert_fail34:                                    ; preds = %if_end
  %89 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %89(ptr nonnull @.str.970), !dbg !3695
  br label %common.ret

assert_end35:                                     ; preds = %if_end
  %90 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3695
  %91 = load i32, ptr %90, align 4, !dbg !3695
  %92 = icmp eq i32 %91, 1, !dbg !3695
  br i1 %92, label %assert_end37, label %assert_fail36, !dbg !3695, !prof !18

assert_fail36:                                    ; preds = %assert_end35
  %93 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %93(ptr nonnull @.str.971), !dbg !3695
  br label %common.ret

assert_end37:                                     ; preds = %assert_end35
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3695
  %95 = load i32, ptr %94, align 4, !dbg !3695
  %96 = icmp eq i32 %95, 6, !dbg !3695
  br i1 %96, label %assert_end41, label %assert_fail38, !dbg !3695, !prof !18

assert_fail38:                                    ; preds = %assert_end37
  %97 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %97(ptr nonnull @.str.972), !dbg !3695
  br label %common.ret

assert_end41:                                     ; preds = %assert_end37
  %98 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3695
  %99 = load i16, ptr %98, align 2, !dbg !3695
  %100 = icmp eq i16 %99, 1, !dbg !3695
  %101 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3695
  %102 = load i8, ptr %101, align 1, !dbg !3695
  %103 = icmp eq i8 %102, 32, !dbg !3695
  %104 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3695
  %105 = load i8, ptr %104, align 1, !dbg !3695
  %106 = icmp eq i8 %105, 2, !dbg !3695
  %107 = and i1 %103, %106, !dbg !3695
  %108 = and i1 %100, %107, !dbg !3695
  br i1 %108, label %assert_end43, label %assert_fail42, !dbg !3695, !prof !18

assert_fail42:                                    ; preds = %assert_end41
  %109 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %109(ptr nonnull @.str.973), !dbg !3695
  br label %common.ret

assert_end43:                                     ; preds = %assert_end41
  %110 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.shape, align 8, !dbg !3695, !tbaa !3758
  %111 = and i64 %110, 4294967295, !dbg !3695
  %112 = icmp eq i64 %111, 64, !dbg !3695
  br i1 %112, label %assert_end45, label %assert_fail44, !dbg !3695, !prof !18

assert_fail44:                                    ; preds = %assert_end43
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %113(ptr nonnull @.str.974), !dbg !3695
  br label %common.ret

assert_end45:                                     ; preds = %assert_end43
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.shape, i64 1, !dbg !3695
  %115 = load i64, ptr %114, align 8, !dbg !3695, !tbaa !3768
  %116 = and i64 %115, 4294967295, !dbg !3695
  %117 = icmp eq i64 %116, 128, !dbg !3695
  br i1 %117, label %assert_end47, label %assert_fail46, !dbg !3695, !prof !18

assert_fail46:                                    ; preds = %assert_end45
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %118(ptr nonnull @.str.975), !dbg !3695
  br label %common.ret

assert_end47:                                     ; preds = %assert_end45
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.shape, i64 2, !dbg !3695
  %120 = load i64, ptr %119, align 8, !dbg !3695, !tbaa !3770
  %121 = and i64 %120, 4294967295, !dbg !3695
  %122 = icmp eq i64 %121, 1, !dbg !3695
  br i1 %122, label %assert_end49, label %assert_fail48, !dbg !3695, !prof !18

assert_fail48:                                    ; preds = %assert_end47
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %123(ptr nonnull @.str.976), !dbg !3695
  br label %common.ret

assert_end49:                                     ; preds = %assert_end47
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.shape, i64 3, !dbg !3695
  %125 = load i64, ptr %124, align 8, !dbg !3695, !tbaa !3773
  %126 = and i64 %125, 4294967295, !dbg !3695
  %127 = icmp eq i64 %126, 1, !dbg !3695
  br i1 %127, label %assert_end51, label %assert_fail50, !dbg !3695, !prof !18

assert_fail50:                                    ; preds = %assert_end49
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %128(ptr nonnull @.str.977), !dbg !3695
  br label %common.ret

assert_end51:                                     ; preds = %assert_end49
  %129 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.shape, i64 4, !dbg !3695
  %130 = load i64, ptr %129, align 8, !dbg !3695, !tbaa !3775
  %131 = and i64 %130, 4294967295, !dbg !3695
  %132 = icmp eq i64 %131, 4, !dbg !3695
  br i1 %132, label %assert_end53, label %assert_fail52, !dbg !3695, !prof !18

assert_fail52:                                    ; preds = %assert_end51
  %133 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %133(ptr nonnull @.str.978), !dbg !3695
  br label %common.ret

assert_end53:                                     ; preds = %assert_end51
  %134 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.shape, i64 5, !dbg !3695
  %135 = load i64, ptr %134, align 8, !dbg !3695, !tbaa !3779
  %136 = and i64 %135, 4294967295, !dbg !3695
  %137 = icmp eq i64 %136, 32, !dbg !3695
  br i1 %137, label %assert_end55, label %assert_fail54, !dbg !3695, !prof !18

assert_fail54:                                    ; preds = %assert_end53
  %138 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %138(ptr nonnull @.str.979), !dbg !3695
  br label %common.ret

assert_end55:                                     ; preds = %assert_end53
  %.not149 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.strides, null, !dbg !3695
  br i1 %.not149, label %if_end57, label %if_then56, !dbg !3695, !prof !52

if_then56:                                        ; preds = %assert_end55
  %139 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.strides, align 8, !dbg !3695, !tbaa !3781
  %140 = and i64 %139, 4294967295, !dbg !3695
  %141 = icmp eq i64 %140, 16384, !dbg !3695
  %142 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.strides, i64 1, !dbg !3695
  %143 = load i64, ptr %142, align 8, !dbg !3695, !tbaa !3791
  %144 = and i64 %143, 4294967295, !dbg !3695
  %145 = icmp eq i64 %144, 128, !dbg !3695
  %146 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.strides, i64 4, !dbg !3695
  %147 = load i64, ptr %146, align 8, !dbg !3695, !tbaa !3793
  %148 = and i64 %147, 4294967295, !dbg !3695
  %149 = icmp eq i64 %148, 32, !dbg !3695
  %150 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p1.strides, i64 5, !dbg !3695
  %151 = load i64, ptr %150, align 8, !dbg !3695, !tbaa !3797
  %152 = and i64 %151, 4294967295, !dbg !3695
  %153 = icmp eq i64 %152, 1, !dbg !3695
  %154 = and i1 %149, %153, !dbg !3695
  %155 = and i1 %145, %154, !dbg !3695
  %156 = and i1 %141, %155, !dbg !3695
  br i1 %156, label %if_end57, label %assert_fail58, !dbg !3695, !prof !18

if_end57:                                         ; preds = %if_then56, %assert_end55
  %157 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3695
  %158 = load i64, ptr %157, align 8, !dbg !3695
  %159 = icmp eq i64 %158, 0, !dbg !3695
  br i1 %159, label %assert_end61, label %assert_fail60, !dbg !3695, !prof !18

assert_fail58:                                    ; preds = %if_then56
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %160(ptr nonnull @.str.980), !dbg !3695
  br label %common.ret

assert_fail60:                                    ; preds = %if_end57
  %161 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %161(ptr nonnull @.str.981), !dbg !3695
  br label %common.ret

assert_end61:                                     ; preds = %if_end57
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3695
  %163 = load i32, ptr %162, align 4, !dbg !3695
  %164 = icmp eq i32 %163, 1, !dbg !3695
  br i1 %164, label %assert_end63, label %assert_fail62, !dbg !3695, !prof !18

assert_fail62:                                    ; preds = %assert_end61
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %165(ptr nonnull @.str.982), !dbg !3695
  br label %common.ret

assert_end63:                                     ; preds = %assert_end61
  %166 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3695
  %167 = load i32, ptr %166, align 4, !dbg !3695
  %168 = icmp eq i32 %dev_id, %167, !dbg !3695
  br i1 %168, label %assert_end65, label %assert_fail64, !dbg !3695, !prof !18

assert_fail64:                                    ; preds = %assert_end63
  %169 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %169(ptr nonnull @.str.983), !dbg !3695
  br label %common.ret

assert_end65:                                     ; preds = %assert_end63
  %170 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3695
  %171 = load i32, ptr %170, align 4, !dbg !3695
  %172 = icmp eq i32 %171, 5, !dbg !3695
  br i1 %172, label %assert_end69, label %assert_fail66, !dbg !3695, !prof !18

assert_fail66:                                    ; preds = %assert_end65
  %173 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %173(ptr nonnull @.str.984), !dbg !3695
  br label %common.ret

assert_end69:                                     ; preds = %assert_end65
  %174 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3695
  %175 = load i16, ptr %174, align 2, !dbg !3695
  %176 = icmp eq i16 %175, 1, !dbg !3695
  %177 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3695
  %178 = load i8, ptr %177, align 1, !dbg !3695
  %179 = icmp eq i8 %178, 32, !dbg !3695
  %180 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3695
  %181 = load i8, ptr %180, align 1, !dbg !3695
  %182 = icmp eq i8 %181, 2, !dbg !3695
  %183 = and i1 %179, %182, !dbg !3695
  %184 = and i1 %176, %183, !dbg !3695
  br i1 %184, label %assert_end71, label %assert_fail70, !dbg !3695, !prof !18

assert_fail70:                                    ; preds = %assert_end69
  %185 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %185(ptr nonnull @.str.985), !dbg !3695
  br label %common.ret

assert_end71:                                     ; preds = %assert_end69
  %186 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.shape, align 8, !dbg !3695, !tbaa !3799
  %187 = and i64 %186, 4294967295, !dbg !3695
  %188 = icmp eq i64 %187, 1, !dbg !3695
  br i1 %188, label %assert_end73, label %assert_fail72, !dbg !3695, !prof !18

assert_fail72:                                    ; preds = %assert_end71
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %189(ptr nonnull @.str.986), !dbg !3695
  br label %common.ret

assert_end73:                                     ; preds = %assert_end71
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.shape, i64 1, !dbg !3695
  %191 = load i64, ptr %190, align 8, !dbg !3695, !tbaa !3809
  %192 = and i64 %191, 4294967295, !dbg !3695
  %193 = icmp eq i64 %192, 64, !dbg !3695
  br i1 %193, label %assert_end75, label %assert_fail74, !dbg !3695, !prof !18

assert_fail74:                                    ; preds = %assert_end73
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %194(ptr nonnull @.str.987), !dbg !3695
  br label %common.ret

assert_end75:                                     ; preds = %assert_end73
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.shape, i64 2, !dbg !3695
  %196 = load i64, ptr %195, align 8, !dbg !3695, !tbaa !3811
  %197 = and i64 %196, 4294967295, !dbg !3695
  %198 = icmp eq i64 %197, 1, !dbg !3695
  br i1 %198, label %assert_end77, label %assert_fail76, !dbg !3695, !prof !18

assert_fail76:                                    ; preds = %assert_end75
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %199(ptr nonnull @.str.988), !dbg !3695
  br label %common.ret

assert_end77:                                     ; preds = %assert_end75
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.shape, i64 3, !dbg !3695
  %201 = load i64, ptr %200, align 8, !dbg !3695, !tbaa !3814
  %202 = and i64 %201, 4294967295, !dbg !3695
  %203 = icmp eq i64 %202, 1, !dbg !3695
  br i1 %203, label %assert_end79, label %assert_fail78, !dbg !3695, !prof !18

assert_fail78:                                    ; preds = %assert_end77
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %204(ptr nonnull @.str.989), !dbg !3695
  br label %common.ret

assert_end79:                                     ; preds = %assert_end77
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.shape, i64 4, !dbg !3695
  %206 = load i64, ptr %205, align 8, !dbg !3695, !tbaa !3816
  %207 = and i64 %206, 4294967295, !dbg !3695
  %208 = icmp eq i64 %207, 32, !dbg !3695
  br i1 %208, label %assert_end81, label %assert_fail80, !dbg !3695, !prof !18

assert_fail80:                                    ; preds = %assert_end79
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %209(ptr nonnull @.str.990), !dbg !3695
  br label %common.ret

assert_end81:                                     ; preds = %assert_end79
  %.not150 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.strides, null, !dbg !3695
  br i1 %.not150, label %if_end83, label %if_then82, !dbg !3695, !prof !52

if_then82:                                        ; preds = %assert_end81
  %210 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.strides, i64 1, !dbg !3695
  %211 = load i64, ptr %210, align 8, !dbg !3695, !tbaa !3820
  %212 = and i64 %211, 4294967295, !dbg !3695
  %213 = icmp eq i64 %212, 32, !dbg !3695
  %214 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p2.strides, i64 4, !dbg !3695
  %215 = load i64, ptr %214, align 8, !dbg !3695, !tbaa !3830
  %216 = and i64 %215, 4294967295, !dbg !3695
  %217 = icmp eq i64 %216, 1, !dbg !3695
  %218 = and i1 %213, %217, !dbg !3695
  br i1 %218, label %if_end83, label %assert_fail84, !dbg !3695, !prof !18

if_end83:                                         ; preds = %if_then82, %assert_end81
  %219 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3695
  %220 = load i64, ptr %219, align 8, !dbg !3695
  %221 = icmp eq i64 %220, 0, !dbg !3695
  br i1 %221, label %assert_end87, label %assert_fail86, !dbg !3695, !prof !18

assert_fail84:                                    ; preds = %if_then82
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %222(ptr nonnull @.str.991), !dbg !3695
  br label %common.ret

assert_fail86:                                    ; preds = %if_end83
  %223 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %223(ptr nonnull @.str.992), !dbg !3695
  br label %common.ret

assert_end87:                                     ; preds = %if_end83
  %224 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3695
  %225 = load i32, ptr %224, align 4, !dbg !3695
  %226 = icmp eq i32 %225, 1, !dbg !3695
  br i1 %226, label %assert_end89, label %assert_fail88, !dbg !3695, !prof !18

assert_fail88:                                    ; preds = %assert_end87
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %227(ptr nonnull @.str.993), !dbg !3695
  br label %common.ret

assert_end89:                                     ; preds = %assert_end87
  %228 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3695
  %229 = load i32, ptr %228, align 4, !dbg !3695
  %230 = icmp eq i32 %dev_id, %229, !dbg !3695
  br i1 %230, label %assert_end91, label %assert_fail90, !dbg !3695, !prof !18

assert_fail90:                                    ; preds = %assert_end89
  %231 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %231(ptr nonnull @.str.994), !dbg !3695
  br label %common.ret

assert_end91:                                     ; preds = %assert_end89
  %232 = getelementptr inbounds %1, ptr %p3, i64 0, i32 2, !dbg !3695
  %233 = load i32, ptr %232, align 4, !dbg !3695
  %234 = icmp eq i32 %233, 5, !dbg !3695
  br i1 %234, label %assert_end95, label %assert_fail92, !dbg !3695, !prof !18

assert_fail92:                                    ; preds = %assert_end91
  %235 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %235(ptr nonnull @.str.995), !dbg !3695
  br label %common.ret

assert_end95:                                     ; preds = %assert_end91
  %236 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 2, !dbg !3695
  %237 = load i16, ptr %236, align 2, !dbg !3695
  %238 = icmp eq i16 %237, 1, !dbg !3695
  %239 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 1, !dbg !3695
  %240 = load i8, ptr %239, align 1, !dbg !3695
  %241 = icmp eq i8 %240, 32, !dbg !3695
  %242 = getelementptr inbounds %1, ptr %p3, i64 0, i32 3, i32 0, !dbg !3695
  %243 = load i8, ptr %242, align 1, !dbg !3695
  %244 = icmp eq i8 %243, 2, !dbg !3695
  %245 = and i1 %241, %244, !dbg !3695
  %246 = and i1 %238, %245, !dbg !3695
  br i1 %246, label %assert_end97, label %assert_fail96, !dbg !3695, !prof !18

assert_fail96:                                    ; preds = %assert_end95
  %247 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %247(ptr nonnull @.str.996), !dbg !3695
  br label %common.ret

assert_end97:                                     ; preds = %assert_end95
  %248 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.shape, align 8, !dbg !3695, !tbaa !3834
  %249 = and i64 %248, 4294967295, !dbg !3695
  %250 = icmp eq i64 %249, 1, !dbg !3695
  br i1 %250, label %assert_end99, label %assert_fail98, !dbg !3695, !prof !18

assert_fail98:                                    ; preds = %assert_end97
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %251(ptr nonnull @.str.997), !dbg !3695
  br label %common.ret

assert_end99:                                     ; preds = %assert_end97
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.shape, i64 1, !dbg !3695
  %253 = load i64, ptr %252, align 8, !dbg !3695, !tbaa !3844
  %254 = and i64 %253, 4294967295, !dbg !3695
  %255 = icmp eq i64 %254, 64, !dbg !3695
  br i1 %255, label %assert_end101, label %assert_fail100, !dbg !3695, !prof !18

assert_fail100:                                   ; preds = %assert_end99
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %256(ptr nonnull @.str.998), !dbg !3695
  br label %common.ret

assert_end101:                                    ; preds = %assert_end99
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.shape, i64 2, !dbg !3695
  %258 = load i64, ptr %257, align 8, !dbg !3695, !tbaa !3846
  %259 = and i64 %258, 4294967295, !dbg !3695
  %260 = icmp eq i64 %259, 7, !dbg !3695
  br i1 %260, label %assert_end103, label %assert_fail102, !dbg !3695, !prof !18

assert_fail102:                                   ; preds = %assert_end101
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %261(ptr nonnull @.str.999), !dbg !3695
  br label %common.ret

assert_end103:                                    ; preds = %assert_end101
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.shape, i64 3, !dbg !3695
  %263 = load i64, ptr %262, align 8, !dbg !3695, !tbaa !3849
  %264 = and i64 %263, 4294967295, !dbg !3695
  %265 = icmp eq i64 %264, 7, !dbg !3695
  br i1 %265, label %assert_end105, label %assert_fail104, !dbg !3695, !prof !18

assert_fail104:                                   ; preds = %assert_end103
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %266(ptr nonnull @.str.1000), !dbg !3695
  br label %common.ret

assert_end105:                                    ; preds = %assert_end103
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.shape, i64 4, !dbg !3695
  %268 = load i64, ptr %267, align 8, !dbg !3695, !tbaa !3851
  %269 = and i64 %268, 4294967295, !dbg !3695
  %270 = icmp eq i64 %269, 32, !dbg !3695
  br i1 %270, label %assert_end107, label %assert_fail106, !dbg !3695, !prof !18

assert_fail106:                                   ; preds = %assert_end105
  %271 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %271(ptr nonnull @.str.1001), !dbg !3695
  br label %common.ret

assert_end107:                                    ; preds = %assert_end105
  %.not151 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.strides, null, !dbg !3695
  br i1 %.not151, label %if_end109, label %if_then108, !dbg !3695, !prof !52

if_then108:                                       ; preds = %assert_end107
  %272 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.strides, i64 1, !dbg !3695
  %273 = load i64, ptr %272, align 8, !dbg !3695, !tbaa !3855
  %274 = and i64 %273, 4294967295, !dbg !3695
  %275 = icmp eq i64 %274, 1568, !dbg !3695
  %276 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.strides, i64 2, !dbg !3695
  %277 = load i64, ptr %276, align 8, !dbg !3695, !tbaa !3865
  %278 = and i64 %277, 4294967295, !dbg !3695
  %279 = icmp eq i64 %278, 224, !dbg !3695
  %280 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.strides, i64 3, !dbg !3695
  %281 = load i64, ptr %280, align 8, !dbg !3695, !tbaa !3868
  %282 = and i64 %281, 4294967295, !dbg !3695
  %283 = icmp eq i64 %282, 32, !dbg !3695
  %284 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.p3.strides, i64 4, !dbg !3695
  %285 = load i64, ptr %284, align 8, !dbg !3695, !tbaa !3870
  %286 = and i64 %285, 4294967295, !dbg !3695
  %287 = icmp eq i64 %286, 1, !dbg !3695
  %288 = and i1 %283, %287, !dbg !3695
  %289 = and i1 %279, %288, !dbg !3695
  %290 = and i1 %275, %289, !dbg !3695
  br i1 %290, label %if_end109, label %assert_fail110, !dbg !3695, !prof !18

if_end109:                                        ; preds = %if_then108, %assert_end107
  %291 = getelementptr inbounds %1, ptr %p3, i64 0, i32 6, !dbg !3695
  %292 = load i64, ptr %291, align 8, !dbg !3695
  %293 = icmp eq i64 %292, 0, !dbg !3695
  br i1 %293, label %assert_end113, label %assert_fail112, !dbg !3695, !prof !18

assert_fail110:                                   ; preds = %if_then108
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %294(ptr nonnull @.str.1002), !dbg !3695
  br label %common.ret

assert_fail112:                                   ; preds = %if_end109
  %295 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %295(ptr nonnull @.str.1003), !dbg !3695
  br label %common.ret

assert_end113:                                    ; preds = %if_end109
  %296 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 0, !dbg !3695
  %297 = load i32, ptr %296, align 4, !dbg !3695
  %298 = icmp eq i32 %297, 1, !dbg !3695
  br i1 %298, label %assert_end115, label %assert_fail114, !dbg !3695, !prof !18

assert_fail114:                                   ; preds = %assert_end113
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %299(ptr nonnull @.str.1004), !dbg !3695
  br label %common.ret

assert_end115:                                    ; preds = %assert_end113
  %300 = getelementptr inbounds %1, ptr %p3, i64 0, i32 1, i32 1, !dbg !3695
  %301 = load i32, ptr %300, align 4, !dbg !3695
  %302 = icmp eq i32 %dev_id, %301, !dbg !3695
  br i1 %302, label %assert_end117, label %assert_fail116, !dbg !3695, !prof !18

assert_fail116:                                   ; preds = %assert_end115
  %303 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %303(ptr nonnull @.str.1005), !dbg !3695
  br label %common.ret

assert_end117:                                    ; preds = %assert_end115
  %304 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !3695
  %305 = load i32, ptr %304, align 4, !dbg !3695
  %306 = icmp eq i32 %305, 5, !dbg !3695
  br i1 %306, label %assert_end121, label %assert_fail118, !dbg !3695, !prof !18

assert_fail118:                                   ; preds = %assert_end117
  %307 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %307(ptr nonnull @.str.1006), !dbg !3695
  br label %common.ret

assert_end121:                                    ; preds = %assert_end117
  %308 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !3695
  %309 = load i16, ptr %308, align 2, !dbg !3695
  %310 = icmp eq i16 %309, 1, !dbg !3695
  %311 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !3695
  %312 = load i8, ptr %311, align 1, !dbg !3695
  %313 = icmp eq i8 %312, 32, !dbg !3695
  %314 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !3695
  %315 = load i8, ptr %314, align 1, !dbg !3695
  %316 = icmp eq i8 %315, 2, !dbg !3695
  %317 = and i1 %313, %316, !dbg !3695
  %318 = and i1 %310, %317, !dbg !3695
  br i1 %318, label %assert_end123, label %assert_fail122, !dbg !3695, !prof !18

assert_fail122:                                   ; preds = %assert_end121
  %319 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %319(ptr nonnull @.str.1007), !dbg !3695
  br label %common.ret

assert_end123:                                    ; preds = %assert_end121
  %320 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.shape, align 8, !dbg !3695, !tbaa !3874
  %321 = and i64 %320, 4294967295, !dbg !3695
  %322 = icmp eq i64 %321, 1, !dbg !3695
  br i1 %322, label %assert_end125, label %assert_fail124, !dbg !3695, !prof !18

assert_fail124:                                   ; preds = %assert_end123
  %323 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %323(ptr nonnull @.str.1008), !dbg !3695
  br label %common.ret

assert_end125:                                    ; preds = %assert_end123
  %324 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.shape, i64 1, !dbg !3695
  %325 = load i64, ptr %324, align 8, !dbg !3695, !tbaa !3884
  %326 = and i64 %325, 4294967295, !dbg !3695
  %327 = icmp eq i64 %326, 64, !dbg !3695
  br i1 %327, label %assert_end127, label %assert_fail126, !dbg !3695, !prof !18

assert_fail126:                                   ; preds = %assert_end125
  %328 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %328(ptr nonnull @.str.1009), !dbg !3695
  br label %common.ret

assert_end127:                                    ; preds = %assert_end125
  %329 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.shape, i64 2, !dbg !3695
  %330 = load i64, ptr %329, align 8, !dbg !3695, !tbaa !3886
  %331 = and i64 %330, 4294967295, !dbg !3695
  %332 = icmp eq i64 %331, 7, !dbg !3695
  br i1 %332, label %assert_end129, label %assert_fail128, !dbg !3695, !prof !18

assert_fail128:                                   ; preds = %assert_end127
  %333 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %333(ptr nonnull @.str.1010), !dbg !3695
  br label %common.ret

assert_end129:                                    ; preds = %assert_end127
  %334 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.shape, i64 3, !dbg !3695
  %335 = load i64, ptr %334, align 8, !dbg !3695, !tbaa !3889
  %336 = and i64 %335, 4294967295, !dbg !3695
  %337 = icmp eq i64 %336, 7, !dbg !3695
  br i1 %337, label %assert_end131, label %assert_fail130, !dbg !3695, !prof !18

assert_fail130:                                   ; preds = %assert_end129
  %338 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %338(ptr nonnull @.str.1011), !dbg !3695
  br label %common.ret

assert_end131:                                    ; preds = %assert_end129
  %339 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.shape, i64 4, !dbg !3695
  %340 = load i64, ptr %339, align 8, !dbg !3695, !tbaa !3891
  %341 = and i64 %340, 4294967295, !dbg !3695
  %342 = icmp eq i64 %341, 32, !dbg !3695
  br i1 %342, label %assert_end133, label %assert_fail132, !dbg !3695, !prof !18

assert_fail132:                                   ; preds = %assert_end131
  %343 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %343(ptr nonnull @.str.1012), !dbg !3695
  br label %common.ret

assert_end133:                                    ; preds = %assert_end131
  %.not152 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.strides, null, !dbg !3695
  br i1 %.not152, label %if_end135, label %if_then134, !dbg !3695, !prof !52

if_then134:                                       ; preds = %assert_end133
  %344 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.strides, i64 1, !dbg !3695
  %345 = load i64, ptr %344, align 8, !dbg !3695, !tbaa !3895
  %346 = and i64 %345, 4294967295, !dbg !3695
  %347 = icmp eq i64 %346, 1568, !dbg !3695
  %348 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.strides, i64 2, !dbg !3695
  %349 = load i64, ptr %348, align 8, !dbg !3695, !tbaa !3905
  %350 = and i64 %349, 4294967295, !dbg !3695
  %351 = icmp eq i64 %350, 224, !dbg !3695
  %352 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.strides, i64 3, !dbg !3695
  %353 = load i64, ptr %352, align 8, !dbg !3695, !tbaa !3908
  %354 = and i64 %353, 4294967295, !dbg !3695
  %355 = icmp eq i64 %354, 32, !dbg !3695
  %356 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3.T_relu.strides, i64 4, !dbg !3695
  %357 = load i64, ptr %356, align 8, !dbg !3695, !tbaa !3910
  %358 = and i64 %357, 4294967295, !dbg !3695
  %359 = icmp eq i64 %358, 1, !dbg !3695
  %360 = and i1 %355, %359, !dbg !3695
  %361 = and i1 %351, %360, !dbg !3695
  %362 = and i1 %347, %361, !dbg !3695
  br i1 %362, label %if_end135, label %assert_fail136, !dbg !3695, !prof !18

if_end135:                                        ; preds = %if_then134, %assert_end133
  %363 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !3695
  %364 = load i64, ptr %363, align 8, !dbg !3695
  %365 = icmp eq i64 %364, 0, !dbg !3695
  br i1 %365, label %assert_end139, label %assert_fail138, !dbg !3695, !prof !18

assert_fail136:                                   ; preds = %if_then134
  %366 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %366(ptr nonnull @.str.1013), !dbg !3695
  br label %common.ret

assert_fail138:                                   ; preds = %if_end135
  %367 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %367(ptr nonnull @.str.1014), !dbg !3695
  br label %common.ret

assert_end139:                                    ; preds = %if_end135
  %368 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !3695
  %369 = load i32, ptr %368, align 4, !dbg !3695
  %370 = icmp eq i32 %369, 1, !dbg !3695
  br i1 %370, label %assert_end141, label %assert_fail140, !dbg !3695, !prof !18

assert_fail140:                                   ; preds = %assert_end139
  %371 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %371(ptr nonnull @.str.1015), !dbg !3695
  br label %common.ret

assert_end141:                                    ; preds = %assert_end139
  %372 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !3695
  %373 = load i32, ptr %372, align 4, !dbg !3695
  %374 = icmp eq i32 %dev_id, %373, !dbg !3695
  br i1 %374, label %assert_end143, label %assert_fail142, !dbg !3695, !prof !18

assert_fail142:                                   ; preds = %assert_end141
  %375 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3695, !tbaa !19
  tail call void %375(ptr nonnull @.str.1016), !dbg !3695
  br label %common.ret

assert_end143:                                    ; preds = %assert_end141
  %376 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_compute_(ptr %p0144, ptr %p1145, ptr %T_relu146, ptr %p2147, ptr %p3148), !dbg !3695
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !3914 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !3916, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !3917, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !3918, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !3919, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !3920, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !3921, metadata !DIExpression()), !dbg !3922
  %0 = icmp eq i32 %num_args, 4, !dbg !3922
  br i1 %0, label %assert_end, label %assert_fail, !dbg !3922, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %299, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !3922

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %1(ptr nonnull @.str.1018), !dbg !3922
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !3922, !tbaa !3923
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !3922
  %p1.code = load i32, ptr %2, align 4, !dbg !3922, !tbaa !3934
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !3922
  %p2.code = load i32, ptr %3, align 4, !dbg !3922, !tbaa !3936
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !3922
  %T_relu.code = load i32, ptr %4, align 4, !dbg !3922, !tbaa !3939
  %p0 = load ptr, ptr %args, align 8, !dbg !3922
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !3922
  %p1 = load ptr, ptr %5, align 8, !dbg !3922
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !3922
  %p2 = load ptr, ptr %6, align 8, !dbg !3922
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !3922
  %T_relu = load ptr, ptr %7, align 8, !dbg !3922
  %p0115 = load ptr, ptr %p0, align 8, !dbg !3922
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !3922
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !3922
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.shape = load ptr, ptr %8, align 8, !dbg !3922
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !3922
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.strides = load ptr, ptr %9, align 8, !dbg !3922
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !3922
  %dev_id = load i32, ptr %10, align 4, !dbg !3922
  %p1116 = load ptr, ptr %p1, align 8, !dbg !3922
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !3922
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !3922
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.shape = load ptr, ptr %11, align 8, !dbg !3922
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !3922
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.strides = load ptr, ptr %12, align 8, !dbg !3922
  %p2118 = load ptr, ptr %p2, align 8, !dbg !3922
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !3922
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !3922
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.shape = load ptr, ptr %13, align 8, !dbg !3922
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !3922
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.strides = load ptr, ptr %14, align 8, !dbg !3922
  %T_relu117 = load ptr, ptr %T_relu, align 8, !dbg !3922
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu117, i64 64) ], !dbg !3922
  %15 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !3922
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.shape = load ptr, ptr %15, align 8, !dbg !3922
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !3922
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.strides = load ptr, ptr %16, align 8, !dbg !3922
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !3922

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %17(ptr nonnull @.str.1019), !dbg !3922
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !3922

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %18(ptr nonnull @.str.1020), !dbg !3922
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !3922

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %19(ptr nonnull @.str.1021), !dbg !3922
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !3922

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %20(ptr nonnull @.str.1022), !dbg !3922
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !3922
  %22 = load i32, ptr %21, align 4, !dbg !3922
  %23 = icmp eq i32 %22, 5, !dbg !3922
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !3922, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %24(ptr nonnull @.str.1023), !dbg !3922
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !3922
  %26 = load i16, ptr %25, align 2, !dbg !3922
  %27 = icmp eq i16 %26, 1, !dbg !3922
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !3922
  %29 = load i8, ptr %28, align 1, !dbg !3922
  %30 = icmp eq i8 %29, 32, !dbg !3922
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !3922
  %32 = load i8, ptr %31, align 1, !dbg !3922
  %33 = icmp eq i8 %32, 2, !dbg !3922
  %34 = and i1 %30, %33, !dbg !3922
  %35 = and i1 %27, %34, !dbg !3922
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !3922, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %36(ptr nonnull @.str.1024), !dbg !3922
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.shape, align 8, !dbg !3922, !tbaa !3941
  %38 = and i64 %37, 4294967295, !dbg !3922
  %39 = icmp eq i64 %38, 1, !dbg !3922
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !3922, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %40(ptr nonnull @.str.1025), !dbg !3922
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.shape, i64 1, !dbg !3922
  %42 = load i64, ptr %41, align 8, !dbg !3922, !tbaa !3951
  %43 = and i64 %42, 4294967295, !dbg !3922
  %44 = icmp eq i64 %43, 1, !dbg !3922
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !3922, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %45(ptr nonnull @.str.1026), !dbg !3922
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.shape, i64 2, !dbg !3922
  %47 = load i64, ptr %46, align 8, !dbg !3922, !tbaa !3953
  %48 = and i64 %47, 4294967295, !dbg !3922
  %49 = icmp eq i64 %48, 224, !dbg !3922
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !3922, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %50(ptr nonnull @.str.1027), !dbg !3922
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.shape, i64 3, !dbg !3922
  %52 = load i64, ptr %51, align 8, !dbg !3922, !tbaa !3956
  %53 = and i64 %52, 4294967295, !dbg !3922
  %54 = icmp eq i64 %53, 224, !dbg !3922
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !3922, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %55(ptr nonnull @.str.1028), !dbg !3922
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.shape, i64 4, !dbg !3922
  %57 = load i64, ptr %56, align 8, !dbg !3922, !tbaa !3958
  %58 = and i64 %57, 4294967295, !dbg !3922
  %59 = icmp eq i64 %58, 3, !dbg !3922
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !3922, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %60(ptr nonnull @.str.1029), !dbg !3922
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.strides, null, !dbg !3922
  br i1 %.not, label %if_end, label %if_then, !dbg !3922, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.strides, i64 2, !dbg !3922
  %62 = load i64, ptr %61, align 8, !dbg !3922, !tbaa !3962
  %63 = and i64 %62, 4294967295, !dbg !3922
  %64 = icmp eq i64 %63, 672, !dbg !3922
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.strides, i64 3, !dbg !3922
  %66 = load i64, ptr %65, align 8, !dbg !3922, !tbaa !3972
  %67 = and i64 %66, 4294967295, !dbg !3922
  %68 = icmp eq i64 %67, 3, !dbg !3922
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p0.strides, i64 4, !dbg !3922
  %70 = load i64, ptr %69, align 8, !dbg !3922, !tbaa !3974
  %71 = and i64 %70, 4294967295, !dbg !3922
  %72 = icmp eq i64 %71, 1, !dbg !3922
  %73 = and i1 %68, %72, !dbg !3922
  %74 = and i1 %64, %73, !dbg !3922
  br i1 %74, label %if_end, label %assert_fail29, !dbg !3922, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !3922
  %76 = load i64, ptr %75, align 8, !dbg !3922
  %77 = icmp eq i64 %76, 0, !dbg !3922
  br i1 %77, label %assert_end32, label %assert_fail31, !dbg !3922, !prof !18

assert_fail29:                                    ; preds = %if_then
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %78(ptr nonnull @.str.1030), !dbg !3922
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %79(ptr nonnull @.str.1031), !dbg !3922
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !3922
  %81 = load i32, ptr %80, align 4, !dbg !3922
  %82 = icmp eq i32 %81, 1, !dbg !3922
  br i1 %82, label %assert_end34, label %assert_fail33, !dbg !3922, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %83(ptr nonnull @.str.1032), !dbg !3922
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !3922
  %85 = load i32, ptr %84, align 4, !dbg !3922
  %86 = icmp eq i32 %85, 6, !dbg !3922
  br i1 %86, label %assert_end38, label %assert_fail35, !dbg !3922, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %87 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %87(ptr nonnull @.str.1033), !dbg !3922
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %88 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !3922
  %89 = load i16, ptr %88, align 2, !dbg !3922
  %90 = icmp eq i16 %89, 1, !dbg !3922
  %91 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !3922
  %92 = load i8, ptr %91, align 1, !dbg !3922
  %93 = icmp eq i8 %92, 32, !dbg !3922
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !3922
  %95 = load i8, ptr %94, align 1, !dbg !3922
  %96 = icmp eq i8 %95, 2, !dbg !3922
  %97 = and i1 %93, %96, !dbg !3922
  %98 = and i1 %90, %97, !dbg !3922
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !3922, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %99(ptr nonnull @.str.1034), !dbg !3922
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.shape, align 8, !dbg !3922, !tbaa !3978
  %101 = and i64 %100, 4294967295, !dbg !3922
  %102 = icmp eq i64 %101, 2, !dbg !3922
  br i1 %102, label %assert_end42, label %assert_fail41, !dbg !3922, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %103(ptr nonnull @.str.1035), !dbg !3922
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.shape, i64 1, !dbg !3922
  %105 = load i64, ptr %104, align 8, !dbg !3922, !tbaa !3988
  %106 = and i64 %105, 4294967295, !dbg !3922
  %107 = icmp eq i64 %106, 1, !dbg !3922
  br i1 %107, label %assert_end44, label %assert_fail43, !dbg !3922, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %108(ptr nonnull @.str.1036), !dbg !3922
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.shape, i64 2, !dbg !3922
  %110 = load i64, ptr %109, align 8, !dbg !3922, !tbaa !3990
  %111 = and i64 %110, 4294967295, !dbg !3922
  %112 = icmp eq i64 %111, 7, !dbg !3922
  br i1 %112, label %assert_end46, label %assert_fail45, !dbg !3922, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %113(ptr nonnull @.str.1037), !dbg !3922
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.shape, i64 3, !dbg !3922
  %115 = load i64, ptr %114, align 8, !dbg !3922, !tbaa !3993
  %116 = and i64 %115, 4294967295, !dbg !3922
  %117 = icmp eq i64 %116, 7, !dbg !3922
  br i1 %117, label %assert_end48, label %assert_fail47, !dbg !3922, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %118(ptr nonnull @.str.1038), !dbg !3922
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.shape, i64 4, !dbg !3922
  %120 = load i64, ptr %119, align 8, !dbg !3922, !tbaa !3995
  %121 = and i64 %120, 4294967295, !dbg !3922
  %122 = icmp eq i64 %121, 3, !dbg !3922
  br i1 %122, label %assert_end50, label %assert_fail49, !dbg !3922, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %123(ptr nonnull @.str.1039), !dbg !3922
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.shape, i64 5, !dbg !3922
  %125 = load i64, ptr %124, align 8, !dbg !3922, !tbaa !3999
  %126 = and i64 %125, 4294967295, !dbg !3922
  %127 = icmp eq i64 %126, 32, !dbg !3922
  br i1 %127, label %assert_end52, label %assert_fail51, !dbg !3922, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %128(ptr nonnull @.str.1040), !dbg !3922
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.strides, null, !dbg !3922
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !3922, !prof !52

if_then53:                                        ; preds = %assert_end52
  %129 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.strides, align 8, !dbg !3922, !tbaa !4001
  %130 = and i64 %129, 4294967295, !dbg !3922
  %131 = icmp eq i64 %130, 4704, !dbg !3922
  %132 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.strides, i64 2, !dbg !3922
  %133 = load i64, ptr %132, align 8, !dbg !3922, !tbaa !4011
  %134 = and i64 %133, 4294967295, !dbg !3922
  %135 = icmp eq i64 %134, 672, !dbg !3922
  %136 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.strides, i64 3, !dbg !3922
  %137 = load i64, ptr %136, align 8, !dbg !3922, !tbaa !4014
  %138 = and i64 %137, 4294967295, !dbg !3922
  %139 = icmp eq i64 %138, 96, !dbg !3922
  %140 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.strides, i64 4, !dbg !3922
  %141 = load i64, ptr %140, align 8, !dbg !3922, !tbaa !4016
  %142 = and i64 %141, 4294967295, !dbg !3922
  %143 = icmp eq i64 %142, 32, !dbg !3922
  %144 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p1.strides, i64 5, !dbg !3922
  %145 = load i64, ptr %144, align 8, !dbg !3922, !tbaa !4020
  %146 = and i64 %145, 4294967295, !dbg !3922
  %147 = icmp eq i64 %146, 1, !dbg !3922
  %148 = and i1 %143, %147, !dbg !3922
  %149 = and i1 %139, %148, !dbg !3922
  %150 = and i1 %135, %149, !dbg !3922
  %151 = and i1 %131, %150, !dbg !3922
  br i1 %151, label %if_end54, label %assert_fail55, !dbg !3922, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %152 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !3922
  %153 = load i64, ptr %152, align 8, !dbg !3922
  %154 = icmp eq i64 %153, 0, !dbg !3922
  br i1 %154, label %assert_end58, label %assert_fail57, !dbg !3922, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %155(ptr nonnull @.str.1041), !dbg !3922
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %156(ptr nonnull @.str.1042), !dbg !3922
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %157 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !3922
  %158 = load i32, ptr %157, align 4, !dbg !3922
  %159 = icmp eq i32 %158, 1, !dbg !3922
  br i1 %159, label %assert_end60, label %assert_fail59, !dbg !3922, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %160(ptr nonnull @.str.1043), !dbg !3922
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %161 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !3922
  %162 = load i32, ptr %161, align 4, !dbg !3922
  %163 = icmp eq i32 %dev_id, %162, !dbg !3922
  br i1 %163, label %assert_end62, label %assert_fail61, !dbg !3922, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %164 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %164(ptr nonnull @.str.1044), !dbg !3922
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %165 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !3922
  %166 = load i32, ptr %165, align 4, !dbg !3922
  %167 = icmp eq i32 %166, 5, !dbg !3922
  br i1 %167, label %assert_end66, label %assert_fail63, !dbg !3922, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %168 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %168(ptr nonnull @.str.1045), !dbg !3922
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %169 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !3922
  %170 = load i16, ptr %169, align 2, !dbg !3922
  %171 = icmp eq i16 %170, 1, !dbg !3922
  %172 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !3922
  %173 = load i8, ptr %172, align 1, !dbg !3922
  %174 = icmp eq i8 %173, 32, !dbg !3922
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !3922
  %176 = load i8, ptr %175, align 1, !dbg !3922
  %177 = icmp eq i8 %176, 2, !dbg !3922
  %178 = and i1 %174, %177, !dbg !3922
  %179 = and i1 %171, %178, !dbg !3922
  br i1 %179, label %assert_end68, label %assert_fail67, !dbg !3922, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %180(ptr nonnull @.str.1046), !dbg !3922
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %181 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.shape, align 8, !dbg !3922, !tbaa !4022
  %182 = and i64 %181, 4294967295, !dbg !3922
  %183 = icmp eq i64 %182, 1, !dbg !3922
  br i1 %183, label %assert_end70, label %assert_fail69, !dbg !3922, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %184(ptr nonnull @.str.1047), !dbg !3922
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %185 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.shape, i64 1, !dbg !3922
  %186 = load i64, ptr %185, align 8, !dbg !3922, !tbaa !4032
  %187 = and i64 %186, 4294967295, !dbg !3922
  %188 = icmp eq i64 %187, 2, !dbg !3922
  br i1 %188, label %assert_end72, label %assert_fail71, !dbg !3922, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %189(ptr nonnull @.str.1048), !dbg !3922
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.shape, i64 2, !dbg !3922
  %191 = load i64, ptr %190, align 8, !dbg !3922, !tbaa !4034
  %192 = and i64 %191, 4294967295, !dbg !3922
  %193 = icmp eq i64 %192, 1, !dbg !3922
  br i1 %193, label %assert_end74, label %assert_fail73, !dbg !3922, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %194(ptr nonnull @.str.1049), !dbg !3922
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.shape, i64 3, !dbg !3922
  %196 = load i64, ptr %195, align 8, !dbg !3922, !tbaa !4037
  %197 = and i64 %196, 4294967295, !dbg !3922
  %198 = icmp eq i64 %197, 1, !dbg !3922
  br i1 %198, label %assert_end76, label %assert_fail75, !dbg !3922, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %199(ptr nonnull @.str.1050), !dbg !3922
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.shape, i64 4, !dbg !3922
  %201 = load i64, ptr %200, align 8, !dbg !3922, !tbaa !4039
  %202 = and i64 %201, 4294967295, !dbg !3922
  %203 = icmp eq i64 %202, 32, !dbg !3922
  br i1 %203, label %assert_end78, label %assert_fail77, !dbg !3922, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %204(ptr nonnull @.str.1051), !dbg !3922
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.strides, null, !dbg !3922
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !3922, !prof !52

if_then79:                                        ; preds = %assert_end78
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.strides, i64 1, !dbg !3922
  %206 = load i64, ptr %205, align 8, !dbg !3922, !tbaa !4043
  %207 = and i64 %206, 4294967295, !dbg !3922
  %208 = icmp eq i64 %207, 32, !dbg !3922
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.p2.strides, i64 4, !dbg !3922
  %210 = load i64, ptr %209, align 8, !dbg !3922, !tbaa !4053
  %211 = and i64 %210, 4294967295, !dbg !3922
  %212 = icmp eq i64 %211, 1, !dbg !3922
  %213 = and i1 %208, %212, !dbg !3922
  br i1 %213, label %if_end80, label %assert_fail81, !dbg !3922, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %214 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !3922
  %215 = load i64, ptr %214, align 8, !dbg !3922
  %216 = icmp eq i64 %215, 0, !dbg !3922
  br i1 %216, label %assert_end84, label %assert_fail83, !dbg !3922, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %217(ptr nonnull @.str.1052), !dbg !3922
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %218(ptr nonnull @.str.1053), !dbg !3922
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %219 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !3922
  %220 = load i32, ptr %219, align 4, !dbg !3922
  %221 = icmp eq i32 %220, 1, !dbg !3922
  br i1 %221, label %assert_end86, label %assert_fail85, !dbg !3922, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %222(ptr nonnull @.str.1054), !dbg !3922
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %223 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !3922
  %224 = load i32, ptr %223, align 4, !dbg !3922
  %225 = icmp eq i32 %dev_id, %224, !dbg !3922
  br i1 %225, label %assert_end88, label %assert_fail87, !dbg !3922, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %226 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %226(ptr nonnull @.str.1055), !dbg !3922
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %227 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !3922
  %228 = load i32, ptr %227, align 4, !dbg !3922
  %229 = icmp eq i32 %228, 5, !dbg !3922
  br i1 %229, label %assert_end92, label %assert_fail89, !dbg !3922, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %230 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %230(ptr nonnull @.str.1056), !dbg !3922
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %231 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !3922
  %232 = load i16, ptr %231, align 2, !dbg !3922
  %233 = icmp eq i16 %232, 1, !dbg !3922
  %234 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !3922
  %235 = load i8, ptr %234, align 1, !dbg !3922
  %236 = icmp eq i8 %235, 32, !dbg !3922
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !3922
  %238 = load i8, ptr %237, align 1, !dbg !3922
  %239 = icmp eq i8 %238, 2, !dbg !3922
  %240 = and i1 %236, %239, !dbg !3922
  %241 = and i1 %233, %240, !dbg !3922
  br i1 %241, label %assert_end94, label %assert_fail93, !dbg !3922, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %242(ptr nonnull @.str.1057), !dbg !3922
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %243 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.shape, align 8, !dbg !3922, !tbaa !4057
  %244 = and i64 %243, 4294967295, !dbg !3922
  %245 = icmp eq i64 %244, 1, !dbg !3922
  br i1 %245, label %assert_end96, label %assert_fail95, !dbg !3922, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %246(ptr nonnull @.str.1058), !dbg !3922
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.shape, i64 1, !dbg !3922
  %248 = load i64, ptr %247, align 8, !dbg !3922, !tbaa !4067
  %249 = and i64 %248, 4294967295, !dbg !3922
  %250 = icmp eq i64 %249, 2, !dbg !3922
  br i1 %250, label %assert_end98, label %assert_fail97, !dbg !3922, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %251(ptr nonnull @.str.1059), !dbg !3922
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.shape, i64 2, !dbg !3922
  %253 = load i64, ptr %252, align 8, !dbg !3922, !tbaa !4069
  %254 = and i64 %253, 4294967295, !dbg !3922
  %255 = icmp eq i64 %254, 112, !dbg !3922
  br i1 %255, label %assert_end100, label %assert_fail99, !dbg !3922, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %256(ptr nonnull @.str.1060), !dbg !3922
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.shape, i64 3, !dbg !3922
  %258 = load i64, ptr %257, align 8, !dbg !3922, !tbaa !4072
  %259 = and i64 %258, 4294967295, !dbg !3922
  %260 = icmp eq i64 %259, 112, !dbg !3922
  br i1 %260, label %assert_end102, label %assert_fail101, !dbg !3922, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %261(ptr nonnull @.str.1061), !dbg !3922
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.shape, i64 4, !dbg !3922
  %263 = load i64, ptr %262, align 8, !dbg !3922, !tbaa !4074
  %264 = and i64 %263, 4294967295, !dbg !3922
  %265 = icmp eq i64 %264, 32, !dbg !3922
  br i1 %265, label %assert_end104, label %assert_fail103, !dbg !3922, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %266(ptr nonnull @.str.1062), !dbg !3922
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.strides, null, !dbg !3922
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !3922, !prof !52

if_then105:                                       ; preds = %assert_end104
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.strides, i64 1, !dbg !3922
  %268 = load i64, ptr %267, align 8, !dbg !3922, !tbaa !4078
  %269 = and i64 %268, 4294967295, !dbg !3922
  %270 = icmp eq i64 %269, 401408, !dbg !3922
  %271 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.strides, i64 2, !dbg !3922
  %272 = load i64, ptr %271, align 8, !dbg !3922, !tbaa !4088
  %273 = and i64 %272, 4294967295, !dbg !3922
  %274 = icmp eq i64 %273, 3584, !dbg !3922
  %275 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.strides, i64 3, !dbg !3922
  %276 = load i64, ptr %275, align 8, !dbg !3922, !tbaa !4091
  %277 = and i64 %276, 4294967295, !dbg !3922
  %278 = icmp eq i64 %277, 32, !dbg !3922
  %279 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu.T_relu.strides, i64 4, !dbg !3922
  %280 = load i64, ptr %279, align 8, !dbg !3922, !tbaa !4093
  %281 = and i64 %280, 4294967295, !dbg !3922
  %282 = icmp eq i64 %281, 1, !dbg !3922
  %283 = and i1 %278, %282, !dbg !3922
  %284 = and i1 %274, %283, !dbg !3922
  %285 = and i1 %270, %284, !dbg !3922
  br i1 %285, label %if_end106, label %assert_fail107, !dbg !3922, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %286 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !3922
  %287 = load i64, ptr %286, align 8, !dbg !3922
  %288 = icmp eq i64 %287, 0, !dbg !3922
  br i1 %288, label %assert_end110, label %assert_fail109, !dbg !3922, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %289(ptr nonnull @.str.1063), !dbg !3922
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %290(ptr nonnull @.str.1064), !dbg !3922
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %291 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !3922
  %292 = load i32, ptr %291, align 4, !dbg !3922
  %293 = icmp eq i32 %292, 1, !dbg !3922
  br i1 %293, label %assert_end112, label %assert_fail111, !dbg !3922, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %294(ptr nonnull @.str.1065), !dbg !3922
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %295 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !3922
  %296 = load i32, ptr %295, align 4, !dbg !3922
  %297 = icmp eq i32 %dev_id, %296, !dbg !3922
  br i1 %297, label %assert_end114, label %assert_fail113, !dbg !3922, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %298 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !3922, !tbaa !19
  tail call void %298(ptr nonnull @.str.1066), !dbg !3922
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %299 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_compute_(i32 %dev_id, ptr %p0115, ptr %p1116, ptr %T_relu117, ptr %p2118), !dbg !3922
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4097 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4099, metadata !DIExpression()), !dbg !4105
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4100, metadata !DIExpression()), !dbg !4105
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4101, metadata !DIExpression()), !dbg !4105
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4102, metadata !DIExpression()), !dbg !4105
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4103, metadata !DIExpression()), !dbg !4105
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4104, metadata !DIExpression()), !dbg !4105
  %0 = icmp eq i32 %num_args, 4, !dbg !4105
  br i1 %0, label %assert_end, label %assert_fail, !dbg !4105, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %299, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !4105

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %1(ptr nonnull @.str.1069), !dbg !4105
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4105, !tbaa !4106
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4105
  %p1.code = load i32, ptr %2, align 4, !dbg !4105, !tbaa !4117
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4105
  %p2.code = load i32, ptr %3, align 4, !dbg !4105, !tbaa !4119
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !4105
  %T_relu.code = load i32, ptr %4, align 4, !dbg !4105, !tbaa !4122
  %p0 = load ptr, ptr %args, align 8, !dbg !4105
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4105
  %p1 = load ptr, ptr %5, align 8, !dbg !4105
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4105
  %p2 = load ptr, ptr %6, align 8, !dbg !4105
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !4105
  %T_relu = load ptr, ptr %7, align 8, !dbg !4105
  %p0115 = load ptr, ptr %p0, align 8, !dbg !4105
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !4105
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4105
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.shape = load ptr, ptr %8, align 8, !dbg !4105
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4105
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.strides = load ptr, ptr %9, align 8, !dbg !4105
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4105
  %dev_id = load i32, ptr %10, align 4, !dbg !4105
  %p1116 = load ptr, ptr %p1, align 8, !dbg !4105
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !4105
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4105
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.shape = load ptr, ptr %11, align 8, !dbg !4105
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4105
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.strides = load ptr, ptr %12, align 8, !dbg !4105
  %p2118 = load ptr, ptr %p2, align 8, !dbg !4105
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !4105
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !4105
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.shape = load ptr, ptr %13, align 8, !dbg !4105
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !4105
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.strides = load ptr, ptr %14, align 8, !dbg !4105
  %T_relu117 = load ptr, ptr %T_relu, align 8, !dbg !4105
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu117, i64 64) ], !dbg !4105
  %15 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !4105
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.shape = load ptr, ptr %15, align 8, !dbg !4105
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !4105
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.strides = load ptr, ptr %16, align 8, !dbg !4105
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !4105

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %17(ptr nonnull @.str.1070), !dbg !4105
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !4105

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %18(ptr nonnull @.str.1071), !dbg !4105
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !4105

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %19(ptr nonnull @.str.1072), !dbg !4105
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !4105

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %20(ptr nonnull @.str.1073), !dbg !4105
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4105
  %22 = load i32, ptr %21, align 4, !dbg !4105
  %23 = icmp eq i32 %22, 5, !dbg !4105
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !4105, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %24(ptr nonnull @.str.1074), !dbg !4105
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4105
  %26 = load i16, ptr %25, align 2, !dbg !4105
  %27 = icmp eq i16 %26, 1, !dbg !4105
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4105
  %29 = load i8, ptr %28, align 1, !dbg !4105
  %30 = icmp eq i8 %29, 32, !dbg !4105
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4105
  %32 = load i8, ptr %31, align 1, !dbg !4105
  %33 = icmp eq i8 %32, 2, !dbg !4105
  %34 = and i1 %30, %33, !dbg !4105
  %35 = and i1 %27, %34, !dbg !4105
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !4105, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %36(ptr nonnull @.str.1075), !dbg !4105
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.shape, align 8, !dbg !4105, !tbaa !4124
  %38 = and i64 %37, 4294967295, !dbg !4105
  %39 = icmp eq i64 %38, 1, !dbg !4105
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !4105, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %40(ptr nonnull @.str.1076), !dbg !4105
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.shape, i64 1, !dbg !4105
  %42 = load i64, ptr %41, align 8, !dbg !4105, !tbaa !4134
  %43 = and i64 %42, 4294967295, !dbg !4105
  %44 = icmp eq i64 %43, 4, !dbg !4105
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !4105, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %45(ptr nonnull @.str.1077), !dbg !4105
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.shape, i64 2, !dbg !4105
  %47 = load i64, ptr %46, align 8, !dbg !4105, !tbaa !4136
  %48 = and i64 %47, 4294967295, !dbg !4105
  %49 = icmp eq i64 %48, 56, !dbg !4105
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !4105, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %50(ptr nonnull @.str.1078), !dbg !4105
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.shape, i64 3, !dbg !4105
  %52 = load i64, ptr %51, align 8, !dbg !4105, !tbaa !4139
  %53 = and i64 %52, 4294967295, !dbg !4105
  %54 = icmp eq i64 %53, 56, !dbg !4105
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !4105, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %55(ptr nonnull @.str.1079), !dbg !4105
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.shape, i64 4, !dbg !4105
  %57 = load i64, ptr %56, align 8, !dbg !4105, !tbaa !4141
  %58 = and i64 %57, 4294967295, !dbg !4105
  %59 = icmp eq i64 %58, 16, !dbg !4105
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !4105, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %60(ptr nonnull @.str.1080), !dbg !4105
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.strides, null, !dbg !4105
  br i1 %.not, label %if_end, label %if_then, !dbg !4105, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.strides, i64 1, !dbg !4105
  %62 = load i64, ptr %61, align 8, !dbg !4105, !tbaa !4145
  %63 = and i64 %62, 4294967295, !dbg !4105
  %64 = icmp eq i64 %63, 50176, !dbg !4105
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.strides, i64 2, !dbg !4105
  %66 = load i64, ptr %65, align 8, !dbg !4105, !tbaa !4155
  %67 = and i64 %66, 4294967295, !dbg !4105
  %68 = icmp eq i64 %67, 896, !dbg !4105
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.strides, i64 3, !dbg !4105
  %70 = load i64, ptr %69, align 8, !dbg !4105, !tbaa !4158
  %71 = and i64 %70, 4294967295, !dbg !4105
  %72 = icmp eq i64 %71, 16, !dbg !4105
  %73 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p0.strides, i64 4, !dbg !4105
  %74 = load i64, ptr %73, align 8, !dbg !4105, !tbaa !4160
  %75 = and i64 %74, 4294967295, !dbg !4105
  %76 = icmp eq i64 %75, 1, !dbg !4105
  %77 = and i1 %72, %76, !dbg !4105
  %78 = and i1 %68, %77, !dbg !4105
  %79 = and i1 %64, %78, !dbg !4105
  br i1 %79, label %if_end, label %assert_fail29, !dbg !4105, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4105
  %81 = load i64, ptr %80, align 8, !dbg !4105
  %82 = icmp eq i64 %81, 0, !dbg !4105
  br i1 %82, label %assert_end32, label %assert_fail31, !dbg !4105, !prof !18

assert_fail29:                                    ; preds = %if_then
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %83(ptr nonnull @.str.1081), !dbg !4105
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %84(ptr nonnull @.str.1082), !dbg !4105
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %85 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4105
  %86 = load i32, ptr %85, align 4, !dbg !4105
  %87 = icmp eq i32 %86, 1, !dbg !4105
  br i1 %87, label %assert_end34, label %assert_fail33, !dbg !4105, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %88(ptr nonnull @.str.1083), !dbg !4105
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %89 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4105
  %90 = load i32, ptr %89, align 4, !dbg !4105
  %91 = icmp eq i32 %90, 6, !dbg !4105
  br i1 %91, label %assert_end38, label %assert_fail35, !dbg !4105, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %92 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %92(ptr nonnull @.str.1084), !dbg !4105
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %93 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4105
  %94 = load i16, ptr %93, align 2, !dbg !4105
  %95 = icmp eq i16 %94, 1, !dbg !4105
  %96 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4105
  %97 = load i8, ptr %96, align 1, !dbg !4105
  %98 = icmp eq i8 %97, 32, !dbg !4105
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4105
  %100 = load i8, ptr %99, align 1, !dbg !4105
  %101 = icmp eq i8 %100, 2, !dbg !4105
  %102 = and i1 %98, %101, !dbg !4105
  %103 = and i1 %95, %102, !dbg !4105
  br i1 %103, label %assert_end40, label %assert_fail39, !dbg !4105, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %104(ptr nonnull @.str.1085), !dbg !4105
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %105 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.shape, align 8, !dbg !4105, !tbaa !4164
  %106 = and i64 %105, 4294967295, !dbg !4105
  %107 = icmp eq i64 %106, 4, !dbg !4105
  br i1 %107, label %assert_end42, label %assert_fail41, !dbg !4105, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %108(ptr nonnull @.str.1086), !dbg !4105
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.shape, i64 1, !dbg !4105
  %110 = load i64, ptr %109, align 8, !dbg !4105, !tbaa !4174
  %111 = and i64 %110, 4294967295, !dbg !4105
  %112 = icmp eq i64 %111, 4, !dbg !4105
  br i1 %112, label %assert_end44, label %assert_fail43, !dbg !4105, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %113(ptr nonnull @.str.1087), !dbg !4105
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.shape, i64 2, !dbg !4105
  %115 = load i64, ptr %114, align 8, !dbg !4105, !tbaa !4176
  %116 = and i64 %115, 4294967295, !dbg !4105
  %117 = icmp eq i64 %116, 1, !dbg !4105
  br i1 %117, label %assert_end46, label %assert_fail45, !dbg !4105, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %118(ptr nonnull @.str.1088), !dbg !4105
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.shape, i64 3, !dbg !4105
  %120 = load i64, ptr %119, align 8, !dbg !4105, !tbaa !4179
  %121 = and i64 %120, 4294967295, !dbg !4105
  %122 = icmp eq i64 %121, 1, !dbg !4105
  br i1 %122, label %assert_end48, label %assert_fail47, !dbg !4105, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %123(ptr nonnull @.str.1089), !dbg !4105
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.shape, i64 4, !dbg !4105
  %125 = load i64, ptr %124, align 8, !dbg !4105, !tbaa !4181
  %126 = and i64 %125, 4294967295, !dbg !4105
  %127 = icmp eq i64 %126, 16, !dbg !4105
  br i1 %127, label %assert_end50, label %assert_fail49, !dbg !4105, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %128(ptr nonnull @.str.1090), !dbg !4105
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %129 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.shape, i64 5, !dbg !4105
  %130 = load i64, ptr %129, align 8, !dbg !4105, !tbaa !4185
  %131 = and i64 %130, 4294967295, !dbg !4105
  %132 = icmp eq i64 %131, 16, !dbg !4105
  br i1 %132, label %assert_end52, label %assert_fail51, !dbg !4105, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %133 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %133(ptr nonnull @.str.1091), !dbg !4105
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.strides, null, !dbg !4105
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !4105, !prof !52

if_then53:                                        ; preds = %assert_end52
  %134 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.strides, align 8, !dbg !4105, !tbaa !4187
  %135 = and i64 %134, 4294967295, !dbg !4105
  %136 = icmp eq i64 %135, 1024, !dbg !4105
  %137 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.strides, i64 1, !dbg !4105
  %138 = load i64, ptr %137, align 8, !dbg !4105, !tbaa !4197
  %139 = and i64 %138, 4294967295, !dbg !4105
  %140 = icmp eq i64 %139, 256, !dbg !4105
  %141 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.strides, i64 4, !dbg !4105
  %142 = load i64, ptr %141, align 8, !dbg !4105, !tbaa !4199
  %143 = and i64 %142, 4294967295, !dbg !4105
  %144 = icmp eq i64 %143, 16, !dbg !4105
  %145 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p1.strides, i64 5, !dbg !4105
  %146 = load i64, ptr %145, align 8, !dbg !4105, !tbaa !4203
  %147 = and i64 %146, 4294967295, !dbg !4105
  %148 = icmp eq i64 %147, 1, !dbg !4105
  %149 = and i1 %144, %148, !dbg !4105
  %150 = and i1 %140, %149, !dbg !4105
  %151 = and i1 %136, %150, !dbg !4105
  br i1 %151, label %if_end54, label %assert_fail55, !dbg !4105, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %152 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4105
  %153 = load i64, ptr %152, align 8, !dbg !4105
  %154 = icmp eq i64 %153, 0, !dbg !4105
  br i1 %154, label %assert_end58, label %assert_fail57, !dbg !4105, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %155(ptr nonnull @.str.1092), !dbg !4105
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %156(ptr nonnull @.str.1093), !dbg !4105
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %157 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4105
  %158 = load i32, ptr %157, align 4, !dbg !4105
  %159 = icmp eq i32 %158, 1, !dbg !4105
  br i1 %159, label %assert_end60, label %assert_fail59, !dbg !4105, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %160(ptr nonnull @.str.1094), !dbg !4105
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %161 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4105
  %162 = load i32, ptr %161, align 4, !dbg !4105
  %163 = icmp eq i32 %dev_id, %162, !dbg !4105
  br i1 %163, label %assert_end62, label %assert_fail61, !dbg !4105, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %164 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %164(ptr nonnull @.str.1095), !dbg !4105
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %165 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !4105
  %166 = load i32, ptr %165, align 4, !dbg !4105
  %167 = icmp eq i32 %166, 5, !dbg !4105
  br i1 %167, label %assert_end66, label %assert_fail63, !dbg !4105, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %168 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %168(ptr nonnull @.str.1096), !dbg !4105
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %169 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !4105
  %170 = load i16, ptr %169, align 2, !dbg !4105
  %171 = icmp eq i16 %170, 1, !dbg !4105
  %172 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !4105
  %173 = load i8, ptr %172, align 1, !dbg !4105
  %174 = icmp eq i8 %173, 32, !dbg !4105
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !4105
  %176 = load i8, ptr %175, align 1, !dbg !4105
  %177 = icmp eq i8 %176, 2, !dbg !4105
  %178 = and i1 %174, %177, !dbg !4105
  %179 = and i1 %171, %178, !dbg !4105
  br i1 %179, label %assert_end68, label %assert_fail67, !dbg !4105, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %180(ptr nonnull @.str.1097), !dbg !4105
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %181 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.shape, align 8, !dbg !4105, !tbaa !4205
  %182 = and i64 %181, 4294967295, !dbg !4105
  %183 = icmp eq i64 %182, 1, !dbg !4105
  br i1 %183, label %assert_end70, label %assert_fail69, !dbg !4105, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %184(ptr nonnull @.str.1098), !dbg !4105
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %185 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.shape, i64 1, !dbg !4105
  %186 = load i64, ptr %185, align 8, !dbg !4105, !tbaa !4215
  %187 = and i64 %186, 4294967295, !dbg !4105
  %188 = icmp eq i64 %187, 4, !dbg !4105
  br i1 %188, label %assert_end72, label %assert_fail71, !dbg !4105, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %189(ptr nonnull @.str.1099), !dbg !4105
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.shape, i64 2, !dbg !4105
  %191 = load i64, ptr %190, align 8, !dbg !4105, !tbaa !4217
  %192 = and i64 %191, 4294967295, !dbg !4105
  %193 = icmp eq i64 %192, 1, !dbg !4105
  br i1 %193, label %assert_end74, label %assert_fail73, !dbg !4105, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %194(ptr nonnull @.str.1100), !dbg !4105
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.shape, i64 3, !dbg !4105
  %196 = load i64, ptr %195, align 8, !dbg !4105, !tbaa !4220
  %197 = and i64 %196, 4294967295, !dbg !4105
  %198 = icmp eq i64 %197, 1, !dbg !4105
  br i1 %198, label %assert_end76, label %assert_fail75, !dbg !4105, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %199(ptr nonnull @.str.1101), !dbg !4105
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.shape, i64 4, !dbg !4105
  %201 = load i64, ptr %200, align 8, !dbg !4105, !tbaa !4222
  %202 = and i64 %201, 4294967295, !dbg !4105
  %203 = icmp eq i64 %202, 16, !dbg !4105
  br i1 %203, label %assert_end78, label %assert_fail77, !dbg !4105, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %204(ptr nonnull @.str.1102), !dbg !4105
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.strides, null, !dbg !4105
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !4105, !prof !52

if_then79:                                        ; preds = %assert_end78
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.strides, i64 1, !dbg !4105
  %206 = load i64, ptr %205, align 8, !dbg !4105, !tbaa !4226
  %207 = and i64 %206, 4294967295, !dbg !4105
  %208 = icmp eq i64 %207, 16, !dbg !4105
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.p2.strides, i64 4, !dbg !4105
  %210 = load i64, ptr %209, align 8, !dbg !4105, !tbaa !4236
  %211 = and i64 %210, 4294967295, !dbg !4105
  %212 = icmp eq i64 %211, 1, !dbg !4105
  %213 = and i1 %208, %212, !dbg !4105
  br i1 %213, label %if_end80, label %assert_fail81, !dbg !4105, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %214 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !4105
  %215 = load i64, ptr %214, align 8, !dbg !4105
  %216 = icmp eq i64 %215, 0, !dbg !4105
  br i1 %216, label %assert_end84, label %assert_fail83, !dbg !4105, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %217(ptr nonnull @.str.1103), !dbg !4105
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %218(ptr nonnull @.str.1104), !dbg !4105
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %219 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !4105
  %220 = load i32, ptr %219, align 4, !dbg !4105
  %221 = icmp eq i32 %220, 1, !dbg !4105
  br i1 %221, label %assert_end86, label %assert_fail85, !dbg !4105, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %222(ptr nonnull @.str.1105), !dbg !4105
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %223 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !4105
  %224 = load i32, ptr %223, align 4, !dbg !4105
  %225 = icmp eq i32 %dev_id, %224, !dbg !4105
  br i1 %225, label %assert_end88, label %assert_fail87, !dbg !4105, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %226 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %226(ptr nonnull @.str.1106), !dbg !4105
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %227 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !4105
  %228 = load i32, ptr %227, align 4, !dbg !4105
  %229 = icmp eq i32 %228, 5, !dbg !4105
  br i1 %229, label %assert_end92, label %assert_fail89, !dbg !4105, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %230 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %230(ptr nonnull @.str.1107), !dbg !4105
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %231 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !4105
  %232 = load i16, ptr %231, align 2, !dbg !4105
  %233 = icmp eq i16 %232, 1, !dbg !4105
  %234 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !4105
  %235 = load i8, ptr %234, align 1, !dbg !4105
  %236 = icmp eq i8 %235, 32, !dbg !4105
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !4105
  %238 = load i8, ptr %237, align 1, !dbg !4105
  %239 = icmp eq i8 %238, 2, !dbg !4105
  %240 = and i1 %236, %239, !dbg !4105
  %241 = and i1 %233, %240, !dbg !4105
  br i1 %241, label %assert_end94, label %assert_fail93, !dbg !4105, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %242(ptr nonnull @.str.1108), !dbg !4105
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %243 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.shape, align 8, !dbg !4105, !tbaa !4240
  %244 = and i64 %243, 4294967295, !dbg !4105
  %245 = icmp eq i64 %244, 1, !dbg !4105
  br i1 %245, label %assert_end96, label %assert_fail95, !dbg !4105, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %246(ptr nonnull @.str.1109), !dbg !4105
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.shape, i64 1, !dbg !4105
  %248 = load i64, ptr %247, align 8, !dbg !4105, !tbaa !4250
  %249 = and i64 %248, 4294967295, !dbg !4105
  %250 = icmp eq i64 %249, 4, !dbg !4105
  br i1 %250, label %assert_end98, label %assert_fail97, !dbg !4105, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %251(ptr nonnull @.str.1110), !dbg !4105
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.shape, i64 2, !dbg !4105
  %253 = load i64, ptr %252, align 8, !dbg !4105, !tbaa !4252
  %254 = and i64 %253, 4294967295, !dbg !4105
  %255 = icmp eq i64 %254, 56, !dbg !4105
  br i1 %255, label %assert_end100, label %assert_fail99, !dbg !4105, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %256(ptr nonnull @.str.1111), !dbg !4105
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.shape, i64 3, !dbg !4105
  %258 = load i64, ptr %257, align 8, !dbg !4105, !tbaa !4255
  %259 = and i64 %258, 4294967295, !dbg !4105
  %260 = icmp eq i64 %259, 56, !dbg !4105
  br i1 %260, label %assert_end102, label %assert_fail101, !dbg !4105, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %261(ptr nonnull @.str.1112), !dbg !4105
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.shape, i64 4, !dbg !4105
  %263 = load i64, ptr %262, align 8, !dbg !4105, !tbaa !4257
  %264 = and i64 %263, 4294967295, !dbg !4105
  %265 = icmp eq i64 %264, 16, !dbg !4105
  br i1 %265, label %assert_end104, label %assert_fail103, !dbg !4105, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %266(ptr nonnull @.str.1113), !dbg !4105
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.strides, null, !dbg !4105
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !4105, !prof !52

if_then105:                                       ; preds = %assert_end104
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.strides, i64 1, !dbg !4105
  %268 = load i64, ptr %267, align 8, !dbg !4105, !tbaa !4261
  %269 = and i64 %268, 4294967295, !dbg !4105
  %270 = icmp eq i64 %269, 50176, !dbg !4105
  %271 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.strides, i64 2, !dbg !4105
  %272 = load i64, ptr %271, align 8, !dbg !4105, !tbaa !4271
  %273 = and i64 %272, 4294967295, !dbg !4105
  %274 = icmp eq i64 %273, 896, !dbg !4105
  %275 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.strides, i64 3, !dbg !4105
  %276 = load i64, ptr %275, align 8, !dbg !4105, !tbaa !4274
  %277 = and i64 %276, 4294967295, !dbg !4105
  %278 = icmp eq i64 %277, 16, !dbg !4105
  %279 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1.T_relu.strides, i64 4, !dbg !4105
  %280 = load i64, ptr %279, align 8, !dbg !4105, !tbaa !4276
  %281 = and i64 %280, 4294967295, !dbg !4105
  %282 = icmp eq i64 %281, 1, !dbg !4105
  %283 = and i1 %278, %282, !dbg !4105
  %284 = and i1 %274, %283, !dbg !4105
  %285 = and i1 %270, %284, !dbg !4105
  br i1 %285, label %if_end106, label %assert_fail107, !dbg !4105, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %286 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !4105
  %287 = load i64, ptr %286, align 8, !dbg !4105
  %288 = icmp eq i64 %287, 0, !dbg !4105
  br i1 %288, label %assert_end110, label %assert_fail109, !dbg !4105, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %289(ptr nonnull @.str.1114), !dbg !4105
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %290(ptr nonnull @.str.1115), !dbg !4105
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %291 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !4105
  %292 = load i32, ptr %291, align 4, !dbg !4105
  %293 = icmp eq i32 %292, 1, !dbg !4105
  br i1 %293, label %assert_end112, label %assert_fail111, !dbg !4105, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %294(ptr nonnull @.str.1116), !dbg !4105
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %295 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !4105
  %296 = load i32, ptr %295, align 4, !dbg !4105
  %297 = icmp eq i32 %dev_id, %296, !dbg !4105
  br i1 %297, label %assert_end114, label %assert_fail113, !dbg !4105, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %298 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4105, !tbaa !19
  tail call void %298(ptr nonnull @.str.1117), !dbg !4105
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %299 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_compute_(i32 %dev_id, ptr %p0115, ptr %p1116, ptr %T_relu117, ptr %p2118), !dbg !4105
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4280 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4282, metadata !DIExpression()), !dbg !4288
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4283, metadata !DIExpression()), !dbg !4288
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4284, metadata !DIExpression()), !dbg !4288
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4285, metadata !DIExpression()), !dbg !4288
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4286, metadata !DIExpression()), !dbg !4288
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4287, metadata !DIExpression()), !dbg !4288
  %0 = icmp eq i32 %num_args, 4, !dbg !4288
  br i1 %0, label %assert_end, label %assert_fail, !dbg !4288, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %299, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !4288

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %1(ptr nonnull @.str.1119), !dbg !4288
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4288, !tbaa !4289
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4288
  %p1.code = load i32, ptr %2, align 4, !dbg !4288, !tbaa !4300
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4288
  %p2.code = load i32, ptr %3, align 4, !dbg !4288, !tbaa !4302
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !4288
  %T_relu.code = load i32, ptr %4, align 4, !dbg !4288, !tbaa !4305
  %p0 = load ptr, ptr %args, align 8, !dbg !4288
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4288
  %p1 = load ptr, ptr %5, align 8, !dbg !4288
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4288
  %p2 = load ptr, ptr %6, align 8, !dbg !4288
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !4288
  %T_relu = load ptr, ptr %7, align 8, !dbg !4288
  %p0115 = load ptr, ptr %p0, align 8, !dbg !4288
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !4288
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4288
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.shape = load ptr, ptr %8, align 8, !dbg !4288
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4288
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.strides = load ptr, ptr %9, align 8, !dbg !4288
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4288
  %dev_id = load i32, ptr %10, align 4, !dbg !4288
  %p1116 = load ptr, ptr %p1, align 8, !dbg !4288
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !4288
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4288
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.shape = load ptr, ptr %11, align 8, !dbg !4288
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4288
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.strides = load ptr, ptr %12, align 8, !dbg !4288
  %p2118 = load ptr, ptr %p2, align 8, !dbg !4288
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !4288
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !4288
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.shape = load ptr, ptr %13, align 8, !dbg !4288
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !4288
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.strides = load ptr, ptr %14, align 8, !dbg !4288
  %T_relu117 = load ptr, ptr %T_relu, align 8, !dbg !4288
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu117, i64 64) ], !dbg !4288
  %15 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !4288
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.shape = load ptr, ptr %15, align 8, !dbg !4288
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !4288
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.strides = load ptr, ptr %16, align 8, !dbg !4288
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !4288

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %17(ptr nonnull @.str.1120), !dbg !4288
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !4288

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %18(ptr nonnull @.str.1121), !dbg !4288
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !4288

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %19(ptr nonnull @.str.1122), !dbg !4288
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !4288

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %20(ptr nonnull @.str.1123), !dbg !4288
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4288
  %22 = load i32, ptr %21, align 4, !dbg !4288
  %23 = icmp eq i32 %22, 5, !dbg !4288
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !4288, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %24(ptr nonnull @.str.1124), !dbg !4288
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4288
  %26 = load i16, ptr %25, align 2, !dbg !4288
  %27 = icmp eq i16 %26, 1, !dbg !4288
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4288
  %29 = load i8, ptr %28, align 1, !dbg !4288
  %30 = icmp eq i8 %29, 32, !dbg !4288
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4288
  %32 = load i8, ptr %31, align 1, !dbg !4288
  %33 = icmp eq i8 %32, 2, !dbg !4288
  %34 = and i1 %30, %33, !dbg !4288
  %35 = and i1 %27, %34, !dbg !4288
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !4288, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %36(ptr nonnull @.str.1125), !dbg !4288
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.shape, align 8, !dbg !4288, !tbaa !4307
  %38 = and i64 %37, 4294967295, !dbg !4288
  %39 = icmp eq i64 %38, 1, !dbg !4288
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !4288, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %40(ptr nonnull @.str.1126), !dbg !4288
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.shape, i64 1, !dbg !4288
  %42 = load i64, ptr %41, align 8, !dbg !4288, !tbaa !4317
  %43 = and i64 %42, 4294967295, !dbg !4288
  %44 = icmp eq i64 %43, 2, !dbg !4288
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !4288, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %45(ptr nonnull @.str.1127), !dbg !4288
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.shape, i64 2, !dbg !4288
  %47 = load i64, ptr %46, align 8, !dbg !4288, !tbaa !4319
  %48 = and i64 %47, 4294967295, !dbg !4288
  %49 = icmp eq i64 %48, 14, !dbg !4288
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !4288, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %50(ptr nonnull @.str.1128), !dbg !4288
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.shape, i64 3, !dbg !4288
  %52 = load i64, ptr %51, align 8, !dbg !4288, !tbaa !4322
  %53 = and i64 %52, 4294967295, !dbg !4288
  %54 = icmp eq i64 %53, 14, !dbg !4288
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !4288, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %55(ptr nonnull @.str.1129), !dbg !4288
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.shape, i64 4, !dbg !4288
  %57 = load i64, ptr %56, align 8, !dbg !4288, !tbaa !4324
  %58 = and i64 %57, 4294967295, !dbg !4288
  %59 = icmp eq i64 %58, 512, !dbg !4288
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !4288, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %60(ptr nonnull @.str.1130), !dbg !4288
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.strides, null, !dbg !4288
  br i1 %.not, label %if_end, label %if_then, !dbg !4288, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.strides, i64 1, !dbg !4288
  %62 = load i64, ptr %61, align 8, !dbg !4288, !tbaa !4328
  %63 = and i64 %62, 4294967295, !dbg !4288
  %64 = icmp eq i64 %63, 100352, !dbg !4288
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.strides, i64 2, !dbg !4288
  %66 = load i64, ptr %65, align 8, !dbg !4288, !tbaa !4338
  %67 = and i64 %66, 4294967295, !dbg !4288
  %68 = icmp eq i64 %67, 7168, !dbg !4288
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.strides, i64 3, !dbg !4288
  %70 = load i64, ptr %69, align 8, !dbg !4288, !tbaa !4341
  %71 = and i64 %70, 4294967295, !dbg !4288
  %72 = icmp eq i64 %71, 512, !dbg !4288
  %73 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p0.strides, i64 4, !dbg !4288
  %74 = load i64, ptr %73, align 8, !dbg !4288, !tbaa !4343
  %75 = and i64 %74, 4294967295, !dbg !4288
  %76 = icmp eq i64 %75, 1, !dbg !4288
  %77 = and i1 %72, %76, !dbg !4288
  %78 = and i1 %68, %77, !dbg !4288
  %79 = and i1 %64, %78, !dbg !4288
  br i1 %79, label %if_end, label %assert_fail29, !dbg !4288, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4288
  %81 = load i64, ptr %80, align 8, !dbg !4288
  %82 = icmp eq i64 %81, 0, !dbg !4288
  br i1 %82, label %assert_end32, label %assert_fail31, !dbg !4288, !prof !18

assert_fail29:                                    ; preds = %if_then
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %83(ptr nonnull @.str.1131), !dbg !4288
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %84(ptr nonnull @.str.1132), !dbg !4288
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %85 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4288
  %86 = load i32, ptr %85, align 4, !dbg !4288
  %87 = icmp eq i32 %86, 1, !dbg !4288
  br i1 %87, label %assert_end34, label %assert_fail33, !dbg !4288, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %88(ptr nonnull @.str.1133), !dbg !4288
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %89 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4288
  %90 = load i32, ptr %89, align 4, !dbg !4288
  %91 = icmp eq i32 %90, 6, !dbg !4288
  br i1 %91, label %assert_end38, label %assert_fail35, !dbg !4288, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %92 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %92(ptr nonnull @.str.1134), !dbg !4288
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %93 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4288
  %94 = load i16, ptr %93, align 2, !dbg !4288
  %95 = icmp eq i16 %94, 1, !dbg !4288
  %96 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4288
  %97 = load i8, ptr %96, align 1, !dbg !4288
  %98 = icmp eq i8 %97, 32, !dbg !4288
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4288
  %100 = load i8, ptr %99, align 1, !dbg !4288
  %101 = icmp eq i8 %100, 2, !dbg !4288
  %102 = and i1 %98, %101, !dbg !4288
  %103 = and i1 %95, %102, !dbg !4288
  br i1 %103, label %assert_end40, label %assert_fail39, !dbg !4288, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %104(ptr nonnull @.str.1135), !dbg !4288
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %105 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.shape, align 8, !dbg !4288, !tbaa !4347
  %106 = and i64 %105, 4294967295, !dbg !4288
  %107 = icmp eq i64 %106, 4, !dbg !4288
  br i1 %107, label %assert_end42, label %assert_fail41, !dbg !4288, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %108(ptr nonnull @.str.1136), !dbg !4288
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.shape, i64 1, !dbg !4288
  %110 = load i64, ptr %109, align 8, !dbg !4288, !tbaa !4357
  %111 = and i64 %110, 4294967295, !dbg !4288
  %112 = icmp eq i64 %111, 2, !dbg !4288
  br i1 %112, label %assert_end44, label %assert_fail43, !dbg !4288, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %113(ptr nonnull @.str.1137), !dbg !4288
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.shape, i64 2, !dbg !4288
  %115 = load i64, ptr %114, align 8, !dbg !4288, !tbaa !4359
  %116 = and i64 %115, 4294967295, !dbg !4288
  %117 = icmp eq i64 %116, 1, !dbg !4288
  br i1 %117, label %assert_end46, label %assert_fail45, !dbg !4288, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %118(ptr nonnull @.str.1138), !dbg !4288
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.shape, i64 3, !dbg !4288
  %120 = load i64, ptr %119, align 8, !dbg !4288, !tbaa !4362
  %121 = and i64 %120, 4294967295, !dbg !4288
  %122 = icmp eq i64 %121, 1, !dbg !4288
  br i1 %122, label %assert_end48, label %assert_fail47, !dbg !4288, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %123(ptr nonnull @.str.1139), !dbg !4288
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.shape, i64 4, !dbg !4288
  %125 = load i64, ptr %124, align 8, !dbg !4288, !tbaa !4364
  %126 = and i64 %125, 4294967295, !dbg !4288
  %127 = icmp eq i64 %126, 512, !dbg !4288
  br i1 %127, label %assert_end50, label %assert_fail49, !dbg !4288, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %128(ptr nonnull @.str.1140), !dbg !4288
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %129 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.shape, i64 5, !dbg !4288
  %130 = load i64, ptr %129, align 8, !dbg !4288, !tbaa !4368
  %131 = and i64 %130, 4294967295, !dbg !4288
  %132 = icmp eq i64 %131, 64, !dbg !4288
  br i1 %132, label %assert_end52, label %assert_fail51, !dbg !4288, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %133 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %133(ptr nonnull @.str.1141), !dbg !4288
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.strides, null, !dbg !4288
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !4288, !prof !52

if_then53:                                        ; preds = %assert_end52
  %134 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.strides, align 8, !dbg !4288, !tbaa !4370
  %135 = and i64 %134, 4294967295, !dbg !4288
  %136 = icmp eq i64 %135, 65536, !dbg !4288
  %137 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.strides, i64 1, !dbg !4288
  %138 = load i64, ptr %137, align 8, !dbg !4288, !tbaa !4380
  %139 = and i64 %138, 4294967295, !dbg !4288
  %140 = icmp eq i64 %139, 32768, !dbg !4288
  %141 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.strides, i64 4, !dbg !4288
  %142 = load i64, ptr %141, align 8, !dbg !4288, !tbaa !4382
  %143 = and i64 %142, 4294967295, !dbg !4288
  %144 = icmp eq i64 %143, 64, !dbg !4288
  %145 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p1.strides, i64 5, !dbg !4288
  %146 = load i64, ptr %145, align 8, !dbg !4288, !tbaa !4386
  %147 = and i64 %146, 4294967295, !dbg !4288
  %148 = icmp eq i64 %147, 1, !dbg !4288
  %149 = and i1 %144, %148, !dbg !4288
  %150 = and i1 %140, %149, !dbg !4288
  %151 = and i1 %136, %150, !dbg !4288
  br i1 %151, label %if_end54, label %assert_fail55, !dbg !4288, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %152 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4288
  %153 = load i64, ptr %152, align 8, !dbg !4288
  %154 = icmp eq i64 %153, 0, !dbg !4288
  br i1 %154, label %assert_end58, label %assert_fail57, !dbg !4288, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %155(ptr nonnull @.str.1142), !dbg !4288
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %156(ptr nonnull @.str.1143), !dbg !4288
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %157 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4288
  %158 = load i32, ptr %157, align 4, !dbg !4288
  %159 = icmp eq i32 %158, 1, !dbg !4288
  br i1 %159, label %assert_end60, label %assert_fail59, !dbg !4288, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %160(ptr nonnull @.str.1144), !dbg !4288
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %161 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4288
  %162 = load i32, ptr %161, align 4, !dbg !4288
  %163 = icmp eq i32 %dev_id, %162, !dbg !4288
  br i1 %163, label %assert_end62, label %assert_fail61, !dbg !4288, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %164 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %164(ptr nonnull @.str.1145), !dbg !4288
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %165 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !4288
  %166 = load i32, ptr %165, align 4, !dbg !4288
  %167 = icmp eq i32 %166, 5, !dbg !4288
  br i1 %167, label %assert_end66, label %assert_fail63, !dbg !4288, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %168 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %168(ptr nonnull @.str.1146), !dbg !4288
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %169 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !4288
  %170 = load i16, ptr %169, align 2, !dbg !4288
  %171 = icmp eq i16 %170, 1, !dbg !4288
  %172 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !4288
  %173 = load i8, ptr %172, align 1, !dbg !4288
  %174 = icmp eq i8 %173, 32, !dbg !4288
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !4288
  %176 = load i8, ptr %175, align 1, !dbg !4288
  %177 = icmp eq i8 %176, 2, !dbg !4288
  %178 = and i1 %174, %177, !dbg !4288
  %179 = and i1 %171, %178, !dbg !4288
  br i1 %179, label %assert_end68, label %assert_fail67, !dbg !4288, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %180(ptr nonnull @.str.1147), !dbg !4288
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %181 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.shape, align 8, !dbg !4288, !tbaa !4388
  %182 = and i64 %181, 4294967295, !dbg !4288
  %183 = icmp eq i64 %182, 1, !dbg !4288
  br i1 %183, label %assert_end70, label %assert_fail69, !dbg !4288, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %184(ptr nonnull @.str.1148), !dbg !4288
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %185 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.shape, i64 1, !dbg !4288
  %186 = load i64, ptr %185, align 8, !dbg !4288, !tbaa !4398
  %187 = and i64 %186, 4294967295, !dbg !4288
  %188 = icmp eq i64 %187, 4, !dbg !4288
  br i1 %188, label %assert_end72, label %assert_fail71, !dbg !4288, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %189(ptr nonnull @.str.1149), !dbg !4288
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.shape, i64 2, !dbg !4288
  %191 = load i64, ptr %190, align 8, !dbg !4288, !tbaa !4400
  %192 = and i64 %191, 4294967295, !dbg !4288
  %193 = icmp eq i64 %192, 1, !dbg !4288
  br i1 %193, label %assert_end74, label %assert_fail73, !dbg !4288, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %194(ptr nonnull @.str.1150), !dbg !4288
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.shape, i64 3, !dbg !4288
  %196 = load i64, ptr %195, align 8, !dbg !4288, !tbaa !4403
  %197 = and i64 %196, 4294967295, !dbg !4288
  %198 = icmp eq i64 %197, 1, !dbg !4288
  br i1 %198, label %assert_end76, label %assert_fail75, !dbg !4288, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %199(ptr nonnull @.str.1151), !dbg !4288
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.shape, i64 4, !dbg !4288
  %201 = load i64, ptr %200, align 8, !dbg !4288, !tbaa !4405
  %202 = and i64 %201, 4294967295, !dbg !4288
  %203 = icmp eq i64 %202, 64, !dbg !4288
  br i1 %203, label %assert_end78, label %assert_fail77, !dbg !4288, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %204(ptr nonnull @.str.1152), !dbg !4288
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.strides, null, !dbg !4288
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !4288, !prof !52

if_then79:                                        ; preds = %assert_end78
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.strides, i64 1, !dbg !4288
  %206 = load i64, ptr %205, align 8, !dbg !4288, !tbaa !4409
  %207 = and i64 %206, 4294967295, !dbg !4288
  %208 = icmp eq i64 %207, 64, !dbg !4288
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.p2.strides, i64 4, !dbg !4288
  %210 = load i64, ptr %209, align 8, !dbg !4288, !tbaa !4419
  %211 = and i64 %210, 4294967295, !dbg !4288
  %212 = icmp eq i64 %211, 1, !dbg !4288
  %213 = and i1 %208, %212, !dbg !4288
  br i1 %213, label %if_end80, label %assert_fail81, !dbg !4288, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %214 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !4288
  %215 = load i64, ptr %214, align 8, !dbg !4288
  %216 = icmp eq i64 %215, 0, !dbg !4288
  br i1 %216, label %assert_end84, label %assert_fail83, !dbg !4288, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %217(ptr nonnull @.str.1153), !dbg !4288
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %218(ptr nonnull @.str.1154), !dbg !4288
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %219 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !4288
  %220 = load i32, ptr %219, align 4, !dbg !4288
  %221 = icmp eq i32 %220, 1, !dbg !4288
  br i1 %221, label %assert_end86, label %assert_fail85, !dbg !4288, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %222(ptr nonnull @.str.1155), !dbg !4288
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %223 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !4288
  %224 = load i32, ptr %223, align 4, !dbg !4288
  %225 = icmp eq i32 %dev_id, %224, !dbg !4288
  br i1 %225, label %assert_end88, label %assert_fail87, !dbg !4288, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %226 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %226(ptr nonnull @.str.1156), !dbg !4288
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %227 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !4288
  %228 = load i32, ptr %227, align 4, !dbg !4288
  %229 = icmp eq i32 %228, 5, !dbg !4288
  br i1 %229, label %assert_end92, label %assert_fail89, !dbg !4288, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %230 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %230(ptr nonnull @.str.1157), !dbg !4288
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %231 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !4288
  %232 = load i16, ptr %231, align 2, !dbg !4288
  %233 = icmp eq i16 %232, 1, !dbg !4288
  %234 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !4288
  %235 = load i8, ptr %234, align 1, !dbg !4288
  %236 = icmp eq i8 %235, 32, !dbg !4288
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !4288
  %238 = load i8, ptr %237, align 1, !dbg !4288
  %239 = icmp eq i8 %238, 2, !dbg !4288
  %240 = and i1 %236, %239, !dbg !4288
  %241 = and i1 %233, %240, !dbg !4288
  br i1 %241, label %assert_end94, label %assert_fail93, !dbg !4288, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %242(ptr nonnull @.str.1158), !dbg !4288
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %243 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.shape, align 8, !dbg !4288, !tbaa !4423
  %244 = and i64 %243, 4294967295, !dbg !4288
  %245 = icmp eq i64 %244, 1, !dbg !4288
  br i1 %245, label %assert_end96, label %assert_fail95, !dbg !4288, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %246(ptr nonnull @.str.1159), !dbg !4288
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.shape, i64 1, !dbg !4288
  %248 = load i64, ptr %247, align 8, !dbg !4288, !tbaa !4433
  %249 = and i64 %248, 4294967295, !dbg !4288
  %250 = icmp eq i64 %249, 4, !dbg !4288
  br i1 %250, label %assert_end98, label %assert_fail97, !dbg !4288, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %251(ptr nonnull @.str.1160), !dbg !4288
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.shape, i64 2, !dbg !4288
  %253 = load i64, ptr %252, align 8, !dbg !4288, !tbaa !4435
  %254 = and i64 %253, 4294967295, !dbg !4288
  %255 = icmp eq i64 %254, 14, !dbg !4288
  br i1 %255, label %assert_end100, label %assert_fail99, !dbg !4288, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %256(ptr nonnull @.str.1161), !dbg !4288
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.shape, i64 3, !dbg !4288
  %258 = load i64, ptr %257, align 8, !dbg !4288, !tbaa !4438
  %259 = and i64 %258, 4294967295, !dbg !4288
  %260 = icmp eq i64 %259, 14, !dbg !4288
  br i1 %260, label %assert_end102, label %assert_fail101, !dbg !4288, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %261(ptr nonnull @.str.1162), !dbg !4288
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.shape, i64 4, !dbg !4288
  %263 = load i64, ptr %262, align 8, !dbg !4288, !tbaa !4440
  %264 = and i64 %263, 4294967295, !dbg !4288
  %265 = icmp eq i64 %264, 64, !dbg !4288
  br i1 %265, label %assert_end104, label %assert_fail103, !dbg !4288, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %266(ptr nonnull @.str.1163), !dbg !4288
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.strides, null, !dbg !4288
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !4288, !prof !52

if_then105:                                       ; preds = %assert_end104
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.strides, i64 1, !dbg !4288
  %268 = load i64, ptr %267, align 8, !dbg !4288, !tbaa !4444
  %269 = and i64 %268, 4294967295, !dbg !4288
  %270 = icmp eq i64 %269, 12544, !dbg !4288
  %271 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.strides, i64 2, !dbg !4288
  %272 = load i64, ptr %271, align 8, !dbg !4288, !tbaa !4454
  %273 = and i64 %272, 4294967295, !dbg !4288
  %274 = icmp eq i64 %273, 896, !dbg !4288
  %275 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.strides, i64 3, !dbg !4288
  %276 = load i64, ptr %275, align 8, !dbg !4288, !tbaa !4457
  %277 = and i64 %276, 4294967295, !dbg !4288
  %278 = icmp eq i64 %277, 64, !dbg !4288
  %279 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10.T_relu.strides, i64 4, !dbg !4288
  %280 = load i64, ptr %279, align 8, !dbg !4288, !tbaa !4459
  %281 = and i64 %280, 4294967295, !dbg !4288
  %282 = icmp eq i64 %281, 1, !dbg !4288
  %283 = and i1 %278, %282, !dbg !4288
  %284 = and i1 %274, %283, !dbg !4288
  %285 = and i1 %270, %284, !dbg !4288
  br i1 %285, label %if_end106, label %assert_fail107, !dbg !4288, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %286 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !4288
  %287 = load i64, ptr %286, align 8, !dbg !4288
  %288 = icmp eq i64 %287, 0, !dbg !4288
  br i1 %288, label %assert_end110, label %assert_fail109, !dbg !4288, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %289(ptr nonnull @.str.1164), !dbg !4288
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %290(ptr nonnull @.str.1165), !dbg !4288
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %291 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !4288
  %292 = load i32, ptr %291, align 4, !dbg !4288
  %293 = icmp eq i32 %292, 1, !dbg !4288
  br i1 %293, label %assert_end112, label %assert_fail111, !dbg !4288, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %294(ptr nonnull @.str.1166), !dbg !4288
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %295 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !4288
  %296 = load i32, ptr %295, align 4, !dbg !4288
  %297 = icmp eq i32 %dev_id, %296, !dbg !4288
  br i1 %297, label %assert_end114, label %assert_fail113, !dbg !4288, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %298 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4288, !tbaa !19
  tail call void %298(ptr nonnull @.str.1167), !dbg !4288
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %299 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_compute_(i32 %dev_id, ptr %p0115, ptr %p1116, ptr %T_relu117, ptr %p2118), !dbg !4288
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4463 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4465, metadata !DIExpression()), !dbg !4471
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4466, metadata !DIExpression()), !dbg !4471
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4467, metadata !DIExpression()), !dbg !4471
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4468, metadata !DIExpression()), !dbg !4471
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4469, metadata !DIExpression()), !dbg !4471
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4470, metadata !DIExpression()), !dbg !4471
  %0 = icmp eq i32 %num_args, 4, !dbg !4471
  br i1 %0, label %assert_end, label %assert_fail, !dbg !4471, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %309, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !4471

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %1(ptr nonnull @.str.1169), !dbg !4471
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4471, !tbaa !4472
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4471
  %p1.code = load i32, ptr %2, align 4, !dbg !4471, !tbaa !4483
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4471
  %p2.code = load i32, ptr %3, align 4, !dbg !4471, !tbaa !4485
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !4471
  %T_relu.code = load i32, ptr %4, align 4, !dbg !4471, !tbaa !4488
  %p0 = load ptr, ptr %args, align 8, !dbg !4471
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4471
  %p1 = load ptr, ptr %5, align 8, !dbg !4471
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4471
  %p2 = load ptr, ptr %6, align 8, !dbg !4471
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !4471
  %T_relu = load ptr, ptr %7, align 8, !dbg !4471
  %p0115 = load ptr, ptr %p0, align 8, !dbg !4471
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !4471
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4471
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.shape = load ptr, ptr %8, align 8, !dbg !4471
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4471
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.strides = load ptr, ptr %9, align 8, !dbg !4471
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4471
  %dev_id = load i32, ptr %10, align 4, !dbg !4471
  %p1116 = load ptr, ptr %p1, align 8, !dbg !4471
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !4471
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4471
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.shape = load ptr, ptr %11, align 8, !dbg !4471
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4471
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.strides = load ptr, ptr %12, align 8, !dbg !4471
  %p2118 = load ptr, ptr %p2, align 8, !dbg !4471
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !4471
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !4471
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.shape = load ptr, ptr %13, align 8, !dbg !4471
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !4471
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.strides = load ptr, ptr %14, align 8, !dbg !4471
  %T_relu117 = load ptr, ptr %T_relu, align 8, !dbg !4471
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu117, i64 64) ], !dbg !4471
  %15 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !4471
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.shape = load ptr, ptr %15, align 8, !dbg !4471
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !4471
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.strides = load ptr, ptr %16, align 8, !dbg !4471
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !4471

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %17(ptr nonnull @.str.1170), !dbg !4471
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !4471

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %18(ptr nonnull @.str.1171), !dbg !4471
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !4471

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %19(ptr nonnull @.str.1172), !dbg !4471
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !4471

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %20(ptr nonnull @.str.1173), !dbg !4471
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4471
  %22 = load i32, ptr %21, align 4, !dbg !4471
  %23 = icmp eq i32 %22, 5, !dbg !4471
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !4471, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %24(ptr nonnull @.str.1174), !dbg !4471
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4471
  %26 = load i16, ptr %25, align 2, !dbg !4471
  %27 = icmp eq i16 %26, 1, !dbg !4471
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4471
  %29 = load i8, ptr %28, align 1, !dbg !4471
  %30 = icmp eq i8 %29, 32, !dbg !4471
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4471
  %32 = load i8, ptr %31, align 1, !dbg !4471
  %33 = icmp eq i8 %32, 2, !dbg !4471
  %34 = and i1 %30, %33, !dbg !4471
  %35 = and i1 %27, %34, !dbg !4471
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !4471, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %36(ptr nonnull @.str.1175), !dbg !4471
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.shape, align 8, !dbg !4471, !tbaa !4490
  %38 = and i64 %37, 4294967295, !dbg !4471
  %39 = icmp eq i64 %38, 1, !dbg !4471
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !4471, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %40(ptr nonnull @.str.1176), !dbg !4471
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.shape, i64 1, !dbg !4471
  %42 = load i64, ptr %41, align 8, !dbg !4471, !tbaa !4500
  %43 = and i64 %42, 4294967295, !dbg !4471
  %44 = icmp eq i64 %43, 2, !dbg !4471
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !4471, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %45(ptr nonnull @.str.1177), !dbg !4471
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.shape, i64 2, !dbg !4471
  %47 = load i64, ptr %46, align 8, !dbg !4471, !tbaa !4502
  %48 = and i64 %47, 4294967295, !dbg !4471
  %49 = icmp eq i64 %48, 14, !dbg !4471
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !4471, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %50(ptr nonnull @.str.1178), !dbg !4471
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.shape, i64 3, !dbg !4471
  %52 = load i64, ptr %51, align 8, !dbg !4471, !tbaa !4505
  %53 = and i64 %52, 4294967295, !dbg !4471
  %54 = icmp eq i64 %53, 14, !dbg !4471
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !4471, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %55(ptr nonnull @.str.1179), !dbg !4471
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.shape, i64 4, !dbg !4471
  %57 = load i64, ptr %56, align 8, !dbg !4471, !tbaa !4507
  %58 = and i64 %57, 4294967295, !dbg !4471
  %59 = icmp eq i64 %58, 128, !dbg !4471
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !4471, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %60(ptr nonnull @.str.1180), !dbg !4471
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.strides, null, !dbg !4471
  br i1 %.not, label %if_end, label %if_then, !dbg !4471, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.strides, i64 1, !dbg !4471
  %62 = load i64, ptr %61, align 8, !dbg !4471, !tbaa !4511
  %63 = and i64 %62, 4294967295, !dbg !4471
  %64 = icmp eq i64 %63, 25088, !dbg !4471
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.strides, i64 2, !dbg !4471
  %66 = load i64, ptr %65, align 8, !dbg !4471, !tbaa !4521
  %67 = and i64 %66, 4294967295, !dbg !4471
  %68 = icmp eq i64 %67, 1792, !dbg !4471
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.strides, i64 3, !dbg !4471
  %70 = load i64, ptr %69, align 8, !dbg !4471, !tbaa !4524
  %71 = and i64 %70, 4294967295, !dbg !4471
  %72 = icmp eq i64 %71, 128, !dbg !4471
  %73 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p0.strides, i64 4, !dbg !4471
  %74 = load i64, ptr %73, align 8, !dbg !4471, !tbaa !4526
  %75 = and i64 %74, 4294967295, !dbg !4471
  %76 = icmp eq i64 %75, 1, !dbg !4471
  %77 = and i1 %72, %76, !dbg !4471
  %78 = and i1 %68, %77, !dbg !4471
  %79 = and i1 %64, %78, !dbg !4471
  br i1 %79, label %if_end, label %assert_fail29, !dbg !4471, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4471
  %81 = load i64, ptr %80, align 8, !dbg !4471
  %82 = icmp eq i64 %81, 0, !dbg !4471
  br i1 %82, label %assert_end32, label %assert_fail31, !dbg !4471, !prof !18

assert_fail29:                                    ; preds = %if_then
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %83(ptr nonnull @.str.1181), !dbg !4471
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %84(ptr nonnull @.str.1182), !dbg !4471
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %85 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4471
  %86 = load i32, ptr %85, align 4, !dbg !4471
  %87 = icmp eq i32 %86, 1, !dbg !4471
  br i1 %87, label %assert_end34, label %assert_fail33, !dbg !4471, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %88(ptr nonnull @.str.1183), !dbg !4471
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %89 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4471
  %90 = load i32, ptr %89, align 4, !dbg !4471
  %91 = icmp eq i32 %90, 6, !dbg !4471
  br i1 %91, label %assert_end38, label %assert_fail35, !dbg !4471, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %92 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %92(ptr nonnull @.str.1184), !dbg !4471
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %93 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4471
  %94 = load i16, ptr %93, align 2, !dbg !4471
  %95 = icmp eq i16 %94, 1, !dbg !4471
  %96 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4471
  %97 = load i8, ptr %96, align 1, !dbg !4471
  %98 = icmp eq i8 %97, 32, !dbg !4471
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4471
  %100 = load i8, ptr %99, align 1, !dbg !4471
  %101 = icmp eq i8 %100, 2, !dbg !4471
  %102 = and i1 %98, %101, !dbg !4471
  %103 = and i1 %95, %102, !dbg !4471
  br i1 %103, label %assert_end40, label %assert_fail39, !dbg !4471, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %104(ptr nonnull @.str.1185), !dbg !4471
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %105 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.shape, align 8, !dbg !4471, !tbaa !4530
  %106 = and i64 %105, 4294967295, !dbg !4471
  %107 = icmp eq i64 %106, 16, !dbg !4471
  br i1 %107, label %assert_end42, label %assert_fail41, !dbg !4471, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %108(ptr nonnull @.str.1186), !dbg !4471
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.shape, i64 1, !dbg !4471
  %110 = load i64, ptr %109, align 8, !dbg !4471, !tbaa !4540
  %111 = and i64 %110, 4294967295, !dbg !4471
  %112 = icmp eq i64 %111, 2, !dbg !4471
  br i1 %112, label %assert_end44, label %assert_fail43, !dbg !4471, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %113(ptr nonnull @.str.1187), !dbg !4471
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.shape, i64 2, !dbg !4471
  %115 = load i64, ptr %114, align 8, !dbg !4471, !tbaa !4542
  %116 = and i64 %115, 4294967295, !dbg !4471
  %117 = icmp eq i64 %116, 3, !dbg !4471
  br i1 %117, label %assert_end46, label %assert_fail45, !dbg !4471, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %118(ptr nonnull @.str.1188), !dbg !4471
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.shape, i64 3, !dbg !4471
  %120 = load i64, ptr %119, align 8, !dbg !4471, !tbaa !4545
  %121 = and i64 %120, 4294967295, !dbg !4471
  %122 = icmp eq i64 %121, 3, !dbg !4471
  br i1 %122, label %assert_end48, label %assert_fail47, !dbg !4471, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %123(ptr nonnull @.str.1189), !dbg !4471
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.shape, i64 4, !dbg !4471
  %125 = load i64, ptr %124, align 8, !dbg !4471, !tbaa !4547
  %126 = and i64 %125, 4294967295, !dbg !4471
  %127 = icmp eq i64 %126, 128, !dbg !4471
  br i1 %127, label %assert_end50, label %assert_fail49, !dbg !4471, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %128(ptr nonnull @.str.1190), !dbg !4471
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %129 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.shape, i64 5, !dbg !4471
  %130 = load i64, ptr %129, align 8, !dbg !4471, !tbaa !4551
  %131 = and i64 %130, 4294967295, !dbg !4471
  %132 = icmp eq i64 %131, 16, !dbg !4471
  br i1 %132, label %assert_end52, label %assert_fail51, !dbg !4471, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %133 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %133(ptr nonnull @.str.1191), !dbg !4471
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.strides, null, !dbg !4471
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !4471, !prof !52

if_then53:                                        ; preds = %assert_end52
  %134 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.strides, align 8, !dbg !4471, !tbaa !4553
  %135 = and i64 %134, 4294967295, !dbg !4471
  %136 = icmp eq i64 %135, 36864, !dbg !4471
  %137 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.strides, i64 1, !dbg !4471
  %138 = load i64, ptr %137, align 8, !dbg !4471, !tbaa !4563
  %139 = and i64 %138, 4294967295, !dbg !4471
  %140 = icmp eq i64 %139, 18432, !dbg !4471
  %141 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.strides, i64 2, !dbg !4471
  %142 = load i64, ptr %141, align 8, !dbg !4471, !tbaa !4565
  %143 = and i64 %142, 4294967295, !dbg !4471
  %144 = icmp eq i64 %143, 6144, !dbg !4471
  %145 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.strides, i64 3, !dbg !4471
  %146 = load i64, ptr %145, align 8, !dbg !4471, !tbaa !4568
  %147 = and i64 %146, 4294967295, !dbg !4471
  %148 = icmp eq i64 %147, 2048, !dbg !4471
  %149 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.strides, i64 4, !dbg !4471
  %150 = load i64, ptr %149, align 8, !dbg !4471, !tbaa !4570
  %151 = and i64 %150, 4294967295, !dbg !4471
  %152 = icmp eq i64 %151, 16, !dbg !4471
  %153 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p1.strides, i64 5, !dbg !4471
  %154 = load i64, ptr %153, align 8, !dbg !4471, !tbaa !4574
  %155 = and i64 %154, 4294967295, !dbg !4471
  %156 = icmp eq i64 %155, 1, !dbg !4471
  %157 = and i1 %152, %156, !dbg !4471
  %158 = and i1 %148, %157, !dbg !4471
  %159 = and i1 %144, %158, !dbg !4471
  %160 = and i1 %140, %159, !dbg !4471
  %161 = and i1 %136, %160, !dbg !4471
  br i1 %161, label %if_end54, label %assert_fail55, !dbg !4471, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4471
  %163 = load i64, ptr %162, align 8, !dbg !4471
  %164 = icmp eq i64 %163, 0, !dbg !4471
  br i1 %164, label %assert_end58, label %assert_fail57, !dbg !4471, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %165(ptr nonnull @.str.1192), !dbg !4471
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %166(ptr nonnull @.str.1193), !dbg !4471
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %167 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4471
  %168 = load i32, ptr %167, align 4, !dbg !4471
  %169 = icmp eq i32 %168, 1, !dbg !4471
  br i1 %169, label %assert_end60, label %assert_fail59, !dbg !4471, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %170(ptr nonnull @.str.1194), !dbg !4471
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %171 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4471
  %172 = load i32, ptr %171, align 4, !dbg !4471
  %173 = icmp eq i32 %dev_id, %172, !dbg !4471
  br i1 %173, label %assert_end62, label %assert_fail61, !dbg !4471, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %174(ptr nonnull @.str.1195), !dbg !4471
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !4471
  %176 = load i32, ptr %175, align 4, !dbg !4471
  %177 = icmp eq i32 %176, 5, !dbg !4471
  br i1 %177, label %assert_end66, label %assert_fail63, !dbg !4471, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %178(ptr nonnull @.str.1196), !dbg !4471
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %179 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !4471
  %180 = load i16, ptr %179, align 2, !dbg !4471
  %181 = icmp eq i16 %180, 1, !dbg !4471
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !4471
  %183 = load i8, ptr %182, align 1, !dbg !4471
  %184 = icmp eq i8 %183, 32, !dbg !4471
  %185 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !4471
  %186 = load i8, ptr %185, align 1, !dbg !4471
  %187 = icmp eq i8 %186, 2, !dbg !4471
  %188 = and i1 %184, %187, !dbg !4471
  %189 = and i1 %181, %188, !dbg !4471
  br i1 %189, label %assert_end68, label %assert_fail67, !dbg !4471, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %190 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %190(ptr nonnull @.str.1197), !dbg !4471
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %191 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.shape, align 8, !dbg !4471, !tbaa !4576
  %192 = and i64 %191, 4294967295, !dbg !4471
  %193 = icmp eq i64 %192, 1, !dbg !4471
  br i1 %193, label %assert_end70, label %assert_fail69, !dbg !4471, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %194(ptr nonnull @.str.1198), !dbg !4471
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.shape, i64 1, !dbg !4471
  %196 = load i64, ptr %195, align 8, !dbg !4471, !tbaa !4586
  %197 = and i64 %196, 4294967295, !dbg !4471
  %198 = icmp eq i64 %197, 16, !dbg !4471
  br i1 %198, label %assert_end72, label %assert_fail71, !dbg !4471, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %199(ptr nonnull @.str.1199), !dbg !4471
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.shape, i64 2, !dbg !4471
  %201 = load i64, ptr %200, align 8, !dbg !4471, !tbaa !4588
  %202 = and i64 %201, 4294967295, !dbg !4471
  %203 = icmp eq i64 %202, 1, !dbg !4471
  br i1 %203, label %assert_end74, label %assert_fail73, !dbg !4471, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %204(ptr nonnull @.str.1200), !dbg !4471
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.shape, i64 3, !dbg !4471
  %206 = load i64, ptr %205, align 8, !dbg !4471, !tbaa !4591
  %207 = and i64 %206, 4294967295, !dbg !4471
  %208 = icmp eq i64 %207, 1, !dbg !4471
  br i1 %208, label %assert_end76, label %assert_fail75, !dbg !4471, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %209(ptr nonnull @.str.1201), !dbg !4471
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %210 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.shape, i64 4, !dbg !4471
  %211 = load i64, ptr %210, align 8, !dbg !4471, !tbaa !4593
  %212 = and i64 %211, 4294967295, !dbg !4471
  %213 = icmp eq i64 %212, 16, !dbg !4471
  br i1 %213, label %assert_end78, label %assert_fail77, !dbg !4471, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %214 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %214(ptr nonnull @.str.1202), !dbg !4471
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.strides, null, !dbg !4471
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !4471, !prof !52

if_then79:                                        ; preds = %assert_end78
  %215 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.strides, i64 1, !dbg !4471
  %216 = load i64, ptr %215, align 8, !dbg !4471, !tbaa !4597
  %217 = and i64 %216, 4294967295, !dbg !4471
  %218 = icmp eq i64 %217, 16, !dbg !4471
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.p2.strides, i64 4, !dbg !4471
  %220 = load i64, ptr %219, align 8, !dbg !4471, !tbaa !4607
  %221 = and i64 %220, 4294967295, !dbg !4471
  %222 = icmp eq i64 %221, 1, !dbg !4471
  %223 = and i1 %218, %222, !dbg !4471
  br i1 %223, label %if_end80, label %assert_fail81, !dbg !4471, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %224 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !4471
  %225 = load i64, ptr %224, align 8, !dbg !4471
  %226 = icmp eq i64 %225, 0, !dbg !4471
  br i1 %226, label %assert_end84, label %assert_fail83, !dbg !4471, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %227(ptr nonnull @.str.1203), !dbg !4471
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %228 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %228(ptr nonnull @.str.1204), !dbg !4471
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %229 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !4471
  %230 = load i32, ptr %229, align 4, !dbg !4471
  %231 = icmp eq i32 %230, 1, !dbg !4471
  br i1 %231, label %assert_end86, label %assert_fail85, !dbg !4471, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %232 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %232(ptr nonnull @.str.1205), !dbg !4471
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %233 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !4471
  %234 = load i32, ptr %233, align 4, !dbg !4471
  %235 = icmp eq i32 %dev_id, %234, !dbg !4471
  br i1 %235, label %assert_end88, label %assert_fail87, !dbg !4471, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %236(ptr nonnull @.str.1206), !dbg !4471
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !4471
  %238 = load i32, ptr %237, align 4, !dbg !4471
  %239 = icmp eq i32 %238, 5, !dbg !4471
  br i1 %239, label %assert_end92, label %assert_fail89, !dbg !4471, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %240 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %240(ptr nonnull @.str.1207), !dbg !4471
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %241 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !4471
  %242 = load i16, ptr %241, align 2, !dbg !4471
  %243 = icmp eq i16 %242, 1, !dbg !4471
  %244 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !4471
  %245 = load i8, ptr %244, align 1, !dbg !4471
  %246 = icmp eq i8 %245, 32, !dbg !4471
  %247 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !4471
  %248 = load i8, ptr %247, align 1, !dbg !4471
  %249 = icmp eq i8 %248, 2, !dbg !4471
  %250 = and i1 %246, %249, !dbg !4471
  %251 = and i1 %243, %250, !dbg !4471
  br i1 %251, label %assert_end94, label %assert_fail93, !dbg !4471, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %252 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %252(ptr nonnull @.str.1208), !dbg !4471
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %253 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.shape, align 8, !dbg !4471, !tbaa !4611
  %254 = and i64 %253, 4294967295, !dbg !4471
  %255 = icmp eq i64 %254, 1, !dbg !4471
  br i1 %255, label %assert_end96, label %assert_fail95, !dbg !4471, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %256(ptr nonnull @.str.1209), !dbg !4471
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.shape, i64 1, !dbg !4471
  %258 = load i64, ptr %257, align 8, !dbg !4471, !tbaa !4621
  %259 = and i64 %258, 4294967295, !dbg !4471
  %260 = icmp eq i64 %259, 16, !dbg !4471
  br i1 %260, label %assert_end98, label %assert_fail97, !dbg !4471, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %261(ptr nonnull @.str.1210), !dbg !4471
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.shape, i64 2, !dbg !4471
  %263 = load i64, ptr %262, align 8, !dbg !4471, !tbaa !4623
  %264 = and i64 %263, 4294967295, !dbg !4471
  %265 = icmp eq i64 %264, 14, !dbg !4471
  br i1 %265, label %assert_end100, label %assert_fail99, !dbg !4471, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %266(ptr nonnull @.str.1211), !dbg !4471
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.shape, i64 3, !dbg !4471
  %268 = load i64, ptr %267, align 8, !dbg !4471, !tbaa !4626
  %269 = and i64 %268, 4294967295, !dbg !4471
  %270 = icmp eq i64 %269, 14, !dbg !4471
  br i1 %270, label %assert_end102, label %assert_fail101, !dbg !4471, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %271 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %271(ptr nonnull @.str.1212), !dbg !4471
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %272 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.shape, i64 4, !dbg !4471
  %273 = load i64, ptr %272, align 8, !dbg !4471, !tbaa !4628
  %274 = and i64 %273, 4294967295, !dbg !4471
  %275 = icmp eq i64 %274, 16, !dbg !4471
  br i1 %275, label %assert_end104, label %assert_fail103, !dbg !4471, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %276 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %276(ptr nonnull @.str.1213), !dbg !4471
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.strides, null, !dbg !4471
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !4471, !prof !52

if_then105:                                       ; preds = %assert_end104
  %277 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.strides, i64 1, !dbg !4471
  %278 = load i64, ptr %277, align 8, !dbg !4471, !tbaa !4632
  %279 = and i64 %278, 4294967295, !dbg !4471
  %280 = icmp eq i64 %279, 3136, !dbg !4471
  %281 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.strides, i64 2, !dbg !4471
  %282 = load i64, ptr %281, align 8, !dbg !4471, !tbaa !4642
  %283 = and i64 %282, 4294967295, !dbg !4471
  %284 = icmp eq i64 %283, 224, !dbg !4471
  %285 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.strides, i64 3, !dbg !4471
  %286 = load i64, ptr %285, align 8, !dbg !4471, !tbaa !4645
  %287 = and i64 %286, 4294967295, !dbg !4471
  %288 = icmp eq i64 %287, 16, !dbg !4471
  %289 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11.T_relu.strides, i64 4, !dbg !4471
  %290 = load i64, ptr %289, align 8, !dbg !4471, !tbaa !4647
  %291 = and i64 %290, 4294967295, !dbg !4471
  %292 = icmp eq i64 %291, 1, !dbg !4471
  %293 = and i1 %288, %292, !dbg !4471
  %294 = and i1 %284, %293, !dbg !4471
  %295 = and i1 %280, %294, !dbg !4471
  br i1 %295, label %if_end106, label %assert_fail107, !dbg !4471, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %296 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !4471
  %297 = load i64, ptr %296, align 8, !dbg !4471
  %298 = icmp eq i64 %297, 0, !dbg !4471
  br i1 %298, label %assert_end110, label %assert_fail109, !dbg !4471, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %299(ptr nonnull @.str.1214), !dbg !4471
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %300 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %300(ptr nonnull @.str.1215), !dbg !4471
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %301 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !4471
  %302 = load i32, ptr %301, align 4, !dbg !4471
  %303 = icmp eq i32 %302, 1, !dbg !4471
  br i1 %303, label %assert_end112, label %assert_fail111, !dbg !4471, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %304 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %304(ptr nonnull @.str.1216), !dbg !4471
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %305 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !4471
  %306 = load i32, ptr %305, align 4, !dbg !4471
  %307 = icmp eq i32 %dev_id, %306, !dbg !4471
  br i1 %307, label %assert_end114, label %assert_fail113, !dbg !4471, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %308 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4471, !tbaa !19
  tail call void %308(ptr nonnull @.str.1217), !dbg !4471
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %309 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_compute_(i32 %dev_id, ptr %p0115, ptr %p1116, ptr %T_relu117, ptr %p2118), !dbg !4471
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4651 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4653, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4654, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4655, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4656, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4657, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4658, metadata !DIExpression()), !dbg !4659
  %0 = icmp eq i32 %num_args, 4, !dbg !4659
  br i1 %0, label %assert_end, label %assert_fail, !dbg !4659, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %299, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !4659

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %1(ptr nonnull @.str.1220), !dbg !4659
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4659, !tbaa !4660
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4659
  %p1.code = load i32, ptr %2, align 4, !dbg !4659, !tbaa !4671
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4659
  %p2.code = load i32, ptr %3, align 4, !dbg !4659, !tbaa !4673
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !4659
  %T_relu.code = load i32, ptr %4, align 4, !dbg !4659, !tbaa !4676
  %p0 = load ptr, ptr %args, align 8, !dbg !4659
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4659
  %p1 = load ptr, ptr %5, align 8, !dbg !4659
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4659
  %p2 = load ptr, ptr %6, align 8, !dbg !4659
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !4659
  %T_relu = load ptr, ptr %7, align 8, !dbg !4659
  %p0115 = load ptr, ptr %p0, align 8, !dbg !4659
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !4659
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4659
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.shape = load ptr, ptr %8, align 8, !dbg !4659
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4659
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.strides = load ptr, ptr %9, align 8, !dbg !4659
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4659
  %dev_id = load i32, ptr %10, align 4, !dbg !4659
  %p1116 = load ptr, ptr %p1, align 8, !dbg !4659
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !4659
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4659
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.shape = load ptr, ptr %11, align 8, !dbg !4659
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4659
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.strides = load ptr, ptr %12, align 8, !dbg !4659
  %p2118 = load ptr, ptr %p2, align 8, !dbg !4659
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !4659
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !4659
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.shape = load ptr, ptr %13, align 8, !dbg !4659
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !4659
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.strides = load ptr, ptr %14, align 8, !dbg !4659
  %T_relu117 = load ptr, ptr %T_relu, align 8, !dbg !4659
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu117, i64 64) ], !dbg !4659
  %15 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !4659
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.shape = load ptr, ptr %15, align 8, !dbg !4659
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !4659
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.strides = load ptr, ptr %16, align 8, !dbg !4659
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !4659

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %17(ptr nonnull @.str.1221), !dbg !4659
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !4659

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %18(ptr nonnull @.str.1222), !dbg !4659
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !4659

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %19(ptr nonnull @.str.1223), !dbg !4659
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !4659

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %20(ptr nonnull @.str.1224), !dbg !4659
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4659
  %22 = load i32, ptr %21, align 4, !dbg !4659
  %23 = icmp eq i32 %22, 5, !dbg !4659
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !4659, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %24(ptr nonnull @.str.1225), !dbg !4659
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4659
  %26 = load i16, ptr %25, align 2, !dbg !4659
  %27 = icmp eq i16 %26, 1, !dbg !4659
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4659
  %29 = load i8, ptr %28, align 1, !dbg !4659
  %30 = icmp eq i8 %29, 32, !dbg !4659
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4659
  %32 = load i8, ptr %31, align 1, !dbg !4659
  %33 = icmp eq i8 %32, 2, !dbg !4659
  %34 = and i1 %30, %33, !dbg !4659
  %35 = and i1 %27, %34, !dbg !4659
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !4659, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %36(ptr nonnull @.str.1226), !dbg !4659
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.shape, align 8, !dbg !4659, !tbaa !4678
  %38 = and i64 %37, 4294967295, !dbg !4659
  %39 = icmp eq i64 %38, 1, !dbg !4659
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !4659, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %40(ptr nonnull @.str.1227), !dbg !4659
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.shape, i64 1, !dbg !4659
  %42 = load i64, ptr %41, align 8, !dbg !4659, !tbaa !4688
  %43 = and i64 %42, 4294967295, !dbg !4659
  %44 = icmp eq i64 %43, 256, !dbg !4659
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !4659, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %45(ptr nonnull @.str.1228), !dbg !4659
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.shape, i64 2, !dbg !4659
  %47 = load i64, ptr %46, align 8, !dbg !4659, !tbaa !4690
  %48 = and i64 %47, 4294967295, !dbg !4659
  %49 = icmp eq i64 %48, 14, !dbg !4659
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !4659, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %50(ptr nonnull @.str.1229), !dbg !4659
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.shape, i64 3, !dbg !4659
  %52 = load i64, ptr %51, align 8, !dbg !4659, !tbaa !4693
  %53 = and i64 %52, 4294967295, !dbg !4659
  %54 = icmp eq i64 %53, 14, !dbg !4659
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !4659, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %55(ptr nonnull @.str.1230), !dbg !4659
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.shape, i64 4, !dbg !4659
  %57 = load i64, ptr %56, align 8, !dbg !4659, !tbaa !4695
  %58 = and i64 %57, 4294967295, !dbg !4659
  %59 = icmp eq i64 %58, 4, !dbg !4659
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !4659, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %60(ptr nonnull @.str.1231), !dbg !4659
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.strides, null, !dbg !4659
  br i1 %.not, label %if_end, label %if_then, !dbg !4659, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.strides, i64 1, !dbg !4659
  %62 = load i64, ptr %61, align 8, !dbg !4659, !tbaa !4699
  %63 = and i64 %62, 4294967295, !dbg !4659
  %64 = icmp eq i64 %63, 784, !dbg !4659
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.strides, i64 2, !dbg !4659
  %66 = load i64, ptr %65, align 8, !dbg !4659, !tbaa !4709
  %67 = and i64 %66, 4294967295, !dbg !4659
  %68 = icmp eq i64 %67, 56, !dbg !4659
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.strides, i64 3, !dbg !4659
  %70 = load i64, ptr %69, align 8, !dbg !4659, !tbaa !4712
  %71 = and i64 %70, 4294967295, !dbg !4659
  %72 = icmp eq i64 %71, 4, !dbg !4659
  %73 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p0.strides, i64 4, !dbg !4659
  %74 = load i64, ptr %73, align 8, !dbg !4659, !tbaa !4714
  %75 = and i64 %74, 4294967295, !dbg !4659
  %76 = icmp eq i64 %75, 1, !dbg !4659
  %77 = and i1 %72, %76, !dbg !4659
  %78 = and i1 %68, %77, !dbg !4659
  %79 = and i1 %64, %78, !dbg !4659
  br i1 %79, label %if_end, label %assert_fail29, !dbg !4659, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4659
  %81 = load i64, ptr %80, align 8, !dbg !4659
  %82 = icmp eq i64 %81, 0, !dbg !4659
  br i1 %82, label %assert_end32, label %assert_fail31, !dbg !4659, !prof !18

assert_fail29:                                    ; preds = %if_then
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %83(ptr nonnull @.str.1232), !dbg !4659
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %84(ptr nonnull @.str.1233), !dbg !4659
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %85 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4659
  %86 = load i32, ptr %85, align 4, !dbg !4659
  %87 = icmp eq i32 %86, 1, !dbg !4659
  br i1 %87, label %assert_end34, label %assert_fail33, !dbg !4659, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %88(ptr nonnull @.str.1234), !dbg !4659
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %89 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4659
  %90 = load i32, ptr %89, align 4, !dbg !4659
  %91 = icmp eq i32 %90, 6, !dbg !4659
  br i1 %91, label %assert_end38, label %assert_fail35, !dbg !4659, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %92 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %92(ptr nonnull @.str.1235), !dbg !4659
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %93 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4659
  %94 = load i16, ptr %93, align 2, !dbg !4659
  %95 = icmp eq i16 %94, 1, !dbg !4659
  %96 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4659
  %97 = load i8, ptr %96, align 1, !dbg !4659
  %98 = icmp eq i8 %97, 32, !dbg !4659
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4659
  %100 = load i8, ptr %99, align 1, !dbg !4659
  %101 = icmp eq i8 %100, 2, !dbg !4659
  %102 = and i1 %98, %101, !dbg !4659
  %103 = and i1 %95, %102, !dbg !4659
  br i1 %103, label %assert_end40, label %assert_fail39, !dbg !4659, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %104(ptr nonnull @.str.1236), !dbg !4659
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %105 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.shape, align 8, !dbg !4659, !tbaa !4718
  %106 = and i64 %105, 4294967295, !dbg !4659
  %107 = icmp eq i64 %106, 128, !dbg !4659
  br i1 %107, label %assert_end42, label %assert_fail41, !dbg !4659, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %108(ptr nonnull @.str.1237), !dbg !4659
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.shape, i64 1, !dbg !4659
  %110 = load i64, ptr %109, align 8, !dbg !4659, !tbaa !4728
  %111 = and i64 %110, 4294967295, !dbg !4659
  %112 = icmp eq i64 %111, 256, !dbg !4659
  br i1 %112, label %assert_end44, label %assert_fail43, !dbg !4659, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %113(ptr nonnull @.str.1238), !dbg !4659
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.shape, i64 2, !dbg !4659
  %115 = load i64, ptr %114, align 8, !dbg !4659, !tbaa !4730
  %116 = and i64 %115, 4294967295, !dbg !4659
  %117 = icmp eq i64 %116, 1, !dbg !4659
  br i1 %117, label %assert_end46, label %assert_fail45, !dbg !4659, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %118(ptr nonnull @.str.1239), !dbg !4659
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.shape, i64 3, !dbg !4659
  %120 = load i64, ptr %119, align 8, !dbg !4659, !tbaa !4733
  %121 = and i64 %120, 4294967295, !dbg !4659
  %122 = icmp eq i64 %121, 1, !dbg !4659
  br i1 %122, label %assert_end48, label %assert_fail47, !dbg !4659, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %123(ptr nonnull @.str.1240), !dbg !4659
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.shape, i64 4, !dbg !4659
  %125 = load i64, ptr %124, align 8, !dbg !4659, !tbaa !4735
  %126 = and i64 %125, 4294967295, !dbg !4659
  %127 = icmp eq i64 %126, 4, !dbg !4659
  br i1 %127, label %assert_end50, label %assert_fail49, !dbg !4659, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %128(ptr nonnull @.str.1241), !dbg !4659
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %129 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.shape, i64 5, !dbg !4659
  %130 = load i64, ptr %129, align 8, !dbg !4659, !tbaa !4739
  %131 = and i64 %130, 4294967295, !dbg !4659
  %132 = icmp eq i64 %131, 4, !dbg !4659
  br i1 %132, label %assert_end52, label %assert_fail51, !dbg !4659, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %133 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %133(ptr nonnull @.str.1242), !dbg !4659
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.strides, null, !dbg !4659
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !4659, !prof !52

if_then53:                                        ; preds = %assert_end52
  %134 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.strides, align 8, !dbg !4659, !tbaa !4741
  %135 = and i64 %134, 4294967295, !dbg !4659
  %136 = icmp eq i64 %135, 4096, !dbg !4659
  %137 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.strides, i64 1, !dbg !4659
  %138 = load i64, ptr %137, align 8, !dbg !4659, !tbaa !4751
  %139 = and i64 %138, 4294967295, !dbg !4659
  %140 = icmp eq i64 %139, 16, !dbg !4659
  %141 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.strides, i64 4, !dbg !4659
  %142 = load i64, ptr %141, align 8, !dbg !4659, !tbaa !4753
  %143 = and i64 %142, 4294967295, !dbg !4659
  %144 = icmp eq i64 %143, 4, !dbg !4659
  %145 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p1.strides, i64 5, !dbg !4659
  %146 = load i64, ptr %145, align 8, !dbg !4659, !tbaa !4757
  %147 = and i64 %146, 4294967295, !dbg !4659
  %148 = icmp eq i64 %147, 1, !dbg !4659
  %149 = and i1 %144, %148, !dbg !4659
  %150 = and i1 %140, %149, !dbg !4659
  %151 = and i1 %136, %150, !dbg !4659
  br i1 %151, label %if_end54, label %assert_fail55, !dbg !4659, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %152 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4659
  %153 = load i64, ptr %152, align 8, !dbg !4659
  %154 = icmp eq i64 %153, 0, !dbg !4659
  br i1 %154, label %assert_end58, label %assert_fail57, !dbg !4659, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %155(ptr nonnull @.str.1243), !dbg !4659
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %156(ptr nonnull @.str.1244), !dbg !4659
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %157 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4659
  %158 = load i32, ptr %157, align 4, !dbg !4659
  %159 = icmp eq i32 %158, 1, !dbg !4659
  br i1 %159, label %assert_end60, label %assert_fail59, !dbg !4659, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %160(ptr nonnull @.str.1245), !dbg !4659
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %161 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4659
  %162 = load i32, ptr %161, align 4, !dbg !4659
  %163 = icmp eq i32 %dev_id, %162, !dbg !4659
  br i1 %163, label %assert_end62, label %assert_fail61, !dbg !4659, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %164 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %164(ptr nonnull @.str.1246), !dbg !4659
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %165 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !4659
  %166 = load i32, ptr %165, align 4, !dbg !4659
  %167 = icmp eq i32 %166, 5, !dbg !4659
  br i1 %167, label %assert_end66, label %assert_fail63, !dbg !4659, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %168 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %168(ptr nonnull @.str.1247), !dbg !4659
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %169 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !4659
  %170 = load i16, ptr %169, align 2, !dbg !4659
  %171 = icmp eq i16 %170, 1, !dbg !4659
  %172 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !4659
  %173 = load i8, ptr %172, align 1, !dbg !4659
  %174 = icmp eq i8 %173, 32, !dbg !4659
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !4659
  %176 = load i8, ptr %175, align 1, !dbg !4659
  %177 = icmp eq i8 %176, 2, !dbg !4659
  %178 = and i1 %174, %177, !dbg !4659
  %179 = and i1 %171, %178, !dbg !4659
  br i1 %179, label %assert_end68, label %assert_fail67, !dbg !4659, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %180(ptr nonnull @.str.1248), !dbg !4659
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %181 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.shape, align 8, !dbg !4659, !tbaa !4759
  %182 = and i64 %181, 4294967295, !dbg !4659
  %183 = icmp eq i64 %182, 1, !dbg !4659
  br i1 %183, label %assert_end70, label %assert_fail69, !dbg !4659, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %184(ptr nonnull @.str.1249), !dbg !4659
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %185 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.shape, i64 1, !dbg !4659
  %186 = load i64, ptr %185, align 8, !dbg !4659, !tbaa !4769
  %187 = and i64 %186, 4294967295, !dbg !4659
  %188 = icmp eq i64 %187, 128, !dbg !4659
  br i1 %188, label %assert_end72, label %assert_fail71, !dbg !4659, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %189(ptr nonnull @.str.1250), !dbg !4659
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.shape, i64 2, !dbg !4659
  %191 = load i64, ptr %190, align 8, !dbg !4659, !tbaa !4771
  %192 = and i64 %191, 4294967295, !dbg !4659
  %193 = icmp eq i64 %192, 1, !dbg !4659
  br i1 %193, label %assert_end74, label %assert_fail73, !dbg !4659, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %194(ptr nonnull @.str.1251), !dbg !4659
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.shape, i64 3, !dbg !4659
  %196 = load i64, ptr %195, align 8, !dbg !4659, !tbaa !4774
  %197 = and i64 %196, 4294967295, !dbg !4659
  %198 = icmp eq i64 %197, 1, !dbg !4659
  br i1 %198, label %assert_end76, label %assert_fail75, !dbg !4659, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %199(ptr nonnull @.str.1252), !dbg !4659
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.shape, i64 4, !dbg !4659
  %201 = load i64, ptr %200, align 8, !dbg !4659, !tbaa !4776
  %202 = and i64 %201, 4294967295, !dbg !4659
  %203 = icmp eq i64 %202, 4, !dbg !4659
  br i1 %203, label %assert_end78, label %assert_fail77, !dbg !4659, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %204(ptr nonnull @.str.1253), !dbg !4659
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.strides, null, !dbg !4659
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !4659, !prof !52

if_then79:                                        ; preds = %assert_end78
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.strides, i64 1, !dbg !4659
  %206 = load i64, ptr %205, align 8, !dbg !4659, !tbaa !4780
  %207 = and i64 %206, 4294967295, !dbg !4659
  %208 = icmp eq i64 %207, 4, !dbg !4659
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.p2.strides, i64 4, !dbg !4659
  %210 = load i64, ptr %209, align 8, !dbg !4659, !tbaa !4790
  %211 = and i64 %210, 4294967295, !dbg !4659
  %212 = icmp eq i64 %211, 1, !dbg !4659
  %213 = and i1 %208, %212, !dbg !4659
  br i1 %213, label %if_end80, label %assert_fail81, !dbg !4659, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %214 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !4659
  %215 = load i64, ptr %214, align 8, !dbg !4659
  %216 = icmp eq i64 %215, 0, !dbg !4659
  br i1 %216, label %assert_end84, label %assert_fail83, !dbg !4659, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %217(ptr nonnull @.str.1254), !dbg !4659
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %218(ptr nonnull @.str.1255), !dbg !4659
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %219 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !4659
  %220 = load i32, ptr %219, align 4, !dbg !4659
  %221 = icmp eq i32 %220, 1, !dbg !4659
  br i1 %221, label %assert_end86, label %assert_fail85, !dbg !4659, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %222(ptr nonnull @.str.1256), !dbg !4659
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %223 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !4659
  %224 = load i32, ptr %223, align 4, !dbg !4659
  %225 = icmp eq i32 %dev_id, %224, !dbg !4659
  br i1 %225, label %assert_end88, label %assert_fail87, !dbg !4659, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %226 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %226(ptr nonnull @.str.1257), !dbg !4659
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %227 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !4659
  %228 = load i32, ptr %227, align 4, !dbg !4659
  %229 = icmp eq i32 %228, 5, !dbg !4659
  br i1 %229, label %assert_end92, label %assert_fail89, !dbg !4659, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %230 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %230(ptr nonnull @.str.1258), !dbg !4659
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %231 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !4659
  %232 = load i16, ptr %231, align 2, !dbg !4659
  %233 = icmp eq i16 %232, 1, !dbg !4659
  %234 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !4659
  %235 = load i8, ptr %234, align 1, !dbg !4659
  %236 = icmp eq i8 %235, 32, !dbg !4659
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !4659
  %238 = load i8, ptr %237, align 1, !dbg !4659
  %239 = icmp eq i8 %238, 2, !dbg !4659
  %240 = and i1 %236, %239, !dbg !4659
  %241 = and i1 %233, %240, !dbg !4659
  br i1 %241, label %assert_end94, label %assert_fail93, !dbg !4659, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %242(ptr nonnull @.str.1259), !dbg !4659
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %243 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.shape, align 8, !dbg !4659, !tbaa !4794
  %244 = and i64 %243, 4294967295, !dbg !4659
  %245 = icmp eq i64 %244, 1, !dbg !4659
  br i1 %245, label %assert_end96, label %assert_fail95, !dbg !4659, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %246(ptr nonnull @.str.1260), !dbg !4659
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.shape, i64 1, !dbg !4659
  %248 = load i64, ptr %247, align 8, !dbg !4659, !tbaa !4804
  %249 = and i64 %248, 4294967295, !dbg !4659
  %250 = icmp eq i64 %249, 128, !dbg !4659
  br i1 %250, label %assert_end98, label %assert_fail97, !dbg !4659, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %251(ptr nonnull @.str.1261), !dbg !4659
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.shape, i64 2, !dbg !4659
  %253 = load i64, ptr %252, align 8, !dbg !4659, !tbaa !4806
  %254 = and i64 %253, 4294967295, !dbg !4659
  %255 = icmp eq i64 %254, 14, !dbg !4659
  br i1 %255, label %assert_end100, label %assert_fail99, !dbg !4659, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %256(ptr nonnull @.str.1262), !dbg !4659
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.shape, i64 3, !dbg !4659
  %258 = load i64, ptr %257, align 8, !dbg !4659, !tbaa !4809
  %259 = and i64 %258, 4294967295, !dbg !4659
  %260 = icmp eq i64 %259, 14, !dbg !4659
  br i1 %260, label %assert_end102, label %assert_fail101, !dbg !4659, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %261(ptr nonnull @.str.1263), !dbg !4659
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.shape, i64 4, !dbg !4659
  %263 = load i64, ptr %262, align 8, !dbg !4659, !tbaa !4811
  %264 = and i64 %263, 4294967295, !dbg !4659
  %265 = icmp eq i64 %264, 4, !dbg !4659
  br i1 %265, label %assert_end104, label %assert_fail103, !dbg !4659, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %266(ptr nonnull @.str.1264), !dbg !4659
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.strides, null, !dbg !4659
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !4659, !prof !52

if_then105:                                       ; preds = %assert_end104
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.strides, i64 1, !dbg !4659
  %268 = load i64, ptr %267, align 8, !dbg !4659, !tbaa !4815
  %269 = and i64 %268, 4294967295, !dbg !4659
  %270 = icmp eq i64 %269, 784, !dbg !4659
  %271 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.strides, i64 2, !dbg !4659
  %272 = load i64, ptr %271, align 8, !dbg !4659, !tbaa !4825
  %273 = and i64 %272, 4294967295, !dbg !4659
  %274 = icmp eq i64 %273, 56, !dbg !4659
  %275 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.strides, i64 3, !dbg !4659
  %276 = load i64, ptr %275, align 8, !dbg !4659, !tbaa !4828
  %277 = and i64 %276, 4294967295, !dbg !4659
  %278 = icmp eq i64 %277, 4, !dbg !4659
  %279 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12.T_relu.strides, i64 4, !dbg !4659
  %280 = load i64, ptr %279, align 8, !dbg !4659, !tbaa !4830
  %281 = and i64 %280, 4294967295, !dbg !4659
  %282 = icmp eq i64 %281, 1, !dbg !4659
  %283 = and i1 %278, %282, !dbg !4659
  %284 = and i1 %274, %283, !dbg !4659
  %285 = and i1 %270, %284, !dbg !4659
  br i1 %285, label %if_end106, label %assert_fail107, !dbg !4659, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %286 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !4659
  %287 = load i64, ptr %286, align 8, !dbg !4659
  %288 = icmp eq i64 %287, 0, !dbg !4659
  br i1 %288, label %assert_end110, label %assert_fail109, !dbg !4659, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %289(ptr nonnull @.str.1265), !dbg !4659
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %290(ptr nonnull @.str.1266), !dbg !4659
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %291 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !4659
  %292 = load i32, ptr %291, align 4, !dbg !4659
  %293 = icmp eq i32 %292, 1, !dbg !4659
  br i1 %293, label %assert_end112, label %assert_fail111, !dbg !4659, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %294(ptr nonnull @.str.1267), !dbg !4659
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %295 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !4659
  %296 = load i32, ptr %295, align 4, !dbg !4659
  %297 = icmp eq i32 %dev_id, %296, !dbg !4659
  br i1 %297, label %assert_end114, label %assert_fail113, !dbg !4659, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %298 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4659, !tbaa !19
  tail call void %298(ptr nonnull @.str.1268), !dbg !4659
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %299 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_compute_(ptr %p0115, ptr %p1116, ptr %T_relu117, ptr %p2118), !dbg !4659
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !4834 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !4836, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !4837, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !4838, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !4839, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !4840, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !4841, metadata !DIExpression()), !dbg !4842
  %0 = icmp eq i32 %num_args, 4, !dbg !4842
  br i1 %0, label %assert_end, label %assert_fail, !dbg !4842, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %309, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !4842

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %1(ptr nonnull @.str.1270), !dbg !4842
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !4842, !tbaa !4843
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !4842
  %p1.code = load i32, ptr %2, align 4, !dbg !4842, !tbaa !4854
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !4842
  %p2.code = load i32, ptr %3, align 4, !dbg !4842, !tbaa !4856
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !4842
  %T_relu.code = load i32, ptr %4, align 4, !dbg !4842, !tbaa !4859
  %p0 = load ptr, ptr %args, align 8, !dbg !4842
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !4842
  %p1 = load ptr, ptr %5, align 8, !dbg !4842
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !4842
  %p2 = load ptr, ptr %6, align 8, !dbg !4842
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !4842
  %T_relu = load ptr, ptr %7, align 8, !dbg !4842
  %p0115 = load ptr, ptr %p0, align 8, !dbg !4842
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !4842
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !4842
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.shape = load ptr, ptr %8, align 8, !dbg !4842
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !4842
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.strides = load ptr, ptr %9, align 8, !dbg !4842
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !4842
  %dev_id = load i32, ptr %10, align 4, !dbg !4842
  %p1116 = load ptr, ptr %p1, align 8, !dbg !4842
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !4842
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !4842
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.shape = load ptr, ptr %11, align 8, !dbg !4842
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !4842
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.strides = load ptr, ptr %12, align 8, !dbg !4842
  %p2118 = load ptr, ptr %p2, align 8, !dbg !4842
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !4842
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !4842
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.shape = load ptr, ptr %13, align 8, !dbg !4842
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !4842
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.strides = load ptr, ptr %14, align 8, !dbg !4842
  %T_relu117 = load ptr, ptr %T_relu, align 8, !dbg !4842
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu117, i64 64) ], !dbg !4842
  %15 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !4842
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.shape = load ptr, ptr %15, align 8, !dbg !4842
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !4842
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.strides = load ptr, ptr %16, align 8, !dbg !4842
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !4842

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %17(ptr nonnull @.str.1271), !dbg !4842
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !4842

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %18(ptr nonnull @.str.1272), !dbg !4842
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !4842

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %19(ptr nonnull @.str.1273), !dbg !4842
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !4842

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %20(ptr nonnull @.str.1274), !dbg !4842
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !4842
  %22 = load i32, ptr %21, align 4, !dbg !4842
  %23 = icmp eq i32 %22, 5, !dbg !4842
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !4842, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %24(ptr nonnull @.str.1275), !dbg !4842
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !4842
  %26 = load i16, ptr %25, align 2, !dbg !4842
  %27 = icmp eq i16 %26, 1, !dbg !4842
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !4842
  %29 = load i8, ptr %28, align 1, !dbg !4842
  %30 = icmp eq i8 %29, 32, !dbg !4842
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !4842
  %32 = load i8, ptr %31, align 1, !dbg !4842
  %33 = icmp eq i8 %32, 2, !dbg !4842
  %34 = and i1 %30, %33, !dbg !4842
  %35 = and i1 %27, %34, !dbg !4842
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !4842, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %36(ptr nonnull @.str.1276), !dbg !4842
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.shape, align 8, !dbg !4842, !tbaa !4861
  %38 = and i64 %37, 4294967295, !dbg !4842
  %39 = icmp eq i64 %38, 1, !dbg !4842
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !4842, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %40(ptr nonnull @.str.1277), !dbg !4842
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.shape, i64 1, !dbg !4842
  %42 = load i64, ptr %41, align 8, !dbg !4842, !tbaa !4871
  %43 = and i64 %42, 4294967295, !dbg !4842
  %44 = icmp eq i64 %43, 128, !dbg !4842
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !4842, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %45(ptr nonnull @.str.1278), !dbg !4842
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.shape, i64 2, !dbg !4842
  %47 = load i64, ptr %46, align 8, !dbg !4842, !tbaa !4873
  %48 = and i64 %47, 4294967295, !dbg !4842
  %49 = icmp eq i64 %48, 14, !dbg !4842
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !4842, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %50(ptr nonnull @.str.1279), !dbg !4842
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.shape, i64 3, !dbg !4842
  %52 = load i64, ptr %51, align 8, !dbg !4842, !tbaa !4876
  %53 = and i64 %52, 4294967295, !dbg !4842
  %54 = icmp eq i64 %53, 14, !dbg !4842
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !4842, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %55(ptr nonnull @.str.1280), !dbg !4842
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.shape, i64 4, !dbg !4842
  %57 = load i64, ptr %56, align 8, !dbg !4842, !tbaa !4878
  %58 = and i64 %57, 4294967295, !dbg !4842
  %59 = icmp eq i64 %58, 4, !dbg !4842
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !4842, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %60(ptr nonnull @.str.1281), !dbg !4842
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.strides, null, !dbg !4842
  br i1 %.not, label %if_end, label %if_then, !dbg !4842, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.strides, i64 1, !dbg !4842
  %62 = load i64, ptr %61, align 8, !dbg !4842, !tbaa !4882
  %63 = and i64 %62, 4294967295, !dbg !4842
  %64 = icmp eq i64 %63, 784, !dbg !4842
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.strides, i64 2, !dbg !4842
  %66 = load i64, ptr %65, align 8, !dbg !4842, !tbaa !4892
  %67 = and i64 %66, 4294967295, !dbg !4842
  %68 = icmp eq i64 %67, 56, !dbg !4842
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.strides, i64 3, !dbg !4842
  %70 = load i64, ptr %69, align 8, !dbg !4842, !tbaa !4895
  %71 = and i64 %70, 4294967295, !dbg !4842
  %72 = icmp eq i64 %71, 4, !dbg !4842
  %73 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p0.strides, i64 4, !dbg !4842
  %74 = load i64, ptr %73, align 8, !dbg !4842, !tbaa !4897
  %75 = and i64 %74, 4294967295, !dbg !4842
  %76 = icmp eq i64 %75, 1, !dbg !4842
  %77 = and i1 %72, %76, !dbg !4842
  %78 = and i1 %68, %77, !dbg !4842
  %79 = and i1 %64, %78, !dbg !4842
  br i1 %79, label %if_end, label %assert_fail29, !dbg !4842, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !4842
  %81 = load i64, ptr %80, align 8, !dbg !4842
  %82 = icmp eq i64 %81, 0, !dbg !4842
  br i1 %82, label %assert_end32, label %assert_fail31, !dbg !4842, !prof !18

assert_fail29:                                    ; preds = %if_then
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %83(ptr nonnull @.str.1282), !dbg !4842
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %84(ptr nonnull @.str.1283), !dbg !4842
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %85 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !4842
  %86 = load i32, ptr %85, align 4, !dbg !4842
  %87 = icmp eq i32 %86, 1, !dbg !4842
  br i1 %87, label %assert_end34, label %assert_fail33, !dbg !4842, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %88(ptr nonnull @.str.1284), !dbg !4842
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %89 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !4842
  %90 = load i32, ptr %89, align 4, !dbg !4842
  %91 = icmp eq i32 %90, 6, !dbg !4842
  br i1 %91, label %assert_end38, label %assert_fail35, !dbg !4842, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %92 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %92(ptr nonnull @.str.1285), !dbg !4842
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %93 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !4842
  %94 = load i16, ptr %93, align 2, !dbg !4842
  %95 = icmp eq i16 %94, 1, !dbg !4842
  %96 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !4842
  %97 = load i8, ptr %96, align 1, !dbg !4842
  %98 = icmp eq i8 %97, 32, !dbg !4842
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !4842
  %100 = load i8, ptr %99, align 1, !dbg !4842
  %101 = icmp eq i8 %100, 2, !dbg !4842
  %102 = and i1 %98, %101, !dbg !4842
  %103 = and i1 %95, %102, !dbg !4842
  br i1 %103, label %assert_end40, label %assert_fail39, !dbg !4842, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %104(ptr nonnull @.str.1286), !dbg !4842
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %105 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.shape, align 8, !dbg !4842, !tbaa !4901
  %106 = and i64 %105, 4294967295, !dbg !4842
  %107 = icmp eq i64 %106, 128, !dbg !4842
  br i1 %107, label %assert_end42, label %assert_fail41, !dbg !4842, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %108(ptr nonnull @.str.1287), !dbg !4842
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.shape, i64 1, !dbg !4842
  %110 = load i64, ptr %109, align 8, !dbg !4842, !tbaa !4911
  %111 = and i64 %110, 4294967295, !dbg !4842
  %112 = icmp eq i64 %111, 128, !dbg !4842
  br i1 %112, label %assert_end44, label %assert_fail43, !dbg !4842, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %113(ptr nonnull @.str.1288), !dbg !4842
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.shape, i64 2, !dbg !4842
  %115 = load i64, ptr %114, align 8, !dbg !4842, !tbaa !4913
  %116 = and i64 %115, 4294967295, !dbg !4842
  %117 = icmp eq i64 %116, 3, !dbg !4842
  br i1 %117, label %assert_end46, label %assert_fail45, !dbg !4842, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %118(ptr nonnull @.str.1289), !dbg !4842
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.shape, i64 3, !dbg !4842
  %120 = load i64, ptr %119, align 8, !dbg !4842, !tbaa !4916
  %121 = and i64 %120, 4294967295, !dbg !4842
  %122 = icmp eq i64 %121, 3, !dbg !4842
  br i1 %122, label %assert_end48, label %assert_fail47, !dbg !4842, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %123(ptr nonnull @.str.1290), !dbg !4842
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.shape, i64 4, !dbg !4842
  %125 = load i64, ptr %124, align 8, !dbg !4842, !tbaa !4918
  %126 = and i64 %125, 4294967295, !dbg !4842
  %127 = icmp eq i64 %126, 4, !dbg !4842
  br i1 %127, label %assert_end50, label %assert_fail49, !dbg !4842, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %128(ptr nonnull @.str.1291), !dbg !4842
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %129 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.shape, i64 5, !dbg !4842
  %130 = load i64, ptr %129, align 8, !dbg !4842, !tbaa !4922
  %131 = and i64 %130, 4294967295, !dbg !4842
  %132 = icmp eq i64 %131, 4, !dbg !4842
  br i1 %132, label %assert_end52, label %assert_fail51, !dbg !4842, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %133 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %133(ptr nonnull @.str.1292), !dbg !4842
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.strides, null, !dbg !4842
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !4842, !prof !52

if_then53:                                        ; preds = %assert_end52
  %134 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.strides, align 8, !dbg !4842, !tbaa !4924
  %135 = and i64 %134, 4294967295, !dbg !4842
  %136 = icmp eq i64 %135, 18432, !dbg !4842
  %137 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.strides, i64 1, !dbg !4842
  %138 = load i64, ptr %137, align 8, !dbg !4842, !tbaa !4934
  %139 = and i64 %138, 4294967295, !dbg !4842
  %140 = icmp eq i64 %139, 144, !dbg !4842
  %141 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.strides, i64 2, !dbg !4842
  %142 = load i64, ptr %141, align 8, !dbg !4842, !tbaa !4936
  %143 = and i64 %142, 4294967295, !dbg !4842
  %144 = icmp eq i64 %143, 48, !dbg !4842
  %145 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.strides, i64 3, !dbg !4842
  %146 = load i64, ptr %145, align 8, !dbg !4842, !tbaa !4939
  %147 = and i64 %146, 4294967295, !dbg !4842
  %148 = icmp eq i64 %147, 16, !dbg !4842
  %149 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.strides, i64 4, !dbg !4842
  %150 = load i64, ptr %149, align 8, !dbg !4842, !tbaa !4941
  %151 = and i64 %150, 4294967295, !dbg !4842
  %152 = icmp eq i64 %151, 4, !dbg !4842
  %153 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p1.strides, i64 5, !dbg !4842
  %154 = load i64, ptr %153, align 8, !dbg !4842, !tbaa !4945
  %155 = and i64 %154, 4294967295, !dbg !4842
  %156 = icmp eq i64 %155, 1, !dbg !4842
  %157 = and i1 %152, %156, !dbg !4842
  %158 = and i1 %148, %157, !dbg !4842
  %159 = and i1 %144, %158, !dbg !4842
  %160 = and i1 %140, %159, !dbg !4842
  %161 = and i1 %136, %160, !dbg !4842
  br i1 %161, label %if_end54, label %assert_fail55, !dbg !4842, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !4842
  %163 = load i64, ptr %162, align 8, !dbg !4842
  %164 = icmp eq i64 %163, 0, !dbg !4842
  br i1 %164, label %assert_end58, label %assert_fail57, !dbg !4842, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %165(ptr nonnull @.str.1293), !dbg !4842
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %166(ptr nonnull @.str.1294), !dbg !4842
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %167 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !4842
  %168 = load i32, ptr %167, align 4, !dbg !4842
  %169 = icmp eq i32 %168, 1, !dbg !4842
  br i1 %169, label %assert_end60, label %assert_fail59, !dbg !4842, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %170(ptr nonnull @.str.1295), !dbg !4842
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %171 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !4842
  %172 = load i32, ptr %171, align 4, !dbg !4842
  %173 = icmp eq i32 %dev_id, %172, !dbg !4842
  br i1 %173, label %assert_end62, label %assert_fail61, !dbg !4842, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %174(ptr nonnull @.str.1296), !dbg !4842
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !4842
  %176 = load i32, ptr %175, align 4, !dbg !4842
  %177 = icmp eq i32 %176, 5, !dbg !4842
  br i1 %177, label %assert_end66, label %assert_fail63, !dbg !4842, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %178(ptr nonnull @.str.1297), !dbg !4842
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %179 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !4842
  %180 = load i16, ptr %179, align 2, !dbg !4842
  %181 = icmp eq i16 %180, 1, !dbg !4842
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !4842
  %183 = load i8, ptr %182, align 1, !dbg !4842
  %184 = icmp eq i8 %183, 32, !dbg !4842
  %185 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !4842
  %186 = load i8, ptr %185, align 1, !dbg !4842
  %187 = icmp eq i8 %186, 2, !dbg !4842
  %188 = and i1 %184, %187, !dbg !4842
  %189 = and i1 %181, %188, !dbg !4842
  br i1 %189, label %assert_end68, label %assert_fail67, !dbg !4842, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %190 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %190(ptr nonnull @.str.1298), !dbg !4842
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %191 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.shape, align 8, !dbg !4842, !tbaa !4947
  %192 = and i64 %191, 4294967295, !dbg !4842
  %193 = icmp eq i64 %192, 1, !dbg !4842
  br i1 %193, label %assert_end70, label %assert_fail69, !dbg !4842, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %194(ptr nonnull @.str.1299), !dbg !4842
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.shape, i64 1, !dbg !4842
  %196 = load i64, ptr %195, align 8, !dbg !4842, !tbaa !4957
  %197 = and i64 %196, 4294967295, !dbg !4842
  %198 = icmp eq i64 %197, 128, !dbg !4842
  br i1 %198, label %assert_end72, label %assert_fail71, !dbg !4842, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %199(ptr nonnull @.str.1300), !dbg !4842
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.shape, i64 2, !dbg !4842
  %201 = load i64, ptr %200, align 8, !dbg !4842, !tbaa !4959
  %202 = and i64 %201, 4294967295, !dbg !4842
  %203 = icmp eq i64 %202, 1, !dbg !4842
  br i1 %203, label %assert_end74, label %assert_fail73, !dbg !4842, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %204(ptr nonnull @.str.1301), !dbg !4842
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.shape, i64 3, !dbg !4842
  %206 = load i64, ptr %205, align 8, !dbg !4842, !tbaa !4962
  %207 = and i64 %206, 4294967295, !dbg !4842
  %208 = icmp eq i64 %207, 1, !dbg !4842
  br i1 %208, label %assert_end76, label %assert_fail75, !dbg !4842, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %209(ptr nonnull @.str.1302), !dbg !4842
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %210 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.shape, i64 4, !dbg !4842
  %211 = load i64, ptr %210, align 8, !dbg !4842, !tbaa !4964
  %212 = and i64 %211, 4294967295, !dbg !4842
  %213 = icmp eq i64 %212, 4, !dbg !4842
  br i1 %213, label %assert_end78, label %assert_fail77, !dbg !4842, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %214 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %214(ptr nonnull @.str.1303), !dbg !4842
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.strides, null, !dbg !4842
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !4842, !prof !52

if_then79:                                        ; preds = %assert_end78
  %215 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.strides, i64 1, !dbg !4842
  %216 = load i64, ptr %215, align 8, !dbg !4842, !tbaa !4968
  %217 = and i64 %216, 4294967295, !dbg !4842
  %218 = icmp eq i64 %217, 4, !dbg !4842
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.p2.strides, i64 4, !dbg !4842
  %220 = load i64, ptr %219, align 8, !dbg !4842, !tbaa !4978
  %221 = and i64 %220, 4294967295, !dbg !4842
  %222 = icmp eq i64 %221, 1, !dbg !4842
  %223 = and i1 %218, %222, !dbg !4842
  br i1 %223, label %if_end80, label %assert_fail81, !dbg !4842, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %224 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !4842
  %225 = load i64, ptr %224, align 8, !dbg !4842
  %226 = icmp eq i64 %225, 0, !dbg !4842
  br i1 %226, label %assert_end84, label %assert_fail83, !dbg !4842, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %227(ptr nonnull @.str.1304), !dbg !4842
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %228 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %228(ptr nonnull @.str.1305), !dbg !4842
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %229 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !4842
  %230 = load i32, ptr %229, align 4, !dbg !4842
  %231 = icmp eq i32 %230, 1, !dbg !4842
  br i1 %231, label %assert_end86, label %assert_fail85, !dbg !4842, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %232 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %232(ptr nonnull @.str.1306), !dbg !4842
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %233 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !4842
  %234 = load i32, ptr %233, align 4, !dbg !4842
  %235 = icmp eq i32 %dev_id, %234, !dbg !4842
  br i1 %235, label %assert_end88, label %assert_fail87, !dbg !4842, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %236(ptr nonnull @.str.1307), !dbg !4842
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !4842
  %238 = load i32, ptr %237, align 4, !dbg !4842
  %239 = icmp eq i32 %238, 5, !dbg !4842
  br i1 %239, label %assert_end92, label %assert_fail89, !dbg !4842, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %240 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %240(ptr nonnull @.str.1308), !dbg !4842
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %241 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !4842
  %242 = load i16, ptr %241, align 2, !dbg !4842
  %243 = icmp eq i16 %242, 1, !dbg !4842
  %244 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !4842
  %245 = load i8, ptr %244, align 1, !dbg !4842
  %246 = icmp eq i8 %245, 32, !dbg !4842
  %247 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !4842
  %248 = load i8, ptr %247, align 1, !dbg !4842
  %249 = icmp eq i8 %248, 2, !dbg !4842
  %250 = and i1 %246, %249, !dbg !4842
  %251 = and i1 %243, %250, !dbg !4842
  br i1 %251, label %assert_end94, label %assert_fail93, !dbg !4842, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %252 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %252(ptr nonnull @.str.1309), !dbg !4842
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %253 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.shape, align 8, !dbg !4842, !tbaa !4982
  %254 = and i64 %253, 4294967295, !dbg !4842
  %255 = icmp eq i64 %254, 1, !dbg !4842
  br i1 %255, label %assert_end96, label %assert_fail95, !dbg !4842, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %256(ptr nonnull @.str.1310), !dbg !4842
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.shape, i64 1, !dbg !4842
  %258 = load i64, ptr %257, align 8, !dbg !4842, !tbaa !4992
  %259 = and i64 %258, 4294967295, !dbg !4842
  %260 = icmp eq i64 %259, 128, !dbg !4842
  br i1 %260, label %assert_end98, label %assert_fail97, !dbg !4842, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %261(ptr nonnull @.str.1311), !dbg !4842
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.shape, i64 2, !dbg !4842
  %263 = load i64, ptr %262, align 8, !dbg !4842, !tbaa !4994
  %264 = and i64 %263, 4294967295, !dbg !4842
  %265 = icmp eq i64 %264, 7, !dbg !4842
  br i1 %265, label %assert_end100, label %assert_fail99, !dbg !4842, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %266(ptr nonnull @.str.1312), !dbg !4842
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.shape, i64 3, !dbg !4842
  %268 = load i64, ptr %267, align 8, !dbg !4842, !tbaa !4997
  %269 = and i64 %268, 4294967295, !dbg !4842
  %270 = icmp eq i64 %269, 7, !dbg !4842
  br i1 %270, label %assert_end102, label %assert_fail101, !dbg !4842, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %271 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %271(ptr nonnull @.str.1313), !dbg !4842
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %272 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.shape, i64 4, !dbg !4842
  %273 = load i64, ptr %272, align 8, !dbg !4842, !tbaa !4999
  %274 = and i64 %273, 4294967295, !dbg !4842
  %275 = icmp eq i64 %274, 4, !dbg !4842
  br i1 %275, label %assert_end104, label %assert_fail103, !dbg !4842, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %276 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %276(ptr nonnull @.str.1314), !dbg !4842
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.strides, null, !dbg !4842
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !4842, !prof !52

if_then105:                                       ; preds = %assert_end104
  %277 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.strides, i64 1, !dbg !4842
  %278 = load i64, ptr %277, align 8, !dbg !4842, !tbaa !5003
  %279 = and i64 %278, 4294967295, !dbg !4842
  %280 = icmp eq i64 %279, 196, !dbg !4842
  %281 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.strides, i64 2, !dbg !4842
  %282 = load i64, ptr %281, align 8, !dbg !4842, !tbaa !5013
  %283 = and i64 %282, 4294967295, !dbg !4842
  %284 = icmp eq i64 %283, 28, !dbg !4842
  %285 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.strides, i64 3, !dbg !4842
  %286 = load i64, ptr %285, align 8, !dbg !4842, !tbaa !5016
  %287 = and i64 %286, 4294967295, !dbg !4842
  %288 = icmp eq i64 %287, 4, !dbg !4842
  %289 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13.T_relu.strides, i64 4, !dbg !4842
  %290 = load i64, ptr %289, align 8, !dbg !4842, !tbaa !5018
  %291 = and i64 %290, 4294967295, !dbg !4842
  %292 = icmp eq i64 %291, 1, !dbg !4842
  %293 = and i1 %288, %292, !dbg !4842
  %294 = and i1 %284, %293, !dbg !4842
  %295 = and i1 %280, %294, !dbg !4842
  br i1 %295, label %if_end106, label %assert_fail107, !dbg !4842, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %296 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !4842
  %297 = load i64, ptr %296, align 8, !dbg !4842
  %298 = icmp eq i64 %297, 0, !dbg !4842
  br i1 %298, label %assert_end110, label %assert_fail109, !dbg !4842, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %299(ptr nonnull @.str.1315), !dbg !4842
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %300 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %300(ptr nonnull @.str.1316), !dbg !4842
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %301 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !4842
  %302 = load i32, ptr %301, align 4, !dbg !4842
  %303 = icmp eq i32 %302, 1, !dbg !4842
  br i1 %303, label %assert_end112, label %assert_fail111, !dbg !4842, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %304 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %304(ptr nonnull @.str.1317), !dbg !4842
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %305 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !4842
  %306 = load i32, ptr %305, align 4, !dbg !4842
  %307 = icmp eq i32 %dev_id, %306, !dbg !4842
  br i1 %307, label %assert_end114, label %assert_fail113, !dbg !4842, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %308 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !4842, !tbaa !19
  tail call void %308(ptr nonnull @.str.1318), !dbg !4842
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %309 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_compute_(i32 %dev_id, ptr %p0115, ptr %p1116, ptr %T_relu117, ptr %p2118), !dbg !4842
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5022 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5024, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5025, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5026, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5027, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5028, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5029, metadata !DIExpression()), !dbg !5030
  %0 = icmp eq i32 %num_args, 4, !dbg !5030
  br i1 %0, label %assert_end, label %assert_fail, !dbg !5030, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %299, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !5030

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %1(ptr nonnull @.str.1321), !dbg !5030
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5030, !tbaa !5031
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5030
  %p1.code = load i32, ptr %2, align 4, !dbg !5030, !tbaa !5042
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5030
  %p2.code = load i32, ptr %3, align 4, !dbg !5030, !tbaa !5044
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !5030
  %T_relu.code = load i32, ptr %4, align 4, !dbg !5030, !tbaa !5047
  %p0 = load ptr, ptr %args, align 8, !dbg !5030
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5030
  %p1 = load ptr, ptr %5, align 8, !dbg !5030
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5030
  %p2 = load ptr, ptr %6, align 8, !dbg !5030
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !5030
  %T_relu = load ptr, ptr %7, align 8, !dbg !5030
  %p0115 = load ptr, ptr %p0, align 8, !dbg !5030
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !5030
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5030
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.shape = load ptr, ptr %8, align 8, !dbg !5030
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5030
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.strides = load ptr, ptr %9, align 8, !dbg !5030
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5030
  %dev_id = load i32, ptr %10, align 4, !dbg !5030
  %p1116 = load ptr, ptr %p1, align 8, !dbg !5030
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !5030
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5030
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.shape = load ptr, ptr %11, align 8, !dbg !5030
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5030
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.strides = load ptr, ptr %12, align 8, !dbg !5030
  %p2118 = load ptr, ptr %p2, align 8, !dbg !5030
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !5030
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !5030
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.shape = load ptr, ptr %13, align 8, !dbg !5030
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !5030
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.strides = load ptr, ptr %14, align 8, !dbg !5030
  %T_relu117 = load ptr, ptr %T_relu, align 8, !dbg !5030
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu117, i64 64) ], !dbg !5030
  %15 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !5030
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.shape = load ptr, ptr %15, align 8, !dbg !5030
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !5030
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.strides = load ptr, ptr %16, align 8, !dbg !5030
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !5030

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %17(ptr nonnull @.str.1322), !dbg !5030
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !5030

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %18(ptr nonnull @.str.1323), !dbg !5030
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !5030

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %19(ptr nonnull @.str.1324), !dbg !5030
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !5030

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %20(ptr nonnull @.str.1325), !dbg !5030
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5030
  %22 = load i32, ptr %21, align 4, !dbg !5030
  %23 = icmp eq i32 %22, 5, !dbg !5030
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !5030, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %24(ptr nonnull @.str.1326), !dbg !5030
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5030
  %26 = load i16, ptr %25, align 2, !dbg !5030
  %27 = icmp eq i16 %26, 1, !dbg !5030
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5030
  %29 = load i8, ptr %28, align 1, !dbg !5030
  %30 = icmp eq i8 %29, 32, !dbg !5030
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5030
  %32 = load i8, ptr %31, align 1, !dbg !5030
  %33 = icmp eq i8 %32, 2, !dbg !5030
  %34 = and i1 %30, %33, !dbg !5030
  %35 = and i1 %27, %34, !dbg !5030
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !5030, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %36(ptr nonnull @.str.1327), !dbg !5030
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.shape, align 8, !dbg !5030, !tbaa !5049
  %38 = and i64 %37, 4294967295, !dbg !5030
  %39 = icmp eq i64 %38, 1, !dbg !5030
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !5030, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %40(ptr nonnull @.str.1328), !dbg !5030
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.shape, i64 1, !dbg !5030
  %42 = load i64, ptr %41, align 8, !dbg !5030, !tbaa !5059
  %43 = and i64 %42, 4294967295, !dbg !5030
  %44 = icmp eq i64 %43, 512, !dbg !5030
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !5030, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %45(ptr nonnull @.str.1329), !dbg !5030
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.shape, i64 2, !dbg !5030
  %47 = load i64, ptr %46, align 8, !dbg !5030, !tbaa !5061
  %48 = and i64 %47, 4294967295, !dbg !5030
  %49 = icmp eq i64 %48, 7, !dbg !5030
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !5030, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %50(ptr nonnull @.str.1330), !dbg !5030
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.shape, i64 3, !dbg !5030
  %52 = load i64, ptr %51, align 8, !dbg !5030, !tbaa !5064
  %53 = and i64 %52, 4294967295, !dbg !5030
  %54 = icmp eq i64 %53, 7, !dbg !5030
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !5030, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %55(ptr nonnull @.str.1331), !dbg !5030
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.shape, i64 4, !dbg !5030
  %57 = load i64, ptr %56, align 8, !dbg !5030, !tbaa !5066
  %58 = and i64 %57, 4294967295, !dbg !5030
  %59 = icmp eq i64 %58, 4, !dbg !5030
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !5030, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %60(ptr nonnull @.str.1332), !dbg !5030
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.strides, null, !dbg !5030
  br i1 %.not, label %if_end, label %if_then, !dbg !5030, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.strides, i64 1, !dbg !5030
  %62 = load i64, ptr %61, align 8, !dbg !5030, !tbaa !5070
  %63 = and i64 %62, 4294967295, !dbg !5030
  %64 = icmp eq i64 %63, 196, !dbg !5030
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.strides, i64 2, !dbg !5030
  %66 = load i64, ptr %65, align 8, !dbg !5030, !tbaa !5080
  %67 = and i64 %66, 4294967295, !dbg !5030
  %68 = icmp eq i64 %67, 28, !dbg !5030
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.strides, i64 3, !dbg !5030
  %70 = load i64, ptr %69, align 8, !dbg !5030, !tbaa !5083
  %71 = and i64 %70, 4294967295, !dbg !5030
  %72 = icmp eq i64 %71, 4, !dbg !5030
  %73 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p0.strides, i64 4, !dbg !5030
  %74 = load i64, ptr %73, align 8, !dbg !5030, !tbaa !5085
  %75 = and i64 %74, 4294967295, !dbg !5030
  %76 = icmp eq i64 %75, 1, !dbg !5030
  %77 = and i1 %72, %76, !dbg !5030
  %78 = and i1 %68, %77, !dbg !5030
  %79 = and i1 %64, %78, !dbg !5030
  br i1 %79, label %if_end, label %assert_fail29, !dbg !5030, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5030
  %81 = load i64, ptr %80, align 8, !dbg !5030
  %82 = icmp eq i64 %81, 0, !dbg !5030
  br i1 %82, label %assert_end32, label %assert_fail31, !dbg !5030, !prof !18

assert_fail29:                                    ; preds = %if_then
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %83(ptr nonnull @.str.1333), !dbg !5030
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %84(ptr nonnull @.str.1334), !dbg !5030
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %85 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5030
  %86 = load i32, ptr %85, align 4, !dbg !5030
  %87 = icmp eq i32 %86, 1, !dbg !5030
  br i1 %87, label %assert_end34, label %assert_fail33, !dbg !5030, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %88(ptr nonnull @.str.1335), !dbg !5030
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %89 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5030
  %90 = load i32, ptr %89, align 4, !dbg !5030
  %91 = icmp eq i32 %90, 6, !dbg !5030
  br i1 %91, label %assert_end38, label %assert_fail35, !dbg !5030, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %92 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %92(ptr nonnull @.str.1336), !dbg !5030
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %93 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5030
  %94 = load i16, ptr %93, align 2, !dbg !5030
  %95 = icmp eq i16 %94, 1, !dbg !5030
  %96 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5030
  %97 = load i8, ptr %96, align 1, !dbg !5030
  %98 = icmp eq i8 %97, 32, !dbg !5030
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5030
  %100 = load i8, ptr %99, align 1, !dbg !5030
  %101 = icmp eq i8 %100, 2, !dbg !5030
  %102 = and i1 %98, %101, !dbg !5030
  %103 = and i1 %95, %102, !dbg !5030
  br i1 %103, label %assert_end40, label %assert_fail39, !dbg !5030, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %104(ptr nonnull @.str.1337), !dbg !5030
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %105 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.shape, align 8, !dbg !5030, !tbaa !5089
  %106 = and i64 %105, 4294967295, !dbg !5030
  %107 = icmp eq i64 %106, 16, !dbg !5030
  br i1 %107, label %assert_end42, label %assert_fail41, !dbg !5030, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %108(ptr nonnull @.str.1338), !dbg !5030
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.shape, i64 1, !dbg !5030
  %110 = load i64, ptr %109, align 8, !dbg !5030, !tbaa !5099
  %111 = and i64 %110, 4294967295, !dbg !5030
  %112 = icmp eq i64 %111, 512, !dbg !5030
  br i1 %112, label %assert_end44, label %assert_fail43, !dbg !5030, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %113(ptr nonnull @.str.1339), !dbg !5030
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.shape, i64 2, !dbg !5030
  %115 = load i64, ptr %114, align 8, !dbg !5030, !tbaa !5101
  %116 = and i64 %115, 4294967295, !dbg !5030
  %117 = icmp eq i64 %116, 1, !dbg !5030
  br i1 %117, label %assert_end46, label %assert_fail45, !dbg !5030, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %118(ptr nonnull @.str.1340), !dbg !5030
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.shape, i64 3, !dbg !5030
  %120 = load i64, ptr %119, align 8, !dbg !5030, !tbaa !5104
  %121 = and i64 %120, 4294967295, !dbg !5030
  %122 = icmp eq i64 %121, 1, !dbg !5030
  br i1 %122, label %assert_end48, label %assert_fail47, !dbg !5030, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %123(ptr nonnull @.str.1341), !dbg !5030
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.shape, i64 4, !dbg !5030
  %125 = load i64, ptr %124, align 8, !dbg !5030, !tbaa !5106
  %126 = and i64 %125, 4294967295, !dbg !5030
  %127 = icmp eq i64 %126, 4, !dbg !5030
  br i1 %127, label %assert_end50, label %assert_fail49, !dbg !5030, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %128(ptr nonnull @.str.1342), !dbg !5030
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %129 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.shape, i64 5, !dbg !5030
  %130 = load i64, ptr %129, align 8, !dbg !5030, !tbaa !5110
  %131 = and i64 %130, 4294967295, !dbg !5030
  %132 = icmp eq i64 %131, 32, !dbg !5030
  br i1 %132, label %assert_end52, label %assert_fail51, !dbg !5030, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %133 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %133(ptr nonnull @.str.1343), !dbg !5030
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.strides, null, !dbg !5030
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !5030, !prof !52

if_then53:                                        ; preds = %assert_end52
  %134 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.strides, align 8, !dbg !5030, !tbaa !5112
  %135 = and i64 %134, 4294967295, !dbg !5030
  %136 = icmp eq i64 %135, 65536, !dbg !5030
  %137 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.strides, i64 1, !dbg !5030
  %138 = load i64, ptr %137, align 8, !dbg !5030, !tbaa !5122
  %139 = and i64 %138, 4294967295, !dbg !5030
  %140 = icmp eq i64 %139, 128, !dbg !5030
  %141 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.strides, i64 4, !dbg !5030
  %142 = load i64, ptr %141, align 8, !dbg !5030, !tbaa !5124
  %143 = and i64 %142, 4294967295, !dbg !5030
  %144 = icmp eq i64 %143, 32, !dbg !5030
  %145 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p1.strides, i64 5, !dbg !5030
  %146 = load i64, ptr %145, align 8, !dbg !5030, !tbaa !5128
  %147 = and i64 %146, 4294967295, !dbg !5030
  %148 = icmp eq i64 %147, 1, !dbg !5030
  %149 = and i1 %144, %148, !dbg !5030
  %150 = and i1 %140, %149, !dbg !5030
  %151 = and i1 %136, %150, !dbg !5030
  br i1 %151, label %if_end54, label %assert_fail55, !dbg !5030, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %152 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5030
  %153 = load i64, ptr %152, align 8, !dbg !5030
  %154 = icmp eq i64 %153, 0, !dbg !5030
  br i1 %154, label %assert_end58, label %assert_fail57, !dbg !5030, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %155(ptr nonnull @.str.1344), !dbg !5030
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %156(ptr nonnull @.str.1345), !dbg !5030
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %157 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5030
  %158 = load i32, ptr %157, align 4, !dbg !5030
  %159 = icmp eq i32 %158, 1, !dbg !5030
  br i1 %159, label %assert_end60, label %assert_fail59, !dbg !5030, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %160(ptr nonnull @.str.1346), !dbg !5030
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %161 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5030
  %162 = load i32, ptr %161, align 4, !dbg !5030
  %163 = icmp eq i32 %dev_id, %162, !dbg !5030
  br i1 %163, label %assert_end62, label %assert_fail61, !dbg !5030, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %164 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %164(ptr nonnull @.str.1347), !dbg !5030
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %165 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !5030
  %166 = load i32, ptr %165, align 4, !dbg !5030
  %167 = icmp eq i32 %166, 5, !dbg !5030
  br i1 %167, label %assert_end66, label %assert_fail63, !dbg !5030, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %168 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %168(ptr nonnull @.str.1348), !dbg !5030
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %169 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !5030
  %170 = load i16, ptr %169, align 2, !dbg !5030
  %171 = icmp eq i16 %170, 1, !dbg !5030
  %172 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !5030
  %173 = load i8, ptr %172, align 1, !dbg !5030
  %174 = icmp eq i8 %173, 32, !dbg !5030
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !5030
  %176 = load i8, ptr %175, align 1, !dbg !5030
  %177 = icmp eq i8 %176, 2, !dbg !5030
  %178 = and i1 %174, %177, !dbg !5030
  %179 = and i1 %171, %178, !dbg !5030
  br i1 %179, label %assert_end68, label %assert_fail67, !dbg !5030, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %180(ptr nonnull @.str.1349), !dbg !5030
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %181 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.shape, align 8, !dbg !5030, !tbaa !5130
  %182 = and i64 %181, 4294967295, !dbg !5030
  %183 = icmp eq i64 %182, 1, !dbg !5030
  br i1 %183, label %assert_end70, label %assert_fail69, !dbg !5030, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %184(ptr nonnull @.str.1350), !dbg !5030
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %185 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.shape, i64 1, !dbg !5030
  %186 = load i64, ptr %185, align 8, !dbg !5030, !tbaa !5140
  %187 = and i64 %186, 4294967295, !dbg !5030
  %188 = icmp eq i64 %187, 16, !dbg !5030
  br i1 %188, label %assert_end72, label %assert_fail71, !dbg !5030, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %189(ptr nonnull @.str.1351), !dbg !5030
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.shape, i64 2, !dbg !5030
  %191 = load i64, ptr %190, align 8, !dbg !5030, !tbaa !5142
  %192 = and i64 %191, 4294967295, !dbg !5030
  %193 = icmp eq i64 %192, 1, !dbg !5030
  br i1 %193, label %assert_end74, label %assert_fail73, !dbg !5030, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %194(ptr nonnull @.str.1352), !dbg !5030
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.shape, i64 3, !dbg !5030
  %196 = load i64, ptr %195, align 8, !dbg !5030, !tbaa !5145
  %197 = and i64 %196, 4294967295, !dbg !5030
  %198 = icmp eq i64 %197, 1, !dbg !5030
  br i1 %198, label %assert_end76, label %assert_fail75, !dbg !5030, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %199(ptr nonnull @.str.1353), !dbg !5030
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.shape, i64 4, !dbg !5030
  %201 = load i64, ptr %200, align 8, !dbg !5030, !tbaa !5147
  %202 = and i64 %201, 4294967295, !dbg !5030
  %203 = icmp eq i64 %202, 32, !dbg !5030
  br i1 %203, label %assert_end78, label %assert_fail77, !dbg !5030, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %204(ptr nonnull @.str.1354), !dbg !5030
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.strides, null, !dbg !5030
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !5030, !prof !52

if_then79:                                        ; preds = %assert_end78
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.strides, i64 1, !dbg !5030
  %206 = load i64, ptr %205, align 8, !dbg !5030, !tbaa !5151
  %207 = and i64 %206, 4294967295, !dbg !5030
  %208 = icmp eq i64 %207, 32, !dbg !5030
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.p2.strides, i64 4, !dbg !5030
  %210 = load i64, ptr %209, align 8, !dbg !5030, !tbaa !5161
  %211 = and i64 %210, 4294967295, !dbg !5030
  %212 = icmp eq i64 %211, 1, !dbg !5030
  %213 = and i1 %208, %212, !dbg !5030
  br i1 %213, label %if_end80, label %assert_fail81, !dbg !5030, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %214 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !5030
  %215 = load i64, ptr %214, align 8, !dbg !5030
  %216 = icmp eq i64 %215, 0, !dbg !5030
  br i1 %216, label %assert_end84, label %assert_fail83, !dbg !5030, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %217(ptr nonnull @.str.1355), !dbg !5030
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %218(ptr nonnull @.str.1356), !dbg !5030
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %219 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !5030
  %220 = load i32, ptr %219, align 4, !dbg !5030
  %221 = icmp eq i32 %220, 1, !dbg !5030
  br i1 %221, label %assert_end86, label %assert_fail85, !dbg !5030, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %222(ptr nonnull @.str.1357), !dbg !5030
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %223 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !5030
  %224 = load i32, ptr %223, align 4, !dbg !5030
  %225 = icmp eq i32 %dev_id, %224, !dbg !5030
  br i1 %225, label %assert_end88, label %assert_fail87, !dbg !5030, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %226 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %226(ptr nonnull @.str.1358), !dbg !5030
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %227 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !5030
  %228 = load i32, ptr %227, align 4, !dbg !5030
  %229 = icmp eq i32 %228, 5, !dbg !5030
  br i1 %229, label %assert_end92, label %assert_fail89, !dbg !5030, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %230 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %230(ptr nonnull @.str.1359), !dbg !5030
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %231 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !5030
  %232 = load i16, ptr %231, align 2, !dbg !5030
  %233 = icmp eq i16 %232, 1, !dbg !5030
  %234 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !5030
  %235 = load i8, ptr %234, align 1, !dbg !5030
  %236 = icmp eq i8 %235, 32, !dbg !5030
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !5030
  %238 = load i8, ptr %237, align 1, !dbg !5030
  %239 = icmp eq i8 %238, 2, !dbg !5030
  %240 = and i1 %236, %239, !dbg !5030
  %241 = and i1 %233, %240, !dbg !5030
  br i1 %241, label %assert_end94, label %assert_fail93, !dbg !5030, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %242(ptr nonnull @.str.1360), !dbg !5030
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %243 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.shape, align 8, !dbg !5030, !tbaa !5165
  %244 = and i64 %243, 4294967295, !dbg !5030
  %245 = icmp eq i64 %244, 1, !dbg !5030
  br i1 %245, label %assert_end96, label %assert_fail95, !dbg !5030, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %246(ptr nonnull @.str.1361), !dbg !5030
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.shape, i64 1, !dbg !5030
  %248 = load i64, ptr %247, align 8, !dbg !5030, !tbaa !5175
  %249 = and i64 %248, 4294967295, !dbg !5030
  %250 = icmp eq i64 %249, 16, !dbg !5030
  br i1 %250, label %assert_end98, label %assert_fail97, !dbg !5030, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %251(ptr nonnull @.str.1362), !dbg !5030
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.shape, i64 2, !dbg !5030
  %253 = load i64, ptr %252, align 8, !dbg !5030, !tbaa !5177
  %254 = and i64 %253, 4294967295, !dbg !5030
  %255 = icmp eq i64 %254, 7, !dbg !5030
  br i1 %255, label %assert_end100, label %assert_fail99, !dbg !5030, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %256(ptr nonnull @.str.1363), !dbg !5030
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.shape, i64 3, !dbg !5030
  %258 = load i64, ptr %257, align 8, !dbg !5030, !tbaa !5180
  %259 = and i64 %258, 4294967295, !dbg !5030
  %260 = icmp eq i64 %259, 7, !dbg !5030
  br i1 %260, label %assert_end102, label %assert_fail101, !dbg !5030, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %261(ptr nonnull @.str.1364), !dbg !5030
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.shape, i64 4, !dbg !5030
  %263 = load i64, ptr %262, align 8, !dbg !5030, !tbaa !5182
  %264 = and i64 %263, 4294967295, !dbg !5030
  %265 = icmp eq i64 %264, 32, !dbg !5030
  br i1 %265, label %assert_end104, label %assert_fail103, !dbg !5030, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %266(ptr nonnull @.str.1365), !dbg !5030
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.strides, null, !dbg !5030
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !5030, !prof !52

if_then105:                                       ; preds = %assert_end104
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.strides, i64 1, !dbg !5030
  %268 = load i64, ptr %267, align 8, !dbg !5030, !tbaa !5186
  %269 = and i64 %268, 4294967295, !dbg !5030
  %270 = icmp eq i64 %269, 1568, !dbg !5030
  %271 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.strides, i64 2, !dbg !5030
  %272 = load i64, ptr %271, align 8, !dbg !5030, !tbaa !5196
  %273 = and i64 %272, 4294967295, !dbg !5030
  %274 = icmp eq i64 %273, 224, !dbg !5030
  %275 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.strides, i64 3, !dbg !5030
  %276 = load i64, ptr %275, align 8, !dbg !5030, !tbaa !5199
  %277 = and i64 %276, 4294967295, !dbg !5030
  %278 = icmp eq i64 %277, 32, !dbg !5030
  %279 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14.T_relu.strides, i64 4, !dbg !5030
  %280 = load i64, ptr %279, align 8, !dbg !5030, !tbaa !5201
  %281 = and i64 %280, 4294967295, !dbg !5030
  %282 = icmp eq i64 %281, 1, !dbg !5030
  %283 = and i1 %278, %282, !dbg !5030
  %284 = and i1 %274, %283, !dbg !5030
  %285 = and i1 %270, %284, !dbg !5030
  br i1 %285, label %if_end106, label %assert_fail107, !dbg !5030, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %286 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !5030
  %287 = load i64, ptr %286, align 8, !dbg !5030
  %288 = icmp eq i64 %287, 0, !dbg !5030
  br i1 %288, label %assert_end110, label %assert_fail109, !dbg !5030, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %289(ptr nonnull @.str.1366), !dbg !5030
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %290(ptr nonnull @.str.1367), !dbg !5030
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %291 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !5030
  %292 = load i32, ptr %291, align 4, !dbg !5030
  %293 = icmp eq i32 %292, 1, !dbg !5030
  br i1 %293, label %assert_end112, label %assert_fail111, !dbg !5030, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %294(ptr nonnull @.str.1368), !dbg !5030
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %295 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !5030
  %296 = load i32, ptr %295, align 4, !dbg !5030
  %297 = icmp eq i32 %dev_id, %296, !dbg !5030
  br i1 %297, label %assert_end114, label %assert_fail113, !dbg !5030, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %298 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5030, !tbaa !19
  tail call void %298(ptr nonnull @.str.1369), !dbg !5030
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %299 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_compute_(ptr %p0115, ptr %p1116, ptr %T_relu117, ptr %p2118), !dbg !5030
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5205 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5207, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5208, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5209, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5210, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5211, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5212, metadata !DIExpression()), !dbg !5213
  %0 = icmp eq i32 %num_args, 4, !dbg !5213
  br i1 %0, label %assert_end, label %assert_fail, !dbg !5213, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %299, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !5213

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %1(ptr nonnull @.str.1371), !dbg !5213
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5213, !tbaa !5214
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5213
  %p1.code = load i32, ptr %2, align 4, !dbg !5213, !tbaa !5225
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5213
  %p2.code = load i32, ptr %3, align 4, !dbg !5213, !tbaa !5227
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !5213
  %T_relu.code = load i32, ptr %4, align 4, !dbg !5213, !tbaa !5230
  %p0 = load ptr, ptr %args, align 8, !dbg !5213
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5213
  %p1 = load ptr, ptr %5, align 8, !dbg !5213
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5213
  %p2 = load ptr, ptr %6, align 8, !dbg !5213
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !5213
  %T_relu = load ptr, ptr %7, align 8, !dbg !5213
  %p0115 = load ptr, ptr %p0, align 8, !dbg !5213
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !5213
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5213
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.shape = load ptr, ptr %8, align 8, !dbg !5213
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5213
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.strides = load ptr, ptr %9, align 8, !dbg !5213
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5213
  %dev_id = load i32, ptr %10, align 4, !dbg !5213
  %p1116 = load ptr, ptr %p1, align 8, !dbg !5213
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !5213
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5213
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.shape = load ptr, ptr %11, align 8, !dbg !5213
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5213
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.strides = load ptr, ptr %12, align 8, !dbg !5213
  %p2118 = load ptr, ptr %p2, align 8, !dbg !5213
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !5213
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !5213
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.shape = load ptr, ptr %13, align 8, !dbg !5213
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !5213
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.strides = load ptr, ptr %14, align 8, !dbg !5213
  %T_relu117 = load ptr, ptr %T_relu, align 8, !dbg !5213
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu117, i64 64) ], !dbg !5213
  %15 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !5213
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.shape = load ptr, ptr %15, align 8, !dbg !5213
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !5213
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.strides = load ptr, ptr %16, align 8, !dbg !5213
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !5213

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %17(ptr nonnull @.str.1372), !dbg !5213
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !5213

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %18(ptr nonnull @.str.1373), !dbg !5213
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !5213

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %19(ptr nonnull @.str.1374), !dbg !5213
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !5213

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %20(ptr nonnull @.str.1375), !dbg !5213
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5213
  %22 = load i32, ptr %21, align 4, !dbg !5213
  %23 = icmp eq i32 %22, 5, !dbg !5213
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !5213, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %24(ptr nonnull @.str.1376), !dbg !5213
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5213
  %26 = load i16, ptr %25, align 2, !dbg !5213
  %27 = icmp eq i16 %26, 1, !dbg !5213
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5213
  %29 = load i8, ptr %28, align 1, !dbg !5213
  %30 = icmp eq i8 %29, 32, !dbg !5213
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5213
  %32 = load i8, ptr %31, align 1, !dbg !5213
  %33 = icmp eq i8 %32, 2, !dbg !5213
  %34 = and i1 %30, %33, !dbg !5213
  %35 = and i1 %27, %34, !dbg !5213
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !5213, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %36(ptr nonnull @.str.1377), !dbg !5213
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.shape, align 8, !dbg !5213, !tbaa !5232
  %38 = and i64 %37, 4294967295, !dbg !5213
  %39 = icmp eq i64 %38, 1, !dbg !5213
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !5213, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %40(ptr nonnull @.str.1378), !dbg !5213
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.shape, i64 1, !dbg !5213
  %42 = load i64, ptr %41, align 8, !dbg !5213, !tbaa !5242
  %43 = and i64 %42, 4294967295, !dbg !5213
  %44 = icmp eq i64 %43, 1, !dbg !5213
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !5213, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %45(ptr nonnull @.str.1379), !dbg !5213
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.shape, i64 2, !dbg !5213
  %47 = load i64, ptr %46, align 8, !dbg !5213, !tbaa !5244
  %48 = and i64 %47, 4294967295, !dbg !5213
  %49 = icmp eq i64 %48, 7, !dbg !5213
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !5213, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %50(ptr nonnull @.str.1380), !dbg !5213
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.shape, i64 3, !dbg !5213
  %52 = load i64, ptr %51, align 8, !dbg !5213, !tbaa !5247
  %53 = and i64 %52, 4294967295, !dbg !5213
  %54 = icmp eq i64 %53, 7, !dbg !5213
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !5213, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %55(ptr nonnull @.str.1381), !dbg !5213
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.shape, i64 4, !dbg !5213
  %57 = load i64, ptr %56, align 8, !dbg !5213, !tbaa !5249
  %58 = and i64 %57, 4294967295, !dbg !5213
  %59 = icmp eq i64 %58, 512, !dbg !5213
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !5213, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %60(ptr nonnull @.str.1382), !dbg !5213
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.strides, null, !dbg !5213
  br i1 %.not, label %if_end, label %if_then, !dbg !5213, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.strides, i64 2, !dbg !5213
  %62 = load i64, ptr %61, align 8, !dbg !5213, !tbaa !5253
  %63 = and i64 %62, 4294967295, !dbg !5213
  %64 = icmp eq i64 %63, 3584, !dbg !5213
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.strides, i64 3, !dbg !5213
  %66 = load i64, ptr %65, align 8, !dbg !5213, !tbaa !5263
  %67 = and i64 %66, 4294967295, !dbg !5213
  %68 = icmp eq i64 %67, 512, !dbg !5213
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p0.strides, i64 4, !dbg !5213
  %70 = load i64, ptr %69, align 8, !dbg !5213, !tbaa !5265
  %71 = and i64 %70, 4294967295, !dbg !5213
  %72 = icmp eq i64 %71, 1, !dbg !5213
  %73 = and i1 %68, %72, !dbg !5213
  %74 = and i1 %64, %73, !dbg !5213
  br i1 %74, label %if_end, label %assert_fail29, !dbg !5213, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5213
  %76 = load i64, ptr %75, align 8, !dbg !5213
  %77 = icmp eq i64 %76, 0, !dbg !5213
  br i1 %77, label %assert_end32, label %assert_fail31, !dbg !5213, !prof !18

assert_fail29:                                    ; preds = %if_then
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %78(ptr nonnull @.str.1383), !dbg !5213
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %79(ptr nonnull @.str.1384), !dbg !5213
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5213
  %81 = load i32, ptr %80, align 4, !dbg !5213
  %82 = icmp eq i32 %81, 1, !dbg !5213
  br i1 %82, label %assert_end34, label %assert_fail33, !dbg !5213, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %83(ptr nonnull @.str.1385), !dbg !5213
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5213
  %85 = load i32, ptr %84, align 4, !dbg !5213
  %86 = icmp eq i32 %85, 6, !dbg !5213
  br i1 %86, label %assert_end38, label %assert_fail35, !dbg !5213, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %87 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %87(ptr nonnull @.str.1386), !dbg !5213
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %88 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5213
  %89 = load i16, ptr %88, align 2, !dbg !5213
  %90 = icmp eq i16 %89, 1, !dbg !5213
  %91 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5213
  %92 = load i8, ptr %91, align 1, !dbg !5213
  %93 = icmp eq i8 %92, 32, !dbg !5213
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5213
  %95 = load i8, ptr %94, align 1, !dbg !5213
  %96 = icmp eq i8 %95, 2, !dbg !5213
  %97 = and i1 %93, %96, !dbg !5213
  %98 = and i1 %90, %97, !dbg !5213
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !5213, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %99(ptr nonnull @.str.1387), !dbg !5213
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.shape, align 8, !dbg !5213, !tbaa !5269
  %101 = and i64 %100, 4294967295, !dbg !5213
  %102 = icmp eq i64 %101, 16, !dbg !5213
  br i1 %102, label %assert_end42, label %assert_fail41, !dbg !5213, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %103(ptr nonnull @.str.1388), !dbg !5213
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.shape, i64 1, !dbg !5213
  %105 = load i64, ptr %104, align 8, !dbg !5213, !tbaa !5279
  %106 = and i64 %105, 4294967295, !dbg !5213
  %107 = icmp eq i64 %106, 1, !dbg !5213
  br i1 %107, label %assert_end44, label %assert_fail43, !dbg !5213, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %108(ptr nonnull @.str.1389), !dbg !5213
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.shape, i64 2, !dbg !5213
  %110 = load i64, ptr %109, align 8, !dbg !5213, !tbaa !5281
  %111 = and i64 %110, 4294967295, !dbg !5213
  %112 = icmp eq i64 %111, 3, !dbg !5213
  br i1 %112, label %assert_end46, label %assert_fail45, !dbg !5213, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %113(ptr nonnull @.str.1390), !dbg !5213
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.shape, i64 3, !dbg !5213
  %115 = load i64, ptr %114, align 8, !dbg !5213, !tbaa !5284
  %116 = and i64 %115, 4294967295, !dbg !5213
  %117 = icmp eq i64 %116, 3, !dbg !5213
  br i1 %117, label %assert_end48, label %assert_fail47, !dbg !5213, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %118(ptr nonnull @.str.1391), !dbg !5213
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.shape, i64 4, !dbg !5213
  %120 = load i64, ptr %119, align 8, !dbg !5213, !tbaa !5286
  %121 = and i64 %120, 4294967295, !dbg !5213
  %122 = icmp eq i64 %121, 512, !dbg !5213
  br i1 %122, label %assert_end50, label %assert_fail49, !dbg !5213, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %123(ptr nonnull @.str.1392), !dbg !5213
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.shape, i64 5, !dbg !5213
  %125 = load i64, ptr %124, align 8, !dbg !5213, !tbaa !5290
  %126 = and i64 %125, 4294967295, !dbg !5213
  %127 = icmp eq i64 %126, 32, !dbg !5213
  br i1 %127, label %assert_end52, label %assert_fail51, !dbg !5213, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %128(ptr nonnull @.str.1393), !dbg !5213
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.strides, null, !dbg !5213
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !5213, !prof !52

if_then53:                                        ; preds = %assert_end52
  %129 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.strides, align 8, !dbg !5213, !tbaa !5292
  %130 = and i64 %129, 4294967295, !dbg !5213
  %131 = icmp eq i64 %130, 147456, !dbg !5213
  %132 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.strides, i64 2, !dbg !5213
  %133 = load i64, ptr %132, align 8, !dbg !5213, !tbaa !5302
  %134 = and i64 %133, 4294967295, !dbg !5213
  %135 = icmp eq i64 %134, 49152, !dbg !5213
  %136 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.strides, i64 3, !dbg !5213
  %137 = load i64, ptr %136, align 8, !dbg !5213, !tbaa !5305
  %138 = and i64 %137, 4294967295, !dbg !5213
  %139 = icmp eq i64 %138, 16384, !dbg !5213
  %140 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.strides, i64 4, !dbg !5213
  %141 = load i64, ptr %140, align 8, !dbg !5213, !tbaa !5307
  %142 = and i64 %141, 4294967295, !dbg !5213
  %143 = icmp eq i64 %142, 32, !dbg !5213
  %144 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p1.strides, i64 5, !dbg !5213
  %145 = load i64, ptr %144, align 8, !dbg !5213, !tbaa !5311
  %146 = and i64 %145, 4294967295, !dbg !5213
  %147 = icmp eq i64 %146, 1, !dbg !5213
  %148 = and i1 %143, %147, !dbg !5213
  %149 = and i1 %139, %148, !dbg !5213
  %150 = and i1 %135, %149, !dbg !5213
  %151 = and i1 %131, %150, !dbg !5213
  br i1 %151, label %if_end54, label %assert_fail55, !dbg !5213, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %152 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5213
  %153 = load i64, ptr %152, align 8, !dbg !5213
  %154 = icmp eq i64 %153, 0, !dbg !5213
  br i1 %154, label %assert_end58, label %assert_fail57, !dbg !5213, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %155(ptr nonnull @.str.1394), !dbg !5213
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %156(ptr nonnull @.str.1395), !dbg !5213
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %157 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5213
  %158 = load i32, ptr %157, align 4, !dbg !5213
  %159 = icmp eq i32 %158, 1, !dbg !5213
  br i1 %159, label %assert_end60, label %assert_fail59, !dbg !5213, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %160(ptr nonnull @.str.1396), !dbg !5213
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %161 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5213
  %162 = load i32, ptr %161, align 4, !dbg !5213
  %163 = icmp eq i32 %dev_id, %162, !dbg !5213
  br i1 %163, label %assert_end62, label %assert_fail61, !dbg !5213, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %164 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %164(ptr nonnull @.str.1397), !dbg !5213
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %165 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !5213
  %166 = load i32, ptr %165, align 4, !dbg !5213
  %167 = icmp eq i32 %166, 5, !dbg !5213
  br i1 %167, label %assert_end66, label %assert_fail63, !dbg !5213, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %168 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %168(ptr nonnull @.str.1398), !dbg !5213
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %169 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !5213
  %170 = load i16, ptr %169, align 2, !dbg !5213
  %171 = icmp eq i16 %170, 1, !dbg !5213
  %172 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !5213
  %173 = load i8, ptr %172, align 1, !dbg !5213
  %174 = icmp eq i8 %173, 32, !dbg !5213
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !5213
  %176 = load i8, ptr %175, align 1, !dbg !5213
  %177 = icmp eq i8 %176, 2, !dbg !5213
  %178 = and i1 %174, %177, !dbg !5213
  %179 = and i1 %171, %178, !dbg !5213
  br i1 %179, label %assert_end68, label %assert_fail67, !dbg !5213, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %180(ptr nonnull @.str.1399), !dbg !5213
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %181 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.shape, align 8, !dbg !5213, !tbaa !5313
  %182 = and i64 %181, 4294967295, !dbg !5213
  %183 = icmp eq i64 %182, 1, !dbg !5213
  br i1 %183, label %assert_end70, label %assert_fail69, !dbg !5213, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %184(ptr nonnull @.str.1400), !dbg !5213
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %185 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.shape, i64 1, !dbg !5213
  %186 = load i64, ptr %185, align 8, !dbg !5213, !tbaa !5323
  %187 = and i64 %186, 4294967295, !dbg !5213
  %188 = icmp eq i64 %187, 16, !dbg !5213
  br i1 %188, label %assert_end72, label %assert_fail71, !dbg !5213, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %189(ptr nonnull @.str.1401), !dbg !5213
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.shape, i64 2, !dbg !5213
  %191 = load i64, ptr %190, align 8, !dbg !5213, !tbaa !5325
  %192 = and i64 %191, 4294967295, !dbg !5213
  %193 = icmp eq i64 %192, 1, !dbg !5213
  br i1 %193, label %assert_end74, label %assert_fail73, !dbg !5213, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %194(ptr nonnull @.str.1402), !dbg !5213
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.shape, i64 3, !dbg !5213
  %196 = load i64, ptr %195, align 8, !dbg !5213, !tbaa !5328
  %197 = and i64 %196, 4294967295, !dbg !5213
  %198 = icmp eq i64 %197, 1, !dbg !5213
  br i1 %198, label %assert_end76, label %assert_fail75, !dbg !5213, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %199(ptr nonnull @.str.1403), !dbg !5213
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.shape, i64 4, !dbg !5213
  %201 = load i64, ptr %200, align 8, !dbg !5213, !tbaa !5330
  %202 = and i64 %201, 4294967295, !dbg !5213
  %203 = icmp eq i64 %202, 32, !dbg !5213
  br i1 %203, label %assert_end78, label %assert_fail77, !dbg !5213, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %204(ptr nonnull @.str.1404), !dbg !5213
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.strides, null, !dbg !5213
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !5213, !prof !52

if_then79:                                        ; preds = %assert_end78
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.strides, i64 1, !dbg !5213
  %206 = load i64, ptr %205, align 8, !dbg !5213, !tbaa !5334
  %207 = and i64 %206, 4294967295, !dbg !5213
  %208 = icmp eq i64 %207, 32, !dbg !5213
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.p2.strides, i64 4, !dbg !5213
  %210 = load i64, ptr %209, align 8, !dbg !5213, !tbaa !5344
  %211 = and i64 %210, 4294967295, !dbg !5213
  %212 = icmp eq i64 %211, 1, !dbg !5213
  %213 = and i1 %208, %212, !dbg !5213
  br i1 %213, label %if_end80, label %assert_fail81, !dbg !5213, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %214 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !5213
  %215 = load i64, ptr %214, align 8, !dbg !5213
  %216 = icmp eq i64 %215, 0, !dbg !5213
  br i1 %216, label %assert_end84, label %assert_fail83, !dbg !5213, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %217(ptr nonnull @.str.1405), !dbg !5213
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %218(ptr nonnull @.str.1406), !dbg !5213
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %219 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !5213
  %220 = load i32, ptr %219, align 4, !dbg !5213
  %221 = icmp eq i32 %220, 1, !dbg !5213
  br i1 %221, label %assert_end86, label %assert_fail85, !dbg !5213, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %222(ptr nonnull @.str.1407), !dbg !5213
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %223 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !5213
  %224 = load i32, ptr %223, align 4, !dbg !5213
  %225 = icmp eq i32 %dev_id, %224, !dbg !5213
  br i1 %225, label %assert_end88, label %assert_fail87, !dbg !5213, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %226 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %226(ptr nonnull @.str.1408), !dbg !5213
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %227 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !5213
  %228 = load i32, ptr %227, align 4, !dbg !5213
  %229 = icmp eq i32 %228, 5, !dbg !5213
  br i1 %229, label %assert_end92, label %assert_fail89, !dbg !5213, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %230 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %230(ptr nonnull @.str.1409), !dbg !5213
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %231 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !5213
  %232 = load i16, ptr %231, align 2, !dbg !5213
  %233 = icmp eq i16 %232, 1, !dbg !5213
  %234 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !5213
  %235 = load i8, ptr %234, align 1, !dbg !5213
  %236 = icmp eq i8 %235, 32, !dbg !5213
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !5213
  %238 = load i8, ptr %237, align 1, !dbg !5213
  %239 = icmp eq i8 %238, 2, !dbg !5213
  %240 = and i1 %236, %239, !dbg !5213
  %241 = and i1 %233, %240, !dbg !5213
  br i1 %241, label %assert_end94, label %assert_fail93, !dbg !5213, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %242(ptr nonnull @.str.1410), !dbg !5213
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %243 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.shape, align 8, !dbg !5213, !tbaa !5348
  %244 = and i64 %243, 4294967295, !dbg !5213
  %245 = icmp eq i64 %244, 1, !dbg !5213
  br i1 %245, label %assert_end96, label %assert_fail95, !dbg !5213, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %246(ptr nonnull @.str.1411), !dbg !5213
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.shape, i64 1, !dbg !5213
  %248 = load i64, ptr %247, align 8, !dbg !5213, !tbaa !5358
  %249 = and i64 %248, 4294967295, !dbg !5213
  %250 = icmp eq i64 %249, 16, !dbg !5213
  br i1 %250, label %assert_end98, label %assert_fail97, !dbg !5213, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %251(ptr nonnull @.str.1412), !dbg !5213
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.shape, i64 2, !dbg !5213
  %253 = load i64, ptr %252, align 8, !dbg !5213, !tbaa !5360
  %254 = and i64 %253, 4294967295, !dbg !5213
  %255 = icmp eq i64 %254, 7, !dbg !5213
  br i1 %255, label %assert_end100, label %assert_fail99, !dbg !5213, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %256(ptr nonnull @.str.1413), !dbg !5213
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.shape, i64 3, !dbg !5213
  %258 = load i64, ptr %257, align 8, !dbg !5213, !tbaa !5363
  %259 = and i64 %258, 4294967295, !dbg !5213
  %260 = icmp eq i64 %259, 7, !dbg !5213
  br i1 %260, label %assert_end102, label %assert_fail101, !dbg !5213, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %261(ptr nonnull @.str.1414), !dbg !5213
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.shape, i64 4, !dbg !5213
  %263 = load i64, ptr %262, align 8, !dbg !5213, !tbaa !5365
  %264 = and i64 %263, 4294967295, !dbg !5213
  %265 = icmp eq i64 %264, 32, !dbg !5213
  br i1 %265, label %assert_end104, label %assert_fail103, !dbg !5213, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %266(ptr nonnull @.str.1415), !dbg !5213
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.strides, null, !dbg !5213
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !5213, !prof !52

if_then105:                                       ; preds = %assert_end104
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.strides, i64 1, !dbg !5213
  %268 = load i64, ptr %267, align 8, !dbg !5213, !tbaa !5369
  %269 = and i64 %268, 4294967295, !dbg !5213
  %270 = icmp eq i64 %269, 1568, !dbg !5213
  %271 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.strides, i64 2, !dbg !5213
  %272 = load i64, ptr %271, align 8, !dbg !5213, !tbaa !5379
  %273 = and i64 %272, 4294967295, !dbg !5213
  %274 = icmp eq i64 %273, 224, !dbg !5213
  %275 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.strides, i64 3, !dbg !5213
  %276 = load i64, ptr %275, align 8, !dbg !5213, !tbaa !5382
  %277 = and i64 %276, 4294967295, !dbg !5213
  %278 = icmp eq i64 %277, 32, !dbg !5213
  %279 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15.T_relu.strides, i64 4, !dbg !5213
  %280 = load i64, ptr %279, align 8, !dbg !5213, !tbaa !5384
  %281 = and i64 %280, 4294967295, !dbg !5213
  %282 = icmp eq i64 %281, 1, !dbg !5213
  %283 = and i1 %278, %282, !dbg !5213
  %284 = and i1 %274, %283, !dbg !5213
  %285 = and i1 %270, %284, !dbg !5213
  br i1 %285, label %if_end106, label %assert_fail107, !dbg !5213, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %286 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !5213
  %287 = load i64, ptr %286, align 8, !dbg !5213
  %288 = icmp eq i64 %287, 0, !dbg !5213
  br i1 %288, label %assert_end110, label %assert_fail109, !dbg !5213, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %289(ptr nonnull @.str.1416), !dbg !5213
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %290(ptr nonnull @.str.1417), !dbg !5213
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %291 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !5213
  %292 = load i32, ptr %291, align 4, !dbg !5213
  %293 = icmp eq i32 %292, 1, !dbg !5213
  br i1 %293, label %assert_end112, label %assert_fail111, !dbg !5213, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %294(ptr nonnull @.str.1418), !dbg !5213
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %295 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !5213
  %296 = load i32, ptr %295, align 4, !dbg !5213
  %297 = icmp eq i32 %dev_id, %296, !dbg !5213
  br i1 %297, label %assert_end114, label %assert_fail113, !dbg !5213, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %298 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5213, !tbaa !19
  tail call void %298(ptr nonnull @.str.1419), !dbg !5213
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %299 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_compute_(i32 %dev_id, ptr %p0115, ptr %p1116, ptr %T_relu117, ptr %p2118), !dbg !5213
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5388 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5390, metadata !DIExpression()), !dbg !5396
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5391, metadata !DIExpression()), !dbg !5396
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5392, metadata !DIExpression()), !dbg !5396
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5393, metadata !DIExpression()), !dbg !5396
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5394, metadata !DIExpression()), !dbg !5396
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5395, metadata !DIExpression()), !dbg !5396
  %0 = icmp eq i32 %num_args, 4, !dbg !5396
  br i1 %0, label %assert_end, label %assert_fail, !dbg !5396, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %299, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !5396

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %1(ptr nonnull @.str.1422), !dbg !5396
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5396, !tbaa !5397
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5396
  %p1.code = load i32, ptr %2, align 4, !dbg !5396, !tbaa !5408
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5396
  %p2.code = load i32, ptr %3, align 4, !dbg !5396, !tbaa !5410
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !5396
  %T_relu.code = load i32, ptr %4, align 4, !dbg !5396, !tbaa !5413
  %p0 = load ptr, ptr %args, align 8, !dbg !5396
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5396
  %p1 = load ptr, ptr %5, align 8, !dbg !5396
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5396
  %p2 = load ptr, ptr %6, align 8, !dbg !5396
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !5396
  %T_relu = load ptr, ptr %7, align 8, !dbg !5396
  %p0115 = load ptr, ptr %p0, align 8, !dbg !5396
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !5396
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5396
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.shape = load ptr, ptr %8, align 8, !dbg !5396
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5396
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.strides = load ptr, ptr %9, align 8, !dbg !5396
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5396
  %dev_id = load i32, ptr %10, align 4, !dbg !5396
  %p1116 = load ptr, ptr %p1, align 8, !dbg !5396
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !5396
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5396
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.shape = load ptr, ptr %11, align 8, !dbg !5396
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5396
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.strides = load ptr, ptr %12, align 8, !dbg !5396
  %p2118 = load ptr, ptr %p2, align 8, !dbg !5396
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !5396
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !5396
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.shape = load ptr, ptr %13, align 8, !dbg !5396
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !5396
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.strides = load ptr, ptr %14, align 8, !dbg !5396
  %T_relu117 = load ptr, ptr %T_relu, align 8, !dbg !5396
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu117, i64 64) ], !dbg !5396
  %15 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !5396
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.shape = load ptr, ptr %15, align 8, !dbg !5396
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !5396
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.strides = load ptr, ptr %16, align 8, !dbg !5396
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !5396

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %17(ptr nonnull @.str.1423), !dbg !5396
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !5396

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %18(ptr nonnull @.str.1424), !dbg !5396
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !5396

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %19(ptr nonnull @.str.1425), !dbg !5396
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !5396

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %20(ptr nonnull @.str.1426), !dbg !5396
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5396
  %22 = load i32, ptr %21, align 4, !dbg !5396
  %23 = icmp eq i32 %22, 5, !dbg !5396
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !5396, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %24(ptr nonnull @.str.1427), !dbg !5396
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5396
  %26 = load i16, ptr %25, align 2, !dbg !5396
  %27 = icmp eq i16 %26, 1, !dbg !5396
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5396
  %29 = load i8, ptr %28, align 1, !dbg !5396
  %30 = icmp eq i8 %29, 32, !dbg !5396
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5396
  %32 = load i8, ptr %31, align 1, !dbg !5396
  %33 = icmp eq i8 %32, 2, !dbg !5396
  %34 = and i1 %30, %33, !dbg !5396
  %35 = and i1 %27, %34, !dbg !5396
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !5396, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %36(ptr nonnull @.str.1428), !dbg !5396
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.shape, align 8, !dbg !5396, !tbaa !5415
  %38 = and i64 %37, 4294967295, !dbg !5396
  %39 = icmp eq i64 %38, 1, !dbg !5396
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !5396, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %40(ptr nonnull @.str.1429), !dbg !5396
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.shape, i64 1, !dbg !5396
  %42 = load i64, ptr %41, align 8, !dbg !5396, !tbaa !5425
  %43 = and i64 %42, 4294967295, !dbg !5396
  %44 = icmp eq i64 %43, 1, !dbg !5396
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !5396, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %45(ptr nonnull @.str.1430), !dbg !5396
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.shape, i64 2, !dbg !5396
  %47 = load i64, ptr %46, align 8, !dbg !5396, !tbaa !5427
  %48 = and i64 %47, 4294967295, !dbg !5396
  %49 = icmp eq i64 %48, 56, !dbg !5396
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !5396, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %50(ptr nonnull @.str.1431), !dbg !5396
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.shape, i64 3, !dbg !5396
  %52 = load i64, ptr %51, align 8, !dbg !5396, !tbaa !5430
  %53 = and i64 %52, 4294967295, !dbg !5396
  %54 = icmp eq i64 %53, 56, !dbg !5396
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !5396, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %55(ptr nonnull @.str.1432), !dbg !5396
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.shape, i64 4, !dbg !5396
  %57 = load i64, ptr %56, align 8, !dbg !5396, !tbaa !5432
  %58 = and i64 %57, 4294967295, !dbg !5396
  %59 = icmp eq i64 %58, 64, !dbg !5396
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !5396, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %60(ptr nonnull @.str.1433), !dbg !5396
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.strides, null, !dbg !5396
  br i1 %.not, label %if_end, label %if_then, !dbg !5396, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.strides, i64 2, !dbg !5396
  %62 = load i64, ptr %61, align 8, !dbg !5396, !tbaa !5436
  %63 = and i64 %62, 4294967295, !dbg !5396
  %64 = icmp eq i64 %63, 3584, !dbg !5396
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.strides, i64 3, !dbg !5396
  %66 = load i64, ptr %65, align 8, !dbg !5396, !tbaa !5446
  %67 = and i64 %66, 4294967295, !dbg !5396
  %68 = icmp eq i64 %67, 64, !dbg !5396
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p0.strides, i64 4, !dbg !5396
  %70 = load i64, ptr %69, align 8, !dbg !5396, !tbaa !5448
  %71 = and i64 %70, 4294967295, !dbg !5396
  %72 = icmp eq i64 %71, 1, !dbg !5396
  %73 = and i1 %68, %72, !dbg !5396
  %74 = and i1 %64, %73, !dbg !5396
  br i1 %74, label %if_end, label %assert_fail29, !dbg !5396, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5396
  %76 = load i64, ptr %75, align 8, !dbg !5396
  %77 = icmp eq i64 %76, 0, !dbg !5396
  br i1 %77, label %assert_end32, label %assert_fail31, !dbg !5396, !prof !18

assert_fail29:                                    ; preds = %if_then
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %78(ptr nonnull @.str.1434), !dbg !5396
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %79(ptr nonnull @.str.1435), !dbg !5396
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5396
  %81 = load i32, ptr %80, align 4, !dbg !5396
  %82 = icmp eq i32 %81, 1, !dbg !5396
  br i1 %82, label %assert_end34, label %assert_fail33, !dbg !5396, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %83(ptr nonnull @.str.1436), !dbg !5396
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5396
  %85 = load i32, ptr %84, align 4, !dbg !5396
  %86 = icmp eq i32 %85, 6, !dbg !5396
  br i1 %86, label %assert_end38, label %assert_fail35, !dbg !5396, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %87 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %87(ptr nonnull @.str.1437), !dbg !5396
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %88 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5396
  %89 = load i16, ptr %88, align 2, !dbg !5396
  %90 = icmp eq i16 %89, 1, !dbg !5396
  %91 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5396
  %92 = load i8, ptr %91, align 1, !dbg !5396
  %93 = icmp eq i8 %92, 32, !dbg !5396
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5396
  %95 = load i8, ptr %94, align 1, !dbg !5396
  %96 = icmp eq i8 %95, 2, !dbg !5396
  %97 = and i1 %93, %96, !dbg !5396
  %98 = and i1 %90, %97, !dbg !5396
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !5396, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %99(ptr nonnull @.str.1438), !dbg !5396
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.shape, align 8, !dbg !5396, !tbaa !5452
  %101 = and i64 %100, 4294967295, !dbg !5396
  %102 = icmp eq i64 %101, 2, !dbg !5396
  br i1 %102, label %assert_end42, label %assert_fail41, !dbg !5396, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %103(ptr nonnull @.str.1439), !dbg !5396
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.shape, i64 1, !dbg !5396
  %105 = load i64, ptr %104, align 8, !dbg !5396, !tbaa !5462
  %106 = and i64 %105, 4294967295, !dbg !5396
  %107 = icmp eq i64 %106, 1, !dbg !5396
  br i1 %107, label %assert_end44, label %assert_fail43, !dbg !5396, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %108(ptr nonnull @.str.1440), !dbg !5396
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.shape, i64 2, !dbg !5396
  %110 = load i64, ptr %109, align 8, !dbg !5396, !tbaa !5464
  %111 = and i64 %110, 4294967295, !dbg !5396
  %112 = icmp eq i64 %111, 3, !dbg !5396
  br i1 %112, label %assert_end46, label %assert_fail45, !dbg !5396, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %113(ptr nonnull @.str.1441), !dbg !5396
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.shape, i64 3, !dbg !5396
  %115 = load i64, ptr %114, align 8, !dbg !5396, !tbaa !5467
  %116 = and i64 %115, 4294967295, !dbg !5396
  %117 = icmp eq i64 %116, 3, !dbg !5396
  br i1 %117, label %assert_end48, label %assert_fail47, !dbg !5396, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %118(ptr nonnull @.str.1442), !dbg !5396
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.shape, i64 4, !dbg !5396
  %120 = load i64, ptr %119, align 8, !dbg !5396, !tbaa !5469
  %121 = and i64 %120, 4294967295, !dbg !5396
  %122 = icmp eq i64 %121, 64, !dbg !5396
  br i1 %122, label %assert_end50, label %assert_fail49, !dbg !5396, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %123(ptr nonnull @.str.1443), !dbg !5396
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.shape, i64 5, !dbg !5396
  %125 = load i64, ptr %124, align 8, !dbg !5396, !tbaa !5473
  %126 = and i64 %125, 4294967295, !dbg !5396
  %127 = icmp eq i64 %126, 32, !dbg !5396
  br i1 %127, label %assert_end52, label %assert_fail51, !dbg !5396, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %128(ptr nonnull @.str.1444), !dbg !5396
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.strides, null, !dbg !5396
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !5396, !prof !52

if_then53:                                        ; preds = %assert_end52
  %129 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.strides, align 8, !dbg !5396, !tbaa !5475
  %130 = and i64 %129, 4294967295, !dbg !5396
  %131 = icmp eq i64 %130, 18432, !dbg !5396
  %132 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.strides, i64 2, !dbg !5396
  %133 = load i64, ptr %132, align 8, !dbg !5396, !tbaa !5485
  %134 = and i64 %133, 4294967295, !dbg !5396
  %135 = icmp eq i64 %134, 6144, !dbg !5396
  %136 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.strides, i64 3, !dbg !5396
  %137 = load i64, ptr %136, align 8, !dbg !5396, !tbaa !5488
  %138 = and i64 %137, 4294967295, !dbg !5396
  %139 = icmp eq i64 %138, 2048, !dbg !5396
  %140 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.strides, i64 4, !dbg !5396
  %141 = load i64, ptr %140, align 8, !dbg !5396, !tbaa !5490
  %142 = and i64 %141, 4294967295, !dbg !5396
  %143 = icmp eq i64 %142, 32, !dbg !5396
  %144 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p1.strides, i64 5, !dbg !5396
  %145 = load i64, ptr %144, align 8, !dbg !5396, !tbaa !5494
  %146 = and i64 %145, 4294967295, !dbg !5396
  %147 = icmp eq i64 %146, 1, !dbg !5396
  %148 = and i1 %143, %147, !dbg !5396
  %149 = and i1 %139, %148, !dbg !5396
  %150 = and i1 %135, %149, !dbg !5396
  %151 = and i1 %131, %150, !dbg !5396
  br i1 %151, label %if_end54, label %assert_fail55, !dbg !5396, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %152 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5396
  %153 = load i64, ptr %152, align 8, !dbg !5396
  %154 = icmp eq i64 %153, 0, !dbg !5396
  br i1 %154, label %assert_end58, label %assert_fail57, !dbg !5396, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %155(ptr nonnull @.str.1445), !dbg !5396
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %156(ptr nonnull @.str.1446), !dbg !5396
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %157 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5396
  %158 = load i32, ptr %157, align 4, !dbg !5396
  %159 = icmp eq i32 %158, 1, !dbg !5396
  br i1 %159, label %assert_end60, label %assert_fail59, !dbg !5396, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %160(ptr nonnull @.str.1447), !dbg !5396
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %161 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5396
  %162 = load i32, ptr %161, align 4, !dbg !5396
  %163 = icmp eq i32 %dev_id, %162, !dbg !5396
  br i1 %163, label %assert_end62, label %assert_fail61, !dbg !5396, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %164 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %164(ptr nonnull @.str.1448), !dbg !5396
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %165 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !5396
  %166 = load i32, ptr %165, align 4, !dbg !5396
  %167 = icmp eq i32 %166, 5, !dbg !5396
  br i1 %167, label %assert_end66, label %assert_fail63, !dbg !5396, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %168 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %168(ptr nonnull @.str.1449), !dbg !5396
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %169 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !5396
  %170 = load i16, ptr %169, align 2, !dbg !5396
  %171 = icmp eq i16 %170, 1, !dbg !5396
  %172 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !5396
  %173 = load i8, ptr %172, align 1, !dbg !5396
  %174 = icmp eq i8 %173, 32, !dbg !5396
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !5396
  %176 = load i8, ptr %175, align 1, !dbg !5396
  %177 = icmp eq i8 %176, 2, !dbg !5396
  %178 = and i1 %174, %177, !dbg !5396
  %179 = and i1 %171, %178, !dbg !5396
  br i1 %179, label %assert_end68, label %assert_fail67, !dbg !5396, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %180(ptr nonnull @.str.1450), !dbg !5396
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %181 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.shape, align 8, !dbg !5396, !tbaa !5496
  %182 = and i64 %181, 4294967295, !dbg !5396
  %183 = icmp eq i64 %182, 1, !dbg !5396
  br i1 %183, label %assert_end70, label %assert_fail69, !dbg !5396, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %184(ptr nonnull @.str.1451), !dbg !5396
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %185 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.shape, i64 1, !dbg !5396
  %186 = load i64, ptr %185, align 8, !dbg !5396, !tbaa !5506
  %187 = and i64 %186, 4294967295, !dbg !5396
  %188 = icmp eq i64 %187, 2, !dbg !5396
  br i1 %188, label %assert_end72, label %assert_fail71, !dbg !5396, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %189(ptr nonnull @.str.1452), !dbg !5396
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.shape, i64 2, !dbg !5396
  %191 = load i64, ptr %190, align 8, !dbg !5396, !tbaa !5508
  %192 = and i64 %191, 4294967295, !dbg !5396
  %193 = icmp eq i64 %192, 1, !dbg !5396
  br i1 %193, label %assert_end74, label %assert_fail73, !dbg !5396, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %194(ptr nonnull @.str.1453), !dbg !5396
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.shape, i64 3, !dbg !5396
  %196 = load i64, ptr %195, align 8, !dbg !5396, !tbaa !5511
  %197 = and i64 %196, 4294967295, !dbg !5396
  %198 = icmp eq i64 %197, 1, !dbg !5396
  br i1 %198, label %assert_end76, label %assert_fail75, !dbg !5396, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %199(ptr nonnull @.str.1454), !dbg !5396
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.shape, i64 4, !dbg !5396
  %201 = load i64, ptr %200, align 8, !dbg !5396, !tbaa !5513
  %202 = and i64 %201, 4294967295, !dbg !5396
  %203 = icmp eq i64 %202, 32, !dbg !5396
  br i1 %203, label %assert_end78, label %assert_fail77, !dbg !5396, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %204(ptr nonnull @.str.1455), !dbg !5396
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.strides, null, !dbg !5396
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !5396, !prof !52

if_then79:                                        ; preds = %assert_end78
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.strides, i64 1, !dbg !5396
  %206 = load i64, ptr %205, align 8, !dbg !5396, !tbaa !5517
  %207 = and i64 %206, 4294967295, !dbg !5396
  %208 = icmp eq i64 %207, 32, !dbg !5396
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.p2.strides, i64 4, !dbg !5396
  %210 = load i64, ptr %209, align 8, !dbg !5396, !tbaa !5527
  %211 = and i64 %210, 4294967295, !dbg !5396
  %212 = icmp eq i64 %211, 1, !dbg !5396
  %213 = and i1 %208, %212, !dbg !5396
  br i1 %213, label %if_end80, label %assert_fail81, !dbg !5396, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %214 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !5396
  %215 = load i64, ptr %214, align 8, !dbg !5396
  %216 = icmp eq i64 %215, 0, !dbg !5396
  br i1 %216, label %assert_end84, label %assert_fail83, !dbg !5396, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %217(ptr nonnull @.str.1456), !dbg !5396
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %218(ptr nonnull @.str.1457), !dbg !5396
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %219 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !5396
  %220 = load i32, ptr %219, align 4, !dbg !5396
  %221 = icmp eq i32 %220, 1, !dbg !5396
  br i1 %221, label %assert_end86, label %assert_fail85, !dbg !5396, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %222(ptr nonnull @.str.1458), !dbg !5396
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %223 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !5396
  %224 = load i32, ptr %223, align 4, !dbg !5396
  %225 = icmp eq i32 %dev_id, %224, !dbg !5396
  br i1 %225, label %assert_end88, label %assert_fail87, !dbg !5396, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %226 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %226(ptr nonnull @.str.1459), !dbg !5396
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %227 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !5396
  %228 = load i32, ptr %227, align 4, !dbg !5396
  %229 = icmp eq i32 %228, 5, !dbg !5396
  br i1 %229, label %assert_end92, label %assert_fail89, !dbg !5396, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %230 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %230(ptr nonnull @.str.1460), !dbg !5396
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %231 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !5396
  %232 = load i16, ptr %231, align 2, !dbg !5396
  %233 = icmp eq i16 %232, 1, !dbg !5396
  %234 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !5396
  %235 = load i8, ptr %234, align 1, !dbg !5396
  %236 = icmp eq i8 %235, 32, !dbg !5396
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !5396
  %238 = load i8, ptr %237, align 1, !dbg !5396
  %239 = icmp eq i8 %238, 2, !dbg !5396
  %240 = and i1 %236, %239, !dbg !5396
  %241 = and i1 %233, %240, !dbg !5396
  br i1 %241, label %assert_end94, label %assert_fail93, !dbg !5396, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %242(ptr nonnull @.str.1461), !dbg !5396
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %243 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.shape, align 8, !dbg !5396, !tbaa !5531
  %244 = and i64 %243, 4294967295, !dbg !5396
  %245 = icmp eq i64 %244, 1, !dbg !5396
  br i1 %245, label %assert_end96, label %assert_fail95, !dbg !5396, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %246(ptr nonnull @.str.1462), !dbg !5396
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.shape, i64 1, !dbg !5396
  %248 = load i64, ptr %247, align 8, !dbg !5396, !tbaa !5541
  %249 = and i64 %248, 4294967295, !dbg !5396
  %250 = icmp eq i64 %249, 2, !dbg !5396
  br i1 %250, label %assert_end98, label %assert_fail97, !dbg !5396, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %251(ptr nonnull @.str.1463), !dbg !5396
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.shape, i64 2, !dbg !5396
  %253 = load i64, ptr %252, align 8, !dbg !5396, !tbaa !5543
  %254 = and i64 %253, 4294967295, !dbg !5396
  %255 = icmp eq i64 %254, 56, !dbg !5396
  br i1 %255, label %assert_end100, label %assert_fail99, !dbg !5396, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %256(ptr nonnull @.str.1464), !dbg !5396
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.shape, i64 3, !dbg !5396
  %258 = load i64, ptr %257, align 8, !dbg !5396, !tbaa !5546
  %259 = and i64 %258, 4294967295, !dbg !5396
  %260 = icmp eq i64 %259, 56, !dbg !5396
  br i1 %260, label %assert_end102, label %assert_fail101, !dbg !5396, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %261(ptr nonnull @.str.1465), !dbg !5396
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.shape, i64 4, !dbg !5396
  %263 = load i64, ptr %262, align 8, !dbg !5396, !tbaa !5548
  %264 = and i64 %263, 4294967295, !dbg !5396
  %265 = icmp eq i64 %264, 32, !dbg !5396
  br i1 %265, label %assert_end104, label %assert_fail103, !dbg !5396, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %266(ptr nonnull @.str.1466), !dbg !5396
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.strides, null, !dbg !5396
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !5396, !prof !52

if_then105:                                       ; preds = %assert_end104
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.strides, i64 1, !dbg !5396
  %268 = load i64, ptr %267, align 8, !dbg !5396, !tbaa !5552
  %269 = and i64 %268, 4294967295, !dbg !5396
  %270 = icmp eq i64 %269, 100352, !dbg !5396
  %271 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.strides, i64 2, !dbg !5396
  %272 = load i64, ptr %271, align 8, !dbg !5396, !tbaa !5562
  %273 = and i64 %272, 4294967295, !dbg !5396
  %274 = icmp eq i64 %273, 1792, !dbg !5396
  %275 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.strides, i64 3, !dbg !5396
  %276 = load i64, ptr %275, align 8, !dbg !5396, !tbaa !5565
  %277 = and i64 %276, 4294967295, !dbg !5396
  %278 = icmp eq i64 %277, 32, !dbg !5396
  %279 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2.T_relu.strides, i64 4, !dbg !5396
  %280 = load i64, ptr %279, align 8, !dbg !5396, !tbaa !5567
  %281 = and i64 %280, 4294967295, !dbg !5396
  %282 = icmp eq i64 %281, 1, !dbg !5396
  %283 = and i1 %278, %282, !dbg !5396
  %284 = and i1 %274, %283, !dbg !5396
  %285 = and i1 %270, %284, !dbg !5396
  br i1 %285, label %if_end106, label %assert_fail107, !dbg !5396, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %286 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !5396
  %287 = load i64, ptr %286, align 8, !dbg !5396
  %288 = icmp eq i64 %287, 0, !dbg !5396
  br i1 %288, label %assert_end110, label %assert_fail109, !dbg !5396, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %289(ptr nonnull @.str.1467), !dbg !5396
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %290(ptr nonnull @.str.1468), !dbg !5396
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %291 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !5396
  %292 = load i32, ptr %291, align 4, !dbg !5396
  %293 = icmp eq i32 %292, 1, !dbg !5396
  br i1 %293, label %assert_end112, label %assert_fail111, !dbg !5396, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %294(ptr nonnull @.str.1469), !dbg !5396
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %295 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !5396
  %296 = load i32, ptr %295, align 4, !dbg !5396
  %297 = icmp eq i32 %dev_id, %296, !dbg !5396
  br i1 %297, label %assert_end114, label %assert_fail113, !dbg !5396, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %298 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5396, !tbaa !19
  tail call void %298(ptr nonnull @.str.1470), !dbg !5396
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %299 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_compute_(i32 %dev_id, ptr %p0115, ptr %p1116, ptr %T_relu117, ptr %p2118), !dbg !5396
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5571 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5573, metadata !DIExpression()), !dbg !5579
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5574, metadata !DIExpression()), !dbg !5579
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5575, metadata !DIExpression()), !dbg !5579
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5576, metadata !DIExpression()), !dbg !5579
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5577, metadata !DIExpression()), !dbg !5579
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5578, metadata !DIExpression()), !dbg !5579
  %0 = icmp eq i32 %num_args, 4, !dbg !5579
  br i1 %0, label %assert_end, label %assert_fail, !dbg !5579, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %289, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !5579

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %1(ptr nonnull @.str.1473), !dbg !5579
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5579, !tbaa !5580
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5579
  %p1.code = load i32, ptr %2, align 4, !dbg !5579, !tbaa !5591
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5579
  %p2.code = load i32, ptr %3, align 4, !dbg !5579, !tbaa !5593
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !5579
  %T_relu.code = load i32, ptr %4, align 4, !dbg !5579, !tbaa !5596
  %p0 = load ptr, ptr %args, align 8, !dbg !5579
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5579
  %p1 = load ptr, ptr %5, align 8, !dbg !5579
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5579
  %p2 = load ptr, ptr %6, align 8, !dbg !5579
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !5579
  %T_relu = load ptr, ptr %7, align 8, !dbg !5579
  %p0115 = load ptr, ptr %p0, align 8, !dbg !5579
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !5579
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5579
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.shape = load ptr, ptr %8, align 8, !dbg !5579
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5579
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.strides = load ptr, ptr %9, align 8, !dbg !5579
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5579
  %dev_id = load i32, ptr %10, align 4, !dbg !5579
  %p1116 = load ptr, ptr %p1, align 8, !dbg !5579
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !5579
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5579
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.shape = load ptr, ptr %11, align 8, !dbg !5579
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5579
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.strides = load ptr, ptr %12, align 8, !dbg !5579
  %p2118 = load ptr, ptr %p2, align 8, !dbg !5579
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !5579
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !5579
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.shape = load ptr, ptr %13, align 8, !dbg !5579
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !5579
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.strides = load ptr, ptr %14, align 8, !dbg !5579
  %T_relu117 = load ptr, ptr %T_relu, align 8, !dbg !5579
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu117, i64 64) ], !dbg !5579
  %15 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !5579
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.shape = load ptr, ptr %15, align 8, !dbg !5579
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !5579
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.strides = load ptr, ptr %16, align 8, !dbg !5579
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !5579

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %17(ptr nonnull @.str.1474), !dbg !5579
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !5579

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %18(ptr nonnull @.str.1475), !dbg !5579
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !5579

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %19(ptr nonnull @.str.1476), !dbg !5579
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !5579

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %20(ptr nonnull @.str.1477), !dbg !5579
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5579
  %22 = load i32, ptr %21, align 4, !dbg !5579
  %23 = icmp eq i32 %22, 5, !dbg !5579
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !5579, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %24(ptr nonnull @.str.1478), !dbg !5579
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5579
  %26 = load i16, ptr %25, align 2, !dbg !5579
  %27 = icmp eq i16 %26, 1, !dbg !5579
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5579
  %29 = load i8, ptr %28, align 1, !dbg !5579
  %30 = icmp eq i8 %29, 32, !dbg !5579
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5579
  %32 = load i8, ptr %31, align 1, !dbg !5579
  %33 = icmp eq i8 %32, 2, !dbg !5579
  %34 = and i1 %30, %33, !dbg !5579
  %35 = and i1 %27, %34, !dbg !5579
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !5579, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %36(ptr nonnull @.str.1479), !dbg !5579
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.shape, align 8, !dbg !5579, !tbaa !5598
  %38 = and i64 %37, 4294967295, !dbg !5579
  %39 = icmp eq i64 %38, 1, !dbg !5579
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !5579, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %40(ptr nonnull @.str.1480), !dbg !5579
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.shape, i64 1, !dbg !5579
  %42 = load i64, ptr %41, align 8, !dbg !5579, !tbaa !5608
  %43 = and i64 %42, 4294967295, !dbg !5579
  %44 = icmp eq i64 %43, 1, !dbg !5579
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !5579, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %45(ptr nonnull @.str.1481), !dbg !5579
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.shape, i64 2, !dbg !5579
  %47 = load i64, ptr %46, align 8, !dbg !5579, !tbaa !5610
  %48 = and i64 %47, 4294967295, !dbg !5579
  %49 = icmp eq i64 %48, 56, !dbg !5579
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !5579, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %50(ptr nonnull @.str.1482), !dbg !5579
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.shape, i64 3, !dbg !5579
  %52 = load i64, ptr %51, align 8, !dbg !5579, !tbaa !5613
  %53 = and i64 %52, 4294967295, !dbg !5579
  %54 = icmp eq i64 %53, 56, !dbg !5579
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !5579, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %55(ptr nonnull @.str.1483), !dbg !5579
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.shape, i64 4, !dbg !5579
  %57 = load i64, ptr %56, align 8, !dbg !5579, !tbaa !5615
  %58 = and i64 %57, 4294967295, !dbg !5579
  %59 = icmp eq i64 %58, 256, !dbg !5579
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !5579, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %60(ptr nonnull @.str.1484), !dbg !5579
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.strides, null, !dbg !5579
  br i1 %.not, label %if_end, label %if_then, !dbg !5579, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.strides, i64 2, !dbg !5579
  %62 = load i64, ptr %61, align 8, !dbg !5579, !tbaa !5619
  %63 = and i64 %62, 4294967295, !dbg !5579
  %64 = icmp eq i64 %63, 14336, !dbg !5579
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.strides, i64 3, !dbg !5579
  %66 = load i64, ptr %65, align 8, !dbg !5579, !tbaa !5629
  %67 = and i64 %66, 4294967295, !dbg !5579
  %68 = icmp eq i64 %67, 256, !dbg !5579
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p0.strides, i64 4, !dbg !5579
  %70 = load i64, ptr %69, align 8, !dbg !5579, !tbaa !5631
  %71 = and i64 %70, 4294967295, !dbg !5579
  %72 = icmp eq i64 %71, 1, !dbg !5579
  %73 = and i1 %68, %72, !dbg !5579
  %74 = and i1 %64, %73, !dbg !5579
  br i1 %74, label %if_end, label %assert_fail29, !dbg !5579, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5579
  %76 = load i64, ptr %75, align 8, !dbg !5579
  %77 = icmp eq i64 %76, 0, !dbg !5579
  br i1 %77, label %assert_end32, label %assert_fail31, !dbg !5579, !prof !18

assert_fail29:                                    ; preds = %if_then
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %78(ptr nonnull @.str.1485), !dbg !5579
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %79(ptr nonnull @.str.1486), !dbg !5579
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5579
  %81 = load i32, ptr %80, align 4, !dbg !5579
  %82 = icmp eq i32 %81, 1, !dbg !5579
  br i1 %82, label %assert_end34, label %assert_fail33, !dbg !5579, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %83(ptr nonnull @.str.1487), !dbg !5579
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5579
  %85 = load i32, ptr %84, align 4, !dbg !5579
  %86 = icmp eq i32 %85, 6, !dbg !5579
  br i1 %86, label %assert_end38, label %assert_fail35, !dbg !5579, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %87 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %87(ptr nonnull @.str.1488), !dbg !5579
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %88 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5579
  %89 = load i16, ptr %88, align 2, !dbg !5579
  %90 = icmp eq i16 %89, 1, !dbg !5579
  %91 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5579
  %92 = load i8, ptr %91, align 1, !dbg !5579
  %93 = icmp eq i8 %92, 32, !dbg !5579
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5579
  %95 = load i8, ptr %94, align 1, !dbg !5579
  %96 = icmp eq i8 %95, 2, !dbg !5579
  %97 = and i1 %93, %96, !dbg !5579
  %98 = and i1 %90, %97, !dbg !5579
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !5579, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %99(ptr nonnull @.str.1489), !dbg !5579
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.shape, align 8, !dbg !5579, !tbaa !5635
  %101 = and i64 %100, 4294967295, !dbg !5579
  %102 = icmp eq i64 %101, 2, !dbg !5579
  br i1 %102, label %assert_end42, label %assert_fail41, !dbg !5579, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %103(ptr nonnull @.str.1490), !dbg !5579
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.shape, i64 1, !dbg !5579
  %105 = load i64, ptr %104, align 8, !dbg !5579, !tbaa !5645
  %106 = and i64 %105, 4294967295, !dbg !5579
  %107 = icmp eq i64 %106, 1, !dbg !5579
  br i1 %107, label %assert_end44, label %assert_fail43, !dbg !5579, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %108(ptr nonnull @.str.1491), !dbg !5579
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.shape, i64 2, !dbg !5579
  %110 = load i64, ptr %109, align 8, !dbg !5579, !tbaa !5647
  %111 = and i64 %110, 4294967295, !dbg !5579
  %112 = icmp eq i64 %111, 1, !dbg !5579
  br i1 %112, label %assert_end46, label %assert_fail45, !dbg !5579, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %113(ptr nonnull @.str.1492), !dbg !5579
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.shape, i64 3, !dbg !5579
  %115 = load i64, ptr %114, align 8, !dbg !5579, !tbaa !5650
  %116 = and i64 %115, 4294967295, !dbg !5579
  %117 = icmp eq i64 %116, 1, !dbg !5579
  br i1 %117, label %assert_end48, label %assert_fail47, !dbg !5579, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %118(ptr nonnull @.str.1493), !dbg !5579
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.shape, i64 4, !dbg !5579
  %120 = load i64, ptr %119, align 8, !dbg !5579, !tbaa !5652
  %121 = and i64 %120, 4294967295, !dbg !5579
  %122 = icmp eq i64 %121, 256, !dbg !5579
  br i1 %122, label %assert_end50, label %assert_fail49, !dbg !5579, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %123(ptr nonnull @.str.1494), !dbg !5579
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.shape, i64 5, !dbg !5579
  %125 = load i64, ptr %124, align 8, !dbg !5579, !tbaa !5656
  %126 = and i64 %125, 4294967295, !dbg !5579
  %127 = icmp eq i64 %126, 32, !dbg !5579
  br i1 %127, label %assert_end52, label %assert_fail51, !dbg !5579, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %128(ptr nonnull @.str.1495), !dbg !5579
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.strides, null, !dbg !5579
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !5579, !prof !52

if_then53:                                        ; preds = %assert_end52
  %129 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.strides, align 8, !dbg !5579, !tbaa !5658
  %130 = and i64 %129, 4294967295, !dbg !5579
  %131 = icmp eq i64 %130, 8192, !dbg !5579
  %132 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.strides, i64 4, !dbg !5579
  %133 = load i64, ptr %132, align 8, !dbg !5579, !tbaa !5668
  %134 = and i64 %133, 4294967295, !dbg !5579
  %135 = icmp eq i64 %134, 32, !dbg !5579
  %136 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p1.strides, i64 5, !dbg !5579
  %137 = load i64, ptr %136, align 8, !dbg !5579, !tbaa !5672
  %138 = and i64 %137, 4294967295, !dbg !5579
  %139 = icmp eq i64 %138, 1, !dbg !5579
  %140 = and i1 %135, %139, !dbg !5579
  %141 = and i1 %131, %140, !dbg !5579
  br i1 %141, label %if_end54, label %assert_fail55, !dbg !5579, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %142 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5579
  %143 = load i64, ptr %142, align 8, !dbg !5579
  %144 = icmp eq i64 %143, 0, !dbg !5579
  br i1 %144, label %assert_end58, label %assert_fail57, !dbg !5579, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %145(ptr nonnull @.str.1496), !dbg !5579
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %146(ptr nonnull @.str.1497), !dbg !5579
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %147 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5579
  %148 = load i32, ptr %147, align 4, !dbg !5579
  %149 = icmp eq i32 %148, 1, !dbg !5579
  br i1 %149, label %assert_end60, label %assert_fail59, !dbg !5579, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %150(ptr nonnull @.str.1498), !dbg !5579
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %151 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5579
  %152 = load i32, ptr %151, align 4, !dbg !5579
  %153 = icmp eq i32 %dev_id, %152, !dbg !5579
  br i1 %153, label %assert_end62, label %assert_fail61, !dbg !5579, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %154 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %154(ptr nonnull @.str.1499), !dbg !5579
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %155 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !5579
  %156 = load i32, ptr %155, align 4, !dbg !5579
  %157 = icmp eq i32 %156, 5, !dbg !5579
  br i1 %157, label %assert_end66, label %assert_fail63, !dbg !5579, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %158 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %158(ptr nonnull @.str.1500), !dbg !5579
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %159 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !5579
  %160 = load i16, ptr %159, align 2, !dbg !5579
  %161 = icmp eq i16 %160, 1, !dbg !5579
  %162 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !5579
  %163 = load i8, ptr %162, align 1, !dbg !5579
  %164 = icmp eq i8 %163, 32, !dbg !5579
  %165 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !5579
  %166 = load i8, ptr %165, align 1, !dbg !5579
  %167 = icmp eq i8 %166, 2, !dbg !5579
  %168 = and i1 %164, %167, !dbg !5579
  %169 = and i1 %161, %168, !dbg !5579
  br i1 %169, label %assert_end68, label %assert_fail67, !dbg !5579, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %170(ptr nonnull @.str.1501), !dbg !5579
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %171 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.shape, align 8, !dbg !5579, !tbaa !5674
  %172 = and i64 %171, 4294967295, !dbg !5579
  %173 = icmp eq i64 %172, 1, !dbg !5579
  br i1 %173, label %assert_end70, label %assert_fail69, !dbg !5579, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %174(ptr nonnull @.str.1502), !dbg !5579
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %175 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.shape, i64 1, !dbg !5579
  %176 = load i64, ptr %175, align 8, !dbg !5579, !tbaa !5684
  %177 = and i64 %176, 4294967295, !dbg !5579
  %178 = icmp eq i64 %177, 2, !dbg !5579
  br i1 %178, label %assert_end72, label %assert_fail71, !dbg !5579, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %179(ptr nonnull @.str.1503), !dbg !5579
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.shape, i64 2, !dbg !5579
  %181 = load i64, ptr %180, align 8, !dbg !5579, !tbaa !5686
  %182 = and i64 %181, 4294967295, !dbg !5579
  %183 = icmp eq i64 %182, 1, !dbg !5579
  br i1 %183, label %assert_end74, label %assert_fail73, !dbg !5579, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %184(ptr nonnull @.str.1504), !dbg !5579
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %185 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.shape, i64 3, !dbg !5579
  %186 = load i64, ptr %185, align 8, !dbg !5579, !tbaa !5689
  %187 = and i64 %186, 4294967295, !dbg !5579
  %188 = icmp eq i64 %187, 1, !dbg !5579
  br i1 %188, label %assert_end76, label %assert_fail75, !dbg !5579, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %189(ptr nonnull @.str.1505), !dbg !5579
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.shape, i64 4, !dbg !5579
  %191 = load i64, ptr %190, align 8, !dbg !5579, !tbaa !5691
  %192 = and i64 %191, 4294967295, !dbg !5579
  %193 = icmp eq i64 %192, 32, !dbg !5579
  br i1 %193, label %assert_end78, label %assert_fail77, !dbg !5579, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %194(ptr nonnull @.str.1506), !dbg !5579
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.strides, null, !dbg !5579
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !5579, !prof !52

if_then79:                                        ; preds = %assert_end78
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.strides, i64 1, !dbg !5579
  %196 = load i64, ptr %195, align 8, !dbg !5579, !tbaa !5695
  %197 = and i64 %196, 4294967295, !dbg !5579
  %198 = icmp eq i64 %197, 32, !dbg !5579
  %199 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.p2.strides, i64 4, !dbg !5579
  %200 = load i64, ptr %199, align 8, !dbg !5579, !tbaa !5705
  %201 = and i64 %200, 4294967295, !dbg !5579
  %202 = icmp eq i64 %201, 1, !dbg !5579
  %203 = and i1 %198, %202, !dbg !5579
  br i1 %203, label %if_end80, label %assert_fail81, !dbg !5579, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %204 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !5579
  %205 = load i64, ptr %204, align 8, !dbg !5579
  %206 = icmp eq i64 %205, 0, !dbg !5579
  br i1 %206, label %assert_end84, label %assert_fail83, !dbg !5579, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %207(ptr nonnull @.str.1507), !dbg !5579
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %208(ptr nonnull @.str.1508), !dbg !5579
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %209 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !5579
  %210 = load i32, ptr %209, align 4, !dbg !5579
  %211 = icmp eq i32 %210, 1, !dbg !5579
  br i1 %211, label %assert_end86, label %assert_fail85, !dbg !5579, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %212(ptr nonnull @.str.1509), !dbg !5579
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %213 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !5579
  %214 = load i32, ptr %213, align 4, !dbg !5579
  %215 = icmp eq i32 %dev_id, %214, !dbg !5579
  br i1 %215, label %assert_end88, label %assert_fail87, !dbg !5579, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %216 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %216(ptr nonnull @.str.1510), !dbg !5579
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %217 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !5579
  %218 = load i32, ptr %217, align 4, !dbg !5579
  %219 = icmp eq i32 %218, 5, !dbg !5579
  br i1 %219, label %assert_end92, label %assert_fail89, !dbg !5579, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %220 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %220(ptr nonnull @.str.1511), !dbg !5579
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %221 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !5579
  %222 = load i16, ptr %221, align 2, !dbg !5579
  %223 = icmp eq i16 %222, 1, !dbg !5579
  %224 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !5579
  %225 = load i8, ptr %224, align 1, !dbg !5579
  %226 = icmp eq i8 %225, 32, !dbg !5579
  %227 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !5579
  %228 = load i8, ptr %227, align 1, !dbg !5579
  %229 = icmp eq i8 %228, 2, !dbg !5579
  %230 = and i1 %226, %229, !dbg !5579
  %231 = and i1 %223, %230, !dbg !5579
  br i1 %231, label %assert_end94, label %assert_fail93, !dbg !5579, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %232 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %232(ptr nonnull @.str.1512), !dbg !5579
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %233 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.shape, align 8, !dbg !5579, !tbaa !5709
  %234 = and i64 %233, 4294967295, !dbg !5579
  %235 = icmp eq i64 %234, 1, !dbg !5579
  br i1 %235, label %assert_end96, label %assert_fail95, !dbg !5579, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %236(ptr nonnull @.str.1513), !dbg !5579
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %237 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.shape, i64 1, !dbg !5579
  %238 = load i64, ptr %237, align 8, !dbg !5579, !tbaa !5719
  %239 = and i64 %238, 4294967295, !dbg !5579
  %240 = icmp eq i64 %239, 2, !dbg !5579
  br i1 %240, label %assert_end98, label %assert_fail97, !dbg !5579, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %241(ptr nonnull @.str.1514), !dbg !5579
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.shape, i64 2, !dbg !5579
  %243 = load i64, ptr %242, align 8, !dbg !5579, !tbaa !5721
  %244 = and i64 %243, 4294967295, !dbg !5579
  %245 = icmp eq i64 %244, 56, !dbg !5579
  br i1 %245, label %assert_end100, label %assert_fail99, !dbg !5579, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %246(ptr nonnull @.str.1515), !dbg !5579
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.shape, i64 3, !dbg !5579
  %248 = load i64, ptr %247, align 8, !dbg !5579, !tbaa !5724
  %249 = and i64 %248, 4294967295, !dbg !5579
  %250 = icmp eq i64 %249, 56, !dbg !5579
  br i1 %250, label %assert_end102, label %assert_fail101, !dbg !5579, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %251(ptr nonnull @.str.1516), !dbg !5579
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.shape, i64 4, !dbg !5579
  %253 = load i64, ptr %252, align 8, !dbg !5579, !tbaa !5726
  %254 = and i64 %253, 4294967295, !dbg !5579
  %255 = icmp eq i64 %254, 32, !dbg !5579
  br i1 %255, label %assert_end104, label %assert_fail103, !dbg !5579, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %256(ptr nonnull @.str.1517), !dbg !5579
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.strides, null, !dbg !5579
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !5579, !prof !52

if_then105:                                       ; preds = %assert_end104
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.strides, i64 1, !dbg !5579
  %258 = load i64, ptr %257, align 8, !dbg !5579, !tbaa !5730
  %259 = and i64 %258, 4294967295, !dbg !5579
  %260 = icmp eq i64 %259, 100352, !dbg !5579
  %261 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.strides, i64 2, !dbg !5579
  %262 = load i64, ptr %261, align 8, !dbg !5579, !tbaa !5740
  %263 = and i64 %262, 4294967295, !dbg !5579
  %264 = icmp eq i64 %263, 1792, !dbg !5579
  %265 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.strides, i64 3, !dbg !5579
  %266 = load i64, ptr %265, align 8, !dbg !5579, !tbaa !5743
  %267 = and i64 %266, 4294967295, !dbg !5579
  %268 = icmp eq i64 %267, 32, !dbg !5579
  %269 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3.T_relu.strides, i64 4, !dbg !5579
  %270 = load i64, ptr %269, align 8, !dbg !5579, !tbaa !5745
  %271 = and i64 %270, 4294967295, !dbg !5579
  %272 = icmp eq i64 %271, 1, !dbg !5579
  %273 = and i1 %268, %272, !dbg !5579
  %274 = and i1 %264, %273, !dbg !5579
  %275 = and i1 %260, %274, !dbg !5579
  br i1 %275, label %if_end106, label %assert_fail107, !dbg !5579, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %276 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !5579
  %277 = load i64, ptr %276, align 8, !dbg !5579
  %278 = icmp eq i64 %277, 0, !dbg !5579
  br i1 %278, label %assert_end110, label %assert_fail109, !dbg !5579, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %279 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %279(ptr nonnull @.str.1518), !dbg !5579
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %280 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %280(ptr nonnull @.str.1519), !dbg !5579
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %281 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !5579
  %282 = load i32, ptr %281, align 4, !dbg !5579
  %283 = icmp eq i32 %282, 1, !dbg !5579
  br i1 %283, label %assert_end112, label %assert_fail111, !dbg !5579, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %284(ptr nonnull @.str.1520), !dbg !5579
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %285 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !5579
  %286 = load i32, ptr %285, align 4, !dbg !5579
  %287 = icmp eq i32 %dev_id, %286, !dbg !5579
  br i1 %287, label %assert_end114, label %assert_fail113, !dbg !5579, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %288 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5579, !tbaa !19
  tail call void %288(ptr nonnull @.str.1521), !dbg !5579
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %289 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_compute_(i32 %dev_id, ptr %p0115, ptr %p1116, ptr %T_relu117, ptr %p2118), !dbg !5579
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5749 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5751, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5752, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5753, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5754, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5755, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5756, metadata !DIExpression()), !dbg !5757
  %0 = icmp eq i32 %num_args, 4, !dbg !5757
  br i1 %0, label %assert_end, label %assert_fail, !dbg !5757, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %299, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !5757

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %1(ptr nonnull @.str.1523), !dbg !5757
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5757, !tbaa !5758
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5757
  %p1.code = load i32, ptr %2, align 4, !dbg !5757, !tbaa !5769
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5757
  %p2.code = load i32, ptr %3, align 4, !dbg !5757, !tbaa !5771
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !5757
  %T_relu.code = load i32, ptr %4, align 4, !dbg !5757, !tbaa !5774
  %p0 = load ptr, ptr %args, align 8, !dbg !5757
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5757
  %p1 = load ptr, ptr %5, align 8, !dbg !5757
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5757
  %p2 = load ptr, ptr %6, align 8, !dbg !5757
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !5757
  %T_relu = load ptr, ptr %7, align 8, !dbg !5757
  %p0115 = load ptr, ptr %p0, align 8, !dbg !5757
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !5757
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5757
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.shape = load ptr, ptr %8, align 8, !dbg !5757
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5757
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.strides = load ptr, ptr %9, align 8, !dbg !5757
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5757
  %dev_id = load i32, ptr %10, align 4, !dbg !5757
  %p1116 = load ptr, ptr %p1, align 8, !dbg !5757
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !5757
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5757
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.shape = load ptr, ptr %11, align 8, !dbg !5757
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5757
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.strides = load ptr, ptr %12, align 8, !dbg !5757
  %p2118 = load ptr, ptr %p2, align 8, !dbg !5757
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !5757
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !5757
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.shape = load ptr, ptr %13, align 8, !dbg !5757
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !5757
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.strides = load ptr, ptr %14, align 8, !dbg !5757
  %T_relu117 = load ptr, ptr %T_relu, align 8, !dbg !5757
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu117, i64 64) ], !dbg !5757
  %15 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !5757
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.shape = load ptr, ptr %15, align 8, !dbg !5757
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !5757
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.strides = load ptr, ptr %16, align 8, !dbg !5757
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !5757

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %17(ptr nonnull @.str.1524), !dbg !5757
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !5757

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %18(ptr nonnull @.str.1525), !dbg !5757
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !5757

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %19(ptr nonnull @.str.1526), !dbg !5757
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !5757

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %20(ptr nonnull @.str.1527), !dbg !5757
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5757
  %22 = load i32, ptr %21, align 4, !dbg !5757
  %23 = icmp eq i32 %22, 5, !dbg !5757
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !5757, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %24(ptr nonnull @.str.1528), !dbg !5757
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5757
  %26 = load i16, ptr %25, align 2, !dbg !5757
  %27 = icmp eq i16 %26, 1, !dbg !5757
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5757
  %29 = load i8, ptr %28, align 1, !dbg !5757
  %30 = icmp eq i8 %29, 32, !dbg !5757
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5757
  %32 = load i8, ptr %31, align 1, !dbg !5757
  %33 = icmp eq i8 %32, 2, !dbg !5757
  %34 = and i1 %30, %33, !dbg !5757
  %35 = and i1 %27, %34, !dbg !5757
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !5757, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %36(ptr nonnull @.str.1529), !dbg !5757
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.shape, align 8, !dbg !5757, !tbaa !5776
  %38 = and i64 %37, 4294967295, !dbg !5757
  %39 = icmp eq i64 %38, 1, !dbg !5757
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !5757, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %40(ptr nonnull @.str.1530), !dbg !5757
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.shape, i64 1, !dbg !5757
  %42 = load i64, ptr %41, align 8, !dbg !5757, !tbaa !5786
  %43 = and i64 %42, 4294967295, !dbg !5757
  %44 = icmp eq i64 %43, 64, !dbg !5757
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !5757, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %45(ptr nonnull @.str.1531), !dbg !5757
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.shape, i64 2, !dbg !5757
  %47 = load i64, ptr %46, align 8, !dbg !5757, !tbaa !5788
  %48 = and i64 %47, 4294967295, !dbg !5757
  %49 = icmp eq i64 %48, 56, !dbg !5757
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !5757, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %50(ptr nonnull @.str.1532), !dbg !5757
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.shape, i64 3, !dbg !5757
  %52 = load i64, ptr %51, align 8, !dbg !5757, !tbaa !5791
  %53 = and i64 %52, 4294967295, !dbg !5757
  %54 = icmp eq i64 %53, 56, !dbg !5757
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !5757, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %55(ptr nonnull @.str.1533), !dbg !5757
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.shape, i64 4, !dbg !5757
  %57 = load i64, ptr %56, align 8, !dbg !5757, !tbaa !5793
  %58 = and i64 %57, 4294967295, !dbg !5757
  %59 = icmp eq i64 %58, 4, !dbg !5757
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !5757, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %60(ptr nonnull @.str.1534), !dbg !5757
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.strides, null, !dbg !5757
  br i1 %.not, label %if_end, label %if_then, !dbg !5757, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.strides, i64 1, !dbg !5757
  %62 = load i64, ptr %61, align 8, !dbg !5757, !tbaa !5797
  %63 = and i64 %62, 4294967295, !dbg !5757
  %64 = icmp eq i64 %63, 12544, !dbg !5757
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.strides, i64 2, !dbg !5757
  %66 = load i64, ptr %65, align 8, !dbg !5757, !tbaa !5807
  %67 = and i64 %66, 4294967295, !dbg !5757
  %68 = icmp eq i64 %67, 224, !dbg !5757
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.strides, i64 3, !dbg !5757
  %70 = load i64, ptr %69, align 8, !dbg !5757, !tbaa !5810
  %71 = and i64 %70, 4294967295, !dbg !5757
  %72 = icmp eq i64 %71, 4, !dbg !5757
  %73 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p0.strides, i64 4, !dbg !5757
  %74 = load i64, ptr %73, align 8, !dbg !5757, !tbaa !5812
  %75 = and i64 %74, 4294967295, !dbg !5757
  %76 = icmp eq i64 %75, 1, !dbg !5757
  %77 = and i1 %72, %76, !dbg !5757
  %78 = and i1 %68, %77, !dbg !5757
  %79 = and i1 %64, %78, !dbg !5757
  br i1 %79, label %if_end, label %assert_fail29, !dbg !5757, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5757
  %81 = load i64, ptr %80, align 8, !dbg !5757
  %82 = icmp eq i64 %81, 0, !dbg !5757
  br i1 %82, label %assert_end32, label %assert_fail31, !dbg !5757, !prof !18

assert_fail29:                                    ; preds = %if_then
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %83(ptr nonnull @.str.1535), !dbg !5757
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %84(ptr nonnull @.str.1536), !dbg !5757
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %85 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5757
  %86 = load i32, ptr %85, align 4, !dbg !5757
  %87 = icmp eq i32 %86, 1, !dbg !5757
  br i1 %87, label %assert_end34, label %assert_fail33, !dbg !5757, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %88(ptr nonnull @.str.1537), !dbg !5757
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %89 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5757
  %90 = load i32, ptr %89, align 4, !dbg !5757
  %91 = icmp eq i32 %90, 6, !dbg !5757
  br i1 %91, label %assert_end38, label %assert_fail35, !dbg !5757, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %92 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %92(ptr nonnull @.str.1538), !dbg !5757
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %93 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5757
  %94 = load i16, ptr %93, align 2, !dbg !5757
  %95 = icmp eq i16 %94, 1, !dbg !5757
  %96 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5757
  %97 = load i8, ptr %96, align 1, !dbg !5757
  %98 = icmp eq i8 %97, 32, !dbg !5757
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5757
  %100 = load i8, ptr %99, align 1, !dbg !5757
  %101 = icmp eq i8 %100, 2, !dbg !5757
  %102 = and i1 %98, %101, !dbg !5757
  %103 = and i1 %95, %102, !dbg !5757
  br i1 %103, label %assert_end40, label %assert_fail39, !dbg !5757, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %104(ptr nonnull @.str.1539), !dbg !5757
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %105 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.shape, align 8, !dbg !5757, !tbaa !5816
  %106 = and i64 %105, 4294967295, !dbg !5757
  %107 = icmp eq i64 %106, 32, !dbg !5757
  br i1 %107, label %assert_end42, label %assert_fail41, !dbg !5757, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %108(ptr nonnull @.str.1540), !dbg !5757
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.shape, i64 1, !dbg !5757
  %110 = load i64, ptr %109, align 8, !dbg !5757, !tbaa !5826
  %111 = and i64 %110, 4294967295, !dbg !5757
  %112 = icmp eq i64 %111, 64, !dbg !5757
  br i1 %112, label %assert_end44, label %assert_fail43, !dbg !5757, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %113(ptr nonnull @.str.1541), !dbg !5757
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.shape, i64 2, !dbg !5757
  %115 = load i64, ptr %114, align 8, !dbg !5757, !tbaa !5828
  %116 = and i64 %115, 4294967295, !dbg !5757
  %117 = icmp eq i64 %116, 1, !dbg !5757
  br i1 %117, label %assert_end46, label %assert_fail45, !dbg !5757, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %118(ptr nonnull @.str.1542), !dbg !5757
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.shape, i64 3, !dbg !5757
  %120 = load i64, ptr %119, align 8, !dbg !5757, !tbaa !5831
  %121 = and i64 %120, 4294967295, !dbg !5757
  %122 = icmp eq i64 %121, 1, !dbg !5757
  br i1 %122, label %assert_end48, label %assert_fail47, !dbg !5757, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %123(ptr nonnull @.str.1543), !dbg !5757
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.shape, i64 4, !dbg !5757
  %125 = load i64, ptr %124, align 8, !dbg !5757, !tbaa !5833
  %126 = and i64 %125, 4294967295, !dbg !5757
  %127 = icmp eq i64 %126, 4, !dbg !5757
  br i1 %127, label %assert_end50, label %assert_fail49, !dbg !5757, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %128(ptr nonnull @.str.1544), !dbg !5757
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %129 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.shape, i64 5, !dbg !5757
  %130 = load i64, ptr %129, align 8, !dbg !5757, !tbaa !5837
  %131 = and i64 %130, 4294967295, !dbg !5757
  %132 = icmp eq i64 %131, 4, !dbg !5757
  br i1 %132, label %assert_end52, label %assert_fail51, !dbg !5757, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %133 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %133(ptr nonnull @.str.1545), !dbg !5757
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.strides, null, !dbg !5757
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !5757, !prof !52

if_then53:                                        ; preds = %assert_end52
  %134 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.strides, align 8, !dbg !5757, !tbaa !5839
  %135 = and i64 %134, 4294967295, !dbg !5757
  %136 = icmp eq i64 %135, 1024, !dbg !5757
  %137 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.strides, i64 1, !dbg !5757
  %138 = load i64, ptr %137, align 8, !dbg !5757, !tbaa !5849
  %139 = and i64 %138, 4294967295, !dbg !5757
  %140 = icmp eq i64 %139, 16, !dbg !5757
  %141 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.strides, i64 4, !dbg !5757
  %142 = load i64, ptr %141, align 8, !dbg !5757, !tbaa !5851
  %143 = and i64 %142, 4294967295, !dbg !5757
  %144 = icmp eq i64 %143, 4, !dbg !5757
  %145 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p1.strides, i64 5, !dbg !5757
  %146 = load i64, ptr %145, align 8, !dbg !5757, !tbaa !5855
  %147 = and i64 %146, 4294967295, !dbg !5757
  %148 = icmp eq i64 %147, 1, !dbg !5757
  %149 = and i1 %144, %148, !dbg !5757
  %150 = and i1 %140, %149, !dbg !5757
  %151 = and i1 %136, %150, !dbg !5757
  br i1 %151, label %if_end54, label %assert_fail55, !dbg !5757, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %152 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5757
  %153 = load i64, ptr %152, align 8, !dbg !5757
  %154 = icmp eq i64 %153, 0, !dbg !5757
  br i1 %154, label %assert_end58, label %assert_fail57, !dbg !5757, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %155(ptr nonnull @.str.1546), !dbg !5757
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %156(ptr nonnull @.str.1547), !dbg !5757
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %157 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5757
  %158 = load i32, ptr %157, align 4, !dbg !5757
  %159 = icmp eq i32 %158, 1, !dbg !5757
  br i1 %159, label %assert_end60, label %assert_fail59, !dbg !5757, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %160(ptr nonnull @.str.1548), !dbg !5757
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %161 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5757
  %162 = load i32, ptr %161, align 4, !dbg !5757
  %163 = icmp eq i32 %dev_id, %162, !dbg !5757
  br i1 %163, label %assert_end62, label %assert_fail61, !dbg !5757, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %164 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %164(ptr nonnull @.str.1549), !dbg !5757
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %165 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !5757
  %166 = load i32, ptr %165, align 4, !dbg !5757
  %167 = icmp eq i32 %166, 5, !dbg !5757
  br i1 %167, label %assert_end66, label %assert_fail63, !dbg !5757, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %168 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %168(ptr nonnull @.str.1550), !dbg !5757
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %169 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !5757
  %170 = load i16, ptr %169, align 2, !dbg !5757
  %171 = icmp eq i16 %170, 1, !dbg !5757
  %172 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !5757
  %173 = load i8, ptr %172, align 1, !dbg !5757
  %174 = icmp eq i8 %173, 32, !dbg !5757
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !5757
  %176 = load i8, ptr %175, align 1, !dbg !5757
  %177 = icmp eq i8 %176, 2, !dbg !5757
  %178 = and i1 %174, %177, !dbg !5757
  %179 = and i1 %171, %178, !dbg !5757
  br i1 %179, label %assert_end68, label %assert_fail67, !dbg !5757, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %180(ptr nonnull @.str.1551), !dbg !5757
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %181 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.shape, align 8, !dbg !5757, !tbaa !5857
  %182 = and i64 %181, 4294967295, !dbg !5757
  %183 = icmp eq i64 %182, 1, !dbg !5757
  br i1 %183, label %assert_end70, label %assert_fail69, !dbg !5757, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %184(ptr nonnull @.str.1552), !dbg !5757
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %185 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.shape, i64 1, !dbg !5757
  %186 = load i64, ptr %185, align 8, !dbg !5757, !tbaa !5867
  %187 = and i64 %186, 4294967295, !dbg !5757
  %188 = icmp eq i64 %187, 32, !dbg !5757
  br i1 %188, label %assert_end72, label %assert_fail71, !dbg !5757, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %189(ptr nonnull @.str.1553), !dbg !5757
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.shape, i64 2, !dbg !5757
  %191 = load i64, ptr %190, align 8, !dbg !5757, !tbaa !5869
  %192 = and i64 %191, 4294967295, !dbg !5757
  %193 = icmp eq i64 %192, 1, !dbg !5757
  br i1 %193, label %assert_end74, label %assert_fail73, !dbg !5757, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %194(ptr nonnull @.str.1554), !dbg !5757
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.shape, i64 3, !dbg !5757
  %196 = load i64, ptr %195, align 8, !dbg !5757, !tbaa !5872
  %197 = and i64 %196, 4294967295, !dbg !5757
  %198 = icmp eq i64 %197, 1, !dbg !5757
  br i1 %198, label %assert_end76, label %assert_fail75, !dbg !5757, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %199(ptr nonnull @.str.1555), !dbg !5757
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.shape, i64 4, !dbg !5757
  %201 = load i64, ptr %200, align 8, !dbg !5757, !tbaa !5874
  %202 = and i64 %201, 4294967295, !dbg !5757
  %203 = icmp eq i64 %202, 4, !dbg !5757
  br i1 %203, label %assert_end78, label %assert_fail77, !dbg !5757, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %204(ptr nonnull @.str.1556), !dbg !5757
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.strides, null, !dbg !5757
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !5757, !prof !52

if_then79:                                        ; preds = %assert_end78
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.strides, i64 1, !dbg !5757
  %206 = load i64, ptr %205, align 8, !dbg !5757, !tbaa !5878
  %207 = and i64 %206, 4294967295, !dbg !5757
  %208 = icmp eq i64 %207, 4, !dbg !5757
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.p2.strides, i64 4, !dbg !5757
  %210 = load i64, ptr %209, align 8, !dbg !5757, !tbaa !5888
  %211 = and i64 %210, 4294967295, !dbg !5757
  %212 = icmp eq i64 %211, 1, !dbg !5757
  %213 = and i1 %208, %212, !dbg !5757
  br i1 %213, label %if_end80, label %assert_fail81, !dbg !5757, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %214 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !5757
  %215 = load i64, ptr %214, align 8, !dbg !5757
  %216 = icmp eq i64 %215, 0, !dbg !5757
  br i1 %216, label %assert_end84, label %assert_fail83, !dbg !5757, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %217(ptr nonnull @.str.1557), !dbg !5757
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %218(ptr nonnull @.str.1558), !dbg !5757
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %219 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !5757
  %220 = load i32, ptr %219, align 4, !dbg !5757
  %221 = icmp eq i32 %220, 1, !dbg !5757
  br i1 %221, label %assert_end86, label %assert_fail85, !dbg !5757, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %222(ptr nonnull @.str.1559), !dbg !5757
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %223 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !5757
  %224 = load i32, ptr %223, align 4, !dbg !5757
  %225 = icmp eq i32 %dev_id, %224, !dbg !5757
  br i1 %225, label %assert_end88, label %assert_fail87, !dbg !5757, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %226 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %226(ptr nonnull @.str.1560), !dbg !5757
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %227 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !5757
  %228 = load i32, ptr %227, align 4, !dbg !5757
  %229 = icmp eq i32 %228, 5, !dbg !5757
  br i1 %229, label %assert_end92, label %assert_fail89, !dbg !5757, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %230 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %230(ptr nonnull @.str.1561), !dbg !5757
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %231 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !5757
  %232 = load i16, ptr %231, align 2, !dbg !5757
  %233 = icmp eq i16 %232, 1, !dbg !5757
  %234 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !5757
  %235 = load i8, ptr %234, align 1, !dbg !5757
  %236 = icmp eq i8 %235, 32, !dbg !5757
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !5757
  %238 = load i8, ptr %237, align 1, !dbg !5757
  %239 = icmp eq i8 %238, 2, !dbg !5757
  %240 = and i1 %236, %239, !dbg !5757
  %241 = and i1 %233, %240, !dbg !5757
  br i1 %241, label %assert_end94, label %assert_fail93, !dbg !5757, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %242(ptr nonnull @.str.1562), !dbg !5757
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %243 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.shape, align 8, !dbg !5757, !tbaa !5892
  %244 = and i64 %243, 4294967295, !dbg !5757
  %245 = icmp eq i64 %244, 1, !dbg !5757
  br i1 %245, label %assert_end96, label %assert_fail95, !dbg !5757, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %246(ptr nonnull @.str.1563), !dbg !5757
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.shape, i64 1, !dbg !5757
  %248 = load i64, ptr %247, align 8, !dbg !5757, !tbaa !5902
  %249 = and i64 %248, 4294967295, !dbg !5757
  %250 = icmp eq i64 %249, 32, !dbg !5757
  br i1 %250, label %assert_end98, label %assert_fail97, !dbg !5757, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %251(ptr nonnull @.str.1564), !dbg !5757
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.shape, i64 2, !dbg !5757
  %253 = load i64, ptr %252, align 8, !dbg !5757, !tbaa !5904
  %254 = and i64 %253, 4294967295, !dbg !5757
  %255 = icmp eq i64 %254, 56, !dbg !5757
  br i1 %255, label %assert_end100, label %assert_fail99, !dbg !5757, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %256(ptr nonnull @.str.1565), !dbg !5757
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.shape, i64 3, !dbg !5757
  %258 = load i64, ptr %257, align 8, !dbg !5757, !tbaa !5907
  %259 = and i64 %258, 4294967295, !dbg !5757
  %260 = icmp eq i64 %259, 56, !dbg !5757
  br i1 %260, label %assert_end102, label %assert_fail101, !dbg !5757, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %261(ptr nonnull @.str.1566), !dbg !5757
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.shape, i64 4, !dbg !5757
  %263 = load i64, ptr %262, align 8, !dbg !5757, !tbaa !5909
  %264 = and i64 %263, 4294967295, !dbg !5757
  %265 = icmp eq i64 %264, 4, !dbg !5757
  br i1 %265, label %assert_end104, label %assert_fail103, !dbg !5757, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %266(ptr nonnull @.str.1567), !dbg !5757
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.strides, null, !dbg !5757
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !5757, !prof !52

if_then105:                                       ; preds = %assert_end104
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.strides, i64 1, !dbg !5757
  %268 = load i64, ptr %267, align 8, !dbg !5757, !tbaa !5913
  %269 = and i64 %268, 4294967295, !dbg !5757
  %270 = icmp eq i64 %269, 12544, !dbg !5757
  %271 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.strides, i64 2, !dbg !5757
  %272 = load i64, ptr %271, align 8, !dbg !5757, !tbaa !5923
  %273 = and i64 %272, 4294967295, !dbg !5757
  %274 = icmp eq i64 %273, 224, !dbg !5757
  %275 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.strides, i64 3, !dbg !5757
  %276 = load i64, ptr %275, align 8, !dbg !5757, !tbaa !5926
  %277 = and i64 %276, 4294967295, !dbg !5757
  %278 = icmp eq i64 %277, 4, !dbg !5757
  %279 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4.T_relu.strides, i64 4, !dbg !5757
  %280 = load i64, ptr %279, align 8, !dbg !5757, !tbaa !5928
  %281 = and i64 %280, 4294967295, !dbg !5757
  %282 = icmp eq i64 %281, 1, !dbg !5757
  %283 = and i1 %278, %282, !dbg !5757
  %284 = and i1 %274, %283, !dbg !5757
  %285 = and i1 %270, %284, !dbg !5757
  br i1 %285, label %if_end106, label %assert_fail107, !dbg !5757, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %286 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !5757
  %287 = load i64, ptr %286, align 8, !dbg !5757
  %288 = icmp eq i64 %287, 0, !dbg !5757
  br i1 %288, label %assert_end110, label %assert_fail109, !dbg !5757, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %289(ptr nonnull @.str.1568), !dbg !5757
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %290(ptr nonnull @.str.1569), !dbg !5757
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %291 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !5757
  %292 = load i32, ptr %291, align 4, !dbg !5757
  %293 = icmp eq i32 %292, 1, !dbg !5757
  br i1 %293, label %assert_end112, label %assert_fail111, !dbg !5757, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %294(ptr nonnull @.str.1570), !dbg !5757
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %295 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !5757
  %296 = load i32, ptr %295, align 4, !dbg !5757
  %297 = icmp eq i32 %dev_id, %296, !dbg !5757
  br i1 %297, label %assert_end114, label %assert_fail113, !dbg !5757, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %298 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5757, !tbaa !19
  tail call void %298(ptr nonnull @.str.1571), !dbg !5757
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %299 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_compute_(ptr %p0115, ptr %p1116, ptr %T_relu117, ptr %p2118), !dbg !5757
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !5932 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !5934, metadata !DIExpression()), !dbg !5940
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !5935, metadata !DIExpression()), !dbg !5940
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !5936, metadata !DIExpression()), !dbg !5940
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !5937, metadata !DIExpression()), !dbg !5940
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !5938, metadata !DIExpression()), !dbg !5940
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !5939, metadata !DIExpression()), !dbg !5940
  %0 = icmp eq i32 %num_args, 4, !dbg !5940
  br i1 %0, label %assert_end, label %assert_fail, !dbg !5940, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %309, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !5940

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %1(ptr nonnull @.str.1573), !dbg !5940
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !5940, !tbaa !5941
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !5940
  %p1.code = load i32, ptr %2, align 4, !dbg !5940, !tbaa !5952
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !5940
  %p2.code = load i32, ptr %3, align 4, !dbg !5940, !tbaa !5954
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !5940
  %T_relu.code = load i32, ptr %4, align 4, !dbg !5940, !tbaa !5957
  %p0 = load ptr, ptr %args, align 8, !dbg !5940
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !5940
  %p1 = load ptr, ptr %5, align 8, !dbg !5940
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !5940
  %p2 = load ptr, ptr %6, align 8, !dbg !5940
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !5940
  %T_relu = load ptr, ptr %7, align 8, !dbg !5940
  %p0115 = load ptr, ptr %p0, align 8, !dbg !5940
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !5940
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !5940
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.shape = load ptr, ptr %8, align 8, !dbg !5940
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !5940
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.strides = load ptr, ptr %9, align 8, !dbg !5940
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !5940
  %dev_id = load i32, ptr %10, align 4, !dbg !5940
  %p1116 = load ptr, ptr %p1, align 8, !dbg !5940
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !5940
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !5940
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.shape = load ptr, ptr %11, align 8, !dbg !5940
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !5940
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.strides = load ptr, ptr %12, align 8, !dbg !5940
  %p2118 = load ptr, ptr %p2, align 8, !dbg !5940
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !5940
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !5940
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.shape = load ptr, ptr %13, align 8, !dbg !5940
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !5940
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.strides = load ptr, ptr %14, align 8, !dbg !5940
  %T_relu117 = load ptr, ptr %T_relu, align 8, !dbg !5940
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu117, i64 64) ], !dbg !5940
  %15 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !5940
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.shape = load ptr, ptr %15, align 8, !dbg !5940
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !5940
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.strides = load ptr, ptr %16, align 8, !dbg !5940
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !5940

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %17(ptr nonnull @.str.1574), !dbg !5940
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !5940

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %18(ptr nonnull @.str.1575), !dbg !5940
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !5940

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %19(ptr nonnull @.str.1576), !dbg !5940
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !5940

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %20(ptr nonnull @.str.1577), !dbg !5940
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !5940
  %22 = load i32, ptr %21, align 4, !dbg !5940
  %23 = icmp eq i32 %22, 5, !dbg !5940
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !5940, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %24(ptr nonnull @.str.1578), !dbg !5940
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !5940
  %26 = load i16, ptr %25, align 2, !dbg !5940
  %27 = icmp eq i16 %26, 1, !dbg !5940
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !5940
  %29 = load i8, ptr %28, align 1, !dbg !5940
  %30 = icmp eq i8 %29, 32, !dbg !5940
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !5940
  %32 = load i8, ptr %31, align 1, !dbg !5940
  %33 = icmp eq i8 %32, 2, !dbg !5940
  %34 = and i1 %30, %33, !dbg !5940
  %35 = and i1 %27, %34, !dbg !5940
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !5940, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %36(ptr nonnull @.str.1579), !dbg !5940
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.shape, align 8, !dbg !5940, !tbaa !5959
  %38 = and i64 %37, 4294967295, !dbg !5940
  %39 = icmp eq i64 %38, 1, !dbg !5940
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !5940, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %40(ptr nonnull @.str.1580), !dbg !5940
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.shape, i64 1, !dbg !5940
  %42 = load i64, ptr %41, align 8, !dbg !5940, !tbaa !5969
  %43 = and i64 %42, 4294967295, !dbg !5940
  %44 = icmp eq i64 %43, 32, !dbg !5940
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !5940, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %45(ptr nonnull @.str.1581), !dbg !5940
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.shape, i64 2, !dbg !5940
  %47 = load i64, ptr %46, align 8, !dbg !5940, !tbaa !5971
  %48 = and i64 %47, 4294967295, !dbg !5940
  %49 = icmp eq i64 %48, 56, !dbg !5940
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !5940, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %50(ptr nonnull @.str.1582), !dbg !5940
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.shape, i64 3, !dbg !5940
  %52 = load i64, ptr %51, align 8, !dbg !5940, !tbaa !5974
  %53 = and i64 %52, 4294967295, !dbg !5940
  %54 = icmp eq i64 %53, 56, !dbg !5940
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !5940, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %55(ptr nonnull @.str.1583), !dbg !5940
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.shape, i64 4, !dbg !5940
  %57 = load i64, ptr %56, align 8, !dbg !5940, !tbaa !5976
  %58 = and i64 %57, 4294967295, !dbg !5940
  %59 = icmp eq i64 %58, 4, !dbg !5940
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !5940, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %60(ptr nonnull @.str.1584), !dbg !5940
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.strides, null, !dbg !5940
  br i1 %.not, label %if_end, label %if_then, !dbg !5940, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.strides, i64 1, !dbg !5940
  %62 = load i64, ptr %61, align 8, !dbg !5940, !tbaa !5980
  %63 = and i64 %62, 4294967295, !dbg !5940
  %64 = icmp eq i64 %63, 12544, !dbg !5940
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.strides, i64 2, !dbg !5940
  %66 = load i64, ptr %65, align 8, !dbg !5940, !tbaa !5990
  %67 = and i64 %66, 4294967295, !dbg !5940
  %68 = icmp eq i64 %67, 224, !dbg !5940
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.strides, i64 3, !dbg !5940
  %70 = load i64, ptr %69, align 8, !dbg !5940, !tbaa !5993
  %71 = and i64 %70, 4294967295, !dbg !5940
  %72 = icmp eq i64 %71, 4, !dbg !5940
  %73 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p0.strides, i64 4, !dbg !5940
  %74 = load i64, ptr %73, align 8, !dbg !5940, !tbaa !5995
  %75 = and i64 %74, 4294967295, !dbg !5940
  %76 = icmp eq i64 %75, 1, !dbg !5940
  %77 = and i1 %72, %76, !dbg !5940
  %78 = and i1 %68, %77, !dbg !5940
  %79 = and i1 %64, %78, !dbg !5940
  br i1 %79, label %if_end, label %assert_fail29, !dbg !5940, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !5940
  %81 = load i64, ptr %80, align 8, !dbg !5940
  %82 = icmp eq i64 %81, 0, !dbg !5940
  br i1 %82, label %assert_end32, label %assert_fail31, !dbg !5940, !prof !18

assert_fail29:                                    ; preds = %if_then
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %83(ptr nonnull @.str.1585), !dbg !5940
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %84(ptr nonnull @.str.1586), !dbg !5940
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %85 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !5940
  %86 = load i32, ptr %85, align 4, !dbg !5940
  %87 = icmp eq i32 %86, 1, !dbg !5940
  br i1 %87, label %assert_end34, label %assert_fail33, !dbg !5940, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %88(ptr nonnull @.str.1587), !dbg !5940
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %89 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !5940
  %90 = load i32, ptr %89, align 4, !dbg !5940
  %91 = icmp eq i32 %90, 6, !dbg !5940
  br i1 %91, label %assert_end38, label %assert_fail35, !dbg !5940, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %92 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %92(ptr nonnull @.str.1588), !dbg !5940
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %93 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !5940
  %94 = load i16, ptr %93, align 2, !dbg !5940
  %95 = icmp eq i16 %94, 1, !dbg !5940
  %96 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !5940
  %97 = load i8, ptr %96, align 1, !dbg !5940
  %98 = icmp eq i8 %97, 32, !dbg !5940
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !5940
  %100 = load i8, ptr %99, align 1, !dbg !5940
  %101 = icmp eq i8 %100, 2, !dbg !5940
  %102 = and i1 %98, %101, !dbg !5940
  %103 = and i1 %95, %102, !dbg !5940
  br i1 %103, label %assert_end40, label %assert_fail39, !dbg !5940, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %104(ptr nonnull @.str.1589), !dbg !5940
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %105 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.shape, align 8, !dbg !5940, !tbaa !5999
  %106 = and i64 %105, 4294967295, !dbg !5940
  %107 = icmp eq i64 %106, 32, !dbg !5940
  br i1 %107, label %assert_end42, label %assert_fail41, !dbg !5940, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %108(ptr nonnull @.str.1590), !dbg !5940
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.shape, i64 1, !dbg !5940
  %110 = load i64, ptr %109, align 8, !dbg !5940, !tbaa !6009
  %111 = and i64 %110, 4294967295, !dbg !5940
  %112 = icmp eq i64 %111, 32, !dbg !5940
  br i1 %112, label %assert_end44, label %assert_fail43, !dbg !5940, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %113(ptr nonnull @.str.1591), !dbg !5940
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.shape, i64 2, !dbg !5940
  %115 = load i64, ptr %114, align 8, !dbg !5940, !tbaa !6011
  %116 = and i64 %115, 4294967295, !dbg !5940
  %117 = icmp eq i64 %116, 3, !dbg !5940
  br i1 %117, label %assert_end46, label %assert_fail45, !dbg !5940, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %118(ptr nonnull @.str.1592), !dbg !5940
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.shape, i64 3, !dbg !5940
  %120 = load i64, ptr %119, align 8, !dbg !5940, !tbaa !6014
  %121 = and i64 %120, 4294967295, !dbg !5940
  %122 = icmp eq i64 %121, 3, !dbg !5940
  br i1 %122, label %assert_end48, label %assert_fail47, !dbg !5940, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %123(ptr nonnull @.str.1593), !dbg !5940
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.shape, i64 4, !dbg !5940
  %125 = load i64, ptr %124, align 8, !dbg !5940, !tbaa !6016
  %126 = and i64 %125, 4294967295, !dbg !5940
  %127 = icmp eq i64 %126, 4, !dbg !5940
  br i1 %127, label %assert_end50, label %assert_fail49, !dbg !5940, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %128(ptr nonnull @.str.1594), !dbg !5940
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %129 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.shape, i64 5, !dbg !5940
  %130 = load i64, ptr %129, align 8, !dbg !5940, !tbaa !6020
  %131 = and i64 %130, 4294967295, !dbg !5940
  %132 = icmp eq i64 %131, 4, !dbg !5940
  br i1 %132, label %assert_end52, label %assert_fail51, !dbg !5940, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %133 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %133(ptr nonnull @.str.1595), !dbg !5940
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.strides, null, !dbg !5940
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !5940, !prof !52

if_then53:                                        ; preds = %assert_end52
  %134 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.strides, align 8, !dbg !5940, !tbaa !6022
  %135 = and i64 %134, 4294967295, !dbg !5940
  %136 = icmp eq i64 %135, 4608, !dbg !5940
  %137 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.strides, i64 1, !dbg !5940
  %138 = load i64, ptr %137, align 8, !dbg !5940, !tbaa !6032
  %139 = and i64 %138, 4294967295, !dbg !5940
  %140 = icmp eq i64 %139, 144, !dbg !5940
  %141 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.strides, i64 2, !dbg !5940
  %142 = load i64, ptr %141, align 8, !dbg !5940, !tbaa !6034
  %143 = and i64 %142, 4294967295, !dbg !5940
  %144 = icmp eq i64 %143, 48, !dbg !5940
  %145 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.strides, i64 3, !dbg !5940
  %146 = load i64, ptr %145, align 8, !dbg !5940, !tbaa !6037
  %147 = and i64 %146, 4294967295, !dbg !5940
  %148 = icmp eq i64 %147, 16, !dbg !5940
  %149 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.strides, i64 4, !dbg !5940
  %150 = load i64, ptr %149, align 8, !dbg !5940, !tbaa !6039
  %151 = and i64 %150, 4294967295, !dbg !5940
  %152 = icmp eq i64 %151, 4, !dbg !5940
  %153 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p1.strides, i64 5, !dbg !5940
  %154 = load i64, ptr %153, align 8, !dbg !5940, !tbaa !6043
  %155 = and i64 %154, 4294967295, !dbg !5940
  %156 = icmp eq i64 %155, 1, !dbg !5940
  %157 = and i1 %152, %156, !dbg !5940
  %158 = and i1 %148, %157, !dbg !5940
  %159 = and i1 %144, %158, !dbg !5940
  %160 = and i1 %140, %159, !dbg !5940
  %161 = and i1 %136, %160, !dbg !5940
  br i1 %161, label %if_end54, label %assert_fail55, !dbg !5940, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !5940
  %163 = load i64, ptr %162, align 8, !dbg !5940
  %164 = icmp eq i64 %163, 0, !dbg !5940
  br i1 %164, label %assert_end58, label %assert_fail57, !dbg !5940, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %165(ptr nonnull @.str.1596), !dbg !5940
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %166(ptr nonnull @.str.1597), !dbg !5940
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %167 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !5940
  %168 = load i32, ptr %167, align 4, !dbg !5940
  %169 = icmp eq i32 %168, 1, !dbg !5940
  br i1 %169, label %assert_end60, label %assert_fail59, !dbg !5940, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %170(ptr nonnull @.str.1598), !dbg !5940
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %171 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !5940
  %172 = load i32, ptr %171, align 4, !dbg !5940
  %173 = icmp eq i32 %dev_id, %172, !dbg !5940
  br i1 %173, label %assert_end62, label %assert_fail61, !dbg !5940, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %174(ptr nonnull @.str.1599), !dbg !5940
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !5940
  %176 = load i32, ptr %175, align 4, !dbg !5940
  %177 = icmp eq i32 %176, 5, !dbg !5940
  br i1 %177, label %assert_end66, label %assert_fail63, !dbg !5940, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %178(ptr nonnull @.str.1600), !dbg !5940
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %179 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !5940
  %180 = load i16, ptr %179, align 2, !dbg !5940
  %181 = icmp eq i16 %180, 1, !dbg !5940
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !5940
  %183 = load i8, ptr %182, align 1, !dbg !5940
  %184 = icmp eq i8 %183, 32, !dbg !5940
  %185 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !5940
  %186 = load i8, ptr %185, align 1, !dbg !5940
  %187 = icmp eq i8 %186, 2, !dbg !5940
  %188 = and i1 %184, %187, !dbg !5940
  %189 = and i1 %181, %188, !dbg !5940
  br i1 %189, label %assert_end68, label %assert_fail67, !dbg !5940, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %190 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %190(ptr nonnull @.str.1601), !dbg !5940
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %191 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.shape, align 8, !dbg !5940, !tbaa !6045
  %192 = and i64 %191, 4294967295, !dbg !5940
  %193 = icmp eq i64 %192, 1, !dbg !5940
  br i1 %193, label %assert_end70, label %assert_fail69, !dbg !5940, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %194(ptr nonnull @.str.1602), !dbg !5940
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.shape, i64 1, !dbg !5940
  %196 = load i64, ptr %195, align 8, !dbg !5940, !tbaa !6055
  %197 = and i64 %196, 4294967295, !dbg !5940
  %198 = icmp eq i64 %197, 32, !dbg !5940
  br i1 %198, label %assert_end72, label %assert_fail71, !dbg !5940, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %199(ptr nonnull @.str.1603), !dbg !5940
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.shape, i64 2, !dbg !5940
  %201 = load i64, ptr %200, align 8, !dbg !5940, !tbaa !6057
  %202 = and i64 %201, 4294967295, !dbg !5940
  %203 = icmp eq i64 %202, 1, !dbg !5940
  br i1 %203, label %assert_end74, label %assert_fail73, !dbg !5940, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %204(ptr nonnull @.str.1604), !dbg !5940
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.shape, i64 3, !dbg !5940
  %206 = load i64, ptr %205, align 8, !dbg !5940, !tbaa !6060
  %207 = and i64 %206, 4294967295, !dbg !5940
  %208 = icmp eq i64 %207, 1, !dbg !5940
  br i1 %208, label %assert_end76, label %assert_fail75, !dbg !5940, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %209(ptr nonnull @.str.1605), !dbg !5940
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %210 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.shape, i64 4, !dbg !5940
  %211 = load i64, ptr %210, align 8, !dbg !5940, !tbaa !6062
  %212 = and i64 %211, 4294967295, !dbg !5940
  %213 = icmp eq i64 %212, 4, !dbg !5940
  br i1 %213, label %assert_end78, label %assert_fail77, !dbg !5940, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %214 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %214(ptr nonnull @.str.1606), !dbg !5940
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.strides, null, !dbg !5940
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !5940, !prof !52

if_then79:                                        ; preds = %assert_end78
  %215 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.strides, i64 1, !dbg !5940
  %216 = load i64, ptr %215, align 8, !dbg !5940, !tbaa !6066
  %217 = and i64 %216, 4294967295, !dbg !5940
  %218 = icmp eq i64 %217, 4, !dbg !5940
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.p2.strides, i64 4, !dbg !5940
  %220 = load i64, ptr %219, align 8, !dbg !5940, !tbaa !6076
  %221 = and i64 %220, 4294967295, !dbg !5940
  %222 = icmp eq i64 %221, 1, !dbg !5940
  %223 = and i1 %218, %222, !dbg !5940
  br i1 %223, label %if_end80, label %assert_fail81, !dbg !5940, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %224 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !5940
  %225 = load i64, ptr %224, align 8, !dbg !5940
  %226 = icmp eq i64 %225, 0, !dbg !5940
  br i1 %226, label %assert_end84, label %assert_fail83, !dbg !5940, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %227(ptr nonnull @.str.1607), !dbg !5940
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %228 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %228(ptr nonnull @.str.1608), !dbg !5940
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %229 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !5940
  %230 = load i32, ptr %229, align 4, !dbg !5940
  %231 = icmp eq i32 %230, 1, !dbg !5940
  br i1 %231, label %assert_end86, label %assert_fail85, !dbg !5940, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %232 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %232(ptr nonnull @.str.1609), !dbg !5940
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %233 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !5940
  %234 = load i32, ptr %233, align 4, !dbg !5940
  %235 = icmp eq i32 %dev_id, %234, !dbg !5940
  br i1 %235, label %assert_end88, label %assert_fail87, !dbg !5940, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %236(ptr nonnull @.str.1610), !dbg !5940
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !5940
  %238 = load i32, ptr %237, align 4, !dbg !5940
  %239 = icmp eq i32 %238, 5, !dbg !5940
  br i1 %239, label %assert_end92, label %assert_fail89, !dbg !5940, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %240 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %240(ptr nonnull @.str.1611), !dbg !5940
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %241 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !5940
  %242 = load i16, ptr %241, align 2, !dbg !5940
  %243 = icmp eq i16 %242, 1, !dbg !5940
  %244 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !5940
  %245 = load i8, ptr %244, align 1, !dbg !5940
  %246 = icmp eq i8 %245, 32, !dbg !5940
  %247 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !5940
  %248 = load i8, ptr %247, align 1, !dbg !5940
  %249 = icmp eq i8 %248, 2, !dbg !5940
  %250 = and i1 %246, %249, !dbg !5940
  %251 = and i1 %243, %250, !dbg !5940
  br i1 %251, label %assert_end94, label %assert_fail93, !dbg !5940, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %252 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %252(ptr nonnull @.str.1612), !dbg !5940
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %253 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.shape, align 8, !dbg !5940, !tbaa !6080
  %254 = and i64 %253, 4294967295, !dbg !5940
  %255 = icmp eq i64 %254, 1, !dbg !5940
  br i1 %255, label %assert_end96, label %assert_fail95, !dbg !5940, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %256(ptr nonnull @.str.1613), !dbg !5940
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.shape, i64 1, !dbg !5940
  %258 = load i64, ptr %257, align 8, !dbg !5940, !tbaa !6090
  %259 = and i64 %258, 4294967295, !dbg !5940
  %260 = icmp eq i64 %259, 32, !dbg !5940
  br i1 %260, label %assert_end98, label %assert_fail97, !dbg !5940, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %261(ptr nonnull @.str.1614), !dbg !5940
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.shape, i64 2, !dbg !5940
  %263 = load i64, ptr %262, align 8, !dbg !5940, !tbaa !6092
  %264 = and i64 %263, 4294967295, !dbg !5940
  %265 = icmp eq i64 %264, 28, !dbg !5940
  br i1 %265, label %assert_end100, label %assert_fail99, !dbg !5940, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %266(ptr nonnull @.str.1615), !dbg !5940
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.shape, i64 3, !dbg !5940
  %268 = load i64, ptr %267, align 8, !dbg !5940, !tbaa !6095
  %269 = and i64 %268, 4294967295, !dbg !5940
  %270 = icmp eq i64 %269, 28, !dbg !5940
  br i1 %270, label %assert_end102, label %assert_fail101, !dbg !5940, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %271 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %271(ptr nonnull @.str.1616), !dbg !5940
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %272 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.shape, i64 4, !dbg !5940
  %273 = load i64, ptr %272, align 8, !dbg !5940, !tbaa !6097
  %274 = and i64 %273, 4294967295, !dbg !5940
  %275 = icmp eq i64 %274, 4, !dbg !5940
  br i1 %275, label %assert_end104, label %assert_fail103, !dbg !5940, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %276 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %276(ptr nonnull @.str.1617), !dbg !5940
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.strides, null, !dbg !5940
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !5940, !prof !52

if_then105:                                       ; preds = %assert_end104
  %277 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.strides, i64 1, !dbg !5940
  %278 = load i64, ptr %277, align 8, !dbg !5940, !tbaa !6101
  %279 = and i64 %278, 4294967295, !dbg !5940
  %280 = icmp eq i64 %279, 3136, !dbg !5940
  %281 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.strides, i64 2, !dbg !5940
  %282 = load i64, ptr %281, align 8, !dbg !5940, !tbaa !6111
  %283 = and i64 %282, 4294967295, !dbg !5940
  %284 = icmp eq i64 %283, 112, !dbg !5940
  %285 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.strides, i64 3, !dbg !5940
  %286 = load i64, ptr %285, align 8, !dbg !5940, !tbaa !6114
  %287 = and i64 %286, 4294967295, !dbg !5940
  %288 = icmp eq i64 %287, 4, !dbg !5940
  %289 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5.T_relu.strides, i64 4, !dbg !5940
  %290 = load i64, ptr %289, align 8, !dbg !5940, !tbaa !6116
  %291 = and i64 %290, 4294967295, !dbg !5940
  %292 = icmp eq i64 %291, 1, !dbg !5940
  %293 = and i1 %288, %292, !dbg !5940
  %294 = and i1 %284, %293, !dbg !5940
  %295 = and i1 %280, %294, !dbg !5940
  br i1 %295, label %if_end106, label %assert_fail107, !dbg !5940, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %296 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !5940
  %297 = load i64, ptr %296, align 8, !dbg !5940
  %298 = icmp eq i64 %297, 0, !dbg !5940
  br i1 %298, label %assert_end110, label %assert_fail109, !dbg !5940, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %299(ptr nonnull @.str.1618), !dbg !5940
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %300 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %300(ptr nonnull @.str.1619), !dbg !5940
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %301 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !5940
  %302 = load i32, ptr %301, align 4, !dbg !5940
  %303 = icmp eq i32 %302, 1, !dbg !5940
  br i1 %303, label %assert_end112, label %assert_fail111, !dbg !5940, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %304 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %304(ptr nonnull @.str.1620), !dbg !5940
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %305 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !5940
  %306 = load i32, ptr %305, align 4, !dbg !5940
  %307 = icmp eq i32 %dev_id, %306, !dbg !5940
  br i1 %307, label %assert_end114, label %assert_fail113, !dbg !5940, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %308 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !5940, !tbaa !19
  tail call void %308(ptr nonnull @.str.1621), !dbg !5940
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %309 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_compute_(i32 %dev_id, ptr %p0115, ptr %p1116, ptr %T_relu117, ptr %p2118), !dbg !5940
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6120 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6122, metadata !DIExpression()), !dbg !6128
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6123, metadata !DIExpression()), !dbg !6128
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6124, metadata !DIExpression()), !dbg !6128
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6125, metadata !DIExpression()), !dbg !6128
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6126, metadata !DIExpression()), !dbg !6128
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6127, metadata !DIExpression()), !dbg !6128
  %0 = icmp eq i32 %num_args, 4, !dbg !6128
  br i1 %0, label %assert_end, label %assert_fail, !dbg !6128, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %289, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !6128

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %1(ptr nonnull @.str.1624), !dbg !6128
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6128, !tbaa !6129
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6128
  %p1.code = load i32, ptr %2, align 4, !dbg !6128, !tbaa !6140
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6128
  %p2.code = load i32, ptr %3, align 4, !dbg !6128, !tbaa !6142
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !6128
  %T_relu.code = load i32, ptr %4, align 4, !dbg !6128, !tbaa !6145
  %p0 = load ptr, ptr %args, align 8, !dbg !6128
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6128
  %p1 = load ptr, ptr %5, align 8, !dbg !6128
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6128
  %p2 = load ptr, ptr %6, align 8, !dbg !6128
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !6128
  %T_relu = load ptr, ptr %7, align 8, !dbg !6128
  %p0115 = load ptr, ptr %p0, align 8, !dbg !6128
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !6128
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6128
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.shape = load ptr, ptr %8, align 8, !dbg !6128
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6128
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.strides = load ptr, ptr %9, align 8, !dbg !6128
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6128
  %dev_id = load i32, ptr %10, align 4, !dbg !6128
  %p1116 = load ptr, ptr %p1, align 8, !dbg !6128
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !6128
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6128
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.shape = load ptr, ptr %11, align 8, !dbg !6128
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6128
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.strides = load ptr, ptr %12, align 8, !dbg !6128
  %p2118 = load ptr, ptr %p2, align 8, !dbg !6128
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !6128
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !6128
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.shape = load ptr, ptr %13, align 8, !dbg !6128
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !6128
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.strides = load ptr, ptr %14, align 8, !dbg !6128
  %T_relu117 = load ptr, ptr %T_relu, align 8, !dbg !6128
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu117, i64 64) ], !dbg !6128
  %15 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !6128
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.shape = load ptr, ptr %15, align 8, !dbg !6128
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !6128
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.strides = load ptr, ptr %16, align 8, !dbg !6128
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !6128

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %17(ptr nonnull @.str.1625), !dbg !6128
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !6128

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %18(ptr nonnull @.str.1626), !dbg !6128
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !6128

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %19(ptr nonnull @.str.1627), !dbg !6128
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !6128

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %20(ptr nonnull @.str.1628), !dbg !6128
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6128
  %22 = load i32, ptr %21, align 4, !dbg !6128
  %23 = icmp eq i32 %22, 5, !dbg !6128
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !6128, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %24(ptr nonnull @.str.1629), !dbg !6128
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6128
  %26 = load i16, ptr %25, align 2, !dbg !6128
  %27 = icmp eq i16 %26, 1, !dbg !6128
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6128
  %29 = load i8, ptr %28, align 1, !dbg !6128
  %30 = icmp eq i8 %29, 32, !dbg !6128
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6128
  %32 = load i8, ptr %31, align 1, !dbg !6128
  %33 = icmp eq i8 %32, 2, !dbg !6128
  %34 = and i1 %30, %33, !dbg !6128
  %35 = and i1 %27, %34, !dbg !6128
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !6128, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %36(ptr nonnull @.str.1630), !dbg !6128
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.shape, align 8, !dbg !6128, !tbaa !6147
  %38 = and i64 %37, 4294967295, !dbg !6128
  %39 = icmp eq i64 %38, 1, !dbg !6128
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !6128, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %40(ptr nonnull @.str.1631), !dbg !6128
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.shape, i64 1, !dbg !6128
  %42 = load i64, ptr %41, align 8, !dbg !6128, !tbaa !6157
  %43 = and i64 %42, 4294967295, !dbg !6128
  %44 = icmp eq i64 %43, 1, !dbg !6128
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !6128, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %45(ptr nonnull @.str.1632), !dbg !6128
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.shape, i64 2, !dbg !6128
  %47 = load i64, ptr %46, align 8, !dbg !6128, !tbaa !6159
  %48 = and i64 %47, 4294967295, !dbg !6128
  %49 = icmp eq i64 %48, 28, !dbg !6128
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !6128, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %50(ptr nonnull @.str.1633), !dbg !6128
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.shape, i64 3, !dbg !6128
  %52 = load i64, ptr %51, align 8, !dbg !6128, !tbaa !6162
  %53 = and i64 %52, 4294967295, !dbg !6128
  %54 = icmp eq i64 %53, 28, !dbg !6128
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !6128, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %55(ptr nonnull @.str.1634), !dbg !6128
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.shape, i64 4, !dbg !6128
  %57 = load i64, ptr %56, align 8, !dbg !6128, !tbaa !6164
  %58 = and i64 %57, 4294967295, !dbg !6128
  %59 = icmp eq i64 %58, 512, !dbg !6128
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !6128, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %60(ptr nonnull @.str.1635), !dbg !6128
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.strides, null, !dbg !6128
  br i1 %.not, label %if_end, label %if_then, !dbg !6128, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.strides, i64 2, !dbg !6128
  %62 = load i64, ptr %61, align 8, !dbg !6128, !tbaa !6168
  %63 = and i64 %62, 4294967295, !dbg !6128
  %64 = icmp eq i64 %63, 14336, !dbg !6128
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.strides, i64 3, !dbg !6128
  %66 = load i64, ptr %65, align 8, !dbg !6128, !tbaa !6178
  %67 = and i64 %66, 4294967295, !dbg !6128
  %68 = icmp eq i64 %67, 512, !dbg !6128
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p0.strides, i64 4, !dbg !6128
  %70 = load i64, ptr %69, align 8, !dbg !6128, !tbaa !6180
  %71 = and i64 %70, 4294967295, !dbg !6128
  %72 = icmp eq i64 %71, 1, !dbg !6128
  %73 = and i1 %68, %72, !dbg !6128
  %74 = and i1 %64, %73, !dbg !6128
  br i1 %74, label %if_end, label %assert_fail29, !dbg !6128, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6128
  %76 = load i64, ptr %75, align 8, !dbg !6128
  %77 = icmp eq i64 %76, 0, !dbg !6128
  br i1 %77, label %assert_end32, label %assert_fail31, !dbg !6128, !prof !18

assert_fail29:                                    ; preds = %if_then
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %78(ptr nonnull @.str.1636), !dbg !6128
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %79(ptr nonnull @.str.1637), !dbg !6128
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6128
  %81 = load i32, ptr %80, align 4, !dbg !6128
  %82 = icmp eq i32 %81, 1, !dbg !6128
  br i1 %82, label %assert_end34, label %assert_fail33, !dbg !6128, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %83(ptr nonnull @.str.1638), !dbg !6128
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6128
  %85 = load i32, ptr %84, align 4, !dbg !6128
  %86 = icmp eq i32 %85, 6, !dbg !6128
  br i1 %86, label %assert_end38, label %assert_fail35, !dbg !6128, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %87 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %87(ptr nonnull @.str.1639), !dbg !6128
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %88 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6128
  %89 = load i16, ptr %88, align 2, !dbg !6128
  %90 = icmp eq i16 %89, 1, !dbg !6128
  %91 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6128
  %92 = load i8, ptr %91, align 1, !dbg !6128
  %93 = icmp eq i8 %92, 32, !dbg !6128
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6128
  %95 = load i8, ptr %94, align 1, !dbg !6128
  %96 = icmp eq i8 %95, 2, !dbg !6128
  %97 = and i1 %93, %96, !dbg !6128
  %98 = and i1 %90, %97, !dbg !6128
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !6128, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %99(ptr nonnull @.str.1640), !dbg !6128
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.shape, align 8, !dbg !6128, !tbaa !6184
  %101 = and i64 %100, 4294967295, !dbg !6128
  %102 = icmp eq i64 %101, 2, !dbg !6128
  br i1 %102, label %assert_end42, label %assert_fail41, !dbg !6128, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %103(ptr nonnull @.str.1641), !dbg !6128
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.shape, i64 1, !dbg !6128
  %105 = load i64, ptr %104, align 8, !dbg !6128, !tbaa !6194
  %106 = and i64 %105, 4294967295, !dbg !6128
  %107 = icmp eq i64 %106, 1, !dbg !6128
  br i1 %107, label %assert_end44, label %assert_fail43, !dbg !6128, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %108(ptr nonnull @.str.1642), !dbg !6128
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.shape, i64 2, !dbg !6128
  %110 = load i64, ptr %109, align 8, !dbg !6128, !tbaa !6196
  %111 = and i64 %110, 4294967295, !dbg !6128
  %112 = icmp eq i64 %111, 1, !dbg !6128
  br i1 %112, label %assert_end46, label %assert_fail45, !dbg !6128, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %113(ptr nonnull @.str.1643), !dbg !6128
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.shape, i64 3, !dbg !6128
  %115 = load i64, ptr %114, align 8, !dbg !6128, !tbaa !6199
  %116 = and i64 %115, 4294967295, !dbg !6128
  %117 = icmp eq i64 %116, 1, !dbg !6128
  br i1 %117, label %assert_end48, label %assert_fail47, !dbg !6128, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %118(ptr nonnull @.str.1644), !dbg !6128
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.shape, i64 4, !dbg !6128
  %120 = load i64, ptr %119, align 8, !dbg !6128, !tbaa !6201
  %121 = and i64 %120, 4294967295, !dbg !6128
  %122 = icmp eq i64 %121, 512, !dbg !6128
  br i1 %122, label %assert_end50, label %assert_fail49, !dbg !6128, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %123(ptr nonnull @.str.1645), !dbg !6128
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.shape, i64 5, !dbg !6128
  %125 = load i64, ptr %124, align 8, !dbg !6128, !tbaa !6205
  %126 = and i64 %125, 4294967295, !dbg !6128
  %127 = icmp eq i64 %126, 64, !dbg !6128
  br i1 %127, label %assert_end52, label %assert_fail51, !dbg !6128, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %128(ptr nonnull @.str.1646), !dbg !6128
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.strides, null, !dbg !6128
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !6128, !prof !52

if_then53:                                        ; preds = %assert_end52
  %129 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.strides, align 8, !dbg !6128, !tbaa !6207
  %130 = and i64 %129, 4294967295, !dbg !6128
  %131 = icmp eq i64 %130, 32768, !dbg !6128
  %132 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.strides, i64 4, !dbg !6128
  %133 = load i64, ptr %132, align 8, !dbg !6128, !tbaa !6217
  %134 = and i64 %133, 4294967295, !dbg !6128
  %135 = icmp eq i64 %134, 64, !dbg !6128
  %136 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p1.strides, i64 5, !dbg !6128
  %137 = load i64, ptr %136, align 8, !dbg !6128, !tbaa !6221
  %138 = and i64 %137, 4294967295, !dbg !6128
  %139 = icmp eq i64 %138, 1, !dbg !6128
  %140 = and i1 %135, %139, !dbg !6128
  %141 = and i1 %131, %140, !dbg !6128
  br i1 %141, label %if_end54, label %assert_fail55, !dbg !6128, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %142 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6128
  %143 = load i64, ptr %142, align 8, !dbg !6128
  %144 = icmp eq i64 %143, 0, !dbg !6128
  br i1 %144, label %assert_end58, label %assert_fail57, !dbg !6128, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %145 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %145(ptr nonnull @.str.1647), !dbg !6128
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %146(ptr nonnull @.str.1648), !dbg !6128
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %147 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6128
  %148 = load i32, ptr %147, align 4, !dbg !6128
  %149 = icmp eq i32 %148, 1, !dbg !6128
  br i1 %149, label %assert_end60, label %assert_fail59, !dbg !6128, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %150(ptr nonnull @.str.1649), !dbg !6128
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %151 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6128
  %152 = load i32, ptr %151, align 4, !dbg !6128
  %153 = icmp eq i32 %dev_id, %152, !dbg !6128
  br i1 %153, label %assert_end62, label %assert_fail61, !dbg !6128, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %154 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %154(ptr nonnull @.str.1650), !dbg !6128
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %155 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !6128
  %156 = load i32, ptr %155, align 4, !dbg !6128
  %157 = icmp eq i32 %156, 5, !dbg !6128
  br i1 %157, label %assert_end66, label %assert_fail63, !dbg !6128, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %158 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %158(ptr nonnull @.str.1651), !dbg !6128
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %159 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !6128
  %160 = load i16, ptr %159, align 2, !dbg !6128
  %161 = icmp eq i16 %160, 1, !dbg !6128
  %162 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !6128
  %163 = load i8, ptr %162, align 1, !dbg !6128
  %164 = icmp eq i8 %163, 32, !dbg !6128
  %165 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !6128
  %166 = load i8, ptr %165, align 1, !dbg !6128
  %167 = icmp eq i8 %166, 2, !dbg !6128
  %168 = and i1 %164, %167, !dbg !6128
  %169 = and i1 %161, %168, !dbg !6128
  br i1 %169, label %assert_end68, label %assert_fail67, !dbg !6128, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %170(ptr nonnull @.str.1652), !dbg !6128
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %171 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.shape, align 8, !dbg !6128, !tbaa !6223
  %172 = and i64 %171, 4294967295, !dbg !6128
  %173 = icmp eq i64 %172, 1, !dbg !6128
  br i1 %173, label %assert_end70, label %assert_fail69, !dbg !6128, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %174(ptr nonnull @.str.1653), !dbg !6128
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %175 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.shape, i64 1, !dbg !6128
  %176 = load i64, ptr %175, align 8, !dbg !6128, !tbaa !6233
  %177 = and i64 %176, 4294967295, !dbg !6128
  %178 = icmp eq i64 %177, 2, !dbg !6128
  br i1 %178, label %assert_end72, label %assert_fail71, !dbg !6128, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %179 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %179(ptr nonnull @.str.1654), !dbg !6128
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %180 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.shape, i64 2, !dbg !6128
  %181 = load i64, ptr %180, align 8, !dbg !6128, !tbaa !6235
  %182 = and i64 %181, 4294967295, !dbg !6128
  %183 = icmp eq i64 %182, 1, !dbg !6128
  br i1 %183, label %assert_end74, label %assert_fail73, !dbg !6128, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %184(ptr nonnull @.str.1655), !dbg !6128
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %185 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.shape, i64 3, !dbg !6128
  %186 = load i64, ptr %185, align 8, !dbg !6128, !tbaa !6238
  %187 = and i64 %186, 4294967295, !dbg !6128
  %188 = icmp eq i64 %187, 1, !dbg !6128
  br i1 %188, label %assert_end76, label %assert_fail75, !dbg !6128, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %189(ptr nonnull @.str.1656), !dbg !6128
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.shape, i64 4, !dbg !6128
  %191 = load i64, ptr %190, align 8, !dbg !6128, !tbaa !6240
  %192 = and i64 %191, 4294967295, !dbg !6128
  %193 = icmp eq i64 %192, 64, !dbg !6128
  br i1 %193, label %assert_end78, label %assert_fail77, !dbg !6128, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %194(ptr nonnull @.str.1657), !dbg !6128
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.strides, null, !dbg !6128
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !6128, !prof !52

if_then79:                                        ; preds = %assert_end78
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.strides, i64 1, !dbg !6128
  %196 = load i64, ptr %195, align 8, !dbg !6128, !tbaa !6244
  %197 = and i64 %196, 4294967295, !dbg !6128
  %198 = icmp eq i64 %197, 64, !dbg !6128
  %199 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.p2.strides, i64 4, !dbg !6128
  %200 = load i64, ptr %199, align 8, !dbg !6128, !tbaa !6254
  %201 = and i64 %200, 4294967295, !dbg !6128
  %202 = icmp eq i64 %201, 1, !dbg !6128
  %203 = and i1 %198, %202, !dbg !6128
  br i1 %203, label %if_end80, label %assert_fail81, !dbg !6128, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %204 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !6128
  %205 = load i64, ptr %204, align 8, !dbg !6128
  %206 = icmp eq i64 %205, 0, !dbg !6128
  br i1 %206, label %assert_end84, label %assert_fail83, !dbg !6128, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %207 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %207(ptr nonnull @.str.1658), !dbg !6128
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %208 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %208(ptr nonnull @.str.1659), !dbg !6128
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %209 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !6128
  %210 = load i32, ptr %209, align 4, !dbg !6128
  %211 = icmp eq i32 %210, 1, !dbg !6128
  br i1 %211, label %assert_end86, label %assert_fail85, !dbg !6128, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %212 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %212(ptr nonnull @.str.1660), !dbg !6128
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %213 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !6128
  %214 = load i32, ptr %213, align 4, !dbg !6128
  %215 = icmp eq i32 %dev_id, %214, !dbg !6128
  br i1 %215, label %assert_end88, label %assert_fail87, !dbg !6128, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %216 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %216(ptr nonnull @.str.1661), !dbg !6128
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %217 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !6128
  %218 = load i32, ptr %217, align 4, !dbg !6128
  %219 = icmp eq i32 %218, 5, !dbg !6128
  br i1 %219, label %assert_end92, label %assert_fail89, !dbg !6128, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %220 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %220(ptr nonnull @.str.1662), !dbg !6128
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %221 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !6128
  %222 = load i16, ptr %221, align 2, !dbg !6128
  %223 = icmp eq i16 %222, 1, !dbg !6128
  %224 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !6128
  %225 = load i8, ptr %224, align 1, !dbg !6128
  %226 = icmp eq i8 %225, 32, !dbg !6128
  %227 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !6128
  %228 = load i8, ptr %227, align 1, !dbg !6128
  %229 = icmp eq i8 %228, 2, !dbg !6128
  %230 = and i1 %226, %229, !dbg !6128
  %231 = and i1 %223, %230, !dbg !6128
  br i1 %231, label %assert_end94, label %assert_fail93, !dbg !6128, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %232 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %232(ptr nonnull @.str.1663), !dbg !6128
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %233 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.shape, align 8, !dbg !6128, !tbaa !6258
  %234 = and i64 %233, 4294967295, !dbg !6128
  %235 = icmp eq i64 %234, 1, !dbg !6128
  br i1 %235, label %assert_end96, label %assert_fail95, !dbg !6128, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %236(ptr nonnull @.str.1664), !dbg !6128
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %237 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.shape, i64 1, !dbg !6128
  %238 = load i64, ptr %237, align 8, !dbg !6128, !tbaa !6268
  %239 = and i64 %238, 4294967295, !dbg !6128
  %240 = icmp eq i64 %239, 2, !dbg !6128
  br i1 %240, label %assert_end98, label %assert_fail97, !dbg !6128, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %241 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %241(ptr nonnull @.str.1665), !dbg !6128
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %242 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.shape, i64 2, !dbg !6128
  %243 = load i64, ptr %242, align 8, !dbg !6128, !tbaa !6270
  %244 = and i64 %243, 4294967295, !dbg !6128
  %245 = icmp eq i64 %244, 28, !dbg !6128
  br i1 %245, label %assert_end100, label %assert_fail99, !dbg !6128, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %246(ptr nonnull @.str.1666), !dbg !6128
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.shape, i64 3, !dbg !6128
  %248 = load i64, ptr %247, align 8, !dbg !6128, !tbaa !6273
  %249 = and i64 %248, 4294967295, !dbg !6128
  %250 = icmp eq i64 %249, 28, !dbg !6128
  br i1 %250, label %assert_end102, label %assert_fail101, !dbg !6128, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %251(ptr nonnull @.str.1667), !dbg !6128
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.shape, i64 4, !dbg !6128
  %253 = load i64, ptr %252, align 8, !dbg !6128, !tbaa !6275
  %254 = and i64 %253, 4294967295, !dbg !6128
  %255 = icmp eq i64 %254, 64, !dbg !6128
  br i1 %255, label %assert_end104, label %assert_fail103, !dbg !6128, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %256(ptr nonnull @.str.1668), !dbg !6128
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.strides, null, !dbg !6128
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !6128, !prof !52

if_then105:                                       ; preds = %assert_end104
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.strides, i64 1, !dbg !6128
  %258 = load i64, ptr %257, align 8, !dbg !6128, !tbaa !6279
  %259 = and i64 %258, 4294967295, !dbg !6128
  %260 = icmp eq i64 %259, 50176, !dbg !6128
  %261 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.strides, i64 2, !dbg !6128
  %262 = load i64, ptr %261, align 8, !dbg !6128, !tbaa !6289
  %263 = and i64 %262, 4294967295, !dbg !6128
  %264 = icmp eq i64 %263, 1792, !dbg !6128
  %265 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.strides, i64 3, !dbg !6128
  %266 = load i64, ptr %265, align 8, !dbg !6128, !tbaa !6292
  %267 = and i64 %266, 4294967295, !dbg !6128
  %268 = icmp eq i64 %267, 64, !dbg !6128
  %269 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6.T_relu.strides, i64 4, !dbg !6128
  %270 = load i64, ptr %269, align 8, !dbg !6128, !tbaa !6294
  %271 = and i64 %270, 4294967295, !dbg !6128
  %272 = icmp eq i64 %271, 1, !dbg !6128
  %273 = and i1 %268, %272, !dbg !6128
  %274 = and i1 %264, %273, !dbg !6128
  %275 = and i1 %260, %274, !dbg !6128
  br i1 %275, label %if_end106, label %assert_fail107, !dbg !6128, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %276 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !6128
  %277 = load i64, ptr %276, align 8, !dbg !6128
  %278 = icmp eq i64 %277, 0, !dbg !6128
  br i1 %278, label %assert_end110, label %assert_fail109, !dbg !6128, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %279 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %279(ptr nonnull @.str.1669), !dbg !6128
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %280 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %280(ptr nonnull @.str.1670), !dbg !6128
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %281 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !6128
  %282 = load i32, ptr %281, align 4, !dbg !6128
  %283 = icmp eq i32 %282, 1, !dbg !6128
  br i1 %283, label %assert_end112, label %assert_fail111, !dbg !6128, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %284 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %284(ptr nonnull @.str.1671), !dbg !6128
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %285 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !6128
  %286 = load i32, ptr %285, align 4, !dbg !6128
  %287 = icmp eq i32 %dev_id, %286, !dbg !6128
  br i1 %287, label %assert_end114, label %assert_fail113, !dbg !6128, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %288 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6128, !tbaa !19
  tail call void %288(ptr nonnull @.str.1672), !dbg !6128
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %289 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_compute_(i32 %dev_id, ptr %p0115, ptr %p1116, ptr %T_relu117, ptr %p2118), !dbg !6128
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6298 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6300, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6301, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6302, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6303, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6304, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6305, metadata !DIExpression()), !dbg !6306
  %0 = icmp eq i32 %num_args, 4, !dbg !6306
  br i1 %0, label %assert_end, label %assert_fail, !dbg !6306, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %299, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !6306

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %1(ptr nonnull @.str.1674), !dbg !6306
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6306, !tbaa !6307
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6306
  %p1.code = load i32, ptr %2, align 4, !dbg !6306, !tbaa !6318
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6306
  %p2.code = load i32, ptr %3, align 4, !dbg !6306, !tbaa !6320
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !6306
  %T_relu.code = load i32, ptr %4, align 4, !dbg !6306, !tbaa !6323
  %p0 = load ptr, ptr %args, align 8, !dbg !6306
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6306
  %p1 = load ptr, ptr %5, align 8, !dbg !6306
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6306
  %p2 = load ptr, ptr %6, align 8, !dbg !6306
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !6306
  %T_relu = load ptr, ptr %7, align 8, !dbg !6306
  %p0115 = load ptr, ptr %p0, align 8, !dbg !6306
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !6306
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6306
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.shape = load ptr, ptr %8, align 8, !dbg !6306
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6306
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.strides = load ptr, ptr %9, align 8, !dbg !6306
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6306
  %dev_id = load i32, ptr %10, align 4, !dbg !6306
  %p1116 = load ptr, ptr %p1, align 8, !dbg !6306
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !6306
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6306
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.shape = load ptr, ptr %11, align 8, !dbg !6306
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6306
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.strides = load ptr, ptr %12, align 8, !dbg !6306
  %p2118 = load ptr, ptr %p2, align 8, !dbg !6306
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !6306
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !6306
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.shape = load ptr, ptr %13, align 8, !dbg !6306
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !6306
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.strides = load ptr, ptr %14, align 8, !dbg !6306
  %T_relu117 = load ptr, ptr %T_relu, align 8, !dbg !6306
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu117, i64 64) ], !dbg !6306
  %15 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !6306
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.shape = load ptr, ptr %15, align 8, !dbg !6306
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !6306
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.strides = load ptr, ptr %16, align 8, !dbg !6306
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !6306

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %17(ptr nonnull @.str.1675), !dbg !6306
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !6306

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %18(ptr nonnull @.str.1676), !dbg !6306
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !6306

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %19(ptr nonnull @.str.1677), !dbg !6306
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !6306

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %20(ptr nonnull @.str.1678), !dbg !6306
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6306
  %22 = load i32, ptr %21, align 4, !dbg !6306
  %23 = icmp eq i32 %22, 5, !dbg !6306
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !6306, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %24(ptr nonnull @.str.1679), !dbg !6306
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6306
  %26 = load i16, ptr %25, align 2, !dbg !6306
  %27 = icmp eq i16 %26, 1, !dbg !6306
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6306
  %29 = load i8, ptr %28, align 1, !dbg !6306
  %30 = icmp eq i8 %29, 32, !dbg !6306
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6306
  %32 = load i8, ptr %31, align 1, !dbg !6306
  %33 = icmp eq i8 %32, 2, !dbg !6306
  %34 = and i1 %30, %33, !dbg !6306
  %35 = and i1 %27, %34, !dbg !6306
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !6306, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %36(ptr nonnull @.str.1680), !dbg !6306
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.shape, align 8, !dbg !6306, !tbaa !6325
  %38 = and i64 %37, 4294967295, !dbg !6306
  %39 = icmp eq i64 %38, 1, !dbg !6306
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !6306, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %40(ptr nonnull @.str.1681), !dbg !6306
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.shape, i64 1, !dbg !6306
  %42 = load i64, ptr %41, align 8, !dbg !6306, !tbaa !6335
  %43 = and i64 %42, 4294967295, !dbg !6306
  %44 = icmp eq i64 %43, 1, !dbg !6306
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !6306, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %45(ptr nonnull @.str.1682), !dbg !6306
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.shape, i64 2, !dbg !6306
  %47 = load i64, ptr %46, align 8, !dbg !6306, !tbaa !6337
  %48 = and i64 %47, 4294967295, !dbg !6306
  %49 = icmp eq i64 %48, 28, !dbg !6306
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !6306, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %50(ptr nonnull @.str.1683), !dbg !6306
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.shape, i64 3, !dbg !6306
  %52 = load i64, ptr %51, align 8, !dbg !6306, !tbaa !6340
  %53 = and i64 %52, 4294967295, !dbg !6306
  %54 = icmp eq i64 %53, 28, !dbg !6306
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !6306, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %55(ptr nonnull @.str.1684), !dbg !6306
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.shape, i64 4, !dbg !6306
  %57 = load i64, ptr %56, align 8, !dbg !6306, !tbaa !6342
  %58 = and i64 %57, 4294967295, !dbg !6306
  %59 = icmp eq i64 %58, 128, !dbg !6306
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !6306, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %60(ptr nonnull @.str.1685), !dbg !6306
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.strides, null, !dbg !6306
  br i1 %.not, label %if_end, label %if_then, !dbg !6306, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.strides, i64 2, !dbg !6306
  %62 = load i64, ptr %61, align 8, !dbg !6306, !tbaa !6346
  %63 = and i64 %62, 4294967295, !dbg !6306
  %64 = icmp eq i64 %63, 3584, !dbg !6306
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.strides, i64 3, !dbg !6306
  %66 = load i64, ptr %65, align 8, !dbg !6306, !tbaa !6356
  %67 = and i64 %66, 4294967295, !dbg !6306
  %68 = icmp eq i64 %67, 128, !dbg !6306
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p0.strides, i64 4, !dbg !6306
  %70 = load i64, ptr %69, align 8, !dbg !6306, !tbaa !6358
  %71 = and i64 %70, 4294967295, !dbg !6306
  %72 = icmp eq i64 %71, 1, !dbg !6306
  %73 = and i1 %68, %72, !dbg !6306
  %74 = and i1 %64, %73, !dbg !6306
  br i1 %74, label %if_end, label %assert_fail29, !dbg !6306, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6306
  %76 = load i64, ptr %75, align 8, !dbg !6306
  %77 = icmp eq i64 %76, 0, !dbg !6306
  br i1 %77, label %assert_end32, label %assert_fail31, !dbg !6306, !prof !18

assert_fail29:                                    ; preds = %if_then
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %78(ptr nonnull @.str.1686), !dbg !6306
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %79 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %79(ptr nonnull @.str.1687), !dbg !6306
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6306
  %81 = load i32, ptr %80, align 4, !dbg !6306
  %82 = icmp eq i32 %81, 1, !dbg !6306
  br i1 %82, label %assert_end34, label %assert_fail33, !dbg !6306, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %83(ptr nonnull @.str.1688), !dbg !6306
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %84 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6306
  %85 = load i32, ptr %84, align 4, !dbg !6306
  %86 = icmp eq i32 %85, 6, !dbg !6306
  br i1 %86, label %assert_end38, label %assert_fail35, !dbg !6306, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %87 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %87(ptr nonnull @.str.1689), !dbg !6306
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %88 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6306
  %89 = load i16, ptr %88, align 2, !dbg !6306
  %90 = icmp eq i16 %89, 1, !dbg !6306
  %91 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6306
  %92 = load i8, ptr %91, align 1, !dbg !6306
  %93 = icmp eq i8 %92, 32, !dbg !6306
  %94 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6306
  %95 = load i8, ptr %94, align 1, !dbg !6306
  %96 = icmp eq i8 %95, 2, !dbg !6306
  %97 = and i1 %93, %96, !dbg !6306
  %98 = and i1 %90, %97, !dbg !6306
  br i1 %98, label %assert_end40, label %assert_fail39, !dbg !6306, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %99 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %99(ptr nonnull @.str.1690), !dbg !6306
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %100 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.shape, align 8, !dbg !6306, !tbaa !6362
  %101 = and i64 %100, 4294967295, !dbg !6306
  %102 = icmp eq i64 %101, 4, !dbg !6306
  br i1 %102, label %assert_end42, label %assert_fail41, !dbg !6306, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %103(ptr nonnull @.str.1691), !dbg !6306
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.shape, i64 1, !dbg !6306
  %105 = load i64, ptr %104, align 8, !dbg !6306, !tbaa !6372
  %106 = and i64 %105, 4294967295, !dbg !6306
  %107 = icmp eq i64 %106, 1, !dbg !6306
  br i1 %107, label %assert_end44, label %assert_fail43, !dbg !6306, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %108(ptr nonnull @.str.1692), !dbg !6306
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.shape, i64 2, !dbg !6306
  %110 = load i64, ptr %109, align 8, !dbg !6306, !tbaa !6374
  %111 = and i64 %110, 4294967295, !dbg !6306
  %112 = icmp eq i64 %111, 3, !dbg !6306
  br i1 %112, label %assert_end46, label %assert_fail45, !dbg !6306, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %113(ptr nonnull @.str.1693), !dbg !6306
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.shape, i64 3, !dbg !6306
  %115 = load i64, ptr %114, align 8, !dbg !6306, !tbaa !6377
  %116 = and i64 %115, 4294967295, !dbg !6306
  %117 = icmp eq i64 %116, 3, !dbg !6306
  br i1 %117, label %assert_end48, label %assert_fail47, !dbg !6306, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %118(ptr nonnull @.str.1694), !dbg !6306
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.shape, i64 4, !dbg !6306
  %120 = load i64, ptr %119, align 8, !dbg !6306, !tbaa !6379
  %121 = and i64 %120, 4294967295, !dbg !6306
  %122 = icmp eq i64 %121, 128, !dbg !6306
  br i1 %122, label %assert_end50, label %assert_fail49, !dbg !6306, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %123(ptr nonnull @.str.1695), !dbg !6306
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.shape, i64 5, !dbg !6306
  %125 = load i64, ptr %124, align 8, !dbg !6306, !tbaa !6383
  %126 = and i64 %125, 4294967295, !dbg !6306
  %127 = icmp eq i64 %126, 32, !dbg !6306
  br i1 %127, label %assert_end52, label %assert_fail51, !dbg !6306, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %128(ptr nonnull @.str.1696), !dbg !6306
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.strides, null, !dbg !6306
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !6306, !prof !52

if_then53:                                        ; preds = %assert_end52
  %129 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.strides, align 8, !dbg !6306, !tbaa !6385
  %130 = and i64 %129, 4294967295, !dbg !6306
  %131 = icmp eq i64 %130, 36864, !dbg !6306
  %132 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.strides, i64 2, !dbg !6306
  %133 = load i64, ptr %132, align 8, !dbg !6306, !tbaa !6395
  %134 = and i64 %133, 4294967295, !dbg !6306
  %135 = icmp eq i64 %134, 12288, !dbg !6306
  %136 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.strides, i64 3, !dbg !6306
  %137 = load i64, ptr %136, align 8, !dbg !6306, !tbaa !6398
  %138 = and i64 %137, 4294967295, !dbg !6306
  %139 = icmp eq i64 %138, 4096, !dbg !6306
  %140 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.strides, i64 4, !dbg !6306
  %141 = load i64, ptr %140, align 8, !dbg !6306, !tbaa !6400
  %142 = and i64 %141, 4294967295, !dbg !6306
  %143 = icmp eq i64 %142, 32, !dbg !6306
  %144 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p1.strides, i64 5, !dbg !6306
  %145 = load i64, ptr %144, align 8, !dbg !6306, !tbaa !6404
  %146 = and i64 %145, 4294967295, !dbg !6306
  %147 = icmp eq i64 %146, 1, !dbg !6306
  %148 = and i1 %143, %147, !dbg !6306
  %149 = and i1 %139, %148, !dbg !6306
  %150 = and i1 %135, %149, !dbg !6306
  %151 = and i1 %131, %150, !dbg !6306
  br i1 %151, label %if_end54, label %assert_fail55, !dbg !6306, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %152 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6306
  %153 = load i64, ptr %152, align 8, !dbg !6306
  %154 = icmp eq i64 %153, 0, !dbg !6306
  br i1 %154, label %assert_end58, label %assert_fail57, !dbg !6306, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %155(ptr nonnull @.str.1697), !dbg !6306
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %156(ptr nonnull @.str.1698), !dbg !6306
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %157 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6306
  %158 = load i32, ptr %157, align 4, !dbg !6306
  %159 = icmp eq i32 %158, 1, !dbg !6306
  br i1 %159, label %assert_end60, label %assert_fail59, !dbg !6306, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %160(ptr nonnull @.str.1699), !dbg !6306
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %161 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6306
  %162 = load i32, ptr %161, align 4, !dbg !6306
  %163 = icmp eq i32 %dev_id, %162, !dbg !6306
  br i1 %163, label %assert_end62, label %assert_fail61, !dbg !6306, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %164 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %164(ptr nonnull @.str.1700), !dbg !6306
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %165 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !6306
  %166 = load i32, ptr %165, align 4, !dbg !6306
  %167 = icmp eq i32 %166, 5, !dbg !6306
  br i1 %167, label %assert_end66, label %assert_fail63, !dbg !6306, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %168 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %168(ptr nonnull @.str.1701), !dbg !6306
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %169 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !6306
  %170 = load i16, ptr %169, align 2, !dbg !6306
  %171 = icmp eq i16 %170, 1, !dbg !6306
  %172 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !6306
  %173 = load i8, ptr %172, align 1, !dbg !6306
  %174 = icmp eq i8 %173, 32, !dbg !6306
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !6306
  %176 = load i8, ptr %175, align 1, !dbg !6306
  %177 = icmp eq i8 %176, 2, !dbg !6306
  %178 = and i1 %174, %177, !dbg !6306
  %179 = and i1 %171, %178, !dbg !6306
  br i1 %179, label %assert_end68, label %assert_fail67, !dbg !6306, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %180(ptr nonnull @.str.1702), !dbg !6306
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %181 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.shape, align 8, !dbg !6306, !tbaa !6406
  %182 = and i64 %181, 4294967295, !dbg !6306
  %183 = icmp eq i64 %182, 1, !dbg !6306
  br i1 %183, label %assert_end70, label %assert_fail69, !dbg !6306, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %184(ptr nonnull @.str.1703), !dbg !6306
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %185 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.shape, i64 1, !dbg !6306
  %186 = load i64, ptr %185, align 8, !dbg !6306, !tbaa !6416
  %187 = and i64 %186, 4294967295, !dbg !6306
  %188 = icmp eq i64 %187, 4, !dbg !6306
  br i1 %188, label %assert_end72, label %assert_fail71, !dbg !6306, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %189(ptr nonnull @.str.1704), !dbg !6306
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.shape, i64 2, !dbg !6306
  %191 = load i64, ptr %190, align 8, !dbg !6306, !tbaa !6418
  %192 = and i64 %191, 4294967295, !dbg !6306
  %193 = icmp eq i64 %192, 1, !dbg !6306
  br i1 %193, label %assert_end74, label %assert_fail73, !dbg !6306, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %194(ptr nonnull @.str.1705), !dbg !6306
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.shape, i64 3, !dbg !6306
  %196 = load i64, ptr %195, align 8, !dbg !6306, !tbaa !6421
  %197 = and i64 %196, 4294967295, !dbg !6306
  %198 = icmp eq i64 %197, 1, !dbg !6306
  br i1 %198, label %assert_end76, label %assert_fail75, !dbg !6306, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %199(ptr nonnull @.str.1706), !dbg !6306
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.shape, i64 4, !dbg !6306
  %201 = load i64, ptr %200, align 8, !dbg !6306, !tbaa !6423
  %202 = and i64 %201, 4294967295, !dbg !6306
  %203 = icmp eq i64 %202, 32, !dbg !6306
  br i1 %203, label %assert_end78, label %assert_fail77, !dbg !6306, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %204(ptr nonnull @.str.1707), !dbg !6306
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.strides, null, !dbg !6306
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !6306, !prof !52

if_then79:                                        ; preds = %assert_end78
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.strides, i64 1, !dbg !6306
  %206 = load i64, ptr %205, align 8, !dbg !6306, !tbaa !6427
  %207 = and i64 %206, 4294967295, !dbg !6306
  %208 = icmp eq i64 %207, 32, !dbg !6306
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.p2.strides, i64 4, !dbg !6306
  %210 = load i64, ptr %209, align 8, !dbg !6306, !tbaa !6437
  %211 = and i64 %210, 4294967295, !dbg !6306
  %212 = icmp eq i64 %211, 1, !dbg !6306
  %213 = and i1 %208, %212, !dbg !6306
  br i1 %213, label %if_end80, label %assert_fail81, !dbg !6306, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %214 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !6306
  %215 = load i64, ptr %214, align 8, !dbg !6306
  %216 = icmp eq i64 %215, 0, !dbg !6306
  br i1 %216, label %assert_end84, label %assert_fail83, !dbg !6306, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %217(ptr nonnull @.str.1708), !dbg !6306
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %218(ptr nonnull @.str.1709), !dbg !6306
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %219 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !6306
  %220 = load i32, ptr %219, align 4, !dbg !6306
  %221 = icmp eq i32 %220, 1, !dbg !6306
  br i1 %221, label %assert_end86, label %assert_fail85, !dbg !6306, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %222(ptr nonnull @.str.1710), !dbg !6306
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %223 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !6306
  %224 = load i32, ptr %223, align 4, !dbg !6306
  %225 = icmp eq i32 %dev_id, %224, !dbg !6306
  br i1 %225, label %assert_end88, label %assert_fail87, !dbg !6306, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %226 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %226(ptr nonnull @.str.1711), !dbg !6306
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %227 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !6306
  %228 = load i32, ptr %227, align 4, !dbg !6306
  %229 = icmp eq i32 %228, 5, !dbg !6306
  br i1 %229, label %assert_end92, label %assert_fail89, !dbg !6306, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %230 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %230(ptr nonnull @.str.1712), !dbg !6306
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %231 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !6306
  %232 = load i16, ptr %231, align 2, !dbg !6306
  %233 = icmp eq i16 %232, 1, !dbg !6306
  %234 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !6306
  %235 = load i8, ptr %234, align 1, !dbg !6306
  %236 = icmp eq i8 %235, 32, !dbg !6306
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !6306
  %238 = load i8, ptr %237, align 1, !dbg !6306
  %239 = icmp eq i8 %238, 2, !dbg !6306
  %240 = and i1 %236, %239, !dbg !6306
  %241 = and i1 %233, %240, !dbg !6306
  br i1 %241, label %assert_end94, label %assert_fail93, !dbg !6306, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %242(ptr nonnull @.str.1713), !dbg !6306
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %243 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.shape, align 8, !dbg !6306, !tbaa !6441
  %244 = and i64 %243, 4294967295, !dbg !6306
  %245 = icmp eq i64 %244, 1, !dbg !6306
  br i1 %245, label %assert_end96, label %assert_fail95, !dbg !6306, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %246(ptr nonnull @.str.1714), !dbg !6306
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.shape, i64 1, !dbg !6306
  %248 = load i64, ptr %247, align 8, !dbg !6306, !tbaa !6451
  %249 = and i64 %248, 4294967295, !dbg !6306
  %250 = icmp eq i64 %249, 4, !dbg !6306
  br i1 %250, label %assert_end98, label %assert_fail97, !dbg !6306, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %251(ptr nonnull @.str.1715), !dbg !6306
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.shape, i64 2, !dbg !6306
  %253 = load i64, ptr %252, align 8, !dbg !6306, !tbaa !6453
  %254 = and i64 %253, 4294967295, !dbg !6306
  %255 = icmp eq i64 %254, 28, !dbg !6306
  br i1 %255, label %assert_end100, label %assert_fail99, !dbg !6306, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %256(ptr nonnull @.str.1716), !dbg !6306
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.shape, i64 3, !dbg !6306
  %258 = load i64, ptr %257, align 8, !dbg !6306, !tbaa !6456
  %259 = and i64 %258, 4294967295, !dbg !6306
  %260 = icmp eq i64 %259, 28, !dbg !6306
  br i1 %260, label %assert_end102, label %assert_fail101, !dbg !6306, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %261(ptr nonnull @.str.1717), !dbg !6306
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.shape, i64 4, !dbg !6306
  %263 = load i64, ptr %262, align 8, !dbg !6306, !tbaa !6458
  %264 = and i64 %263, 4294967295, !dbg !6306
  %265 = icmp eq i64 %264, 32, !dbg !6306
  br i1 %265, label %assert_end104, label %assert_fail103, !dbg !6306, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %266(ptr nonnull @.str.1718), !dbg !6306
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.strides, null, !dbg !6306
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !6306, !prof !52

if_then105:                                       ; preds = %assert_end104
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.strides, i64 1, !dbg !6306
  %268 = load i64, ptr %267, align 8, !dbg !6306, !tbaa !6462
  %269 = and i64 %268, 4294967295, !dbg !6306
  %270 = icmp eq i64 %269, 25088, !dbg !6306
  %271 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.strides, i64 2, !dbg !6306
  %272 = load i64, ptr %271, align 8, !dbg !6306, !tbaa !6472
  %273 = and i64 %272, 4294967295, !dbg !6306
  %274 = icmp eq i64 %273, 896, !dbg !6306
  %275 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.strides, i64 3, !dbg !6306
  %276 = load i64, ptr %275, align 8, !dbg !6306, !tbaa !6475
  %277 = and i64 %276, 4294967295, !dbg !6306
  %278 = icmp eq i64 %277, 32, !dbg !6306
  %279 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7.T_relu.strides, i64 4, !dbg !6306
  %280 = load i64, ptr %279, align 8, !dbg !6306, !tbaa !6477
  %281 = and i64 %280, 4294967295, !dbg !6306
  %282 = icmp eq i64 %281, 1, !dbg !6306
  %283 = and i1 %278, %282, !dbg !6306
  %284 = and i1 %274, %283, !dbg !6306
  %285 = and i1 %270, %284, !dbg !6306
  br i1 %285, label %if_end106, label %assert_fail107, !dbg !6306, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %286 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !6306
  %287 = load i64, ptr %286, align 8, !dbg !6306
  %288 = icmp eq i64 %287, 0, !dbg !6306
  br i1 %288, label %assert_end110, label %assert_fail109, !dbg !6306, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %289(ptr nonnull @.str.1719), !dbg !6306
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %290(ptr nonnull @.str.1720), !dbg !6306
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %291 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !6306
  %292 = load i32, ptr %291, align 4, !dbg !6306
  %293 = icmp eq i32 %292, 1, !dbg !6306
  br i1 %293, label %assert_end112, label %assert_fail111, !dbg !6306, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %294(ptr nonnull @.str.1721), !dbg !6306
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %295 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !6306
  %296 = load i32, ptr %295, align 4, !dbg !6306
  %297 = icmp eq i32 %dev_id, %296, !dbg !6306
  br i1 %297, label %assert_end114, label %assert_fail113, !dbg !6306, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %298 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6306, !tbaa !19
  tail call void %298(ptr nonnull @.str.1722), !dbg !6306
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %299 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_compute_(i32 %dev_id, ptr %p0115, ptr %p1116, ptr %T_relu117, ptr %p2118), !dbg !6306
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6481 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6483, metadata !DIExpression()), !dbg !6489
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6484, metadata !DIExpression()), !dbg !6489
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6485, metadata !DIExpression()), !dbg !6489
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6486, metadata !DIExpression()), !dbg !6489
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6487, metadata !DIExpression()), !dbg !6489
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6488, metadata !DIExpression()), !dbg !6489
  %0 = icmp eq i32 %num_args, 4, !dbg !6489
  br i1 %0, label %assert_end, label %assert_fail, !dbg !6489, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %299, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !6489

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %1(ptr nonnull @.str.1725), !dbg !6489
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6489, !tbaa !6490
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6489
  %p1.code = load i32, ptr %2, align 4, !dbg !6489, !tbaa !6501
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6489
  %p2.code = load i32, ptr %3, align 4, !dbg !6489, !tbaa !6503
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !6489
  %T_relu.code = load i32, ptr %4, align 4, !dbg !6489, !tbaa !6506
  %p0 = load ptr, ptr %args, align 8, !dbg !6489
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6489
  %p1 = load ptr, ptr %5, align 8, !dbg !6489
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6489
  %p2 = load ptr, ptr %6, align 8, !dbg !6489
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !6489
  %T_relu = load ptr, ptr %7, align 8, !dbg !6489
  %p0115 = load ptr, ptr %p0, align 8, !dbg !6489
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !6489
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6489
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.shape = load ptr, ptr %8, align 8, !dbg !6489
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6489
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.strides = load ptr, ptr %9, align 8, !dbg !6489
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6489
  %dev_id = load i32, ptr %10, align 4, !dbg !6489
  %p1116 = load ptr, ptr %p1, align 8, !dbg !6489
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !6489
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6489
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.shape = load ptr, ptr %11, align 8, !dbg !6489
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6489
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.strides = load ptr, ptr %12, align 8, !dbg !6489
  %p2118 = load ptr, ptr %p2, align 8, !dbg !6489
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !6489
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !6489
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.shape = load ptr, ptr %13, align 8, !dbg !6489
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !6489
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.strides = load ptr, ptr %14, align 8, !dbg !6489
  %T_relu117 = load ptr, ptr %T_relu, align 8, !dbg !6489
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu117, i64 64) ], !dbg !6489
  %15 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !6489
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.shape = load ptr, ptr %15, align 8, !dbg !6489
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !6489
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.strides = load ptr, ptr %16, align 8, !dbg !6489
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !6489

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %17(ptr nonnull @.str.1726), !dbg !6489
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !6489

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %18(ptr nonnull @.str.1727), !dbg !6489
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !6489

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %19(ptr nonnull @.str.1728), !dbg !6489
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !6489

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %20(ptr nonnull @.str.1729), !dbg !6489
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6489
  %22 = load i32, ptr %21, align 4, !dbg !6489
  %23 = icmp eq i32 %22, 5, !dbg !6489
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !6489, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %24(ptr nonnull @.str.1730), !dbg !6489
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6489
  %26 = load i16, ptr %25, align 2, !dbg !6489
  %27 = icmp eq i16 %26, 1, !dbg !6489
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6489
  %29 = load i8, ptr %28, align 1, !dbg !6489
  %30 = icmp eq i8 %29, 32, !dbg !6489
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6489
  %32 = load i8, ptr %31, align 1, !dbg !6489
  %33 = icmp eq i8 %32, 2, !dbg !6489
  %34 = and i1 %30, %33, !dbg !6489
  %35 = and i1 %27, %34, !dbg !6489
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !6489, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %36(ptr nonnull @.str.1731), !dbg !6489
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.shape, align 8, !dbg !6489, !tbaa !6508
  %38 = and i64 %37, 4294967295, !dbg !6489
  %39 = icmp eq i64 %38, 1, !dbg !6489
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !6489, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %40(ptr nonnull @.str.1732), !dbg !6489
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.shape, i64 1, !dbg !6489
  %42 = load i64, ptr %41, align 8, !dbg !6489, !tbaa !6518
  %43 = and i64 %42, 4294967295, !dbg !6489
  %44 = icmp eq i64 %43, 128, !dbg !6489
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !6489, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %45(ptr nonnull @.str.1733), !dbg !6489
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.shape, i64 2, !dbg !6489
  %47 = load i64, ptr %46, align 8, !dbg !6489, !tbaa !6520
  %48 = and i64 %47, 4294967295, !dbg !6489
  %49 = icmp eq i64 %48, 28, !dbg !6489
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !6489, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %50(ptr nonnull @.str.1734), !dbg !6489
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.shape, i64 3, !dbg !6489
  %52 = load i64, ptr %51, align 8, !dbg !6489, !tbaa !6523
  %53 = and i64 %52, 4294967295, !dbg !6489
  %54 = icmp eq i64 %53, 28, !dbg !6489
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !6489, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %55(ptr nonnull @.str.1735), !dbg !6489
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.shape, i64 4, !dbg !6489
  %57 = load i64, ptr %56, align 8, !dbg !6489, !tbaa !6525
  %58 = and i64 %57, 4294967295, !dbg !6489
  %59 = icmp eq i64 %58, 4, !dbg !6489
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !6489, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %60(ptr nonnull @.str.1736), !dbg !6489
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.strides, null, !dbg !6489
  br i1 %.not, label %if_end, label %if_then, !dbg !6489, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.strides, i64 1, !dbg !6489
  %62 = load i64, ptr %61, align 8, !dbg !6489, !tbaa !6529
  %63 = and i64 %62, 4294967295, !dbg !6489
  %64 = icmp eq i64 %63, 3136, !dbg !6489
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.strides, i64 2, !dbg !6489
  %66 = load i64, ptr %65, align 8, !dbg !6489, !tbaa !6539
  %67 = and i64 %66, 4294967295, !dbg !6489
  %68 = icmp eq i64 %67, 112, !dbg !6489
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.strides, i64 3, !dbg !6489
  %70 = load i64, ptr %69, align 8, !dbg !6489, !tbaa !6542
  %71 = and i64 %70, 4294967295, !dbg !6489
  %72 = icmp eq i64 %71, 4, !dbg !6489
  %73 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p0.strides, i64 4, !dbg !6489
  %74 = load i64, ptr %73, align 8, !dbg !6489, !tbaa !6544
  %75 = and i64 %74, 4294967295, !dbg !6489
  %76 = icmp eq i64 %75, 1, !dbg !6489
  %77 = and i1 %72, %76, !dbg !6489
  %78 = and i1 %68, %77, !dbg !6489
  %79 = and i1 %64, %78, !dbg !6489
  br i1 %79, label %if_end, label %assert_fail29, !dbg !6489, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6489
  %81 = load i64, ptr %80, align 8, !dbg !6489
  %82 = icmp eq i64 %81, 0, !dbg !6489
  br i1 %82, label %assert_end32, label %assert_fail31, !dbg !6489, !prof !18

assert_fail29:                                    ; preds = %if_then
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %83(ptr nonnull @.str.1737), !dbg !6489
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %84(ptr nonnull @.str.1738), !dbg !6489
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %85 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6489
  %86 = load i32, ptr %85, align 4, !dbg !6489
  %87 = icmp eq i32 %86, 1, !dbg !6489
  br i1 %87, label %assert_end34, label %assert_fail33, !dbg !6489, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %88(ptr nonnull @.str.1739), !dbg !6489
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %89 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6489
  %90 = load i32, ptr %89, align 4, !dbg !6489
  %91 = icmp eq i32 %90, 6, !dbg !6489
  br i1 %91, label %assert_end38, label %assert_fail35, !dbg !6489, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %92 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %92(ptr nonnull @.str.1740), !dbg !6489
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %93 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6489
  %94 = load i16, ptr %93, align 2, !dbg !6489
  %95 = icmp eq i16 %94, 1, !dbg !6489
  %96 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6489
  %97 = load i8, ptr %96, align 1, !dbg !6489
  %98 = icmp eq i8 %97, 32, !dbg !6489
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6489
  %100 = load i8, ptr %99, align 1, !dbg !6489
  %101 = icmp eq i8 %100, 2, !dbg !6489
  %102 = and i1 %98, %101, !dbg !6489
  %103 = and i1 %95, %102, !dbg !6489
  br i1 %103, label %assert_end40, label %assert_fail39, !dbg !6489, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %104(ptr nonnull @.str.1741), !dbg !6489
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %105 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.shape, align 8, !dbg !6489, !tbaa !6548
  %106 = and i64 %105, 4294967295, !dbg !6489
  %107 = icmp eq i64 %106, 64, !dbg !6489
  br i1 %107, label %assert_end42, label %assert_fail41, !dbg !6489, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %108(ptr nonnull @.str.1742), !dbg !6489
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.shape, i64 1, !dbg !6489
  %110 = load i64, ptr %109, align 8, !dbg !6489, !tbaa !6558
  %111 = and i64 %110, 4294967295, !dbg !6489
  %112 = icmp eq i64 %111, 128, !dbg !6489
  br i1 %112, label %assert_end44, label %assert_fail43, !dbg !6489, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %113(ptr nonnull @.str.1743), !dbg !6489
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.shape, i64 2, !dbg !6489
  %115 = load i64, ptr %114, align 8, !dbg !6489, !tbaa !6560
  %116 = and i64 %115, 4294967295, !dbg !6489
  %117 = icmp eq i64 %116, 1, !dbg !6489
  br i1 %117, label %assert_end46, label %assert_fail45, !dbg !6489, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %118(ptr nonnull @.str.1744), !dbg !6489
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.shape, i64 3, !dbg !6489
  %120 = load i64, ptr %119, align 8, !dbg !6489, !tbaa !6563
  %121 = and i64 %120, 4294967295, !dbg !6489
  %122 = icmp eq i64 %121, 1, !dbg !6489
  br i1 %122, label %assert_end48, label %assert_fail47, !dbg !6489, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %123(ptr nonnull @.str.1745), !dbg !6489
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.shape, i64 4, !dbg !6489
  %125 = load i64, ptr %124, align 8, !dbg !6489, !tbaa !6565
  %126 = and i64 %125, 4294967295, !dbg !6489
  %127 = icmp eq i64 %126, 4, !dbg !6489
  br i1 %127, label %assert_end50, label %assert_fail49, !dbg !6489, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %128(ptr nonnull @.str.1746), !dbg !6489
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %129 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.shape, i64 5, !dbg !6489
  %130 = load i64, ptr %129, align 8, !dbg !6489, !tbaa !6569
  %131 = and i64 %130, 4294967295, !dbg !6489
  %132 = icmp eq i64 %131, 4, !dbg !6489
  br i1 %132, label %assert_end52, label %assert_fail51, !dbg !6489, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %133 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %133(ptr nonnull @.str.1747), !dbg !6489
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.strides, null, !dbg !6489
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !6489, !prof !52

if_then53:                                        ; preds = %assert_end52
  %134 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.strides, align 8, !dbg !6489, !tbaa !6571
  %135 = and i64 %134, 4294967295, !dbg !6489
  %136 = icmp eq i64 %135, 2048, !dbg !6489
  %137 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.strides, i64 1, !dbg !6489
  %138 = load i64, ptr %137, align 8, !dbg !6489, !tbaa !6581
  %139 = and i64 %138, 4294967295, !dbg !6489
  %140 = icmp eq i64 %139, 16, !dbg !6489
  %141 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.strides, i64 4, !dbg !6489
  %142 = load i64, ptr %141, align 8, !dbg !6489, !tbaa !6583
  %143 = and i64 %142, 4294967295, !dbg !6489
  %144 = icmp eq i64 %143, 4, !dbg !6489
  %145 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p1.strides, i64 5, !dbg !6489
  %146 = load i64, ptr %145, align 8, !dbg !6489, !tbaa !6587
  %147 = and i64 %146, 4294967295, !dbg !6489
  %148 = icmp eq i64 %147, 1, !dbg !6489
  %149 = and i1 %144, %148, !dbg !6489
  %150 = and i1 %140, %149, !dbg !6489
  %151 = and i1 %136, %150, !dbg !6489
  br i1 %151, label %if_end54, label %assert_fail55, !dbg !6489, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %152 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6489
  %153 = load i64, ptr %152, align 8, !dbg !6489
  %154 = icmp eq i64 %153, 0, !dbg !6489
  br i1 %154, label %assert_end58, label %assert_fail57, !dbg !6489, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %155 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %155(ptr nonnull @.str.1748), !dbg !6489
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %156(ptr nonnull @.str.1749), !dbg !6489
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %157 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6489
  %158 = load i32, ptr %157, align 4, !dbg !6489
  %159 = icmp eq i32 %158, 1, !dbg !6489
  br i1 %159, label %assert_end60, label %assert_fail59, !dbg !6489, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %160(ptr nonnull @.str.1750), !dbg !6489
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %161 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6489
  %162 = load i32, ptr %161, align 4, !dbg !6489
  %163 = icmp eq i32 %dev_id, %162, !dbg !6489
  br i1 %163, label %assert_end62, label %assert_fail61, !dbg !6489, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %164 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %164(ptr nonnull @.str.1751), !dbg !6489
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %165 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !6489
  %166 = load i32, ptr %165, align 4, !dbg !6489
  %167 = icmp eq i32 %166, 5, !dbg !6489
  br i1 %167, label %assert_end66, label %assert_fail63, !dbg !6489, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %168 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %168(ptr nonnull @.str.1752), !dbg !6489
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %169 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !6489
  %170 = load i16, ptr %169, align 2, !dbg !6489
  %171 = icmp eq i16 %170, 1, !dbg !6489
  %172 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !6489
  %173 = load i8, ptr %172, align 1, !dbg !6489
  %174 = icmp eq i8 %173, 32, !dbg !6489
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !6489
  %176 = load i8, ptr %175, align 1, !dbg !6489
  %177 = icmp eq i8 %176, 2, !dbg !6489
  %178 = and i1 %174, %177, !dbg !6489
  %179 = and i1 %171, %178, !dbg !6489
  br i1 %179, label %assert_end68, label %assert_fail67, !dbg !6489, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %180 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %180(ptr nonnull @.str.1753), !dbg !6489
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %181 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.shape, align 8, !dbg !6489, !tbaa !6589
  %182 = and i64 %181, 4294967295, !dbg !6489
  %183 = icmp eq i64 %182, 1, !dbg !6489
  br i1 %183, label %assert_end70, label %assert_fail69, !dbg !6489, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %184 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %184(ptr nonnull @.str.1754), !dbg !6489
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %185 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.shape, i64 1, !dbg !6489
  %186 = load i64, ptr %185, align 8, !dbg !6489, !tbaa !6599
  %187 = and i64 %186, 4294967295, !dbg !6489
  %188 = icmp eq i64 %187, 64, !dbg !6489
  br i1 %188, label %assert_end72, label %assert_fail71, !dbg !6489, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %189(ptr nonnull @.str.1755), !dbg !6489
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %190 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.shape, i64 2, !dbg !6489
  %191 = load i64, ptr %190, align 8, !dbg !6489, !tbaa !6601
  %192 = and i64 %191, 4294967295, !dbg !6489
  %193 = icmp eq i64 %192, 1, !dbg !6489
  br i1 %193, label %assert_end74, label %assert_fail73, !dbg !6489, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %194(ptr nonnull @.str.1756), !dbg !6489
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.shape, i64 3, !dbg !6489
  %196 = load i64, ptr %195, align 8, !dbg !6489, !tbaa !6604
  %197 = and i64 %196, 4294967295, !dbg !6489
  %198 = icmp eq i64 %197, 1, !dbg !6489
  br i1 %198, label %assert_end76, label %assert_fail75, !dbg !6489, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %199(ptr nonnull @.str.1757), !dbg !6489
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.shape, i64 4, !dbg !6489
  %201 = load i64, ptr %200, align 8, !dbg !6489, !tbaa !6606
  %202 = and i64 %201, 4294967295, !dbg !6489
  %203 = icmp eq i64 %202, 4, !dbg !6489
  br i1 %203, label %assert_end78, label %assert_fail77, !dbg !6489, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %204(ptr nonnull @.str.1758), !dbg !6489
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.strides, null, !dbg !6489
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !6489, !prof !52

if_then79:                                        ; preds = %assert_end78
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.strides, i64 1, !dbg !6489
  %206 = load i64, ptr %205, align 8, !dbg !6489, !tbaa !6610
  %207 = and i64 %206, 4294967295, !dbg !6489
  %208 = icmp eq i64 %207, 4, !dbg !6489
  %209 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.p2.strides, i64 4, !dbg !6489
  %210 = load i64, ptr %209, align 8, !dbg !6489, !tbaa !6620
  %211 = and i64 %210, 4294967295, !dbg !6489
  %212 = icmp eq i64 %211, 1, !dbg !6489
  %213 = and i1 %208, %212, !dbg !6489
  br i1 %213, label %if_end80, label %assert_fail81, !dbg !6489, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %214 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !6489
  %215 = load i64, ptr %214, align 8, !dbg !6489
  %216 = icmp eq i64 %215, 0, !dbg !6489
  br i1 %216, label %assert_end84, label %assert_fail83, !dbg !6489, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %217 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %217(ptr nonnull @.str.1759), !dbg !6489
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %218 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %218(ptr nonnull @.str.1760), !dbg !6489
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %219 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !6489
  %220 = load i32, ptr %219, align 4, !dbg !6489
  %221 = icmp eq i32 %220, 1, !dbg !6489
  br i1 %221, label %assert_end86, label %assert_fail85, !dbg !6489, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %222 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %222(ptr nonnull @.str.1761), !dbg !6489
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %223 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !6489
  %224 = load i32, ptr %223, align 4, !dbg !6489
  %225 = icmp eq i32 %dev_id, %224, !dbg !6489
  br i1 %225, label %assert_end88, label %assert_fail87, !dbg !6489, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %226 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %226(ptr nonnull @.str.1762), !dbg !6489
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %227 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !6489
  %228 = load i32, ptr %227, align 4, !dbg !6489
  %229 = icmp eq i32 %228, 5, !dbg !6489
  br i1 %229, label %assert_end92, label %assert_fail89, !dbg !6489, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %230 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %230(ptr nonnull @.str.1763), !dbg !6489
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %231 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !6489
  %232 = load i16, ptr %231, align 2, !dbg !6489
  %233 = icmp eq i16 %232, 1, !dbg !6489
  %234 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !6489
  %235 = load i8, ptr %234, align 1, !dbg !6489
  %236 = icmp eq i8 %235, 32, !dbg !6489
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !6489
  %238 = load i8, ptr %237, align 1, !dbg !6489
  %239 = icmp eq i8 %238, 2, !dbg !6489
  %240 = and i1 %236, %239, !dbg !6489
  %241 = and i1 %233, %240, !dbg !6489
  br i1 %241, label %assert_end94, label %assert_fail93, !dbg !6489, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %242 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %242(ptr nonnull @.str.1764), !dbg !6489
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %243 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.shape, align 8, !dbg !6489, !tbaa !6624
  %244 = and i64 %243, 4294967295, !dbg !6489
  %245 = icmp eq i64 %244, 1, !dbg !6489
  br i1 %245, label %assert_end96, label %assert_fail95, !dbg !6489, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %246 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %246(ptr nonnull @.str.1765), !dbg !6489
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %247 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.shape, i64 1, !dbg !6489
  %248 = load i64, ptr %247, align 8, !dbg !6489, !tbaa !6634
  %249 = and i64 %248, 4294967295, !dbg !6489
  %250 = icmp eq i64 %249, 64, !dbg !6489
  br i1 %250, label %assert_end98, label %assert_fail97, !dbg !6489, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %251 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %251(ptr nonnull @.str.1766), !dbg !6489
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %252 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.shape, i64 2, !dbg !6489
  %253 = load i64, ptr %252, align 8, !dbg !6489, !tbaa !6636
  %254 = and i64 %253, 4294967295, !dbg !6489
  %255 = icmp eq i64 %254, 28, !dbg !6489
  br i1 %255, label %assert_end100, label %assert_fail99, !dbg !6489, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %256(ptr nonnull @.str.1767), !dbg !6489
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.shape, i64 3, !dbg !6489
  %258 = load i64, ptr %257, align 8, !dbg !6489, !tbaa !6639
  %259 = and i64 %258, 4294967295, !dbg !6489
  %260 = icmp eq i64 %259, 28, !dbg !6489
  br i1 %260, label %assert_end102, label %assert_fail101, !dbg !6489, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %261(ptr nonnull @.str.1768), !dbg !6489
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.shape, i64 4, !dbg !6489
  %263 = load i64, ptr %262, align 8, !dbg !6489, !tbaa !6641
  %264 = and i64 %263, 4294967295, !dbg !6489
  %265 = icmp eq i64 %264, 4, !dbg !6489
  br i1 %265, label %assert_end104, label %assert_fail103, !dbg !6489, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %266(ptr nonnull @.str.1769), !dbg !6489
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.strides, null, !dbg !6489
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !6489, !prof !52

if_then105:                                       ; preds = %assert_end104
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.strides, i64 1, !dbg !6489
  %268 = load i64, ptr %267, align 8, !dbg !6489, !tbaa !6645
  %269 = and i64 %268, 4294967295, !dbg !6489
  %270 = icmp eq i64 %269, 3136, !dbg !6489
  %271 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.strides, i64 2, !dbg !6489
  %272 = load i64, ptr %271, align 8, !dbg !6489, !tbaa !6655
  %273 = and i64 %272, 4294967295, !dbg !6489
  %274 = icmp eq i64 %273, 112, !dbg !6489
  %275 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.strides, i64 3, !dbg !6489
  %276 = load i64, ptr %275, align 8, !dbg !6489, !tbaa !6658
  %277 = and i64 %276, 4294967295, !dbg !6489
  %278 = icmp eq i64 %277, 4, !dbg !6489
  %279 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8.T_relu.strides, i64 4, !dbg !6489
  %280 = load i64, ptr %279, align 8, !dbg !6489, !tbaa !6660
  %281 = and i64 %280, 4294967295, !dbg !6489
  %282 = icmp eq i64 %281, 1, !dbg !6489
  %283 = and i1 %278, %282, !dbg !6489
  %284 = and i1 %274, %283, !dbg !6489
  %285 = and i1 %270, %284, !dbg !6489
  br i1 %285, label %if_end106, label %assert_fail107, !dbg !6489, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %286 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !6489
  %287 = load i64, ptr %286, align 8, !dbg !6489
  %288 = icmp eq i64 %287, 0, !dbg !6489
  br i1 %288, label %assert_end110, label %assert_fail109, !dbg !6489, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %289 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %289(ptr nonnull @.str.1770), !dbg !6489
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %290 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %290(ptr nonnull @.str.1771), !dbg !6489
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %291 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !6489
  %292 = load i32, ptr %291, align 4, !dbg !6489
  %293 = icmp eq i32 %292, 1, !dbg !6489
  br i1 %293, label %assert_end112, label %assert_fail111, !dbg !6489, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %294 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %294(ptr nonnull @.str.1772), !dbg !6489
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %295 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !6489
  %296 = load i32, ptr %295, align 4, !dbg !6489
  %297 = icmp eq i32 %dev_id, %296, !dbg !6489
  br i1 %297, label %assert_end114, label %assert_fail113, !dbg !6489, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %298 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6489, !tbaa !19
  tail call void %298(ptr nonnull @.str.1773), !dbg !6489
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %299 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_compute_(ptr %p0115, ptr %p1116, ptr %T_relu117, ptr %p2118), !dbg !6489
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6664 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6666, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6667, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6668, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6669, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6670, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6671, metadata !DIExpression()), !dbg !6672
  %0 = icmp eq i32 %num_args, 4, !dbg !6672
  br i1 %0, label %assert_end, label %assert_fail, !dbg !6672, !prof !18

common.ret:                                       ; preds = %assert_end114, %assert_fail113, %assert_fail111, %assert_fail109, %assert_fail107, %assert_fail103, %assert_fail101, %assert_fail99, %assert_fail97, %assert_fail95, %assert_fail93, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail81, %assert_fail77, %assert_fail75, %assert_fail73, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail63, %assert_fail61, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail35, %assert_fail33, %assert_fail31, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail31 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail61 ], [ -1, %assert_fail63 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail73 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail81 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ -1, %assert_fail93 ], [ -1, %assert_fail95 ], [ -1, %assert_fail97 ], [ -1, %assert_fail99 ], [ -1, %assert_fail101 ], [ -1, %assert_fail103 ], [ -1, %assert_fail107 ], [ -1, %assert_fail109 ], [ -1, %assert_fail111 ], [ -1, %assert_fail113 ], [ %309, %assert_end114 ]
  ret i32 %common.ret.op, !dbg !6672

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %1(ptr nonnull @.str.1775), !dbg !6672
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6672, !tbaa !6673
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6672
  %p1.code = load i32, ptr %2, align 4, !dbg !6672, !tbaa !6684
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6672
  %p2.code = load i32, ptr %3, align 4, !dbg !6672, !tbaa !6686
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !6672
  %T_relu.code = load i32, ptr %4, align 4, !dbg !6672, !tbaa !6689
  %p0 = load ptr, ptr %args, align 8, !dbg !6672
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6672
  %p1 = load ptr, ptr %5, align 8, !dbg !6672
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6672
  %p2 = load ptr, ptr %6, align 8, !dbg !6672
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !6672
  %T_relu = load ptr, ptr %7, align 8, !dbg !6672
  %p0115 = load ptr, ptr %p0, align 8, !dbg !6672
  call void @llvm.assume(i1 true) [ "align"(ptr %p0115, i64 64) ], !dbg !6672
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6672
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.shape = load ptr, ptr %8, align 8, !dbg !6672
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6672
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.strides = load ptr, ptr %9, align 8, !dbg !6672
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6672
  %dev_id = load i32, ptr %10, align 4, !dbg !6672
  %p1116 = load ptr, ptr %p1, align 8, !dbg !6672
  call void @llvm.assume(i1 true) [ "align"(ptr %p1116, i64 64) ], !dbg !6672
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6672
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.shape = load ptr, ptr %11, align 8, !dbg !6672
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6672
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.strides = load ptr, ptr %12, align 8, !dbg !6672
  %p2118 = load ptr, ptr %p2, align 8, !dbg !6672
  call void @llvm.assume(i1 true) [ "align"(ptr %p2118, i64 64) ], !dbg !6672
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !6672
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.shape = load ptr, ptr %13, align 8, !dbg !6672
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !6672
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.strides = load ptr, ptr %14, align 8, !dbg !6672
  %T_relu117 = load ptr, ptr %T_relu, align 8, !dbg !6672
  call void @llvm.assume(i1 true) [ "align"(ptr %T_relu117, i64 64) ], !dbg !6672
  %15 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 4, !dbg !6672
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.shape = load ptr, ptr %15, align 8, !dbg !6672
  %16 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 5, !dbg !6672
  %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.strides = load ptr, ptr %16, align 8, !dbg !6672
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !6672

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %17(ptr nonnull @.str.1776), !dbg !6672
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !6672

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %18(ptr nonnull @.str.1777), !dbg !6672
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !6672

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %19(ptr nonnull @.str.1778), !dbg !6672
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_relu.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !6672

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %20(ptr nonnull @.str.1779), !dbg !6672
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6672
  %22 = load i32, ptr %21, align 4, !dbg !6672
  %23 = icmp eq i32 %22, 5, !dbg !6672
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !6672, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %24(ptr nonnull @.str.1780), !dbg !6672
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6672
  %26 = load i16, ptr %25, align 2, !dbg !6672
  %27 = icmp eq i16 %26, 1, !dbg !6672
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6672
  %29 = load i8, ptr %28, align 1, !dbg !6672
  %30 = icmp eq i8 %29, 32, !dbg !6672
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6672
  %32 = load i8, ptr %31, align 1, !dbg !6672
  %33 = icmp eq i8 %32, 2, !dbg !6672
  %34 = and i1 %30, %33, !dbg !6672
  %35 = and i1 %27, %34, !dbg !6672
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !6672, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %36(ptr nonnull @.str.1781), !dbg !6672
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.shape, align 8, !dbg !6672, !tbaa !6691
  %38 = and i64 %37, 4294967295, !dbg !6672
  %39 = icmp eq i64 %38, 1, !dbg !6672
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !6672, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %40(ptr nonnull @.str.1782), !dbg !6672
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.shape, i64 1, !dbg !6672
  %42 = load i64, ptr %41, align 8, !dbg !6672, !tbaa !6701
  %43 = and i64 %42, 4294967295, !dbg !6672
  %44 = icmp eq i64 %43, 64, !dbg !6672
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !6672, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %45(ptr nonnull @.str.1783), !dbg !6672
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.shape, i64 2, !dbg !6672
  %47 = load i64, ptr %46, align 8, !dbg !6672, !tbaa !6703
  %48 = and i64 %47, 4294967295, !dbg !6672
  %49 = icmp eq i64 %48, 28, !dbg !6672
  br i1 %49, label %assert_end24, label %assert_fail23, !dbg !6672, !prof !18

assert_fail23:                                    ; preds = %assert_end22
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %50(ptr nonnull @.str.1784), !dbg !6672
  br label %common.ret

assert_end24:                                     ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.shape, i64 3, !dbg !6672
  %52 = load i64, ptr %51, align 8, !dbg !6672, !tbaa !6706
  %53 = and i64 %52, 4294967295, !dbg !6672
  %54 = icmp eq i64 %53, 28, !dbg !6672
  br i1 %54, label %assert_end26, label %assert_fail25, !dbg !6672, !prof !18

assert_fail25:                                    ; preds = %assert_end24
  %55 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %55(ptr nonnull @.str.1785), !dbg !6672
  br label %common.ret

assert_end26:                                     ; preds = %assert_end24
  %56 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.shape, i64 4, !dbg !6672
  %57 = load i64, ptr %56, align 8, !dbg !6672, !tbaa !6708
  %58 = and i64 %57, 4294967295, !dbg !6672
  %59 = icmp eq i64 %58, 4, !dbg !6672
  br i1 %59, label %assert_end28, label %assert_fail27, !dbg !6672, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %60 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %60(ptr nonnull @.str.1786), !dbg !6672
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.strides, null, !dbg !6672
  br i1 %.not, label %if_end, label %if_then, !dbg !6672, !prof !52

if_then:                                          ; preds = %assert_end28
  %61 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.strides, i64 1, !dbg !6672
  %62 = load i64, ptr %61, align 8, !dbg !6672, !tbaa !6712
  %63 = and i64 %62, 4294967295, !dbg !6672
  %64 = icmp eq i64 %63, 3136, !dbg !6672
  %65 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.strides, i64 2, !dbg !6672
  %66 = load i64, ptr %65, align 8, !dbg !6672, !tbaa !6722
  %67 = and i64 %66, 4294967295, !dbg !6672
  %68 = icmp eq i64 %67, 112, !dbg !6672
  %69 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.strides, i64 3, !dbg !6672
  %70 = load i64, ptr %69, align 8, !dbg !6672, !tbaa !6725
  %71 = and i64 %70, 4294967295, !dbg !6672
  %72 = icmp eq i64 %71, 4, !dbg !6672
  %73 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p0.strides, i64 4, !dbg !6672
  %74 = load i64, ptr %73, align 8, !dbg !6672, !tbaa !6727
  %75 = and i64 %74, 4294967295, !dbg !6672
  %76 = icmp eq i64 %75, 1, !dbg !6672
  %77 = and i1 %72, %76, !dbg !6672
  %78 = and i1 %68, %77, !dbg !6672
  %79 = and i1 %64, %78, !dbg !6672
  br i1 %79, label %if_end, label %assert_fail29, !dbg !6672, !prof !18

if_end:                                           ; preds = %if_then, %assert_end28
  %80 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6672
  %81 = load i64, ptr %80, align 8, !dbg !6672
  %82 = icmp eq i64 %81, 0, !dbg !6672
  br i1 %82, label %assert_end32, label %assert_fail31, !dbg !6672, !prof !18

assert_fail29:                                    ; preds = %if_then
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %83(ptr nonnull @.str.1787), !dbg !6672
  br label %common.ret

assert_fail31:                                    ; preds = %if_end
  %84 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %84(ptr nonnull @.str.1788), !dbg !6672
  br label %common.ret

assert_end32:                                     ; preds = %if_end
  %85 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6672
  %86 = load i32, ptr %85, align 4, !dbg !6672
  %87 = icmp eq i32 %86, 1, !dbg !6672
  br i1 %87, label %assert_end34, label %assert_fail33, !dbg !6672, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %88(ptr nonnull @.str.1789), !dbg !6672
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %89 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6672
  %90 = load i32, ptr %89, align 4, !dbg !6672
  %91 = icmp eq i32 %90, 6, !dbg !6672
  br i1 %91, label %assert_end38, label %assert_fail35, !dbg !6672, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %92 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %92(ptr nonnull @.str.1790), !dbg !6672
  br label %common.ret

assert_end38:                                     ; preds = %assert_end34
  %93 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6672
  %94 = load i16, ptr %93, align 2, !dbg !6672
  %95 = icmp eq i16 %94, 1, !dbg !6672
  %96 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6672
  %97 = load i8, ptr %96, align 1, !dbg !6672
  %98 = icmp eq i8 %97, 32, !dbg !6672
  %99 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6672
  %100 = load i8, ptr %99, align 1, !dbg !6672
  %101 = icmp eq i8 %100, 2, !dbg !6672
  %102 = and i1 %98, %101, !dbg !6672
  %103 = and i1 %95, %102, !dbg !6672
  br i1 %103, label %assert_end40, label %assert_fail39, !dbg !6672, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %104 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %104(ptr nonnull @.str.1791), !dbg !6672
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %105 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.shape, align 8, !dbg !6672, !tbaa !6731
  %106 = and i64 %105, 4294967295, !dbg !6672
  %107 = icmp eq i64 %106, 64, !dbg !6672
  br i1 %107, label %assert_end42, label %assert_fail41, !dbg !6672, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %108(ptr nonnull @.str.1792), !dbg !6672
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.shape, i64 1, !dbg !6672
  %110 = load i64, ptr %109, align 8, !dbg !6672, !tbaa !6741
  %111 = and i64 %110, 4294967295, !dbg !6672
  %112 = icmp eq i64 %111, 64, !dbg !6672
  br i1 %112, label %assert_end44, label %assert_fail43, !dbg !6672, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %113(ptr nonnull @.str.1793), !dbg !6672
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.shape, i64 2, !dbg !6672
  %115 = load i64, ptr %114, align 8, !dbg !6672, !tbaa !6743
  %116 = and i64 %115, 4294967295, !dbg !6672
  %117 = icmp eq i64 %116, 3, !dbg !6672
  br i1 %117, label %assert_end46, label %assert_fail45, !dbg !6672, !prof !18

assert_fail45:                                    ; preds = %assert_end44
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %118(ptr nonnull @.str.1794), !dbg !6672
  br label %common.ret

assert_end46:                                     ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.shape, i64 3, !dbg !6672
  %120 = load i64, ptr %119, align 8, !dbg !6672, !tbaa !6746
  %121 = and i64 %120, 4294967295, !dbg !6672
  %122 = icmp eq i64 %121, 3, !dbg !6672
  br i1 %122, label %assert_end48, label %assert_fail47, !dbg !6672, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %123 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %123(ptr nonnull @.str.1795), !dbg !6672
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %124 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.shape, i64 4, !dbg !6672
  %125 = load i64, ptr %124, align 8, !dbg !6672, !tbaa !6748
  %126 = and i64 %125, 4294967295, !dbg !6672
  %127 = icmp eq i64 %126, 4, !dbg !6672
  br i1 %127, label %assert_end50, label %assert_fail49, !dbg !6672, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %128 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %128(ptr nonnull @.str.1796), !dbg !6672
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %129 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.shape, i64 5, !dbg !6672
  %130 = load i64, ptr %129, align 8, !dbg !6672, !tbaa !6752
  %131 = and i64 %130, 4294967295, !dbg !6672
  %132 = icmp eq i64 %131, 4, !dbg !6672
  br i1 %132, label %assert_end52, label %assert_fail51, !dbg !6672, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %133 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %133(ptr nonnull @.str.1797), !dbg !6672
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %.not119 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.strides, null, !dbg !6672
  br i1 %.not119, label %if_end54, label %if_then53, !dbg !6672, !prof !52

if_then53:                                        ; preds = %assert_end52
  %134 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.strides, align 8, !dbg !6672, !tbaa !6754
  %135 = and i64 %134, 4294967295, !dbg !6672
  %136 = icmp eq i64 %135, 9216, !dbg !6672
  %137 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.strides, i64 1, !dbg !6672
  %138 = load i64, ptr %137, align 8, !dbg !6672, !tbaa !6764
  %139 = and i64 %138, 4294967295, !dbg !6672
  %140 = icmp eq i64 %139, 144, !dbg !6672
  %141 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.strides, i64 2, !dbg !6672
  %142 = load i64, ptr %141, align 8, !dbg !6672, !tbaa !6766
  %143 = and i64 %142, 4294967295, !dbg !6672
  %144 = icmp eq i64 %143, 48, !dbg !6672
  %145 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.strides, i64 3, !dbg !6672
  %146 = load i64, ptr %145, align 8, !dbg !6672, !tbaa !6769
  %147 = and i64 %146, 4294967295, !dbg !6672
  %148 = icmp eq i64 %147, 16, !dbg !6672
  %149 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.strides, i64 4, !dbg !6672
  %150 = load i64, ptr %149, align 8, !dbg !6672, !tbaa !6771
  %151 = and i64 %150, 4294967295, !dbg !6672
  %152 = icmp eq i64 %151, 4, !dbg !6672
  %153 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p1.strides, i64 5, !dbg !6672
  %154 = load i64, ptr %153, align 8, !dbg !6672, !tbaa !6775
  %155 = and i64 %154, 4294967295, !dbg !6672
  %156 = icmp eq i64 %155, 1, !dbg !6672
  %157 = and i1 %152, %156, !dbg !6672
  %158 = and i1 %148, %157, !dbg !6672
  %159 = and i1 %144, %158, !dbg !6672
  %160 = and i1 %140, %159, !dbg !6672
  %161 = and i1 %136, %160, !dbg !6672
  br i1 %161, label %if_end54, label %assert_fail55, !dbg !6672, !prof !18

if_end54:                                         ; preds = %if_then53, %assert_end52
  %162 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6672
  %163 = load i64, ptr %162, align 8, !dbg !6672
  %164 = icmp eq i64 %163, 0, !dbg !6672
  br i1 %164, label %assert_end58, label %assert_fail57, !dbg !6672, !prof !18

assert_fail55:                                    ; preds = %if_then53
  %165 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %165(ptr nonnull @.str.1798), !dbg !6672
  br label %common.ret

assert_fail57:                                    ; preds = %if_end54
  %166 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %166(ptr nonnull @.str.1799), !dbg !6672
  br label %common.ret

assert_end58:                                     ; preds = %if_end54
  %167 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6672
  %168 = load i32, ptr %167, align 4, !dbg !6672
  %169 = icmp eq i32 %168, 1, !dbg !6672
  br i1 %169, label %assert_end60, label %assert_fail59, !dbg !6672, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %170 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %170(ptr nonnull @.str.1800), !dbg !6672
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %171 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6672
  %172 = load i32, ptr %171, align 4, !dbg !6672
  %173 = icmp eq i32 %dev_id, %172, !dbg !6672
  br i1 %173, label %assert_end62, label %assert_fail61, !dbg !6672, !prof !18

assert_fail61:                                    ; preds = %assert_end60
  %174 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %174(ptr nonnull @.str.1801), !dbg !6672
  br label %common.ret

assert_end62:                                     ; preds = %assert_end60
  %175 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !6672
  %176 = load i32, ptr %175, align 4, !dbg !6672
  %177 = icmp eq i32 %176, 5, !dbg !6672
  br i1 %177, label %assert_end66, label %assert_fail63, !dbg !6672, !prof !18

assert_fail63:                                    ; preds = %assert_end62
  %178 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %178(ptr nonnull @.str.1802), !dbg !6672
  br label %common.ret

assert_end66:                                     ; preds = %assert_end62
  %179 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !6672
  %180 = load i16, ptr %179, align 2, !dbg !6672
  %181 = icmp eq i16 %180, 1, !dbg !6672
  %182 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !6672
  %183 = load i8, ptr %182, align 1, !dbg !6672
  %184 = icmp eq i8 %183, 32, !dbg !6672
  %185 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !6672
  %186 = load i8, ptr %185, align 1, !dbg !6672
  %187 = icmp eq i8 %186, 2, !dbg !6672
  %188 = and i1 %184, %187, !dbg !6672
  %189 = and i1 %181, %188, !dbg !6672
  br i1 %189, label %assert_end68, label %assert_fail67, !dbg !6672, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %190 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %190(ptr nonnull @.str.1803), !dbg !6672
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %191 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.shape, align 8, !dbg !6672, !tbaa !6777
  %192 = and i64 %191, 4294967295, !dbg !6672
  %193 = icmp eq i64 %192, 1, !dbg !6672
  br i1 %193, label %assert_end70, label %assert_fail69, !dbg !6672, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %194(ptr nonnull @.str.1804), !dbg !6672
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %195 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.shape, i64 1, !dbg !6672
  %196 = load i64, ptr %195, align 8, !dbg !6672, !tbaa !6787
  %197 = and i64 %196, 4294967295, !dbg !6672
  %198 = icmp eq i64 %197, 64, !dbg !6672
  br i1 %198, label %assert_end72, label %assert_fail71, !dbg !6672, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %199 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %199(ptr nonnull @.str.1805), !dbg !6672
  br label %common.ret

assert_end72:                                     ; preds = %assert_end70
  %200 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.shape, i64 2, !dbg !6672
  %201 = load i64, ptr %200, align 8, !dbg !6672, !tbaa !6789
  %202 = and i64 %201, 4294967295, !dbg !6672
  %203 = icmp eq i64 %202, 1, !dbg !6672
  br i1 %203, label %assert_end74, label %assert_fail73, !dbg !6672, !prof !18

assert_fail73:                                    ; preds = %assert_end72
  %204 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %204(ptr nonnull @.str.1806), !dbg !6672
  br label %common.ret

assert_end74:                                     ; preds = %assert_end72
  %205 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.shape, i64 3, !dbg !6672
  %206 = load i64, ptr %205, align 8, !dbg !6672, !tbaa !6792
  %207 = and i64 %206, 4294967295, !dbg !6672
  %208 = icmp eq i64 %207, 1, !dbg !6672
  br i1 %208, label %assert_end76, label %assert_fail75, !dbg !6672, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %209 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %209(ptr nonnull @.str.1807), !dbg !6672
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %210 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.shape, i64 4, !dbg !6672
  %211 = load i64, ptr %210, align 8, !dbg !6672, !tbaa !6794
  %212 = and i64 %211, 4294967295, !dbg !6672
  %213 = icmp eq i64 %212, 4, !dbg !6672
  br i1 %213, label %assert_end78, label %assert_fail77, !dbg !6672, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %214 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %214(ptr nonnull @.str.1808), !dbg !6672
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %.not120 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.strides, null, !dbg !6672
  br i1 %.not120, label %if_end80, label %if_then79, !dbg !6672, !prof !52

if_then79:                                        ; preds = %assert_end78
  %215 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.strides, i64 1, !dbg !6672
  %216 = load i64, ptr %215, align 8, !dbg !6672, !tbaa !6798
  %217 = and i64 %216, 4294967295, !dbg !6672
  %218 = icmp eq i64 %217, 4, !dbg !6672
  %219 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.p2.strides, i64 4, !dbg !6672
  %220 = load i64, ptr %219, align 8, !dbg !6672, !tbaa !6808
  %221 = and i64 %220, 4294967295, !dbg !6672
  %222 = icmp eq i64 %221, 1, !dbg !6672
  %223 = and i1 %218, %222, !dbg !6672
  br i1 %223, label %if_end80, label %assert_fail81, !dbg !6672, !prof !18

if_end80:                                         ; preds = %if_then79, %assert_end78
  %224 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !6672
  %225 = load i64, ptr %224, align 8, !dbg !6672
  %226 = icmp eq i64 %225, 0, !dbg !6672
  br i1 %226, label %assert_end84, label %assert_fail83, !dbg !6672, !prof !18

assert_fail81:                                    ; preds = %if_then79
  %227 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %227(ptr nonnull @.str.1809), !dbg !6672
  br label %common.ret

assert_fail83:                                    ; preds = %if_end80
  %228 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %228(ptr nonnull @.str.1810), !dbg !6672
  br label %common.ret

assert_end84:                                     ; preds = %if_end80
  %229 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !6672
  %230 = load i32, ptr %229, align 4, !dbg !6672
  %231 = icmp eq i32 %230, 1, !dbg !6672
  br i1 %231, label %assert_end86, label %assert_fail85, !dbg !6672, !prof !18

assert_fail85:                                    ; preds = %assert_end84
  %232 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %232(ptr nonnull @.str.1811), !dbg !6672
  br label %common.ret

assert_end86:                                     ; preds = %assert_end84
  %233 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !6672
  %234 = load i32, ptr %233, align 4, !dbg !6672
  %235 = icmp eq i32 %dev_id, %234, !dbg !6672
  br i1 %235, label %assert_end88, label %assert_fail87, !dbg !6672, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %236 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %236(ptr nonnull @.str.1812), !dbg !6672
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %237 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 2, !dbg !6672
  %238 = load i32, ptr %237, align 4, !dbg !6672
  %239 = icmp eq i32 %238, 5, !dbg !6672
  br i1 %239, label %assert_end92, label %assert_fail89, !dbg !6672, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %240 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %240(ptr nonnull @.str.1813), !dbg !6672
  br label %common.ret

assert_end92:                                     ; preds = %assert_end88
  %241 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 2, !dbg !6672
  %242 = load i16, ptr %241, align 2, !dbg !6672
  %243 = icmp eq i16 %242, 1, !dbg !6672
  %244 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 1, !dbg !6672
  %245 = load i8, ptr %244, align 1, !dbg !6672
  %246 = icmp eq i8 %245, 32, !dbg !6672
  %247 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 3, i32 0, !dbg !6672
  %248 = load i8, ptr %247, align 1, !dbg !6672
  %249 = icmp eq i8 %248, 2, !dbg !6672
  %250 = and i1 %246, %249, !dbg !6672
  %251 = and i1 %243, %250, !dbg !6672
  br i1 %251, label %assert_end94, label %assert_fail93, !dbg !6672, !prof !18

assert_fail93:                                    ; preds = %assert_end92
  %252 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %252(ptr nonnull @.str.1814), !dbg !6672
  br label %common.ret

assert_end94:                                     ; preds = %assert_end92
  %253 = load i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.shape, align 8, !dbg !6672, !tbaa !6812
  %254 = and i64 %253, 4294967295, !dbg !6672
  %255 = icmp eq i64 %254, 1, !dbg !6672
  br i1 %255, label %assert_end96, label %assert_fail95, !dbg !6672, !prof !18

assert_fail95:                                    ; preds = %assert_end94
  %256 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %256(ptr nonnull @.str.1815), !dbg !6672
  br label %common.ret

assert_end96:                                     ; preds = %assert_end94
  %257 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.shape, i64 1, !dbg !6672
  %258 = load i64, ptr %257, align 8, !dbg !6672, !tbaa !6822
  %259 = and i64 %258, 4294967295, !dbg !6672
  %260 = icmp eq i64 %259, 64, !dbg !6672
  br i1 %260, label %assert_end98, label %assert_fail97, !dbg !6672, !prof !18

assert_fail97:                                    ; preds = %assert_end96
  %261 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %261(ptr nonnull @.str.1816), !dbg !6672
  br label %common.ret

assert_end98:                                     ; preds = %assert_end96
  %262 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.shape, i64 2, !dbg !6672
  %263 = load i64, ptr %262, align 8, !dbg !6672, !tbaa !6824
  %264 = and i64 %263, 4294967295, !dbg !6672
  %265 = icmp eq i64 %264, 14, !dbg !6672
  br i1 %265, label %assert_end100, label %assert_fail99, !dbg !6672, !prof !18

assert_fail99:                                    ; preds = %assert_end98
  %266 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %266(ptr nonnull @.str.1817), !dbg !6672
  br label %common.ret

assert_end100:                                    ; preds = %assert_end98
  %267 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.shape, i64 3, !dbg !6672
  %268 = load i64, ptr %267, align 8, !dbg !6672, !tbaa !6827
  %269 = and i64 %268, 4294967295, !dbg !6672
  %270 = icmp eq i64 %269, 14, !dbg !6672
  br i1 %270, label %assert_end102, label %assert_fail101, !dbg !6672, !prof !18

assert_fail101:                                   ; preds = %assert_end100
  %271 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %271(ptr nonnull @.str.1818), !dbg !6672
  br label %common.ret

assert_end102:                                    ; preds = %assert_end100
  %272 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.shape, i64 4, !dbg !6672
  %273 = load i64, ptr %272, align 8, !dbg !6672, !tbaa !6829
  %274 = and i64 %273, 4294967295, !dbg !6672
  %275 = icmp eq i64 %274, 4, !dbg !6672
  br i1 %275, label %assert_end104, label %assert_fail103, !dbg !6672, !prof !18

assert_fail103:                                   ; preds = %assert_end102
  %276 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %276(ptr nonnull @.str.1819), !dbg !6672
  br label %common.ret

assert_end104:                                    ; preds = %assert_end102
  %.not121 = icmp eq ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.strides, null, !dbg !6672
  br i1 %.not121, label %if_end106, label %if_then105, !dbg !6672, !prof !52

if_then105:                                       ; preds = %assert_end104
  %277 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.strides, i64 1, !dbg !6672
  %278 = load i64, ptr %277, align 8, !dbg !6672, !tbaa !6833
  %279 = and i64 %278, 4294967295, !dbg !6672
  %280 = icmp eq i64 %279, 784, !dbg !6672
  %281 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.strides, i64 2, !dbg !6672
  %282 = load i64, ptr %281, align 8, !dbg !6672, !tbaa !6843
  %283 = and i64 %282, 4294967295, !dbg !6672
  %284 = icmp eq i64 %283, 56, !dbg !6672
  %285 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.strides, i64 3, !dbg !6672
  %286 = load i64, ptr %285, align 8, !dbg !6672, !tbaa !6846
  %287 = and i64 %286, 4294967295, !dbg !6672
  %288 = icmp eq i64 %287, 4, !dbg !6672
  %289 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9.T_relu.strides, i64 4, !dbg !6672
  %290 = load i64, ptr %289, align 8, !dbg !6672, !tbaa !6848
  %291 = and i64 %290, 4294967295, !dbg !6672
  %292 = icmp eq i64 %291, 1, !dbg !6672
  %293 = and i1 %288, %292, !dbg !6672
  %294 = and i1 %284, %293, !dbg !6672
  %295 = and i1 %280, %294, !dbg !6672
  br i1 %295, label %if_end106, label %assert_fail107, !dbg !6672, !prof !18

if_end106:                                        ; preds = %if_then105, %assert_end104
  %296 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 6, !dbg !6672
  %297 = load i64, ptr %296, align 8, !dbg !6672
  %298 = icmp eq i64 %297, 0, !dbg !6672
  br i1 %298, label %assert_end110, label %assert_fail109, !dbg !6672, !prof !18

assert_fail107:                                   ; preds = %if_then105
  %299 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %299(ptr nonnull @.str.1820), !dbg !6672
  br label %common.ret

assert_fail109:                                   ; preds = %if_end106
  %300 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %300(ptr nonnull @.str.1821), !dbg !6672
  br label %common.ret

assert_end110:                                    ; preds = %if_end106
  %301 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 0, !dbg !6672
  %302 = load i32, ptr %301, align 4, !dbg !6672
  %303 = icmp eq i32 %302, 1, !dbg !6672
  br i1 %303, label %assert_end112, label %assert_fail111, !dbg !6672, !prof !18

assert_fail111:                                   ; preds = %assert_end110
  %304 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %304(ptr nonnull @.str.1822), !dbg !6672
  br label %common.ret

assert_end112:                                    ; preds = %assert_end110
  %305 = getelementptr inbounds %1, ptr %T_relu, i64 0, i32 1, i32 1, !dbg !6672
  %306 = load i32, ptr %305, align 4, !dbg !6672
  %307 = icmp eq i32 %dev_id, %306, !dbg !6672
  br i1 %307, label %assert_end114, label %assert_fail113, !dbg !6672, !prof !18

assert_fail113:                                   ; preds = %assert_end112
  %308 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6672, !tbaa !19
  tail call void %308(ptr nonnull @.str.1823), !dbg !6672
  br label %common.ret

assert_end114:                                    ; preds = %assert_end112
  %309 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_compute_(i32 %dev_id, ptr %p0115, ptr %p1116, ptr %T_relu117, ptr %p2118), !dbg !6672
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_contrib_dense_pack_add(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6852 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6854, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6855, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6856, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6857, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6858, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6859, metadata !DIExpression()), !dbg !6860
  %0 = icmp eq i32 %num_args, 4, !dbg !6860
  br i1 %0, label %assert_end, label %assert_fail, !dbg !6860, !prof !18

common.ret:                                       ; preds = %assert_end90, %assert_fail89, %assert_fail87, %assert_fail85, %assert_fail83, %assert_fail79, %assert_fail77, %assert_fail75, %assert_fail71, %assert_fail69, %assert_fail67, %assert_fail65, %assert_fail63, %assert_fail59, %assert_fail57, %assert_fail55, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail45, %assert_fail43, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail13, %assert_fail11, %assert_fail9, %assert_fail7, %assert_fail5, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail9 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail43 ], [ -1, %assert_fail45 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail55 ], [ -1, %assert_fail57 ], [ -1, %assert_fail59 ], [ -1, %assert_fail63 ], [ -1, %assert_fail65 ], [ -1, %assert_fail67 ], [ -1, %assert_fail69 ], [ -1, %assert_fail71 ], [ -1, %assert_fail75 ], [ -1, %assert_fail77 ], [ -1, %assert_fail79 ], [ -1, %assert_fail83 ], [ -1, %assert_fail85 ], [ -1, %assert_fail87 ], [ -1, %assert_fail89 ], [ %199, %assert_end90 ]
  ret i32 %common.ret.op, !dbg !6860

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %1(ptr nonnull @.str.1826), !dbg !6860
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6860, !tbaa !6861
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6860
  %p1.code = load i32, ptr %2, align 4, !dbg !6860, !tbaa !6872
  %3 = getelementptr inbounds i32, ptr %arg_type_ids, i64 2, !dbg !6860
  %p2.code = load i32, ptr %3, align 4, !dbg !6860, !tbaa !6874
  %4 = getelementptr inbounds i32, ptr %arg_type_ids, i64 3, !dbg !6860
  %T_add.code = load i32, ptr %4, align 4, !dbg !6860, !tbaa !6877
  %p0 = load ptr, ptr %args, align 8, !dbg !6860
  %5 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6860
  %p1 = load ptr, ptr %5, align 8, !dbg !6860
  %6 = getelementptr inbounds %0, ptr %args, i64 2, !dbg !6860
  %p2 = load ptr, ptr %6, align 8, !dbg !6860
  %7 = getelementptr inbounds %0, ptr %args, i64 3, !dbg !6860
  %T_add = load ptr, ptr %7, align 8, !dbg !6860
  %p091 = load ptr, ptr %p0, align 8, !dbg !6860
  call void @llvm.assume(i1 true) [ "align"(ptr %p091, i64 64) ], !dbg !6860
  %8 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6860
  %tvmgen_default_fused_nn_contrib_dense_pack_add.p0.shape = load ptr, ptr %8, align 8, !dbg !6860
  %9 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6860
  %tvmgen_default_fused_nn_contrib_dense_pack_add.p0.strides = load ptr, ptr %9, align 8, !dbg !6860
  %10 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6860
  %dev_id = load i32, ptr %10, align 4, !dbg !6860
  %p192 = load ptr, ptr %p1, align 8, !dbg !6860
  call void @llvm.assume(i1 true) [ "align"(ptr %p192, i64 64) ], !dbg !6860
  %11 = getelementptr inbounds %1, ptr %p1, i64 0, i32 4, !dbg !6860
  %tvmgen_default_fused_nn_contrib_dense_pack_add.p1.shape = load ptr, ptr %11, align 8, !dbg !6860
  %12 = getelementptr inbounds %1, ptr %p1, i64 0, i32 5, !dbg !6860
  %tvmgen_default_fused_nn_contrib_dense_pack_add.p1.strides = load ptr, ptr %12, align 8, !dbg !6860
  %p294 = load ptr, ptr %p2, align 8, !dbg !6860
  call void @llvm.assume(i1 true) [ "align"(ptr %p294, i64 64) ], !dbg !6860
  %13 = getelementptr inbounds %1, ptr %p2, i64 0, i32 4, !dbg !6860
  %tvmgen_default_fused_nn_contrib_dense_pack_add.p2.shape = load ptr, ptr %13, align 8, !dbg !6860
  %14 = getelementptr inbounds %1, ptr %p2, i64 0, i32 5, !dbg !6860
  %tvmgen_default_fused_nn_contrib_dense_pack_add.p2.strides = load ptr, ptr %14, align 8, !dbg !6860
  %T_add93 = load ptr, ptr %T_add, align 8, !dbg !6860
  call void @llvm.assume(i1 true) [ "align"(ptr %T_add93, i64 64) ], !dbg !6860
  %15 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 4, !dbg !6860
  %tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.shape = load ptr, ptr %15, align 8, !dbg !6860
  %16 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 5, !dbg !6860
  %tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.strides = load ptr, ptr %16, align 8, !dbg !6860
  switch i32 %p0.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !6860

assert_fail5:                                     ; preds = %assert_end
  %17 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %17(ptr nonnull @.str.1827), !dbg !6860
  br label %common.ret

assert_end6:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %p1.code, label %assert_fail7 [
    i32 13, label %assert_end8
    i32 7, label %assert_end8
    i32 4, label %assert_end8
    i32 3, label %assert_end8
  ], !dbg !6860

assert_fail7:                                     ; preds = %assert_end6
  %18 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %18(ptr nonnull @.str.1828), !dbg !6860
  br label %common.ret

assert_end8:                                      ; preds = %assert_end6, %assert_end6, %assert_end6, %assert_end6
  switch i32 %p2.code, label %assert_fail9 [
    i32 13, label %assert_end10
    i32 7, label %assert_end10
    i32 4, label %assert_end10
    i32 3, label %assert_end10
  ], !dbg !6860

assert_fail9:                                     ; preds = %assert_end8
  %19 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %19(ptr nonnull @.str.1829), !dbg !6860
  br label %common.ret

assert_end10:                                     ; preds = %assert_end8, %assert_end8, %assert_end8, %assert_end8
  switch i32 %T_add.code, label %assert_fail11 [
    i32 13, label %assert_end12
    i32 7, label %assert_end12
    i32 4, label %assert_end12
    i32 3, label %assert_end12
  ], !dbg !6860

assert_fail11:                                    ; preds = %assert_end10
  %20 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %20(ptr nonnull @.str.1830), !dbg !6860
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10, %assert_end10, %assert_end10, %assert_end10
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6860
  %22 = load i32, ptr %21, align 4, !dbg !6860
  %23 = icmp eq i32 %22, 2, !dbg !6860
  br i1 %23, label %assert_end16, label %assert_fail13, !dbg !6860, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %24 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %24(ptr nonnull @.str.1831), !dbg !6860
  br label %common.ret

assert_end16:                                     ; preds = %assert_end12
  %25 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6860
  %26 = load i16, ptr %25, align 2, !dbg !6860
  %27 = icmp eq i16 %26, 1, !dbg !6860
  %28 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6860
  %29 = load i8, ptr %28, align 1, !dbg !6860
  %30 = icmp eq i8 %29, 32, !dbg !6860
  %31 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6860
  %32 = load i8, ptr %31, align 1, !dbg !6860
  %33 = icmp eq i8 %32, 2, !dbg !6860
  %34 = and i1 %30, %33, !dbg !6860
  %35 = and i1 %27, %34, !dbg !6860
  br i1 %35, label %assert_end18, label %assert_fail17, !dbg !6860, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %36 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %36(ptr nonnull @.str.1832), !dbg !6860
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %37 = load i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p0.shape, align 8, !dbg !6860, !tbaa !6879
  %38 = and i64 %37, 4294967295, !dbg !6860
  %39 = icmp eq i64 %38, 1, !dbg !6860
  br i1 %39, label %assert_end20, label %assert_fail19, !dbg !6860, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %40(ptr nonnull @.str.1833), !dbg !6860
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p0.shape, i64 1, !dbg !6860
  %42 = load i64, ptr %41, align 8, !dbg !6860, !tbaa !6889
  %43 = and i64 %42, 4294967295, !dbg !6860
  %44 = icmp eq i64 %43, 2048, !dbg !6860
  br i1 %44, label %assert_end22, label %assert_fail21, !dbg !6860, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %45(ptr nonnull @.str.1834), !dbg !6860
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p0.strides, null, !dbg !6860
  br i1 %.not, label %if_end, label %if_then, !dbg !6860, !prof !52

if_then:                                          ; preds = %assert_end22
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p0.strides, i64 1, !dbg !6860
  %47 = load i64, ptr %46, align 8, !dbg !6860, !tbaa !6891
  %48 = and i64 %47, 4294967295, !dbg !6860
  %49 = icmp eq i64 %48, 1, !dbg !6860
  br i1 %49, label %if_end, label %assert_fail23, !dbg !6860, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %50 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6860
  %51 = load i64, ptr %50, align 8, !dbg !6860
  %52 = icmp eq i64 %51, 0, !dbg !6860
  br i1 %52, label %assert_end26, label %assert_fail25, !dbg !6860, !prof !18

assert_fail23:                                    ; preds = %if_then
  %53 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %53(ptr nonnull @.str.1835), !dbg !6860
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %54 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %54(ptr nonnull @.str.1836), !dbg !6860
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %55 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6860
  %56 = load i32, ptr %55, align 4, !dbg !6860
  %57 = icmp eq i32 %56, 1, !dbg !6860
  br i1 %57, label %assert_end28, label %assert_fail27, !dbg !6860, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %58 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %58(ptr nonnull @.str.1837), !dbg !6860
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %59 = getelementptr inbounds %1, ptr %p1, i64 0, i32 2, !dbg !6860
  %60 = load i32, ptr %59, align 4, !dbg !6860
  %61 = icmp eq i32 %60, 3, !dbg !6860
  br i1 %61, label %assert_end32, label %assert_fail29, !dbg !6860, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %62 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %62(ptr nonnull @.str.1838), !dbg !6860
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %63 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 2, !dbg !6860
  %64 = load i16, ptr %63, align 2, !dbg !6860
  %65 = icmp eq i16 %64, 1, !dbg !6860
  %66 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 1, !dbg !6860
  %67 = load i8, ptr %66, align 1, !dbg !6860
  %68 = icmp eq i8 %67, 32, !dbg !6860
  %69 = getelementptr inbounds %1, ptr %p1, i64 0, i32 3, i32 0, !dbg !6860
  %70 = load i8, ptr %69, align 1, !dbg !6860
  %71 = icmp eq i8 %70, 2, !dbg !6860
  %72 = and i1 %68, %71, !dbg !6860
  %73 = and i1 %65, %72, !dbg !6860
  br i1 %73, label %assert_end34, label %assert_fail33, !dbg !6860, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %74(ptr nonnull @.str.1839), !dbg !6860
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %75 = load i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p1.shape, align 8, !dbg !6860, !tbaa !6901
  %76 = and i64 %75, 4294967295, !dbg !6860
  %77 = icmp eq i64 %76, 125, !dbg !6860
  br i1 %77, label %assert_end36, label %assert_fail35, !dbg !6860, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %78(ptr nonnull @.str.1840), !dbg !6860
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %79 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p1.shape, i64 1, !dbg !6860
  %80 = load i64, ptr %79, align 8, !dbg !6860, !tbaa !6911
  %81 = and i64 %80, 4294967295, !dbg !6860
  %82 = icmp eq i64 %81, 2048, !dbg !6860
  br i1 %82, label %assert_end38, label %assert_fail37, !dbg !6860, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %83 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %83(ptr nonnull @.str.1841), !dbg !6860
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %84 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p1.shape, i64 2, !dbg !6860
  %85 = load i64, ptr %84, align 8, !dbg !6860, !tbaa !6913
  %86 = and i64 %85, 4294967295, !dbg !6860
  %87 = icmp eq i64 %86, 8, !dbg !6860
  br i1 %87, label %assert_end40, label %assert_fail39, !dbg !6860, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %88 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %88(ptr nonnull @.str.1842), !dbg !6860
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %.not95 = icmp eq ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p1.strides, null, !dbg !6860
  br i1 %.not95, label %if_end42, label %if_then41, !dbg !6860, !prof !52

if_then41:                                        ; preds = %assert_end40
  %89 = load i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p1.strides, align 8, !dbg !6860, !tbaa !6916
  %90 = and i64 %89, 4294967295, !dbg !6860
  %91 = icmp eq i64 %90, 16384, !dbg !6860
  %92 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p1.strides, i64 1, !dbg !6860
  %93 = load i64, ptr %92, align 8, !dbg !6860, !tbaa !6926
  %94 = and i64 %93, 4294967295, !dbg !6860
  %95 = icmp eq i64 %94, 8, !dbg !6860
  %96 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p1.strides, i64 2, !dbg !6860
  %97 = load i64, ptr %96, align 8, !dbg !6860, !tbaa !6928
  %98 = and i64 %97, 4294967295, !dbg !6860
  %99 = icmp eq i64 %98, 1, !dbg !6860
  %100 = and i1 %95, %99, !dbg !6860
  %101 = and i1 %91, %100, !dbg !6860
  br i1 %101, label %if_end42, label %assert_fail43, !dbg !6860, !prof !18

if_end42:                                         ; preds = %if_then41, %assert_end40
  %102 = getelementptr inbounds %1, ptr %p1, i64 0, i32 6, !dbg !6860
  %103 = load i64, ptr %102, align 8, !dbg !6860
  %104 = icmp eq i64 %103, 0, !dbg !6860
  br i1 %104, label %assert_end46, label %assert_fail45, !dbg !6860, !prof !18

assert_fail43:                                    ; preds = %if_then41
  %105 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %105(ptr nonnull @.str.1843), !dbg !6860
  br label %common.ret

assert_fail45:                                    ; preds = %if_end42
  %106 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %106(ptr nonnull @.str.1844), !dbg !6860
  br label %common.ret

assert_end46:                                     ; preds = %if_end42
  %107 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 0, !dbg !6860
  %108 = load i32, ptr %107, align 4, !dbg !6860
  %109 = icmp eq i32 %108, 1, !dbg !6860
  br i1 %109, label %assert_end48, label %assert_fail47, !dbg !6860, !prof !18

assert_fail47:                                    ; preds = %assert_end46
  %110 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %110(ptr nonnull @.str.1845), !dbg !6860
  br label %common.ret

assert_end48:                                     ; preds = %assert_end46
  %111 = getelementptr inbounds %1, ptr %p1, i64 0, i32 1, i32 1, !dbg !6860
  %112 = load i32, ptr %111, align 4, !dbg !6860
  %113 = icmp eq i32 %dev_id, %112, !dbg !6860
  br i1 %113, label %assert_end50, label %assert_fail49, !dbg !6860, !prof !18

assert_fail49:                                    ; preds = %assert_end48
  %114 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %114(ptr nonnull @.str.1846), !dbg !6860
  br label %common.ret

assert_end50:                                     ; preds = %assert_end48
  %115 = getelementptr inbounds %1, ptr %p2, i64 0, i32 2, !dbg !6860
  %116 = load i32, ptr %115, align 4, !dbg !6860
  %117 = icmp eq i32 %116, 2, !dbg !6860
  br i1 %117, label %assert_end54, label %assert_fail51, !dbg !6860, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %118(ptr nonnull @.str.1847), !dbg !6860
  br label %common.ret

assert_end54:                                     ; preds = %assert_end50
  %119 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 2, !dbg !6860
  %120 = load i16, ptr %119, align 2, !dbg !6860
  %121 = icmp eq i16 %120, 1, !dbg !6860
  %122 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 1, !dbg !6860
  %123 = load i8, ptr %122, align 1, !dbg !6860
  %124 = icmp eq i8 %123, 32, !dbg !6860
  %125 = getelementptr inbounds %1, ptr %p2, i64 0, i32 3, i32 0, !dbg !6860
  %126 = load i8, ptr %125, align 1, !dbg !6860
  %127 = icmp eq i8 %126, 2, !dbg !6860
  %128 = and i1 %124, %127, !dbg !6860
  %129 = and i1 %121, %128, !dbg !6860
  br i1 %129, label %assert_end56, label %assert_fail55, !dbg !6860, !prof !18

assert_fail55:                                    ; preds = %assert_end54
  %130 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %130(ptr nonnull @.str.1848), !dbg !6860
  br label %common.ret

assert_end56:                                     ; preds = %assert_end54
  %131 = load i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p2.shape, align 8, !dbg !6860, !tbaa !6931
  %132 = and i64 %131, 4294967295, !dbg !6860
  %133 = icmp eq i64 %132, 1, !dbg !6860
  br i1 %133, label %assert_end58, label %assert_fail57, !dbg !6860, !prof !18

assert_fail57:                                    ; preds = %assert_end56
  %134 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %134(ptr nonnull @.str.1849), !dbg !6860
  br label %common.ret

assert_end58:                                     ; preds = %assert_end56
  %135 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p2.shape, i64 1, !dbg !6860
  %136 = load i64, ptr %135, align 8, !dbg !6860, !tbaa !6941
  %137 = and i64 %136, 4294967295, !dbg !6860
  %138 = icmp eq i64 %137, 1000, !dbg !6860
  br i1 %138, label %assert_end60, label %assert_fail59, !dbg !6860, !prof !18

assert_fail59:                                    ; preds = %assert_end58
  %139 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %139(ptr nonnull @.str.1850), !dbg !6860
  br label %common.ret

assert_end60:                                     ; preds = %assert_end58
  %.not96 = icmp eq ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p2.strides, null, !dbg !6860
  br i1 %.not96, label %if_end62, label %if_then61, !dbg !6860, !prof !52

if_then61:                                        ; preds = %assert_end60
  %140 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.p2.strides, i64 1, !dbg !6860
  %141 = load i64, ptr %140, align 8, !dbg !6860, !tbaa !6943
  %142 = and i64 %141, 4294967295, !dbg !6860
  %143 = icmp eq i64 %142, 1, !dbg !6860
  br i1 %143, label %if_end62, label %assert_fail63, !dbg !6860, !prof !18

if_end62:                                         ; preds = %if_then61, %assert_end60
  %144 = getelementptr inbounds %1, ptr %p2, i64 0, i32 6, !dbg !6860
  %145 = load i64, ptr %144, align 8, !dbg !6860
  %146 = icmp eq i64 %145, 0, !dbg !6860
  br i1 %146, label %assert_end66, label %assert_fail65, !dbg !6860, !prof !18

assert_fail63:                                    ; preds = %if_then61
  %147 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %147(ptr nonnull @.str.1851), !dbg !6860
  br label %common.ret

assert_fail65:                                    ; preds = %if_end62
  %148 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %148(ptr nonnull @.str.1852), !dbg !6860
  br label %common.ret

assert_end66:                                     ; preds = %if_end62
  %149 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 0, !dbg !6860
  %150 = load i32, ptr %149, align 4, !dbg !6860
  %151 = icmp eq i32 %150, 1, !dbg !6860
  br i1 %151, label %assert_end68, label %assert_fail67, !dbg !6860, !prof !18

assert_fail67:                                    ; preds = %assert_end66
  %152 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %152(ptr nonnull @.str.1853), !dbg !6860
  br label %common.ret

assert_end68:                                     ; preds = %assert_end66
  %153 = getelementptr inbounds %1, ptr %p2, i64 0, i32 1, i32 1, !dbg !6860
  %154 = load i32, ptr %153, align 4, !dbg !6860
  %155 = icmp eq i32 %dev_id, %154, !dbg !6860
  br i1 %155, label %assert_end70, label %assert_fail69, !dbg !6860, !prof !18

assert_fail69:                                    ; preds = %assert_end68
  %156 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %156(ptr nonnull @.str.1854), !dbg !6860
  br label %common.ret

assert_end70:                                     ; preds = %assert_end68
  %157 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 2, !dbg !6860
  %158 = load i32, ptr %157, align 4, !dbg !6860
  %159 = icmp eq i32 %158, 2, !dbg !6860
  br i1 %159, label %assert_end74, label %assert_fail71, !dbg !6860, !prof !18

assert_fail71:                                    ; preds = %assert_end70
  %160 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %160(ptr nonnull @.str.1855), !dbg !6860
  br label %common.ret

assert_end74:                                     ; preds = %assert_end70
  %161 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 2, !dbg !6860
  %162 = load i16, ptr %161, align 2, !dbg !6860
  %163 = icmp eq i16 %162, 1, !dbg !6860
  %164 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 1, !dbg !6860
  %165 = load i8, ptr %164, align 1, !dbg !6860
  %166 = icmp eq i8 %165, 32, !dbg !6860
  %167 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 3, i32 0, !dbg !6860
  %168 = load i8, ptr %167, align 1, !dbg !6860
  %169 = icmp eq i8 %168, 2, !dbg !6860
  %170 = and i1 %166, %169, !dbg !6860
  %171 = and i1 %163, %170, !dbg !6860
  br i1 %171, label %assert_end76, label %assert_fail75, !dbg !6860, !prof !18

assert_fail75:                                    ; preds = %assert_end74
  %172 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %172(ptr nonnull @.str.1856), !dbg !6860
  br label %common.ret

assert_end76:                                     ; preds = %assert_end74
  %173 = load i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.shape, align 8, !dbg !6860, !tbaa !6953
  %174 = and i64 %173, 4294967295, !dbg !6860
  %175 = icmp eq i64 %174, 1, !dbg !6860
  br i1 %175, label %assert_end78, label %assert_fail77, !dbg !6860, !prof !18

assert_fail77:                                    ; preds = %assert_end76
  %176 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %176(ptr nonnull @.str.1857), !dbg !6860
  br label %common.ret

assert_end78:                                     ; preds = %assert_end76
  %177 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.shape, i64 1, !dbg !6860
  %178 = load i64, ptr %177, align 8, !dbg !6860, !tbaa !6963
  %179 = and i64 %178, 4294967295, !dbg !6860
  %180 = icmp eq i64 %179, 1000, !dbg !6860
  br i1 %180, label %assert_end80, label %assert_fail79, !dbg !6860, !prof !18

assert_fail79:                                    ; preds = %assert_end78
  %181 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %181(ptr nonnull @.str.1858), !dbg !6860
  br label %common.ret

assert_end80:                                     ; preds = %assert_end78
  %.not97 = icmp eq ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.strides, null, !dbg !6860
  br i1 %.not97, label %if_end82, label %if_then81, !dbg !6860, !prof !52

if_then81:                                        ; preds = %assert_end80
  %182 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_contrib_dense_pack_add.T_add.strides, i64 1, !dbg !6860
  %183 = load i64, ptr %182, align 8, !dbg !6860, !tbaa !6965
  %184 = and i64 %183, 4294967295, !dbg !6860
  %185 = icmp eq i64 %184, 1, !dbg !6860
  br i1 %185, label %if_end82, label %assert_fail83, !dbg !6860, !prof !18

if_end82:                                         ; preds = %if_then81, %assert_end80
  %186 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 6, !dbg !6860
  %187 = load i64, ptr %186, align 8, !dbg !6860
  %188 = icmp eq i64 %187, 0, !dbg !6860
  br i1 %188, label %assert_end86, label %assert_fail85, !dbg !6860, !prof !18

assert_fail83:                                    ; preds = %if_then81
  %189 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %189(ptr nonnull @.str.1859), !dbg !6860
  br label %common.ret

assert_fail85:                                    ; preds = %if_end82
  %190 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %190(ptr nonnull @.str.1860), !dbg !6860
  br label %common.ret

assert_end86:                                     ; preds = %if_end82
  %191 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 0, !dbg !6860
  %192 = load i32, ptr %191, align 4, !dbg !6860
  %193 = icmp eq i32 %192, 1, !dbg !6860
  br i1 %193, label %assert_end88, label %assert_fail87, !dbg !6860, !prof !18

assert_fail87:                                    ; preds = %assert_end86
  %194 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %194(ptr nonnull @.str.1861), !dbg !6860
  br label %common.ret

assert_end88:                                     ; preds = %assert_end86
  %195 = getelementptr inbounds %1, ptr %T_add, i64 0, i32 1, i32 1, !dbg !6860
  %196 = load i32, ptr %195, align 4, !dbg !6860
  %197 = icmp eq i32 %dev_id, %196, !dbg !6860
  br i1 %197, label %assert_end90, label %assert_fail89, !dbg !6860, !prof !18

assert_fail89:                                    ; preds = %assert_end88
  %198 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6860, !tbaa !19
  tail call void %198(ptr nonnull @.str.1862), !dbg !6860
  br label %common.ret

assert_end90:                                     ; preds = %assert_end88
  %199 = tail call fastcc i32 @tvmgen_default_fused_nn_contrib_dense_pack_add_compute_(ptr %p091, ptr %p192, ptr %T_add93, ptr %p294), !dbg !6860
  br label %common.ret
}

define dllexport i32 @tvmgen_default_fused_nn_max_pool2d(ptr noalias nocapture readonly %args, ptr noalias nocapture readonly %arg_type_ids, i32 %num_args, ptr noalias nocapture readnone %out_ret_value, ptr noalias nocapture readnone %out_ret_tcode, ptr noalias nocapture readnone %resource_handle) local_unnamed_addr #0 !dbg !6975 {
entry:
  call void @llvm.dbg.value(metadata ptr %args, metadata !6977, metadata !DIExpression()), !dbg !6983
  call void @llvm.dbg.value(metadata ptr %arg_type_ids, metadata !6978, metadata !DIExpression()), !dbg !6983
  call void @llvm.dbg.value(metadata i32 %num_args, metadata !6979, metadata !DIExpression()), !dbg !6983
  call void @llvm.dbg.value(metadata ptr %out_ret_value, metadata !6980, metadata !DIExpression()), !dbg !6983
  call void @llvm.dbg.value(metadata ptr %out_ret_tcode, metadata !6981, metadata !DIExpression()), !dbg !6983
  call void @llvm.dbg.value(metadata ptr %resource_handle, metadata !6982, metadata !DIExpression()), !dbg !6983
  %0 = icmp eq i32 %num_args, 2, !dbg !6983
  br i1 %0, label %assert_end, label %assert_fail, !dbg !6983, !prof !18

common.ret:                                       ; preds = %assert_end54, %assert_fail53, %assert_fail51, %assert_fail49, %assert_fail47, %assert_fail43, %assert_fail41, %assert_fail39, %assert_fail37, %assert_fail35, %assert_fail33, %assert_fail29, %assert_fail27, %assert_fail25, %assert_fail23, %assert_fail21, %assert_fail19, %assert_fail17, %assert_fail15, %assert_fail13, %assert_fail11, %assert_fail7, %assert_fail5, %assert_fail3, %assert_fail
  %common.ret.op = phi i32 [ -1, %assert_fail ], [ -1, %assert_fail3 ], [ -1, %assert_fail5 ], [ -1, %assert_fail7 ], [ -1, %assert_fail11 ], [ -1, %assert_fail13 ], [ -1, %assert_fail15 ], [ -1, %assert_fail17 ], [ -1, %assert_fail19 ], [ -1, %assert_fail21 ], [ -1, %assert_fail23 ], [ -1, %assert_fail25 ], [ -1, %assert_fail27 ], [ -1, %assert_fail29 ], [ -1, %assert_fail33 ], [ -1, %assert_fail35 ], [ -1, %assert_fail37 ], [ -1, %assert_fail39 ], [ -1, %assert_fail41 ], [ -1, %assert_fail43 ], [ -1, %assert_fail47 ], [ -1, %assert_fail49 ], [ -1, %assert_fail51 ], [ -1, %assert_fail53 ], [ %151, %assert_end54 ]
  ret i32 %common.ret.op, !dbg !6983

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %1(ptr nonnull @.str.1864), !dbg !6983
  br label %common.ret

assert_end:                                       ; preds = %entry
  %p0.code = load i32, ptr %arg_type_ids, align 4, !dbg !6983, !tbaa !6984
  %2 = getelementptr inbounds i32, ptr %arg_type_ids, i64 1, !dbg !6983
  %pool_max.code = load i32, ptr %2, align 4, !dbg !6983, !tbaa !6995
  %p0 = load ptr, ptr %args, align 8, !dbg !6983
  %3 = getelementptr inbounds %0, ptr %args, i64 1, !dbg !6983
  %pool_max = load ptr, ptr %3, align 8, !dbg !6983
  %p056 = load ptr, ptr %p0, align 8, !dbg !6983
  call void @llvm.assume(i1 true) [ "align"(ptr %p056, i64 64) ], !dbg !6983
  %4 = getelementptr inbounds %1, ptr %p0, i64 0, i32 4, !dbg !6983
  %tvmgen_default_fused_nn_max_pool2d.p0.shape = load ptr, ptr %4, align 8, !dbg !6983
  %5 = getelementptr inbounds %1, ptr %p0, i64 0, i32 5, !dbg !6983
  %tvmgen_default_fused_nn_max_pool2d.p0.strides = load ptr, ptr %5, align 8, !dbg !6983
  %6 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 1, !dbg !6983
  %dev_id = load i32, ptr %6, align 4, !dbg !6983
  %pool_max55 = load ptr, ptr %pool_max, align 8, !dbg !6983
  call void @llvm.assume(i1 true) [ "align"(ptr %pool_max55, i64 64) ], !dbg !6983
  %7 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 4, !dbg !6983
  %tvmgen_default_fused_nn_max_pool2d.pool_max.shape = load ptr, ptr %7, align 8, !dbg !6983
  %8 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 5, !dbg !6983
  %tvmgen_default_fused_nn_max_pool2d.pool_max.strides = load ptr, ptr %8, align 8, !dbg !6983
  switch i32 %p0.code, label %assert_fail3 [
    i32 13, label %assert_end4
    i32 7, label %assert_end4
    i32 4, label %assert_end4
    i32 3, label %assert_end4
  ], !dbg !6983

assert_fail3:                                     ; preds = %assert_end
  %9 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %9(ptr nonnull @.str.1865), !dbg !6983
  br label %common.ret

assert_end4:                                      ; preds = %assert_end, %assert_end, %assert_end, %assert_end
  switch i32 %pool_max.code, label %assert_fail5 [
    i32 13, label %assert_end6
    i32 7, label %assert_end6
    i32 4, label %assert_end6
    i32 3, label %assert_end6
  ], !dbg !6983

assert_fail5:                                     ; preds = %assert_end4
  %10 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %10(ptr nonnull @.str.1866), !dbg !6983
  br label %common.ret

assert_end6:                                      ; preds = %assert_end4, %assert_end4, %assert_end4, %assert_end4
  %11 = getelementptr inbounds %1, ptr %p0, i64 0, i32 2, !dbg !6983
  %12 = load i32, ptr %11, align 4, !dbg !6983
  %13 = icmp eq i32 %12, 5, !dbg !6983
  br i1 %13, label %assert_end10, label %assert_fail7, !dbg !6983, !prof !18

assert_fail7:                                     ; preds = %assert_end6
  %14 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %14(ptr nonnull @.str.1867), !dbg !6983
  br label %common.ret

assert_end10:                                     ; preds = %assert_end6
  %15 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 2, !dbg !6983
  %16 = load i16, ptr %15, align 2, !dbg !6983
  %17 = icmp eq i16 %16, 1, !dbg !6983
  %18 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 1, !dbg !6983
  %19 = load i8, ptr %18, align 1, !dbg !6983
  %20 = icmp eq i8 %19, 32, !dbg !6983
  %21 = getelementptr inbounds %1, ptr %p0, i64 0, i32 3, i32 0, !dbg !6983
  %22 = load i8, ptr %21, align 1, !dbg !6983
  %23 = icmp eq i8 %22, 2, !dbg !6983
  %24 = and i1 %20, %23, !dbg !6983
  %25 = and i1 %17, %24, !dbg !6983
  br i1 %25, label %assert_end12, label %assert_fail11, !dbg !6983, !prof !18

assert_fail11:                                    ; preds = %assert_end10
  %26 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %26(ptr nonnull @.str.1868), !dbg !6983
  br label %common.ret

assert_end12:                                     ; preds = %assert_end10
  %27 = load i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.shape, align 8, !dbg !6983, !tbaa !6997
  %28 = and i64 %27, 4294967295, !dbg !6983
  %29 = icmp eq i64 %28, 1, !dbg !6983
  br i1 %29, label %assert_end14, label %assert_fail13, !dbg !6983, !prof !18

assert_fail13:                                    ; preds = %assert_end12
  %30 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %30(ptr nonnull @.str.1869), !dbg !6983
  br label %common.ret

assert_end14:                                     ; preds = %assert_end12
  %31 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.shape, i64 1, !dbg !6983
  %32 = load i64, ptr %31, align 8, !dbg !6983, !tbaa !7007
  %33 = and i64 %32, 4294967295, !dbg !6983
  %34 = icmp eq i64 %33, 2, !dbg !6983
  br i1 %34, label %assert_end16, label %assert_fail15, !dbg !6983, !prof !18

assert_fail15:                                    ; preds = %assert_end14
  %35 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %35(ptr nonnull @.str.1870), !dbg !6983
  br label %common.ret

assert_end16:                                     ; preds = %assert_end14
  %36 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.shape, i64 2, !dbg !6983
  %37 = load i64, ptr %36, align 8, !dbg !6983, !tbaa !7009
  %38 = and i64 %37, 4294967295, !dbg !6983
  %39 = icmp eq i64 %38, 112, !dbg !6983
  br i1 %39, label %assert_end18, label %assert_fail17, !dbg !6983, !prof !18

assert_fail17:                                    ; preds = %assert_end16
  %40 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %40(ptr nonnull @.str.1871), !dbg !6983
  br label %common.ret

assert_end18:                                     ; preds = %assert_end16
  %41 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.shape, i64 3, !dbg !6983
  %42 = load i64, ptr %41, align 8, !dbg !6983, !tbaa !7012
  %43 = and i64 %42, 4294967295, !dbg !6983
  %44 = icmp eq i64 %43, 112, !dbg !6983
  br i1 %44, label %assert_end20, label %assert_fail19, !dbg !6983, !prof !18

assert_fail19:                                    ; preds = %assert_end18
  %45 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %45(ptr nonnull @.str.1872), !dbg !6983
  br label %common.ret

assert_end20:                                     ; preds = %assert_end18
  %46 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.shape, i64 4, !dbg !6983
  %47 = load i64, ptr %46, align 8, !dbg !6983, !tbaa !7014
  %48 = and i64 %47, 4294967295, !dbg !6983
  %49 = icmp eq i64 %48, 32, !dbg !6983
  br i1 %49, label %assert_end22, label %assert_fail21, !dbg !6983, !prof !18

assert_fail21:                                    ; preds = %assert_end20
  %50 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %50(ptr nonnull @.str.1873), !dbg !6983
  br label %common.ret

assert_end22:                                     ; preds = %assert_end20
  %.not = icmp eq ptr %tvmgen_default_fused_nn_max_pool2d.p0.strides, null, !dbg !6983
  br i1 %.not, label %if_end, label %if_then, !dbg !6983, !prof !52

if_then:                                          ; preds = %assert_end22
  %51 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.strides, i64 1, !dbg !6983
  %52 = load i64, ptr %51, align 8, !dbg !6983, !tbaa !7018
  %53 = and i64 %52, 4294967295, !dbg !6983
  %54 = icmp eq i64 %53, 401408, !dbg !6983
  %55 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.strides, i64 2, !dbg !6983
  %56 = load i64, ptr %55, align 8, !dbg !6983, !tbaa !7028
  %57 = and i64 %56, 4294967295, !dbg !6983
  %58 = icmp eq i64 %57, 3584, !dbg !6983
  %59 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.strides, i64 3, !dbg !6983
  %60 = load i64, ptr %59, align 8, !dbg !6983, !tbaa !7031
  %61 = and i64 %60, 4294967295, !dbg !6983
  %62 = icmp eq i64 %61, 32, !dbg !6983
  %63 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.p0.strides, i64 4, !dbg !6983
  %64 = load i64, ptr %63, align 8, !dbg !6983, !tbaa !7033
  %65 = and i64 %64, 4294967295, !dbg !6983
  %66 = icmp eq i64 %65, 1, !dbg !6983
  %67 = and i1 %62, %66, !dbg !6983
  %68 = and i1 %58, %67, !dbg !6983
  %69 = and i1 %54, %68, !dbg !6983
  br i1 %69, label %if_end, label %assert_fail23, !dbg !6983, !prof !18

if_end:                                           ; preds = %if_then, %assert_end22
  %70 = getelementptr inbounds %1, ptr %p0, i64 0, i32 6, !dbg !6983
  %71 = load i64, ptr %70, align 8, !dbg !6983
  %72 = icmp eq i64 %71, 0, !dbg !6983
  br i1 %72, label %assert_end26, label %assert_fail25, !dbg !6983, !prof !18

assert_fail23:                                    ; preds = %if_then
  %73 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %73(ptr nonnull @.str.1874), !dbg !6983
  br label %common.ret

assert_fail25:                                    ; preds = %if_end
  %74 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %74(ptr nonnull @.str.1875), !dbg !6983
  br label %common.ret

assert_end26:                                     ; preds = %if_end
  %75 = getelementptr inbounds %1, ptr %p0, i64 0, i32 1, i32 0, !dbg !6983
  %76 = load i32, ptr %75, align 4, !dbg !6983
  %77 = icmp eq i32 %76, 1, !dbg !6983
  br i1 %77, label %assert_end28, label %assert_fail27, !dbg !6983, !prof !18

assert_fail27:                                    ; preds = %assert_end26
  %78 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %78(ptr nonnull @.str.1876), !dbg !6983
  br label %common.ret

assert_end28:                                     ; preds = %assert_end26
  %79 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 2, !dbg !6983
  %80 = load i32, ptr %79, align 4, !dbg !6983
  %81 = icmp eq i32 %80, 5, !dbg !6983
  br i1 %81, label %assert_end32, label %assert_fail29, !dbg !6983, !prof !18

assert_fail29:                                    ; preds = %assert_end28
  %82 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %82(ptr nonnull @.str.1877), !dbg !6983
  br label %common.ret

assert_end32:                                     ; preds = %assert_end28
  %83 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 3, i32 2, !dbg !6983
  %84 = load i16, ptr %83, align 2, !dbg !6983
  %85 = icmp eq i16 %84, 1, !dbg !6983
  %86 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 3, i32 1, !dbg !6983
  %87 = load i8, ptr %86, align 1, !dbg !6983
  %88 = icmp eq i8 %87, 32, !dbg !6983
  %89 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 3, i32 0, !dbg !6983
  %90 = load i8, ptr %89, align 1, !dbg !6983
  %91 = icmp eq i8 %90, 2, !dbg !6983
  %92 = and i1 %88, %91, !dbg !6983
  %93 = and i1 %85, %92, !dbg !6983
  br i1 %93, label %assert_end34, label %assert_fail33, !dbg !6983, !prof !18

assert_fail33:                                    ; preds = %assert_end32
  %94 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %94(ptr nonnull @.str.1878), !dbg !6983
  br label %common.ret

assert_end34:                                     ; preds = %assert_end32
  %95 = load i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.shape, align 8, !dbg !6983, !tbaa !7037
  %96 = and i64 %95, 4294967295, !dbg !6983
  %97 = icmp eq i64 %96, 1, !dbg !6983
  br i1 %97, label %assert_end36, label %assert_fail35, !dbg !6983, !prof !18

assert_fail35:                                    ; preds = %assert_end34
  %98 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %98(ptr nonnull @.str.1879), !dbg !6983
  br label %common.ret

assert_end36:                                     ; preds = %assert_end34
  %99 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.shape, i64 1, !dbg !6983
  %100 = load i64, ptr %99, align 8, !dbg !6983, !tbaa !7047
  %101 = and i64 %100, 4294967295, !dbg !6983
  %102 = icmp eq i64 %101, 2, !dbg !6983
  br i1 %102, label %assert_end38, label %assert_fail37, !dbg !6983, !prof !18

assert_fail37:                                    ; preds = %assert_end36
  %103 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %103(ptr nonnull @.str.1880), !dbg !6983
  br label %common.ret

assert_end38:                                     ; preds = %assert_end36
  %104 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.shape, i64 2, !dbg !6983
  %105 = load i64, ptr %104, align 8, !dbg !6983, !tbaa !7049
  %106 = and i64 %105, 4294967295, !dbg !6983
  %107 = icmp eq i64 %106, 56, !dbg !6983
  br i1 %107, label %assert_end40, label %assert_fail39, !dbg !6983, !prof !18

assert_fail39:                                    ; preds = %assert_end38
  %108 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %108(ptr nonnull @.str.1881), !dbg !6983
  br label %common.ret

assert_end40:                                     ; preds = %assert_end38
  %109 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.shape, i64 3, !dbg !6983
  %110 = load i64, ptr %109, align 8, !dbg !6983, !tbaa !7052
  %111 = and i64 %110, 4294967295, !dbg !6983
  %112 = icmp eq i64 %111, 56, !dbg !6983
  br i1 %112, label %assert_end42, label %assert_fail41, !dbg !6983, !prof !18

assert_fail41:                                    ; preds = %assert_end40
  %113 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %113(ptr nonnull @.str.1882), !dbg !6983
  br label %common.ret

assert_end42:                                     ; preds = %assert_end40
  %114 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.shape, i64 4, !dbg !6983
  %115 = load i64, ptr %114, align 8, !dbg !6983, !tbaa !7054
  %116 = and i64 %115, 4294967295, !dbg !6983
  %117 = icmp eq i64 %116, 32, !dbg !6983
  br i1 %117, label %assert_end44, label %assert_fail43, !dbg !6983, !prof !18

assert_fail43:                                    ; preds = %assert_end42
  %118 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %118(ptr nonnull @.str.1883), !dbg !6983
  br label %common.ret

assert_end44:                                     ; preds = %assert_end42
  %.not57 = icmp eq ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.strides, null, !dbg !6983
  br i1 %.not57, label %if_end46, label %if_then45, !dbg !6983, !prof !52

if_then45:                                        ; preds = %assert_end44
  %119 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.strides, i64 1, !dbg !6983
  %120 = load i64, ptr %119, align 8, !dbg !6983, !tbaa !7058
  %121 = and i64 %120, 4294967295, !dbg !6983
  %122 = icmp eq i64 %121, 100352, !dbg !6983
  %123 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.strides, i64 2, !dbg !6983
  %124 = load i64, ptr %123, align 8, !dbg !6983, !tbaa !7068
  %125 = and i64 %124, 4294967295, !dbg !6983
  %126 = icmp eq i64 %125, 1792, !dbg !6983
  %127 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.strides, i64 3, !dbg !6983
  %128 = load i64, ptr %127, align 8, !dbg !6983, !tbaa !7071
  %129 = and i64 %128, 4294967295, !dbg !6983
  %130 = icmp eq i64 %129, 32, !dbg !6983
  %131 = getelementptr inbounds i64, ptr %tvmgen_default_fused_nn_max_pool2d.pool_max.strides, i64 4, !dbg !6983
  %132 = load i64, ptr %131, align 8, !dbg !6983, !tbaa !7073
  %133 = and i64 %132, 4294967295, !dbg !6983
  %134 = icmp eq i64 %133, 1, !dbg !6983
  %135 = and i1 %130, %134, !dbg !6983
  %136 = and i1 %126, %135, !dbg !6983
  %137 = and i1 %122, %136, !dbg !6983
  br i1 %137, label %if_end46, label %assert_fail47, !dbg !6983, !prof !18

if_end46:                                         ; preds = %if_then45, %assert_end44
  %138 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 6, !dbg !6983
  %139 = load i64, ptr %138, align 8, !dbg !6983
  %140 = icmp eq i64 %139, 0, !dbg !6983
  br i1 %140, label %assert_end50, label %assert_fail49, !dbg !6983, !prof !18

assert_fail47:                                    ; preds = %if_then45
  %141 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %141(ptr nonnull @.str.1884), !dbg !6983
  br label %common.ret

assert_fail49:                                    ; preds = %if_end46
  %142 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %142(ptr nonnull @.str.1885), !dbg !6983
  br label %common.ret

assert_end50:                                     ; preds = %if_end46
  %143 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 1, i32 0, !dbg !6983
  %144 = load i32, ptr %143, align 4, !dbg !6983
  %145 = icmp eq i32 %144, 1, !dbg !6983
  br i1 %145, label %assert_end52, label %assert_fail51, !dbg !6983, !prof !18

assert_fail51:                                    ; preds = %assert_end50
  %146 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %146(ptr nonnull @.str.1886), !dbg !6983
  br label %common.ret

assert_end52:                                     ; preds = %assert_end50
  %147 = getelementptr inbounds %1, ptr %pool_max, i64 0, i32 1, i32 1, !dbg !6983
  %148 = load i32, ptr %147, align 4, !dbg !6983
  %149 = icmp eq i32 %dev_id, %148, !dbg !6983
  br i1 %149, label %assert_end54, label %assert_fail53, !dbg !6983, !prof !18

assert_fail53:                                    ; preds = %assert_end52
  %150 = load ptr, ptr @__TVMAPISetLastError, align 8, !dbg !6983, !tbaa !19
  tail call void %150(ptr nonnull @.str.1887), !dbg !6983
  br label %common.ret

assert_end54:                                     ; preds = %assert_end52
  %151 = tail call fastcc i32 @tvmgen_default_fused_nn_max_pool2d_compute_(ptr %pool_max55, ptr %p056), !dbg !6983
  br label %common.ret
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #1

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 223
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 224)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 224)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 224)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv4 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next5, %for_end_ax3 ]
  %15 = mul nsw i64 %indvars.iv4, 224
  %16 = mul nsw i64 %indvars.iv4, 672
  br label %for_body_ax3

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_body_ax3:                                     ; preds = %for_begin_ax3.preheader, %for_body_ax3
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %for_body_ax3 ]
  %17 = add nsw i64 %indvars.iv, %15
  %18 = getelementptr inbounds float, ptr %p0, i64 %17
  %19 = load float, ptr %18, align 4, !tbaa !7077
  %20 = add nsw i64 %17, 50176
  %21 = getelementptr inbounds float, ptr %p0, i64 %20
  %22 = load float, ptr %21, align 4, !tbaa !7077
  %23 = add nsw i64 %17, 100352
  %24 = getelementptr inbounds float, ptr %p0, i64 %23
  %25 = load float, ptr %24, align 4, !tbaa !7077
  %26 = insertelement <3 x float> undef, float %19, i64 0
  %27 = insertelement <3 x float> %26, float %22, i64 1
  %28 = insertelement <3 x float> %27, float %25, i64 2
  %29 = mul nuw nsw i64 %indvars.iv, 3
  %30 = add nsw i64 %29, %16
  %31 = getelementptr inbounds float, ptr %T_layout_trans, i64 %30
  store <3 x float> %28, ptr %31, align 4, !tbaa !7079
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 224
  br i1 %exitcond.not, label %for_end_ax3, label %for_body_ax3, !prof !52

for_end_ax3:                                      ; preds = %for_body_ax3
  %indvars.iv.next5 = add nsw i64 %indvars.iv4, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next5 to i32
  %exitcond6.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond6.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_1_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.0, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.0, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.47, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.47(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.0, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 223
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 224)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 224)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 224)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv4 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next5, %for_end_ax3 ]
  %15 = trunc i64 %indvars.iv4 to i32
  %16 = srem i32 %15, 112
  %.lhs.trunc = trunc i32 %16 to i8
  %17 = sdiv i8 %.lhs.trunc, 56
  %.sext = sext i8 %17 to i32
  %18 = shl nsw i32 %.sext, 4
  %19 = srem i32 %15, 56
  %20 = mul nsw i32 %19, 1792
  %21 = sdiv i32 %15, 112
  %22 = mul nsw i32 %21, 100352
  %23 = add nsw i32 %22, %20
  %24 = add i32 %23, %18
  %25 = mul nsw i64 %indvars.iv4, 896
  br label %for_body_ax3

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_body_ax3:                                     ; preds = %for_body_ax3, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next.1, %for_body_ax3 ]
  %indvars.iv.tr = trunc i64 %indvars.iv to i32
  %26 = shl i32 %indvars.iv.tr, 5
  %27 = add i32 %24, %26
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds float, ptr %p0, i64 %28
  %30 = load <16 x float>, ptr %29, align 64, !tbaa !7081
  %31 = shl nuw nsw i64 %indvars.iv, 4
  %32 = add nsw i64 %31, %25
  %33 = getelementptr inbounds float, ptr %T_layout_trans, i64 %32
  store <16 x float> %30, ptr %33, align 64, !tbaa !7083
  %indvars.iv.next = or i64 %indvars.iv, 1
  %indvars.iv.tr.1 = trunc i64 %indvars.iv.next to i32
  %34 = shl i32 %indvars.iv.tr.1, 5
  %35 = add i32 %24, %34
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds float, ptr %p0, i64 %36
  %38 = load <16 x float>, ptr %37, align 64, !tbaa !7081
  %39 = shl nuw nsw i64 %indvars.iv.next, 4
  %40 = add nsw i64 %39, %25
  %41 = getelementptr inbounds float, ptr %T_layout_trans, i64 %40
  store <16 x float> %38, ptr %41, align 64, !tbaa !7083
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 56
  br i1 %exitcond.not.1, label %for_end_ax3, label %for_body_ax3, !prof !7085

for_end_ax3:                                      ; preds = %for_body_ax3
  %indvars.iv.next5 = add nsw i64 %indvars.iv4, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next5 to i32
  %exitcond6.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond6.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_10_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.1, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.1, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.72, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.72(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.1, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 895
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 896)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 896)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 896)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next, %for_begin_ax3.preheader ]
  %15 = trunc i64 %indvars.iv to i32
  %16 = srem i32 %15, 224
  %.lhs.trunc = trunc i32 %16 to i16
  %17 = sdiv i16 %.lhs.trunc, 28
  %.sext = sext i16 %17 to i32
  %18 = shl nsw i32 %.sext, 2
  %19 = srem i32 %15, 28
  %20 = mul nsw i32 %19, 896
  %21 = sdiv i32 %15, 224
  %22 = mul nsw i32 %21, 25088
  %23 = add nsw i32 %22, %20
  %24 = add i32 %23, %18
  %25 = mul nsw i64 %indvars.iv, 112
  %26 = sext i32 %24 to i64
  %27 = getelementptr inbounds float, ptr %p0, i64 %26
  %28 = load <4 x float>, ptr %27, align 16, !tbaa !7086
  %29 = getelementptr inbounds float, ptr %T_layout_trans, i64 %25
  store <4 x float> %28, ptr %29, align 16, !tbaa !7088
  %30 = add i32 %24, 32
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds float, ptr %p0, i64 %31
  %33 = load <4 x float>, ptr %32, align 16, !tbaa !7086
  %34 = or i64 %25, 4
  %35 = getelementptr inbounds float, ptr %T_layout_trans, i64 %34
  store <4 x float> %33, ptr %35, align 16, !tbaa !7088
  %36 = add i32 %24, 64
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds float, ptr %p0, i64 %37
  %39 = load <4 x float>, ptr %38, align 16, !tbaa !7086
  %40 = or i64 %25, 8
  %41 = getelementptr inbounds float, ptr %T_layout_trans, i64 %40
  store <4 x float> %39, ptr %41, align 16, !tbaa !7088
  %42 = add i32 %24, 96
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %p0, i64 %43
  %45 = load <4 x float>, ptr %44, align 16, !tbaa !7086
  %46 = or i64 %25, 12
  %47 = getelementptr inbounds float, ptr %T_layout_trans, i64 %46
  store <4 x float> %45, ptr %47, align 16, !tbaa !7088
  %48 = add i32 %24, 128
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds float, ptr %p0, i64 %49
  %51 = load <4 x float>, ptr %50, align 16, !tbaa !7086
  %52 = add nsw i64 %25, 16
  %53 = getelementptr inbounds float, ptr %T_layout_trans, i64 %52
  store <4 x float> %51, ptr %53, align 16, !tbaa !7088
  %54 = add i32 %24, 160
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds float, ptr %p0, i64 %55
  %57 = load <4 x float>, ptr %56, align 16, !tbaa !7086
  %58 = add nsw i64 %25, 20
  %59 = getelementptr inbounds float, ptr %T_layout_trans, i64 %58
  store <4 x float> %57, ptr %59, align 16, !tbaa !7088
  %60 = add i32 %24, 192
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds float, ptr %p0, i64 %61
  %63 = load <4 x float>, ptr %62, align 16, !tbaa !7086
  %64 = add nsw i64 %25, 24
  %65 = getelementptr inbounds float, ptr %T_layout_trans, i64 %64
  store <4 x float> %63, ptr %65, align 16, !tbaa !7088
  %66 = add i32 %24, 224
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds float, ptr %p0, i64 %67
  %69 = load <4 x float>, ptr %68, align 16, !tbaa !7086
  %70 = add nsw i64 %25, 28
  %71 = getelementptr inbounds float, ptr %T_layout_trans, i64 %70
  store <4 x float> %69, ptr %71, align 16, !tbaa !7088
  %72 = add i32 %24, 256
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds float, ptr %p0, i64 %73
  %75 = load <4 x float>, ptr %74, align 16, !tbaa !7086
  %76 = add nsw i64 %25, 32
  %77 = getelementptr inbounds float, ptr %T_layout_trans, i64 %76
  store <4 x float> %75, ptr %77, align 16, !tbaa !7088
  %78 = add i32 %24, 288
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds float, ptr %p0, i64 %79
  %81 = load <4 x float>, ptr %80, align 16, !tbaa !7086
  %82 = add nsw i64 %25, 36
  %83 = getelementptr inbounds float, ptr %T_layout_trans, i64 %82
  store <4 x float> %81, ptr %83, align 16, !tbaa !7088
  %84 = add i32 %24, 320
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds float, ptr %p0, i64 %85
  %87 = load <4 x float>, ptr %86, align 16, !tbaa !7086
  %88 = add nsw i64 %25, 40
  %89 = getelementptr inbounds float, ptr %T_layout_trans, i64 %88
  store <4 x float> %87, ptr %89, align 16, !tbaa !7088
  %90 = add i32 %24, 352
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds float, ptr %p0, i64 %91
  %93 = load <4 x float>, ptr %92, align 16, !tbaa !7086
  %94 = add nsw i64 %25, 44
  %95 = getelementptr inbounds float, ptr %T_layout_trans, i64 %94
  store <4 x float> %93, ptr %95, align 16, !tbaa !7088
  %96 = add i32 %24, 384
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds float, ptr %p0, i64 %97
  %99 = load <4 x float>, ptr %98, align 16, !tbaa !7086
  %100 = add nsw i64 %25, 48
  %101 = getelementptr inbounds float, ptr %T_layout_trans, i64 %100
  store <4 x float> %99, ptr %101, align 16, !tbaa !7088
  %102 = add i32 %24, 416
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds float, ptr %p0, i64 %103
  %105 = load <4 x float>, ptr %104, align 16, !tbaa !7086
  %106 = add nsw i64 %25, 52
  %107 = getelementptr inbounds float, ptr %T_layout_trans, i64 %106
  store <4 x float> %105, ptr %107, align 16, !tbaa !7088
  %108 = add i32 %24, 448
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds float, ptr %p0, i64 %109
  %111 = load <4 x float>, ptr %110, align 16, !tbaa !7086
  %112 = add nsw i64 %25, 56
  %113 = getelementptr inbounds float, ptr %T_layout_trans, i64 %112
  store <4 x float> %111, ptr %113, align 16, !tbaa !7088
  %114 = add i32 %24, 480
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds float, ptr %p0, i64 %115
  %117 = load <4 x float>, ptr %116, align 16, !tbaa !7086
  %118 = add nsw i64 %25, 60
  %119 = getelementptr inbounds float, ptr %T_layout_trans, i64 %118
  store <4 x float> %117, ptr %119, align 16, !tbaa !7088
  %120 = add i32 %24, 512
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds float, ptr %p0, i64 %121
  %123 = load <4 x float>, ptr %122, align 16, !tbaa !7086
  %124 = add nsw i64 %25, 64
  %125 = getelementptr inbounds float, ptr %T_layout_trans, i64 %124
  store <4 x float> %123, ptr %125, align 16, !tbaa !7088
  %126 = add i32 %24, 544
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds float, ptr %p0, i64 %127
  %129 = load <4 x float>, ptr %128, align 16, !tbaa !7086
  %130 = add nsw i64 %25, 68
  %131 = getelementptr inbounds float, ptr %T_layout_trans, i64 %130
  store <4 x float> %129, ptr %131, align 16, !tbaa !7088
  %132 = add i32 %24, 576
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds float, ptr %p0, i64 %133
  %135 = load <4 x float>, ptr %134, align 16, !tbaa !7086
  %136 = add nsw i64 %25, 72
  %137 = getelementptr inbounds float, ptr %T_layout_trans, i64 %136
  store <4 x float> %135, ptr %137, align 16, !tbaa !7088
  %138 = add i32 %24, 608
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds float, ptr %p0, i64 %139
  %141 = load <4 x float>, ptr %140, align 16, !tbaa !7086
  %142 = add nsw i64 %25, 76
  %143 = getelementptr inbounds float, ptr %T_layout_trans, i64 %142
  store <4 x float> %141, ptr %143, align 16, !tbaa !7088
  %144 = add i32 %24, 640
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds float, ptr %p0, i64 %145
  %147 = load <4 x float>, ptr %146, align 16, !tbaa !7086
  %148 = add nsw i64 %25, 80
  %149 = getelementptr inbounds float, ptr %T_layout_trans, i64 %148
  store <4 x float> %147, ptr %149, align 16, !tbaa !7088
  %150 = add i32 %24, 672
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds float, ptr %p0, i64 %151
  %153 = load <4 x float>, ptr %152, align 16, !tbaa !7086
  %154 = add nsw i64 %25, 84
  %155 = getelementptr inbounds float, ptr %T_layout_trans, i64 %154
  store <4 x float> %153, ptr %155, align 16, !tbaa !7088
  %156 = add i32 %24, 704
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds float, ptr %p0, i64 %157
  %159 = load <4 x float>, ptr %158, align 16, !tbaa !7086
  %160 = add nsw i64 %25, 88
  %161 = getelementptr inbounds float, ptr %T_layout_trans, i64 %160
  store <4 x float> %159, ptr %161, align 16, !tbaa !7088
  %162 = add i32 %24, 736
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds float, ptr %p0, i64 %163
  %165 = load <4 x float>, ptr %164, align 16, !tbaa !7086
  %166 = add nsw i64 %25, 92
  %167 = getelementptr inbounds float, ptr %T_layout_trans, i64 %166
  store <4 x float> %165, ptr %167, align 16, !tbaa !7088
  %168 = add i32 %24, 768
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds float, ptr %p0, i64 %169
  %171 = load <4 x float>, ptr %170, align 16, !tbaa !7086
  %172 = add nsw i64 %25, 96
  %173 = getelementptr inbounds float, ptr %T_layout_trans, i64 %172
  store <4 x float> %171, ptr %173, align 16, !tbaa !7088
  %174 = add i32 %24, 800
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds float, ptr %p0, i64 %175
  %177 = load <4 x float>, ptr %176, align 16, !tbaa !7086
  %178 = add nsw i64 %25, 100
  %179 = getelementptr inbounds float, ptr %T_layout_trans, i64 %178
  store <4 x float> %177, ptr %179, align 16, !tbaa !7088
  %180 = add i32 %24, 832
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds float, ptr %p0, i64 %181
  %183 = load <4 x float>, ptr %182, align 16, !tbaa !7086
  %184 = add nsw i64 %25, 104
  %185 = getelementptr inbounds float, ptr %T_layout_trans, i64 %184
  store <4 x float> %183, ptr %185, align 16, !tbaa !7088
  %186 = add i32 %24, 864
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds float, ptr %p0, i64 %187
  %189 = load <4 x float>, ptr %188, align 16, !tbaa !7086
  %190 = add nsw i64 %25, 108
  %191 = getelementptr inbounds float, ptr %T_layout_trans, i64 %190
  store <4 x float> %189, ptr %191, align 16, !tbaa !7088
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.preheader, %parallel_closure_entry
  ret i32 0
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_11_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.2, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.2, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.97, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.97(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.2, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 3583
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 3584)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 3584)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 3584)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next, %for_begin_ax3.preheader ]
  %15 = trunc i64 %indvars.iv to i32
  %16 = srem i32 %15, 224
  %.lhs.trunc = trunc i32 %16 to i16
  %17 = sdiv i16 %.lhs.trunc, 28
  %.sext = sext i16 %17 to i32
  %18 = shl nsw i32 %.sext, 2
  %19 = srem i32 %15, 28
  %20 = mul nsw i32 %19, 896
  %21 = sdiv i32 %15, 224
  %22 = mul nsw i32 %21, 25088
  %23 = add nsw i32 %22, %20
  %24 = add i32 %23, %18
  %25 = mul nsw i64 %indvars.iv, 112
  %26 = sext i32 %24 to i64
  %27 = getelementptr inbounds float, ptr %p0, i64 %26
  %28 = load <4 x float>, ptr %27, align 16, !tbaa !7090
  %29 = getelementptr inbounds float, ptr %T_layout_trans, i64 %25
  store <4 x float> %28, ptr %29, align 16, !tbaa !7092
  %30 = add i32 %24, 32
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds float, ptr %p0, i64 %31
  %33 = load <4 x float>, ptr %32, align 16, !tbaa !7090
  %34 = or i64 %25, 4
  %35 = getelementptr inbounds float, ptr %T_layout_trans, i64 %34
  store <4 x float> %33, ptr %35, align 16, !tbaa !7092
  %36 = add i32 %24, 64
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds float, ptr %p0, i64 %37
  %39 = load <4 x float>, ptr %38, align 16, !tbaa !7090
  %40 = or i64 %25, 8
  %41 = getelementptr inbounds float, ptr %T_layout_trans, i64 %40
  store <4 x float> %39, ptr %41, align 16, !tbaa !7092
  %42 = add i32 %24, 96
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %p0, i64 %43
  %45 = load <4 x float>, ptr %44, align 16, !tbaa !7090
  %46 = or i64 %25, 12
  %47 = getelementptr inbounds float, ptr %T_layout_trans, i64 %46
  store <4 x float> %45, ptr %47, align 16, !tbaa !7092
  %48 = add i32 %24, 128
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds float, ptr %p0, i64 %49
  %51 = load <4 x float>, ptr %50, align 16, !tbaa !7090
  %52 = add nsw i64 %25, 16
  %53 = getelementptr inbounds float, ptr %T_layout_trans, i64 %52
  store <4 x float> %51, ptr %53, align 16, !tbaa !7092
  %54 = add i32 %24, 160
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds float, ptr %p0, i64 %55
  %57 = load <4 x float>, ptr %56, align 16, !tbaa !7090
  %58 = add nsw i64 %25, 20
  %59 = getelementptr inbounds float, ptr %T_layout_trans, i64 %58
  store <4 x float> %57, ptr %59, align 16, !tbaa !7092
  %60 = add i32 %24, 192
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds float, ptr %p0, i64 %61
  %63 = load <4 x float>, ptr %62, align 16, !tbaa !7090
  %64 = add nsw i64 %25, 24
  %65 = getelementptr inbounds float, ptr %T_layout_trans, i64 %64
  store <4 x float> %63, ptr %65, align 16, !tbaa !7092
  %66 = add i32 %24, 224
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds float, ptr %p0, i64 %67
  %69 = load <4 x float>, ptr %68, align 16, !tbaa !7090
  %70 = add nsw i64 %25, 28
  %71 = getelementptr inbounds float, ptr %T_layout_trans, i64 %70
  store <4 x float> %69, ptr %71, align 16, !tbaa !7092
  %72 = add i32 %24, 256
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds float, ptr %p0, i64 %73
  %75 = load <4 x float>, ptr %74, align 16, !tbaa !7090
  %76 = add nsw i64 %25, 32
  %77 = getelementptr inbounds float, ptr %T_layout_trans, i64 %76
  store <4 x float> %75, ptr %77, align 16, !tbaa !7092
  %78 = add i32 %24, 288
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds float, ptr %p0, i64 %79
  %81 = load <4 x float>, ptr %80, align 16, !tbaa !7090
  %82 = add nsw i64 %25, 36
  %83 = getelementptr inbounds float, ptr %T_layout_trans, i64 %82
  store <4 x float> %81, ptr %83, align 16, !tbaa !7092
  %84 = add i32 %24, 320
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds float, ptr %p0, i64 %85
  %87 = load <4 x float>, ptr %86, align 16, !tbaa !7090
  %88 = add nsw i64 %25, 40
  %89 = getelementptr inbounds float, ptr %T_layout_trans, i64 %88
  store <4 x float> %87, ptr %89, align 16, !tbaa !7092
  %90 = add i32 %24, 352
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds float, ptr %p0, i64 %91
  %93 = load <4 x float>, ptr %92, align 16, !tbaa !7090
  %94 = add nsw i64 %25, 44
  %95 = getelementptr inbounds float, ptr %T_layout_trans, i64 %94
  store <4 x float> %93, ptr %95, align 16, !tbaa !7092
  %96 = add i32 %24, 384
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds float, ptr %p0, i64 %97
  %99 = load <4 x float>, ptr %98, align 16, !tbaa !7090
  %100 = add nsw i64 %25, 48
  %101 = getelementptr inbounds float, ptr %T_layout_trans, i64 %100
  store <4 x float> %99, ptr %101, align 16, !tbaa !7092
  %102 = add i32 %24, 416
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds float, ptr %p0, i64 %103
  %105 = load <4 x float>, ptr %104, align 16, !tbaa !7090
  %106 = add nsw i64 %25, 52
  %107 = getelementptr inbounds float, ptr %T_layout_trans, i64 %106
  store <4 x float> %105, ptr %107, align 16, !tbaa !7092
  %108 = add i32 %24, 448
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds float, ptr %p0, i64 %109
  %111 = load <4 x float>, ptr %110, align 16, !tbaa !7090
  %112 = add nsw i64 %25, 56
  %113 = getelementptr inbounds float, ptr %T_layout_trans, i64 %112
  store <4 x float> %111, ptr %113, align 16, !tbaa !7092
  %114 = add i32 %24, 480
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds float, ptr %p0, i64 %115
  %117 = load <4 x float>, ptr %116, align 16, !tbaa !7090
  %118 = add nsw i64 %25, 60
  %119 = getelementptr inbounds float, ptr %T_layout_trans, i64 %118
  store <4 x float> %117, ptr %119, align 16, !tbaa !7092
  %120 = add i32 %24, 512
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds float, ptr %p0, i64 %121
  %123 = load <4 x float>, ptr %122, align 16, !tbaa !7090
  %124 = add nsw i64 %25, 64
  %125 = getelementptr inbounds float, ptr %T_layout_trans, i64 %124
  store <4 x float> %123, ptr %125, align 16, !tbaa !7092
  %126 = add i32 %24, 544
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds float, ptr %p0, i64 %127
  %129 = load <4 x float>, ptr %128, align 16, !tbaa !7090
  %130 = add nsw i64 %25, 68
  %131 = getelementptr inbounds float, ptr %T_layout_trans, i64 %130
  store <4 x float> %129, ptr %131, align 16, !tbaa !7092
  %132 = add i32 %24, 576
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds float, ptr %p0, i64 %133
  %135 = load <4 x float>, ptr %134, align 16, !tbaa !7090
  %136 = add nsw i64 %25, 72
  %137 = getelementptr inbounds float, ptr %T_layout_trans, i64 %136
  store <4 x float> %135, ptr %137, align 16, !tbaa !7092
  %138 = add i32 %24, 608
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds float, ptr %p0, i64 %139
  %141 = load <4 x float>, ptr %140, align 16, !tbaa !7090
  %142 = add nsw i64 %25, 76
  %143 = getelementptr inbounds float, ptr %T_layout_trans, i64 %142
  store <4 x float> %141, ptr %143, align 16, !tbaa !7092
  %144 = add i32 %24, 640
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds float, ptr %p0, i64 %145
  %147 = load <4 x float>, ptr %146, align 16, !tbaa !7090
  %148 = add nsw i64 %25, 80
  %149 = getelementptr inbounds float, ptr %T_layout_trans, i64 %148
  store <4 x float> %147, ptr %149, align 16, !tbaa !7092
  %150 = add i32 %24, 672
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds float, ptr %p0, i64 %151
  %153 = load <4 x float>, ptr %152, align 16, !tbaa !7090
  %154 = add nsw i64 %25, 84
  %155 = getelementptr inbounds float, ptr %T_layout_trans, i64 %154
  store <4 x float> %153, ptr %155, align 16, !tbaa !7092
  %156 = add i32 %24, 704
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds float, ptr %p0, i64 %157
  %159 = load <4 x float>, ptr %158, align 16, !tbaa !7090
  %160 = add nsw i64 %25, 88
  %161 = getelementptr inbounds float, ptr %T_layout_trans, i64 %160
  store <4 x float> %159, ptr %161, align 16, !tbaa !7092
  %162 = add i32 %24, 736
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds float, ptr %p0, i64 %163
  %165 = load <4 x float>, ptr %164, align 16, !tbaa !7090
  %166 = add nsw i64 %25, 92
  %167 = getelementptr inbounds float, ptr %T_layout_trans, i64 %166
  store <4 x float> %165, ptr %167, align 16, !tbaa !7092
  %168 = add i32 %24, 768
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds float, ptr %p0, i64 %169
  %171 = load <4 x float>, ptr %170, align 16, !tbaa !7090
  %172 = add nsw i64 %25, 96
  %173 = getelementptr inbounds float, ptr %T_layout_trans, i64 %172
  store <4 x float> %171, ptr %173, align 16, !tbaa !7092
  %174 = add i32 %24, 800
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds float, ptr %p0, i64 %175
  %177 = load <4 x float>, ptr %176, align 16, !tbaa !7090
  %178 = add nsw i64 %25, 100
  %179 = getelementptr inbounds float, ptr %T_layout_trans, i64 %178
  store <4 x float> %177, ptr %179, align 16, !tbaa !7092
  %180 = add i32 %24, 832
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds float, ptr %p0, i64 %181
  %183 = load <4 x float>, ptr %182, align 16, !tbaa !7090
  %184 = add nsw i64 %25, 104
  %185 = getelementptr inbounds float, ptr %T_layout_trans, i64 %184
  store <4 x float> %183, ptr %185, align 16, !tbaa !7092
  %186 = add i32 %24, 864
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds float, ptr %p0, i64 %187
  %189 = load <4 x float>, ptr %188, align 16, !tbaa !7090
  %190 = add nsw i64 %25, 108
  %191 = getelementptr inbounds float, ptr %T_layout_trans, i64 %190
  store <4 x float> %189, ptr %191, align 16, !tbaa !7092
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.preheader, %parallel_closure_entry
  ret i32 0
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_12_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.3, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.3, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.122, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.122(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.3, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 13
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 14)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 14)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 14)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv9 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next10, %for_end_ax3 ]
  %15 = trunc i64 %indvars.iv9 to i32
  %16 = mul i32 %15, 56
  %17 = mul nsw i64 %indvars.iv9, 3584
  br label %for_begin_ax4.outer.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_begin_ax4.outer.preheader:                    ; preds = %for_begin_ax3.preheader, %for_end_ax4.outer
  %indvars.iv5 = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next6, %for_end_ax4.outer ]
  %indvars.iv5.tr = trunc i64 %indvars.iv5 to i32
  %18 = shl i32 %indvars.iv5.tr, 2
  %.scalar = add i32 %18, %16
  %19 = shl nsw i64 %indvars.iv5, 8
  %20 = add nsw i64 %19, %17
  br label %for_body_ax4.outer

for_end_ax3:                                      ; preds = %for_end_ax4.outer
  %indvars.iv.next10 = add nsw i64 %indvars.iv9, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next10 to i32
  %exitcond11.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond11.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52

for_body_ax4.outer:                               ; preds = %for_begin_ax4.outer.preheader, %for_body_ax4.outer
  %indvars.iv = phi i64 [ 0, %for_begin_ax4.outer.preheader ], [ %indvars.iv.next, %for_body_ax4.outer ]
  %21 = trunc i64 %indvars.iv to i32
  %22 = mul i32 %21, 3136
  %.scalar12 = add i32 %.scalar, %22
  %23 = insertelement <16 x i32> undef, i32 %.scalar12, i64 0
  %24 = shufflevector <16 x i32> %23, <16 x i32> poison, <16 x i32> <i32 poison, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>
  %25 = add <16 x i32> %24, <i32 poison, i32 1, i32 2, i32 3, i32 784, i32 785, i32 786, i32 787, i32 1568, i32 1569, i32 1570, i32 1571, i32 2352, i32 2353, i32 2354, i32 2355>
  %26 = sext i32 %.scalar12 to i64
  %27 = getelementptr inbounds float, ptr %p0, i64 %26
  %28 = load float, ptr %27, align 4, !tbaa !7094
  %29 = extractelement <16 x i32> %25, i64 1
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds float, ptr %p0, i64 %30
  %32 = load float, ptr %31, align 4, !tbaa !7094
  %33 = shufflevector <16 x i32> %25, <16 x i32> poison, <2 x i32> <i32 2, i32 3>
  %34 = sext <2 x i32> %33 to <2 x i64>
  %35 = extractelement <2 x i64> %34, i64 0
  %36 = getelementptr inbounds float, ptr %p0, i64 %35
  %37 = load float, ptr %36, align 4, !tbaa !7094
  %38 = extractelement <2 x i64> %34, i64 1
  %39 = getelementptr inbounds float, ptr %p0, i64 %38
  %40 = load float, ptr %39, align 4, !tbaa !7094
  %41 = extractelement <16 x i32> %25, i64 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds float, ptr %p0, i64 %42
  %44 = load float, ptr %43, align 4, !tbaa !7094
  %45 = extractelement <16 x i32> %25, i64 5
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds float, ptr %p0, i64 %46
  %48 = load float, ptr %47, align 4, !tbaa !7094
  %49 = shufflevector <16 x i32> %25, <16 x i32> poison, <2 x i32> <i32 6, i32 7>
  %50 = sext <2 x i32> %49 to <2 x i64>
  %51 = extractelement <2 x i64> %50, i64 0
  %52 = getelementptr inbounds float, ptr %p0, i64 %51
  %53 = load float, ptr %52, align 4, !tbaa !7094
  %54 = extractelement <2 x i64> %50, i64 1
  %55 = getelementptr inbounds float, ptr %p0, i64 %54
  %56 = load float, ptr %55, align 4, !tbaa !7094
  %57 = extractelement <16 x i32> %25, i64 8
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds float, ptr %p0, i64 %58
  %60 = load float, ptr %59, align 4, !tbaa !7094
  %61 = extractelement <16 x i32> %25, i64 9
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds float, ptr %p0, i64 %62
  %64 = load float, ptr %63, align 4, !tbaa !7094
  %65 = shufflevector <16 x i32> %25, <16 x i32> poison, <2 x i32> <i32 10, i32 11>
  %66 = sext <2 x i32> %65 to <2 x i64>
  %67 = extractelement <2 x i64> %66, i64 0
  %68 = getelementptr inbounds float, ptr %p0, i64 %67
  %69 = load float, ptr %68, align 4, !tbaa !7094
  %70 = extractelement <2 x i64> %66, i64 1
  %71 = getelementptr inbounds float, ptr %p0, i64 %70
  %72 = load float, ptr %71, align 4, !tbaa !7094
  %73 = extractelement <16 x i32> %25, i64 12
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds float, ptr %p0, i64 %74
  %76 = load float, ptr %75, align 4, !tbaa !7094
  %77 = extractelement <16 x i32> %25, i64 13
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds float, ptr %p0, i64 %78
  %80 = load float, ptr %79, align 4, !tbaa !7094
  %81 = shufflevector <16 x i32> %25, <16 x i32> poison, <2 x i32> <i32 14, i32 15>
  %82 = sext <2 x i32> %81 to <2 x i64>
  %83 = extractelement <2 x i64> %82, i64 0
  %84 = getelementptr inbounds float, ptr %p0, i64 %83
  %85 = load float, ptr %84, align 4, !tbaa !7094
  %86 = extractelement <2 x i64> %82, i64 1
  %87 = getelementptr inbounds float, ptr %p0, i64 %86
  %88 = load float, ptr %87, align 4, !tbaa !7094
  %89 = insertelement <16 x float> undef, float %28, i64 0
  %90 = insertelement <16 x float> %89, float %32, i64 1
  %91 = insertelement <16 x float> %90, float %37, i64 2
  %92 = insertelement <16 x float> %91, float %40, i64 3
  %93 = insertelement <16 x float> %92, float %44, i64 4
  %94 = insertelement <16 x float> %93, float %48, i64 5
  %95 = insertelement <16 x float> %94, float %53, i64 6
  %96 = insertelement <16 x float> %95, float %56, i64 7
  %97 = insertelement <16 x float> %96, float %60, i64 8
  %98 = insertelement <16 x float> %97, float %64, i64 9
  %99 = insertelement <16 x float> %98, float %69, i64 10
  %100 = insertelement <16 x float> %99, float %72, i64 11
  %101 = insertelement <16 x float> %100, float %76, i64 12
  %102 = insertelement <16 x float> %101, float %80, i64 13
  %103 = insertelement <16 x float> %102, float %85, i64 14
  %104 = insertelement <16 x float> %103, float %88, i64 15
  %105 = shl nuw nsw i64 %indvars.iv, 4
  %106 = add nuw nsw i64 %20, %105
  %107 = getelementptr inbounds float, ptr %T_layout_trans, i64 %106
  store <16 x float> %104, ptr %107, align 64, !tbaa !7096
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 16
  br i1 %exitcond.not, label %for_end_ax4.outer, label %for_body_ax4.outer, !prof !52

for_end_ax4.outer:                                ; preds = %for_body_ax4.outer
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1
  %exitcond8.not = icmp eq i64 %indvars.iv.next6, 14
  br i1 %exitcond8.not, label %for_end_ax3, label %for_begin_ax4.outer.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_13_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.4, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.4, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.147, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.147(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.4, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 27
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 28)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 28)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 28)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax4.outer.13
  %indvars.iv9 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next10, %for_end_ax4.outer.13 ]
  %15 = trunc i64 %indvars.iv9 to i32
  %16 = srem i32 %15, 14
  %17 = mul nsw i32 %16, 896
  %18 = sdiv i32 %15, 14
  %19 = mul nsw i32 %18, 100352
  %20 = add i32 %17, %19
  %21 = mul nsw i64 %indvars.iv9, 7168
  br label %for_body_ax4.outer

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax4.outer.13, %parallel_closure_entry
  ret i32 0

for_body_ax4.outer:                               ; preds = %for_body_ax4.outer, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next.113, %for_body_ax4.outer ]
  %22 = shl nuw nsw i64 %indvars.iv, 4
  %23 = trunc i64 %22 to i32
  %24 = and i32 %23, 32
  %25 = trunc i64 %indvars.iv to i32
  %26 = lshr i32 %25, 2
  %27 = mul nuw nsw i32 %26, 12544
  %28 = add i32 %20, %27
  %29 = or i32 %28, %24
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds float, ptr %p0, i64 %30
  %32 = load <16 x float>, ptr %31, align 64, !tbaa !7098
  %33 = add nsw i64 %21, %22
  %34 = getelementptr inbounds float, ptr %T_layout_trans, i64 %33
  store <16 x float> %32, ptr %34, align 64, !tbaa !7100
  %indvars.iv.next = shl i64 %indvars.iv, 4
  %35 = or i64 %indvars.iv.next, 16
  %36 = trunc i64 %35 to i32
  %37 = and i32 %36, 48
  %38 = trunc i64 %indvars.iv to i32
  %39 = lshr i32 %38, 2
  %40 = mul nuw nsw i32 %39, 12544
  %41 = add i32 %20, %40
  %42 = or i32 %41, %37
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %p0, i64 %43
  %45 = load <16 x float>, ptr %44, align 64, !tbaa !7098
  %46 = add nsw i64 %21, %35
  %47 = getelementptr inbounds float, ptr %T_layout_trans, i64 %46
  store <16 x float> %45, ptr %47, align 64, !tbaa !7100
  %indvars.iv.next.113 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.113, 32
  br i1 %exitcond.not.1, label %for_end_ax4.outer, label %for_body_ax4.outer, !prof !7085

for_end_ax4.outer:                                ; preds = %for_body_ax4.outer
  %48 = or i32 %20, 64
  %49 = or i64 %21, 512
  br label %for_body_ax4.outer.1

for_body_ax4.outer.1:                             ; preds = %for_body_ax4.outer.1, %for_end_ax4.outer
  %indvars.iv.1 = phi i64 [ 0, %for_end_ax4.outer ], [ %indvars.iv.next.1.1, %for_body_ax4.outer.1 ]
  %50 = shl nuw nsw i64 %indvars.iv.1, 4
  %51 = trunc i64 %50 to i32
  %52 = and i32 %51, 32
  %53 = trunc i64 %indvars.iv.1 to i32
  %54 = lshr i32 %53, 2
  %55 = mul nuw nsw i32 %54, 12544
  %56 = add i32 %48, %55
  %57 = or i32 %56, %52
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds float, ptr %p0, i64 %58
  %60 = load <16 x float>, ptr %59, align 64, !tbaa !7098
  %61 = add nsw i64 %49, %50
  %62 = getelementptr inbounds float, ptr %T_layout_trans, i64 %61
  store <16 x float> %60, ptr %62, align 64, !tbaa !7100
  %indvars.iv.next.1 = shl i64 %indvars.iv.1, 4
  %63 = or i64 %indvars.iv.next.1, 16
  %64 = trunc i64 %63 to i32
  %65 = and i32 %64, 48
  %66 = trunc i64 %indvars.iv.1 to i32
  %67 = lshr i32 %66, 2
  %68 = mul nuw nsw i32 %67, 12544
  %69 = add i32 %48, %68
  %70 = or i32 %69, %65
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds float, ptr %p0, i64 %71
  %73 = load <16 x float>, ptr %72, align 64, !tbaa !7098
  %74 = add nsw i64 %49, %63
  %75 = getelementptr inbounds float, ptr %T_layout_trans, i64 %74
  store <16 x float> %73, ptr %75, align 64, !tbaa !7100
  %indvars.iv.next.1.1 = add nuw nsw i64 %indvars.iv.1, 2
  %exitcond.1.not.1 = icmp eq i64 %indvars.iv.next.1.1, 32
  br i1 %exitcond.1.not.1, label %for_end_ax4.outer.1, label %for_body_ax4.outer.1, !prof !7085

for_end_ax4.outer.1:                              ; preds = %for_body_ax4.outer.1
  %76 = add i32 %20, 128
  %77 = add nsw i64 %21, 1024
  br label %for_body_ax4.outer.2

for_body_ax4.outer.2:                             ; preds = %for_body_ax4.outer.2, %for_end_ax4.outer.1
  %indvars.iv.2 = phi i64 [ 0, %for_end_ax4.outer.1 ], [ %indvars.iv.next.2.1, %for_body_ax4.outer.2 ]
  %78 = shl nuw nsw i64 %indvars.iv.2, 4
  %79 = trunc i64 %78 to i32
  %80 = and i32 %79, 32
  %81 = trunc i64 %indvars.iv.2 to i32
  %82 = lshr i32 %81, 2
  %83 = mul nuw nsw i32 %82, 12544
  %84 = add i32 %76, %83
  %85 = or i32 %84, %80
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds float, ptr %p0, i64 %86
  %88 = load <16 x float>, ptr %87, align 64, !tbaa !7098
  %89 = add nsw i64 %77, %78
  %90 = getelementptr inbounds float, ptr %T_layout_trans, i64 %89
  store <16 x float> %88, ptr %90, align 64, !tbaa !7100
  %indvars.iv.next.2 = shl i64 %indvars.iv.2, 4
  %91 = or i64 %indvars.iv.next.2, 16
  %92 = trunc i64 %91 to i32
  %93 = and i32 %92, 48
  %94 = trunc i64 %indvars.iv.2 to i32
  %95 = lshr i32 %94, 2
  %96 = mul nuw nsw i32 %95, 12544
  %97 = add i32 %76, %96
  %98 = or i32 %97, %93
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds float, ptr %p0, i64 %99
  %101 = load <16 x float>, ptr %100, align 64, !tbaa !7098
  %102 = add nsw i64 %77, %91
  %103 = getelementptr inbounds float, ptr %T_layout_trans, i64 %102
  store <16 x float> %101, ptr %103, align 64, !tbaa !7100
  %indvars.iv.next.2.1 = add nuw nsw i64 %indvars.iv.2, 2
  %exitcond.2.not.1 = icmp eq i64 %indvars.iv.next.2.1, 32
  br i1 %exitcond.2.not.1, label %for_end_ax4.outer.2, label %for_body_ax4.outer.2, !prof !7085

for_end_ax4.outer.2:                              ; preds = %for_body_ax4.outer.2
  %104 = add i32 %20, 192
  %105 = add nsw i64 %21, 1536
  br label %for_body_ax4.outer.3

for_body_ax4.outer.3:                             ; preds = %for_body_ax4.outer.3, %for_end_ax4.outer.2
  %indvars.iv.3 = phi i64 [ 0, %for_end_ax4.outer.2 ], [ %indvars.iv.next.3.1, %for_body_ax4.outer.3 ]
  %106 = shl nuw nsw i64 %indvars.iv.3, 4
  %107 = trunc i64 %106 to i32
  %108 = and i32 %107, 32
  %109 = trunc i64 %indvars.iv.3 to i32
  %110 = lshr i32 %109, 2
  %111 = mul nuw nsw i32 %110, 12544
  %112 = add i32 %104, %111
  %113 = or i32 %112, %108
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds float, ptr %p0, i64 %114
  %116 = load <16 x float>, ptr %115, align 64, !tbaa !7098
  %117 = add nsw i64 %105, %106
  %118 = getelementptr inbounds float, ptr %T_layout_trans, i64 %117
  store <16 x float> %116, ptr %118, align 64, !tbaa !7100
  %indvars.iv.next.3 = shl i64 %indvars.iv.3, 4
  %119 = or i64 %indvars.iv.next.3, 16
  %120 = trunc i64 %119 to i32
  %121 = and i32 %120, 48
  %122 = trunc i64 %indvars.iv.3 to i32
  %123 = lshr i32 %122, 2
  %124 = mul nuw nsw i32 %123, 12544
  %125 = add i32 %104, %124
  %126 = or i32 %125, %121
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds float, ptr %p0, i64 %127
  %129 = load <16 x float>, ptr %128, align 64, !tbaa !7098
  %130 = add nsw i64 %105, %119
  %131 = getelementptr inbounds float, ptr %T_layout_trans, i64 %130
  store <16 x float> %129, ptr %131, align 64, !tbaa !7100
  %indvars.iv.next.3.1 = add nuw nsw i64 %indvars.iv.3, 2
  %exitcond.3.not.1 = icmp eq i64 %indvars.iv.next.3.1, 32
  br i1 %exitcond.3.not.1, label %for_end_ax4.outer.3, label %for_body_ax4.outer.3, !prof !7085

for_end_ax4.outer.3:                              ; preds = %for_body_ax4.outer.3
  %132 = add i32 %20, 256
  %133 = add nsw i64 %21, 2048
  br label %for_body_ax4.outer.4

for_body_ax4.outer.4:                             ; preds = %for_body_ax4.outer.4, %for_end_ax4.outer.3
  %indvars.iv.4 = phi i64 [ 0, %for_end_ax4.outer.3 ], [ %indvars.iv.next.4.1, %for_body_ax4.outer.4 ]
  %134 = shl nuw nsw i64 %indvars.iv.4, 4
  %135 = trunc i64 %134 to i32
  %136 = and i32 %135, 32
  %137 = trunc i64 %indvars.iv.4 to i32
  %138 = lshr i32 %137, 2
  %139 = mul nuw nsw i32 %138, 12544
  %140 = add i32 %132, %139
  %141 = or i32 %140, %136
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds float, ptr %p0, i64 %142
  %144 = load <16 x float>, ptr %143, align 64, !tbaa !7098
  %145 = add nsw i64 %133, %134
  %146 = getelementptr inbounds float, ptr %T_layout_trans, i64 %145
  store <16 x float> %144, ptr %146, align 64, !tbaa !7100
  %indvars.iv.next.4 = shl i64 %indvars.iv.4, 4
  %147 = or i64 %indvars.iv.next.4, 16
  %148 = trunc i64 %147 to i32
  %149 = and i32 %148, 48
  %150 = trunc i64 %indvars.iv.4 to i32
  %151 = lshr i32 %150, 2
  %152 = mul nuw nsw i32 %151, 12544
  %153 = add i32 %132, %152
  %154 = or i32 %153, %149
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds float, ptr %p0, i64 %155
  %157 = load <16 x float>, ptr %156, align 64, !tbaa !7098
  %158 = add nsw i64 %133, %147
  %159 = getelementptr inbounds float, ptr %T_layout_trans, i64 %158
  store <16 x float> %157, ptr %159, align 64, !tbaa !7100
  %indvars.iv.next.4.1 = add nuw nsw i64 %indvars.iv.4, 2
  %exitcond.4.not.1 = icmp eq i64 %indvars.iv.next.4.1, 32
  br i1 %exitcond.4.not.1, label %for_end_ax4.outer.4, label %for_body_ax4.outer.4, !prof !7085

for_end_ax4.outer.4:                              ; preds = %for_body_ax4.outer.4
  %160 = add i32 %20, 320
  %161 = add nsw i64 %21, 2560
  br label %for_body_ax4.outer.5

for_body_ax4.outer.5:                             ; preds = %for_body_ax4.outer.5, %for_end_ax4.outer.4
  %indvars.iv.5 = phi i64 [ 0, %for_end_ax4.outer.4 ], [ %indvars.iv.next.5.1, %for_body_ax4.outer.5 ]
  %162 = shl nuw nsw i64 %indvars.iv.5, 4
  %163 = trunc i64 %162 to i32
  %164 = and i32 %163, 32
  %165 = trunc i64 %indvars.iv.5 to i32
  %166 = lshr i32 %165, 2
  %167 = mul nuw nsw i32 %166, 12544
  %168 = add i32 %160, %167
  %169 = or i32 %168, %164
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds float, ptr %p0, i64 %170
  %172 = load <16 x float>, ptr %171, align 64, !tbaa !7098
  %173 = add nsw i64 %161, %162
  %174 = getelementptr inbounds float, ptr %T_layout_trans, i64 %173
  store <16 x float> %172, ptr %174, align 64, !tbaa !7100
  %indvars.iv.next.5 = shl i64 %indvars.iv.5, 4
  %175 = or i64 %indvars.iv.next.5, 16
  %176 = trunc i64 %175 to i32
  %177 = and i32 %176, 48
  %178 = trunc i64 %indvars.iv.5 to i32
  %179 = lshr i32 %178, 2
  %180 = mul nuw nsw i32 %179, 12544
  %181 = add i32 %160, %180
  %182 = or i32 %181, %177
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds float, ptr %p0, i64 %183
  %185 = load <16 x float>, ptr %184, align 64, !tbaa !7098
  %186 = add nsw i64 %161, %175
  %187 = getelementptr inbounds float, ptr %T_layout_trans, i64 %186
  store <16 x float> %185, ptr %187, align 64, !tbaa !7100
  %indvars.iv.next.5.1 = add nuw nsw i64 %indvars.iv.5, 2
  %exitcond.5.not.1 = icmp eq i64 %indvars.iv.next.5.1, 32
  br i1 %exitcond.5.not.1, label %for_end_ax4.outer.5, label %for_body_ax4.outer.5, !prof !7085

for_end_ax4.outer.5:                              ; preds = %for_body_ax4.outer.5
  %188 = add i32 %20, 384
  %189 = add nsw i64 %21, 3072
  br label %for_body_ax4.outer.6

for_body_ax4.outer.6:                             ; preds = %for_body_ax4.outer.6, %for_end_ax4.outer.5
  %indvars.iv.6 = phi i64 [ 0, %for_end_ax4.outer.5 ], [ %indvars.iv.next.6.1, %for_body_ax4.outer.6 ]
  %190 = shl nuw nsw i64 %indvars.iv.6, 4
  %191 = trunc i64 %190 to i32
  %192 = and i32 %191, 32
  %193 = trunc i64 %indvars.iv.6 to i32
  %194 = lshr i32 %193, 2
  %195 = mul nuw nsw i32 %194, 12544
  %196 = add i32 %188, %195
  %197 = or i32 %196, %192
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds float, ptr %p0, i64 %198
  %200 = load <16 x float>, ptr %199, align 64, !tbaa !7098
  %201 = add nsw i64 %189, %190
  %202 = getelementptr inbounds float, ptr %T_layout_trans, i64 %201
  store <16 x float> %200, ptr %202, align 64, !tbaa !7100
  %indvars.iv.next.6 = shl i64 %indvars.iv.6, 4
  %203 = or i64 %indvars.iv.next.6, 16
  %204 = trunc i64 %203 to i32
  %205 = and i32 %204, 48
  %206 = trunc i64 %indvars.iv.6 to i32
  %207 = lshr i32 %206, 2
  %208 = mul nuw nsw i32 %207, 12544
  %209 = add i32 %188, %208
  %210 = or i32 %209, %205
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds float, ptr %p0, i64 %211
  %213 = load <16 x float>, ptr %212, align 64, !tbaa !7098
  %214 = add nsw i64 %189, %203
  %215 = getelementptr inbounds float, ptr %T_layout_trans, i64 %214
  store <16 x float> %213, ptr %215, align 64, !tbaa !7100
  %indvars.iv.next.6.1 = add nuw nsw i64 %indvars.iv.6, 2
  %exitcond.6.not.1 = icmp eq i64 %indvars.iv.next.6.1, 32
  br i1 %exitcond.6.not.1, label %for_end_ax4.outer.6, label %for_body_ax4.outer.6, !prof !7085

for_end_ax4.outer.6:                              ; preds = %for_body_ax4.outer.6
  %216 = add i32 %20, 448
  %217 = add nsw i64 %21, 3584
  br label %for_body_ax4.outer.7

for_body_ax4.outer.7:                             ; preds = %for_body_ax4.outer.7, %for_end_ax4.outer.6
  %indvars.iv.7 = phi i64 [ 0, %for_end_ax4.outer.6 ], [ %indvars.iv.next.7.1, %for_body_ax4.outer.7 ]
  %218 = shl nuw nsw i64 %indvars.iv.7, 4
  %219 = trunc i64 %218 to i32
  %220 = and i32 %219, 32
  %221 = trunc i64 %indvars.iv.7 to i32
  %222 = lshr i32 %221, 2
  %223 = mul nuw nsw i32 %222, 12544
  %224 = add i32 %216, %223
  %225 = or i32 %224, %220
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds float, ptr %p0, i64 %226
  %228 = load <16 x float>, ptr %227, align 64, !tbaa !7098
  %229 = add nsw i64 %217, %218
  %230 = getelementptr inbounds float, ptr %T_layout_trans, i64 %229
  store <16 x float> %228, ptr %230, align 64, !tbaa !7100
  %indvars.iv.next.7 = shl i64 %indvars.iv.7, 4
  %231 = or i64 %indvars.iv.next.7, 16
  %232 = trunc i64 %231 to i32
  %233 = and i32 %232, 48
  %234 = trunc i64 %indvars.iv.7 to i32
  %235 = lshr i32 %234, 2
  %236 = mul nuw nsw i32 %235, 12544
  %237 = add i32 %216, %236
  %238 = or i32 %237, %233
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds float, ptr %p0, i64 %239
  %241 = load <16 x float>, ptr %240, align 64, !tbaa !7098
  %242 = add nsw i64 %217, %231
  %243 = getelementptr inbounds float, ptr %T_layout_trans, i64 %242
  store <16 x float> %241, ptr %243, align 64, !tbaa !7100
  %indvars.iv.next.7.1 = add nuw nsw i64 %indvars.iv.7, 2
  %exitcond.7.not.1 = icmp eq i64 %indvars.iv.next.7.1, 32
  br i1 %exitcond.7.not.1, label %for_end_ax4.outer.7, label %for_body_ax4.outer.7, !prof !7085

for_end_ax4.outer.7:                              ; preds = %for_body_ax4.outer.7
  %244 = add i32 %20, 512
  %245 = add nsw i64 %21, 4096
  br label %for_body_ax4.outer.8

for_body_ax4.outer.8:                             ; preds = %for_body_ax4.outer.8, %for_end_ax4.outer.7
  %indvars.iv.8 = phi i64 [ 0, %for_end_ax4.outer.7 ], [ %indvars.iv.next.8.1, %for_body_ax4.outer.8 ]
  %246 = shl nuw nsw i64 %indvars.iv.8, 4
  %247 = trunc i64 %246 to i32
  %248 = and i32 %247, 32
  %249 = trunc i64 %indvars.iv.8 to i32
  %250 = lshr i32 %249, 2
  %251 = mul nuw nsw i32 %250, 12544
  %252 = add i32 %244, %251
  %253 = or i32 %252, %248
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds float, ptr %p0, i64 %254
  %256 = load <16 x float>, ptr %255, align 64, !tbaa !7098
  %257 = add nsw i64 %245, %246
  %258 = getelementptr inbounds float, ptr %T_layout_trans, i64 %257
  store <16 x float> %256, ptr %258, align 64, !tbaa !7100
  %indvars.iv.next.8 = shl i64 %indvars.iv.8, 4
  %259 = or i64 %indvars.iv.next.8, 16
  %260 = trunc i64 %259 to i32
  %261 = and i32 %260, 48
  %262 = trunc i64 %indvars.iv.8 to i32
  %263 = lshr i32 %262, 2
  %264 = mul nuw nsw i32 %263, 12544
  %265 = add i32 %244, %264
  %266 = or i32 %265, %261
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds float, ptr %p0, i64 %267
  %269 = load <16 x float>, ptr %268, align 64, !tbaa !7098
  %270 = add nsw i64 %245, %259
  %271 = getelementptr inbounds float, ptr %T_layout_trans, i64 %270
  store <16 x float> %269, ptr %271, align 64, !tbaa !7100
  %indvars.iv.next.8.1 = add nuw nsw i64 %indvars.iv.8, 2
  %exitcond.8.not.1 = icmp eq i64 %indvars.iv.next.8.1, 32
  br i1 %exitcond.8.not.1, label %for_end_ax4.outer.8, label %for_body_ax4.outer.8, !prof !7085

for_end_ax4.outer.8:                              ; preds = %for_body_ax4.outer.8
  %272 = add i32 %20, 576
  %273 = add nsw i64 %21, 4608
  br label %for_body_ax4.outer.9

for_body_ax4.outer.9:                             ; preds = %for_body_ax4.outer.9, %for_end_ax4.outer.8
  %indvars.iv.9 = phi i64 [ 0, %for_end_ax4.outer.8 ], [ %indvars.iv.next.9.1, %for_body_ax4.outer.9 ]
  %274 = shl nuw nsw i64 %indvars.iv.9, 4
  %275 = trunc i64 %274 to i32
  %276 = and i32 %275, 32
  %277 = trunc i64 %indvars.iv.9 to i32
  %278 = lshr i32 %277, 2
  %279 = mul nuw nsw i32 %278, 12544
  %280 = add i32 %272, %279
  %281 = or i32 %280, %276
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds float, ptr %p0, i64 %282
  %284 = load <16 x float>, ptr %283, align 64, !tbaa !7098
  %285 = add nsw i64 %273, %274
  %286 = getelementptr inbounds float, ptr %T_layout_trans, i64 %285
  store <16 x float> %284, ptr %286, align 64, !tbaa !7100
  %indvars.iv.next.9 = shl i64 %indvars.iv.9, 4
  %287 = or i64 %indvars.iv.next.9, 16
  %288 = trunc i64 %287 to i32
  %289 = and i32 %288, 48
  %290 = trunc i64 %indvars.iv.9 to i32
  %291 = lshr i32 %290, 2
  %292 = mul nuw nsw i32 %291, 12544
  %293 = add i32 %272, %292
  %294 = or i32 %293, %289
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds float, ptr %p0, i64 %295
  %297 = load <16 x float>, ptr %296, align 64, !tbaa !7098
  %298 = add nsw i64 %273, %287
  %299 = getelementptr inbounds float, ptr %T_layout_trans, i64 %298
  store <16 x float> %297, ptr %299, align 64, !tbaa !7100
  %indvars.iv.next.9.1 = add nuw nsw i64 %indvars.iv.9, 2
  %exitcond.9.not.1 = icmp eq i64 %indvars.iv.next.9.1, 32
  br i1 %exitcond.9.not.1, label %for_end_ax4.outer.9, label %for_body_ax4.outer.9, !prof !7085

for_end_ax4.outer.9:                              ; preds = %for_body_ax4.outer.9
  %300 = add i32 %20, 640
  %301 = add nsw i64 %21, 5120
  br label %for_body_ax4.outer.10

for_body_ax4.outer.10:                            ; preds = %for_body_ax4.outer.10, %for_end_ax4.outer.9
  %indvars.iv.10 = phi i64 [ 0, %for_end_ax4.outer.9 ], [ %indvars.iv.next.10.1, %for_body_ax4.outer.10 ]
  %302 = shl nuw nsw i64 %indvars.iv.10, 4
  %303 = trunc i64 %302 to i32
  %304 = and i32 %303, 32
  %305 = trunc i64 %indvars.iv.10 to i32
  %306 = lshr i32 %305, 2
  %307 = mul nuw nsw i32 %306, 12544
  %308 = add i32 %300, %307
  %309 = or i32 %308, %304
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds float, ptr %p0, i64 %310
  %312 = load <16 x float>, ptr %311, align 64, !tbaa !7098
  %313 = add nsw i64 %301, %302
  %314 = getelementptr inbounds float, ptr %T_layout_trans, i64 %313
  store <16 x float> %312, ptr %314, align 64, !tbaa !7100
  %indvars.iv.next.10 = shl i64 %indvars.iv.10, 4
  %315 = or i64 %indvars.iv.next.10, 16
  %316 = trunc i64 %315 to i32
  %317 = and i32 %316, 48
  %318 = trunc i64 %indvars.iv.10 to i32
  %319 = lshr i32 %318, 2
  %320 = mul nuw nsw i32 %319, 12544
  %321 = add i32 %300, %320
  %322 = or i32 %321, %317
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds float, ptr %p0, i64 %323
  %325 = load <16 x float>, ptr %324, align 64, !tbaa !7098
  %326 = add nsw i64 %301, %315
  %327 = getelementptr inbounds float, ptr %T_layout_trans, i64 %326
  store <16 x float> %325, ptr %327, align 64, !tbaa !7100
  %indvars.iv.next.10.1 = add nuw nsw i64 %indvars.iv.10, 2
  %exitcond.10.not.1 = icmp eq i64 %indvars.iv.next.10.1, 32
  br i1 %exitcond.10.not.1, label %for_end_ax4.outer.10, label %for_body_ax4.outer.10, !prof !7085

for_end_ax4.outer.10:                             ; preds = %for_body_ax4.outer.10
  %328 = add i32 %20, 704
  %329 = add nsw i64 %21, 5632
  br label %for_body_ax4.outer.11

for_body_ax4.outer.11:                            ; preds = %for_body_ax4.outer.11, %for_end_ax4.outer.10
  %indvars.iv.11 = phi i64 [ 0, %for_end_ax4.outer.10 ], [ %indvars.iv.next.11.1, %for_body_ax4.outer.11 ]
  %330 = shl nuw nsw i64 %indvars.iv.11, 4
  %331 = trunc i64 %330 to i32
  %332 = and i32 %331, 32
  %333 = trunc i64 %indvars.iv.11 to i32
  %334 = lshr i32 %333, 2
  %335 = mul nuw nsw i32 %334, 12544
  %336 = add i32 %328, %335
  %337 = or i32 %336, %332
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds float, ptr %p0, i64 %338
  %340 = load <16 x float>, ptr %339, align 64, !tbaa !7098
  %341 = add nsw i64 %329, %330
  %342 = getelementptr inbounds float, ptr %T_layout_trans, i64 %341
  store <16 x float> %340, ptr %342, align 64, !tbaa !7100
  %indvars.iv.next.11 = shl i64 %indvars.iv.11, 4
  %343 = or i64 %indvars.iv.next.11, 16
  %344 = trunc i64 %343 to i32
  %345 = and i32 %344, 48
  %346 = trunc i64 %indvars.iv.11 to i32
  %347 = lshr i32 %346, 2
  %348 = mul nuw nsw i32 %347, 12544
  %349 = add i32 %328, %348
  %350 = or i32 %349, %345
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds float, ptr %p0, i64 %351
  %353 = load <16 x float>, ptr %352, align 64, !tbaa !7098
  %354 = add nsw i64 %329, %343
  %355 = getelementptr inbounds float, ptr %T_layout_trans, i64 %354
  store <16 x float> %353, ptr %355, align 64, !tbaa !7100
  %indvars.iv.next.11.1 = add nuw nsw i64 %indvars.iv.11, 2
  %exitcond.11.not.1 = icmp eq i64 %indvars.iv.next.11.1, 32
  br i1 %exitcond.11.not.1, label %for_end_ax4.outer.11, label %for_body_ax4.outer.11, !prof !7085

for_end_ax4.outer.11:                             ; preds = %for_body_ax4.outer.11
  %356 = add i32 %20, 768
  %357 = add nsw i64 %21, 6144
  br label %for_body_ax4.outer.12

for_body_ax4.outer.12:                            ; preds = %for_body_ax4.outer.12, %for_end_ax4.outer.11
  %indvars.iv.12 = phi i64 [ 0, %for_end_ax4.outer.11 ], [ %indvars.iv.next.12.1, %for_body_ax4.outer.12 ]
  %358 = shl nuw nsw i64 %indvars.iv.12, 4
  %359 = trunc i64 %358 to i32
  %360 = and i32 %359, 32
  %361 = trunc i64 %indvars.iv.12 to i32
  %362 = lshr i32 %361, 2
  %363 = mul nuw nsw i32 %362, 12544
  %364 = add i32 %356, %363
  %365 = or i32 %364, %360
  %366 = sext i32 %365 to i64
  %367 = getelementptr inbounds float, ptr %p0, i64 %366
  %368 = load <16 x float>, ptr %367, align 64, !tbaa !7098
  %369 = add nsw i64 %357, %358
  %370 = getelementptr inbounds float, ptr %T_layout_trans, i64 %369
  store <16 x float> %368, ptr %370, align 64, !tbaa !7100
  %indvars.iv.next.12 = shl i64 %indvars.iv.12, 4
  %371 = or i64 %indvars.iv.next.12, 16
  %372 = trunc i64 %371 to i32
  %373 = and i32 %372, 48
  %374 = trunc i64 %indvars.iv.12 to i32
  %375 = lshr i32 %374, 2
  %376 = mul nuw nsw i32 %375, 12544
  %377 = add i32 %356, %376
  %378 = or i32 %377, %373
  %379 = sext i32 %378 to i64
  %380 = getelementptr inbounds float, ptr %p0, i64 %379
  %381 = load <16 x float>, ptr %380, align 64, !tbaa !7098
  %382 = add nsw i64 %357, %371
  %383 = getelementptr inbounds float, ptr %T_layout_trans, i64 %382
  store <16 x float> %381, ptr %383, align 64, !tbaa !7100
  %indvars.iv.next.12.1 = add nuw nsw i64 %indvars.iv.12, 2
  %exitcond.12.not.1 = icmp eq i64 %indvars.iv.next.12.1, 32
  br i1 %exitcond.12.not.1, label %for_end_ax4.outer.12, label %for_body_ax4.outer.12, !prof !7085

for_end_ax4.outer.12:                             ; preds = %for_body_ax4.outer.12
  %384 = add i32 %20, 832
  %385 = add nsw i64 %21, 6656
  br label %for_body_ax4.outer.13

for_body_ax4.outer.13:                            ; preds = %for_body_ax4.outer.13, %for_end_ax4.outer.12
  %indvars.iv.13 = phi i64 [ 0, %for_end_ax4.outer.12 ], [ %indvars.iv.next.13.1, %for_body_ax4.outer.13 ]
  %386 = shl nuw nsw i64 %indvars.iv.13, 4
  %387 = trunc i64 %386 to i32
  %388 = and i32 %387, 32
  %389 = trunc i64 %indvars.iv.13 to i32
  %390 = lshr i32 %389, 2
  %391 = mul nuw nsw i32 %390, 12544
  %392 = add i32 %384, %391
  %393 = or i32 %392, %388
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds float, ptr %p0, i64 %394
  %396 = load <16 x float>, ptr %395, align 64, !tbaa !7098
  %397 = add nsw i64 %385, %386
  %398 = getelementptr inbounds float, ptr %T_layout_trans, i64 %397
  store <16 x float> %396, ptr %398, align 64, !tbaa !7100
  %indvars.iv.next.13 = shl i64 %indvars.iv.13, 4
  %399 = or i64 %indvars.iv.next.13, 16
  %400 = trunc i64 %399 to i32
  %401 = and i32 %400, 48
  %402 = trunc i64 %indvars.iv.13 to i32
  %403 = lshr i32 %402, 2
  %404 = mul nuw nsw i32 %403, 12544
  %405 = add i32 %384, %404
  %406 = or i32 %405, %401
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds float, ptr %p0, i64 %407
  %409 = load <16 x float>, ptr %408, align 64, !tbaa !7098
  %410 = add nsw i64 %385, %399
  %411 = getelementptr inbounds float, ptr %T_layout_trans, i64 %410
  store <16 x float> %409, ptr %411, align 64, !tbaa !7100
  %indvars.iv.next.13.1 = add nuw nsw i64 %indvars.iv.13, 2
  %exitcond.13.not.1 = icmp eq i64 %indvars.iv.next.13.1, 32
  br i1 %exitcond.13.not.1, label %for_end_ax4.outer.13, label %for_body_ax4.outer.13, !prof !7085

for_end_ax4.outer.13:                             ; preds = %for_body_ax4.outer.13
  %indvars.iv.next10 = add nsw i64 %indvars.iv9, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next10 to i32
  %exitcond11.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond11.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_14_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.5, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.5, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.172, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.172(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.5, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 27
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 28)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 28)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 28)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv6 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next7, %for_end_ax3 ]
  %15 = trunc i64 %indvars.iv6 to i32
  %16 = srem i32 %15, 14
  %17 = mul nsw i32 %16, 896
  %18 = sdiv i32 %15, 14
  %19 = mul nsw i32 %18, 25088
  %20 = add i32 %17, %19
  %21 = mul nsw i64 %indvars.iv6, 1792
  br label %for_begin_ax4.outer.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_begin_ax4.outer.preheader:                    ; preds = %for_begin_ax3.preheader, %for_begin_ax4.outer.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %for_begin_ax4.outer.preheader ]
  %indvars.iv.tr = trunc i64 %indvars.iv to i32
  %22 = shl i32 %indvars.iv.tr, 6
  %23 = add i32 %20, %22
  %24 = shl nsw i64 %indvars.iv, 7
  %25 = add nsw i64 %24, %21
  %26 = sext i32 %23 to i64
  %27 = getelementptr inbounds float, ptr %p0, i64 %26
  %28 = load <16 x float>, ptr %27, align 64, !tbaa !7102
  %29 = getelementptr inbounds float, ptr %T_layout_trans, i64 %25
  store <16 x float> %28, ptr %29, align 64, !tbaa !7104
  %30 = or i32 %23, 16
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds float, ptr %p0, i64 %31
  %33 = load <16 x float>, ptr %32, align 64, !tbaa !7102
  %34 = or i64 %25, 16
  %35 = getelementptr inbounds float, ptr %T_layout_trans, i64 %34
  store <16 x float> %33, ptr %35, align 64, !tbaa !7104
  %36 = or i32 %23, 32
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds float, ptr %p0, i64 %37
  %39 = load <16 x float>, ptr %38, align 64, !tbaa !7102
  %40 = or i64 %25, 32
  %41 = getelementptr inbounds float, ptr %T_layout_trans, i64 %40
  store <16 x float> %39, ptr %41, align 64, !tbaa !7104
  %42 = or i32 %23, 48
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %p0, i64 %43
  %45 = load <16 x float>, ptr %44, align 64, !tbaa !7102
  %46 = or i64 %25, 48
  %47 = getelementptr inbounds float, ptr %T_layout_trans, i64 %46
  store <16 x float> %45, ptr %47, align 64, !tbaa !7104
  %48 = add i32 %23, 12544
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds float, ptr %p0, i64 %49
  %51 = load <16 x float>, ptr %50, align 64, !tbaa !7102
  %52 = or i64 %25, 64
  %53 = getelementptr inbounds float, ptr %T_layout_trans, i64 %52
  store <16 x float> %51, ptr %53, align 64, !tbaa !7104
  %54 = or i32 %48, 16
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds float, ptr %p0, i64 %55
  %57 = load <16 x float>, ptr %56, align 64, !tbaa !7102
  %58 = or i64 %25, 80
  %59 = getelementptr inbounds float, ptr %T_layout_trans, i64 %58
  store <16 x float> %57, ptr %59, align 64, !tbaa !7104
  %60 = or i32 %48, 32
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds float, ptr %p0, i64 %61
  %63 = load <16 x float>, ptr %62, align 64, !tbaa !7102
  %64 = or i64 %25, 96
  %65 = getelementptr inbounds float, ptr %T_layout_trans, i64 %64
  store <16 x float> %63, ptr %65, align 64, !tbaa !7104
  %66 = or i32 %48, 48
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds float, ptr %p0, i64 %67
  %69 = load <16 x float>, ptr %68, align 64, !tbaa !7102
  %70 = or i64 %25, 112
  %71 = getelementptr inbounds float, ptr %T_layout_trans, i64 %70
  store <16 x float> %69, ptr %71, align 64, !tbaa !7104
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 14
  br i1 %exitcond.not, label %for_end_ax3, label %for_begin_ax4.outer.preheader, !prof !52

for_end_ax3:                                      ; preds = %for_begin_ax4.outer.preheader
  %indvars.iv.next7 = add nsw i64 %indvars.iv6, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next7 to i32
  %exitcond8.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond8.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_15_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.6, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.6, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.197, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.197(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.6, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 13
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 14)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 14)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 14)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv6 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next7, %for_end_ax3 ]
  %15 = mul nsw i64 %indvars.iv6, 3584
  %16 = trunc i64 %indvars.iv6 to i32
  %17 = mul i32 %16, 224
  br label %for_begin_ax4.outer.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_begin_ax4.outer.preheader:                    ; preds = %for_begin_ax3.preheader, %for_begin_ax4.outer.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %for_begin_ax4.outer.preheader ]
  %indvars.iv.tr = trunc i64 %indvars.iv to i32
  %18 = shl i32 %indvars.iv.tr, 4
  %19 = add i32 %18, %17
  %20 = shl nsw i64 %indvars.iv, 8
  %21 = add nsw i64 %20, %15
  %22 = sext i32 %19 to i64
  %23 = getelementptr inbounds float, ptr %p0, i64 %22
  %24 = load <16 x float>, ptr %23, align 64, !tbaa !7106
  %25 = getelementptr inbounds float, ptr %T_layout_trans, i64 %21
  store <16 x float> %24, ptr %25, align 64, !tbaa !7108
  %26 = add i32 %19, 3136
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds float, ptr %p0, i64 %27
  %29 = load <16 x float>, ptr %28, align 64, !tbaa !7106
  %30 = or i64 %21, 16
  %31 = getelementptr inbounds float, ptr %T_layout_trans, i64 %30
  store <16 x float> %29, ptr %31, align 64, !tbaa !7108
  %32 = add i32 %19, 6272
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds float, ptr %p0, i64 %33
  %35 = load <16 x float>, ptr %34, align 64, !tbaa !7106
  %36 = or i64 %21, 32
  %37 = getelementptr inbounds float, ptr %T_layout_trans, i64 %36
  store <16 x float> %35, ptr %37, align 64, !tbaa !7108
  %38 = add i32 %19, 9408
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds float, ptr %p0, i64 %39
  %41 = load <16 x float>, ptr %40, align 64, !tbaa !7106
  %42 = or i64 %21, 48
  %43 = getelementptr inbounds float, ptr %T_layout_trans, i64 %42
  store <16 x float> %41, ptr %43, align 64, !tbaa !7108
  %44 = add i32 %19, 12544
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds float, ptr %p0, i64 %45
  %47 = load <16 x float>, ptr %46, align 64, !tbaa !7106
  %48 = or i64 %21, 64
  %49 = getelementptr inbounds float, ptr %T_layout_trans, i64 %48
  store <16 x float> %47, ptr %49, align 64, !tbaa !7108
  %50 = add i32 %19, 15680
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds float, ptr %p0, i64 %51
  %53 = load <16 x float>, ptr %52, align 64, !tbaa !7106
  %54 = or i64 %21, 80
  %55 = getelementptr inbounds float, ptr %T_layout_trans, i64 %54
  store <16 x float> %53, ptr %55, align 64, !tbaa !7108
  %56 = add i32 %19, 18816
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds float, ptr %p0, i64 %57
  %59 = load <16 x float>, ptr %58, align 64, !tbaa !7106
  %60 = or i64 %21, 96
  %61 = getelementptr inbounds float, ptr %T_layout_trans, i64 %60
  store <16 x float> %59, ptr %61, align 64, !tbaa !7108
  %62 = add i32 %19, 21952
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds float, ptr %p0, i64 %63
  %65 = load <16 x float>, ptr %64, align 64, !tbaa !7106
  %66 = or i64 %21, 112
  %67 = getelementptr inbounds float, ptr %T_layout_trans, i64 %66
  store <16 x float> %65, ptr %67, align 64, !tbaa !7108
  %68 = add i32 %19, 25088
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %p0, i64 %69
  %71 = load <16 x float>, ptr %70, align 64, !tbaa !7106
  %72 = or i64 %21, 128
  %73 = getelementptr inbounds float, ptr %T_layout_trans, i64 %72
  store <16 x float> %71, ptr %73, align 64, !tbaa !7108
  %74 = add i32 %19, 28224
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds float, ptr %p0, i64 %75
  %77 = load <16 x float>, ptr %76, align 64, !tbaa !7106
  %78 = or i64 %21, 144
  %79 = getelementptr inbounds float, ptr %T_layout_trans, i64 %78
  store <16 x float> %77, ptr %79, align 64, !tbaa !7108
  %80 = add i32 %19, 31360
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds float, ptr %p0, i64 %81
  %83 = load <16 x float>, ptr %82, align 64, !tbaa !7106
  %84 = or i64 %21, 160
  %85 = getelementptr inbounds float, ptr %T_layout_trans, i64 %84
  store <16 x float> %83, ptr %85, align 64, !tbaa !7108
  %86 = add i32 %19, 34496
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds float, ptr %p0, i64 %87
  %89 = load <16 x float>, ptr %88, align 64, !tbaa !7106
  %90 = or i64 %21, 176
  %91 = getelementptr inbounds float, ptr %T_layout_trans, i64 %90
  store <16 x float> %89, ptr %91, align 64, !tbaa !7108
  %92 = add i32 %19, 37632
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds float, ptr %p0, i64 %93
  %95 = load <16 x float>, ptr %94, align 64, !tbaa !7106
  %96 = or i64 %21, 192
  %97 = getelementptr inbounds float, ptr %T_layout_trans, i64 %96
  store <16 x float> %95, ptr %97, align 64, !tbaa !7108
  %98 = add i32 %19, 40768
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds float, ptr %p0, i64 %99
  %101 = load <16 x float>, ptr %100, align 64, !tbaa !7106
  %102 = or i64 %21, 208
  %103 = getelementptr inbounds float, ptr %T_layout_trans, i64 %102
  store <16 x float> %101, ptr %103, align 64, !tbaa !7108
  %104 = add i32 %19, 43904
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds float, ptr %p0, i64 %105
  %107 = load <16 x float>, ptr %106, align 64, !tbaa !7106
  %108 = or i64 %21, 224
  %109 = getelementptr inbounds float, ptr %T_layout_trans, i64 %108
  store <16 x float> %107, ptr %109, align 64, !tbaa !7108
  %110 = add i32 %19, 47040
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds float, ptr %p0, i64 %111
  %113 = load <16 x float>, ptr %112, align 64, !tbaa !7106
  %114 = or i64 %21, 240
  %115 = getelementptr inbounds float, ptr %T_layout_trans, i64 %114
  store <16 x float> %113, ptr %115, align 64, !tbaa !7108
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 14
  br i1 %exitcond.not, label %for_end_ax3, label %for_begin_ax4.outer.preheader, !prof !52

for_end_ax3:                                      ; preds = %for_begin_ax4.outer.preheader
  %indvars.iv.next7 = add nsw i64 %indvars.iv6, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next7 to i32
  %exitcond8.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond8.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_16_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.7, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.7, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.222, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.222(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.7, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 3583
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 3584)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 3584)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 3584)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next, %for_begin_ax3.preheader ]
  %15 = trunc i64 %indvars.iv to i32
  %16 = srem i32 %15, 224
  %.lhs.trunc = trunc i32 %16 to i16
  %17 = sdiv i16 %.lhs.trunc, 14
  %.sext = sext i16 %17 to i32
  %18 = shl nsw i32 %.sext, 2
  %19 = srem i32 %15, 14
  %20 = mul nsw i32 %19, 896
  %21 = sdiv i32 %15, 224
  %22 = mul nsw i32 %21, 12544
  %23 = add nsw i32 %22, %20
  %24 = add i32 %23, %18
  %25 = mul nsw i64 %indvars.iv, 56
  %26 = sext i32 %24 to i64
  %27 = getelementptr inbounds float, ptr %p0, i64 %26
  %28 = load <4 x float>, ptr %27, align 16, !tbaa !7110
  %29 = getelementptr inbounds float, ptr %T_layout_trans, i64 %25
  store <4 x float> %28, ptr %29, align 16, !tbaa !7112
  %30 = add i32 %24, 64
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds float, ptr %p0, i64 %31
  %33 = load <4 x float>, ptr %32, align 16, !tbaa !7110
  %34 = or i64 %25, 4
  %35 = getelementptr inbounds float, ptr %T_layout_trans, i64 %34
  store <4 x float> %33, ptr %35, align 16, !tbaa !7112
  %36 = add i32 %24, 128
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds float, ptr %p0, i64 %37
  %39 = load <4 x float>, ptr %38, align 16, !tbaa !7110
  %40 = add nsw i64 %25, 8
  %41 = getelementptr inbounds float, ptr %T_layout_trans, i64 %40
  store <4 x float> %39, ptr %41, align 16, !tbaa !7112
  %42 = add i32 %24, 192
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %p0, i64 %43
  %45 = load <4 x float>, ptr %44, align 16, !tbaa !7110
  %46 = add nsw i64 %25, 12
  %47 = getelementptr inbounds float, ptr %T_layout_trans, i64 %46
  store <4 x float> %45, ptr %47, align 16, !tbaa !7112
  %48 = add i32 %24, 256
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds float, ptr %p0, i64 %49
  %51 = load <4 x float>, ptr %50, align 16, !tbaa !7110
  %52 = add nsw i64 %25, 16
  %53 = getelementptr inbounds float, ptr %T_layout_trans, i64 %52
  store <4 x float> %51, ptr %53, align 16, !tbaa !7112
  %54 = add i32 %24, 320
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds float, ptr %p0, i64 %55
  %57 = load <4 x float>, ptr %56, align 16, !tbaa !7110
  %58 = add nsw i64 %25, 20
  %59 = getelementptr inbounds float, ptr %T_layout_trans, i64 %58
  store <4 x float> %57, ptr %59, align 16, !tbaa !7112
  %60 = add i32 %24, 384
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds float, ptr %p0, i64 %61
  %63 = load <4 x float>, ptr %62, align 16, !tbaa !7110
  %64 = add nsw i64 %25, 24
  %65 = getelementptr inbounds float, ptr %T_layout_trans, i64 %64
  store <4 x float> %63, ptr %65, align 16, !tbaa !7112
  %66 = add i32 %24, 448
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds float, ptr %p0, i64 %67
  %69 = load <4 x float>, ptr %68, align 16, !tbaa !7110
  %70 = add nsw i64 %25, 28
  %71 = getelementptr inbounds float, ptr %T_layout_trans, i64 %70
  store <4 x float> %69, ptr %71, align 16, !tbaa !7112
  %72 = add i32 %24, 512
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds float, ptr %p0, i64 %73
  %75 = load <4 x float>, ptr %74, align 16, !tbaa !7110
  %76 = add nsw i64 %25, 32
  %77 = getelementptr inbounds float, ptr %T_layout_trans, i64 %76
  store <4 x float> %75, ptr %77, align 16, !tbaa !7112
  %78 = add i32 %24, 576
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds float, ptr %p0, i64 %79
  %81 = load <4 x float>, ptr %80, align 16, !tbaa !7110
  %82 = add nsw i64 %25, 36
  %83 = getelementptr inbounds float, ptr %T_layout_trans, i64 %82
  store <4 x float> %81, ptr %83, align 16, !tbaa !7112
  %84 = add i32 %24, 640
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds float, ptr %p0, i64 %85
  %87 = load <4 x float>, ptr %86, align 16, !tbaa !7110
  %88 = add nsw i64 %25, 40
  %89 = getelementptr inbounds float, ptr %T_layout_trans, i64 %88
  store <4 x float> %87, ptr %89, align 16, !tbaa !7112
  %90 = add i32 %24, 704
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds float, ptr %p0, i64 %91
  %93 = load <4 x float>, ptr %92, align 16, !tbaa !7110
  %94 = add nsw i64 %25, 44
  %95 = getelementptr inbounds float, ptr %T_layout_trans, i64 %94
  store <4 x float> %93, ptr %95, align 16, !tbaa !7112
  %96 = add i32 %24, 768
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds float, ptr %p0, i64 %97
  %99 = load <4 x float>, ptr %98, align 16, !tbaa !7110
  %100 = add nsw i64 %25, 48
  %101 = getelementptr inbounds float, ptr %T_layout_trans, i64 %100
  store <4 x float> %99, ptr %101, align 16, !tbaa !7112
  %102 = add i32 %24, 832
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds float, ptr %p0, i64 %103
  %105 = load <4 x float>, ptr %104, align 16, !tbaa !7110
  %106 = add nsw i64 %25, 52
  %107 = getelementptr inbounds float, ptr %T_layout_trans, i64 %106
  store <4 x float> %105, ptr %107, align 16, !tbaa !7112
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.preheader, %parallel_closure_entry
  ret i32 0
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_17_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.8, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.8, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.247, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.247(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.8, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 13
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 14)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 14)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 14)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax4.outer.13
  %indvars.iv9 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next10, %for_end_ax4.outer.13 ]
  %15 = mul nsw i64 %indvars.iv9, 896
  %16 = mul nsw i64 %indvars.iv9, 14336
  %17 = trunc i64 %15 to i32
  br label %for_body_ax4.outer

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax4.outer.13, %parallel_closure_entry
  ret i32 0

for_body_ax4.outer:                               ; preds = %for_body_ax4.outer, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next.113, %for_body_ax4.outer ]
  %18 = shl nuw nsw i64 %indvars.iv, 4
  %19 = trunc i64 %18 to i32
  %20 = and i32 %19, 32
  %21 = trunc i64 %indvars.iv to i32
  %22 = lshr i32 %21, 2
  %23 = mul nuw nsw i32 %22, 12544
  %24 = add i32 %23, %17
  %25 = or i32 %24, %20
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds float, ptr %p0, i64 %26
  %28 = load <16 x float>, ptr %27, align 64, !tbaa !7114
  %29 = add nsw i64 %16, %18
  %30 = getelementptr inbounds float, ptr %T_layout_trans, i64 %29
  store <16 x float> %28, ptr %30, align 64, !tbaa !7116
  %indvars.iv.next = shl i64 %indvars.iv, 4
  %31 = or i64 %indvars.iv.next, 16
  %32 = trunc i64 %31 to i32
  %33 = and i32 %32, 48
  %34 = trunc i64 %indvars.iv to i32
  %35 = lshr i32 %34, 2
  %36 = mul nuw nsw i32 %35, 12544
  %37 = add i32 %36, %17
  %38 = or i32 %37, %33
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds float, ptr %p0, i64 %39
  %41 = load <16 x float>, ptr %40, align 64, !tbaa !7114
  %42 = add nsw i64 %16, %31
  %43 = getelementptr inbounds float, ptr %T_layout_trans, i64 %42
  store <16 x float> %41, ptr %43, align 64, !tbaa !7116
  %indvars.iv.next.113 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.113, 64
  br i1 %exitcond.not.1, label %for_end_ax4.outer, label %for_body_ax4.outer, !prof !7085

for_end_ax4.outer:                                ; preds = %for_body_ax4.outer
  %44 = or i64 %16, 1024
  %45 = trunc i64 %15 to i32
  %46 = or i32 %45, 64
  br label %for_body_ax4.outer.1

for_body_ax4.outer.1:                             ; preds = %for_body_ax4.outer.1, %for_end_ax4.outer
  %indvars.iv.1 = phi i64 [ 0, %for_end_ax4.outer ], [ %indvars.iv.next.1.1, %for_body_ax4.outer.1 ]
  %47 = shl nuw nsw i64 %indvars.iv.1, 4
  %48 = trunc i64 %47 to i32
  %49 = and i32 %48, 32
  %50 = trunc i64 %indvars.iv.1 to i32
  %51 = lshr i32 %50, 2
  %52 = mul nuw nsw i32 %51, 12544
  %53 = add i32 %46, %52
  %54 = or i32 %53, %49
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds float, ptr %p0, i64 %55
  %57 = load <16 x float>, ptr %56, align 64, !tbaa !7114
  %58 = add nsw i64 %44, %47
  %59 = getelementptr inbounds float, ptr %T_layout_trans, i64 %58
  store <16 x float> %57, ptr %59, align 64, !tbaa !7116
  %indvars.iv.next.1 = shl i64 %indvars.iv.1, 4
  %60 = or i64 %indvars.iv.next.1, 16
  %61 = trunc i64 %60 to i32
  %62 = and i32 %61, 48
  %63 = trunc i64 %indvars.iv.1 to i32
  %64 = lshr i32 %63, 2
  %65 = mul nuw nsw i32 %64, 12544
  %66 = add i32 %46, %65
  %67 = or i32 %66, %62
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds float, ptr %p0, i64 %68
  %70 = load <16 x float>, ptr %69, align 64, !tbaa !7114
  %71 = add nsw i64 %44, %60
  %72 = getelementptr inbounds float, ptr %T_layout_trans, i64 %71
  store <16 x float> %70, ptr %72, align 64, !tbaa !7116
  %indvars.iv.next.1.1 = add nuw nsw i64 %indvars.iv.1, 2
  %exitcond.1.not.1 = icmp eq i64 %indvars.iv.next.1.1, 64
  br i1 %exitcond.1.not.1, label %for_end_ax4.outer.1, label %for_body_ax4.outer.1, !prof !7085

for_end_ax4.outer.1:                              ; preds = %for_body_ax4.outer.1
  %73 = add i32 %17, 128
  %74 = add nsw i64 %16, 2048
  br label %for_body_ax4.outer.2

for_body_ax4.outer.2:                             ; preds = %for_body_ax4.outer.2, %for_end_ax4.outer.1
  %indvars.iv.2 = phi i64 [ 0, %for_end_ax4.outer.1 ], [ %indvars.iv.next.2.1, %for_body_ax4.outer.2 ]
  %75 = shl nuw nsw i64 %indvars.iv.2, 4
  %76 = trunc i64 %75 to i32
  %77 = and i32 %76, 32
  %78 = trunc i64 %indvars.iv.2 to i32
  %79 = lshr i32 %78, 2
  %80 = mul nuw nsw i32 %79, 12544
  %81 = add i32 %73, %80
  %82 = or i32 %81, %77
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds float, ptr %p0, i64 %83
  %85 = load <16 x float>, ptr %84, align 64, !tbaa !7114
  %86 = add nsw i64 %74, %75
  %87 = getelementptr inbounds float, ptr %T_layout_trans, i64 %86
  store <16 x float> %85, ptr %87, align 64, !tbaa !7116
  %indvars.iv.next.2 = shl i64 %indvars.iv.2, 4
  %88 = or i64 %indvars.iv.next.2, 16
  %89 = trunc i64 %88 to i32
  %90 = and i32 %89, 48
  %91 = trunc i64 %indvars.iv.2 to i32
  %92 = lshr i32 %91, 2
  %93 = mul nuw nsw i32 %92, 12544
  %94 = add i32 %73, %93
  %95 = or i32 %94, %90
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds float, ptr %p0, i64 %96
  %98 = load <16 x float>, ptr %97, align 64, !tbaa !7114
  %99 = add nsw i64 %74, %88
  %100 = getelementptr inbounds float, ptr %T_layout_trans, i64 %99
  store <16 x float> %98, ptr %100, align 64, !tbaa !7116
  %indvars.iv.next.2.1 = add nuw nsw i64 %indvars.iv.2, 2
  %exitcond.2.not.1 = icmp eq i64 %indvars.iv.next.2.1, 64
  br i1 %exitcond.2.not.1, label %for_end_ax4.outer.2, label %for_body_ax4.outer.2, !prof !7085

for_end_ax4.outer.2:                              ; preds = %for_body_ax4.outer.2
  %101 = add i32 %17, 192
  %102 = add nsw i64 %16, 3072
  br label %for_body_ax4.outer.3

for_body_ax4.outer.3:                             ; preds = %for_body_ax4.outer.3, %for_end_ax4.outer.2
  %indvars.iv.3 = phi i64 [ 0, %for_end_ax4.outer.2 ], [ %indvars.iv.next.3.1, %for_body_ax4.outer.3 ]
  %103 = shl nuw nsw i64 %indvars.iv.3, 4
  %104 = trunc i64 %103 to i32
  %105 = and i32 %104, 32
  %106 = trunc i64 %indvars.iv.3 to i32
  %107 = lshr i32 %106, 2
  %108 = mul nuw nsw i32 %107, 12544
  %109 = add i32 %101, %108
  %110 = or i32 %109, %105
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds float, ptr %p0, i64 %111
  %113 = load <16 x float>, ptr %112, align 64, !tbaa !7114
  %114 = add nsw i64 %102, %103
  %115 = getelementptr inbounds float, ptr %T_layout_trans, i64 %114
  store <16 x float> %113, ptr %115, align 64, !tbaa !7116
  %indvars.iv.next.3 = shl i64 %indvars.iv.3, 4
  %116 = or i64 %indvars.iv.next.3, 16
  %117 = trunc i64 %116 to i32
  %118 = and i32 %117, 48
  %119 = trunc i64 %indvars.iv.3 to i32
  %120 = lshr i32 %119, 2
  %121 = mul nuw nsw i32 %120, 12544
  %122 = add i32 %101, %121
  %123 = or i32 %122, %118
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds float, ptr %p0, i64 %124
  %126 = load <16 x float>, ptr %125, align 64, !tbaa !7114
  %127 = add nsw i64 %102, %116
  %128 = getelementptr inbounds float, ptr %T_layout_trans, i64 %127
  store <16 x float> %126, ptr %128, align 64, !tbaa !7116
  %indvars.iv.next.3.1 = add nuw nsw i64 %indvars.iv.3, 2
  %exitcond.3.not.1 = icmp eq i64 %indvars.iv.next.3.1, 64
  br i1 %exitcond.3.not.1, label %for_end_ax4.outer.3, label %for_body_ax4.outer.3, !prof !7085

for_end_ax4.outer.3:                              ; preds = %for_body_ax4.outer.3
  %129 = add i32 %17, 256
  %130 = add nsw i64 %16, 4096
  br label %for_body_ax4.outer.4

for_body_ax4.outer.4:                             ; preds = %for_body_ax4.outer.4, %for_end_ax4.outer.3
  %indvars.iv.4 = phi i64 [ 0, %for_end_ax4.outer.3 ], [ %indvars.iv.next.4.1, %for_body_ax4.outer.4 ]
  %131 = shl nuw nsw i64 %indvars.iv.4, 4
  %132 = trunc i64 %131 to i32
  %133 = and i32 %132, 32
  %134 = trunc i64 %indvars.iv.4 to i32
  %135 = lshr i32 %134, 2
  %136 = mul nuw nsw i32 %135, 12544
  %137 = add i32 %129, %136
  %138 = or i32 %137, %133
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds float, ptr %p0, i64 %139
  %141 = load <16 x float>, ptr %140, align 64, !tbaa !7114
  %142 = add nsw i64 %130, %131
  %143 = getelementptr inbounds float, ptr %T_layout_trans, i64 %142
  store <16 x float> %141, ptr %143, align 64, !tbaa !7116
  %indvars.iv.next.4 = shl i64 %indvars.iv.4, 4
  %144 = or i64 %indvars.iv.next.4, 16
  %145 = trunc i64 %144 to i32
  %146 = and i32 %145, 48
  %147 = trunc i64 %indvars.iv.4 to i32
  %148 = lshr i32 %147, 2
  %149 = mul nuw nsw i32 %148, 12544
  %150 = add i32 %129, %149
  %151 = or i32 %150, %146
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds float, ptr %p0, i64 %152
  %154 = load <16 x float>, ptr %153, align 64, !tbaa !7114
  %155 = add nsw i64 %130, %144
  %156 = getelementptr inbounds float, ptr %T_layout_trans, i64 %155
  store <16 x float> %154, ptr %156, align 64, !tbaa !7116
  %indvars.iv.next.4.1 = add nuw nsw i64 %indvars.iv.4, 2
  %exitcond.4.not.1 = icmp eq i64 %indvars.iv.next.4.1, 64
  br i1 %exitcond.4.not.1, label %for_end_ax4.outer.4, label %for_body_ax4.outer.4, !prof !7085

for_end_ax4.outer.4:                              ; preds = %for_body_ax4.outer.4
  %157 = add i32 %17, 320
  %158 = add nsw i64 %16, 5120
  br label %for_body_ax4.outer.5

for_body_ax4.outer.5:                             ; preds = %for_body_ax4.outer.5, %for_end_ax4.outer.4
  %indvars.iv.5 = phi i64 [ 0, %for_end_ax4.outer.4 ], [ %indvars.iv.next.5.1, %for_body_ax4.outer.5 ]
  %159 = shl nuw nsw i64 %indvars.iv.5, 4
  %160 = trunc i64 %159 to i32
  %161 = and i32 %160, 32
  %162 = trunc i64 %indvars.iv.5 to i32
  %163 = lshr i32 %162, 2
  %164 = mul nuw nsw i32 %163, 12544
  %165 = add i32 %157, %164
  %166 = or i32 %165, %161
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds float, ptr %p0, i64 %167
  %169 = load <16 x float>, ptr %168, align 64, !tbaa !7114
  %170 = add nsw i64 %158, %159
  %171 = getelementptr inbounds float, ptr %T_layout_trans, i64 %170
  store <16 x float> %169, ptr %171, align 64, !tbaa !7116
  %indvars.iv.next.5 = shl i64 %indvars.iv.5, 4
  %172 = or i64 %indvars.iv.next.5, 16
  %173 = trunc i64 %172 to i32
  %174 = and i32 %173, 48
  %175 = trunc i64 %indvars.iv.5 to i32
  %176 = lshr i32 %175, 2
  %177 = mul nuw nsw i32 %176, 12544
  %178 = add i32 %157, %177
  %179 = or i32 %178, %174
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds float, ptr %p0, i64 %180
  %182 = load <16 x float>, ptr %181, align 64, !tbaa !7114
  %183 = add nsw i64 %158, %172
  %184 = getelementptr inbounds float, ptr %T_layout_trans, i64 %183
  store <16 x float> %182, ptr %184, align 64, !tbaa !7116
  %indvars.iv.next.5.1 = add nuw nsw i64 %indvars.iv.5, 2
  %exitcond.5.not.1 = icmp eq i64 %indvars.iv.next.5.1, 64
  br i1 %exitcond.5.not.1, label %for_end_ax4.outer.5, label %for_body_ax4.outer.5, !prof !7085

for_end_ax4.outer.5:                              ; preds = %for_body_ax4.outer.5
  %185 = add i32 %17, 384
  %186 = add nsw i64 %16, 6144
  br label %for_body_ax4.outer.6

for_body_ax4.outer.6:                             ; preds = %for_body_ax4.outer.6, %for_end_ax4.outer.5
  %indvars.iv.6 = phi i64 [ 0, %for_end_ax4.outer.5 ], [ %indvars.iv.next.6.1, %for_body_ax4.outer.6 ]
  %187 = shl nuw nsw i64 %indvars.iv.6, 4
  %188 = trunc i64 %187 to i32
  %189 = and i32 %188, 32
  %190 = trunc i64 %indvars.iv.6 to i32
  %191 = lshr i32 %190, 2
  %192 = mul nuw nsw i32 %191, 12544
  %193 = add i32 %185, %192
  %194 = or i32 %193, %189
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds float, ptr %p0, i64 %195
  %197 = load <16 x float>, ptr %196, align 64, !tbaa !7114
  %198 = add nsw i64 %186, %187
  %199 = getelementptr inbounds float, ptr %T_layout_trans, i64 %198
  store <16 x float> %197, ptr %199, align 64, !tbaa !7116
  %indvars.iv.next.6 = shl i64 %indvars.iv.6, 4
  %200 = or i64 %indvars.iv.next.6, 16
  %201 = trunc i64 %200 to i32
  %202 = and i32 %201, 48
  %203 = trunc i64 %indvars.iv.6 to i32
  %204 = lshr i32 %203, 2
  %205 = mul nuw nsw i32 %204, 12544
  %206 = add i32 %185, %205
  %207 = or i32 %206, %202
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds float, ptr %p0, i64 %208
  %210 = load <16 x float>, ptr %209, align 64, !tbaa !7114
  %211 = add nsw i64 %186, %200
  %212 = getelementptr inbounds float, ptr %T_layout_trans, i64 %211
  store <16 x float> %210, ptr %212, align 64, !tbaa !7116
  %indvars.iv.next.6.1 = add nuw nsw i64 %indvars.iv.6, 2
  %exitcond.6.not.1 = icmp eq i64 %indvars.iv.next.6.1, 64
  br i1 %exitcond.6.not.1, label %for_end_ax4.outer.6, label %for_body_ax4.outer.6, !prof !7085

for_end_ax4.outer.6:                              ; preds = %for_body_ax4.outer.6
  %213 = add i32 %17, 448
  %214 = add nsw i64 %16, 7168
  br label %for_body_ax4.outer.7

for_body_ax4.outer.7:                             ; preds = %for_body_ax4.outer.7, %for_end_ax4.outer.6
  %indvars.iv.7 = phi i64 [ 0, %for_end_ax4.outer.6 ], [ %indvars.iv.next.7.1, %for_body_ax4.outer.7 ]
  %215 = shl nuw nsw i64 %indvars.iv.7, 4
  %216 = trunc i64 %215 to i32
  %217 = and i32 %216, 32
  %218 = trunc i64 %indvars.iv.7 to i32
  %219 = lshr i32 %218, 2
  %220 = mul nuw nsw i32 %219, 12544
  %221 = add i32 %213, %220
  %222 = or i32 %221, %217
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds float, ptr %p0, i64 %223
  %225 = load <16 x float>, ptr %224, align 64, !tbaa !7114
  %226 = add nsw i64 %214, %215
  %227 = getelementptr inbounds float, ptr %T_layout_trans, i64 %226
  store <16 x float> %225, ptr %227, align 64, !tbaa !7116
  %indvars.iv.next.7 = shl i64 %indvars.iv.7, 4
  %228 = or i64 %indvars.iv.next.7, 16
  %229 = trunc i64 %228 to i32
  %230 = and i32 %229, 48
  %231 = trunc i64 %indvars.iv.7 to i32
  %232 = lshr i32 %231, 2
  %233 = mul nuw nsw i32 %232, 12544
  %234 = add i32 %213, %233
  %235 = or i32 %234, %230
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds float, ptr %p0, i64 %236
  %238 = load <16 x float>, ptr %237, align 64, !tbaa !7114
  %239 = add nsw i64 %214, %228
  %240 = getelementptr inbounds float, ptr %T_layout_trans, i64 %239
  store <16 x float> %238, ptr %240, align 64, !tbaa !7116
  %indvars.iv.next.7.1 = add nuw nsw i64 %indvars.iv.7, 2
  %exitcond.7.not.1 = icmp eq i64 %indvars.iv.next.7.1, 64
  br i1 %exitcond.7.not.1, label %for_end_ax4.outer.7, label %for_body_ax4.outer.7, !prof !7085

for_end_ax4.outer.7:                              ; preds = %for_body_ax4.outer.7
  %241 = add i32 %17, 512
  %242 = add nsw i64 %16, 8192
  br label %for_body_ax4.outer.8

for_body_ax4.outer.8:                             ; preds = %for_body_ax4.outer.8, %for_end_ax4.outer.7
  %indvars.iv.8 = phi i64 [ 0, %for_end_ax4.outer.7 ], [ %indvars.iv.next.8.1, %for_body_ax4.outer.8 ]
  %243 = shl nuw nsw i64 %indvars.iv.8, 4
  %244 = trunc i64 %243 to i32
  %245 = and i32 %244, 32
  %246 = trunc i64 %indvars.iv.8 to i32
  %247 = lshr i32 %246, 2
  %248 = mul nuw nsw i32 %247, 12544
  %249 = add i32 %241, %248
  %250 = or i32 %249, %245
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds float, ptr %p0, i64 %251
  %253 = load <16 x float>, ptr %252, align 64, !tbaa !7114
  %254 = add nsw i64 %242, %243
  %255 = getelementptr inbounds float, ptr %T_layout_trans, i64 %254
  store <16 x float> %253, ptr %255, align 64, !tbaa !7116
  %indvars.iv.next.8 = shl i64 %indvars.iv.8, 4
  %256 = or i64 %indvars.iv.next.8, 16
  %257 = trunc i64 %256 to i32
  %258 = and i32 %257, 48
  %259 = trunc i64 %indvars.iv.8 to i32
  %260 = lshr i32 %259, 2
  %261 = mul nuw nsw i32 %260, 12544
  %262 = add i32 %241, %261
  %263 = or i32 %262, %258
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds float, ptr %p0, i64 %264
  %266 = load <16 x float>, ptr %265, align 64, !tbaa !7114
  %267 = add nsw i64 %242, %256
  %268 = getelementptr inbounds float, ptr %T_layout_trans, i64 %267
  store <16 x float> %266, ptr %268, align 64, !tbaa !7116
  %indvars.iv.next.8.1 = add nuw nsw i64 %indvars.iv.8, 2
  %exitcond.8.not.1 = icmp eq i64 %indvars.iv.next.8.1, 64
  br i1 %exitcond.8.not.1, label %for_end_ax4.outer.8, label %for_body_ax4.outer.8, !prof !7085

for_end_ax4.outer.8:                              ; preds = %for_body_ax4.outer.8
  %269 = add i32 %17, 576
  %270 = add nsw i64 %16, 9216
  br label %for_body_ax4.outer.9

for_body_ax4.outer.9:                             ; preds = %for_body_ax4.outer.9, %for_end_ax4.outer.8
  %indvars.iv.9 = phi i64 [ 0, %for_end_ax4.outer.8 ], [ %indvars.iv.next.9.1, %for_body_ax4.outer.9 ]
  %271 = shl nuw nsw i64 %indvars.iv.9, 4
  %272 = trunc i64 %271 to i32
  %273 = and i32 %272, 32
  %274 = trunc i64 %indvars.iv.9 to i32
  %275 = lshr i32 %274, 2
  %276 = mul nuw nsw i32 %275, 12544
  %277 = add i32 %269, %276
  %278 = or i32 %277, %273
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds float, ptr %p0, i64 %279
  %281 = load <16 x float>, ptr %280, align 64, !tbaa !7114
  %282 = add nsw i64 %270, %271
  %283 = getelementptr inbounds float, ptr %T_layout_trans, i64 %282
  store <16 x float> %281, ptr %283, align 64, !tbaa !7116
  %indvars.iv.next.9 = shl i64 %indvars.iv.9, 4
  %284 = or i64 %indvars.iv.next.9, 16
  %285 = trunc i64 %284 to i32
  %286 = and i32 %285, 48
  %287 = trunc i64 %indvars.iv.9 to i32
  %288 = lshr i32 %287, 2
  %289 = mul nuw nsw i32 %288, 12544
  %290 = add i32 %269, %289
  %291 = or i32 %290, %286
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds float, ptr %p0, i64 %292
  %294 = load <16 x float>, ptr %293, align 64, !tbaa !7114
  %295 = add nsw i64 %270, %284
  %296 = getelementptr inbounds float, ptr %T_layout_trans, i64 %295
  store <16 x float> %294, ptr %296, align 64, !tbaa !7116
  %indvars.iv.next.9.1 = add nuw nsw i64 %indvars.iv.9, 2
  %exitcond.9.not.1 = icmp eq i64 %indvars.iv.next.9.1, 64
  br i1 %exitcond.9.not.1, label %for_end_ax4.outer.9, label %for_body_ax4.outer.9, !prof !7085

for_end_ax4.outer.9:                              ; preds = %for_body_ax4.outer.9
  %297 = add i32 %17, 640
  %298 = add nsw i64 %16, 10240
  br label %for_body_ax4.outer.10

for_body_ax4.outer.10:                            ; preds = %for_body_ax4.outer.10, %for_end_ax4.outer.9
  %indvars.iv.10 = phi i64 [ 0, %for_end_ax4.outer.9 ], [ %indvars.iv.next.10.1, %for_body_ax4.outer.10 ]
  %299 = shl nuw nsw i64 %indvars.iv.10, 4
  %300 = trunc i64 %299 to i32
  %301 = and i32 %300, 32
  %302 = trunc i64 %indvars.iv.10 to i32
  %303 = lshr i32 %302, 2
  %304 = mul nuw nsw i32 %303, 12544
  %305 = add i32 %297, %304
  %306 = or i32 %305, %301
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds float, ptr %p0, i64 %307
  %309 = load <16 x float>, ptr %308, align 64, !tbaa !7114
  %310 = add nsw i64 %298, %299
  %311 = getelementptr inbounds float, ptr %T_layout_trans, i64 %310
  store <16 x float> %309, ptr %311, align 64, !tbaa !7116
  %indvars.iv.next.10 = shl i64 %indvars.iv.10, 4
  %312 = or i64 %indvars.iv.next.10, 16
  %313 = trunc i64 %312 to i32
  %314 = and i32 %313, 48
  %315 = trunc i64 %indvars.iv.10 to i32
  %316 = lshr i32 %315, 2
  %317 = mul nuw nsw i32 %316, 12544
  %318 = add i32 %297, %317
  %319 = or i32 %318, %314
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds float, ptr %p0, i64 %320
  %322 = load <16 x float>, ptr %321, align 64, !tbaa !7114
  %323 = add nsw i64 %298, %312
  %324 = getelementptr inbounds float, ptr %T_layout_trans, i64 %323
  store <16 x float> %322, ptr %324, align 64, !tbaa !7116
  %indvars.iv.next.10.1 = add nuw nsw i64 %indvars.iv.10, 2
  %exitcond.10.not.1 = icmp eq i64 %indvars.iv.next.10.1, 64
  br i1 %exitcond.10.not.1, label %for_end_ax4.outer.10, label %for_body_ax4.outer.10, !prof !7085

for_end_ax4.outer.10:                             ; preds = %for_body_ax4.outer.10
  %325 = add i32 %17, 704
  %326 = add nsw i64 %16, 11264
  br label %for_body_ax4.outer.11

for_body_ax4.outer.11:                            ; preds = %for_body_ax4.outer.11, %for_end_ax4.outer.10
  %indvars.iv.11 = phi i64 [ 0, %for_end_ax4.outer.10 ], [ %indvars.iv.next.11.1, %for_body_ax4.outer.11 ]
  %327 = shl nuw nsw i64 %indvars.iv.11, 4
  %328 = trunc i64 %327 to i32
  %329 = and i32 %328, 32
  %330 = trunc i64 %indvars.iv.11 to i32
  %331 = lshr i32 %330, 2
  %332 = mul nuw nsw i32 %331, 12544
  %333 = add i32 %325, %332
  %334 = or i32 %333, %329
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds float, ptr %p0, i64 %335
  %337 = load <16 x float>, ptr %336, align 64, !tbaa !7114
  %338 = add nsw i64 %326, %327
  %339 = getelementptr inbounds float, ptr %T_layout_trans, i64 %338
  store <16 x float> %337, ptr %339, align 64, !tbaa !7116
  %indvars.iv.next.11 = shl i64 %indvars.iv.11, 4
  %340 = or i64 %indvars.iv.next.11, 16
  %341 = trunc i64 %340 to i32
  %342 = and i32 %341, 48
  %343 = trunc i64 %indvars.iv.11 to i32
  %344 = lshr i32 %343, 2
  %345 = mul nuw nsw i32 %344, 12544
  %346 = add i32 %325, %345
  %347 = or i32 %346, %342
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds float, ptr %p0, i64 %348
  %350 = load <16 x float>, ptr %349, align 64, !tbaa !7114
  %351 = add nsw i64 %326, %340
  %352 = getelementptr inbounds float, ptr %T_layout_trans, i64 %351
  store <16 x float> %350, ptr %352, align 64, !tbaa !7116
  %indvars.iv.next.11.1 = add nuw nsw i64 %indvars.iv.11, 2
  %exitcond.11.not.1 = icmp eq i64 %indvars.iv.next.11.1, 64
  br i1 %exitcond.11.not.1, label %for_end_ax4.outer.11, label %for_body_ax4.outer.11, !prof !7085

for_end_ax4.outer.11:                             ; preds = %for_body_ax4.outer.11
  %353 = add i32 %17, 768
  %354 = add nsw i64 %16, 12288
  br label %for_body_ax4.outer.12

for_body_ax4.outer.12:                            ; preds = %for_body_ax4.outer.12, %for_end_ax4.outer.11
  %indvars.iv.12 = phi i64 [ 0, %for_end_ax4.outer.11 ], [ %indvars.iv.next.12.1, %for_body_ax4.outer.12 ]
  %355 = shl nuw nsw i64 %indvars.iv.12, 4
  %356 = trunc i64 %355 to i32
  %357 = and i32 %356, 32
  %358 = trunc i64 %indvars.iv.12 to i32
  %359 = lshr i32 %358, 2
  %360 = mul nuw nsw i32 %359, 12544
  %361 = add i32 %353, %360
  %362 = or i32 %361, %357
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds float, ptr %p0, i64 %363
  %365 = load <16 x float>, ptr %364, align 64, !tbaa !7114
  %366 = add nsw i64 %354, %355
  %367 = getelementptr inbounds float, ptr %T_layout_trans, i64 %366
  store <16 x float> %365, ptr %367, align 64, !tbaa !7116
  %indvars.iv.next.12 = shl i64 %indvars.iv.12, 4
  %368 = or i64 %indvars.iv.next.12, 16
  %369 = trunc i64 %368 to i32
  %370 = and i32 %369, 48
  %371 = trunc i64 %indvars.iv.12 to i32
  %372 = lshr i32 %371, 2
  %373 = mul nuw nsw i32 %372, 12544
  %374 = add i32 %353, %373
  %375 = or i32 %374, %370
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds float, ptr %p0, i64 %376
  %378 = load <16 x float>, ptr %377, align 64, !tbaa !7114
  %379 = add nsw i64 %354, %368
  %380 = getelementptr inbounds float, ptr %T_layout_trans, i64 %379
  store <16 x float> %378, ptr %380, align 64, !tbaa !7116
  %indvars.iv.next.12.1 = add nuw nsw i64 %indvars.iv.12, 2
  %exitcond.12.not.1 = icmp eq i64 %indvars.iv.next.12.1, 64
  br i1 %exitcond.12.not.1, label %for_end_ax4.outer.12, label %for_body_ax4.outer.12, !prof !7085

for_end_ax4.outer.12:                             ; preds = %for_body_ax4.outer.12
  %381 = add i32 %17, 832
  %382 = add nsw i64 %16, 13312
  br label %for_body_ax4.outer.13

for_body_ax4.outer.13:                            ; preds = %for_body_ax4.outer.13, %for_end_ax4.outer.12
  %indvars.iv.13 = phi i64 [ 0, %for_end_ax4.outer.12 ], [ %indvars.iv.next.13.1, %for_body_ax4.outer.13 ]
  %383 = shl nuw nsw i64 %indvars.iv.13, 4
  %384 = trunc i64 %383 to i32
  %385 = and i32 %384, 32
  %386 = trunc i64 %indvars.iv.13 to i32
  %387 = lshr i32 %386, 2
  %388 = mul nuw nsw i32 %387, 12544
  %389 = add i32 %381, %388
  %390 = or i32 %389, %385
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds float, ptr %p0, i64 %391
  %393 = load <16 x float>, ptr %392, align 64, !tbaa !7114
  %394 = add nsw i64 %382, %383
  %395 = getelementptr inbounds float, ptr %T_layout_trans, i64 %394
  store <16 x float> %393, ptr %395, align 64, !tbaa !7116
  %indvars.iv.next.13 = shl i64 %indvars.iv.13, 4
  %396 = or i64 %indvars.iv.next.13, 16
  %397 = trunc i64 %396 to i32
  %398 = and i32 %397, 48
  %399 = trunc i64 %indvars.iv.13 to i32
  %400 = lshr i32 %399, 2
  %401 = mul nuw nsw i32 %400, 12544
  %402 = add i32 %381, %401
  %403 = or i32 %402, %398
  %404 = sext i32 %403 to i64
  %405 = getelementptr inbounds float, ptr %p0, i64 %404
  %406 = load <16 x float>, ptr %405, align 64, !tbaa !7114
  %407 = add nsw i64 %382, %396
  %408 = getelementptr inbounds float, ptr %T_layout_trans, i64 %407
  store <16 x float> %406, ptr %408, align 64, !tbaa !7116
  %indvars.iv.next.13.1 = add nuw nsw i64 %indvars.iv.13, 2
  %exitcond.13.not.1 = icmp eq i64 %indvars.iv.next.13.1, 64
  br i1 %exitcond.13.not.1, label %for_end_ax4.outer.13, label %for_body_ax4.outer.13, !prof !7085

for_end_ax4.outer.13:                             ; preds = %for_body_ax4.outer.13
  %indvars.iv.next10 = add nsw i64 %indvars.iv9, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next10 to i32
  %exitcond11.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond11.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_18_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.9, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.9, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.272, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.272(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.9, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 3583
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 3584)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 3584)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 3584)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next, %for_begin_ax3.preheader ]
  %15 = trunc i64 %indvars.iv to i32
  %16 = srem i32 %15, 56
  %.lhs.trunc = trunc i32 %16 to i8
  %17 = sdiv i8 %.lhs.trunc, 7
  %.sext = sext i8 %17 to i32
  %18 = shl nsw i32 %.sext, 2
  %19 = srem i32 %15, 7
  %20 = mul nsw i32 %19, 224
  %21 = sdiv i32 %15, 56
  %22 = mul nsw i32 %21, 1568
  %23 = add nsw i32 %22, %20
  %24 = add i32 %23, %18
  %25 = mul nsw i64 %indvars.iv, 28
  %26 = sext i32 %24 to i64
  %27 = getelementptr inbounds float, ptr %p0, i64 %26
  %28 = load <4 x float>, ptr %27, align 16, !tbaa !7118
  %29 = getelementptr inbounds float, ptr %T_layout_trans, i64 %25
  store <4 x float> %28, ptr %29, align 16, !tbaa !7120
  %30 = add i32 %24, 32
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds float, ptr %p0, i64 %31
  %33 = load <4 x float>, ptr %32, align 16, !tbaa !7118
  %34 = add nsw i64 %25, 4
  %35 = getelementptr inbounds float, ptr %T_layout_trans, i64 %34
  store <4 x float> %33, ptr %35, align 16, !tbaa !7120
  %36 = add i32 %24, 64
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds float, ptr %p0, i64 %37
  %39 = load <4 x float>, ptr %38, align 16, !tbaa !7118
  %40 = add nsw i64 %25, 8
  %41 = getelementptr inbounds float, ptr %T_layout_trans, i64 %40
  store <4 x float> %39, ptr %41, align 16, !tbaa !7120
  %42 = add i32 %24, 96
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %p0, i64 %43
  %45 = load <4 x float>, ptr %44, align 16, !tbaa !7118
  %46 = add nsw i64 %25, 12
  %47 = getelementptr inbounds float, ptr %T_layout_trans, i64 %46
  store <4 x float> %45, ptr %47, align 16, !tbaa !7120
  %48 = add i32 %24, 128
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds float, ptr %p0, i64 %49
  %51 = load <4 x float>, ptr %50, align 16, !tbaa !7118
  %52 = add nsw i64 %25, 16
  %53 = getelementptr inbounds float, ptr %T_layout_trans, i64 %52
  store <4 x float> %51, ptr %53, align 16, !tbaa !7120
  %54 = add i32 %24, 160
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds float, ptr %p0, i64 %55
  %57 = load <4 x float>, ptr %56, align 16, !tbaa !7118
  %58 = add nsw i64 %25, 20
  %59 = getelementptr inbounds float, ptr %T_layout_trans, i64 %58
  store <4 x float> %57, ptr %59, align 16, !tbaa !7120
  %60 = add i32 %24, 192
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds float, ptr %p0, i64 %61
  %63 = load <4 x float>, ptr %62, align 16, !tbaa !7118
  %64 = add nsw i64 %25, 24
  %65 = getelementptr inbounds float, ptr %T_layout_trans, i64 %64
  store <4 x float> %63, ptr %65, align 16, !tbaa !7120
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.preheader, %parallel_closure_entry
  ret i32 0
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_19_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.10, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.10, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.297, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.297(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.10, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 6
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 7)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 7)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 7)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax4.outer.6
  %indvars.iv9 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next10, %for_end_ax4.outer.6 ]
  %15 = mul nsw i64 %indvars.iv9, 3584
  %16 = trunc i64 %indvars.iv9 to i32
  %17 = mul i32 %16, 224
  br label %for_body_ax4.outer

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax4.outer.6, %parallel_closure_entry
  ret i32 0

for_body_ax4.outer:                               ; preds = %for_body_ax4.outer, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next.113, %for_body_ax4.outer ]
  %18 = shl nuw nsw i64 %indvars.iv, 4
  %19 = trunc i64 %indvars.iv to i32
  %20 = lshr exact i32 %19, 1
  %21 = mul nuw nsw i32 %20, 1568
  %22 = add i32 %17, %21
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds float, ptr %p0, i64 %23
  %25 = load <16 x float>, ptr %24, align 64, !tbaa !7122
  %26 = add nsw i64 %15, %18
  %27 = getelementptr inbounds float, ptr %T_layout_trans, i64 %26
  store <16 x float> %25, ptr %27, align 64, !tbaa !7124
  %indvars.iv.next = shl i64 %indvars.iv, 4
  %28 = or i64 %indvars.iv.next, 16
  %29 = trunc i64 %indvars.iv to i32
  %30 = lshr exact i32 %29, 1
  %31 = mul nuw nsw i32 %30, 1568
  %32 = add i32 %17, %31
  %33 = or i32 %32, 16
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds float, ptr %p0, i64 %34
  %36 = load <16 x float>, ptr %35, align 64, !tbaa !7122
  %37 = add nsw i64 %15, %28
  %38 = getelementptr inbounds float, ptr %T_layout_trans, i64 %37
  store <16 x float> %36, ptr %38, align 64, !tbaa !7124
  %indvars.iv.next.113 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.113, 32
  br i1 %exitcond.not.1, label %for_end_ax4.outer, label %for_body_ax4.outer, !prof !7085

for_end_ax4.outer:                                ; preds = %for_body_ax4.outer
  %39 = add i32 %17, 32
  %40 = add nsw i64 %15, 512
  br label %for_body_ax4.outer.1

for_body_ax4.outer.1:                             ; preds = %for_body_ax4.outer.1, %for_end_ax4.outer
  %indvars.iv.1 = phi i64 [ 0, %for_end_ax4.outer ], [ %indvars.iv.next.1.1, %for_body_ax4.outer.1 ]
  %41 = shl nuw nsw i64 %indvars.iv.1, 4
  %42 = trunc i64 %indvars.iv.1 to i32
  %43 = lshr exact i32 %42, 1
  %44 = mul nuw nsw i32 %43, 1568
  %45 = add i32 %39, %44
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds float, ptr %p0, i64 %46
  %48 = load <16 x float>, ptr %47, align 64, !tbaa !7122
  %49 = add nsw i64 %40, %41
  %50 = getelementptr inbounds float, ptr %T_layout_trans, i64 %49
  store <16 x float> %48, ptr %50, align 64, !tbaa !7124
  %indvars.iv.next.1 = shl i64 %indvars.iv.1, 4
  %51 = or i64 %indvars.iv.next.1, 16
  %52 = trunc i64 %indvars.iv.1 to i32
  %53 = lshr exact i32 %52, 1
  %54 = mul nuw nsw i32 %53, 1568
  %55 = add i32 %39, %54
  %56 = or i32 %55, 16
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds float, ptr %p0, i64 %57
  %59 = load <16 x float>, ptr %58, align 64, !tbaa !7122
  %60 = add nsw i64 %40, %51
  %61 = getelementptr inbounds float, ptr %T_layout_trans, i64 %60
  store <16 x float> %59, ptr %61, align 64, !tbaa !7124
  %indvars.iv.next.1.1 = add nuw nsw i64 %indvars.iv.1, 2
  %exitcond.1.not.1 = icmp eq i64 %indvars.iv.next.1.1, 32
  br i1 %exitcond.1.not.1, label %for_end_ax4.outer.1, label %for_body_ax4.outer.1, !prof !7085

for_end_ax4.outer.1:                              ; preds = %for_body_ax4.outer.1
  %62 = add i32 %17, 64
  %63 = add nsw i64 %15, 1024
  br label %for_body_ax4.outer.2

for_body_ax4.outer.2:                             ; preds = %for_body_ax4.outer.2, %for_end_ax4.outer.1
  %indvars.iv.2 = phi i64 [ 0, %for_end_ax4.outer.1 ], [ %indvars.iv.next.2.1, %for_body_ax4.outer.2 ]
  %64 = shl nuw nsw i64 %indvars.iv.2, 4
  %65 = trunc i64 %indvars.iv.2 to i32
  %66 = lshr exact i32 %65, 1
  %67 = mul nuw nsw i32 %66, 1568
  %68 = add i32 %62, %67
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %p0, i64 %69
  %71 = load <16 x float>, ptr %70, align 64, !tbaa !7122
  %72 = add nsw i64 %63, %64
  %73 = getelementptr inbounds float, ptr %T_layout_trans, i64 %72
  store <16 x float> %71, ptr %73, align 64, !tbaa !7124
  %indvars.iv.next.2 = shl i64 %indvars.iv.2, 4
  %74 = or i64 %indvars.iv.next.2, 16
  %75 = trunc i64 %indvars.iv.2 to i32
  %76 = lshr exact i32 %75, 1
  %77 = mul nuw nsw i32 %76, 1568
  %78 = add i32 %62, %77
  %79 = or i32 %78, 16
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds float, ptr %p0, i64 %80
  %82 = load <16 x float>, ptr %81, align 64, !tbaa !7122
  %83 = add nsw i64 %63, %74
  %84 = getelementptr inbounds float, ptr %T_layout_trans, i64 %83
  store <16 x float> %82, ptr %84, align 64, !tbaa !7124
  %indvars.iv.next.2.1 = add nuw nsw i64 %indvars.iv.2, 2
  %exitcond.2.not.1 = icmp eq i64 %indvars.iv.next.2.1, 32
  br i1 %exitcond.2.not.1, label %for_end_ax4.outer.2, label %for_body_ax4.outer.2, !prof !7085

for_end_ax4.outer.2:                              ; preds = %for_body_ax4.outer.2
  %85 = add i32 %17, 96
  %86 = add nsw i64 %15, 1536
  br label %for_body_ax4.outer.3

for_body_ax4.outer.3:                             ; preds = %for_body_ax4.outer.3, %for_end_ax4.outer.2
  %indvars.iv.3 = phi i64 [ 0, %for_end_ax4.outer.2 ], [ %indvars.iv.next.3.1, %for_body_ax4.outer.3 ]
  %87 = shl nuw nsw i64 %indvars.iv.3, 4
  %88 = trunc i64 %indvars.iv.3 to i32
  %89 = lshr exact i32 %88, 1
  %90 = mul nuw nsw i32 %89, 1568
  %91 = add i32 %85, %90
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds float, ptr %p0, i64 %92
  %94 = load <16 x float>, ptr %93, align 64, !tbaa !7122
  %95 = add nsw i64 %86, %87
  %96 = getelementptr inbounds float, ptr %T_layout_trans, i64 %95
  store <16 x float> %94, ptr %96, align 64, !tbaa !7124
  %indvars.iv.next.3 = shl i64 %indvars.iv.3, 4
  %97 = or i64 %indvars.iv.next.3, 16
  %98 = trunc i64 %indvars.iv.3 to i32
  %99 = lshr exact i32 %98, 1
  %100 = mul nuw nsw i32 %99, 1568
  %101 = add i32 %85, %100
  %102 = or i32 %101, 16
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds float, ptr %p0, i64 %103
  %105 = load <16 x float>, ptr %104, align 64, !tbaa !7122
  %106 = add nsw i64 %86, %97
  %107 = getelementptr inbounds float, ptr %T_layout_trans, i64 %106
  store <16 x float> %105, ptr %107, align 64, !tbaa !7124
  %indvars.iv.next.3.1 = add nuw nsw i64 %indvars.iv.3, 2
  %exitcond.3.not.1 = icmp eq i64 %indvars.iv.next.3.1, 32
  br i1 %exitcond.3.not.1, label %for_end_ax4.outer.3, label %for_body_ax4.outer.3, !prof !7085

for_end_ax4.outer.3:                              ; preds = %for_body_ax4.outer.3
  %108 = add i32 %17, 128
  %109 = add nsw i64 %15, 2048
  br label %for_body_ax4.outer.4

for_body_ax4.outer.4:                             ; preds = %for_body_ax4.outer.4, %for_end_ax4.outer.3
  %indvars.iv.4 = phi i64 [ 0, %for_end_ax4.outer.3 ], [ %indvars.iv.next.4.1, %for_body_ax4.outer.4 ]
  %110 = shl nuw nsw i64 %indvars.iv.4, 4
  %111 = trunc i64 %indvars.iv.4 to i32
  %112 = lshr exact i32 %111, 1
  %113 = mul nuw nsw i32 %112, 1568
  %114 = add i32 %108, %113
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds float, ptr %p0, i64 %115
  %117 = load <16 x float>, ptr %116, align 64, !tbaa !7122
  %118 = add nsw i64 %109, %110
  %119 = getelementptr inbounds float, ptr %T_layout_trans, i64 %118
  store <16 x float> %117, ptr %119, align 64, !tbaa !7124
  %indvars.iv.next.4 = shl i64 %indvars.iv.4, 4
  %120 = or i64 %indvars.iv.next.4, 16
  %121 = trunc i64 %indvars.iv.4 to i32
  %122 = lshr exact i32 %121, 1
  %123 = mul nuw nsw i32 %122, 1568
  %124 = add i32 %108, %123
  %125 = or i32 %124, 16
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds float, ptr %p0, i64 %126
  %128 = load <16 x float>, ptr %127, align 64, !tbaa !7122
  %129 = add nsw i64 %109, %120
  %130 = getelementptr inbounds float, ptr %T_layout_trans, i64 %129
  store <16 x float> %128, ptr %130, align 64, !tbaa !7124
  %indvars.iv.next.4.1 = add nuw nsw i64 %indvars.iv.4, 2
  %exitcond.4.not.1 = icmp eq i64 %indvars.iv.next.4.1, 32
  br i1 %exitcond.4.not.1, label %for_end_ax4.outer.4, label %for_body_ax4.outer.4, !prof !7085

for_end_ax4.outer.4:                              ; preds = %for_body_ax4.outer.4
  %131 = add i32 %17, 160
  %132 = add nsw i64 %15, 2560
  br label %for_body_ax4.outer.5

for_body_ax4.outer.5:                             ; preds = %for_body_ax4.outer.5, %for_end_ax4.outer.4
  %indvars.iv.5 = phi i64 [ 0, %for_end_ax4.outer.4 ], [ %indvars.iv.next.5.1, %for_body_ax4.outer.5 ]
  %133 = shl nuw nsw i64 %indvars.iv.5, 4
  %134 = trunc i64 %indvars.iv.5 to i32
  %135 = lshr exact i32 %134, 1
  %136 = mul nuw nsw i32 %135, 1568
  %137 = add i32 %131, %136
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds float, ptr %p0, i64 %138
  %140 = load <16 x float>, ptr %139, align 64, !tbaa !7122
  %141 = add nsw i64 %132, %133
  %142 = getelementptr inbounds float, ptr %T_layout_trans, i64 %141
  store <16 x float> %140, ptr %142, align 64, !tbaa !7124
  %indvars.iv.next.5 = shl i64 %indvars.iv.5, 4
  %143 = or i64 %indvars.iv.next.5, 16
  %144 = trunc i64 %indvars.iv.5 to i32
  %145 = lshr exact i32 %144, 1
  %146 = mul nuw nsw i32 %145, 1568
  %147 = add i32 %131, %146
  %148 = or i32 %147, 16
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds float, ptr %p0, i64 %149
  %151 = load <16 x float>, ptr %150, align 64, !tbaa !7122
  %152 = add nsw i64 %132, %143
  %153 = getelementptr inbounds float, ptr %T_layout_trans, i64 %152
  store <16 x float> %151, ptr %153, align 64, !tbaa !7124
  %indvars.iv.next.5.1 = add nuw nsw i64 %indvars.iv.5, 2
  %exitcond.5.not.1 = icmp eq i64 %indvars.iv.next.5.1, 32
  br i1 %exitcond.5.not.1, label %for_end_ax4.outer.5, label %for_body_ax4.outer.5, !prof !7085

for_end_ax4.outer.5:                              ; preds = %for_body_ax4.outer.5
  %154 = add i32 %17, 192
  %155 = add nsw i64 %15, 3072
  br label %for_body_ax4.outer.6

for_body_ax4.outer.6:                             ; preds = %for_body_ax4.outer.6, %for_end_ax4.outer.5
  %indvars.iv.6 = phi i64 [ 0, %for_end_ax4.outer.5 ], [ %indvars.iv.next.6.1, %for_body_ax4.outer.6 ]
  %156 = shl nuw nsw i64 %indvars.iv.6, 4
  %157 = trunc i64 %indvars.iv.6 to i32
  %158 = lshr exact i32 %157, 1
  %159 = mul nuw nsw i32 %158, 1568
  %160 = add i32 %154, %159
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds float, ptr %p0, i64 %161
  %163 = load <16 x float>, ptr %162, align 64, !tbaa !7122
  %164 = add nsw i64 %155, %156
  %165 = getelementptr inbounds float, ptr %T_layout_trans, i64 %164
  store <16 x float> %163, ptr %165, align 64, !tbaa !7124
  %indvars.iv.next.6 = shl i64 %indvars.iv.6, 4
  %166 = or i64 %indvars.iv.next.6, 16
  %167 = trunc i64 %indvars.iv.6 to i32
  %168 = lshr exact i32 %167, 1
  %169 = mul nuw nsw i32 %168, 1568
  %170 = add i32 %154, %169
  %171 = or i32 %170, 16
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds float, ptr %p0, i64 %172
  %174 = load <16 x float>, ptr %173, align 64, !tbaa !7122
  %175 = add nsw i64 %155, %166
  %176 = getelementptr inbounds float, ptr %T_layout_trans, i64 %175
  store <16 x float> %174, ptr %176, align 64, !tbaa !7124
  %indvars.iv.next.6.1 = add nuw nsw i64 %indvars.iv.6, 2
  %exitcond.6.not.1 = icmp eq i64 %indvars.iv.next.6.1, 32
  br i1 %exitcond.6.not.1, label %for_end_ax4.outer.6, label %for_body_ax4.outer.6, !prof !7085

for_end_ax4.outer.6:                              ; preds = %for_body_ax4.outer.6
  %indvars.iv.next10 = add nsw i64 %indvars.iv9, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next10 to i32
  %exitcond11.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond11.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_2_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.11, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.11, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.322, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.322(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.11, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 55
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 56)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 56)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 56)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv6 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next7, %for_end_ax3 ]
  %15 = mul nsw i64 %indvars.iv6, 3584
  %16 = trunc i64 %indvars.iv6 to i32
  %17 = mul i32 %16, 896
  br label %for_begin_ax4.outer.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_begin_ax4.outer.preheader:                    ; preds = %for_begin_ax3.preheader, %for_begin_ax4.outer.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %for_begin_ax4.outer.preheader ]
  %indvars.iv.tr = trunc i64 %indvars.iv to i32
  %18 = shl i32 %indvars.iv.tr, 4
  %19 = add i32 %18, %17
  %20 = shl nsw i64 %indvars.iv, 6
  %21 = add nsw i64 %20, %15
  %22 = sext i32 %19 to i64
  %23 = getelementptr inbounds float, ptr %p0, i64 %22
  %24 = load <16 x float>, ptr %23, align 64, !tbaa !7126
  %25 = getelementptr inbounds float, ptr %T_layout_trans, i64 %21
  store <16 x float> %24, ptr %25, align 64, !tbaa !7128
  %26 = add i32 %19, 50176
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds float, ptr %p0, i64 %27
  %29 = load <16 x float>, ptr %28, align 64, !tbaa !7126
  %30 = or i64 %21, 16
  %31 = getelementptr inbounds float, ptr %T_layout_trans, i64 %30
  store <16 x float> %29, ptr %31, align 64, !tbaa !7128
  %32 = add i32 %19, 100352
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds float, ptr %p0, i64 %33
  %35 = load <16 x float>, ptr %34, align 64, !tbaa !7126
  %36 = or i64 %21, 32
  %37 = getelementptr inbounds float, ptr %T_layout_trans, i64 %36
  store <16 x float> %35, ptr %37, align 64, !tbaa !7128
  %38 = add i32 %19, 150528
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds float, ptr %p0, i64 %39
  %41 = load <16 x float>, ptr %40, align 64, !tbaa !7126
  %42 = or i64 %21, 48
  %43 = getelementptr inbounds float, ptr %T_layout_trans, i64 %42
  store <16 x float> %41, ptr %43, align 64, !tbaa !7128
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 56
  br i1 %exitcond.not, label %for_end_ax3, label %for_begin_ax4.outer.preheader, !prof !52

for_end_ax3:                                      ; preds = %for_begin_ax4.outer.preheader
  %indvars.iv.next7 = add nsw i64 %indvars.iv6, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next7 to i32
  %exitcond8.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond8.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_20_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.12, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.12, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.347, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.347(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.12, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 895
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 896)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 896)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 896)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next, %for_begin_ax3.preheader ]
  %15 = trunc i64 %indvars.iv to i32
  %16 = srem i32 %15, 56
  %.lhs.trunc = trunc i32 %16 to i8
  %17 = sdiv i8 %.lhs.trunc, 7
  %.sext = sext i8 %17 to i32
  %18 = shl nsw i32 %.sext, 2
  %19 = srem i32 %15, 7
  %20 = mul nsw i32 %19, 224
  %21 = sdiv i32 %15, 56
  %22 = mul nsw i32 %21, 1568
  %23 = add nsw i32 %22, %20
  %24 = add i32 %23, %18
  %25 = mul nsw i64 %indvars.iv, 28
  %26 = sext i32 %24 to i64
  %27 = getelementptr inbounds float, ptr %p0, i64 %26
  %28 = load <4 x float>, ptr %27, align 16, !tbaa !7130
  %29 = getelementptr inbounds float, ptr %T_layout_trans, i64 %25
  store <4 x float> %28, ptr %29, align 16, !tbaa !7132
  %30 = add i32 %24, 32
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds float, ptr %p0, i64 %31
  %33 = load <4 x float>, ptr %32, align 16, !tbaa !7130
  %34 = add nsw i64 %25, 4
  %35 = getelementptr inbounds float, ptr %T_layout_trans, i64 %34
  store <4 x float> %33, ptr %35, align 16, !tbaa !7132
  %36 = add i32 %24, 64
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds float, ptr %p0, i64 %37
  %39 = load <4 x float>, ptr %38, align 16, !tbaa !7130
  %40 = add nsw i64 %25, 8
  %41 = getelementptr inbounds float, ptr %T_layout_trans, i64 %40
  store <4 x float> %39, ptr %41, align 16, !tbaa !7132
  %42 = add i32 %24, 96
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %p0, i64 %43
  %45 = load <4 x float>, ptr %44, align 16, !tbaa !7130
  %46 = add nsw i64 %25, 12
  %47 = getelementptr inbounds float, ptr %T_layout_trans, i64 %46
  store <4 x float> %45, ptr %47, align 16, !tbaa !7132
  %48 = add i32 %24, 128
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds float, ptr %p0, i64 %49
  %51 = load <4 x float>, ptr %50, align 16, !tbaa !7130
  %52 = add nsw i64 %25, 16
  %53 = getelementptr inbounds float, ptr %T_layout_trans, i64 %52
  store <4 x float> %51, ptr %53, align 16, !tbaa !7132
  %54 = add i32 %24, 160
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds float, ptr %p0, i64 %55
  %57 = load <4 x float>, ptr %56, align 16, !tbaa !7130
  %58 = add nsw i64 %25, 20
  %59 = getelementptr inbounds float, ptr %T_layout_trans, i64 %58
  store <4 x float> %57, ptr %59, align 16, !tbaa !7132
  %60 = add i32 %24, 192
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds float, ptr %p0, i64 %61
  %63 = load <4 x float>, ptr %62, align 16, !tbaa !7130
  %64 = add nsw i64 %25, 24
  %65 = getelementptr inbounds float, ptr %T_layout_trans, i64 %64
  store <4 x float> %63, ptr %65, align 16, !tbaa !7132
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.preheader, %parallel_closure_entry
  ret i32 0
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_3_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.13, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.13, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.372, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.372(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.13, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 895
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 896)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 896)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 896)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv4 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next5, %for_end_ax3 ]
  %15 = trunc i64 %indvars.iv4 to i32
  %16 = srem i32 %15, 448
  %.lhs.trunc = trunc i32 %16 to i16
  %17 = sdiv i16 %.lhs.trunc, 56
  %.sext = sext i16 %17 to i32
  %18 = shl nsw i32 %.sext, 2
  %19 = srem i32 %15, 56
  %20 = mul nsw i32 %19, 1792
  %21 = sdiv i32 %15, 448
  %22 = mul nsw i32 %21, 100352
  %23 = add nsw i32 %22, %20
  %24 = add i32 %23, %18
  %25 = mul nsw i64 %indvars.iv4, 224
  br label %for_body_ax3

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_body_ax3:                                     ; preds = %for_body_ax3, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next.1, %for_body_ax3 ]
  %indvars.iv.tr = trunc i64 %indvars.iv to i32
  %26 = shl i32 %indvars.iv.tr, 5
  %27 = add i32 %24, %26
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds float, ptr %p0, i64 %28
  %30 = load <4 x float>, ptr %29, align 16, !tbaa !7134
  %31 = shl nuw nsw i64 %indvars.iv, 2
  %32 = add nsw i64 %31, %25
  %33 = getelementptr inbounds float, ptr %T_layout_trans, i64 %32
  store <4 x float> %30, ptr %33, align 16, !tbaa !7136
  %indvars.iv.next = or i64 %indvars.iv, 1
  %indvars.iv.tr.1 = trunc i64 %indvars.iv.next to i32
  %34 = shl i32 %indvars.iv.tr.1, 5
  %35 = add i32 %24, %34
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds float, ptr %p0, i64 %36
  %38 = load <4 x float>, ptr %37, align 16, !tbaa !7134
  %39 = shl nuw nsw i64 %indvars.iv.next, 2
  %40 = add nsw i64 %39, %25
  %41 = getelementptr inbounds float, ptr %T_layout_trans, i64 %40
  store <4 x float> %38, ptr %41, align 16, !tbaa !7136
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 56
  br i1 %exitcond.not.1, label %for_end_ax3, label %for_body_ax3, !prof !7085

for_end_ax3:                                      ; preds = %for_body_ax3
  %indvars.iv.next5 = add nsw i64 %indvars.iv4, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next5 to i32
  %exitcond6.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond6.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_4_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.14, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.14, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.397, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.397(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.14, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 55
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 56)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 56)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 56)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv6 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next7, %for_end_ax3 ]
  %15 = mul nsw i64 %indvars.iv6, 14336
  %16 = trunc i64 %indvars.iv6 to i32
  %17 = mul i32 %16, 1792
  br label %for_begin_ax4.outer.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_begin_ax4.outer.preheader:                    ; preds = %for_begin_ax3.preheader, %for_begin_ax4.outer.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %for_begin_ax4.outer.preheader ]
  %indvars.iv.tr = trunc i64 %indvars.iv to i32
  %18 = shl i32 %indvars.iv.tr, 5
  %19 = add i32 %18, %17
  %20 = shl nsw i64 %indvars.iv, 8
  %21 = add nsw i64 %20, %15
  %22 = sext i32 %19 to i64
  %23 = getelementptr inbounds float, ptr %p0, i64 %22
  %24 = load <16 x float>, ptr %23, align 64, !tbaa !7138
  %25 = getelementptr inbounds float, ptr %T_layout_trans, i64 %21
  store <16 x float> %24, ptr %25, align 64, !tbaa !7140
  %26 = or i32 %19, 16
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds float, ptr %p0, i64 %27
  %29 = load <16 x float>, ptr %28, align 64, !tbaa !7138
  %30 = or i64 %21, 16
  %31 = getelementptr inbounds float, ptr %T_layout_trans, i64 %30
  store <16 x float> %29, ptr %31, align 64, !tbaa !7140
  %32 = add i32 %19, 100352
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds float, ptr %p0, i64 %33
  %35 = load <16 x float>, ptr %34, align 64, !tbaa !7138
  %36 = or i64 %21, 32
  %37 = getelementptr inbounds float, ptr %T_layout_trans, i64 %36
  store <16 x float> %35, ptr %37, align 64, !tbaa !7140
  %38 = or i32 %32, 16
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds float, ptr %p0, i64 %39
  %41 = load <16 x float>, ptr %40, align 64, !tbaa !7138
  %42 = or i64 %21, 48
  %43 = getelementptr inbounds float, ptr %T_layout_trans, i64 %42
  store <16 x float> %41, ptr %43, align 64, !tbaa !7140
  %44 = add i32 %19, 200704
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds float, ptr %p0, i64 %45
  %47 = load <16 x float>, ptr %46, align 64, !tbaa !7138
  %48 = or i64 %21, 64
  %49 = getelementptr inbounds float, ptr %T_layout_trans, i64 %48
  store <16 x float> %47, ptr %49, align 64, !tbaa !7140
  %50 = or i32 %44, 16
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds float, ptr %p0, i64 %51
  %53 = load <16 x float>, ptr %52, align 64, !tbaa !7138
  %54 = or i64 %21, 80
  %55 = getelementptr inbounds float, ptr %T_layout_trans, i64 %54
  store <16 x float> %53, ptr %55, align 64, !tbaa !7140
  %56 = add i32 %19, 301056
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds float, ptr %p0, i64 %57
  %59 = load <16 x float>, ptr %58, align 64, !tbaa !7138
  %60 = or i64 %21, 96
  %61 = getelementptr inbounds float, ptr %T_layout_trans, i64 %60
  store <16 x float> %59, ptr %61, align 64, !tbaa !7140
  %62 = or i32 %56, 16
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds float, ptr %p0, i64 %63
  %65 = load <16 x float>, ptr %64, align 64, !tbaa !7138
  %66 = or i64 %21, 112
  %67 = getelementptr inbounds float, ptr %T_layout_trans, i64 %66
  store <16 x float> %65, ptr %67, align 64, !tbaa !7140
  %68 = add i32 %19, 401408
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %p0, i64 %69
  %71 = load <16 x float>, ptr %70, align 64, !tbaa !7138
  %72 = or i64 %21, 128
  %73 = getelementptr inbounds float, ptr %T_layout_trans, i64 %72
  store <16 x float> %71, ptr %73, align 64, !tbaa !7140
  %74 = or i32 %68, 16
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds float, ptr %p0, i64 %75
  %77 = load <16 x float>, ptr %76, align 64, !tbaa !7138
  %78 = or i64 %21, 144
  %79 = getelementptr inbounds float, ptr %T_layout_trans, i64 %78
  store <16 x float> %77, ptr %79, align 64, !tbaa !7140
  %80 = add i32 %19, 501760
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds float, ptr %p0, i64 %81
  %83 = load <16 x float>, ptr %82, align 64, !tbaa !7138
  %84 = or i64 %21, 160
  %85 = getelementptr inbounds float, ptr %T_layout_trans, i64 %84
  store <16 x float> %83, ptr %85, align 64, !tbaa !7140
  %86 = or i32 %80, 16
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds float, ptr %p0, i64 %87
  %89 = load <16 x float>, ptr %88, align 64, !tbaa !7138
  %90 = or i64 %21, 176
  %91 = getelementptr inbounds float, ptr %T_layout_trans, i64 %90
  store <16 x float> %89, ptr %91, align 64, !tbaa !7140
  %92 = add i32 %19, 602112
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds float, ptr %p0, i64 %93
  %95 = load <16 x float>, ptr %94, align 64, !tbaa !7138
  %96 = or i64 %21, 192
  %97 = getelementptr inbounds float, ptr %T_layout_trans, i64 %96
  store <16 x float> %95, ptr %97, align 64, !tbaa !7140
  %98 = or i32 %92, 16
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds float, ptr %p0, i64 %99
  %101 = load <16 x float>, ptr %100, align 64, !tbaa !7138
  %102 = or i64 %21, 208
  %103 = getelementptr inbounds float, ptr %T_layout_trans, i64 %102
  store <16 x float> %101, ptr %103, align 64, !tbaa !7140
  %104 = add i32 %19, 702464
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds float, ptr %p0, i64 %105
  %107 = load <16 x float>, ptr %106, align 64, !tbaa !7138
  %108 = or i64 %21, 224
  %109 = getelementptr inbounds float, ptr %T_layout_trans, i64 %108
  store <16 x float> %107, ptr %109, align 64, !tbaa !7140
  %110 = or i32 %104, 16
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds float, ptr %p0, i64 %111
  %113 = load <16 x float>, ptr %112, align 64, !tbaa !7138
  %114 = or i64 %21, 240
  %115 = getelementptr inbounds float, ptr %T_layout_trans, i64 %114
  store <16 x float> %113, ptr %115, align 64, !tbaa !7140
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 56
  br i1 %exitcond.not, label %for_end_ax3, label %for_begin_ax4.outer.preheader, !prof !52

for_end_ax3:                                      ; preds = %for_begin_ax4.outer.preheader
  %indvars.iv.next7 = add nsw i64 %indvars.iv6, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next7 to i32
  %exitcond8.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond8.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_5_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.15, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.15, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.422, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.422(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.15, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 55
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 56)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 56)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 56)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv6 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next7, %for_end_ax3 ]
  %15 = mul nsw i64 %indvars.iv6, 3584
  %16 = trunc i64 %indvars.iv6 to i32
  %17 = mul i32 %16, 1792
  br label %for_begin_ax4.outer.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_begin_ax4.outer.preheader:                    ; preds = %for_begin_ax3.preheader, %for_begin_ax4.outer.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %for_begin_ax4.outer.preheader ]
  %indvars.iv.tr = trunc i64 %indvars.iv to i32
  %18 = shl i32 %indvars.iv.tr, 5
  %19 = add i32 %18, %17
  %20 = shl nsw i64 %indvars.iv, 6
  %21 = add nsw i64 %20, %15
  %22 = sext i32 %19 to i64
  %23 = getelementptr inbounds float, ptr %p0, i64 %22
  %24 = load <16 x float>, ptr %23, align 64, !tbaa !7142
  %25 = getelementptr inbounds float, ptr %T_layout_trans, i64 %21
  store <16 x float> %24, ptr %25, align 64, !tbaa !7144
  %26 = or i32 %19, 16
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds float, ptr %p0, i64 %27
  %29 = load <16 x float>, ptr %28, align 64, !tbaa !7142
  %30 = or i64 %21, 16
  %31 = getelementptr inbounds float, ptr %T_layout_trans, i64 %30
  store <16 x float> %29, ptr %31, align 64, !tbaa !7144
  %32 = add i32 %19, 100352
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds float, ptr %p0, i64 %33
  %35 = load <16 x float>, ptr %34, align 64, !tbaa !7142
  %36 = or i64 %21, 32
  %37 = getelementptr inbounds float, ptr %T_layout_trans, i64 %36
  store <16 x float> %35, ptr %37, align 64, !tbaa !7144
  %38 = or i32 %32, 16
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds float, ptr %p0, i64 %39
  %41 = load <16 x float>, ptr %40, align 64, !tbaa !7142
  %42 = or i64 %21, 48
  %43 = getelementptr inbounds float, ptr %T_layout_trans, i64 %42
  store <16 x float> %41, ptr %43, align 64, !tbaa !7144
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 56
  br i1 %exitcond.not, label %for_end_ax3, label %for_begin_ax4.outer.preheader, !prof !52

for_end_ax3:                                      ; preds = %for_begin_ax4.outer.preheader
  %indvars.iv.next7 = add nsw i64 %indvars.iv6, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next7 to i32
  %exitcond8.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond8.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_6_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.16, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.16, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.447, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.447(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.16, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 3583
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 3584)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 3584)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 3584)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv4 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next5, %for_end_ax3 ]
  %15 = trunc i64 %indvars.iv4 to i32
  %16 = srem i32 %15, 448
  %.lhs.trunc = trunc i32 %16 to i16
  %17 = sdiv i16 %.lhs.trunc, 56
  %.sext = sext i16 %17 to i32
  %18 = shl nsw i32 %.sext, 2
  %19 = srem i32 %15, 56
  %20 = mul nsw i32 %19, 1792
  %21 = sdiv i32 %15, 448
  %22 = mul nsw i32 %21, 100352
  %23 = add nsw i32 %22, %20
  %24 = add i32 %23, %18
  %25 = mul nsw i64 %indvars.iv4, 224
  br label %for_body_ax3

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_body_ax3:                                     ; preds = %for_body_ax3, %for_begin_ax3.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next.1, %for_body_ax3 ]
  %indvars.iv.tr = trunc i64 %indvars.iv to i32
  %26 = shl i32 %indvars.iv.tr, 5
  %27 = add i32 %24, %26
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds float, ptr %p0, i64 %28
  %30 = load <4 x float>, ptr %29, align 16, !tbaa !7146
  %31 = shl nuw nsw i64 %indvars.iv, 2
  %32 = add nsw i64 %31, %25
  %33 = getelementptr inbounds float, ptr %T_layout_trans, i64 %32
  store <4 x float> %30, ptr %33, align 16, !tbaa !7148
  %indvars.iv.next = or i64 %indvars.iv, 1
  %indvars.iv.tr.1 = trunc i64 %indvars.iv.next to i32
  %34 = shl i32 %indvars.iv.tr.1, 5
  %35 = add i32 %24, %34
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds float, ptr %p0, i64 %36
  %38 = load <4 x float>, ptr %37, align 16, !tbaa !7146
  %39 = shl nuw nsw i64 %indvars.iv.next, 2
  %40 = add nsw i64 %39, %25
  %41 = getelementptr inbounds float, ptr %T_layout_trans, i64 %40
  store <4 x float> %38, ptr %41, align 16, !tbaa !7148
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 56
  br i1 %exitcond.not.1, label %for_end_ax3, label %for_body_ax3, !prof !7085

for_end_ax3:                                      ; preds = %for_body_ax3
  %indvars.iv.next5 = add nsw i64 %indvars.iv4, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next5 to i32
  %exitcond6.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond6.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_7_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.17, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.17, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.472, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.472(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.17, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 447
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 448)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 448)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 448)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv10 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next11, %for_end_ax3 ]
  %15 = trunc i64 %indvars.iv10 to i32
  %16 = srem i32 %15, 56
  %.lhs.trunc = trunc i32 %16 to i8
  %17 = sdiv i8 %.lhs.trunc, 28
  %.sext = sext i8 %17 to i32
  %18 = shl nsw i32 %.sext, 5
  %19 = srem i32 %15, 28
  %20 = mul nsw i32 %19, 1792
  %21 = sdiv i32 %15, 56
  %22 = mul nsw i32 %21, 50176
  %23 = add nsw i32 %22, %20
  %24 = add i32 %23, %18
  %25 = mul nsw i64 %indvars.iv10, 896
  br label %for_begin_ax4.outer.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_begin_ax4.outer.preheader:                    ; preds = %for_begin_ax3.preheader, %for_begin_ax4.outer.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %for_begin_ax4.outer.preheader ]
  %indvars.iv.tr = trunc i64 %indvars.iv to i32
  %26 = shl i32 %indvars.iv.tr, 6
  %27 = add i32 %24, %26
  %28 = shl nsw i64 %indvars.iv, 5
  %29 = add nsw i64 %28, %25
  %30 = sext i32 %27 to i64
  %31 = getelementptr inbounds float, ptr %p0, i64 %30
  %32 = load <16 x float>, ptr %31, align 64, !tbaa !7150
  %33 = getelementptr inbounds float, ptr %T_layout_trans, i64 %29
  store <16 x float> %32, ptr %33, align 64, !tbaa !7152
  %34 = or i64 %30, 16
  %35 = getelementptr inbounds float, ptr %p0, i64 %34
  %36 = load <16 x float>, ptr %35, align 64, !tbaa !7150
  %37 = or i64 %29, 16
  %38 = getelementptr inbounds float, ptr %T_layout_trans, i64 %37
  store <16 x float> %36, ptr %38, align 64, !tbaa !7152
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 28
  br i1 %exitcond.not, label %for_end_ax3, label %for_begin_ax4.outer.preheader, !prof !52

for_end_ax3:                                      ; preds = %for_begin_ax4.outer.preheader
  %indvars.iv.next11 = add nsw i64 %indvars.iv10, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next11 to i32
  %exitcond12.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond12.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_8_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.18, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.18, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.497, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.497(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.18, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 27
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 28)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 28)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 28)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv9 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next10, %for_end_ax3 ]
  %15 = mul nsw i64 %indvars.iv9, 14336
  %16 = trunc i64 %indvars.iv9 to i32
  %17 = mul i32 %16, 896
  br label %for_begin_ax4.outer.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_begin_ax4.outer.preheader:                    ; preds = %for_begin_ax3.preheader, %for_end_ax4.outer
  %indvars.iv5 = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next6, %for_end_ax4.outer ]
  %indvars.iv5.tr = trunc i64 %indvars.iv5 to i32
  %18 = shl i32 %indvars.iv5.tr, 5
  %19 = add i32 %18, %17
  %20 = shl nsw i64 %indvars.iv5, 9
  %21 = add nsw i64 %20, %15
  br label %for_body_ax4.outer

for_end_ax3:                                      ; preds = %for_end_ax4.outer
  %indvars.iv.next10 = add nsw i64 %indvars.iv9, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next10 to i32
  %exitcond11.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond11.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52

for_body_ax4.outer:                               ; preds = %for_body_ax4.outer, %for_begin_ax4.outer.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_ax4.outer.preheader ], [ %indvars.iv.next.1, %for_body_ax4.outer ]
  %22 = shl nuw nsw i64 %indvars.iv, 4
  %23 = trunc i64 %indvars.iv to i32
  %24 = lshr exact i32 %23, 1
  %25 = mul nuw nsw i32 %24, 25088
  %26 = add i32 %19, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds float, ptr %p0, i64 %27
  %29 = load <16 x float>, ptr %28, align 64, !tbaa !7154
  %30 = add nsw i64 %21, %22
  %31 = getelementptr inbounds float, ptr %T_layout_trans, i64 %30
  store <16 x float> %29, ptr %31, align 64, !tbaa !7156
  %indvars.iv.next = shl i64 %indvars.iv, 4
  %32 = or i64 %indvars.iv.next, 16
  %33 = trunc i64 %indvars.iv to i32
  %34 = lshr exact i32 %33, 1
  %35 = mul nuw nsw i32 %34, 25088
  %36 = add i32 %19, %35
  %37 = or i32 %36, 16
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds float, ptr %p0, i64 %38
  %40 = load <16 x float>, ptr %39, align 64, !tbaa !7154
  %41 = add nsw i64 %21, %32
  %42 = getelementptr inbounds float, ptr %T_layout_trans, i64 %41
  store <16 x float> %40, ptr %42, align 64, !tbaa !7156
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 32
  br i1 %exitcond.not.1, label %for_end_ax4.outer, label %for_body_ax4.outer, !prof !7085

for_end_ax4.outer:                                ; preds = %for_body_ax4.outer
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1
  %exitcond8.not = icmp eq i64 %indvars.iv.next6, 28
  br i1 %exitcond8.not, label %for_end_ax3, label %for_begin_ax4.outer.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_layout_transform_9_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.19, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.19, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.522, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.522(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %T_layout_trans = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.19, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 27
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 28)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 28)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 28)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv6 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next7, %for_end_ax3 ]
  %15 = mul nsw i64 %indvars.iv6, 3584
  %16 = trunc i64 %indvars.iv6 to i32
  %17 = mul i32 %16, 1792
  br label %for_begin_ax4.outer.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_begin_ax4.outer.preheader:                    ; preds = %for_begin_ax3.preheader, %for_begin_ax4.outer.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %for_begin_ax4.outer.preheader ]
  %indvars.iv.tr = trunc i64 %indvars.iv to i32
  %18 = shl i32 %indvars.iv.tr, 6
  %19 = add i32 %18, %17
  %20 = shl nsw i64 %indvars.iv, 7
  %21 = add nsw i64 %20, %15
  %22 = sext i32 %19 to i64
  %23 = getelementptr inbounds float, ptr %p0, i64 %22
  %24 = load <16 x float>, ptr %23, align 64, !tbaa !7158
  %25 = getelementptr inbounds float, ptr %T_layout_trans, i64 %21
  store <16 x float> %24, ptr %25, align 64, !tbaa !7160
  %26 = or i32 %19, 16
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds float, ptr %p0, i64 %27
  %29 = load <16 x float>, ptr %28, align 64, !tbaa !7158
  %30 = or i64 %21, 16
  %31 = getelementptr inbounds float, ptr %T_layout_trans, i64 %30
  store <16 x float> %29, ptr %31, align 64, !tbaa !7160
  %32 = or i32 %19, 32
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds float, ptr %p0, i64 %33
  %35 = load <16 x float>, ptr %34, align 64, !tbaa !7158
  %36 = or i64 %21, 32
  %37 = getelementptr inbounds float, ptr %T_layout_trans, i64 %36
  store <16 x float> %35, ptr %37, align 64, !tbaa !7160
  %38 = or i32 %19, 48
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds float, ptr %p0, i64 %39
  %41 = load <16 x float>, ptr %40, align 64, !tbaa !7158
  %42 = or i64 %21, 48
  %43 = getelementptr inbounds float, ptr %T_layout_trans, i64 %42
  store <16 x float> %41, ptr %43, align 64, !tbaa !7160
  %44 = add i32 %19, 50176
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds float, ptr %p0, i64 %45
  %47 = load <16 x float>, ptr %46, align 64, !tbaa !7158
  %48 = or i64 %21, 64
  %49 = getelementptr inbounds float, ptr %T_layout_trans, i64 %48
  store <16 x float> %47, ptr %49, align 64, !tbaa !7160
  %50 = or i32 %44, 16
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds float, ptr %p0, i64 %51
  %53 = load <16 x float>, ptr %52, align 64, !tbaa !7158
  %54 = or i64 %21, 80
  %55 = getelementptr inbounds float, ptr %T_layout_trans, i64 %54
  store <16 x float> %53, ptr %55, align 64, !tbaa !7160
  %56 = or i32 %44, 32
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds float, ptr %p0, i64 %57
  %59 = load <16 x float>, ptr %58, align 64, !tbaa !7158
  %60 = or i64 %21, 96
  %61 = getelementptr inbounds float, ptr %T_layout_trans, i64 %60
  store <16 x float> %59, ptr %61, align 64, !tbaa !7160
  %62 = or i32 %44, 48
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds float, ptr %p0, i64 %63
  %65 = load <16 x float>, ptr %64, align 64, !tbaa !7158
  %66 = or i64 %21, 112
  %67 = getelementptr inbounds float, ptr %T_layout_trans, i64 %66
  store <16 x float> %65, ptr %67, align 64, !tbaa !7160
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 28
  br i1 %exitcond.not, label %for_end_ax3, label %for_begin_ax4.outer.preheader, !prof !52

for_end_ax3:                                      ; preds = %for_begin_ax4.outer.preheader
  %indvars.iv.next7 = add nsw i64 %indvars.iv6, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next7 to i32
  %exitcond8.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond8.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52
}

; Function Attrs: mustprogress nofree noinline nosync nounwind willreturn memory(argmem: readwrite)
define internal fastcc void @tvmgen_default_fused_layout_transform_reshape_squeeze_compute_(ptr noalias nocapture writeonly align 64 %0, ptr noalias nocapture readonly align 64 %1) unnamed_addr #4 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 64 dereferenceable(8192) %0, ptr noundef nonnull align 64 dereferenceable(8192) %1, i64 8192, i1 false)
  ret void
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_adaptive_avg_pool2d_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2) unnamed_addr #2 {
entry:
  %3 = alloca %closure_loop_parallel_ax0.ax1.fused, align 8
  %4 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.20, align 8
  %5 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %adaptive_pool_sum = tail call ptr %5(i32 1, i32 %0, i64 8192, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %adaptive_pool_sum, i64 64) ]
  %6 = icmp eq ptr %adaptive_pool_sum, null
  br i1 %6, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end2, %call_end, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %9, %if_end ], [ %13, %call_end ], [ %., %call_end2 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %adaptive_pool_sum, ptr %4, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.20, ptr %4, i64 0, i32 1
  store ptr %1, ptr %7, align 8
  %8 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %9 = call i32 %8(ptr nonnull @__tvm_parallel_lambda.568, ptr nonnull %4, i32 0)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %call_end, label %common.ret, !prof !18

call_end:                                         ; preds = %if_end
  store ptr %2, ptr %3, align 8
  %11 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused, ptr %3, i64 0, i32 1
  store ptr %adaptive_pool_sum, ptr %11, align 8
  %12 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %13 = call i32 %12(ptr nonnull @__tvm_parallel_lambda.569, ptr nonnull %3, i32 0)
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %call_end2, label %common.ret, !prof !18

call_end2:                                        ; preds = %call_end
  %15 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %16 = call i32 %15(i32 1, i32 %0, ptr nonnull %adaptive_pool_sum)
  %.not = icmp ne i32 %16, 0
  %. = sext i1 %.not to i32
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.568(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %adaptive_pool_sum = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.20, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 63
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 64)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 64)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax4.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax4.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 64)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax4.preheader

for_begin_ax4.preheader:                          ; preds = %for_begin_ax4.preheader.preheader, %for_end_ax4
  %indvars.iv11 = phi i64 [ %smin, %for_begin_ax4.preheader.preheader ], [ %indvars.iv.next12, %for_end_ax4 ]
  %ax0.ax1.fused.ax2.fused7 = phi i32 [ %10, %for_begin_ax4.preheader.preheader ], [ %264, %for_end_ax4 ]
  %15 = shl nsw i32 %ax0.ax1.fused.ax2.fused7, 5
  %16 = mul nsw i64 %indvars.iv11, 1568
  %17 = sext i32 %15 to i64
  br label %for_body_ax4

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax4, %parallel_closure_entry
  ret i32 0

for_body_ax4:                                     ; preds = %for_begin_ax4.preheader, %for_body_ax4
  %indvars.iv = phi i64 [ 0, %for_begin_ax4.preheader ], [ %indvars.iv.next, %for_body_ax4 ]
  %18 = add nuw nsw i64 %indvars.iv, %17
  %19 = getelementptr inbounds float, ptr %adaptive_pool_sum, i64 %18
  %20 = add nsw i64 %indvars.iv, %16
  %21 = getelementptr inbounds float, ptr %p0, i64 %20
  %22 = load float, ptr %21, align 4, !tbaa !7162
  %23 = fadd float %22, 0.000000e+00
  %24 = shl i64 %20, 32
  %sext = add i64 %24, 137438953472
  %25 = ashr exact i64 %sext, 32
  %26 = getelementptr inbounds float, ptr %p0, i64 %25
  %27 = load float, ptr %26, align 4, !tbaa !7162
  %28 = fadd float %27, %23
  %29 = shl i64 %20, 32
  %sext14 = add i64 %29, 274877906944
  %30 = ashr exact i64 %sext14, 32
  %31 = getelementptr inbounds float, ptr %p0, i64 %30
  %32 = load float, ptr %31, align 4, !tbaa !7162
  %33 = fadd float %32, %28
  %34 = shl i64 %20, 32
  %sext15 = add i64 %34, 412316860416
  %35 = ashr exact i64 %sext15, 32
  %36 = getelementptr inbounds float, ptr %p0, i64 %35
  %37 = load float, ptr %36, align 4, !tbaa !7162
  %38 = fadd float %37, %33
  %39 = shl i64 %20, 32
  %sext16 = add i64 %39, 549755813888
  %40 = ashr exact i64 %sext16, 32
  %41 = getelementptr inbounds float, ptr %p0, i64 %40
  %42 = load float, ptr %41, align 4, !tbaa !7162
  %43 = fadd float %42, %38
  %44 = shl i64 %20, 32
  %sext17 = add i64 %44, 687194767360
  %45 = ashr exact i64 %sext17, 32
  %46 = getelementptr inbounds float, ptr %p0, i64 %45
  %47 = load float, ptr %46, align 4, !tbaa !7162
  %48 = fadd float %47, %43
  %49 = shl i64 %20, 32
  %sext18 = add i64 %49, 824633720832
  %50 = ashr exact i64 %sext18, 32
  %51 = getelementptr inbounds float, ptr %p0, i64 %50
  %52 = load float, ptr %51, align 4, !tbaa !7162
  %53 = fadd float %52, %48
  %54 = shl i64 %20, 32
  %sext19 = add i64 %54, 962072674304
  %55 = ashr exact i64 %sext19, 32
  %56 = getelementptr inbounds float, ptr %p0, i64 %55
  %57 = load float, ptr %56, align 4, !tbaa !7162
  %58 = fadd float %57, %53
  %59 = shl i64 %20, 32
  %sext20 = add i64 %59, 1099511627776
  %60 = ashr exact i64 %sext20, 32
  %61 = getelementptr inbounds float, ptr %p0, i64 %60
  %62 = load float, ptr %61, align 4, !tbaa !7162
  %63 = fadd float %62, %58
  %64 = shl i64 %20, 32
  %sext21 = add i64 %64, 1236950581248
  %65 = ashr exact i64 %sext21, 32
  %66 = getelementptr inbounds float, ptr %p0, i64 %65
  %67 = load float, ptr %66, align 4, !tbaa !7162
  %68 = fadd float %67, %63
  %69 = shl i64 %20, 32
  %sext22 = add i64 %69, 1374389534720
  %70 = ashr exact i64 %sext22, 32
  %71 = getelementptr inbounds float, ptr %p0, i64 %70
  %72 = load float, ptr %71, align 4, !tbaa !7162
  %73 = fadd float %72, %68
  %74 = shl i64 %20, 32
  %sext23 = add i64 %74, 1511828488192
  %75 = ashr exact i64 %sext23, 32
  %76 = getelementptr inbounds float, ptr %p0, i64 %75
  %77 = load float, ptr %76, align 4, !tbaa !7162
  %78 = fadd float %77, %73
  %79 = shl i64 %20, 32
  %sext24 = add i64 %79, 1649267441664
  %80 = ashr exact i64 %sext24, 32
  %81 = getelementptr inbounds float, ptr %p0, i64 %80
  %82 = load float, ptr %81, align 4, !tbaa !7162
  %83 = fadd float %82, %78
  %84 = shl i64 %20, 32
  %sext25 = add i64 %84, 1786706395136
  %85 = ashr exact i64 %sext25, 32
  %86 = getelementptr inbounds float, ptr %p0, i64 %85
  %87 = load float, ptr %86, align 4, !tbaa !7162
  %88 = fadd float %87, %83
  %89 = shl i64 %20, 32
  %sext26 = add i64 %89, 1924145348608
  %90 = ashr exact i64 %sext26, 32
  %91 = getelementptr inbounds float, ptr %p0, i64 %90
  %92 = load float, ptr %91, align 4, !tbaa !7162
  %93 = fadd float %92, %88
  %94 = shl i64 %20, 32
  %sext27 = add i64 %94, 2061584302080
  %95 = ashr exact i64 %sext27, 32
  %96 = getelementptr inbounds float, ptr %p0, i64 %95
  %97 = load float, ptr %96, align 4, !tbaa !7162
  %98 = fadd float %97, %93
  %99 = shl i64 %20, 32
  %sext28 = add i64 %99, 2199023255552
  %100 = ashr exact i64 %sext28, 32
  %101 = getelementptr inbounds float, ptr %p0, i64 %100
  %102 = load float, ptr %101, align 4, !tbaa !7162
  %103 = fadd float %102, %98
  %104 = shl i64 %20, 32
  %sext29 = add i64 %104, 2336462209024
  %105 = ashr exact i64 %sext29, 32
  %106 = getelementptr inbounds float, ptr %p0, i64 %105
  %107 = load float, ptr %106, align 4, !tbaa !7162
  %108 = fadd float %107, %103
  %109 = shl i64 %20, 32
  %sext30 = add i64 %109, 2473901162496
  %110 = ashr exact i64 %sext30, 32
  %111 = getelementptr inbounds float, ptr %p0, i64 %110
  %112 = load float, ptr %111, align 4, !tbaa !7162
  %113 = fadd float %112, %108
  %114 = shl i64 %20, 32
  %sext31 = add i64 %114, 2611340115968
  %115 = ashr exact i64 %sext31, 32
  %116 = getelementptr inbounds float, ptr %p0, i64 %115
  %117 = load float, ptr %116, align 4, !tbaa !7162
  %118 = fadd float %117, %113
  %119 = shl i64 %20, 32
  %sext32 = add i64 %119, 2748779069440
  %120 = ashr exact i64 %sext32, 32
  %121 = getelementptr inbounds float, ptr %p0, i64 %120
  %122 = load float, ptr %121, align 4, !tbaa !7162
  %123 = fadd float %122, %118
  %124 = shl i64 %20, 32
  %sext33 = add i64 %124, 2886218022912
  %125 = ashr exact i64 %sext33, 32
  %126 = getelementptr inbounds float, ptr %p0, i64 %125
  %127 = load float, ptr %126, align 4, !tbaa !7162
  %128 = fadd float %127, %123
  %129 = shl i64 %20, 32
  %sext34 = add i64 %129, 3023656976384
  %130 = ashr exact i64 %sext34, 32
  %131 = getelementptr inbounds float, ptr %p0, i64 %130
  %132 = load float, ptr %131, align 4, !tbaa !7162
  %133 = fadd float %132, %128
  %134 = shl i64 %20, 32
  %sext35 = add i64 %134, 3161095929856
  %135 = ashr exact i64 %sext35, 32
  %136 = getelementptr inbounds float, ptr %p0, i64 %135
  %137 = load float, ptr %136, align 4, !tbaa !7162
  %138 = fadd float %137, %133
  %139 = shl i64 %20, 32
  %sext36 = add i64 %139, 3298534883328
  %140 = ashr exact i64 %sext36, 32
  %141 = getelementptr inbounds float, ptr %p0, i64 %140
  %142 = load float, ptr %141, align 4, !tbaa !7162
  %143 = fadd float %142, %138
  %144 = shl i64 %20, 32
  %sext37 = add i64 %144, 3435973836800
  %145 = ashr exact i64 %sext37, 32
  %146 = getelementptr inbounds float, ptr %p0, i64 %145
  %147 = load float, ptr %146, align 4, !tbaa !7162
  %148 = fadd float %147, %143
  %149 = shl i64 %20, 32
  %sext38 = add i64 %149, 3573412790272
  %150 = ashr exact i64 %sext38, 32
  %151 = getelementptr inbounds float, ptr %p0, i64 %150
  %152 = load float, ptr %151, align 4, !tbaa !7162
  %153 = fadd float %152, %148
  %154 = shl i64 %20, 32
  %sext39 = add i64 %154, 3710851743744
  %155 = ashr exact i64 %sext39, 32
  %156 = getelementptr inbounds float, ptr %p0, i64 %155
  %157 = load float, ptr %156, align 4, !tbaa !7162
  %158 = fadd float %157, %153
  %159 = shl i64 %20, 32
  %sext40 = add i64 %159, 3848290697216
  %160 = ashr exact i64 %sext40, 32
  %161 = getelementptr inbounds float, ptr %p0, i64 %160
  %162 = load float, ptr %161, align 4, !tbaa !7162
  %163 = fadd float %162, %158
  %164 = shl i64 %20, 32
  %sext41 = add i64 %164, 3985729650688
  %165 = ashr exact i64 %sext41, 32
  %166 = getelementptr inbounds float, ptr %p0, i64 %165
  %167 = load float, ptr %166, align 4, !tbaa !7162
  %168 = fadd float %167, %163
  %169 = shl i64 %20, 32
  %sext42 = add i64 %169, 4123168604160
  %170 = ashr exact i64 %sext42, 32
  %171 = getelementptr inbounds float, ptr %p0, i64 %170
  %172 = load float, ptr %171, align 4, !tbaa !7162
  %173 = fadd float %172, %168
  %174 = shl i64 %20, 32
  %sext43 = add i64 %174, 4260607557632
  %175 = ashr exact i64 %sext43, 32
  %176 = getelementptr inbounds float, ptr %p0, i64 %175
  %177 = load float, ptr %176, align 4, !tbaa !7162
  %178 = fadd float %177, %173
  %179 = shl i64 %20, 32
  %sext44 = add i64 %179, 4398046511104
  %180 = ashr exact i64 %sext44, 32
  %181 = getelementptr inbounds float, ptr %p0, i64 %180
  %182 = load float, ptr %181, align 4, !tbaa !7162
  %183 = fadd float %182, %178
  %184 = shl i64 %20, 32
  %sext45 = add i64 %184, 4535485464576
  %185 = ashr exact i64 %sext45, 32
  %186 = getelementptr inbounds float, ptr %p0, i64 %185
  %187 = load float, ptr %186, align 4, !tbaa !7162
  %188 = fadd float %187, %183
  %189 = shl i64 %20, 32
  %sext46 = add i64 %189, 4672924418048
  %190 = ashr exact i64 %sext46, 32
  %191 = getelementptr inbounds float, ptr %p0, i64 %190
  %192 = load float, ptr %191, align 4, !tbaa !7162
  %193 = fadd float %192, %188
  %194 = shl i64 %20, 32
  %sext47 = add i64 %194, 4810363371520
  %195 = ashr exact i64 %sext47, 32
  %196 = getelementptr inbounds float, ptr %p0, i64 %195
  %197 = load float, ptr %196, align 4, !tbaa !7162
  %198 = fadd float %197, %193
  %199 = shl i64 %20, 32
  %sext48 = add i64 %199, 4947802324992
  %200 = ashr exact i64 %sext48, 32
  %201 = getelementptr inbounds float, ptr %p0, i64 %200
  %202 = load float, ptr %201, align 4, !tbaa !7162
  %203 = fadd float %202, %198
  %204 = shl i64 %20, 32
  %sext49 = add i64 %204, 5085241278464
  %205 = ashr exact i64 %sext49, 32
  %206 = getelementptr inbounds float, ptr %p0, i64 %205
  %207 = load float, ptr %206, align 4, !tbaa !7162
  %208 = fadd float %207, %203
  %209 = shl i64 %20, 32
  %sext50 = add i64 %209, 5222680231936
  %210 = ashr exact i64 %sext50, 32
  %211 = getelementptr inbounds float, ptr %p0, i64 %210
  %212 = load float, ptr %211, align 4, !tbaa !7162
  %213 = fadd float %212, %208
  %214 = shl i64 %20, 32
  %sext51 = add i64 %214, 5360119185408
  %215 = ashr exact i64 %sext51, 32
  %216 = getelementptr inbounds float, ptr %p0, i64 %215
  %217 = load float, ptr %216, align 4, !tbaa !7162
  %218 = fadd float %217, %213
  %219 = shl i64 %20, 32
  %sext52 = add i64 %219, 5497558138880
  %220 = ashr exact i64 %sext52, 32
  %221 = getelementptr inbounds float, ptr %p0, i64 %220
  %222 = load float, ptr %221, align 4, !tbaa !7162
  %223 = fadd float %222, %218
  %224 = shl i64 %20, 32
  %sext53 = add i64 %224, 5634997092352
  %225 = ashr exact i64 %sext53, 32
  %226 = getelementptr inbounds float, ptr %p0, i64 %225
  %227 = load float, ptr %226, align 4, !tbaa !7162
  %228 = fadd float %227, %223
  %229 = shl i64 %20, 32
  %sext54 = add i64 %229, 5772436045824
  %230 = ashr exact i64 %sext54, 32
  %231 = getelementptr inbounds float, ptr %p0, i64 %230
  %232 = load float, ptr %231, align 4, !tbaa !7162
  %233 = fadd float %232, %228
  %234 = shl i64 %20, 32
  %sext55 = add i64 %234, 5909874999296
  %235 = ashr exact i64 %sext55, 32
  %236 = getelementptr inbounds float, ptr %p0, i64 %235
  %237 = load float, ptr %236, align 4, !tbaa !7162
  %238 = fadd float %237, %233
  %239 = shl i64 %20, 32
  %sext56 = add i64 %239, 6047313952768
  %240 = ashr exact i64 %sext56, 32
  %241 = getelementptr inbounds float, ptr %p0, i64 %240
  %242 = load float, ptr %241, align 4, !tbaa !7162
  %243 = fadd float %242, %238
  %244 = shl i64 %20, 32
  %sext57 = add i64 %244, 6184752906240
  %245 = ashr exact i64 %sext57, 32
  %246 = getelementptr inbounds float, ptr %p0, i64 %245
  %247 = load float, ptr %246, align 4, !tbaa !7162
  %248 = fadd float %247, %243
  %249 = shl i64 %20, 32
  %sext58 = add i64 %249, 6322191859712
  %250 = ashr exact i64 %sext58, 32
  %251 = getelementptr inbounds float, ptr %p0, i64 %250
  %252 = load float, ptr %251, align 4, !tbaa !7162
  %253 = fadd float %252, %248
  %254 = shl i64 %20, 32
  %sext59 = add i64 %254, 6459630813184
  %255 = ashr exact i64 %sext59, 32
  %256 = getelementptr inbounds float, ptr %p0, i64 %255
  %257 = load float, ptr %256, align 4, !tbaa !7162
  %258 = fadd float %257, %253
  %259 = shl i64 %20, 32
  %sext60 = add i64 %259, 6597069766656
  %260 = ashr exact i64 %sext60, 32
  %261 = getelementptr inbounds float, ptr %p0, i64 %260
  %262 = load float, ptr %261, align 4, !tbaa !7162
  %263 = fadd float %262, %258
  store float %263, ptr %19, align 4, !tbaa !7164
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 32
  br i1 %exitcond.not, label %for_end_ax4, label %for_body_ax4, !prof !52

for_end_ax4:                                      ; preds = %for_body_ax4
  %indvars.iv.next12 = add nsw i64 %indvars.iv11, 1
  %264 = add nsw i32 %ax0.ax1.fused.ax2.fused7, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next12 to i32
  %exitcond13.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond13.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax4.preheader, !prof !52
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.569(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %adaptive_pool_avg = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused, ptr %1, i64 0, i32 1
  %adaptive_pool_sum = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 63
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 64)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 64)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax4.preheader.preheader, label %for_end_ax0.ax1.fused, !prof !18

for_begin_ax4.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 64)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax4.preheader

for_begin_ax4.preheader:                          ; preds = %for_begin_ax4.preheader.preheader, %for_begin_ax4.preheader
  %indvars.iv = phi i64 [ %smin, %for_begin_ax4.preheader.preheader ], [ %indvars.iv.next, %for_begin_ax4.preheader ]
  %ax0.ax1.fused2 = phi i32 [ %10, %for_begin_ax4.preheader.preheader ], [ %56, %for_begin_ax4.preheader ]
  %15 = shl nsw i32 %ax0.ax1.fused2, 5
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds float, ptr %adaptive_pool_sum, i64 %16
  %18 = getelementptr inbounds float, ptr %adaptive_pool_avg, i64 %16
  %19 = load <4 x float>, ptr %17, align 4, !tbaa !7164
  %20 = fmul <4 x float> %19, <float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000>
  store <4 x float> %20, ptr %18, align 4, !tbaa !7166
  %21 = or i64 %16, 4
  %22 = getelementptr inbounds float, ptr %adaptive_pool_sum, i64 %21
  %23 = getelementptr inbounds float, ptr %adaptive_pool_avg, i64 %21
  %24 = load <4 x float>, ptr %22, align 4, !tbaa !7164
  %25 = fmul <4 x float> %24, <float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000>
  store <4 x float> %25, ptr %23, align 4, !tbaa !7166
  %26 = or i64 %16, 8
  %27 = getelementptr inbounds float, ptr %adaptive_pool_sum, i64 %26
  %28 = getelementptr inbounds float, ptr %adaptive_pool_avg, i64 %26
  %29 = load <4 x float>, ptr %27, align 4, !tbaa !7164
  %30 = fmul <4 x float> %29, <float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000>
  store <4 x float> %30, ptr %28, align 4, !tbaa !7166
  %31 = or i64 %16, 12
  %32 = getelementptr inbounds float, ptr %adaptive_pool_sum, i64 %31
  %33 = getelementptr inbounds float, ptr %adaptive_pool_avg, i64 %31
  %34 = load <4 x float>, ptr %32, align 4, !tbaa !7164
  %35 = fmul <4 x float> %34, <float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000>
  store <4 x float> %35, ptr %33, align 4, !tbaa !7166
  %36 = or i64 %16, 16
  %37 = getelementptr inbounds float, ptr %adaptive_pool_sum, i64 %36
  %38 = getelementptr inbounds float, ptr %adaptive_pool_avg, i64 %36
  %39 = load <4 x float>, ptr %37, align 4, !tbaa !7164
  %40 = fmul <4 x float> %39, <float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000>
  store <4 x float> %40, ptr %38, align 4, !tbaa !7166
  %41 = or i64 %16, 20
  %42 = getelementptr inbounds float, ptr %adaptive_pool_sum, i64 %41
  %43 = getelementptr inbounds float, ptr %adaptive_pool_avg, i64 %41
  %44 = load <4 x float>, ptr %42, align 4, !tbaa !7164
  %45 = fmul <4 x float> %44, <float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000>
  store <4 x float> %45, ptr %43, align 4, !tbaa !7166
  %46 = or i64 %16, 24
  %47 = getelementptr inbounds float, ptr %adaptive_pool_sum, i64 %46
  %48 = getelementptr inbounds float, ptr %adaptive_pool_avg, i64 %46
  %49 = load <4 x float>, ptr %47, align 4, !tbaa !7164
  %50 = fmul <4 x float> %49, <float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000>
  store <4 x float> %50, ptr %48, align 4, !tbaa !7166
  %51 = or i64 %16, 28
  %52 = getelementptr inbounds float, ptr %adaptive_pool_sum, i64 %51
  %53 = getelementptr inbounds float, ptr %adaptive_pool_avg, i64 %51
  %54 = load <4 x float>, ptr %52, align 4, !tbaa !7164
  %55 = fmul <4 x float> %54, <float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000, float 0x3F94E5E0A0000000>
  store <4 x float> %55, ptr %53, align 4, !tbaa !7166
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %56 = add nsw i32 %ax0.ax1.fused2, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond.not, label %for_end_ax0.ax1.fused, label %for_begin_ax4.preheader, !prof !52

for_end_ax0.ax1.fused:                            ; preds = %for_begin_ax4.preheader, %parallel_closure_entry
  ret i32 0
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused, align 8
  store i32 %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.619, ptr nonnull %5, i32 0)
  ret i32 %11
}

define private i32 @__tvm_parallel_lambda.619(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #0 {
parallel_closure_entry:
  %dev_id = load i32, ptr %1, align 4
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused, ptr %1, i64 0, i32 3
  %T_add = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused, ptr %1, i64 0, i32 4
  %p2 = load ptr, ptr %5, align 8
  %6 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %6, align 4
  %7 = add nsw i32 %num_task, 447
  %8 = sdiv i32 %7, %num_task
  %9 = add nsw i32 %task_id, 1
  %10 = mul nsw i32 %8, %9
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 448)
  %12 = mul i32 %8, %task_id
  %13 = tail call i32 @llvm.smin.i32(i32 %12, i32 448)
  %14 = icmp slt i32 %13, %11
  br i1 %14, label %for_body_ax0.ax1.fused.ax2.outer.fused.preheader, label %common.ret, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.preheader: ; preds = %parallel_closure_entry
  %15 = tail call i32 @llvm.smin.i32(i32 %12, i32 448)
  %smin = sext i32 %15 to i64
  %16 = add i32 %11, %15
  %17 = sub i32 %16, %13
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_begin_ax0.ax1.fused.ax2.outer.fused:          ; preds = %for_end_ax3.outer
  %indvars.iv.next71 = add nsw i64 %indvars.iv70, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next71 to i32
  %exitcond72.not = icmp eq i32 %17, %lftr.wideiv
  br i1 %exitcond72.not, label %common.ret, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !52

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.preheader, %for_begin_ax0.ax1.fused.ax2.outer.fused
  %indvars.iv70 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.preheader ], [ %indvars.iv.next71, %for_begin_ax0.ax1.fused.ax2.outer.fused ]
  %18 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %conv2d_NCHWc.global = tail call ptr %18(i32 1, i32 %dev_id, i64 7168, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %conv2d_NCHWc.global, i64 64) ]
  %19 = icmp eq ptr %conv2d_NCHWc.global, null
  br i1 %19, label %common.ret, label %for_begin_ow.c.outer.preheader, !prof !18

for_begin_ow.c.outer.preheader:                   ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused
  %20 = trunc i64 %indvars.iv70 to i32
  %21 = sdiv i32 %20, 56
  %22 = shl nsw i32 %21, 11
  %23 = srem i32 %20, 56
  %24 = mul nsw i32 %23, 224
  %25 = sext i32 %22 to i64
  %26 = sext i32 %24 to i64
  br label %for_body_ow.c.outer

common.ret:                                       ; preds = %for_begin_ax0.ax1.fused.ax2.outer.fused, %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ax3.outer, %parallel_closure_entry
  %common.ret.op = phi i32 [ 0, %parallel_closure_entry ], [ -1, %for_end_ax3.outer ], [ -1, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ 0, %for_begin_ax0.ax1.fused.ax2.outer.fused ]
  ret i32 %common.ret.op

for_begin_ax3.outer.preheader:                    ; preds = %for_end_ic.outer
  %27 = shl nsw i32 %21, 5
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds float, ptr %p2, i64 %28
  %30 = load <32 x float>, ptr %29, align 64, !tbaa !7168
  %31 = mul nsw i64 %indvars.iv70, 1792
  br label %for_begin_ax3.inner.preheader

for_body_ow.c.outer:                              ; preds = %for_begin_ow.c.outer.preheader, %for_end_ic.outer
  %indvars.iv57 = phi i64 [ 0, %for_begin_ow.c.outer.preheader ], [ %indvars.iv.next58, %for_end_ic.outer ]
  %32 = mul nuw nsw i64 %indvars.iv57, 7
  %33 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %32
  %34 = add nuw nsw i64 %32, 1
  %35 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %34
  %36 = add nuw nsw i64 %32, 2
  %37 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %36
  %38 = add nuw nsw i64 %32, 3
  %39 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %38
  %40 = add nuw nsw i64 %32, 4
  %41 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %40
  %42 = add nuw nsw i64 %32, 5
  %43 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %42
  %44 = add nuw nsw i64 %32, 6
  %45 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %44
  %46 = mul nuw nsw i64 %indvars.iv57, 28
  %47 = add nsw i64 %46, %26
  br label %for_begin_ic.inner.preheader

for_begin_ic.inner.preheader:                     ; preds = %for_body_ow.c.outer, %for_end_ic.inner
  %indvars.iv53 = phi i64 [ 0, %for_body_ow.c.outer ], [ %indvars.iv.next54, %for_end_ic.inner ]
  %.lcssa1836 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %68, %for_end_ic.inner ]
  %.lcssa51935 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %74, %for_end_ic.inner ]
  %.lcssa72134 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %80, %for_end_ic.inner ]
  %.lcssa92333 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %86, %for_end_ic.inner ]
  %.lcssa112532 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %92, %for_end_ic.inner ]
  %.lcssa132731 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %98, %for_end_ic.inner ]
  %.lcssa152930 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %104, %for_end_ic.inner ]
  %48 = shl nsw i64 %indvars.iv53, 7
  %49 = add nuw nsw i64 %48, %25
  %50 = mul nuw nsw i64 %indvars.iv53, 12544
  %51 = add nsw i64 %47, %50
  br label %for_body_ic.inner

for_end_ic.outer:                                 ; preds = %for_end_ic.inner
  store <32 x float> %68, ptr %33, align 64, !tbaa !7170
  store <32 x float> %74, ptr %35, align 64, !tbaa !7170
  store <32 x float> %80, ptr %37, align 64, !tbaa !7170
  store <32 x float> %86, ptr %39, align 64, !tbaa !7170
  store <32 x float> %92, ptr %41, align 64, !tbaa !7170
  store <32 x float> %98, ptr %43, align 64, !tbaa !7170
  store <32 x float> %104, ptr %45, align 64, !tbaa !7170
  %indvars.iv.next58 = add nuw nsw i64 %indvars.iv57, 1
  %exitcond61.not = icmp eq i64 %indvars.iv.next58, 8
  br i1 %exitcond61.not, label %for_begin_ax3.outer.preheader, label %for_body_ow.c.outer, !prof !52

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %52 = phi <32 x float> [ %.lcssa1836, %for_begin_ic.inner.preheader ], [ %68, %for_body_ic.inner ]
  %53 = phi <32 x float> [ %.lcssa51935, %for_begin_ic.inner.preheader ], [ %74, %for_body_ic.inner ]
  %54 = phi <32 x float> [ %.lcssa72134, %for_begin_ic.inner.preheader ], [ %80, %for_body_ic.inner ]
  %55 = phi <32 x float> [ %.lcssa92333, %for_begin_ic.inner.preheader ], [ %86, %for_body_ic.inner ]
  %56 = phi <32 x float> [ %.lcssa112532, %for_begin_ic.inner.preheader ], [ %92, %for_body_ic.inner ]
  %57 = phi <32 x float> [ %.lcssa132731, %for_begin_ic.inner.preheader ], [ %98, %for_body_ic.inner ]
  %58 = phi <32 x float> [ %.lcssa152930, %for_begin_ic.inner.preheader ], [ %104, %for_body_ic.inner ]
  %59 = shl nuw nsw i64 %indvars.iv, 5
  %60 = add nuw nsw i64 %49, %59
  %61 = add nsw i64 %51, %indvars.iv
  %62 = getelementptr inbounds float, ptr %p0, i64 %61
  %63 = load float, ptr %62, align 4, !tbaa !7172
  %64 = insertelement <32 x float> undef, float %63, i64 0
  %65 = shufflevector <32 x float> %64, <32 x float> undef, <32 x i32> zeroinitializer
  %66 = getelementptr inbounds float, ptr %p1, i64 %60
  %67 = load <32 x float>, ptr %66, align 64, !tbaa !7174
  %68 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %65, <32 x float> %67, <32 x float> %52)
  %69 = add nsw i64 %61, 4
  %70 = getelementptr inbounds float, ptr %p0, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !7172
  %72 = insertelement <32 x float> undef, float %71, i64 0
  %73 = shufflevector <32 x float> %72, <32 x float> undef, <32 x i32> zeroinitializer
  %74 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %73, <32 x float> %67, <32 x float> %53)
  %75 = add nsw i64 %61, 8
  %76 = getelementptr inbounds float, ptr %p0, i64 %75
  %77 = load float, ptr %76, align 4, !tbaa !7172
  %78 = insertelement <32 x float> undef, float %77, i64 0
  %79 = shufflevector <32 x float> %78, <32 x float> undef, <32 x i32> zeroinitializer
  %80 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %79, <32 x float> %67, <32 x float> %54)
  %81 = add nsw i64 %61, 12
  %82 = getelementptr inbounds float, ptr %p0, i64 %81
  %83 = load float, ptr %82, align 4, !tbaa !7172
  %84 = insertelement <32 x float> undef, float %83, i64 0
  %85 = shufflevector <32 x float> %84, <32 x float> undef, <32 x i32> zeroinitializer
  %86 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %85, <32 x float> %67, <32 x float> %55)
  %87 = add nsw i64 %61, 16
  %88 = getelementptr inbounds float, ptr %p0, i64 %87
  %89 = load float, ptr %88, align 4, !tbaa !7172
  %90 = insertelement <32 x float> undef, float %89, i64 0
  %91 = shufflevector <32 x float> %90, <32 x float> undef, <32 x i32> zeroinitializer
  %92 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %91, <32 x float> %67, <32 x float> %56)
  %93 = add nsw i64 %61, 20
  %94 = getelementptr inbounds float, ptr %p0, i64 %93
  %95 = load float, ptr %94, align 4, !tbaa !7172
  %96 = insertelement <32 x float> undef, float %95, i64 0
  %97 = shufflevector <32 x float> %96, <32 x float> undef, <32 x i32> zeroinitializer
  %98 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %97, <32 x float> %67, <32 x float> %57)
  %99 = add nsw i64 %61, 24
  %100 = getelementptr inbounds float, ptr %p0, i64 %99
  %101 = load float, ptr %100, align 4, !tbaa !7172
  %102 = insertelement <32 x float> undef, float %101, i64 0
  %103 = shufflevector <32 x float> %102, <32 x float> undef, <32 x i32> zeroinitializer
  %104 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %103, <32 x float> %67, <32 x float> %58)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next54 = add nuw nsw i64 %indvars.iv53, 1
  %exitcond56.not = icmp eq i64 %indvars.iv.next54, 16
  br i1 %exitcond56.not, label %for_end_ic.outer, label %for_begin_ic.inner.preheader, !prof !52

for_begin_ax3.inner.preheader:                    ; preds = %for_begin_ax3.outer.preheader, %for_begin_ax3.inner.preheader
  %indvars.iv66 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next67, %for_begin_ax3.inner.preheader ]
  %105 = mul nuw nsw i64 %indvars.iv66, 7
  %106 = mul nuw nsw i64 %indvars.iv66, 224
  %107 = add nsw i64 %106, %31
  %108 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %105
  %109 = load <32 x float>, ptr %108, align 64, !tbaa !7170
  %110 = fadd <32 x float> %30, %109
  %111 = getelementptr inbounds float, ptr %T_add, i64 %107
  store <32 x float> %110, ptr %111, align 64, !tbaa !7176
  %112 = add nuw nsw i64 %105, 1
  %113 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %112
  %114 = load <32 x float>, ptr %113, align 64, !tbaa !7170
  %115 = fadd <32 x float> %30, %114
  %116 = add nsw i64 %107, 32
  %117 = getelementptr inbounds float, ptr %T_add, i64 %116
  store <32 x float> %115, ptr %117, align 64, !tbaa !7176
  %118 = add nuw nsw i64 %105, 2
  %119 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %118
  %120 = load <32 x float>, ptr %119, align 64, !tbaa !7170
  %121 = fadd <32 x float> %30, %120
  %122 = add nsw i64 %107, 64
  %123 = getelementptr inbounds float, ptr %T_add, i64 %122
  store <32 x float> %121, ptr %123, align 64, !tbaa !7176
  %124 = add nuw nsw i64 %105, 3
  %125 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %124
  %126 = load <32 x float>, ptr %125, align 64, !tbaa !7170
  %127 = fadd <32 x float> %30, %126
  %128 = add nsw i64 %107, 96
  %129 = getelementptr inbounds float, ptr %T_add, i64 %128
  store <32 x float> %127, ptr %129, align 64, !tbaa !7176
  %130 = add nuw nsw i64 %105, 4
  %131 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %130
  %132 = load <32 x float>, ptr %131, align 64, !tbaa !7170
  %133 = fadd <32 x float> %30, %132
  %134 = add nsw i64 %107, 128
  %135 = getelementptr inbounds float, ptr %T_add, i64 %134
  store <32 x float> %133, ptr %135, align 64, !tbaa !7176
  %136 = add nuw nsw i64 %105, 5
  %137 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %136
  %138 = load <32 x float>, ptr %137, align 64, !tbaa !7170
  %139 = fadd <32 x float> %30, %138
  %140 = add nsw i64 %107, 160
  %141 = getelementptr inbounds float, ptr %T_add, i64 %140
  store <32 x float> %139, ptr %141, align 64, !tbaa !7176
  %142 = add nuw nsw i64 %105, 6
  %143 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %142
  %144 = load <32 x float>, ptr %143, align 64, !tbaa !7170
  %145 = fadd <32 x float> %30, %144
  %146 = add nsw i64 %107, 192
  %147 = getelementptr inbounds float, ptr %T_add, i64 %146
  store <32 x float> %145, ptr %147, align 64, !tbaa !7176
  %indvars.iv.next67 = add nuw nsw i64 %indvars.iv66, 1
  %exitcond69.not = icmp eq i64 %indvars.iv.next67, 8
  br i1 %exitcond69.not, label %for_end_ax3.outer, label %for_begin_ax3.inner.preheader, !prof !52

for_end_ax3.outer:                                ; preds = %for_begin_ax3.inner.preheader
  %148 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %149 = tail call i32 %148(i32 1, i32 %dev_id, ptr nonnull %conv2d_NCHWc.global)
  %.not = icmp eq i32 %149, 0
  br i1 %.not, label %for_begin_ax0.ax1.fused.ax2.outer.fused, label %common.ret, !prof !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <32 x float> @llvm.fmuladd.v32f32(<32 x float>, <32 x float>, <32 x float>) #5

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.21, align 8
  store i32 %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.21, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.21, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.21, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.21, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.669, ptr nonnull %5, i32 0)
  ret i32 %11
}

define private i32 @__tvm_parallel_lambda.669(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #0 {
parallel_closure_entry:
  %dev_id = load i32, ptr %1, align 4
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.21, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.21, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.21, ptr %1, i64 0, i32 3
  %T_add = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.21, ptr %1, i64 0, i32 4
  %p2 = load ptr, ptr %5, align 8
  %6 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %6, align 4
  %7 = add nsw i32 %num_task, 223
  %8 = sdiv i32 %7, %num_task
  %9 = add nsw i32 %task_id, 1
  %10 = mul nsw i32 %8, %9
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 224)
  %12 = mul i32 %8, %task_id
  %13 = tail call i32 @llvm.smin.i32(i32 %12, i32 224)
  %14 = icmp slt i32 %13, %11
  br i1 %14, label %for_body_ax0.ax1.fused.ax2.outer.fused.preheader, label %common.ret, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.preheader: ; preds = %parallel_closure_entry
  %15 = tail call i32 @llvm.smin.i32(i32 %12, i32 224)
  %smin = sext i32 %15 to i64
  %16 = add i32 %11, %15
  %17 = sub i32 %16, %13
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_begin_ax0.ax1.fused.ax2.outer.fused:          ; preds = %for_end_ax3.outer
  %indvars.iv.next37 = add nsw i64 %indvars.iv36, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next37 to i32
  %exitcond38.not = icmp eq i32 %17, %lftr.wideiv
  br i1 %exitcond38.not, label %common.ret, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !52

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.preheader, %for_begin_ax0.ax1.fused.ax2.outer.fused
  %indvars.iv36 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.preheader ], [ %indvars.iv.next37, %for_begin_ax0.ax1.fused.ax2.outer.fused ]
  %18 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %conv2d_NCHWc.global = tail call ptr %18(i32 1, i32 %dev_id, i64 7168, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %conv2d_NCHWc.global, i64 64) ]
  %19 = icmp eq ptr %conv2d_NCHWc.global, null
  br i1 %19, label %common.ret, label %for_begin_ow.c.outer.preheader, !prof !18

for_begin_ow.c.outer.preheader:                   ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused
  %20 = trunc i64 %indvars.iv36 to i32
  %21 = sdiv i32 %20, 28
  %22 = shl nsw i32 %21, 14
  %23 = srem i32 %20, 28
  %24 = mul nsw i32 %23, 28672
  %25 = sext i32 %22 to i64
  %26 = sext i32 %24 to i64
  br label %for_body_ow.c.outer

common.ret:                                       ; preds = %for_begin_ax0.ax1.fused.ax2.outer.fused, %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ax3.outer, %parallel_closure_entry
  %common.ret.op = phi i32 [ 0, %parallel_closure_entry ], [ -1, %for_end_ax3.outer ], [ -1, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ 0, %for_begin_ax0.ax1.fused.ax2.outer.fused ]
  ret i32 %common.ret.op

for_begin_ax3.outer.preheader:                    ; preds = %for_end_ic.inner
  %27 = shl nsw i32 %21, 6
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds float, ptr %p2, i64 %28
  %30 = load <64 x float>, ptr %29, align 64, !tbaa !7178
  %31 = mul nsw i64 %indvars.iv36, 1792
  br label %for_begin_ax3.inner.preheader

for_body_ow.c.outer:                              ; preds = %for_begin_ow.c.outer.preheader, %for_end_ic.inner
  %indvars.iv23 = phi i64 [ 0, %for_begin_ow.c.outer.preheader ], [ %indvars.iv.next24, %for_end_ic.inner ]
  %32 = shl nuw nsw i64 %indvars.iv23, 2
  %33 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %32
  %34 = or i64 %32, 1
  %35 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %34
  %36 = or i64 %32, 2
  %37 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %36
  %38 = or i64 %32, 3
  %39 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %38
  %40 = shl nsw i64 %indvars.iv23, 11
  %41 = add nsw i64 %40, %26
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_body_ow.c.outer, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_body_ow.c.outer ], [ %indvars.iv.next, %for_body_ic.inner ]
  %42 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %55, %for_body_ic.inner ]
  %43 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %61, %for_body_ic.inner ]
  %44 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %67, %for_body_ic.inner ]
  %45 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %73, %for_body_ic.inner ]
  %46 = shl nuw nsw i64 %indvars.iv, 6
  %47 = add nuw nsw i64 %46, %25
  %48 = add nsw i64 %41, %indvars.iv
  %49 = getelementptr inbounds float, ptr %p0, i64 %48
  %50 = load float, ptr %49, align 4, !tbaa !7180
  %51 = insertelement <64 x float> undef, float %50, i64 0
  %52 = shufflevector <64 x float> %51, <64 x float> undef, <64 x i32> zeroinitializer
  %53 = getelementptr inbounds float, ptr %p1, i64 %47
  %54 = load <64 x float>, ptr %53, align 64, !tbaa !7182
  %55 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %52, <64 x float> %54, <64 x float> %42)
  %56 = add nsw i64 %48, 512
  %57 = getelementptr inbounds float, ptr %p0, i64 %56
  %58 = load float, ptr %57, align 4, !tbaa !7180
  %59 = insertelement <64 x float> undef, float %58, i64 0
  %60 = shufflevector <64 x float> %59, <64 x float> undef, <64 x i32> zeroinitializer
  %61 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %60, <64 x float> %54, <64 x float> %43)
  %62 = add nsw i64 %48, 1024
  %63 = getelementptr inbounds float, ptr %p0, i64 %62
  %64 = load float, ptr %63, align 4, !tbaa !7180
  %65 = insertelement <64 x float> undef, float %64, i64 0
  %66 = shufflevector <64 x float> %65, <64 x float> undef, <64 x i32> zeroinitializer
  %67 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %66, <64 x float> %54, <64 x float> %44)
  %68 = add nsw i64 %48, 1536
  %69 = getelementptr inbounds float, ptr %p0, i64 %68
  %70 = load float, ptr %69, align 4, !tbaa !7180
  %71 = insertelement <64 x float> undef, float %70, i64 0
  %72 = shufflevector <64 x float> %71, <64 x float> undef, <64 x i32> zeroinitializer
  %73 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %72, <64 x float> %54, <64 x float> %45)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 256
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  store <64 x float> %55, ptr %33, align 64, !tbaa !7184
  store <64 x float> %61, ptr %35, align 64, !tbaa !7184
  store <64 x float> %67, ptr %37, align 64, !tbaa !7184
  store <64 x float> %73, ptr %39, align 64, !tbaa !7184
  %indvars.iv.next24 = add nuw nsw i64 %indvars.iv23, 1
  %exitcond27.not = icmp eq i64 %indvars.iv.next24, 7
  br i1 %exitcond27.not, label %for_begin_ax3.outer.preheader, label %for_body_ow.c.outer, !prof !52

for_begin_ax3.inner.preheader:                    ; preds = %for_begin_ax3.outer.preheader, %for_begin_ax3.inner.preheader
  %indvars.iv32 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next33, %for_begin_ax3.inner.preheader ]
  %74 = shl nsw i64 %indvars.iv32, 2
  %75 = shl nsw i64 %indvars.iv32, 8
  %76 = add nsw i64 %75, %31
  %77 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %74
  %78 = load <64 x float>, ptr %77, align 64, !tbaa !7184
  %79 = fadd <64 x float> %30, %78
  %80 = getelementptr inbounds float, ptr %T_add, i64 %76
  store <64 x float> %79, ptr %80, align 64, !tbaa !7186
  %81 = or i64 %74, 1
  %82 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %81
  %83 = load <64 x float>, ptr %82, align 64, !tbaa !7184
  %84 = fadd <64 x float> %30, %83
  %85 = or i64 %76, 64
  %86 = getelementptr inbounds float, ptr %T_add, i64 %85
  store <64 x float> %84, ptr %86, align 64, !tbaa !7186
  %87 = or i64 %74, 2
  %88 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %87
  %89 = load <64 x float>, ptr %88, align 64, !tbaa !7184
  %90 = fadd <64 x float> %30, %89
  %91 = or i64 %76, 128
  %92 = getelementptr inbounds float, ptr %T_add, i64 %91
  store <64 x float> %90, ptr %92, align 64, !tbaa !7186
  %93 = or i64 %74, 3
  %94 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %93
  %95 = load <64 x float>, ptr %94, align 64, !tbaa !7184
  %96 = fadd <64 x float> %30, %95
  %97 = or i64 %76, 192
  %98 = getelementptr inbounds float, ptr %T_add, i64 %97
  store <64 x float> %96, ptr %98, align 64, !tbaa !7186
  %indvars.iv.next33 = add nuw nsw i64 %indvars.iv32, 1
  %exitcond35.not = icmp eq i64 %indvars.iv.next33, 7
  br i1 %exitcond35.not, label %for_end_ax3.outer, label %for_begin_ax3.inner.preheader, !prof !52

for_end_ax3.outer:                                ; preds = %for_begin_ax3.inner.preheader
  %99 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %100 = tail call i32 %99(i32 1, i32 %dev_id, ptr nonnull %conv2d_NCHWc.global)
  %.not = icmp eq i32 %100, 0
  br i1 %.not, label %for_begin_ax0.ax1.fused.ax2.outer.fused, label %common.ret, !prof !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <64 x float> @llvm.fmuladd.v64f32(<64 x float>, <64 x float>, <64 x float>) #5

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22, align 8
  store i32 %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.719, ptr nonnull %5, i32 0)
  ret i32 %11
}

define private i32 @__tvm_parallel_lambda.719(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #0 {
parallel_closure_entry:
  %dev_id = load i32, ptr %1, align 4
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22, ptr %1, i64 0, i32 3
  %T_add = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.22, ptr %1, i64 0, i32 4
  %p2 = load ptr, ptr %5, align 8
  %6 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %6, align 4
  %7 = add nsw i32 %num_task, 111
  %8 = sdiv i32 %7, %num_task
  %9 = add nsw i32 %task_id, 1
  %10 = mul nsw i32 %8, %9
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 112)
  %12 = mul nsw i32 %8, %task_id
  %13 = tail call i32 @llvm.smin.i32(i32 %12, i32 112)
  %14 = icmp slt i32 %13, %11
  br i1 %14, label %for_body_ax0.ax1.fused.ax2.outer.fused, label %common.ret, !prof !18

for_begin_ax0.ax1.fused.ax2.outer.fused:          ; preds = %for_end_ax3.outer
  %15 = add nsw i32 %ax0.ax1.fused.ax2.outer.fused15, 1
  %exitcond39.not = icmp eq i32 %15, %11
  br i1 %exitcond39.not, label %common.ret, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !52

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %parallel_closure_entry, %for_begin_ax0.ax1.fused.ax2.outer.fused
  %ax0.ax1.fused.ax2.outer.fused15 = phi i32 [ %15, %for_begin_ax0.ax1.fused.ax2.outer.fused ], [ %13, %parallel_closure_entry ]
  %16 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %conv2d_NCHWc.global = tail call ptr %16(i32 1, i32 %dev_id, i64 7168, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %conv2d_NCHWc.global, i64 64) ]
  %17 = icmp eq ptr %conv2d_NCHWc.global, null
  br i1 %17, label %common.ret, label %for_begin_ow.c.outer.preheader, !prof !18

for_begin_ow.c.outer.preheader:                   ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused
  %18 = sdiv i32 %ax0.ax1.fused.ax2.outer.fused15, 7
  %19 = shl nsw i32 %18, 15
  %20 = srem i32 %ax0.ax1.fused.ax2.outer.fused15, 7
  %21 = mul nsw i32 %20, 57344
  %22 = sext i32 %19 to i64
  %23 = sext i32 %21 to i64
  br label %for_body_ow.c.outer

common.ret:                                       ; preds = %for_begin_ax0.ax1.fused.ax2.outer.fused, %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ax3.outer, %parallel_closure_entry
  %common.ret.op = phi i32 [ 0, %parallel_closure_entry ], [ -1, %for_end_ax3.outer ], [ -1, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ 0, %for_begin_ax0.ax1.fused.ax2.outer.fused ]
  ret i32 %common.ret.op

for_begin_ax3.outer.preheader:                    ; preds = %for_end_ic.inner
  %24 = shl nsw i32 %18, 6
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds float, ptr %p2, i64 %25
  %27 = load <64 x float>, ptr %26, align 64, !tbaa !7188
  %28 = mul nsw i32 %ax0.ax1.fused.ax2.outer.fused15, 1792
  br label %for_begin_ax2.inner.preheader

for_body_ow.c.outer:                              ; preds = %for_begin_ow.c.outer.preheader, %for_end_ic.inner
  %indvars.iv24 = phi i64 [ 0, %for_begin_ow.c.outer.preheader ], [ %indvars.iv.next25, %for_end_ic.inner ]
  %29 = shl nuw nsw i64 %indvars.iv24, 1
  %30 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %29
  %31 = or i64 %29, 1
  %32 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %31
  %33 = add nuw nsw i64 %29, 14
  %34 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %33
  %35 = add nuw nsw i64 %29, 15
  %36 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %35
  %37 = shl nsw i64 %indvars.iv24, 11
  %38 = add nsw i64 %37, %23
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_body_ow.c.outer, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_body_ow.c.outer ], [ %indvars.iv.next, %for_body_ic.inner ]
  %39 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %52, %for_body_ic.inner ]
  %40 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %58, %for_body_ic.inner ]
  %41 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %64, %for_body_ic.inner ]
  %42 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %70, %for_body_ic.inner ]
  %43 = shl nuw nsw i64 %indvars.iv, 6
  %44 = add nuw nsw i64 %43, %22
  %45 = add nsw i64 %38, %indvars.iv
  %46 = getelementptr inbounds float, ptr %p0, i64 %45
  %47 = load float, ptr %46, align 4, !tbaa !7190
  %48 = insertelement <64 x float> undef, float %47, i64 0
  %49 = shufflevector <64 x float> %48, <64 x float> undef, <64 x i32> zeroinitializer
  %50 = getelementptr inbounds float, ptr %p1, i64 %44
  %51 = load <64 x float>, ptr %50, align 64, !tbaa !7192
  %52 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %49, <64 x float> %51, <64 x float> %39)
  %53 = add nsw i64 %45, 1024
  %54 = getelementptr inbounds float, ptr %p0, i64 %53
  %55 = load float, ptr %54, align 4, !tbaa !7190
  %56 = insertelement <64 x float> undef, float %55, i64 0
  %57 = shufflevector <64 x float> %56, <64 x float> undef, <64 x i32> zeroinitializer
  %58 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %57, <64 x float> %51, <64 x float> %40)
  %59 = add nsw i64 %45, 28672
  %60 = getelementptr inbounds float, ptr %p0, i64 %59
  %61 = load float, ptr %60, align 4, !tbaa !7190
  %62 = insertelement <64 x float> undef, float %61, i64 0
  %63 = shufflevector <64 x float> %62, <64 x float> undef, <64 x i32> zeroinitializer
  %64 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %63, <64 x float> %51, <64 x float> %41)
  %65 = add nsw i64 %45, 29696
  %66 = getelementptr inbounds float, ptr %p0, i64 %65
  %67 = load float, ptr %66, align 4, !tbaa !7190
  %68 = insertelement <64 x float> undef, float %67, i64 0
  %69 = shufflevector <64 x float> %68, <64 x float> undef, <64 x i32> zeroinitializer
  %70 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %69, <64 x float> %51, <64 x float> %42)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 512
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  store <64 x float> %52, ptr %30, align 64, !tbaa !7194
  store <64 x float> %58, ptr %32, align 64, !tbaa !7194
  store <64 x float> %64, ptr %34, align 64, !tbaa !7194
  store <64 x float> %70, ptr %36, align 64, !tbaa !7194
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1
  %exitcond28.not = icmp eq i64 %indvars.iv.next25, 7
  br i1 %exitcond28.not, label %for_begin_ax3.outer.preheader, label %for_body_ow.c.outer, !prof !52

for_begin_ax2.inner.preheader:                    ; preds = %for_begin_ax3.outer.preheader, %for_begin_ax2.inner.preheader
  %indvars.iv35 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next36, %for_begin_ax2.inner.preheader ]
  %71 = shl nuw nsw i64 %indvars.iv35, 1
  %indvars.iv35.tr = trunc i64 %indvars.iv35 to i32
  %72 = shl i32 %indvars.iv35.tr, 7
  %73 = add i32 %72, %28
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %71
  %76 = load <64 x float>, ptr %75, align 64, !tbaa !7194
  %77 = fadd <64 x float> %27, %76
  %78 = getelementptr inbounds float, ptr %T_add, i64 %74
  store <64 x float> %77, ptr %78, align 64, !tbaa !7196
  %79 = or i64 %71, 1
  %80 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %79
  %81 = load <64 x float>, ptr %80, align 64, !tbaa !7194
  %82 = fadd <64 x float> %27, %81
  %83 = or i64 %74, 64
  %84 = getelementptr inbounds float, ptr %T_add, i64 %83
  store <64 x float> %82, ptr %84, align 64, !tbaa !7196
  %85 = add nuw nsw i64 %71, 14
  %86 = add i32 %73, 896
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %85
  %89 = load <64 x float>, ptr %88, align 64, !tbaa !7194
  %90 = fadd <64 x float> %27, %89
  %91 = getelementptr inbounds float, ptr %T_add, i64 %87
  store <64 x float> %90, ptr %91, align 64, !tbaa !7196
  %92 = add nuw nsw i64 %71, 15
  %93 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %92
  %94 = load <64 x float>, ptr %93, align 64, !tbaa !7194
  %95 = fadd <64 x float> %27, %94
  %96 = or i64 %87, 64
  %97 = getelementptr inbounds float, ptr %T_add, i64 %96
  store <64 x float> %95, ptr %97, align 64, !tbaa !7196
  %indvars.iv.next36 = add nuw nsw i64 %indvars.iv35, 1
  %exitcond38.not = icmp eq i64 %indvars.iv.next36, 7
  br i1 %exitcond38.not, label %for_end_ax3.outer, label %for_begin_ax2.inner.preheader, !prof !52

for_end_ax3.outer:                                ; preds = %for_begin_ax2.inner.preheader
  %98 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %99 = tail call i32 %98(i32 1, i32 %dev_id, ptr nonnull %conv2d_NCHWc.global)
  %.not = icmp eq i32 %99, 0
  br i1 %.not, label %for_begin_ax0.ax1.fused.ax2.outer.fused, label %common.ret, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3) unnamed_addr #2 {
entry:
  %4 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.23, align 8
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.23, ptr %4, i64 0, i32 1
  store ptr %1, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.23, ptr %4, i64 0, i32 2
  store ptr %2, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.23, ptr %4, i64 0, i32 3
  store ptr %3, ptr %7, align 8
  %8 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %9 = call i32 %8(ptr nonnull @__tvm_parallel_lambda.769, ptr nonnull %4, i32 0)
  ret i32 %9
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.769(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.23, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.23, ptr %1, i64 0, i32 2
  %T_add = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.23, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 447
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 448)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 448)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph:     ; preds = %parallel_closure_entry
  %14 = tail call i32 @llvm.smin.i32(i32 %11, i32 448)
  %smin = sext i32 %14 to i64
  %15 = add i32 %10, %14
  %16 = sub i32 %15, %12
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, %for_begin_ax3.inner.preheader
  %indvars.iv31 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph ], [ %indvars.iv.next32, %for_begin_ax3.inner.preheader ]
  %17 = trunc i64 %indvars.iv31 to i32
  %18 = srem i32 %17, 7
  %19 = mul nsw i32 %18, 28672
  %20 = sdiv i32 %17, 7
  %21 = shl nsw i32 %20, 15
  %22 = sext i32 %19 to i64
  %23 = sext i32 %21 to i64
  br label %for_body_ic.inner

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_begin_ax3.inner.preheader, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_body_ic.inner
  %24 = shl nsw i32 %20, 5
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds float, ptr %p2, i64 %25
  %27 = load <32 x float>, ptr %26, align 64, !tbaa !7198
  %28 = mul nsw i64 %indvars.iv31, 224
  %29 = fadd <32 x float> %27, %65
  %30 = getelementptr inbounds float, ptr %T_add, i64 %28
  store <32 x float> %29, ptr %30, align 64, !tbaa !7200
  %31 = fadd <32 x float> %27, %71
  %32 = add nsw i64 %28, 32
  %33 = getelementptr inbounds float, ptr %T_add, i64 %32
  store <32 x float> %31, ptr %33, align 64, !tbaa !7200
  %34 = fadd <32 x float> %27, %77
  %35 = add nsw i64 %28, 64
  %36 = getelementptr inbounds float, ptr %T_add, i64 %35
  store <32 x float> %34, ptr %36, align 64, !tbaa !7200
  %37 = fadd <32 x float> %27, %83
  %38 = add nsw i64 %28, 96
  %39 = getelementptr inbounds float, ptr %T_add, i64 %38
  store <32 x float> %37, ptr %39, align 64, !tbaa !7200
  %40 = fadd <32 x float> %27, %89
  %41 = add nsw i64 %28, 128
  %42 = getelementptr inbounds float, ptr %T_add, i64 %41
  store <32 x float> %40, ptr %42, align 64, !tbaa !7200
  %43 = fadd <32 x float> %27, %95
  %44 = add nsw i64 %28, 160
  %45 = getelementptr inbounds float, ptr %T_add, i64 %44
  store <32 x float> %43, ptr %45, align 64, !tbaa !7200
  %46 = fadd <32 x float> %27, %101
  %47 = add nsw i64 %28, 192
  %48 = getelementptr inbounds float, ptr %T_add, i64 %47
  store <32 x float> %46, ptr %48, align 64, !tbaa !7200
  %indvars.iv.next32 = add nsw i64 %indvars.iv31, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next32 to i32
  %exitcond33.not = icmp eq i32 %16, %lftr.wideiv
  br i1 %exitcond33.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !52

for_body_ic.inner:                                ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %indvars.iv.next, %for_body_ic.inner ]
  %49 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %65, %for_body_ic.inner ]
  %50 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %71, %for_body_ic.inner ]
  %51 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %77, %for_body_ic.inner ]
  %52 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %83, %for_body_ic.inner ]
  %53 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %89, %for_body_ic.inner ]
  %54 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %95, %for_body_ic.inner ]
  %55 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %101, %for_body_ic.inner ]
  %56 = add nuw nsw i64 %indvars.iv, %22
  %57 = shl nuw nsw i64 %indvars.iv, 5
  %58 = add nuw nsw i64 %57, %23
  %59 = getelementptr inbounds float, ptr %p0, i64 %56
  %60 = load float, ptr %59, align 4, !tbaa !7202
  %61 = insertelement <32 x float> undef, float %60, i64 0
  %62 = shufflevector <32 x float> %61, <32 x float> undef, <32 x i32> zeroinitializer
  %63 = getelementptr inbounds float, ptr %p1, i64 %58
  %64 = load <32 x float>, ptr %63, align 64, !tbaa !7204
  %65 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %62, <32 x float> %64, <32 x float> %49)
  %66 = add nuw nsw i64 %56, 2048
  %67 = getelementptr inbounds float, ptr %p0, i64 %66
  %68 = load float, ptr %67, align 4, !tbaa !7202
  %69 = insertelement <32 x float> undef, float %68, i64 0
  %70 = shufflevector <32 x float> %69, <32 x float> undef, <32 x i32> zeroinitializer
  %71 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %70, <32 x float> %64, <32 x float> %50)
  %72 = add nsw i64 %56, 4096
  %73 = getelementptr inbounds float, ptr %p0, i64 %72
  %74 = load float, ptr %73, align 4, !tbaa !7202
  %75 = insertelement <32 x float> undef, float %74, i64 0
  %76 = shufflevector <32 x float> %75, <32 x float> undef, <32 x i32> zeroinitializer
  %77 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %76, <32 x float> %64, <32 x float> %51)
  %78 = add nsw i64 %56, 6144
  %79 = getelementptr inbounds float, ptr %p0, i64 %78
  %80 = load float, ptr %79, align 4, !tbaa !7202
  %81 = insertelement <32 x float> undef, float %80, i64 0
  %82 = shufflevector <32 x float> %81, <32 x float> undef, <32 x i32> zeroinitializer
  %83 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %82, <32 x float> %64, <32 x float> %52)
  %84 = add nsw i64 %56, 8192
  %85 = getelementptr inbounds float, ptr %p0, i64 %84
  %86 = load float, ptr %85, align 4, !tbaa !7202
  %87 = insertelement <32 x float> undef, float %86, i64 0
  %88 = shufflevector <32 x float> %87, <32 x float> undef, <32 x i32> zeroinitializer
  %89 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %88, <32 x float> %64, <32 x float> %53)
  %90 = add nsw i64 %56, 10240
  %91 = getelementptr inbounds float, ptr %p0, i64 %90
  %92 = load float, ptr %91, align 4, !tbaa !7202
  %93 = insertelement <32 x float> undef, float %92, i64 0
  %94 = shufflevector <32 x float> %93, <32 x float> undef, <32 x i32> zeroinitializer
  %95 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %94, <32 x float> %64, <32 x float> %54)
  %96 = add nsw i64 %56, 12288
  %97 = getelementptr inbounds float, ptr %p0, i64 %96
  %98 = load float, ptr %97, align 4, !tbaa !7202
  %99 = insertelement <32 x float> undef, float %98, i64 0
  %100 = shufflevector <32 x float> %99, <32 x float> undef, <32 x i32> zeroinitializer
  %101 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %100, <32 x float> %64, <32 x float> %55)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 1024
  br i1 %exitcond.not, label %for_begin_ax3.inner.preheader, label %for_body_ic.inner, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.24, align 8
  store i32 %0, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.24, ptr %6, i64 0, i32 1
  store ptr %1, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.24, ptr %6, i64 0, i32 2
  store ptr %2, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.24, ptr %6, i64 0, i32 3
  store ptr %3, ptr %9, align 8
  %10 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.24, ptr %6, i64 0, i32 4
  store ptr %4, ptr %10, align 8
  %11 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.24, ptr %6, i64 0, i32 5
  store ptr %5, ptr %11, align 8
  %12 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %13 = call i32 %12(ptr nonnull @__tvm_parallel_lambda.831, ptr nonnull %6, i32 0)
  ret i32 %13
}

define private i32 @__tvm_parallel_lambda.831(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #0 {
parallel_closure_entry:
  %dev_id = load i32, ptr %1, align 4
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.24, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.24, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.24, ptr %1, i64 0, i32 3
  %T_relu = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.24, ptr %1, i64 0, i32 4
  %p2 = load ptr, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.24, ptr %1, i64 0, i32 5
  %p3 = load ptr, ptr %6, align 8
  %7 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %7, align 4
  %8 = add nsw i32 %num_task, 447
  %9 = sdiv i32 %8, %num_task
  %10 = add nsw i32 %task_id, 1
  %11 = mul nsw i32 %9, %10
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 448)
  %13 = mul i32 %9, %task_id
  %14 = tail call i32 @llvm.smin.i32(i32 %13, i32 448)
  %15 = icmp slt i32 %14, %12
  br i1 %15, label %for_body_ax0.ax1.fused.ax2.outer.fused.preheader, label %common.ret, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.preheader: ; preds = %parallel_closure_entry
  %16 = tail call i32 @llvm.smin.i32(i32 %13, i32 448)
  %smin = sext i32 %16 to i64
  %17 = add i32 %12, %16
  %18 = sub i32 %17, %14
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_begin_ax0.ax1.fused.ax2.outer.fused:          ; preds = %for_end_ax3.outer
  %indvars.iv.next72 = add nsw i64 %indvars.iv71, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next72 to i32
  %exitcond73.not = icmp eq i32 %18, %lftr.wideiv
  br i1 %exitcond73.not, label %common.ret, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !52

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.preheader, %for_begin_ax0.ax1.fused.ax2.outer.fused
  %indvars.iv71 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.preheader ], [ %indvars.iv.next72, %for_begin_ax0.ax1.fused.ax2.outer.fused ]
  %19 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %conv2d_NCHWc.global = tail call ptr %19(i32 1, i32 %dev_id, i64 7168, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %conv2d_NCHWc.global, i64 64) ]
  %20 = icmp eq ptr %conv2d_NCHWc.global, null
  br i1 %20, label %common.ret, label %for_begin_ow.c.outer.preheader, !prof !18

for_begin_ow.c.outer.preheader:                   ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused
  %21 = trunc i64 %indvars.iv71 to i32
  %22 = sdiv i32 %21, 56
  %23 = shl nsw i32 %22, 11
  %24 = srem i32 %21, 56
  %25 = mul nsw i32 %24, 224
  %26 = sext i32 %23 to i64
  %27 = sext i32 %25 to i64
  br label %for_body_ow.c.outer

common.ret:                                       ; preds = %for_begin_ax0.ax1.fused.ax2.outer.fused, %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ax3.outer, %parallel_closure_entry
  %common.ret.op = phi i32 [ 0, %parallel_closure_entry ], [ -1, %for_end_ax3.outer ], [ -1, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ 0, %for_begin_ax0.ax1.fused.ax2.outer.fused ]
  ret i32 %common.ret.op

for_begin_ax3.outer.preheader:                    ; preds = %for_end_ic.outer
  %28 = mul nsw i64 %indvars.iv71, 1792
  %29 = shl nsw i32 %22, 5
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds float, ptr %p2, i64 %30
  %32 = load <32 x float>, ptr %31, align 64, !tbaa !7206
  br label %for_begin_ax3.inner.preheader

for_body_ow.c.outer:                              ; preds = %for_begin_ow.c.outer.preheader, %for_end_ic.outer
  %indvars.iv57 = phi i64 [ 0, %for_begin_ow.c.outer.preheader ], [ %indvars.iv.next58, %for_end_ic.outer ]
  %33 = mul nuw nsw i64 %indvars.iv57, 7
  %34 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %33
  %35 = add nuw nsw i64 %33, 1
  %36 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %35
  %37 = add nuw nsw i64 %33, 2
  %38 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %37
  %39 = add nuw nsw i64 %33, 3
  %40 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %39
  %41 = add nuw nsw i64 %33, 4
  %42 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %41
  %43 = add nuw nsw i64 %33, 5
  %44 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %43
  %45 = add nuw nsw i64 %33, 6
  %46 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %45
  %47 = mul nuw nsw i64 %indvars.iv57, 28
  %48 = add nsw i64 %47, %27
  br label %for_begin_ic.inner.preheader

for_begin_ic.inner.preheader:                     ; preds = %for_body_ow.c.outer, %for_end_ic.inner
  %indvars.iv53 = phi i64 [ 0, %for_body_ow.c.outer ], [ %indvars.iv.next54, %for_end_ic.inner ]
  %.lcssa1836 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %69, %for_end_ic.inner ]
  %.lcssa51935 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %75, %for_end_ic.inner ]
  %.lcssa72134 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %81, %for_end_ic.inner ]
  %.lcssa92333 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %87, %for_end_ic.inner ]
  %.lcssa112532 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %93, %for_end_ic.inner ]
  %.lcssa132731 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %99, %for_end_ic.inner ]
  %.lcssa152930 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %105, %for_end_ic.inner ]
  %49 = shl nsw i64 %indvars.iv53, 7
  %50 = add nuw nsw i64 %49, %26
  %51 = mul nuw nsw i64 %indvars.iv53, 12544
  %52 = add nsw i64 %48, %51
  br label %for_body_ic.inner

for_end_ic.outer:                                 ; preds = %for_end_ic.inner
  store <32 x float> %69, ptr %34, align 64, !tbaa !7208
  store <32 x float> %75, ptr %36, align 64, !tbaa !7208
  store <32 x float> %81, ptr %38, align 64, !tbaa !7208
  store <32 x float> %87, ptr %40, align 64, !tbaa !7208
  store <32 x float> %93, ptr %42, align 64, !tbaa !7208
  store <32 x float> %99, ptr %44, align 64, !tbaa !7208
  store <32 x float> %105, ptr %46, align 64, !tbaa !7208
  %indvars.iv.next58 = add nuw nsw i64 %indvars.iv57, 1
  %exitcond61.not = icmp eq i64 %indvars.iv.next58, 8
  br i1 %exitcond61.not, label %for_begin_ax3.outer.preheader, label %for_body_ow.c.outer, !prof !52

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %53 = phi <32 x float> [ %.lcssa1836, %for_begin_ic.inner.preheader ], [ %69, %for_body_ic.inner ]
  %54 = phi <32 x float> [ %.lcssa51935, %for_begin_ic.inner.preheader ], [ %75, %for_body_ic.inner ]
  %55 = phi <32 x float> [ %.lcssa72134, %for_begin_ic.inner.preheader ], [ %81, %for_body_ic.inner ]
  %56 = phi <32 x float> [ %.lcssa92333, %for_begin_ic.inner.preheader ], [ %87, %for_body_ic.inner ]
  %57 = phi <32 x float> [ %.lcssa112532, %for_begin_ic.inner.preheader ], [ %93, %for_body_ic.inner ]
  %58 = phi <32 x float> [ %.lcssa132731, %for_begin_ic.inner.preheader ], [ %99, %for_body_ic.inner ]
  %59 = phi <32 x float> [ %.lcssa152930, %for_begin_ic.inner.preheader ], [ %105, %for_body_ic.inner ]
  %60 = shl nuw nsw i64 %indvars.iv, 5
  %61 = add nuw nsw i64 %50, %60
  %62 = add nsw i64 %52, %indvars.iv
  %63 = getelementptr inbounds float, ptr %p0, i64 %62
  %64 = load float, ptr %63, align 4, !tbaa !7210
  %65 = insertelement <32 x float> undef, float %64, i64 0
  %66 = shufflevector <32 x float> %65, <32 x float> undef, <32 x i32> zeroinitializer
  %67 = getelementptr inbounds float, ptr %p1, i64 %61
  %68 = load <32 x float>, ptr %67, align 64, !tbaa !7212
  %69 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %66, <32 x float> %68, <32 x float> %53)
  %70 = add nsw i64 %62, 4
  %71 = getelementptr inbounds float, ptr %p0, i64 %70
  %72 = load float, ptr %71, align 4, !tbaa !7210
  %73 = insertelement <32 x float> undef, float %72, i64 0
  %74 = shufflevector <32 x float> %73, <32 x float> undef, <32 x i32> zeroinitializer
  %75 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %74, <32 x float> %68, <32 x float> %54)
  %76 = add nsw i64 %62, 8
  %77 = getelementptr inbounds float, ptr %p0, i64 %76
  %78 = load float, ptr %77, align 4, !tbaa !7210
  %79 = insertelement <32 x float> undef, float %78, i64 0
  %80 = shufflevector <32 x float> %79, <32 x float> undef, <32 x i32> zeroinitializer
  %81 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %80, <32 x float> %68, <32 x float> %55)
  %82 = add nsw i64 %62, 12
  %83 = getelementptr inbounds float, ptr %p0, i64 %82
  %84 = load float, ptr %83, align 4, !tbaa !7210
  %85 = insertelement <32 x float> undef, float %84, i64 0
  %86 = shufflevector <32 x float> %85, <32 x float> undef, <32 x i32> zeroinitializer
  %87 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %86, <32 x float> %68, <32 x float> %56)
  %88 = add nsw i64 %62, 16
  %89 = getelementptr inbounds float, ptr %p0, i64 %88
  %90 = load float, ptr %89, align 4, !tbaa !7210
  %91 = insertelement <32 x float> undef, float %90, i64 0
  %92 = shufflevector <32 x float> %91, <32 x float> undef, <32 x i32> zeroinitializer
  %93 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %92, <32 x float> %68, <32 x float> %57)
  %94 = add nsw i64 %62, 20
  %95 = getelementptr inbounds float, ptr %p0, i64 %94
  %96 = load float, ptr %95, align 4, !tbaa !7210
  %97 = insertelement <32 x float> undef, float %96, i64 0
  %98 = shufflevector <32 x float> %97, <32 x float> undef, <32 x i32> zeroinitializer
  %99 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %98, <32 x float> %68, <32 x float> %58)
  %100 = add nsw i64 %62, 24
  %101 = getelementptr inbounds float, ptr %p0, i64 %100
  %102 = load float, ptr %101, align 4, !tbaa !7210
  %103 = insertelement <32 x float> undef, float %102, i64 0
  %104 = shufflevector <32 x float> %103, <32 x float> undef, <32 x i32> zeroinitializer
  %105 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %104, <32 x float> %68, <32 x float> %59)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next54 = add nuw nsw i64 %indvars.iv53, 1
  %exitcond56.not = icmp eq i64 %indvars.iv.next54, 16
  br i1 %exitcond56.not, label %for_end_ic.outer, label %for_begin_ic.inner.preheader, !prof !52

for_begin_ax3.inner.preheader:                    ; preds = %for_begin_ax3.outer.preheader, %for_end_ax3.inner
  %indvars.iv67 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next68, %for_end_ax3.inner ]
  %106 = mul nuw nsw i64 %indvars.iv67, 224
  %107 = add nsw i64 %106, %28
  %108 = mul nuw nsw i64 %indvars.iv67, 7
  br label %for_body_ax3.inner

for_end_ax3.outer:                                ; preds = %for_end_ax3.inner
  %109 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %110 = tail call i32 %109(i32 1, i32 %dev_id, ptr nonnull %conv2d_NCHWc.global)
  %.not = icmp eq i32 %110, 0
  br i1 %.not, label %for_begin_ax0.ax1.fused.ax2.outer.fused, label %common.ret, !prof !52

for_body_ax3.inner:                               ; preds = %for_begin_ax3.inner.preheader, %for_body_ax3.inner
  %indvars.iv62 = phi i64 [ 0, %for_begin_ax3.inner.preheader ], [ %indvars.iv.next63, %for_body_ax3.inner ]
  %111 = shl nuw nsw i64 %indvars.iv62, 5
  %112 = add nsw i64 %107, %111
  %113 = getelementptr inbounds float, ptr %p3, i64 %112
  %114 = load <32 x float>, ptr %113, align 64, !tbaa !7214
  %115 = add nuw nsw i64 %indvars.iv62, %108
  %116 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %115
  %117 = load <32 x float>, ptr %116, align 64, !tbaa !7208
  %118 = fadd <32 x float> %32, %117
  %119 = fadd <32 x float> %114, %118
  %120 = fcmp ogt <32 x float> %119, zeroinitializer
  %121 = select <32 x i1> %120, <32 x float> %119, <32 x float> zeroinitializer
  %122 = getelementptr inbounds float, ptr %T_relu, i64 %112
  store <32 x float> %121, ptr %122, align 64, !tbaa !7216
  %indvars.iv.next63 = add nuw nsw i64 %indvars.iv62, 1
  %exitcond66.not = icmp eq i64 %indvars.iv.next63, 7
  br i1 %exitcond66.not, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !52

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %indvars.iv.next68 = add nuw nsw i64 %indvars.iv67, 1
  %exitcond70.not = icmp eq i64 %indvars.iv.next68, 8
  br i1 %exitcond70.not, label %for_end_ax3.outer, label %for_begin_ax3.inner.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_1_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, align 8
  store i32 %0, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, ptr %6, i64 0, i32 1
  store ptr %1, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, ptr %6, i64 0, i32 2
  store ptr %2, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, ptr %6, i64 0, i32 3
  store ptr %3, ptr %9, align 8
  %10 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, ptr %6, i64 0, i32 4
  store ptr %4, ptr %10, align 8
  %11 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, ptr %6, i64 0, i32 5
  store ptr %5, ptr %11, align 8
  %12 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %13 = call i32 %12(ptr nonnull @__tvm_parallel_lambda.893, ptr nonnull %6, i32 0)
  ret i32 %13
}

define private i32 @__tvm_parallel_lambda.893(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #0 {
parallel_closure_entry:
  %dev_id = load i32, ptr %1, align 4
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, ptr %1, i64 0, i32 3
  %T_relu = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, ptr %1, i64 0, i32 4
  %p2 = load ptr, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.25, ptr %1, i64 0, i32 5
  %p3 = load ptr, ptr %6, align 8
  %7 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %7, align 4
  %8 = add nsw i32 %num_task, 447
  %9 = sdiv i32 %8, %num_task
  %10 = add nsw i32 %task_id, 1
  %11 = mul nsw i32 %9, %10
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 448)
  %13 = mul i32 %9, %task_id
  %14 = tail call i32 @llvm.smin.i32(i32 %13, i32 448)
  %15 = icmp slt i32 %14, %12
  br i1 %15, label %for_body_ax0.ax1.fused.ax2.outer.fused.preheader, label %common.ret, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.preheader: ; preds = %parallel_closure_entry
  %16 = tail call i32 @llvm.smin.i32(i32 %13, i32 448)
  %smin = sext i32 %16 to i64
  %17 = add i32 %12, %16
  %18 = sub i32 %17, %14
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_begin_ax0.ax1.fused.ax2.outer.fused:          ; preds = %for_end_ax3.inner.3
  %indvars.iv.next72 = add nsw i64 %indvars.iv71, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next72 to i32
  %exitcond73.not = icmp eq i32 %18, %lftr.wideiv
  br i1 %exitcond73.not, label %common.ret, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !52

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.preheader, %for_begin_ax0.ax1.fused.ax2.outer.fused
  %indvars.iv71 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.preheader ], [ %indvars.iv.next72, %for_begin_ax0.ax1.fused.ax2.outer.fused ]
  %19 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %conv2d_NCHWc.global = tail call ptr %19(i32 1, i32 %dev_id, i64 3584, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %conv2d_NCHWc.global, i64 64) ]
  %20 = icmp eq ptr %conv2d_NCHWc.global, null
  br i1 %20, label %common.ret, label %for_begin_ow.c.outer.preheader, !prof !18

for_begin_ow.c.outer.preheader:                   ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused
  %21 = trunc i64 %indvars.iv71 to i32
  %22 = sdiv i32 %21, 28
  %23 = shl nsw i32 %22, 12
  %24 = srem i32 %21, 28
  %25 = mul nsw i32 %24, 112
  %26 = sext i32 %23 to i64
  %27 = sext i32 %25 to i64
  br label %for_body_ow.c.outer

common.ret:                                       ; preds = %for_begin_ax0.ax1.fused.ax2.outer.fused, %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ax3.inner.3, %parallel_closure_entry
  %common.ret.op = phi i32 [ 0, %parallel_closure_entry ], [ -1, %for_end_ax3.inner.3 ], [ -1, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ 0, %for_begin_ax0.ax1.fused.ax2.outer.fused ]
  ret i32 %common.ret.op

for_begin_ax3.outer.preheader:                    ; preds = %for_end_ic.outer
  %28 = mul nsw i64 %indvars.iv71, 896
  %29 = shl nsw i32 %22, 5
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds float, ptr %p2, i64 %30
  %32 = load <32 x float>, ptr %31, align 64, !tbaa !7218
  br label %for_body_ax3.inner

for_body_ow.c.outer:                              ; preds = %for_begin_ow.c.outer.preheader, %for_end_ic.outer
  %indvars.iv57 = phi i64 [ 0, %for_begin_ow.c.outer.preheader ], [ %indvars.iv.next58, %for_end_ic.outer ]
  %33 = mul nuw nsw i64 %indvars.iv57, 7
  %34 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %33
  %35 = add nuw nsw i64 %33, 1
  %36 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %35
  %37 = add nuw nsw i64 %33, 2
  %38 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %37
  %39 = add nuw nsw i64 %33, 3
  %40 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %39
  %41 = add nuw nsw i64 %33, 4
  %42 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %41
  %43 = add nuw nsw i64 %33, 5
  %44 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %43
  %45 = add nuw nsw i64 %33, 6
  %46 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %45
  %47 = mul nuw nsw i64 %indvars.iv57, 28
  %48 = add nsw i64 %47, %27
  br label %for_begin_ic.inner.preheader

for_begin_ic.inner.preheader:                     ; preds = %for_body_ow.c.outer, %for_end_ic.inner
  %indvars.iv53 = phi i64 [ 0, %for_body_ow.c.outer ], [ %indvars.iv.next54, %for_end_ic.inner ]
  %.lcssa1836 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %69, %for_end_ic.inner ]
  %.lcssa51935 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %75, %for_end_ic.inner ]
  %.lcssa72134 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %81, %for_end_ic.inner ]
  %.lcssa92333 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %87, %for_end_ic.inner ]
  %.lcssa112532 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %93, %for_end_ic.inner ]
  %.lcssa132731 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %99, %for_end_ic.inner ]
  %.lcssa152930 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %105, %for_end_ic.inner ]
  %49 = shl nsw i64 %indvars.iv53, 7
  %50 = add nuw nsw i64 %49, %26
  %51 = mul nuw nsw i64 %indvars.iv53, 3136
  %52 = add nsw i64 %48, %51
  br label %for_body_ic.inner

for_end_ic.outer:                                 ; preds = %for_end_ic.inner
  store <32 x float> %69, ptr %34, align 64, !tbaa !7220
  store <32 x float> %75, ptr %36, align 64, !tbaa !7220
  store <32 x float> %81, ptr %38, align 64, !tbaa !7220
  store <32 x float> %87, ptr %40, align 64, !tbaa !7220
  store <32 x float> %93, ptr %42, align 64, !tbaa !7220
  store <32 x float> %99, ptr %44, align 64, !tbaa !7220
  store <32 x float> %105, ptr %46, align 64, !tbaa !7220
  %indvars.iv.next58 = add nuw nsw i64 %indvars.iv57, 1
  %exitcond61.not = icmp eq i64 %indvars.iv.next58, 4
  br i1 %exitcond61.not, label %for_begin_ax3.outer.preheader, label %for_body_ow.c.outer, !prof !52

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %53 = phi <32 x float> [ %.lcssa1836, %for_begin_ic.inner.preheader ], [ %69, %for_body_ic.inner ]
  %54 = phi <32 x float> [ %.lcssa51935, %for_begin_ic.inner.preheader ], [ %75, %for_body_ic.inner ]
  %55 = phi <32 x float> [ %.lcssa72134, %for_begin_ic.inner.preheader ], [ %81, %for_body_ic.inner ]
  %56 = phi <32 x float> [ %.lcssa92333, %for_begin_ic.inner.preheader ], [ %87, %for_body_ic.inner ]
  %57 = phi <32 x float> [ %.lcssa112532, %for_begin_ic.inner.preheader ], [ %93, %for_body_ic.inner ]
  %58 = phi <32 x float> [ %.lcssa132731, %for_begin_ic.inner.preheader ], [ %99, %for_body_ic.inner ]
  %59 = phi <32 x float> [ %.lcssa152930, %for_begin_ic.inner.preheader ], [ %105, %for_body_ic.inner ]
  %60 = shl nuw nsw i64 %indvars.iv, 5
  %61 = add nuw nsw i64 %50, %60
  %62 = add nsw i64 %52, %indvars.iv
  %63 = getelementptr inbounds float, ptr %p0, i64 %62
  %64 = load float, ptr %63, align 4, !tbaa !7222
  %65 = insertelement <32 x float> undef, float %64, i64 0
  %66 = shufflevector <32 x float> %65, <32 x float> undef, <32 x i32> zeroinitializer
  %67 = getelementptr inbounds float, ptr %p1, i64 %61
  %68 = load <32 x float>, ptr %67, align 64, !tbaa !7224
  %69 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %66, <32 x float> %68, <32 x float> %53)
  %70 = add nsw i64 %62, 4
  %71 = getelementptr inbounds float, ptr %p0, i64 %70
  %72 = load float, ptr %71, align 4, !tbaa !7222
  %73 = insertelement <32 x float> undef, float %72, i64 0
  %74 = shufflevector <32 x float> %73, <32 x float> undef, <32 x i32> zeroinitializer
  %75 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %74, <32 x float> %68, <32 x float> %54)
  %76 = add nsw i64 %62, 8
  %77 = getelementptr inbounds float, ptr %p0, i64 %76
  %78 = load float, ptr %77, align 4, !tbaa !7222
  %79 = insertelement <32 x float> undef, float %78, i64 0
  %80 = shufflevector <32 x float> %79, <32 x float> undef, <32 x i32> zeroinitializer
  %81 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %80, <32 x float> %68, <32 x float> %55)
  %82 = add nsw i64 %62, 12
  %83 = getelementptr inbounds float, ptr %p0, i64 %82
  %84 = load float, ptr %83, align 4, !tbaa !7222
  %85 = insertelement <32 x float> undef, float %84, i64 0
  %86 = shufflevector <32 x float> %85, <32 x float> undef, <32 x i32> zeroinitializer
  %87 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %86, <32 x float> %68, <32 x float> %56)
  %88 = add nsw i64 %62, 16
  %89 = getelementptr inbounds float, ptr %p0, i64 %88
  %90 = load float, ptr %89, align 4, !tbaa !7222
  %91 = insertelement <32 x float> undef, float %90, i64 0
  %92 = shufflevector <32 x float> %91, <32 x float> undef, <32 x i32> zeroinitializer
  %93 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %92, <32 x float> %68, <32 x float> %57)
  %94 = add nsw i64 %62, 20
  %95 = getelementptr inbounds float, ptr %p0, i64 %94
  %96 = load float, ptr %95, align 4, !tbaa !7222
  %97 = insertelement <32 x float> undef, float %96, i64 0
  %98 = shufflevector <32 x float> %97, <32 x float> undef, <32 x i32> zeroinitializer
  %99 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %98, <32 x float> %68, <32 x float> %58)
  %100 = add nsw i64 %62, 24
  %101 = getelementptr inbounds float, ptr %p0, i64 %100
  %102 = load float, ptr %101, align 4, !tbaa !7222
  %103 = insertelement <32 x float> undef, float %102, i64 0
  %104 = shufflevector <32 x float> %103, <32 x float> undef, <32 x i32> zeroinitializer
  %105 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %104, <32 x float> %68, <32 x float> %59)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next54 = add nuw nsw i64 %indvars.iv53, 1
  %exitcond56.not = icmp eq i64 %indvars.iv.next54, 32
  br i1 %exitcond56.not, label %for_end_ic.outer, label %for_begin_ic.inner.preheader, !prof !52

for_body_ax3.inner:                               ; preds = %for_begin_ax3.outer.preheader, %for_body_ax3.inner
  %indvars.iv62 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next63, %for_body_ax3.inner ]
  %106 = shl nuw nsw i64 %indvars.iv62, 5
  %107 = add nsw i64 %28, %106
  %108 = getelementptr inbounds float, ptr %p3, i64 %107
  %109 = load <32 x float>, ptr %108, align 64, !tbaa !7226
  %110 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %indvars.iv62
  %111 = load <32 x float>, ptr %110, align 64, !tbaa !7220
  %112 = fadd <32 x float> %32, %111
  %113 = fadd <32 x float> %109, %112
  %114 = fcmp ogt <32 x float> %113, zeroinitializer
  %115 = select <32 x i1> %114, <32 x float> %113, <32 x float> zeroinitializer
  %116 = getelementptr inbounds float, ptr %T_relu, i64 %107
  store <32 x float> %115, ptr %116, align 64, !tbaa !7228
  %indvars.iv.next63 = add nuw nsw i64 %indvars.iv62, 1
  %exitcond66.not = icmp eq i64 %indvars.iv.next63, 7
  br i1 %exitcond66.not, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !52

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %117 = add nsw i64 %28, 224
  br label %for_body_ax3.inner.1

for_body_ax3.inner.1:                             ; preds = %for_body_ax3.inner.1, %for_end_ax3.inner
  %indvars.iv62.1 = phi i64 [ 0, %for_end_ax3.inner ], [ %indvars.iv.next63.1, %for_body_ax3.inner.1 ]
  %118 = shl nuw nsw i64 %indvars.iv62.1, 5
  %119 = add nsw i64 %117, %118
  %120 = getelementptr inbounds float, ptr %p3, i64 %119
  %121 = load <32 x float>, ptr %120, align 64, !tbaa !7226
  %122 = add nuw nsw i64 %indvars.iv62.1, 7
  %123 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %122
  %124 = load <32 x float>, ptr %123, align 64, !tbaa !7220
  %125 = fadd <32 x float> %32, %124
  %126 = fadd <32 x float> %121, %125
  %127 = fcmp ogt <32 x float> %126, zeroinitializer
  %128 = select <32 x i1> %127, <32 x float> %126, <32 x float> zeroinitializer
  %129 = getelementptr inbounds float, ptr %T_relu, i64 %119
  store <32 x float> %128, ptr %129, align 64, !tbaa !7228
  %indvars.iv.next63.1 = add nuw nsw i64 %indvars.iv62.1, 1
  %exitcond66.1.not = icmp eq i64 %indvars.iv.next63.1, 7
  br i1 %exitcond66.1.not, label %for_end_ax3.inner.1, label %for_body_ax3.inner.1, !prof !52

for_end_ax3.inner.1:                              ; preds = %for_body_ax3.inner.1
  %130 = add nsw i64 %28, 448
  br label %for_body_ax3.inner.2

for_body_ax3.inner.2:                             ; preds = %for_body_ax3.inner.2, %for_end_ax3.inner.1
  %indvars.iv62.2 = phi i64 [ 0, %for_end_ax3.inner.1 ], [ %indvars.iv.next63.2, %for_body_ax3.inner.2 ]
  %131 = shl nuw nsw i64 %indvars.iv62.2, 5
  %132 = add nsw i64 %130, %131
  %133 = getelementptr inbounds float, ptr %p3, i64 %132
  %134 = load <32 x float>, ptr %133, align 64, !tbaa !7226
  %135 = add nuw nsw i64 %indvars.iv62.2, 14
  %136 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %135
  %137 = load <32 x float>, ptr %136, align 64, !tbaa !7220
  %138 = fadd <32 x float> %32, %137
  %139 = fadd <32 x float> %134, %138
  %140 = fcmp ogt <32 x float> %139, zeroinitializer
  %141 = select <32 x i1> %140, <32 x float> %139, <32 x float> zeroinitializer
  %142 = getelementptr inbounds float, ptr %T_relu, i64 %132
  store <32 x float> %141, ptr %142, align 64, !tbaa !7228
  %indvars.iv.next63.2 = add nuw nsw i64 %indvars.iv62.2, 1
  %exitcond66.2.not = icmp eq i64 %indvars.iv.next63.2, 7
  br i1 %exitcond66.2.not, label %for_end_ax3.inner.2, label %for_body_ax3.inner.2, !prof !52

for_end_ax3.inner.2:                              ; preds = %for_body_ax3.inner.2
  %143 = add nsw i64 %28, 672
  br label %for_body_ax3.inner.3

for_body_ax3.inner.3:                             ; preds = %for_body_ax3.inner.3, %for_end_ax3.inner.2
  %indvars.iv62.3 = phi i64 [ 0, %for_end_ax3.inner.2 ], [ %indvars.iv.next63.3, %for_body_ax3.inner.3 ]
  %144 = shl nuw nsw i64 %indvars.iv62.3, 5
  %145 = add nsw i64 %143, %144
  %146 = getelementptr inbounds float, ptr %p3, i64 %145
  %147 = load <32 x float>, ptr %146, align 64, !tbaa !7226
  %148 = add nuw nsw i64 %indvars.iv62.3, 21
  %149 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %148
  %150 = load <32 x float>, ptr %149, align 64, !tbaa !7220
  %151 = fadd <32 x float> %32, %150
  %152 = fadd <32 x float> %147, %151
  %153 = fcmp ogt <32 x float> %152, zeroinitializer
  %154 = select <32 x i1> %153, <32 x float> %152, <32 x float> zeroinitializer
  %155 = getelementptr inbounds float, ptr %T_relu, i64 %145
  store <32 x float> %154, ptr %155, align 64, !tbaa !7228
  %indvars.iv.next63.3 = add nuw nsw i64 %indvars.iv62.3, 1
  %exitcond66.3.not = icmp eq i64 %indvars.iv.next63.3, 7
  br i1 %exitcond66.3.not, label %for_end_ax3.inner.3, label %for_body_ax3.inner.3, !prof !52

for_end_ax3.inner.3:                              ; preds = %for_body_ax3.inner.3
  %156 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %157 = tail call i32 %156(i32 1, i32 %dev_id, ptr nonnull %conv2d_NCHWc.global)
  %.not = icmp eq i32 %157, 0
  br i1 %.not, label %for_begin_ax0.ax1.fused.ax2.outer.fused, label %common.ret, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_2_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4, ptr noalias align 64 %5) unnamed_addr #2 {
entry:
  %6 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, align 8
  store i32 %0, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, ptr %6, i64 0, i32 1
  store ptr %1, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, ptr %6, i64 0, i32 2
  store ptr %2, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, ptr %6, i64 0, i32 3
  store ptr %3, ptr %9, align 8
  %10 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, ptr %6, i64 0, i32 4
  store ptr %4, ptr %10, align 8
  %11 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, ptr %6, i64 0, i32 5
  store ptr %5, ptr %11, align 8
  %12 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %13 = call i32 %12(ptr nonnull @__tvm_parallel_lambda.955, ptr nonnull %6, i32 0)
  ret i32 %13
}

define private i32 @__tvm_parallel_lambda.955(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #0 {
parallel_closure_entry:
  %dev_id = load i32, ptr %1, align 4
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, ptr %1, i64 0, i32 3
  %T_relu = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, ptr %1, i64 0, i32 4
  %p2 = load ptr, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.26, ptr %1, i64 0, i32 5
  %p3 = load ptr, ptr %6, align 8
  %7 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %7, align 4
  %8 = add nsw i32 %num_task, 111
  %9 = sdiv i32 %8, %num_task
  %10 = add nsw i32 %task_id, 1
  %11 = mul nsw i32 %9, %10
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 112)
  %13 = mul nsw i32 %9, %task_id
  %14 = tail call i32 @llvm.smin.i32(i32 %13, i32 112)
  %15 = icmp slt i32 %14, %12
  br i1 %15, label %for_body_ax0.ax1.fused.ax2.outer.fused, label %common.ret, !prof !18

for_begin_ax0.ax1.fused.ax2.outer.fused:          ; preds = %for_end_ax3.outer
  %16 = add nsw i32 %ax0.ax1.fused.ax2.outer.fused15, 1
  %exitcond40.not = icmp eq i32 %16, %12
  br i1 %exitcond40.not, label %common.ret, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !52

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %parallel_closure_entry, %for_begin_ax0.ax1.fused.ax2.outer.fused
  %ax0.ax1.fused.ax2.outer.fused15 = phi i32 [ %16, %for_begin_ax0.ax1.fused.ax2.outer.fused ], [ %14, %parallel_closure_entry ]
  %17 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %conv2d_NCHWc.global = tail call ptr %17(i32 1, i32 %dev_id, i64 7168, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %conv2d_NCHWc.global, i64 64) ]
  %18 = icmp eq ptr %conv2d_NCHWc.global, null
  br i1 %18, label %common.ret, label %for_begin_ow.c.outer.preheader, !prof !18

for_begin_ow.c.outer.preheader:                   ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused
  %19 = sdiv i32 %ax0.ax1.fused.ax2.outer.fused15, 7
  %20 = shl nsw i32 %19, 14
  %21 = srem i32 %ax0.ax1.fused.ax2.outer.fused15, 7
  %22 = mul nsw i32 %21, 7168
  %23 = sext i32 %20 to i64
  %24 = sext i32 %22 to i64
  br label %for_body_ow.c.outer

common.ret:                                       ; preds = %for_begin_ax0.ax1.fused.ax2.outer.fused, %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ax3.outer, %parallel_closure_entry
  %common.ret.op = phi i32 [ 0, %parallel_closure_entry ], [ -1, %for_end_ax3.outer ], [ -1, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ 0, %for_begin_ax0.ax1.fused.ax2.outer.fused ]
  ret i32 %common.ret.op

for_begin_ax3.outer.preheader:                    ; preds = %for_end_ic.inner
  %25 = mul nsw i32 %ax0.ax1.fused.ax2.outer.fused15, 1792
  %26 = shl nsw i32 %19, 6
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds float, ptr %p2, i64 %27
  %29 = load <64 x float>, ptr %28, align 64, !tbaa !7230
  br label %for_begin_ax2.inner.preheader

for_body_ow.c.outer:                              ; preds = %for_begin_ow.c.outer.preheader, %for_end_ic.inner
  %indvars.iv24 = phi i64 [ 0, %for_begin_ow.c.outer.preheader ], [ %indvars.iv.next25, %for_end_ic.inner ]
  %30 = shl nuw nsw i64 %indvars.iv24, 1
  %31 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %30
  %32 = or i64 %30, 1
  %33 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %32
  %34 = add nuw nsw i64 %30, 14
  %35 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %34
  %36 = add nuw nsw i64 %30, 15
  %37 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %36
  %38 = shl nsw i64 %indvars.iv24, 9
  %39 = add nsw i64 %38, %24
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_body_ow.c.outer, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_body_ow.c.outer ], [ %indvars.iv.next, %for_body_ic.inner ]
  %40 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %53, %for_body_ic.inner ]
  %41 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %59, %for_body_ic.inner ]
  %42 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %65, %for_body_ic.inner ]
  %43 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %71, %for_body_ic.inner ]
  %44 = shl nuw nsw i64 %indvars.iv, 6
  %45 = add nuw nsw i64 %44, %23
  %46 = add nsw i64 %39, %indvars.iv
  %47 = getelementptr inbounds float, ptr %p0, i64 %46
  %48 = load float, ptr %47, align 4, !tbaa !7232
  %49 = insertelement <64 x float> undef, float %48, i64 0
  %50 = shufflevector <64 x float> %49, <64 x float> undef, <64 x i32> zeroinitializer
  %51 = getelementptr inbounds float, ptr %p1, i64 %45
  %52 = load <64 x float>, ptr %51, align 64, !tbaa !7234
  %53 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %50, <64 x float> %52, <64 x float> %40)
  %54 = add nsw i64 %46, 256
  %55 = getelementptr inbounds float, ptr %p0, i64 %54
  %56 = load float, ptr %55, align 4, !tbaa !7232
  %57 = insertelement <64 x float> undef, float %56, i64 0
  %58 = shufflevector <64 x float> %57, <64 x float> undef, <64 x i32> zeroinitializer
  %59 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %58, <64 x float> %52, <64 x float> %41)
  %60 = add nsw i64 %46, 3584
  %61 = getelementptr inbounds float, ptr %p0, i64 %60
  %62 = load float, ptr %61, align 4, !tbaa !7232
  %63 = insertelement <64 x float> undef, float %62, i64 0
  %64 = shufflevector <64 x float> %63, <64 x float> undef, <64 x i32> zeroinitializer
  %65 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %64, <64 x float> %52, <64 x float> %42)
  %66 = add nsw i64 %46, 3840
  %67 = getelementptr inbounds float, ptr %p0, i64 %66
  %68 = load float, ptr %67, align 4, !tbaa !7232
  %69 = insertelement <64 x float> undef, float %68, i64 0
  %70 = shufflevector <64 x float> %69, <64 x float> undef, <64 x i32> zeroinitializer
  %71 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %70, <64 x float> %52, <64 x float> %43)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 256
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  store <64 x float> %53, ptr %31, align 64, !tbaa !7236
  store <64 x float> %59, ptr %33, align 64, !tbaa !7236
  store <64 x float> %65, ptr %35, align 64, !tbaa !7236
  store <64 x float> %71, ptr %37, align 64, !tbaa !7236
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1
  %exitcond28.not = icmp eq i64 %indvars.iv.next25, 7
  br i1 %exitcond28.not, label %for_begin_ax3.outer.preheader, label %for_body_ow.c.outer, !prof !52

for_begin_ax2.inner.preheader:                    ; preds = %for_begin_ax3.outer.preheader, %for_end_ax2.inner
  %indvars.iv36 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next37, %for_end_ax2.inner ]
  %indvars.iv36.tr = trunc i64 %indvars.iv36 to i32
  %72 = shl i32 %indvars.iv36.tr, 7
  %73 = add i32 %72, %25
  %74 = shl nuw nsw i64 %indvars.iv36, 1
  br label %for_begin_ax3.inner.preheader

for_end_ax3.outer:                                ; preds = %for_end_ax2.inner
  %75 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %76 = tail call i32 %75(i32 1, i32 %dev_id, ptr nonnull %conv2d_NCHWc.global)
  %.not = icmp eq i32 %76, 0
  br i1 %.not, label %for_begin_ax0.ax1.fused.ax2.outer.fused, label %common.ret, !prof !52

for_begin_ax3.inner.preheader:                    ; preds = %for_begin_ax2.inner.preheader, %for_begin_ax3.inner.preheader
  %77 = phi i1 [ true, %for_begin_ax2.inner.preheader ], [ false, %for_begin_ax3.inner.preheader ]
  %indvars.iv33 = phi i64 [ 0, %for_begin_ax2.inner.preheader ], [ 1, %for_begin_ax3.inner.preheader ]
  %78 = trunc i64 %indvars.iv33 to i32
  %79 = mul nuw nsw i32 %78, 896
  %80 = add i32 %73, %79
  %81 = mul nuw nsw i64 %indvars.iv33, 14
  %82 = add nuw nsw i64 %81, %74
  %83 = sext i32 %80 to i64
  %84 = getelementptr inbounds float, ptr %p3, i64 %83
  %85 = load <64 x float>, ptr %84, align 64, !tbaa !7238
  %86 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %82
  %87 = load <64 x float>, ptr %86, align 64, !tbaa !7236
  %88 = fadd <64 x float> %29, %87
  %89 = fadd <64 x float> %85, %88
  %90 = fcmp ogt <64 x float> %89, zeroinitializer
  %91 = select <64 x i1> %90, <64 x float> %89, <64 x float> zeroinitializer
  %92 = getelementptr inbounds float, ptr %T_relu, i64 %83
  store <64 x float> %91, ptr %92, align 64, !tbaa !7240
  %93 = or i64 %83, 64
  %94 = getelementptr inbounds float, ptr %p3, i64 %93
  %95 = load <64 x float>, ptr %94, align 64, !tbaa !7238
  %96 = or i64 %82, 1
  %97 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %96
  %98 = load <64 x float>, ptr %97, align 64, !tbaa !7236
  %99 = fadd <64 x float> %29, %98
  %100 = fadd <64 x float> %95, %99
  %101 = fcmp ogt <64 x float> %100, zeroinitializer
  %102 = select <64 x i1> %101, <64 x float> %100, <64 x float> zeroinitializer
  %103 = getelementptr inbounds float, ptr %T_relu, i64 %93
  store <64 x float> %102, ptr %103, align 64, !tbaa !7240
  br i1 %77, label %for_begin_ax3.inner.preheader, label %for_end_ax2.inner, !prof !18

for_end_ax2.inner:                                ; preds = %for_begin_ax3.inner.preheader
  %indvars.iv.next37 = add nuw nsw i64 %indvars.iv36, 1
  %exitcond39.not = icmp eq i64 %indvars.iv.next37, 7
  br i1 %exitcond39.not, label %for_end_ax3.outer, label %for_begin_ax2.inner.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_nn_relu_3_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27, align 8
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1017, ptr nonnull %5, i32 0)
  ret i32 %11
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1017(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %conv2d_NCHWc.global1 = alloca [7 x <32 x float>], align 128
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27, ptr %1, i64 0, i32 2
  %T_relu = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.27, ptr %1, i64 0, i32 4
  %p3 = load ptr, ptr %5, align 8
  %6 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %6, align 4
  %7 = add nsw i32 %num_task, 447
  %8 = sdiv i32 %7, %num_task
  %9 = add nsw i32 %task_id, 1
  %10 = mul nsw i32 %8, %9
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 448)
  %12 = mul i32 %8, %task_id
  %13 = tail call i32 @llvm.smin.i32(i32 %12, i32 448)
  %14 = icmp slt i32 %13, %11
  br i1 %14, label %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph:     ; preds = %parallel_closure_entry
  %15 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global1, i64 1
  %16 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global1, i64 2
  %17 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global1, i64 3
  %18 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global1, i64 4
  %19 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global1, i64 5
  %20 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global1, i64 6
  %21 = tail call i32 @llvm.smin.i32(i32 %12, i32 448)
  %smin = sext i32 %21 to i64
  %22 = add i32 %11, %21
  %23 = sub i32 %22, %13
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, %for_end_ax3.inner
  %indvars.iv57 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph ], [ %indvars.iv.next58, %for_end_ax3.inner ]
  %24 = trunc i64 %indvars.iv57 to i32
  %25 = srem i32 %24, 7
  %26 = mul nsw i32 %25, 28
  %27 = sdiv i32 %24, 7
  %28 = shl nsw i32 %27, 14
  %29 = sext i32 %26 to i64
  %30 = sext i32 %28 to i64
  br label %for_begin_ic.inner.preheader

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_end_ax3.inner, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_end_ic.inner
  store <32 x float> %56, ptr %conv2d_NCHWc.global1, align 128, !tbaa !7242
  store <32 x float> %62, ptr %15, align 128, !tbaa !7248
  store <32 x float> %68, ptr %16, align 128, !tbaa !7250
  store <32 x float> %74, ptr %17, align 128, !tbaa !7253
  store <32 x float> %80, ptr %18, align 128, !tbaa !7255
  store <32 x float> %86, ptr %19, align 128, !tbaa !7259
  store <32 x float> %92, ptr %20, align 128, !tbaa !7261
  %31 = mul nsw i64 %indvars.iv57, 224
  %32 = shl nsw i32 %27, 5
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds float, ptr %p2, i64 %33
  %35 = load <32 x float>, ptr %34, align 64, !tbaa !7264
  br label %for_body_ax3.inner

for_begin_ic.inner.preheader:                     ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ic.inner
  %indvars.iv48 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %indvars.iv.next49, %for_end_ic.inner ]
  %.lcssa1533 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %56, %for_end_ic.inner ]
  %.lcssa21732 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %62, %for_end_ic.inner ]
  %.lcssa41831 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %68, %for_end_ic.inner ]
  %.lcssa62030 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %74, %for_end_ic.inner ]
  %.lcssa82229 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %80, %for_end_ic.inner ]
  %.lcssa102428 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %86, %for_end_ic.inner ]
  %.lcssa122627 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %92, %for_end_ic.inner ]
  %36 = mul nuw nsw i64 %indvars.iv48, 196
  %37 = add nsw i64 %36, %29
  %38 = shl nsw i64 %indvars.iv48, 7
  %39 = add nuw nsw i64 %38, %30
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %40 = phi <32 x float> [ %.lcssa1533, %for_begin_ic.inner.preheader ], [ %56, %for_body_ic.inner ]
  %41 = phi <32 x float> [ %.lcssa21732, %for_begin_ic.inner.preheader ], [ %62, %for_body_ic.inner ]
  %42 = phi <32 x float> [ %.lcssa41831, %for_begin_ic.inner.preheader ], [ %68, %for_body_ic.inner ]
  %43 = phi <32 x float> [ %.lcssa62030, %for_begin_ic.inner.preheader ], [ %74, %for_body_ic.inner ]
  %44 = phi <32 x float> [ %.lcssa82229, %for_begin_ic.inner.preheader ], [ %80, %for_body_ic.inner ]
  %45 = phi <32 x float> [ %.lcssa102428, %for_begin_ic.inner.preheader ], [ %86, %for_body_ic.inner ]
  %46 = phi <32 x float> [ %.lcssa122627, %for_begin_ic.inner.preheader ], [ %92, %for_body_ic.inner ]
  %47 = add nsw i64 %37, %indvars.iv
  %48 = shl nuw nsw i64 %indvars.iv, 5
  %49 = add nuw nsw i64 %39, %48
  %50 = getelementptr inbounds float, ptr %p0, i64 %47
  %51 = load float, ptr %50, align 4, !tbaa !7266
  %52 = insertelement <32 x float> undef, float %51, i64 0
  %53 = shufflevector <32 x float> %52, <32 x float> undef, <32 x i32> zeroinitializer
  %54 = getelementptr inbounds float, ptr %p1, i64 %49
  %55 = load <32 x float>, ptr %54, align 64, !tbaa !7268
  %56 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %53, <32 x float> %55, <32 x float> %40)
  %57 = add nsw i64 %47, 4
  %58 = getelementptr inbounds float, ptr %p0, i64 %57
  %59 = load float, ptr %58, align 4, !tbaa !7266
  %60 = insertelement <32 x float> undef, float %59, i64 0
  %61 = shufflevector <32 x float> %60, <32 x float> undef, <32 x i32> zeroinitializer
  %62 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %61, <32 x float> %55, <32 x float> %41)
  %63 = add nsw i64 %47, 8
  %64 = getelementptr inbounds float, ptr %p0, i64 %63
  %65 = load float, ptr %64, align 4, !tbaa !7266
  %66 = insertelement <32 x float> undef, float %65, i64 0
  %67 = shufflevector <32 x float> %66, <32 x float> undef, <32 x i32> zeroinitializer
  %68 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %67, <32 x float> %55, <32 x float> %42)
  %69 = add nsw i64 %47, 12
  %70 = getelementptr inbounds float, ptr %p0, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !7266
  %72 = insertelement <32 x float> undef, float %71, i64 0
  %73 = shufflevector <32 x float> %72, <32 x float> undef, <32 x i32> zeroinitializer
  %74 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %73, <32 x float> %55, <32 x float> %43)
  %75 = add nsw i64 %47, 16
  %76 = getelementptr inbounds float, ptr %p0, i64 %75
  %77 = load float, ptr %76, align 4, !tbaa !7266
  %78 = insertelement <32 x float> undef, float %77, i64 0
  %79 = shufflevector <32 x float> %78, <32 x float> undef, <32 x i32> zeroinitializer
  %80 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %79, <32 x float> %55, <32 x float> %44)
  %81 = add nsw i64 %47, 20
  %82 = getelementptr inbounds float, ptr %p0, i64 %81
  %83 = load float, ptr %82, align 4, !tbaa !7266
  %84 = insertelement <32 x float> undef, float %83, i64 0
  %85 = shufflevector <32 x float> %84, <32 x float> undef, <32 x i32> zeroinitializer
  %86 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %85, <32 x float> %55, <32 x float> %45)
  %87 = add nsw i64 %47, 24
  %88 = getelementptr inbounds float, ptr %p0, i64 %87
  %89 = load float, ptr %88, align 4, !tbaa !7266
  %90 = insertelement <32 x float> undef, float %89, i64 0
  %91 = shufflevector <32 x float> %90, <32 x float> undef, <32 x i32> zeroinitializer
  %92 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %91, <32 x float> %55, <32 x float> %46)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next49 = add nuw nsw i64 %indvars.iv48, 1
  %exitcond51.not = icmp eq i64 %indvars.iv.next49, 128
  br i1 %exitcond51.not, label %for_begin_ax3.inner.preheader, label %for_begin_ic.inner.preheader, !prof !52

for_body_ax3.inner:                               ; preds = %for_begin_ax3.inner.preheader, %for_body_ax3.inner
  %indvars.iv52 = phi i64 [ 0, %for_begin_ax3.inner.preheader ], [ %indvars.iv.next53, %for_body_ax3.inner ]
  %93 = shl nuw nsw i64 %indvars.iv52, 5
  %94 = add nsw i64 %93, %31
  %95 = getelementptr inbounds float, ptr %p3, i64 %94
  %96 = load <32 x float>, ptr %95, align 64, !tbaa !7270
  %97 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv52
  %98 = load <32 x float>, ptr %97, align 128, !tbaa !7272
  %99 = fadd <32 x float> %35, %98
  %100 = fadd <32 x float> %96, %99
  %101 = fcmp ogt <32 x float> %100, zeroinitializer
  %102 = select <32 x i1> %101, <32 x float> %100, <32 x float> zeroinitializer
  %103 = getelementptr inbounds float, ptr %T_relu, i64 %94
  store <32 x float> %102, ptr %103, align 64, !tbaa !7273
  %indvars.iv.next53 = add nuw nsw i64 %indvars.iv52, 1
  %exitcond56.not = icmp eq i64 %indvars.iv.next53, 7
  br i1 %exitcond56.not, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !52

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %indvars.iv.next58 = add nsw i64 %indvars.iv57, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next58 to i32
  %exitcond59.not = icmp eq i32 %23, %lftr.wideiv
  br i1 %exitcond59.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.28, align 8
  %6 = alloca %closure_loop_parallel_i0.i1.fused.i2.fused, align 8
  %7 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pad = tail call ptr %7(i32 1, i32 %0, i64 629292, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pad, i64 64) ]
  %8 = icmp eq ptr %data_pad, null
  br i1 %8, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end2, %call_end, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %11, %if_end ], [ %18, %call_end ], [ %., %call_end2 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %data_pad, ptr %6, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused, ptr %6, i64 0, i32 1
  store ptr %1, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1067, ptr nonnull %6, i32 0)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %call_end, label %common.ret, !prof !18

call_end:                                         ; preds = %if_end
  store i32 %0, ptr %5, align 8
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.28, ptr %5, i64 0, i32 1
  store ptr %data_pad, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.28, ptr %5, i64 0, i32 2
  store ptr %2, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.28, ptr %5, i64 0, i32 3
  store ptr %3, ptr %15, align 8
  %16 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.28, ptr %5, i64 0, i32 4
  store ptr %4, ptr %16, align 8
  %17 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %18 = call i32 %17(ptr nonnull @__tvm_parallel_lambda.1068, ptr nonnull %5, i32 0)
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %call_end2, label %common.ret, !prof !18

call_end2:                                        ; preds = %call_end
  %20 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %21 = call i32 %20(i32 1, i32 %0, ptr nonnull %data_pad)
  %.not = icmp ne i32 %21, 0
  %. = sext i1 %.not to i32
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1067(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 228
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 229)
  %9 = mul nsw i32 %5, %task_id
  %.fr4 = freeze i32 %9
  %10 = tail call i32 @llvm.smin.i32(i32 %.fr4, i32 229)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_i3.preheader.preheader, label %for_end_i0.i1.fused.i2.fused, !prof !18

for_begin_i3.preheader.preheader:                 ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %.fr4, i32 229)
  %smin = sext i32 %12 to i64
  %13 = sub i32 %8, %10
  br label %for_begin_i3.preheader

for_begin_i3.preheader:                           ; preds = %for_begin_i3.preheader.preheader, %for_end_i3
  %indvars.iv10 = phi i64 [ %smin, %for_begin_i3.preheader.preheader ], [ %indvars.iv.next11, %for_end_i3 ]
  %indvar = phi i32 [ 0, %for_begin_i3.preheader.preheader ], [ %indvar.next, %for_end_i3 ]
  %14 = trunc i64 %indvars.iv10 to i32
  %15 = add i32 %14, -3
  %16 = icmp ult i32 %15, 224
  %17 = mul nsw i64 %indvars.iv10, 687
  %18 = mul i64 %indvars.iv10, 672
  %19 = add i64 %18, 4294965271
  br i1 %16, label %for_body_i3, label %for_body_i3.us.preheader

for_body_i3.us.preheader:                         ; preds = %for_begin_i3.preheader
  %20 = add i32 %10, %indvar
  %21 = mul i32 %20, 687
  %22 = sext i32 %21 to i64
  %23 = shl nsw i64 %22, 2
  %scevgep = getelementptr i8, ptr %data_pad, i64 %23
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(2748) %scevgep, i8 0, i64 2748, i1 false), !tbaa !7275
  br label %for_end_i3

for_end_i0.i1.fused.i2.fused:                     ; preds = %for_end_i3, %parallel_closure_entry
  ret i32 0

for_body_i3:                                      ; preds = %for_begin_i3.preheader, %if_end.1
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %if_end.1 ], [ 0, %for_begin_i3.preheader ]
  %24 = mul nuw nsw i64 %indvars.iv, 3
  %25 = trunc i64 %indvars.iv to i32
  %26 = add nsw i32 %25, -3
  %27 = icmp ult i32 %26, 224
  br i1 %27, label %if_then, label %if_end

for_end_i3:                                       ; preds = %if_end, %for_body_i3.us.preheader
  %indvars.iv.next11 = add nsw i64 %indvars.iv10, 1
  %indvar.next = add nuw i32 %indvar, 1
  %exitcond12.not = icmp eq i32 %indvar.next, %13
  br i1 %exitcond12.not, label %for_end_i0.i1.fused.i2.fused, label %for_begin_i3.preheader, !prof !52

if_then:                                          ; preds = %for_body_i3
  %28 = add nsw i64 %19, %24
  %sext = shl i64 %28, 32
  %29 = ashr exact i64 %sext, 32
  %30 = getelementptr inbounds float, ptr %p0, i64 %29
  %31 = load <3 x float>, ptr %30, align 4, !tbaa !7277
  br label %if_end

if_end:                                           ; preds = %for_body_i3, %if_then
  %32 = phi <3 x float> [ %31, %if_then ], [ zeroinitializer, %for_body_i3 ]
  %33 = add nsw i64 %24, %17
  %34 = getelementptr inbounds float, ptr %data_pad, i64 %33
  store <3 x float> %32, ptr %34, align 4, !tbaa !7275
  %indvars.iv.next = or i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 229
  br i1 %exitcond.not, label %for_end_i3, label %for_body_i3.1, !prof !52

for_body_i3.1:                                    ; preds = %if_end
  %35 = mul nuw nsw i64 %indvars.iv.next, 3
  %36 = trunc i64 %indvars.iv.next to i32
  %37 = add nsw i32 %36, -3
  %38 = icmp ult i32 %37, 224
  br i1 %38, label %if_then.1, label %if_end.1

if_then.1:                                        ; preds = %for_body_i3.1
  %39 = add nsw i64 %19, %35
  %sext.1 = shl i64 %39, 32
  %40 = ashr exact i64 %sext.1, 32
  %41 = getelementptr inbounds float, ptr %p0, i64 %40
  %42 = load <3 x float>, ptr %41, align 4, !tbaa !7277
  br label %if_end.1

if_end.1:                                         ; preds = %if_then.1, %for_body_i3.1
  %43 = phi <3 x float> [ %42, %if_then.1 ], [ zeroinitializer, %for_body_i3.1 ]
  %44 = add nsw i64 %35, %17
  %45 = getelementptr inbounds float, ptr %data_pad, i64 %44
  store <3 x float> %43, ptr %45, align 4, !tbaa !7275
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  br label %for_body_i3
}

define private i32 @__tvm_parallel_lambda.1068(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #0 {
parallel_closure_entry:
  %dev_id = load i32, ptr %1, align 4
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.28, ptr %1, i64 0, i32 1
  %data_pad = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.28, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.28, ptr %1, i64 0, i32 3
  %T_relu = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.28, ptr %1, i64 0, i32 4
  %p2 = load ptr, ptr %5, align 8
  %6 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %6, align 4
  %7 = add nsw i32 %num_task, 223
  %8 = sdiv i32 %7, %num_task
  %9 = add nsw i32 %task_id, 1
  %10 = mul nsw i32 %8, %9
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 224)
  %12 = mul i32 %8, %task_id
  %13 = tail call i32 @llvm.smin.i32(i32 %12, i32 224)
  %14 = icmp slt i32 %13, %11
  br i1 %14, label %for_body_ax0.ax1.fused.ax2.fused.preheader, label %common.ret, !prof !18

for_body_ax0.ax1.fused.ax2.fused.preheader:       ; preds = %parallel_closure_entry
  %15 = tail call i32 @llvm.smin.i32(i32 %12, i32 224)
  %smin = sext i32 %15 to i64
  %16 = add i32 %11, %15
  %17 = sub i32 %16, %13
  br label %for_body_ax0.ax1.fused.ax2.fused

for_begin_ax0.ax1.fused.ax2.fused:                ; preds = %if_end5
  %indvars.iv.next120 = add nsw i64 %indvars.iv119, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next120 to i32
  %exitcond121.not = icmp eq i32 %17, %lftr.wideiv
  br i1 %exitcond121.not, label %common.ret, label %for_body_ax0.ax1.fused.ax2.fused, !prof !52

for_body_ax0.ax1.fused.ax2.fused:                 ; preds = %for_body_ax0.ax1.fused.ax2.fused.preheader, %for_begin_ax0.ax1.fused.ax2.fused
  %indvars.iv119 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.fused.preheader ], [ %indvars.iv.next120, %for_begin_ax0.ax1.fused.ax2.fused ]
  %18 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %conv2d_NCHWc = tail call ptr %18(i32 1, i32 %dev_id, i64 14336, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %conv2d_NCHWc, i64 64) ]
  %19 = icmp eq ptr %conv2d_NCHWc, null
  br i1 %19, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %for_begin_ax0.ax1.fused.ax2.fused, %for_body_ax0.ax1.fused.ax2.fused, %if_end, %for_end_ax3.outer, %if_end5, %parallel_closure_entry
  %common.ret.op = phi i32 [ 0, %parallel_closure_entry ], [ -1, %if_end5 ], [ -1, %for_end_ax3.outer ], [ -1, %if_end ], [ -1, %for_body_ax0.ax1.fused.ax2.fused ], [ 0, %for_begin_ax0.ax1.fused.ax2.fused ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %for_body_ax0.ax1.fused.ax2.fused
  %20 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %conv2d_NCHWc.global = tail call ptr %20(i32 1, i32 %dev_id, i64 1024, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %conv2d_NCHWc.global, i64 64) ]
  %21 = icmp eq ptr %conv2d_NCHWc.global, null
  br i1 %21, label %common.ret, label %for_begin_ow.outer.preheader, !prof !18

for_begin_ow.outer.preheader:                     ; preds = %if_end
  %22 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 1
  %23 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 2
  %24 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 3
  %25 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 4
  %26 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 5
  %27 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 6
  %28 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 7
  %29 = trunc i64 %indvars.iv119 to i32
  %30 = sdiv i32 %29, 112
  %31 = mul nsw i32 %30, 4704
  %32 = srem i32 %29, 112
  %33 = mul nsw i32 %32, 1374
  %34 = sext i32 %31 to i64
  %35 = sext i32 %33 to i64
  br label %for_body_ow.outer

for_begin_ax3.outer.preheader:                    ; preds = %for_begin_ow.inner.preheader
  %36 = shl nsw i32 %30, 5
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds float, ptr %p2, i64 %37
  %39 = load <32 x float>, ptr %38, align 64, !tbaa !7279
  %40 = mul nsw i64 %indvars.iv119, 3584
  br label %for_begin_ax3.inner.preheader

for_body_ow.outer:                                ; preds = %for_begin_ow.outer.preheader, %for_begin_ow.inner.preheader
  %indvars.iv107 = phi i64 [ 0, %for_begin_ow.outer.preheader ], [ %indvars.iv.next108, %for_begin_ow.inner.preheader ]
  %41 = mul nuw nsw i64 %indvars.iv107, 48
  %42 = add nsw i64 %41, %35
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 64 dereferenceable(1024) %conv2d_NCHWc.global, i8 0, i64 1024, i1 false)
  br label %for_begin_kw.preheader

for_begin_ow.inner.preheader:                     ; preds = %for_end_kw
  store <32 x float> %84, ptr %conv2d_NCHWc.global, align 64, !tbaa !7281
  store <32 x float> %90, ptr %22, align 64, !tbaa !7287
  store <32 x float> %96, ptr %23, align 64, !tbaa !7289
  store <32 x float> %102, ptr %24, align 64, !tbaa !7292
  store <32 x float> %108, ptr %25, align 64, !tbaa !7294
  store <32 x float> %114, ptr %26, align 64, !tbaa !7298
  store <32 x float> %120, ptr %27, align 64, !tbaa !7300
  store <32 x float> %126, ptr %28, align 64, !tbaa !7303
  %43 = shl nsw i64 %indvars.iv107, 3
  %44 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %43
  store <32 x float> %84, ptr %44, align 64, !tbaa !7305
  %45 = or i64 %43, 1
  %46 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %45
  store <32 x float> %90, ptr %46, align 64, !tbaa !7305
  %47 = or i64 %43, 2
  %48 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %47
  store <32 x float> %96, ptr %48, align 64, !tbaa !7305
  %49 = or i64 %43, 3
  %50 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %49
  store <32 x float> %102, ptr %50, align 64, !tbaa !7305
  %51 = or i64 %43, 4
  %52 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %51
  store <32 x float> %108, ptr %52, align 64, !tbaa !7305
  %53 = or i64 %43, 5
  %54 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %53
  store <32 x float> %114, ptr %54, align 64, !tbaa !7305
  %55 = or i64 %43, 6
  %56 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %55
  store <32 x float> %120, ptr %56, align 64, !tbaa !7305
  %57 = or i64 %43, 7
  %58 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %57
  store <32 x float> %126, ptr %58, align 64, !tbaa !7305
  %indvars.iv.next108 = add nuw nsw i64 %indvars.iv107, 1
  %exitcond110.not = icmp eq i64 %indvars.iv.next108, 14
  br i1 %exitcond110.not, label %for_begin_ax3.outer.preheader, label %for_body_ow.outer, !prof !52

for_begin_kw.preheader:                           ; preds = %for_body_ow.outer, %for_end_kw
  %indvars.iv99 = phi i64 [ 0, %for_body_ow.outer ], [ %indvars.iv.next100, %for_end_kw ]
  %.lcssa26.lcssa4970 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %84, %for_end_kw ]
  %.lcssa1128.lcssa5169 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %90, %for_end_kw ]
  %.lcssa1329.lcssa5368 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %96, %for_end_kw ]
  %.lcssa1531.lcssa5467 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %102, %for_end_kw ]
  %.lcssa1733.lcssa5666 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %108, %for_end_kw ]
  %.lcssa1935.lcssa5865 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %114, %for_end_kw ]
  %.lcssa2137.lcssa6064 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %120, %for_end_kw ]
  %.lcssa2339.lcssa6263 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %126, %for_end_kw ]
  %59 = mul nuw nsw i64 %indvars.iv99, 672
  %60 = add nsw i64 %59, %34
  %61 = mul nuw nsw i64 %indvars.iv99, 687
  %62 = add nsw i64 %42, %61
  br label %for_begin_ic.inner.preheader

for_begin_ic.inner.preheader:                     ; preds = %for_begin_kw.preheader, %for_end_ic.inner
  %indvars.iv95 = phi i64 [ 0, %for_begin_kw.preheader ], [ %indvars.iv.next96, %for_end_ic.inner ]
  %.lcssa2647 = phi <32 x float> [ %.lcssa26.lcssa4970, %for_begin_kw.preheader ], [ %84, %for_end_ic.inner ]
  %.lcssa112846 = phi <32 x float> [ %.lcssa1128.lcssa5169, %for_begin_kw.preheader ], [ %90, %for_end_ic.inner ]
  %.lcssa132945 = phi <32 x float> [ %.lcssa1329.lcssa5368, %for_begin_kw.preheader ], [ %96, %for_end_ic.inner ]
  %.lcssa153144 = phi <32 x float> [ %.lcssa1531.lcssa5467, %for_begin_kw.preheader ], [ %102, %for_end_ic.inner ]
  %.lcssa173343 = phi <32 x float> [ %.lcssa1733.lcssa5666, %for_begin_kw.preheader ], [ %108, %for_end_ic.inner ]
  %.lcssa193542 = phi <32 x float> [ %.lcssa1935.lcssa5865, %for_begin_kw.preheader ], [ %114, %for_end_ic.inner ]
  %.lcssa213741 = phi <32 x float> [ %.lcssa2137.lcssa6064, %for_begin_kw.preheader ], [ %120, %for_end_ic.inner ]
  %.lcssa233940 = phi <32 x float> [ %.lcssa2339.lcssa6263, %for_begin_kw.preheader ], [ %126, %for_end_ic.inner ]
  %63 = mul nuw nsw i64 %indvars.iv95, 96
  %64 = add nsw i64 %60, %63
  %65 = mul nuw nsw i64 %indvars.iv95, 3
  %66 = add nsw i64 %62, %65
  br label %for_body_ic.inner

for_end_kw:                                       ; preds = %for_end_ic.inner
  %indvars.iv.next100 = add nuw nsw i64 %indvars.iv99, 1
  %exitcond102.not = icmp eq i64 %indvars.iv.next100, 7
  br i1 %exitcond102.not, label %for_begin_ow.inner.preheader, label %for_begin_kw.preheader, !prof !52

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %67 = phi <32 x float> [ %.lcssa2647, %for_begin_ic.inner.preheader ], [ %84, %for_body_ic.inner ]
  %68 = phi <32 x float> [ %.lcssa112846, %for_begin_ic.inner.preheader ], [ %90, %for_body_ic.inner ]
  %69 = phi <32 x float> [ %.lcssa132945, %for_begin_ic.inner.preheader ], [ %96, %for_body_ic.inner ]
  %70 = phi <32 x float> [ %.lcssa153144, %for_begin_ic.inner.preheader ], [ %102, %for_body_ic.inner ]
  %71 = phi <32 x float> [ %.lcssa173343, %for_begin_ic.inner.preheader ], [ %108, %for_body_ic.inner ]
  %72 = phi <32 x float> [ %.lcssa193542, %for_begin_ic.inner.preheader ], [ %114, %for_body_ic.inner ]
  %73 = phi <32 x float> [ %.lcssa213741, %for_begin_ic.inner.preheader ], [ %120, %for_body_ic.inner ]
  %74 = phi <32 x float> [ %.lcssa233940, %for_begin_ic.inner.preheader ], [ %126, %for_body_ic.inner ]
  %75 = shl nuw nsw i64 %indvars.iv, 5
  %76 = add nsw i64 %64, %75
  %77 = add nsw i64 %66, %indvars.iv
  %78 = getelementptr inbounds float, ptr %data_pad, i64 %77
  %79 = load float, ptr %78, align 4, !tbaa !7275
  %80 = insertelement <32 x float> undef, float %79, i64 0
  %81 = shufflevector <32 x float> %80, <32 x float> undef, <32 x i32> zeroinitializer
  %82 = getelementptr inbounds float, ptr %p1, i64 %76
  %83 = load <32 x float>, ptr %82, align 64, !tbaa !7307
  %84 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %81, <32 x float> %83, <32 x float> %67)
  %85 = add nsw i64 %77, 6
  %86 = getelementptr inbounds float, ptr %data_pad, i64 %85
  %87 = load float, ptr %86, align 4, !tbaa !7275
  %88 = insertelement <32 x float> undef, float %87, i64 0
  %89 = shufflevector <32 x float> %88, <32 x float> undef, <32 x i32> zeroinitializer
  %90 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %89, <32 x float> %83, <32 x float> %68)
  %91 = add nsw i64 %77, 12
  %92 = getelementptr inbounds float, ptr %data_pad, i64 %91
  %93 = load float, ptr %92, align 4, !tbaa !7275
  %94 = insertelement <32 x float> undef, float %93, i64 0
  %95 = shufflevector <32 x float> %94, <32 x float> undef, <32 x i32> zeroinitializer
  %96 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %95, <32 x float> %83, <32 x float> %69)
  %97 = add nsw i64 %77, 18
  %98 = getelementptr inbounds float, ptr %data_pad, i64 %97
  %99 = load float, ptr %98, align 4, !tbaa !7275
  %100 = insertelement <32 x float> undef, float %99, i64 0
  %101 = shufflevector <32 x float> %100, <32 x float> undef, <32 x i32> zeroinitializer
  %102 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %101, <32 x float> %83, <32 x float> %70)
  %103 = add nsw i64 %77, 24
  %104 = getelementptr inbounds float, ptr %data_pad, i64 %103
  %105 = load float, ptr %104, align 4, !tbaa !7275
  %106 = insertelement <32 x float> undef, float %105, i64 0
  %107 = shufflevector <32 x float> %106, <32 x float> undef, <32 x i32> zeroinitializer
  %108 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %107, <32 x float> %83, <32 x float> %71)
  %109 = add nsw i64 %77, 30
  %110 = getelementptr inbounds float, ptr %data_pad, i64 %109
  %111 = load float, ptr %110, align 4, !tbaa !7275
  %112 = insertelement <32 x float> undef, float %111, i64 0
  %113 = shufflevector <32 x float> %112, <32 x float> undef, <32 x i32> zeroinitializer
  %114 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %113, <32 x float> %83, <32 x float> %72)
  %115 = add nsw i64 %77, 36
  %116 = getelementptr inbounds float, ptr %data_pad, i64 %115
  %117 = load float, ptr %116, align 4, !tbaa !7275
  %118 = insertelement <32 x float> undef, float %117, i64 0
  %119 = shufflevector <32 x float> %118, <32 x float> undef, <32 x i32> zeroinitializer
  %120 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %119, <32 x float> %83, <32 x float> %73)
  %121 = add nsw i64 %77, 42
  %122 = getelementptr inbounds float, ptr %data_pad, i64 %121
  %123 = load float, ptr %122, align 4, !tbaa !7275
  %124 = insertelement <32 x float> undef, float %123, i64 0
  %125 = shufflevector <32 x float> %124, <32 x float> undef, <32 x i32> zeroinitializer
  %126 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %125, <32 x float> %83, <32 x float> %74)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next96 = add nuw nsw i64 %indvars.iv95, 1
  %exitcond98.not = icmp eq i64 %indvars.iv.next96, 7
  br i1 %exitcond98.not, label %for_end_kw, label %for_begin_ic.inner.preheader, !prof !52

for_begin_ax3.inner.preheader:                    ; preds = %for_begin_ax3.outer.preheader, %for_end_ax3.inner
  %indvars.iv115 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next116, %for_end_ax3.inner ]
  %127 = shl nsw i64 %indvars.iv115, 3
  %128 = shl nsw i64 %indvars.iv115, 8
  %129 = add nsw i64 %128, %40
  br label %for_body_ax3.inner

for_end_ax3.outer:                                ; preds = %for_end_ax3.inner
  %130 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %131 = tail call i32 %130(i32 1, i32 %dev_id, ptr nonnull %conv2d_NCHWc.global)
  %.not = icmp eq i32 %131, 0
  br i1 %.not, label %if_end5, label %common.ret, !prof !52

for_body_ax3.inner:                               ; preds = %for_begin_ax3.inner.preheader, %for_body_ax3.inner
  %indvars.iv111 = phi i64 [ 0, %for_begin_ax3.inner.preheader ], [ %indvars.iv.next112, %for_body_ax3.inner ]
  %132 = add nuw nsw i64 %indvars.iv111, %127
  %133 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %132
  %134 = load <32 x float>, ptr %133, align 64, !tbaa !7305
  %135 = fadd <32 x float> %39, %134
  %136 = fcmp ogt <32 x float> %135, zeroinitializer
  %137 = select <32 x i1> %136, <32 x float> %135, <32 x float> zeroinitializer
  %138 = shl nuw nsw i64 %indvars.iv111, 5
  %139 = add nsw i64 %129, %138
  %140 = getelementptr inbounds float, ptr %T_relu, i64 %139
  store <32 x float> %137, ptr %140, align 64, !tbaa !7309
  %indvars.iv.next112 = add nuw nsw i64 %indvars.iv111, 1
  %exitcond114.not = icmp eq i64 %indvars.iv.next112, 8
  br i1 %exitcond114.not, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !52

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %indvars.iv.next116 = add nuw nsw i64 %indvars.iv115, 1
  %exitcond118.not = icmp eq i64 %indvars.iv.next116, 14
  br i1 %exitcond118.not, label %for_end_ax3.outer, label %for_begin_ax3.inner.preheader, !prof !52

if_end5:                                          ; preds = %for_end_ax3.outer
  %141 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %142 = tail call i32 %141(i32 1, i32 %dev_id, ptr nonnull %conv2d_NCHWc)
  %.not10 = icmp eq i32 %142, 0
  br i1 %.not10, label %for_begin_ax0.ax1.fused.ax2.fused, label %common.ret, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.29, align 8
  store i32 %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.29, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.29, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.29, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.29, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1118, ptr nonnull %5, i32 0)
  ret i32 %11
}

define private i32 @__tvm_parallel_lambda.1118(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #0 {
parallel_closure_entry:
  %dev_id = load i32, ptr %1, align 4
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.29, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.29, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.29, ptr %1, i64 0, i32 3
  %T_relu = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.29, ptr %1, i64 0, i32 4
  %p2 = load ptr, ptr %5, align 8
  %6 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %6, align 4
  %7 = add nsw i32 %num_task, 223
  %8 = sdiv i32 %7, %num_task
  %9 = add nsw i32 %task_id, 1
  %10 = mul nsw i32 %8, %9
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 224)
  %12 = mul i32 %8, %task_id
  %13 = tail call i32 @llvm.smin.i32(i32 %12, i32 224)
  %14 = icmp slt i32 %13, %11
  br i1 %14, label %for_body_ax0.ax1.fused.ax2.outer.fused.preheader, label %common.ret, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.preheader: ; preds = %parallel_closure_entry
  %15 = tail call i32 @llvm.smin.i32(i32 %12, i32 224)
  %smin = sext i32 %15 to i64
  %16 = add i32 %11, %15
  %17 = sub i32 %16, %13
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_begin_ax0.ax1.fused.ax2.outer.fused:          ; preds = %for_end_ax3.inner.3
  %indvars.iv.next113 = add nsw i64 %indvars.iv112, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next113 to i32
  %exitcond114.not = icmp eq i32 %17, %lftr.wideiv
  br i1 %exitcond114.not, label %common.ret, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !52

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.preheader, %for_begin_ax0.ax1.fused.ax2.outer.fused
  %indvars.iv112 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.preheader ], [ %indvars.iv.next113, %for_begin_ax0.ax1.fused.ax2.outer.fused ]
  %18 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %conv2d_NCHWc.global = tail call ptr %18(i32 1, i32 %dev_id, i64 3584, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %conv2d_NCHWc.global, i64 64) ]
  %19 = icmp eq ptr %conv2d_NCHWc.global, null
  br i1 %19, label %common.ret, label %for_begin_ow.c.outer.preheader, !prof !18

for_begin_ow.c.outer.preheader:                   ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused
  %20 = trunc i64 %indvars.iv112 to i32
  %21 = sdiv i32 %20, 56
  %22 = shl nsw i32 %21, 10
  %23 = srem i32 %20, 56
  %24 = mul nsw i32 %23, 896
  %25 = sext i32 %22 to i64
  %26 = sext i32 %24 to i64
  br label %for_body_ow.c.outer

common.ret:                                       ; preds = %for_begin_ax0.ax1.fused.ax2.outer.fused, %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ax3.inner.3, %parallel_closure_entry
  %common.ret.op = phi i32 [ 0, %parallel_closure_entry ], [ -1, %for_end_ax3.inner.3 ], [ -1, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ 0, %for_begin_ax0.ax1.fused.ax2.outer.fused ]
  ret i32 %common.ret.op

for_begin_ax3.outer.preheader:                    ; preds = %for_end_ic.outer
  %27 = shl nsw i32 %21, 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds float, ptr %p2, i64 %28
  %30 = load <16 x float>, ptr %29, align 64, !tbaa !7311
  %31 = mul nsw i64 %indvars.iv112, 896
  br label %for_body_ax3.inner

for_body_ow.c.outer:                              ; preds = %for_begin_ow.c.outer.preheader, %for_end_ic.outer
  %indvars.iv99 = phi i64 [ 0, %for_begin_ow.c.outer.preheader ], [ %indvars.iv.next100, %for_end_ic.outer ]
  %32 = mul nuw nsw i64 %indvars.iv99, 14
  %33 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global, i64 %32
  %34 = or i64 %32, 1
  %35 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global, i64 %34
  %36 = add nuw nsw i64 %32, 2
  %37 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global, i64 %36
  %38 = add nuw nsw i64 %32, 3
  %39 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global, i64 %38
  %40 = add nuw nsw i64 %32, 4
  %41 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global, i64 %40
  %42 = add nuw nsw i64 %32, 5
  %43 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global, i64 %42
  %44 = add nuw nsw i64 %32, 6
  %45 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global, i64 %44
  %46 = add nuw nsw i64 %32, 7
  %47 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global, i64 %46
  %48 = add nuw nsw i64 %32, 8
  %49 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global, i64 %48
  %50 = add nuw nsw i64 %32, 9
  %51 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global, i64 %50
  %52 = add nuw nsw i64 %32, 10
  %53 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global, i64 %52
  %54 = add nuw nsw i64 %32, 11
  %55 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global, i64 %54
  %56 = add nuw nsw i64 %32, 12
  %57 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global, i64 %56
  %58 = add nuw nsw i64 %32, 13
  %59 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global, i64 %58
  %60 = mul nuw nsw i64 %indvars.iv99, 224
  %61 = add nsw i64 %60, %26
  br label %for_begin_ic.inner.preheader

for_begin_ic.inner.preheader:                     ; preds = %for_body_ow.c.outer, %for_end_ic.inner
  %indvars.iv95 = phi i64 [ 0, %for_body_ow.c.outer ], [ %indvars.iv.next96, %for_end_ic.inner ]
  %.lcssa3271 = phi <16 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %89, %for_end_ic.inner ]
  %.lcssa53370 = phi <16 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %95, %for_end_ic.inner ]
  %.lcssa73569 = phi <16 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %101, %for_end_ic.inner ]
  %.lcssa93768 = phi <16 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %107, %for_end_ic.inner ]
  %.lcssa113967 = phi <16 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %113, %for_end_ic.inner ]
  %.lcssa134166 = phi <16 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %119, %for_end_ic.inner ]
  %.lcssa154365 = phi <16 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %125, %for_end_ic.inner ]
  %.lcssa174564 = phi <16 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %131, %for_end_ic.inner ]
  %.lcssa194763 = phi <16 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %137, %for_end_ic.inner ]
  %.lcssa214962 = phi <16 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %143, %for_end_ic.inner ]
  %.lcssa235161 = phi <16 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %149, %for_end_ic.inner ]
  %.lcssa255360 = phi <16 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %155, %for_end_ic.inner ]
  %.lcssa275559 = phi <16 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %161, %for_end_ic.inner ]
  %.lcssa295758 = phi <16 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %167, %for_end_ic.inner ]
  %62 = shl nsw i64 %indvars.iv95, 8
  %63 = add nuw nsw i64 %62, %25
  %64 = mul nuw nsw i64 %indvars.iv95, 50176
  %65 = add nsw i64 %61, %64
  br label %for_body_ic.inner

for_end_ic.outer:                                 ; preds = %for_end_ic.inner
  store <16 x float> %89, ptr %33, align 64, !tbaa !7313
  store <16 x float> %95, ptr %35, align 64, !tbaa !7313
  store <16 x float> %101, ptr %37, align 64, !tbaa !7313
  store <16 x float> %107, ptr %39, align 64, !tbaa !7313
  store <16 x float> %113, ptr %41, align 64, !tbaa !7313
  store <16 x float> %119, ptr %43, align 64, !tbaa !7313
  store <16 x float> %125, ptr %45, align 64, !tbaa !7313
  store <16 x float> %131, ptr %47, align 64, !tbaa !7313
  store <16 x float> %137, ptr %49, align 64, !tbaa !7313
  store <16 x float> %143, ptr %51, align 64, !tbaa !7313
  store <16 x float> %149, ptr %53, align 64, !tbaa !7313
  store <16 x float> %155, ptr %55, align 64, !tbaa !7313
  store <16 x float> %161, ptr %57, align 64, !tbaa !7313
  store <16 x float> %167, ptr %59, align 64, !tbaa !7313
  %indvars.iv.next100 = add nuw nsw i64 %indvars.iv99, 1
  %exitcond103.not = icmp eq i64 %indvars.iv.next100, 4
  br i1 %exitcond103.not, label %for_begin_ax3.outer.preheader, label %for_body_ow.c.outer, !prof !52

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %66 = phi <16 x float> [ %.lcssa3271, %for_begin_ic.inner.preheader ], [ %89, %for_body_ic.inner ]
  %67 = phi <16 x float> [ %.lcssa53370, %for_begin_ic.inner.preheader ], [ %95, %for_body_ic.inner ]
  %68 = phi <16 x float> [ %.lcssa73569, %for_begin_ic.inner.preheader ], [ %101, %for_body_ic.inner ]
  %69 = phi <16 x float> [ %.lcssa93768, %for_begin_ic.inner.preheader ], [ %107, %for_body_ic.inner ]
  %70 = phi <16 x float> [ %.lcssa113967, %for_begin_ic.inner.preheader ], [ %113, %for_body_ic.inner ]
  %71 = phi <16 x float> [ %.lcssa134166, %for_begin_ic.inner.preheader ], [ %119, %for_body_ic.inner ]
  %72 = phi <16 x float> [ %.lcssa154365, %for_begin_ic.inner.preheader ], [ %125, %for_body_ic.inner ]
  %73 = phi <16 x float> [ %.lcssa174564, %for_begin_ic.inner.preheader ], [ %131, %for_body_ic.inner ]
  %74 = phi <16 x float> [ %.lcssa194763, %for_begin_ic.inner.preheader ], [ %137, %for_body_ic.inner ]
  %75 = phi <16 x float> [ %.lcssa214962, %for_begin_ic.inner.preheader ], [ %143, %for_body_ic.inner ]
  %76 = phi <16 x float> [ %.lcssa235161, %for_begin_ic.inner.preheader ], [ %149, %for_body_ic.inner ]
  %77 = phi <16 x float> [ %.lcssa255360, %for_begin_ic.inner.preheader ], [ %155, %for_body_ic.inner ]
  %78 = phi <16 x float> [ %.lcssa275559, %for_begin_ic.inner.preheader ], [ %161, %for_body_ic.inner ]
  %79 = phi <16 x float> [ %.lcssa295758, %for_begin_ic.inner.preheader ], [ %167, %for_body_ic.inner ]
  %80 = shl nuw nsw i64 %indvars.iv, 4
  %81 = add nuw nsw i64 %63, %80
  %82 = add nsw i64 %65, %indvars.iv
  %83 = getelementptr inbounds float, ptr %p0, i64 %82
  %84 = load float, ptr %83, align 4, !tbaa !7315
  %85 = insertelement <16 x float> undef, float %84, i64 0
  %86 = shufflevector <16 x float> %85, <16 x float> undef, <16 x i32> zeroinitializer
  %87 = getelementptr inbounds float, ptr %p1, i64 %81
  %88 = load <16 x float>, ptr %87, align 64, !tbaa !7317
  %89 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %86, <16 x float> %88, <16 x float> %66)
  %90 = add nsw i64 %82, 16
  %91 = getelementptr inbounds float, ptr %p0, i64 %90
  %92 = load float, ptr %91, align 4, !tbaa !7315
  %93 = insertelement <16 x float> undef, float %92, i64 0
  %94 = shufflevector <16 x float> %93, <16 x float> undef, <16 x i32> zeroinitializer
  %95 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %94, <16 x float> %88, <16 x float> %67)
  %96 = add nsw i64 %82, 32
  %97 = getelementptr inbounds float, ptr %p0, i64 %96
  %98 = load float, ptr %97, align 4, !tbaa !7315
  %99 = insertelement <16 x float> undef, float %98, i64 0
  %100 = shufflevector <16 x float> %99, <16 x float> undef, <16 x i32> zeroinitializer
  %101 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %100, <16 x float> %88, <16 x float> %68)
  %102 = add nsw i64 %82, 48
  %103 = getelementptr inbounds float, ptr %p0, i64 %102
  %104 = load float, ptr %103, align 4, !tbaa !7315
  %105 = insertelement <16 x float> undef, float %104, i64 0
  %106 = shufflevector <16 x float> %105, <16 x float> undef, <16 x i32> zeroinitializer
  %107 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %106, <16 x float> %88, <16 x float> %69)
  %108 = add nsw i64 %82, 64
  %109 = getelementptr inbounds float, ptr %p0, i64 %108
  %110 = load float, ptr %109, align 4, !tbaa !7315
  %111 = insertelement <16 x float> undef, float %110, i64 0
  %112 = shufflevector <16 x float> %111, <16 x float> undef, <16 x i32> zeroinitializer
  %113 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %112, <16 x float> %88, <16 x float> %70)
  %114 = add nsw i64 %82, 80
  %115 = getelementptr inbounds float, ptr %p0, i64 %114
  %116 = load float, ptr %115, align 4, !tbaa !7315
  %117 = insertelement <16 x float> undef, float %116, i64 0
  %118 = shufflevector <16 x float> %117, <16 x float> undef, <16 x i32> zeroinitializer
  %119 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %118, <16 x float> %88, <16 x float> %71)
  %120 = add nsw i64 %82, 96
  %121 = getelementptr inbounds float, ptr %p0, i64 %120
  %122 = load float, ptr %121, align 4, !tbaa !7315
  %123 = insertelement <16 x float> undef, float %122, i64 0
  %124 = shufflevector <16 x float> %123, <16 x float> undef, <16 x i32> zeroinitializer
  %125 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %124, <16 x float> %88, <16 x float> %72)
  %126 = add nsw i64 %82, 112
  %127 = getelementptr inbounds float, ptr %p0, i64 %126
  %128 = load float, ptr %127, align 4, !tbaa !7315
  %129 = insertelement <16 x float> undef, float %128, i64 0
  %130 = shufflevector <16 x float> %129, <16 x float> undef, <16 x i32> zeroinitializer
  %131 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %130, <16 x float> %88, <16 x float> %73)
  %132 = add nsw i64 %82, 128
  %133 = getelementptr inbounds float, ptr %p0, i64 %132
  %134 = load float, ptr %133, align 4, !tbaa !7315
  %135 = insertelement <16 x float> undef, float %134, i64 0
  %136 = shufflevector <16 x float> %135, <16 x float> undef, <16 x i32> zeroinitializer
  %137 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %136, <16 x float> %88, <16 x float> %74)
  %138 = add nsw i64 %82, 144
  %139 = getelementptr inbounds float, ptr %p0, i64 %138
  %140 = load float, ptr %139, align 4, !tbaa !7315
  %141 = insertelement <16 x float> undef, float %140, i64 0
  %142 = shufflevector <16 x float> %141, <16 x float> undef, <16 x i32> zeroinitializer
  %143 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %142, <16 x float> %88, <16 x float> %75)
  %144 = add nsw i64 %82, 160
  %145 = getelementptr inbounds float, ptr %p0, i64 %144
  %146 = load float, ptr %145, align 4, !tbaa !7315
  %147 = insertelement <16 x float> undef, float %146, i64 0
  %148 = shufflevector <16 x float> %147, <16 x float> undef, <16 x i32> zeroinitializer
  %149 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %148, <16 x float> %88, <16 x float> %76)
  %150 = add nsw i64 %82, 176
  %151 = getelementptr inbounds float, ptr %p0, i64 %150
  %152 = load float, ptr %151, align 4, !tbaa !7315
  %153 = insertelement <16 x float> undef, float %152, i64 0
  %154 = shufflevector <16 x float> %153, <16 x float> undef, <16 x i32> zeroinitializer
  %155 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %154, <16 x float> %88, <16 x float> %77)
  %156 = add nsw i64 %82, 192
  %157 = getelementptr inbounds float, ptr %p0, i64 %156
  %158 = load float, ptr %157, align 4, !tbaa !7315
  %159 = insertelement <16 x float> undef, float %158, i64 0
  %160 = shufflevector <16 x float> %159, <16 x float> undef, <16 x i32> zeroinitializer
  %161 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %160, <16 x float> %88, <16 x float> %78)
  %162 = add nsw i64 %82, 208
  %163 = getelementptr inbounds float, ptr %p0, i64 %162
  %164 = load float, ptr %163, align 4, !tbaa !7315
  %165 = insertelement <16 x float> undef, float %164, i64 0
  %166 = shufflevector <16 x float> %165, <16 x float> undef, <16 x i32> zeroinitializer
  %167 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %166, <16 x float> %88, <16 x float> %79)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 16
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next96 = add nuw nsw i64 %indvars.iv95, 1
  %exitcond98.not = icmp eq i64 %indvars.iv.next96, 4
  br i1 %exitcond98.not, label %for_end_ic.outer, label %for_begin_ic.inner.preheader, !prof !52

for_body_ax3.inner:                               ; preds = %for_begin_ax3.outer.preheader, %for_body_ax3.inner
  %indvars.iv104 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next105, %for_body_ax3.inner ]
  %168 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global, i64 %indvars.iv104
  %169 = load <16 x float>, ptr %168, align 64, !tbaa !7313
  %170 = fadd <16 x float> %30, %169
  %171 = fcmp ogt <16 x float> %170, zeroinitializer
  %172 = select <16 x i1> %171, <16 x float> %170, <16 x float> zeroinitializer
  %173 = shl nuw nsw i64 %indvars.iv104, 4
  %174 = add nsw i64 %31, %173
  %175 = getelementptr inbounds float, ptr %T_relu, i64 %174
  store <16 x float> %172, ptr %175, align 64, !tbaa !7319
  %indvars.iv.next105 = add nuw nsw i64 %indvars.iv104, 1
  %exitcond107.not = icmp eq i64 %indvars.iv.next105, 14
  br i1 %exitcond107.not, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !52

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %176 = add nsw i64 %31, 224
  br label %for_body_ax3.inner.1

for_body_ax3.inner.1:                             ; preds = %for_body_ax3.inner.1, %for_end_ax3.inner
  %indvars.iv104.1 = phi i64 [ 0, %for_end_ax3.inner ], [ %indvars.iv.next105.1, %for_body_ax3.inner.1 ]
  %177 = add nuw nsw i64 %indvars.iv104.1, 14
  %178 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global, i64 %177
  %179 = load <16 x float>, ptr %178, align 64, !tbaa !7313
  %180 = fadd <16 x float> %30, %179
  %181 = fcmp ogt <16 x float> %180, zeroinitializer
  %182 = select <16 x i1> %181, <16 x float> %180, <16 x float> zeroinitializer
  %183 = shl nuw nsw i64 %indvars.iv104.1, 4
  %184 = add nsw i64 %176, %183
  %185 = getelementptr inbounds float, ptr %T_relu, i64 %184
  store <16 x float> %182, ptr %185, align 64, !tbaa !7319
  %indvars.iv.next105.1 = add nuw nsw i64 %indvars.iv104.1, 1
  %exitcond107.1.not = icmp eq i64 %indvars.iv.next105.1, 14
  br i1 %exitcond107.1.not, label %for_end_ax3.inner.1, label %for_body_ax3.inner.1, !prof !52

for_end_ax3.inner.1:                              ; preds = %for_body_ax3.inner.1
  %186 = add nsw i64 %31, 448
  br label %for_body_ax3.inner.2

for_body_ax3.inner.2:                             ; preds = %for_body_ax3.inner.2, %for_end_ax3.inner.1
  %indvars.iv104.2 = phi i64 [ 0, %for_end_ax3.inner.1 ], [ %indvars.iv.next105.2, %for_body_ax3.inner.2 ]
  %187 = add nuw nsw i64 %indvars.iv104.2, 28
  %188 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global, i64 %187
  %189 = load <16 x float>, ptr %188, align 64, !tbaa !7313
  %190 = fadd <16 x float> %30, %189
  %191 = fcmp ogt <16 x float> %190, zeroinitializer
  %192 = select <16 x i1> %191, <16 x float> %190, <16 x float> zeroinitializer
  %193 = shl nuw nsw i64 %indvars.iv104.2, 4
  %194 = add nsw i64 %186, %193
  %195 = getelementptr inbounds float, ptr %T_relu, i64 %194
  store <16 x float> %192, ptr %195, align 64, !tbaa !7319
  %indvars.iv.next105.2 = add nuw nsw i64 %indvars.iv104.2, 1
  %exitcond107.2.not = icmp eq i64 %indvars.iv.next105.2, 14
  br i1 %exitcond107.2.not, label %for_end_ax3.inner.2, label %for_body_ax3.inner.2, !prof !52

for_end_ax3.inner.2:                              ; preds = %for_body_ax3.inner.2
  %196 = add nsw i64 %31, 672
  br label %for_body_ax3.inner.3

for_body_ax3.inner.3:                             ; preds = %for_body_ax3.inner.3, %for_end_ax3.inner.2
  %indvars.iv104.3 = phi i64 [ 0, %for_end_ax3.inner.2 ], [ %indvars.iv.next105.3, %for_body_ax3.inner.3 ]
  %197 = add nuw nsw i64 %indvars.iv104.3, 42
  %198 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global, i64 %197
  %199 = load <16 x float>, ptr %198, align 64, !tbaa !7313
  %200 = fadd <16 x float> %30, %199
  %201 = fcmp ogt <16 x float> %200, zeroinitializer
  %202 = select <16 x i1> %201, <16 x float> %200, <16 x float> zeroinitializer
  %203 = shl nuw nsw i64 %indvars.iv104.3, 4
  %204 = add nsw i64 %196, %203
  %205 = getelementptr inbounds float, ptr %T_relu, i64 %204
  store <16 x float> %202, ptr %205, align 64, !tbaa !7319
  %indvars.iv.next105.3 = add nuw nsw i64 %indvars.iv104.3, 1
  %exitcond107.3.not = icmp eq i64 %indvars.iv.next105.3, 14
  br i1 %exitcond107.3.not, label %for_end_ax3.inner.3, label %for_body_ax3.inner.3, !prof !52

for_end_ax3.inner.3:                              ; preds = %for_body_ax3.inner.3
  %206 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %207 = tail call i32 %206(i32 1, i32 %dev_id, ptr nonnull %conv2d_NCHWc.global)
  %.not = icmp eq i32 %207, 0
  br i1 %.not, label %for_begin_ax0.ax1.fused.ax2.outer.fused, label %common.ret, !prof !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <16 x float> @llvm.fmuladd.v16f32(<16 x float>, <16 x float>, <16 x float>) #5

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30, align 8
  store i32 %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1168, ptr nonnull %5, i32 0)
  ret i32 %11
}

define private i32 @__tvm_parallel_lambda.1168(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #0 {
parallel_closure_entry:
  %dev_id = load i32, ptr %1, align 4
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30, ptr %1, i64 0, i32 3
  %T_relu = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.30, ptr %1, i64 0, i32 4
  %p2 = load ptr, ptr %5, align 8
  %6 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %6, align 4
  %7 = add nsw i32 %num_task, 27
  %8 = sdiv i32 %7, %num_task
  %9 = add nsw i32 %task_id, 1
  %10 = mul nsw i32 %8, %9
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 28)
  %12 = mul nsw i32 %8, %task_id
  %13 = tail call i32 @llvm.smin.i32(i32 %12, i32 28)
  %14 = icmp slt i32 %13, %11
  br i1 %14, label %for_body_ax0.ax1.fused.ax2.outer.fused, label %common.ret, !prof !18

for_begin_ax0.ax1.fused.ax2.outer.fused:          ; preds = %for_end_ax3.outer
  %15 = add nsw i32 %ax0.ax1.fused.ax2.outer.fused27, 1
  %exitcond54.not = icmp eq i32 %15, %11
  br i1 %exitcond54.not, label %common.ret, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !52

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %parallel_closure_entry, %for_begin_ax0.ax1.fused.ax2.outer.fused
  %ax0.ax1.fused.ax2.outer.fused27 = phi i32 [ %15, %for_begin_ax0.ax1.fused.ax2.outer.fused ], [ %13, %parallel_closure_entry ]
  %16 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %conv2d_NCHWc.global = tail call ptr %16(i32 1, i32 %dev_id, i64 7168, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %conv2d_NCHWc.global, i64 64) ]
  %17 = icmp eq ptr %conv2d_NCHWc.global, null
  br i1 %17, label %common.ret, label %for_begin_ow.c.outer.preheader, !prof !18

for_begin_ow.c.outer.preheader:                   ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused
  %18 = sdiv i32 %ax0.ax1.fused.ax2.outer.fused27, 7
  %19 = shl nsw i32 %18, 16
  %20 = srem i32 %ax0.ax1.fused.ax2.outer.fused27, 7
  %21 = mul nsw i32 %20, 14336
  %22 = sext i32 %19 to i64
  %23 = sext i32 %21 to i64
  br label %for_body_ow.c.outer

common.ret:                                       ; preds = %for_begin_ax0.ax1.fused.ax2.outer.fused, %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ax3.outer, %parallel_closure_entry
  %common.ret.op = phi i32 [ 0, %parallel_closure_entry ], [ -1, %for_end_ax3.outer ], [ -1, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ 0, %for_begin_ax0.ax1.fused.ax2.outer.fused ]
  ret i32 %common.ret.op

for_begin_ax3.outer.preheader:                    ; preds = %for_end_ic.outer
  %24 = shl nsw i32 %18, 6
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds float, ptr %p2, i64 %25
  %27 = load <64 x float>, ptr %26, align 64, !tbaa !7321
  %28 = mul nsw i32 %ax0.ax1.fused.ax2.outer.fused27, 1792
  br label %for_begin_ax2.inner.preheader

for_body_ow.c.outer:                              ; preds = %for_begin_ow.c.outer.preheader, %for_end_ic.outer
  %indvars.iv39 = phi i64 [ 0, %for_begin_ow.c.outer.preheader ], [ %indvars.iv.next40, %for_end_ic.outer ]
  %29 = shl nuw nsw i64 %indvars.iv39, 1
  %30 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %29
  %31 = or i64 %29, 1
  %32 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %31
  %33 = add nuw nsw i64 %29, 14
  %34 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %33
  %35 = add nuw nsw i64 %29, 15
  %36 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %35
  %37 = shl nsw i64 %indvars.iv39, 10
  %38 = add nsw i64 %37, %23
  br label %for_begin_ic.inner.preheader

for_begin_ic.inner.preheader:                     ; preds = %for_body_ow.c.outer, %for_end_ic.inner
  %39 = phi i1 [ true, %for_body_ow.c.outer ], [ false, %for_end_ic.inner ]
  %indvars.iv36 = phi i64 [ 0, %for_body_ow.c.outer ], [ 1, %for_end_ic.inner ]
  %.lcssa1221 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %57, %for_end_ic.inner ]
  %.lcssa51320 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %63, %for_end_ic.inner ]
  %.lcssa71519 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %69, %for_end_ic.inner ]
  %.lcssa91718 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %75, %for_end_ic.inner ]
  %40 = shl nuw nsw i64 %indvars.iv36, 15
  %41 = or i64 %40, %22
  %42 = mul nuw nsw i64 %indvars.iv36, 100352
  %43 = add nsw i64 %38, %42
  br label %for_body_ic.inner

for_end_ic.outer:                                 ; preds = %for_end_ic.inner
  store <64 x float> %57, ptr %30, align 64, !tbaa !7323
  store <64 x float> %63, ptr %32, align 64, !tbaa !7323
  store <64 x float> %69, ptr %34, align 64, !tbaa !7323
  store <64 x float> %75, ptr %36, align 64, !tbaa !7323
  %indvars.iv.next40 = add nuw nsw i64 %indvars.iv39, 1
  %exitcond43.not = icmp eq i64 %indvars.iv.next40, 7
  br i1 %exitcond43.not, label %for_begin_ax3.outer.preheader, label %for_body_ow.c.outer, !prof !52

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %44 = phi <64 x float> [ %.lcssa1221, %for_begin_ic.inner.preheader ], [ %57, %for_body_ic.inner ]
  %45 = phi <64 x float> [ %.lcssa51320, %for_begin_ic.inner.preheader ], [ %63, %for_body_ic.inner ]
  %46 = phi <64 x float> [ %.lcssa71519, %for_begin_ic.inner.preheader ], [ %69, %for_body_ic.inner ]
  %47 = phi <64 x float> [ %.lcssa91718, %for_begin_ic.inner.preheader ], [ %75, %for_body_ic.inner ]
  %48 = shl nuw nsw i64 %indvars.iv, 6
  %49 = add nuw nsw i64 %41, %48
  %50 = add nsw i64 %43, %indvars.iv
  %51 = getelementptr inbounds float, ptr %p0, i64 %50
  %52 = load float, ptr %51, align 4, !tbaa !7325
  %53 = insertelement <64 x float> undef, float %52, i64 0
  %54 = shufflevector <64 x float> %53, <64 x float> undef, <64 x i32> zeroinitializer
  %55 = getelementptr inbounds float, ptr %p1, i64 %49
  %56 = load <64 x float>, ptr %55, align 64, !tbaa !7327
  %57 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %54, <64 x float> %56, <64 x float> %44)
  %58 = add nsw i64 %50, 512
  %59 = getelementptr inbounds float, ptr %p0, i64 %58
  %60 = load float, ptr %59, align 4, !tbaa !7325
  %61 = insertelement <64 x float> undef, float %60, i64 0
  %62 = shufflevector <64 x float> %61, <64 x float> undef, <64 x i32> zeroinitializer
  %63 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %62, <64 x float> %56, <64 x float> %45)
  %64 = add nsw i64 %50, 7168
  %65 = getelementptr inbounds float, ptr %p0, i64 %64
  %66 = load float, ptr %65, align 4, !tbaa !7325
  %67 = insertelement <64 x float> undef, float %66, i64 0
  %68 = shufflevector <64 x float> %67, <64 x float> undef, <64 x i32> zeroinitializer
  %69 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %68, <64 x float> %56, <64 x float> %46)
  %70 = add nsw i64 %50, 7680
  %71 = getelementptr inbounds float, ptr %p0, i64 %70
  %72 = load float, ptr %71, align 4, !tbaa !7325
  %73 = insertelement <64 x float> undef, float %72, i64 0
  %74 = shufflevector <64 x float> %73, <64 x float> undef, <64 x i32> zeroinitializer
  %75 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %74, <64 x float> %56, <64 x float> %47)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 512
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  br i1 %39, label %for_begin_ic.inner.preheader, label %for_end_ic.outer, !prof !18

for_begin_ax2.inner.preheader:                    ; preds = %for_begin_ax3.outer.preheader, %for_end_ax2.inner
  %indvars.iv50 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next51, %for_end_ax2.inner ]
  %76 = shl nuw nsw i64 %indvars.iv50, 1
  %indvars.iv50.tr = trunc i64 %indvars.iv50 to i32
  %77 = shl i32 %indvars.iv50.tr, 7
  %78 = add i32 %77, %28
  br label %for_begin_ax3.inner.preheader

for_end_ax3.outer:                                ; preds = %for_end_ax2.inner
  %79 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %80 = tail call i32 %79(i32 1, i32 %dev_id, ptr nonnull %conv2d_NCHWc.global)
  %.not = icmp eq i32 %80, 0
  br i1 %.not, label %for_begin_ax0.ax1.fused.ax2.outer.fused, label %common.ret, !prof !52

for_begin_ax3.inner.preheader:                    ; preds = %for_begin_ax2.inner.preheader, %for_begin_ax3.inner.preheader
  %81 = phi i1 [ true, %for_begin_ax2.inner.preheader ], [ false, %for_begin_ax3.inner.preheader ]
  %indvars.iv47 = phi i64 [ 0, %for_begin_ax2.inner.preheader ], [ 1, %for_begin_ax3.inner.preheader ]
  %82 = mul nuw nsw i64 %indvars.iv47, 14
  %83 = add nuw nsw i64 %82, %76
  %84 = trunc i64 %indvars.iv47 to i32
  %85 = mul nuw nsw i32 %84, 896
  %86 = add i32 %78, %85
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %83
  %89 = load <64 x float>, ptr %88, align 64, !tbaa !7323
  %90 = fadd <64 x float> %27, %89
  %91 = fcmp ogt <64 x float> %90, zeroinitializer
  %92 = select <64 x i1> %91, <64 x float> %90, <64 x float> zeroinitializer
  %93 = getelementptr inbounds float, ptr %T_relu, i64 %87
  store <64 x float> %92, ptr %93, align 64, !tbaa !7329
  %94 = or i64 %83, 1
  %95 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %94
  %96 = load <64 x float>, ptr %95, align 64, !tbaa !7323
  %97 = fadd <64 x float> %27, %96
  %98 = fcmp ogt <64 x float> %97, zeroinitializer
  %99 = select <64 x i1> %98, <64 x float> %97, <64 x float> zeroinitializer
  %100 = or i64 %87, 64
  %101 = getelementptr inbounds float, ptr %T_relu, i64 %100
  store <64 x float> %99, ptr %101, align 64, !tbaa !7329
  br i1 %81, label %for_begin_ax3.inner.preheader, label %for_end_ax2.inner, !prof !18

for_end_ax2.inner:                                ; preds = %for_begin_ax3.inner.preheader
  %indvars.iv.next51 = add nuw nsw i64 %indvars.iv50, 1
  %exitcond53.not = icmp eq i64 %indvars.iv.next51, 7
  br i1 %exitcond53.not, label %for_end_ax3.outer, label %for_begin_ax2.inner.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_11_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.32, align 8
  %6 = alloca %closure_loop_parallel_i0.i1.fused.i2.fused.31, align 8
  %7 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pad = tail call ptr %7(i32 1, i32 %0, i64 262144, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pad, i64 64) ]
  %8 = icmp eq ptr %data_pad, null
  br i1 %8, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end2, %call_end, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %11, %if_end ], [ %17, %call_end ], [ %., %call_end2 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %data_pad, ptr %6, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.31, ptr %6, i64 0, i32 1
  store ptr %1, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1218, ptr nonnull %6, i32 0)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %call_end, label %common.ret, !prof !18

call_end:                                         ; preds = %if_end
  store ptr %data_pad, ptr %5, align 8
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.32, ptr %5, i64 0, i32 1
  store ptr %2, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.32, ptr %5, i64 0, i32 2
  store ptr %3, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.32, ptr %5, i64 0, i32 3
  store ptr %4, ptr %15, align 8
  %16 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %17 = call i32 %16(ptr nonnull @__tvm_parallel_lambda.1219, ptr nonnull %5, i32 0)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %call_end2, label %common.ret, !prof !18

call_end2:                                        ; preds = %call_end
  %19 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %20 = call i32 %19(i32 1, i32 %0, ptr nonnull %data_pad)
  %.not = icmp ne i32 %20, 0
  %. = sext i1 %.not to i32
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1218(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.31, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 31
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 32)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 32)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_i3.preheader.preheader, label %for_end_i0.i1.fused.i2.fused, !prof !18

for_begin_i3.preheader.preheader:                 ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 32)
  %smin = sext i32 %12 to i64
  %13 = sub i32 %8, %10
  br label %for_begin_i3.preheader

for_begin_i3.preheader:                           ; preds = %for_begin_i3.preheader.preheader, %for_end_i3
  %indvars.iv = phi i64 [ %smin, %for_begin_i3.preheader.preheader ], [ %indvars.iv.next, %for_end_i3 ]
  %indvar = phi i32 [ 0, %for_begin_i3.preheader.preheader ], [ %indvar.next, %for_end_i3 ]
  %14 = trunc i64 %indvars.iv to i32
  %cse_var_2 = and i32 %14, 15
  %15 = icmp ne i32 %cse_var_2, 15
  %16 = icmp ne i32 %cse_var_2, 0
  %17 = and i1 %16, %15
  %.fr = freeze i1 %17
  br i1 %.fr, label %if_end.15, label %for_body_i3.us.preheader

for_body_i3.us.preheader:                         ; preds = %for_begin_i3.preheader
  %18 = add i32 %10, %indvar
  %19 = shl i32 %18, 11
  %20 = sext i32 %19 to i64
  %21 = shl nsw i64 %20, 2
  %scevgep = getelementptr i8, ptr %data_pad, i64 %21
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 64 dereferenceable(8192) %scevgep, i8 0, i64 8192, i1 false), !tbaa !7331
  br label %for_end_i3

for_end_i0.i1.fused.i2.fused:                     ; preds = %for_end_i3, %parallel_closure_entry
  ret i32 0

for_end_i3:                                       ; preds = %for_body_i3.us.preheader, %if_end.15
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %indvar.next = add nuw i32 %indvar, 1
  %exitcond.not = icmp eq i32 %indvar.next, %13
  br i1 %exitcond.not, label %for_end_i0.i1.fused.i2.fused, label %for_begin_i3.preheader, !prof !52

if_end.15:                                        ; preds = %for_begin_i3.preheader
  %22 = mul nuw nsw i32 %cse_var_2, 1792
  %23 = add nsw i32 %22, -1920
  %24 = ashr i32 %14, 4
  %25 = mul nsw i32 %24, 25088
  %26 = add i32 %23, %25
  %27 = shl nsw i32 %14, 11
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds float, ptr %data_pad, i64 %28
  store <128 x float> zeroinitializer, ptr %29, align 64, !tbaa !7331
  %30 = add i32 %26, 128
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds float, ptr %p0, i64 %31
  %33 = load <128 x float>, ptr %32, align 64, !tbaa !7333
  %34 = or i64 %28, 128
  %35 = getelementptr inbounds float, ptr %data_pad, i64 %34
  store <128 x float> %33, ptr %35, align 64, !tbaa !7331
  %36 = add i32 %26, 256
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds float, ptr %p0, i64 %37
  %39 = load <128 x float>, ptr %38, align 64, !tbaa !7333
  %40 = or i64 %28, 256
  %41 = getelementptr inbounds float, ptr %data_pad, i64 %40
  store <128 x float> %39, ptr %41, align 64, !tbaa !7331
  %42 = add i32 %26, 384
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %p0, i64 %43
  %45 = load <128 x float>, ptr %44, align 64, !tbaa !7333
  %46 = or i64 %28, 384
  %47 = getelementptr inbounds float, ptr %data_pad, i64 %46
  store <128 x float> %45, ptr %47, align 64, !tbaa !7331
  %48 = add i32 %26, 512
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds float, ptr %p0, i64 %49
  %51 = load <128 x float>, ptr %50, align 64, !tbaa !7333
  %52 = or i64 %28, 512
  %53 = getelementptr inbounds float, ptr %data_pad, i64 %52
  store <128 x float> %51, ptr %53, align 64, !tbaa !7331
  %54 = add i32 %26, 640
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds float, ptr %p0, i64 %55
  %57 = load <128 x float>, ptr %56, align 64, !tbaa !7333
  %58 = or i64 %28, 640
  %59 = getelementptr inbounds float, ptr %data_pad, i64 %58
  store <128 x float> %57, ptr %59, align 64, !tbaa !7331
  %60 = add i32 %26, 768
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds float, ptr %p0, i64 %61
  %63 = load <128 x float>, ptr %62, align 64, !tbaa !7333
  %64 = or i64 %28, 768
  %65 = getelementptr inbounds float, ptr %data_pad, i64 %64
  store <128 x float> %63, ptr %65, align 64, !tbaa !7331
  %66 = add i32 %26, 896
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds float, ptr %p0, i64 %67
  %69 = load <128 x float>, ptr %68, align 64, !tbaa !7333
  %70 = or i64 %28, 896
  %71 = getelementptr inbounds float, ptr %data_pad, i64 %70
  store <128 x float> %69, ptr %71, align 64, !tbaa !7331
  %72 = add i32 %26, 1024
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds float, ptr %p0, i64 %73
  %75 = load <128 x float>, ptr %74, align 64, !tbaa !7333
  %76 = or i64 %28, 1024
  %77 = getelementptr inbounds float, ptr %data_pad, i64 %76
  store <128 x float> %75, ptr %77, align 64, !tbaa !7331
  %78 = add i32 %26, 1152
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds float, ptr %p0, i64 %79
  %81 = load <128 x float>, ptr %80, align 64, !tbaa !7333
  %82 = or i64 %28, 1152
  %83 = getelementptr inbounds float, ptr %data_pad, i64 %82
  store <128 x float> %81, ptr %83, align 64, !tbaa !7331
  %84 = add i32 %26, 1280
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds float, ptr %p0, i64 %85
  %87 = load <128 x float>, ptr %86, align 64, !tbaa !7333
  %88 = or i64 %28, 1280
  %89 = getelementptr inbounds float, ptr %data_pad, i64 %88
  store <128 x float> %87, ptr %89, align 64, !tbaa !7331
  %90 = add i32 %26, 1408
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds float, ptr %p0, i64 %91
  %93 = load <128 x float>, ptr %92, align 64, !tbaa !7333
  %94 = or i64 %28, 1408
  %95 = getelementptr inbounds float, ptr %data_pad, i64 %94
  store <128 x float> %93, ptr %95, align 64, !tbaa !7331
  %96 = add i32 %26, 1536
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds float, ptr %p0, i64 %97
  %99 = load <128 x float>, ptr %98, align 64, !tbaa !7333
  %100 = or i64 %28, 1536
  %101 = getelementptr inbounds float, ptr %data_pad, i64 %100
  store <128 x float> %99, ptr %101, align 64, !tbaa !7331
  %102 = add i32 %26, 1664
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds float, ptr %p0, i64 %103
  %105 = load <128 x float>, ptr %104, align 64, !tbaa !7333
  %106 = or i64 %28, 1664
  %107 = getelementptr inbounds float, ptr %data_pad, i64 %106
  store <128 x float> %105, ptr %107, align 64, !tbaa !7331
  %108 = add i32 %26, 1792
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds float, ptr %p0, i64 %109
  %111 = load <128 x float>, ptr %110, align 64, !tbaa !7333
  %112 = or i64 %28, 1792
  %113 = getelementptr inbounds float, ptr %data_pad, i64 %112
  store <128 x float> %111, ptr %113, align 64, !tbaa !7331
  %114 = or i64 %28, 1920
  %115 = getelementptr inbounds float, ptr %data_pad, i64 %114
  store <128 x float> zeroinitializer, ptr %115, align 64, !tbaa !7331
  br label %for_end_i3
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1219(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %conv2d_NCHWc.global1 = alloca [14 x <16 x float>], align 64
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.32, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.32, ptr %1, i64 0, i32 2
  %T_relu = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.32, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 223
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 224)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 224)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_body_ax0.ax1.fused.ax2.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_body_ax0.ax1.fused.ax2.fused.lr.ph:           ; preds = %parallel_closure_entry
  %14 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global1, i64 1
  %15 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global1, i64 2
  %16 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global1, i64 3
  %17 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global1, i64 4
  %18 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global1, i64 5
  %19 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global1, i64 6
  %20 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global1, i64 7
  %21 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global1, i64 8
  %22 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global1, i64 9
  %23 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global1, i64 10
  %24 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global1, i64 11
  %25 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global1, i64 12
  %26 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global1, i64 13
  %27 = tail call i32 @llvm.smin.i32(i32 %11, i32 224)
  %smin = sext i32 %27 to i64
  %28 = add i32 %10, %27
  %29 = sub i32 %28, %12
  br label %for_body_ax0.ax1.fused.ax2.fused

for_body_ax0.ax1.fused.ax2.fused:                 ; preds = %for_body_ax0.ax1.fused.ax2.fused.lr.ph, %for_end_ax3.inner
  %indvars.iv162 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.fused.lr.ph ], [ %indvars.iv.next163, %for_end_ax3.inner ]
  %30 = trunc i64 %indvars.iv162 to i32
  %31 = srem i32 %30, 14
  %32 = sdiv i32 %30, 14
  %33 = mul nsw i32 %32, 36864
  %34 = sext i32 %33 to i64
  br label %for_begin_kh.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3.inner, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_end_kh
  store <16 x float> %175, ptr %conv2d_NCHWc.global1, align 64, !tbaa !7335
  store <16 x float> %176, ptr %14, align 64, !tbaa !7342
  store <16 x float> %177, ptr %15, align 64, !tbaa !7344
  store <16 x float> %178, ptr %16, align 64, !tbaa !7347
  store <16 x float> %179, ptr %17, align 64, !tbaa !7349
  store <16 x float> %180, ptr %18, align 64, !tbaa !7353
  store <16 x float> %181, ptr %19, align 64, !tbaa !7355
  store <16 x float> %182, ptr %20, align 64, !tbaa !7358
  store <16 x float> %183, ptr %21, align 64, !tbaa !7360
  store <16 x float> %184, ptr %22, align 64, !tbaa !7365
  store <16 x float> %185, ptr %23, align 64, !tbaa !7367
  store <16 x float> %186, ptr %24, align 64, !tbaa !7370
  store <16 x float> %187, ptr %25, align 64, !tbaa !7372
  store <16 x float> %193, ptr %26, align 64, !tbaa !7376
  %35 = shl nsw i32 %32, 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds float, ptr %p2, i64 %36
  %38 = load <16 x float>, ptr %37, align 64, !tbaa !7378
  %39 = mul nsw i64 %indvars.iv162, 224
  br label %for_body_ax3.inner

for_begin_kh.preheader:                           ; preds = %for_body_ax0.ax1.fused.ax2.fused, %for_end_kh
  %40 = phi i1 [ true, %for_body_ax0.ax1.fused.ax2.fused ], [ false, %for_end_kh ]
  %indvars.iv155 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.fused ], [ 1, %for_end_kh ]
  %.lcssa29.lcssa70109 = phi <16 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %175, %for_end_kh ]
  %.lcssa231.lcssa72108 = phi <16 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %176, %for_end_kh ]
  %.lcssa432.lcssa74107 = phi <16 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %177, %for_end_kh ]
  %.lcssa634.lcssa75106 = phi <16 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %178, %for_end_kh ]
  %.lcssa836.lcssa77105 = phi <16 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %179, %for_end_kh ]
  %.lcssa1038.lcssa79104 = phi <16 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %180, %for_end_kh ]
  %.lcssa1240.lcssa81103 = phi <16 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %181, %for_end_kh ]
  %.lcssa1442.lcssa83102 = phi <16 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %182, %for_end_kh ]
  %.lcssa1644.lcssa85101 = phi <16 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %183, %for_end_kh ]
  %.lcssa1846.lcssa87100 = phi <16 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %184, %for_end_kh ]
  %.lcssa2048.lcssa8999 = phi <16 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %185, %for_end_kh ]
  %.lcssa2250.lcssa9198 = phi <16 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %186, %for_end_kh ]
  %.lcssa2452.lcssa9397 = phi <16 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %187, %for_end_kh ]
  %.lcssa2654.lcssa9596 = phi <16 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %193, %for_end_kh ]
  %41 = shl nuw nsw i64 %indvars.iv155, 15
  %42 = mul nuw nsw i64 %indvars.iv155, 18432
  %43 = add nsw i64 %42, %34
  br label %for_begin_ic.inner.preheader

for_begin_ic.inner.preheader:                     ; preds = %for_begin_kh.preheader, %for_end_ic.inner
  %indvars.iv149 = phi i64 [ 0, %for_begin_kh.preheader ], [ %indvars.iv.next150, %for_end_ic.inner ]
  %.lcssa2968 = phi <16 x float> [ %.lcssa29.lcssa70109, %for_begin_kh.preheader ], [ %175, %for_end_ic.inner ]
  %.lcssa23167 = phi <16 x float> [ %.lcssa231.lcssa72108, %for_begin_kh.preheader ], [ %176, %for_end_ic.inner ]
  %.lcssa43266 = phi <16 x float> [ %.lcssa432.lcssa74107, %for_begin_kh.preheader ], [ %177, %for_end_ic.inner ]
  %.lcssa63465 = phi <16 x float> [ %.lcssa634.lcssa75106, %for_begin_kh.preheader ], [ %178, %for_end_ic.inner ]
  %.lcssa83664 = phi <16 x float> [ %.lcssa836.lcssa77105, %for_begin_kh.preheader ], [ %179, %for_end_ic.inner ]
  %.lcssa103863 = phi <16 x float> [ %.lcssa1038.lcssa79104, %for_begin_kh.preheader ], [ %180, %for_end_ic.inner ]
  %.lcssa124062 = phi <16 x float> [ %.lcssa1240.lcssa81103, %for_begin_kh.preheader ], [ %181, %for_end_ic.inner ]
  %.lcssa144261 = phi <16 x float> [ %.lcssa1442.lcssa83102, %for_begin_kh.preheader ], [ %182, %for_end_ic.inner ]
  %.lcssa164460 = phi <16 x float> [ %.lcssa1644.lcssa85101, %for_begin_kh.preheader ], [ %183, %for_end_ic.inner ]
  %.lcssa184659 = phi <16 x float> [ %.lcssa1846.lcssa87100, %for_begin_kh.preheader ], [ %184, %for_end_ic.inner ]
  %.lcssa204858 = phi <16 x float> [ %.lcssa2048.lcssa8999, %for_begin_kh.preheader ], [ %185, %for_end_ic.inner ]
  %.lcssa225057 = phi <16 x float> [ %.lcssa2250.lcssa9198, %for_begin_kh.preheader ], [ %186, %for_end_ic.inner ]
  %.lcssa245256 = phi <16 x float> [ %.lcssa2452.lcssa9397, %for_begin_kh.preheader ], [ %187, %for_end_ic.inner ]
  %.lcssa265455 = phi <16 x float> [ %.lcssa2654.lcssa9596, %for_begin_kh.preheader ], [ %193, %for_end_ic.inner ]
  %indvars153 = trunc i64 %indvars.iv149 to i32
  %reass.add = add nsw i32 %31, %indvars153
  %reass.mul = shl i32 %reass.add, 11
  %44 = sext i32 %reass.mul to i64
  %45 = add nsw i64 %41, %44
  %46 = mul nuw nsw i64 %indvars.iv149, 6144
  %47 = add nsw i64 %43, %46
  br label %for_body_ic.inner

for_end_kh:                                       ; preds = %for_end_ic.inner
  br i1 %40, label %for_begin_kh.preheader, label %for_begin_ax3.inner.preheader, !prof !18

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %48 = phi <16 x float> [ %.lcssa2968, %for_begin_ic.inner.preheader ], [ %175, %for_body_ic.inner ]
  %49 = phi <16 x float> [ %.lcssa23167, %for_begin_ic.inner.preheader ], [ %176, %for_body_ic.inner ]
  %50 = phi <16 x float> [ %.lcssa43266, %for_begin_ic.inner.preheader ], [ %177, %for_body_ic.inner ]
  %51 = phi <16 x float> [ %.lcssa63465, %for_begin_ic.inner.preheader ], [ %178, %for_body_ic.inner ]
  %52 = phi <16 x float> [ %.lcssa83664, %for_begin_ic.inner.preheader ], [ %179, %for_body_ic.inner ]
  %53 = phi <16 x float> [ %.lcssa103863, %for_begin_ic.inner.preheader ], [ %180, %for_body_ic.inner ]
  %54 = phi <16 x float> [ %.lcssa124062, %for_begin_ic.inner.preheader ], [ %181, %for_body_ic.inner ]
  %55 = phi <16 x float> [ %.lcssa144261, %for_begin_ic.inner.preheader ], [ %182, %for_body_ic.inner ]
  %56 = phi <16 x float> [ %.lcssa164460, %for_begin_ic.inner.preheader ], [ %183, %for_body_ic.inner ]
  %57 = phi <16 x float> [ %.lcssa184659, %for_begin_ic.inner.preheader ], [ %184, %for_body_ic.inner ]
  %58 = phi <16 x float> [ %.lcssa204858, %for_begin_ic.inner.preheader ], [ %185, %for_body_ic.inner ]
  %59 = phi <16 x float> [ %.lcssa225057, %for_begin_ic.inner.preheader ], [ %186, %for_body_ic.inner ]
  %60 = phi <16 x float> [ %.lcssa245256, %for_begin_ic.inner.preheader ], [ %187, %for_body_ic.inner ]
  %61 = phi <16 x float> [ %.lcssa265455, %for_begin_ic.inner.preheader ], [ %193, %for_body_ic.inner ]
  %62 = add nsw i64 %45, %indvars.iv
  %63 = shl nuw nsw i64 %indvars.iv, 4
  %64 = add nsw i64 %47, %63
  %65 = add nsw i64 %62, 896
  %66 = add nsw i64 %62, 768
  %67 = add nsw i64 %62, 640
  %68 = add nsw i64 %62, 512
  %69 = add nsw i64 %62, 384
  %70 = add nsw i64 %62, 256
  %71 = add nsw i64 %62, 1792
  %72 = add nsw i64 %62, 1664
  %73 = add nsw i64 %62, 1536
  %74 = add nsw i64 %62, 1408
  %75 = add nsw i64 %62, 1280
  %76 = add nsw i64 %62, 128
  %77 = add nsw i64 %62, 1152
  %78 = add nsw i64 %62, 1024
  %79 = add nsw i64 %64, 4096
  %80 = add nsw i64 %64, 2048
  %81 = getelementptr inbounds float, ptr %data_pad, i64 %62
  %82 = load float, ptr %81, align 4, !tbaa !7331
  %83 = insertelement <16 x float> undef, float %82, i64 0
  %84 = shufflevector <16 x float> %83, <16 x float> undef, <16 x i32> zeroinitializer
  %85 = getelementptr inbounds float, ptr %p1, i64 %64
  %86 = load <16 x float>, ptr %85, align 64, !tbaa !7380
  %87 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %84, <16 x float> %86, <16 x float> %48)
  %88 = getelementptr inbounds float, ptr %data_pad, i64 %76
  %89 = load float, ptr %88, align 4, !tbaa !7331
  %90 = insertelement <16 x float> undef, float %89, i64 0
  %91 = shufflevector <16 x float> %90, <16 x float> undef, <16 x i32> zeroinitializer
  %92 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %91, <16 x float> %86, <16 x float> %49)
  %93 = getelementptr inbounds float, ptr %data_pad, i64 %70
  %94 = load float, ptr %93, align 4, !tbaa !7331
  %95 = insertelement <16 x float> undef, float %94, i64 0
  %96 = shufflevector <16 x float> %95, <16 x float> undef, <16 x i32> zeroinitializer
  %97 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %96, <16 x float> %86, <16 x float> %50)
  %98 = getelementptr inbounds float, ptr %data_pad, i64 %69
  %99 = load float, ptr %98, align 4, !tbaa !7331
  %100 = insertelement <16 x float> undef, float %99, i64 0
  %101 = shufflevector <16 x float> %100, <16 x float> undef, <16 x i32> zeroinitializer
  %102 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %101, <16 x float> %86, <16 x float> %51)
  %103 = getelementptr inbounds float, ptr %data_pad, i64 %68
  %104 = load float, ptr %103, align 4, !tbaa !7331
  %105 = insertelement <16 x float> undef, float %104, i64 0
  %106 = shufflevector <16 x float> %105, <16 x float> undef, <16 x i32> zeroinitializer
  %107 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %106, <16 x float> %86, <16 x float> %52)
  %108 = getelementptr inbounds float, ptr %data_pad, i64 %67
  %109 = load float, ptr %108, align 4, !tbaa !7331
  %110 = insertelement <16 x float> undef, float %109, i64 0
  %111 = shufflevector <16 x float> %110, <16 x float> undef, <16 x i32> zeroinitializer
  %112 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %111, <16 x float> %86, <16 x float> %53)
  %113 = getelementptr inbounds float, ptr %data_pad, i64 %66
  %114 = load float, ptr %113, align 4, !tbaa !7331
  %115 = insertelement <16 x float> undef, float %114, i64 0
  %116 = shufflevector <16 x float> %115, <16 x float> undef, <16 x i32> zeroinitializer
  %117 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %116, <16 x float> %86, <16 x float> %54)
  %118 = getelementptr inbounds float, ptr %data_pad, i64 %65
  %119 = load float, ptr %118, align 4, !tbaa !7331
  %120 = insertelement <16 x float> undef, float %119, i64 0
  %121 = shufflevector <16 x float> %120, <16 x float> undef, <16 x i32> zeroinitializer
  %122 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %121, <16 x float> %86, <16 x float> %55)
  %123 = getelementptr inbounds float, ptr %data_pad, i64 %78
  %124 = load float, ptr %123, align 4, !tbaa !7331
  %125 = insertelement <16 x float> undef, float %124, i64 0
  %126 = shufflevector <16 x float> %125, <16 x float> undef, <16 x i32> zeroinitializer
  %127 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %126, <16 x float> %86, <16 x float> %56)
  %128 = getelementptr inbounds float, ptr %data_pad, i64 %77
  %129 = load float, ptr %128, align 4, !tbaa !7331
  %130 = insertelement <16 x float> undef, float %129, i64 0
  %131 = shufflevector <16 x float> %130, <16 x float> undef, <16 x i32> zeroinitializer
  %132 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %131, <16 x float> %86, <16 x float> %57)
  %133 = getelementptr inbounds float, ptr %data_pad, i64 %75
  %134 = load float, ptr %133, align 4, !tbaa !7331
  %135 = insertelement <16 x float> undef, float %134, i64 0
  %136 = shufflevector <16 x float> %135, <16 x float> undef, <16 x i32> zeroinitializer
  %137 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %136, <16 x float> %86, <16 x float> %58)
  %138 = getelementptr inbounds float, ptr %data_pad, i64 %74
  %139 = load float, ptr %138, align 4, !tbaa !7331
  %140 = insertelement <16 x float> undef, float %139, i64 0
  %141 = shufflevector <16 x float> %140, <16 x float> undef, <16 x i32> zeroinitializer
  %142 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %141, <16 x float> %86, <16 x float> %59)
  %143 = getelementptr inbounds float, ptr %data_pad, i64 %73
  %144 = load float, ptr %143, align 4, !tbaa !7331
  %145 = insertelement <16 x float> undef, float %144, i64 0
  %146 = shufflevector <16 x float> %145, <16 x float> undef, <16 x i32> zeroinitializer
  %147 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %146, <16 x float> %86, <16 x float> %60)
  %148 = getelementptr inbounds float, ptr %data_pad, i64 %72
  %149 = load float, ptr %148, align 4, !tbaa !7331
  %150 = insertelement <16 x float> undef, float %149, i64 0
  %151 = shufflevector <16 x float> %150, <16 x float> undef, <16 x i32> zeroinitializer
  %152 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %151, <16 x float> %86, <16 x float> %61)
  %153 = getelementptr inbounds float, ptr %p1, i64 %80
  %154 = load <16 x float>, ptr %153, align 64, !tbaa !7380
  %155 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %91, <16 x float> %154, <16 x float> %87)
  %156 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %96, <16 x float> %154, <16 x float> %92)
  %157 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %101, <16 x float> %154, <16 x float> %97)
  %158 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %106, <16 x float> %154, <16 x float> %102)
  %159 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %111, <16 x float> %154, <16 x float> %107)
  %160 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %116, <16 x float> %154, <16 x float> %112)
  %161 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %121, <16 x float> %154, <16 x float> %117)
  %162 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %126, <16 x float> %154, <16 x float> %122)
  %163 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %131, <16 x float> %154, <16 x float> %127)
  %164 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %136, <16 x float> %154, <16 x float> %132)
  %165 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %141, <16 x float> %154, <16 x float> %137)
  %166 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %146, <16 x float> %154, <16 x float> %142)
  %167 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %151, <16 x float> %154, <16 x float> %147)
  %168 = getelementptr inbounds float, ptr %data_pad, i64 %71
  %169 = load float, ptr %168, align 4, !tbaa !7331
  %170 = insertelement <16 x float> undef, float %169, i64 0
  %171 = shufflevector <16 x float> %170, <16 x float> undef, <16 x i32> zeroinitializer
  %172 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %171, <16 x float> %154, <16 x float> %152)
  %173 = getelementptr inbounds float, ptr %p1, i64 %79
  %174 = load <16 x float>, ptr %173, align 64, !tbaa !7380
  %175 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %96, <16 x float> %174, <16 x float> %155)
  %176 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %101, <16 x float> %174, <16 x float> %156)
  %177 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %106, <16 x float> %174, <16 x float> %157)
  %178 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %111, <16 x float> %174, <16 x float> %158)
  %179 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %116, <16 x float> %174, <16 x float> %159)
  %180 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %121, <16 x float> %174, <16 x float> %160)
  %181 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %126, <16 x float> %174, <16 x float> %161)
  %182 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %131, <16 x float> %174, <16 x float> %162)
  %183 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %136, <16 x float> %174, <16 x float> %163)
  %184 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %141, <16 x float> %174, <16 x float> %164)
  %185 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %146, <16 x float> %174, <16 x float> %165)
  %186 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %151, <16 x float> %174, <16 x float> %166)
  %187 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %171, <16 x float> %174, <16 x float> %167)
  %188 = add nsw i64 %62, 1920
  %189 = getelementptr inbounds float, ptr %data_pad, i64 %188
  %190 = load float, ptr %189, align 4, !tbaa !7331
  %191 = insertelement <16 x float> undef, float %190, i64 0
  %192 = shufflevector <16 x float> %191, <16 x float> undef, <16 x i32> zeroinitializer
  %193 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %192, <16 x float> %174, <16 x float> %172)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 128
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next150 = add nuw nsw i64 %indvars.iv149, 1
  %exitcond154.not = icmp eq i64 %indvars.iv.next150, 3
  br i1 %exitcond154.not, label %for_end_kh, label %for_begin_ic.inner.preheader, !prof !52

for_body_ax3.inner:                               ; preds = %for_begin_ax3.inner.preheader, %for_body_ax3.inner
  %indvars.iv158 = phi i64 [ 0, %for_begin_ax3.inner.preheader ], [ %indvars.iv.next159, %for_body_ax3.inner ]
  %194 = getelementptr inbounds <16 x float>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv158
  %195 = load <16 x float>, ptr %194, align 64, !tbaa !7382
  %196 = fadd <16 x float> %38, %195
  %197 = fcmp ogt <16 x float> %196, zeroinitializer
  %198 = select <16 x i1> %197, <16 x float> %196, <16 x float> zeroinitializer
  %199 = shl nuw nsw i64 %indvars.iv158, 4
  %200 = add nsw i64 %199, %39
  %201 = getelementptr inbounds float, ptr %T_relu, i64 %200
  store <16 x float> %198, ptr %201, align 64, !tbaa !7383
  %indvars.iv.next159 = add nuw nsw i64 %indvars.iv158, 1
  %exitcond161.not = icmp eq i64 %indvars.iv.next159, 14
  br i1 %exitcond161.not, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !52

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %indvars.iv.next163 = add nsw i64 %indvars.iv162, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next163 to i32
  %exitcond164.not = icmp eq i32 %29, %lftr.wideiv
  br i1 %exitcond164.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_body_ax0.ax1.fused.ax2.fused, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_12_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3) unnamed_addr #2 {
entry:
  %4 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.33, align 8
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.33, ptr %4, i64 0, i32 1
  store ptr %1, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.33, ptr %4, i64 0, i32 2
  store ptr %2, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.33, ptr %4, i64 0, i32 3
  store ptr %3, ptr %7, align 8
  %8 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %9 = call i32 %8(ptr nonnull @__tvm_parallel_lambda.1269, ptr nonnull %4, i32 0)
  ret i32 %9
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1269(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.33, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.33, ptr %1, i64 0, i32 2
  %T_relu = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.33, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 895
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 896)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 896)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph:     ; preds = %parallel_closure_entry
  %14 = tail call i32 @llvm.smin.i32(i32 %11, i32 896)
  %smin = sext i32 %14 to i64
  %15 = add i32 %10, %14
  %16 = sub i32 %15, %12
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, %for_begin_ax2.inner.preheader
  %indvars.iv186 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph ], [ %indvars.iv.next187, %for_begin_ax2.inner.preheader ]
  %17 = trunc i64 %indvars.iv186 to i32
  %18 = srem i32 %17, 7
  %19 = mul nsw i32 %18, 112
  %20 = sdiv i32 %17, 7
  %21 = shl nsw i32 %20, 12
  %22 = sext i32 %19 to i64
  %23 = sext i32 %21 to i64
  br label %for_begin_ic.inner.preheader

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_begin_ax2.inner.preheader, %parallel_closure_entry
  ret i32 0

for_begin_ax2.inner.preheader:                    ; preds = %for_end_ic.inner
  %24 = shl nsw i32 %20, 2
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds float, ptr %p2, i64 %25
  %27 = load <4 x float>, ptr %26, align 16, !tbaa !7385
  %28 = mul nsw i64 %indvars.iv186, 112
  %29 = fadd <4 x float> %27, %209
  %30 = fcmp ogt <4 x float> %29, zeroinitializer
  %31 = select <4 x i1> %30, <4 x float> %29, <4 x float> zeroinitializer
  %32 = getelementptr inbounds float, ptr %T_relu, i64 %28
  store <4 x float> %31, ptr %32, align 16, !tbaa !7387
  %33 = fadd <4 x float> %27, %215
  %34 = fcmp ogt <4 x float> %33, zeroinitializer
  %35 = select <4 x i1> %34, <4 x float> %33, <4 x float> zeroinitializer
  %36 = or i64 %28, 4
  %37 = getelementptr inbounds float, ptr %T_relu, i64 %36
  store <4 x float> %35, ptr %37, align 16, !tbaa !7387
  %38 = fadd <4 x float> %27, %221
  %39 = fcmp ogt <4 x float> %38, zeroinitializer
  %40 = select <4 x i1> %39, <4 x float> %38, <4 x float> zeroinitializer
  %41 = or i64 %28, 8
  %42 = getelementptr inbounds float, ptr %T_relu, i64 %41
  store <4 x float> %40, ptr %42, align 16, !tbaa !7387
  %43 = fadd <4 x float> %27, %227
  %44 = fcmp ogt <4 x float> %43, zeroinitializer
  %45 = select <4 x i1> %44, <4 x float> %43, <4 x float> zeroinitializer
  %46 = or i64 %28, 12
  %47 = getelementptr inbounds float, ptr %T_relu, i64 %46
  store <4 x float> %45, ptr %47, align 16, !tbaa !7387
  %48 = fadd <4 x float> %27, %233
  %49 = fcmp ogt <4 x float> %48, zeroinitializer
  %50 = select <4 x i1> %49, <4 x float> %48, <4 x float> zeroinitializer
  %51 = add nsw i64 %28, 16
  %52 = getelementptr inbounds float, ptr %T_relu, i64 %51
  store <4 x float> %50, ptr %52, align 16, !tbaa !7387
  %53 = fadd <4 x float> %27, %239
  %54 = fcmp ogt <4 x float> %53, zeroinitializer
  %55 = select <4 x i1> %54, <4 x float> %53, <4 x float> zeroinitializer
  %56 = add nsw i64 %28, 20
  %57 = getelementptr inbounds float, ptr %T_relu, i64 %56
  store <4 x float> %55, ptr %57, align 16, !tbaa !7387
  %58 = fadd <4 x float> %27, %245
  %59 = fcmp ogt <4 x float> %58, zeroinitializer
  %60 = select <4 x i1> %59, <4 x float> %58, <4 x float> zeroinitializer
  %61 = add nsw i64 %28, 24
  %62 = getelementptr inbounds float, ptr %T_relu, i64 %61
  store <4 x float> %60, ptr %62, align 16, !tbaa !7387
  %63 = fadd <4 x float> %27, %251
  %64 = fcmp ogt <4 x float> %63, zeroinitializer
  %65 = select <4 x i1> %64, <4 x float> %63, <4 x float> zeroinitializer
  %66 = add nsw i64 %28, 28
  %67 = getelementptr inbounds float, ptr %T_relu, i64 %66
  store <4 x float> %65, ptr %67, align 16, !tbaa !7387
  %68 = fadd <4 x float> %27, %257
  %69 = fcmp ogt <4 x float> %68, zeroinitializer
  %70 = select <4 x i1> %69, <4 x float> %68, <4 x float> zeroinitializer
  %71 = add nsw i64 %28, 32
  %72 = getelementptr inbounds float, ptr %T_relu, i64 %71
  store <4 x float> %70, ptr %72, align 16, !tbaa !7387
  %73 = fadd <4 x float> %27, %263
  %74 = fcmp ogt <4 x float> %73, zeroinitializer
  %75 = select <4 x i1> %74, <4 x float> %73, <4 x float> zeroinitializer
  %76 = add nsw i64 %28, 36
  %77 = getelementptr inbounds float, ptr %T_relu, i64 %76
  store <4 x float> %75, ptr %77, align 16, !tbaa !7387
  %78 = fadd <4 x float> %27, %269
  %79 = fcmp ogt <4 x float> %78, zeroinitializer
  %80 = select <4 x i1> %79, <4 x float> %78, <4 x float> zeroinitializer
  %81 = add nsw i64 %28, 40
  %82 = getelementptr inbounds float, ptr %T_relu, i64 %81
  store <4 x float> %80, ptr %82, align 16, !tbaa !7387
  %83 = fadd <4 x float> %27, %275
  %84 = fcmp ogt <4 x float> %83, zeroinitializer
  %85 = select <4 x i1> %84, <4 x float> %83, <4 x float> zeroinitializer
  %86 = add nsw i64 %28, 44
  %87 = getelementptr inbounds float, ptr %T_relu, i64 %86
  store <4 x float> %85, ptr %87, align 16, !tbaa !7387
  %88 = fadd <4 x float> %27, %281
  %89 = fcmp ogt <4 x float> %88, zeroinitializer
  %90 = select <4 x i1> %89, <4 x float> %88, <4 x float> zeroinitializer
  %91 = add nsw i64 %28, 48
  %92 = getelementptr inbounds float, ptr %T_relu, i64 %91
  store <4 x float> %90, ptr %92, align 16, !tbaa !7387
  %93 = fadd <4 x float> %27, %287
  %94 = fcmp ogt <4 x float> %93, zeroinitializer
  %95 = select <4 x i1> %94, <4 x float> %93, <4 x float> zeroinitializer
  %96 = add nsw i64 %28, 52
  %97 = getelementptr inbounds float, ptr %T_relu, i64 %96
  store <4 x float> %95, ptr %97, align 16, !tbaa !7387
  %98 = add nsw i64 %28, 56
  %99 = fadd <4 x float> %27, %293
  %100 = fcmp ogt <4 x float> %99, zeroinitializer
  %101 = select <4 x i1> %100, <4 x float> %99, <4 x float> zeroinitializer
  %102 = getelementptr inbounds float, ptr %T_relu, i64 %98
  store <4 x float> %101, ptr %102, align 16, !tbaa !7387
  %103 = fadd <4 x float> %27, %299
  %104 = fcmp ogt <4 x float> %103, zeroinitializer
  %105 = select <4 x i1> %104, <4 x float> %103, <4 x float> zeroinitializer
  %106 = add nsw i64 %28, 60
  %107 = getelementptr inbounds float, ptr %T_relu, i64 %106
  store <4 x float> %105, ptr %107, align 16, !tbaa !7387
  %108 = fadd <4 x float> %27, %305
  %109 = fcmp ogt <4 x float> %108, zeroinitializer
  %110 = select <4 x i1> %109, <4 x float> %108, <4 x float> zeroinitializer
  %111 = add nsw i64 %28, 64
  %112 = getelementptr inbounds float, ptr %T_relu, i64 %111
  store <4 x float> %110, ptr %112, align 16, !tbaa !7387
  %113 = fadd <4 x float> %27, %311
  %114 = fcmp ogt <4 x float> %113, zeroinitializer
  %115 = select <4 x i1> %114, <4 x float> %113, <4 x float> zeroinitializer
  %116 = add nsw i64 %28, 68
  %117 = getelementptr inbounds float, ptr %T_relu, i64 %116
  store <4 x float> %115, ptr %117, align 16, !tbaa !7387
  %118 = fadd <4 x float> %27, %317
  %119 = fcmp ogt <4 x float> %118, zeroinitializer
  %120 = select <4 x i1> %119, <4 x float> %118, <4 x float> zeroinitializer
  %121 = add nsw i64 %28, 72
  %122 = getelementptr inbounds float, ptr %T_relu, i64 %121
  store <4 x float> %120, ptr %122, align 16, !tbaa !7387
  %123 = fadd <4 x float> %27, %323
  %124 = fcmp ogt <4 x float> %123, zeroinitializer
  %125 = select <4 x i1> %124, <4 x float> %123, <4 x float> zeroinitializer
  %126 = add nsw i64 %28, 76
  %127 = getelementptr inbounds float, ptr %T_relu, i64 %126
  store <4 x float> %125, ptr %127, align 16, !tbaa !7387
  %128 = fadd <4 x float> %27, %329
  %129 = fcmp ogt <4 x float> %128, zeroinitializer
  %130 = select <4 x i1> %129, <4 x float> %128, <4 x float> zeroinitializer
  %131 = add nsw i64 %28, 80
  %132 = getelementptr inbounds float, ptr %T_relu, i64 %131
  store <4 x float> %130, ptr %132, align 16, !tbaa !7387
  %133 = fadd <4 x float> %27, %335
  %134 = fcmp ogt <4 x float> %133, zeroinitializer
  %135 = select <4 x i1> %134, <4 x float> %133, <4 x float> zeroinitializer
  %136 = add nsw i64 %28, 84
  %137 = getelementptr inbounds float, ptr %T_relu, i64 %136
  store <4 x float> %135, ptr %137, align 16, !tbaa !7387
  %138 = fadd <4 x float> %27, %341
  %139 = fcmp ogt <4 x float> %138, zeroinitializer
  %140 = select <4 x i1> %139, <4 x float> %138, <4 x float> zeroinitializer
  %141 = add nsw i64 %28, 88
  %142 = getelementptr inbounds float, ptr %T_relu, i64 %141
  store <4 x float> %140, ptr %142, align 16, !tbaa !7387
  %143 = fadd <4 x float> %27, %347
  %144 = fcmp ogt <4 x float> %143, zeroinitializer
  %145 = select <4 x i1> %144, <4 x float> %143, <4 x float> zeroinitializer
  %146 = add nsw i64 %28, 92
  %147 = getelementptr inbounds float, ptr %T_relu, i64 %146
  store <4 x float> %145, ptr %147, align 16, !tbaa !7387
  %148 = fadd <4 x float> %27, %353
  %149 = fcmp ogt <4 x float> %148, zeroinitializer
  %150 = select <4 x i1> %149, <4 x float> %148, <4 x float> zeroinitializer
  %151 = add nsw i64 %28, 96
  %152 = getelementptr inbounds float, ptr %T_relu, i64 %151
  store <4 x float> %150, ptr %152, align 16, !tbaa !7387
  %153 = fadd <4 x float> %27, %359
  %154 = fcmp ogt <4 x float> %153, zeroinitializer
  %155 = select <4 x i1> %154, <4 x float> %153, <4 x float> zeroinitializer
  %156 = add nsw i64 %28, 100
  %157 = getelementptr inbounds float, ptr %T_relu, i64 %156
  store <4 x float> %155, ptr %157, align 16, !tbaa !7387
  %158 = fadd <4 x float> %27, %365
  %159 = fcmp ogt <4 x float> %158, zeroinitializer
  %160 = select <4 x i1> %159, <4 x float> %158, <4 x float> zeroinitializer
  %161 = add nsw i64 %28, 104
  %162 = getelementptr inbounds float, ptr %T_relu, i64 %161
  store <4 x float> %160, ptr %162, align 16, !tbaa !7387
  %163 = fadd <4 x float> %27, %371
  %164 = fcmp ogt <4 x float> %163, zeroinitializer
  %165 = select <4 x i1> %164, <4 x float> %163, <4 x float> zeroinitializer
  %166 = add nsw i64 %28, 108
  %167 = getelementptr inbounds float, ptr %T_relu, i64 %166
  store <4 x float> %165, ptr %167, align 16, !tbaa !7387
  %indvars.iv.next187 = add nsw i64 %indvars.iv186, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next187 to i32
  %exitcond188.not = icmp eq i32 %16, %lftr.wideiv
  br i1 %exitcond188.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !52

for_begin_ic.inner.preheader:                     ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ic.inner
  %indvars.iv175 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %indvars.iv.next176, %for_end_ic.inner ]
  %.lcssa57138 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %209, %for_end_ic.inner ]
  %.lcssa259137 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %215, %for_end_ic.inner ]
  %.lcssa460136 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %221, %for_end_ic.inner ]
  %.lcssa662135 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %227, %for_end_ic.inner ]
  %.lcssa864134 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %233, %for_end_ic.inner ]
  %.lcssa1066133 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %239, %for_end_ic.inner ]
  %.lcssa1268132 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %245, %for_end_ic.inner ]
  %.lcssa1470131 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %251, %for_end_ic.inner ]
  %.lcssa1672130 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %257, %for_end_ic.inner ]
  %.lcssa1874129 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %263, %for_end_ic.inner ]
  %.lcssa2076128 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %269, %for_end_ic.inner ]
  %.lcssa2278127 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %275, %for_end_ic.inner ]
  %.lcssa2480126 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %281, %for_end_ic.inner ]
  %.lcssa2682125 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %287, %for_end_ic.inner ]
  %.lcssa2884124 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %293, %for_end_ic.inner ]
  %.lcssa3086123 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %299, %for_end_ic.inner ]
  %.lcssa3288122 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %305, %for_end_ic.inner ]
  %.lcssa3490121 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %311, %for_end_ic.inner ]
  %.lcssa3692120 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %317, %for_end_ic.inner ]
  %.lcssa3894119 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %323, %for_end_ic.inner ]
  %.lcssa4096118 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %329, %for_end_ic.inner ]
  %.lcssa4298117 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %335, %for_end_ic.inner ]
  %.lcssa44100116 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %341, %for_end_ic.inner ]
  %.lcssa46102115 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %347, %for_end_ic.inner ]
  %.lcssa48104114 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %353, %for_end_ic.inner ]
  %.lcssa50106113 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %359, %for_end_ic.inner ]
  %.lcssa52108112 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %365, %for_end_ic.inner ]
  %.lcssa54110111 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %371, %for_end_ic.inner ]
  %168 = mul nuw nsw i64 %indvars.iv175, 784
  %169 = add nsw i64 %168, %22
  %170 = shl nsw i64 %indvars.iv175, 4
  %171 = add nuw nsw i64 %170, %23
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %172 = phi <4 x float> [ %.lcssa57138, %for_begin_ic.inner.preheader ], [ %209, %for_body_ic.inner ]
  %173 = phi <4 x float> [ %.lcssa259137, %for_begin_ic.inner.preheader ], [ %215, %for_body_ic.inner ]
  %174 = phi <4 x float> [ %.lcssa460136, %for_begin_ic.inner.preheader ], [ %221, %for_body_ic.inner ]
  %175 = phi <4 x float> [ %.lcssa662135, %for_begin_ic.inner.preheader ], [ %227, %for_body_ic.inner ]
  %176 = phi <4 x float> [ %.lcssa864134, %for_begin_ic.inner.preheader ], [ %233, %for_body_ic.inner ]
  %177 = phi <4 x float> [ %.lcssa1066133, %for_begin_ic.inner.preheader ], [ %239, %for_body_ic.inner ]
  %178 = phi <4 x float> [ %.lcssa1268132, %for_begin_ic.inner.preheader ], [ %245, %for_body_ic.inner ]
  %179 = phi <4 x float> [ %.lcssa1470131, %for_begin_ic.inner.preheader ], [ %251, %for_body_ic.inner ]
  %180 = phi <4 x float> [ %.lcssa1672130, %for_begin_ic.inner.preheader ], [ %257, %for_body_ic.inner ]
  %181 = phi <4 x float> [ %.lcssa1874129, %for_begin_ic.inner.preheader ], [ %263, %for_body_ic.inner ]
  %182 = phi <4 x float> [ %.lcssa2076128, %for_begin_ic.inner.preheader ], [ %269, %for_body_ic.inner ]
  %183 = phi <4 x float> [ %.lcssa2278127, %for_begin_ic.inner.preheader ], [ %275, %for_body_ic.inner ]
  %184 = phi <4 x float> [ %.lcssa2480126, %for_begin_ic.inner.preheader ], [ %281, %for_body_ic.inner ]
  %185 = phi <4 x float> [ %.lcssa2682125, %for_begin_ic.inner.preheader ], [ %287, %for_body_ic.inner ]
  %186 = phi <4 x float> [ %.lcssa2884124, %for_begin_ic.inner.preheader ], [ %293, %for_body_ic.inner ]
  %187 = phi <4 x float> [ %.lcssa3086123, %for_begin_ic.inner.preheader ], [ %299, %for_body_ic.inner ]
  %188 = phi <4 x float> [ %.lcssa3288122, %for_begin_ic.inner.preheader ], [ %305, %for_body_ic.inner ]
  %189 = phi <4 x float> [ %.lcssa3490121, %for_begin_ic.inner.preheader ], [ %311, %for_body_ic.inner ]
  %190 = phi <4 x float> [ %.lcssa3692120, %for_begin_ic.inner.preheader ], [ %317, %for_body_ic.inner ]
  %191 = phi <4 x float> [ %.lcssa3894119, %for_begin_ic.inner.preheader ], [ %323, %for_body_ic.inner ]
  %192 = phi <4 x float> [ %.lcssa4096118, %for_begin_ic.inner.preheader ], [ %329, %for_body_ic.inner ]
  %193 = phi <4 x float> [ %.lcssa4298117, %for_begin_ic.inner.preheader ], [ %335, %for_body_ic.inner ]
  %194 = phi <4 x float> [ %.lcssa44100116, %for_begin_ic.inner.preheader ], [ %341, %for_body_ic.inner ]
  %195 = phi <4 x float> [ %.lcssa46102115, %for_begin_ic.inner.preheader ], [ %347, %for_body_ic.inner ]
  %196 = phi <4 x float> [ %.lcssa48104114, %for_begin_ic.inner.preheader ], [ %353, %for_body_ic.inner ]
  %197 = phi <4 x float> [ %.lcssa50106113, %for_begin_ic.inner.preheader ], [ %359, %for_body_ic.inner ]
  %198 = phi <4 x float> [ %.lcssa52108112, %for_begin_ic.inner.preheader ], [ %365, %for_body_ic.inner ]
  %199 = phi <4 x float> [ %.lcssa54110111, %for_begin_ic.inner.preheader ], [ %371, %for_body_ic.inner ]
  %200 = add nsw i64 %169, %indvars.iv
  %201 = shl nuw nsw i64 %indvars.iv, 2
  %202 = add nuw nsw i64 %171, %201
  %203 = getelementptr inbounds float, ptr %p0, i64 %200
  %204 = load float, ptr %203, align 4, !tbaa !7389
  %205 = insertelement <4 x float> undef, float %204, i64 0
  %206 = shufflevector <4 x float> %205, <4 x float> undef, <4 x i32> zeroinitializer
  %207 = getelementptr inbounds float, ptr %p1, i64 %202
  %208 = load <4 x float>, ptr %207, align 16, !tbaa !7391
  %209 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %206, <4 x float> %208, <4 x float> %172)
  %210 = add nsw i64 %200, 4
  %211 = getelementptr inbounds float, ptr %p0, i64 %210
  %212 = load float, ptr %211, align 4, !tbaa !7389
  %213 = insertelement <4 x float> undef, float %212, i64 0
  %214 = shufflevector <4 x float> %213, <4 x float> undef, <4 x i32> zeroinitializer
  %215 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %214, <4 x float> %208, <4 x float> %173)
  %216 = add nsw i64 %200, 8
  %217 = getelementptr inbounds float, ptr %p0, i64 %216
  %218 = load float, ptr %217, align 4, !tbaa !7389
  %219 = insertelement <4 x float> undef, float %218, i64 0
  %220 = shufflevector <4 x float> %219, <4 x float> undef, <4 x i32> zeroinitializer
  %221 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %220, <4 x float> %208, <4 x float> %174)
  %222 = add nsw i64 %200, 12
  %223 = getelementptr inbounds float, ptr %p0, i64 %222
  %224 = load float, ptr %223, align 4, !tbaa !7389
  %225 = insertelement <4 x float> undef, float %224, i64 0
  %226 = shufflevector <4 x float> %225, <4 x float> undef, <4 x i32> zeroinitializer
  %227 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %226, <4 x float> %208, <4 x float> %175)
  %228 = add nsw i64 %200, 16
  %229 = getelementptr inbounds float, ptr %p0, i64 %228
  %230 = load float, ptr %229, align 4, !tbaa !7389
  %231 = insertelement <4 x float> undef, float %230, i64 0
  %232 = shufflevector <4 x float> %231, <4 x float> undef, <4 x i32> zeroinitializer
  %233 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %232, <4 x float> %208, <4 x float> %176)
  %234 = add nsw i64 %200, 20
  %235 = getelementptr inbounds float, ptr %p0, i64 %234
  %236 = load float, ptr %235, align 4, !tbaa !7389
  %237 = insertelement <4 x float> undef, float %236, i64 0
  %238 = shufflevector <4 x float> %237, <4 x float> undef, <4 x i32> zeroinitializer
  %239 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %238, <4 x float> %208, <4 x float> %177)
  %240 = add nsw i64 %200, 24
  %241 = getelementptr inbounds float, ptr %p0, i64 %240
  %242 = load float, ptr %241, align 4, !tbaa !7389
  %243 = insertelement <4 x float> undef, float %242, i64 0
  %244 = shufflevector <4 x float> %243, <4 x float> undef, <4 x i32> zeroinitializer
  %245 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %244, <4 x float> %208, <4 x float> %178)
  %246 = add nsw i64 %200, 28
  %247 = getelementptr inbounds float, ptr %p0, i64 %246
  %248 = load float, ptr %247, align 4, !tbaa !7389
  %249 = insertelement <4 x float> undef, float %248, i64 0
  %250 = shufflevector <4 x float> %249, <4 x float> undef, <4 x i32> zeroinitializer
  %251 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %250, <4 x float> %208, <4 x float> %179)
  %252 = add nsw i64 %200, 32
  %253 = getelementptr inbounds float, ptr %p0, i64 %252
  %254 = load float, ptr %253, align 4, !tbaa !7389
  %255 = insertelement <4 x float> undef, float %254, i64 0
  %256 = shufflevector <4 x float> %255, <4 x float> undef, <4 x i32> zeroinitializer
  %257 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %256, <4 x float> %208, <4 x float> %180)
  %258 = add nsw i64 %200, 36
  %259 = getelementptr inbounds float, ptr %p0, i64 %258
  %260 = load float, ptr %259, align 4, !tbaa !7389
  %261 = insertelement <4 x float> undef, float %260, i64 0
  %262 = shufflevector <4 x float> %261, <4 x float> undef, <4 x i32> zeroinitializer
  %263 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %262, <4 x float> %208, <4 x float> %181)
  %264 = add nsw i64 %200, 40
  %265 = getelementptr inbounds float, ptr %p0, i64 %264
  %266 = load float, ptr %265, align 4, !tbaa !7389
  %267 = insertelement <4 x float> undef, float %266, i64 0
  %268 = shufflevector <4 x float> %267, <4 x float> undef, <4 x i32> zeroinitializer
  %269 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %268, <4 x float> %208, <4 x float> %182)
  %270 = add nsw i64 %200, 44
  %271 = getelementptr inbounds float, ptr %p0, i64 %270
  %272 = load float, ptr %271, align 4, !tbaa !7389
  %273 = insertelement <4 x float> undef, float %272, i64 0
  %274 = shufflevector <4 x float> %273, <4 x float> undef, <4 x i32> zeroinitializer
  %275 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %274, <4 x float> %208, <4 x float> %183)
  %276 = add nsw i64 %200, 48
  %277 = getelementptr inbounds float, ptr %p0, i64 %276
  %278 = load float, ptr %277, align 4, !tbaa !7389
  %279 = insertelement <4 x float> undef, float %278, i64 0
  %280 = shufflevector <4 x float> %279, <4 x float> undef, <4 x i32> zeroinitializer
  %281 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %280, <4 x float> %208, <4 x float> %184)
  %282 = add nsw i64 %200, 52
  %283 = getelementptr inbounds float, ptr %p0, i64 %282
  %284 = load float, ptr %283, align 4, !tbaa !7389
  %285 = insertelement <4 x float> undef, float %284, i64 0
  %286 = shufflevector <4 x float> %285, <4 x float> undef, <4 x i32> zeroinitializer
  %287 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %286, <4 x float> %208, <4 x float> %185)
  %288 = add nsw i64 %200, 56
  %289 = getelementptr inbounds float, ptr %p0, i64 %288
  %290 = load float, ptr %289, align 4, !tbaa !7389
  %291 = insertelement <4 x float> undef, float %290, i64 0
  %292 = shufflevector <4 x float> %291, <4 x float> undef, <4 x i32> zeroinitializer
  %293 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %292, <4 x float> %208, <4 x float> %186)
  %294 = add nsw i64 %200, 60
  %295 = getelementptr inbounds float, ptr %p0, i64 %294
  %296 = load float, ptr %295, align 4, !tbaa !7389
  %297 = insertelement <4 x float> undef, float %296, i64 0
  %298 = shufflevector <4 x float> %297, <4 x float> undef, <4 x i32> zeroinitializer
  %299 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %298, <4 x float> %208, <4 x float> %187)
  %300 = add nsw i64 %200, 64
  %301 = getelementptr inbounds float, ptr %p0, i64 %300
  %302 = load float, ptr %301, align 4, !tbaa !7389
  %303 = insertelement <4 x float> undef, float %302, i64 0
  %304 = shufflevector <4 x float> %303, <4 x float> undef, <4 x i32> zeroinitializer
  %305 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %304, <4 x float> %208, <4 x float> %188)
  %306 = add nsw i64 %200, 68
  %307 = getelementptr inbounds float, ptr %p0, i64 %306
  %308 = load float, ptr %307, align 4, !tbaa !7389
  %309 = insertelement <4 x float> undef, float %308, i64 0
  %310 = shufflevector <4 x float> %309, <4 x float> undef, <4 x i32> zeroinitializer
  %311 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %310, <4 x float> %208, <4 x float> %189)
  %312 = add nsw i64 %200, 72
  %313 = getelementptr inbounds float, ptr %p0, i64 %312
  %314 = load float, ptr %313, align 4, !tbaa !7389
  %315 = insertelement <4 x float> undef, float %314, i64 0
  %316 = shufflevector <4 x float> %315, <4 x float> undef, <4 x i32> zeroinitializer
  %317 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %316, <4 x float> %208, <4 x float> %190)
  %318 = add nsw i64 %200, 76
  %319 = getelementptr inbounds float, ptr %p0, i64 %318
  %320 = load float, ptr %319, align 4, !tbaa !7389
  %321 = insertelement <4 x float> undef, float %320, i64 0
  %322 = shufflevector <4 x float> %321, <4 x float> undef, <4 x i32> zeroinitializer
  %323 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %322, <4 x float> %208, <4 x float> %191)
  %324 = add nsw i64 %200, 80
  %325 = getelementptr inbounds float, ptr %p0, i64 %324
  %326 = load float, ptr %325, align 4, !tbaa !7389
  %327 = insertelement <4 x float> undef, float %326, i64 0
  %328 = shufflevector <4 x float> %327, <4 x float> undef, <4 x i32> zeroinitializer
  %329 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %328, <4 x float> %208, <4 x float> %192)
  %330 = add nsw i64 %200, 84
  %331 = getelementptr inbounds float, ptr %p0, i64 %330
  %332 = load float, ptr %331, align 4, !tbaa !7389
  %333 = insertelement <4 x float> undef, float %332, i64 0
  %334 = shufflevector <4 x float> %333, <4 x float> undef, <4 x i32> zeroinitializer
  %335 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %334, <4 x float> %208, <4 x float> %193)
  %336 = add nsw i64 %200, 88
  %337 = getelementptr inbounds float, ptr %p0, i64 %336
  %338 = load float, ptr %337, align 4, !tbaa !7389
  %339 = insertelement <4 x float> undef, float %338, i64 0
  %340 = shufflevector <4 x float> %339, <4 x float> undef, <4 x i32> zeroinitializer
  %341 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %340, <4 x float> %208, <4 x float> %194)
  %342 = add nsw i64 %200, 92
  %343 = getelementptr inbounds float, ptr %p0, i64 %342
  %344 = load float, ptr %343, align 4, !tbaa !7389
  %345 = insertelement <4 x float> undef, float %344, i64 0
  %346 = shufflevector <4 x float> %345, <4 x float> undef, <4 x i32> zeroinitializer
  %347 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %346, <4 x float> %208, <4 x float> %195)
  %348 = add nsw i64 %200, 96
  %349 = getelementptr inbounds float, ptr %p0, i64 %348
  %350 = load float, ptr %349, align 4, !tbaa !7389
  %351 = insertelement <4 x float> undef, float %350, i64 0
  %352 = shufflevector <4 x float> %351, <4 x float> undef, <4 x i32> zeroinitializer
  %353 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %352, <4 x float> %208, <4 x float> %196)
  %354 = add nsw i64 %200, 100
  %355 = getelementptr inbounds float, ptr %p0, i64 %354
  %356 = load float, ptr %355, align 4, !tbaa !7389
  %357 = insertelement <4 x float> undef, float %356, i64 0
  %358 = shufflevector <4 x float> %357, <4 x float> undef, <4 x i32> zeroinitializer
  %359 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %358, <4 x float> %208, <4 x float> %197)
  %360 = add nsw i64 %200, 104
  %361 = getelementptr inbounds float, ptr %p0, i64 %360
  %362 = load float, ptr %361, align 4, !tbaa !7389
  %363 = insertelement <4 x float> undef, float %362, i64 0
  %364 = shufflevector <4 x float> %363, <4 x float> undef, <4 x i32> zeroinitializer
  %365 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %364, <4 x float> %208, <4 x float> %198)
  %366 = add nsw i64 %200, 108
  %367 = getelementptr inbounds float, ptr %p0, i64 %366
  %368 = load float, ptr %367, align 4, !tbaa !7389
  %369 = insertelement <4 x float> undef, float %368, i64 0
  %370 = shufflevector <4 x float> %369, <4 x float> undef, <4 x i32> zeroinitializer
  %371 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %370, <4 x float> %208, <4 x float> %199)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next176 = add nuw nsw i64 %indvars.iv175, 1
  %exitcond178.not = icmp eq i64 %indvars.iv.next176, 256
  br i1 %exitcond178.not, label %for_begin_ax2.inner.preheader, label %for_begin_ic.inner.preheader, !prof !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x float> @llvm.fmuladd.v4f32(<4 x float>, <4 x float>, <4 x float>) #5

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_13_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.35, align 8
  %6 = alloca %closure_loop_parallel_i0.i1.fused.i2.fused.34, align 8
  %7 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pad = tail call ptr %7(i32 1, i32 %0, i64 460800, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pad, i64 64) ]
  %8 = icmp eq ptr %data_pad, null
  br i1 %8, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end2, %call_end, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %11, %if_end ], [ %17, %call_end ], [ %., %call_end2 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %data_pad, ptr %6, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.34, ptr %6, i64 0, i32 1
  store ptr %1, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1319, ptr nonnull %6, i32 0)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %call_end, label %common.ret, !prof !18

call_end:                                         ; preds = %if_end
  store ptr %data_pad, ptr %5, align 8
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.35, ptr %5, i64 0, i32 1
  store ptr %2, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.35, ptr %5, i64 0, i32 2
  store ptr %3, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.35, ptr %5, i64 0, i32 3
  store ptr %4, ptr %15, align 8
  %16 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %17 = call i32 %16(ptr nonnull @__tvm_parallel_lambda.1320, ptr nonnull %5, i32 0)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %call_end2, label %common.ret, !prof !18

call_end2:                                        ; preds = %call_end
  %19 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %20 = call i32 %19(i32 1, i32 %0, ptr nonnull %data_pad)
  %.not = icmp ne i32 %20, 0
  %. = sext i1 %.not to i32
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1319(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.34, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 1919
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 1920)
  %9 = mul nsw i32 %5, %task_id
  %.fr3 = freeze i32 %9
  %10 = tail call i32 @llvm.smin.i32(i32 %.fr3, i32 1920)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_i3.preheader.preheader, label %for_end_i0.i1.fused.i2.fused, !prof !18

for_begin_i3.preheader.preheader:                 ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %.fr3, i32 1920)
  %smin = sext i32 %12 to i64
  %13 = sub i32 %8, %10
  br label %for_begin_i3.preheader

for_begin_i3.preheader:                           ; preds = %for_begin_i3.preheader.preheader, %for_end_i3
  %indvars.iv = phi i64 [ %smin, %for_begin_i3.preheader.preheader ], [ %indvars.iv.next, %for_end_i3 ]
  %indvar = phi i32 [ 0, %for_begin_i3.preheader.preheader ], [ %indvar.next, %for_end_i3 ]
  %14 = trunc i64 %indvars.iv to i32
  %cse_var_2 = srem i32 %14, 15
  %15 = sdiv i32 %14, 15
  %16 = icmp sgt i32 %cse_var_2, 0
  br i1 %16, label %if_end.14, label %for_body_i3.us.preheader

for_body_i3.us.preheader:                         ; preds = %for_begin_i3.preheader
  %17 = add i32 %10, %indvar
  %18 = mul i32 %17, 60
  %19 = sext i32 %18 to i64
  %20 = shl nsw i64 %19, 2
  %scevgep = getelementptr i8, ptr %data_pad, i64 %20
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(240) %scevgep, i8 0, i64 240, i1 false), !tbaa !7393
  br label %for_end_i3

for_end_i0.i1.fused.i2.fused:                     ; preds = %for_end_i3, %parallel_closure_entry
  ret i32 0

for_end_i3:                                       ; preds = %for_body_i3.us.preheader, %if_end.14
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %indvar.next = add nuw i32 %indvar, 1
  %exitcond.not = icmp eq i32 %indvar.next, %13
  br i1 %exitcond.not, label %for_end_i0.i1.fused.i2.fused, label %for_begin_i3.preheader, !prof !52

if_end.14:                                        ; preds = %for_begin_i3.preheader
  %21 = mul nuw nsw i32 %cse_var_2, 56
  %22 = add nsw i32 %21, -60
  %23 = mul nsw i32 %15, 784
  %24 = add i32 %22, %23
  %25 = mul nsw i64 %indvars.iv, 60
  %26 = getelementptr inbounds float, ptr %data_pad, i64 %25
  store <4 x float> zeroinitializer, ptr %26, align 16, !tbaa !7393
  %27 = add i32 %24, 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds float, ptr %p0, i64 %28
  %30 = load <4 x float>, ptr %29, align 16, !tbaa !7395
  %31 = add nsw i64 %25, 4
  %32 = getelementptr inbounds float, ptr %data_pad, i64 %31
  store <4 x float> %30, ptr %32, align 16, !tbaa !7393
  %33 = add i32 %24, 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds float, ptr %p0, i64 %34
  %36 = load <4 x float>, ptr %35, align 16, !tbaa !7395
  %37 = add nsw i64 %25, 8
  %38 = getelementptr inbounds float, ptr %data_pad, i64 %37
  store <4 x float> %36, ptr %38, align 16, !tbaa !7393
  %39 = add i32 %24, 12
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds float, ptr %p0, i64 %40
  %42 = load <4 x float>, ptr %41, align 16, !tbaa !7395
  %43 = add nsw i64 %25, 12
  %44 = getelementptr inbounds float, ptr %data_pad, i64 %43
  store <4 x float> %42, ptr %44, align 16, !tbaa !7393
  %45 = add i32 %24, 16
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds float, ptr %p0, i64 %46
  %48 = load <4 x float>, ptr %47, align 16, !tbaa !7395
  %49 = add nsw i64 %25, 16
  %50 = getelementptr inbounds float, ptr %data_pad, i64 %49
  store <4 x float> %48, ptr %50, align 16, !tbaa !7393
  %51 = add i32 %24, 20
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds float, ptr %p0, i64 %52
  %54 = load <4 x float>, ptr %53, align 16, !tbaa !7395
  %55 = add nsw i64 %25, 20
  %56 = getelementptr inbounds float, ptr %data_pad, i64 %55
  store <4 x float> %54, ptr %56, align 16, !tbaa !7393
  %57 = add i32 %24, 24
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds float, ptr %p0, i64 %58
  %60 = load <4 x float>, ptr %59, align 16, !tbaa !7395
  %61 = add nsw i64 %25, 24
  %62 = getelementptr inbounds float, ptr %data_pad, i64 %61
  store <4 x float> %60, ptr %62, align 16, !tbaa !7393
  %63 = add i32 %24, 28
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds float, ptr %p0, i64 %64
  %66 = load <4 x float>, ptr %65, align 16, !tbaa !7395
  %67 = add nsw i64 %25, 28
  %68 = getelementptr inbounds float, ptr %data_pad, i64 %67
  store <4 x float> %66, ptr %68, align 16, !tbaa !7393
  %69 = add i32 %24, 32
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds float, ptr %p0, i64 %70
  %72 = load <4 x float>, ptr %71, align 16, !tbaa !7395
  %73 = add nsw i64 %25, 32
  %74 = getelementptr inbounds float, ptr %data_pad, i64 %73
  store <4 x float> %72, ptr %74, align 16, !tbaa !7393
  %75 = add i32 %24, 36
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds float, ptr %p0, i64 %76
  %78 = load <4 x float>, ptr %77, align 16, !tbaa !7395
  %79 = add nsw i64 %25, 36
  %80 = getelementptr inbounds float, ptr %data_pad, i64 %79
  store <4 x float> %78, ptr %80, align 16, !tbaa !7393
  %81 = add i32 %24, 40
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds float, ptr %p0, i64 %82
  %84 = load <4 x float>, ptr %83, align 16, !tbaa !7395
  %85 = add nsw i64 %25, 40
  %86 = getelementptr inbounds float, ptr %data_pad, i64 %85
  store <4 x float> %84, ptr %86, align 16, !tbaa !7393
  %87 = add i32 %24, 44
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds float, ptr %p0, i64 %88
  %90 = load <4 x float>, ptr %89, align 16, !tbaa !7395
  %91 = add nsw i64 %25, 44
  %92 = getelementptr inbounds float, ptr %data_pad, i64 %91
  store <4 x float> %90, ptr %92, align 16, !tbaa !7393
  %93 = add i32 %24, 48
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds float, ptr %p0, i64 %94
  %96 = load <4 x float>, ptr %95, align 16, !tbaa !7395
  %97 = add nsw i64 %25, 48
  %98 = getelementptr inbounds float, ptr %data_pad, i64 %97
  store <4 x float> %96, ptr %98, align 16, !tbaa !7393
  %99 = add i32 %24, 52
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds float, ptr %p0, i64 %100
  %102 = load <4 x float>, ptr %101, align 16, !tbaa !7395
  %103 = add nsw i64 %25, 52
  %104 = getelementptr inbounds float, ptr %data_pad, i64 %103
  store <4 x float> %102, ptr %104, align 16, !tbaa !7393
  %105 = add i32 %24, 56
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds float, ptr %p0, i64 %106
  %108 = load <4 x float>, ptr %107, align 16, !tbaa !7395
  %109 = add nsw i64 %25, 56
  %110 = getelementptr inbounds float, ptr %data_pad, i64 %109
  store <4 x float> %108, ptr %110, align 16, !tbaa !7393
  br label %for_end_i3
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1320(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.35, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.35, ptr %1, i64 0, i32 2
  %T_relu = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.35, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 895
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 896)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 896)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_body_ax0.ax1.fused.ax2.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_body_ax0.ax1.fused.ax2.fused.lr.ph:           ; preds = %parallel_closure_entry
  %14 = tail call i32 @llvm.smin.i32(i32 %11, i32 896)
  %smin = sext i32 %14 to i64
  %15 = add i32 %10, %14
  %16 = sub i32 %15, %12
  br label %for_body_ax0.ax1.fused.ax2.fused

for_body_ax0.ax1.fused.ax2.fused:                 ; preds = %for_body_ax0.ax1.fused.ax2.fused.lr.ph, %for_begin_ax3.inner.preheader
  %indvars.iv104 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.fused.lr.ph ], [ %indvars.iv.next105, %for_begin_ax3.inner.preheader ]
  %17 = trunc i64 %indvars.iv104 to i32
  %18 = srem i32 %17, 7
  %19 = mul nsw i32 %18, 120
  %20 = sdiv i32 %17, 7
  %21 = mul nsw i32 %20, 18432
  %22 = sext i32 %21 to i64
  %23 = sext i32 %19 to i64
  br label %for_begin_kh.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.inner.preheader, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_end_kh
  %24 = shl nsw i32 %20, 2
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds float, ptr %p2, i64 %25
  %27 = load <4 x float>, ptr %26, align 16, !tbaa !7397
  %28 = mul nsw i64 %indvars.iv104, 28
  %29 = fadd <4 x float> %27, %216
  %30 = fcmp ogt <4 x float> %29, zeroinitializer
  %31 = select <4 x i1> %30, <4 x float> %29, <4 x float> zeroinitializer
  %32 = getelementptr inbounds float, ptr %T_relu, i64 %28
  store <4 x float> %31, ptr %32, align 16, !tbaa !7399
  %33 = fadd <4 x float> %27, %222
  %34 = fcmp ogt <4 x float> %33, zeroinitializer
  %35 = select <4 x i1> %34, <4 x float> %33, <4 x float> zeroinitializer
  %36 = add nsw i64 %28, 4
  %37 = getelementptr inbounds float, ptr %T_relu, i64 %36
  store <4 x float> %35, ptr %37, align 16, !tbaa !7399
  %38 = fadd <4 x float> %27, %228
  %39 = fcmp ogt <4 x float> %38, zeroinitializer
  %40 = select <4 x i1> %39, <4 x float> %38, <4 x float> zeroinitializer
  %41 = add nsw i64 %28, 8
  %42 = getelementptr inbounds float, ptr %T_relu, i64 %41
  store <4 x float> %40, ptr %42, align 16, !tbaa !7399
  %43 = fadd <4 x float> %27, %234
  %44 = fcmp ogt <4 x float> %43, zeroinitializer
  %45 = select <4 x i1> %44, <4 x float> %43, <4 x float> zeroinitializer
  %46 = add nsw i64 %28, 12
  %47 = getelementptr inbounds float, ptr %T_relu, i64 %46
  store <4 x float> %45, ptr %47, align 16, !tbaa !7399
  %48 = fadd <4 x float> %27, %240
  %49 = fcmp ogt <4 x float> %48, zeroinitializer
  %50 = select <4 x i1> %49, <4 x float> %48, <4 x float> zeroinitializer
  %51 = add nsw i64 %28, 16
  %52 = getelementptr inbounds float, ptr %T_relu, i64 %51
  store <4 x float> %50, ptr %52, align 16, !tbaa !7399
  %53 = fadd <4 x float> %27, %246
  %54 = fcmp ogt <4 x float> %53, zeroinitializer
  %55 = select <4 x i1> %54, <4 x float> %53, <4 x float> zeroinitializer
  %56 = add nsw i64 %28, 20
  %57 = getelementptr inbounds float, ptr %T_relu, i64 %56
  store <4 x float> %55, ptr %57, align 16, !tbaa !7399
  %58 = fadd <4 x float> %27, %252
  %59 = fcmp ogt <4 x float> %58, zeroinitializer
  %60 = select <4 x i1> %59, <4 x float> %58, <4 x float> zeroinitializer
  %61 = add nsw i64 %28, 24
  %62 = getelementptr inbounds float, ptr %T_relu, i64 %61
  store <4 x float> %60, ptr %62, align 16, !tbaa !7399
  %indvars.iv.next105 = add nsw i64 %indvars.iv104, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next105 to i32
  %exitcond106.not = icmp eq i32 %16, %lftr.wideiv
  br i1 %exitcond106.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_body_ax0.ax1.fused.ax2.fused, !prof !52

for_begin_kh.preheader:                           ; preds = %for_body_ax0.ax1.fused.ax2.fused, %for_end_kh
  %indvars.iv96 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.fused ], [ %indvars.iv.next97, %for_end_kh ]
  %.lcssa15.lcssa35.lcssa5674 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %216, %for_end_kh ]
  %.lcssa217.lcssa37.lcssa5873 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %222, %for_end_kh ]
  %.lcssa418.lcssa39.lcssa6072 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %228, %for_end_kh ]
  %.lcssa620.lcssa40.lcssa6271 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %234, %for_end_kh ]
  %.lcssa822.lcssa42.lcssa6370 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %240, %for_end_kh ]
  %.lcssa1024.lcssa44.lcssa6569 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %246, %for_end_kh ]
  %.lcssa1226.lcssa46.lcssa6768 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %252, %for_end_kh ]
  %63 = mul nuw nsw i64 %indvars.iv96, 900
  %64 = add nsw i64 %63, %23
  %65 = mul nuw nsw i64 %indvars.iv96, 144
  %66 = add nsw i64 %65, %22
  br label %for_begin_kw.preheader

for_begin_kw.preheader:                           ; preds = %for_begin_kh.preheader, %for_end_kw
  %indvars.iv92 = phi i64 [ 0, %for_begin_kh.preheader ], [ %indvars.iv.next93, %for_end_kw ]
  %.lcssa15.lcssa3553 = phi <4 x float> [ %.lcssa15.lcssa35.lcssa5674, %for_begin_kh.preheader ], [ %216, %for_end_kw ]
  %.lcssa217.lcssa3752 = phi <4 x float> [ %.lcssa217.lcssa37.lcssa5873, %for_begin_kh.preheader ], [ %222, %for_end_kw ]
  %.lcssa418.lcssa3951 = phi <4 x float> [ %.lcssa418.lcssa39.lcssa6072, %for_begin_kh.preheader ], [ %228, %for_end_kw ]
  %.lcssa620.lcssa4050 = phi <4 x float> [ %.lcssa620.lcssa40.lcssa6271, %for_begin_kh.preheader ], [ %234, %for_end_kw ]
  %.lcssa822.lcssa4249 = phi <4 x float> [ %.lcssa822.lcssa42.lcssa6370, %for_begin_kh.preheader ], [ %240, %for_end_kw ]
  %.lcssa1024.lcssa4448 = phi <4 x float> [ %.lcssa1024.lcssa44.lcssa6569, %for_begin_kh.preheader ], [ %246, %for_end_kw ]
  %.lcssa1226.lcssa4647 = phi <4 x float> [ %.lcssa1226.lcssa46.lcssa6768, %for_begin_kh.preheader ], [ %252, %for_end_kw ]
  %67 = mul nuw nsw i64 %indvars.iv92, 60
  %68 = add nsw i64 %64, %67
  %69 = mul nuw nsw i64 %indvars.iv92, 48
  %70 = add nsw i64 %66, %69
  br label %for_begin_ic.inner.preheader

for_end_kh:                                       ; preds = %for_end_kw
  %indvars.iv.next97 = add nuw nsw i64 %indvars.iv96, 1
  %exitcond99.not = icmp eq i64 %indvars.iv.next97, 128
  br i1 %exitcond99.not, label %for_begin_ax3.inner.preheader, label %for_begin_kh.preheader, !prof !52

for_begin_ic.inner.preheader:                     ; preds = %for_begin_kw.preheader, %for_begin_ic.inner.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_kw.preheader ], [ %indvars.iv.next, %for_begin_ic.inner.preheader ]
  %.lcssa1533 = phi <4 x float> [ %.lcssa15.lcssa3553, %for_begin_kw.preheader ], [ %216, %for_begin_ic.inner.preheader ]
  %.lcssa21732 = phi <4 x float> [ %.lcssa217.lcssa3752, %for_begin_kw.preheader ], [ %222, %for_begin_ic.inner.preheader ]
  %.lcssa41831 = phi <4 x float> [ %.lcssa418.lcssa3951, %for_begin_kw.preheader ], [ %228, %for_begin_ic.inner.preheader ]
  %.lcssa62030 = phi <4 x float> [ %.lcssa620.lcssa4050, %for_begin_kw.preheader ], [ %234, %for_begin_ic.inner.preheader ]
  %.lcssa82229 = phi <4 x float> [ %.lcssa822.lcssa4249, %for_begin_kw.preheader ], [ %240, %for_begin_ic.inner.preheader ]
  %.lcssa102428 = phi <4 x float> [ %.lcssa1024.lcssa4448, %for_begin_kw.preheader ], [ %246, %for_begin_ic.inner.preheader ]
  %.lcssa122627 = phi <4 x float> [ %.lcssa1226.lcssa4647, %for_begin_kw.preheader ], [ %252, %for_begin_ic.inner.preheader ]
  %71 = shl nsw i64 %indvars.iv, 2
  %72 = add nsw i64 %68, %71
  %73 = shl nsw i64 %indvars.iv, 4
  %74 = add nsw i64 %70, %73
  %75 = getelementptr inbounds float, ptr %data_pad, i64 %72
  %76 = load float, ptr %75, align 4, !tbaa !7393
  %77 = insertelement <4 x float> undef, float %76, i64 0
  %78 = shufflevector <4 x float> %77, <4 x float> undef, <4 x i32> zeroinitializer
  %79 = getelementptr inbounds float, ptr %p1, i64 %74
  %80 = load <4 x float>, ptr %79, align 16, !tbaa !7401
  %81 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %78, <4 x float> %80, <4 x float> %.lcssa1533)
  %82 = add nsw i64 %72, 8
  %83 = getelementptr inbounds float, ptr %data_pad, i64 %82
  %84 = load float, ptr %83, align 4, !tbaa !7393
  %85 = insertelement <4 x float> undef, float %84, i64 0
  %86 = shufflevector <4 x float> %85, <4 x float> undef, <4 x i32> zeroinitializer
  %87 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %86, <4 x float> %80, <4 x float> %.lcssa21732)
  %88 = add nsw i64 %72, 16
  %89 = getelementptr inbounds float, ptr %data_pad, i64 %88
  %90 = load float, ptr %89, align 4, !tbaa !7393
  %91 = insertelement <4 x float> undef, float %90, i64 0
  %92 = shufflevector <4 x float> %91, <4 x float> undef, <4 x i32> zeroinitializer
  %93 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %92, <4 x float> %80, <4 x float> %.lcssa41831)
  %94 = add nsw i64 %72, 24
  %95 = getelementptr inbounds float, ptr %data_pad, i64 %94
  %96 = load float, ptr %95, align 4, !tbaa !7393
  %97 = insertelement <4 x float> undef, float %96, i64 0
  %98 = shufflevector <4 x float> %97, <4 x float> undef, <4 x i32> zeroinitializer
  %99 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %98, <4 x float> %80, <4 x float> %.lcssa62030)
  %100 = add nsw i64 %72, 32
  %101 = getelementptr inbounds float, ptr %data_pad, i64 %100
  %102 = load float, ptr %101, align 4, !tbaa !7393
  %103 = insertelement <4 x float> undef, float %102, i64 0
  %104 = shufflevector <4 x float> %103, <4 x float> undef, <4 x i32> zeroinitializer
  %105 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %104, <4 x float> %80, <4 x float> %.lcssa82229)
  %106 = add nsw i64 %72, 40
  %107 = getelementptr inbounds float, ptr %data_pad, i64 %106
  %108 = load float, ptr %107, align 4, !tbaa !7393
  %109 = insertelement <4 x float> undef, float %108, i64 0
  %110 = shufflevector <4 x float> %109, <4 x float> undef, <4 x i32> zeroinitializer
  %111 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %110, <4 x float> %80, <4 x float> %.lcssa102428)
  %112 = add nsw i64 %72, 48
  %113 = getelementptr inbounds float, ptr %data_pad, i64 %112
  %114 = load float, ptr %113, align 4, !tbaa !7393
  %115 = insertelement <4 x float> undef, float %114, i64 0
  %116 = shufflevector <4 x float> %115, <4 x float> undef, <4 x i32> zeroinitializer
  %117 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %116, <4 x float> %80, <4 x float> %.lcssa122627)
  %118 = or i64 %72, 1
  %119 = or i64 %74, 4
  %120 = getelementptr inbounds float, ptr %data_pad, i64 %118
  %121 = load float, ptr %120, align 4, !tbaa !7393
  %122 = insertelement <4 x float> undef, float %121, i64 0
  %123 = shufflevector <4 x float> %122, <4 x float> undef, <4 x i32> zeroinitializer
  %124 = getelementptr inbounds float, ptr %p1, i64 %119
  %125 = load <4 x float>, ptr %124, align 16, !tbaa !7401
  %126 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %123, <4 x float> %125, <4 x float> %81)
  %127 = add nsw i64 %72, 9
  %128 = getelementptr inbounds float, ptr %data_pad, i64 %127
  %129 = load float, ptr %128, align 4, !tbaa !7393
  %130 = insertelement <4 x float> undef, float %129, i64 0
  %131 = shufflevector <4 x float> %130, <4 x float> undef, <4 x i32> zeroinitializer
  %132 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %131, <4 x float> %125, <4 x float> %87)
  %133 = add nsw i64 %72, 17
  %134 = getelementptr inbounds float, ptr %data_pad, i64 %133
  %135 = load float, ptr %134, align 4, !tbaa !7393
  %136 = insertelement <4 x float> undef, float %135, i64 0
  %137 = shufflevector <4 x float> %136, <4 x float> undef, <4 x i32> zeroinitializer
  %138 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %137, <4 x float> %125, <4 x float> %93)
  %139 = add nsw i64 %72, 25
  %140 = getelementptr inbounds float, ptr %data_pad, i64 %139
  %141 = load float, ptr %140, align 4, !tbaa !7393
  %142 = insertelement <4 x float> undef, float %141, i64 0
  %143 = shufflevector <4 x float> %142, <4 x float> undef, <4 x i32> zeroinitializer
  %144 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %143, <4 x float> %125, <4 x float> %99)
  %145 = add nsw i64 %72, 33
  %146 = getelementptr inbounds float, ptr %data_pad, i64 %145
  %147 = load float, ptr %146, align 4, !tbaa !7393
  %148 = insertelement <4 x float> undef, float %147, i64 0
  %149 = shufflevector <4 x float> %148, <4 x float> undef, <4 x i32> zeroinitializer
  %150 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %149, <4 x float> %125, <4 x float> %105)
  %151 = add nsw i64 %72, 41
  %152 = getelementptr inbounds float, ptr %data_pad, i64 %151
  %153 = load float, ptr %152, align 4, !tbaa !7393
  %154 = insertelement <4 x float> undef, float %153, i64 0
  %155 = shufflevector <4 x float> %154, <4 x float> undef, <4 x i32> zeroinitializer
  %156 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %155, <4 x float> %125, <4 x float> %111)
  %157 = add nsw i64 %72, 49
  %158 = getelementptr inbounds float, ptr %data_pad, i64 %157
  %159 = load float, ptr %158, align 4, !tbaa !7393
  %160 = insertelement <4 x float> undef, float %159, i64 0
  %161 = shufflevector <4 x float> %160, <4 x float> undef, <4 x i32> zeroinitializer
  %162 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %161, <4 x float> %125, <4 x float> %117)
  %163 = or i64 %72, 2
  %164 = or i64 %74, 8
  %165 = getelementptr inbounds float, ptr %data_pad, i64 %163
  %166 = load float, ptr %165, align 4, !tbaa !7393
  %167 = insertelement <4 x float> undef, float %166, i64 0
  %168 = shufflevector <4 x float> %167, <4 x float> undef, <4 x i32> zeroinitializer
  %169 = getelementptr inbounds float, ptr %p1, i64 %164
  %170 = load <4 x float>, ptr %169, align 16, !tbaa !7401
  %171 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %168, <4 x float> %170, <4 x float> %126)
  %172 = add nsw i64 %72, 10
  %173 = getelementptr inbounds float, ptr %data_pad, i64 %172
  %174 = load float, ptr %173, align 4, !tbaa !7393
  %175 = insertelement <4 x float> undef, float %174, i64 0
  %176 = shufflevector <4 x float> %175, <4 x float> undef, <4 x i32> zeroinitializer
  %177 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %176, <4 x float> %170, <4 x float> %132)
  %178 = add nsw i64 %72, 18
  %179 = getelementptr inbounds float, ptr %data_pad, i64 %178
  %180 = load float, ptr %179, align 4, !tbaa !7393
  %181 = insertelement <4 x float> undef, float %180, i64 0
  %182 = shufflevector <4 x float> %181, <4 x float> undef, <4 x i32> zeroinitializer
  %183 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %182, <4 x float> %170, <4 x float> %138)
  %184 = add nsw i64 %72, 26
  %185 = getelementptr inbounds float, ptr %data_pad, i64 %184
  %186 = load float, ptr %185, align 4, !tbaa !7393
  %187 = insertelement <4 x float> undef, float %186, i64 0
  %188 = shufflevector <4 x float> %187, <4 x float> undef, <4 x i32> zeroinitializer
  %189 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %188, <4 x float> %170, <4 x float> %144)
  %190 = add nsw i64 %72, 34
  %191 = getelementptr inbounds float, ptr %data_pad, i64 %190
  %192 = load float, ptr %191, align 4, !tbaa !7393
  %193 = insertelement <4 x float> undef, float %192, i64 0
  %194 = shufflevector <4 x float> %193, <4 x float> undef, <4 x i32> zeroinitializer
  %195 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %194, <4 x float> %170, <4 x float> %150)
  %196 = add nsw i64 %72, 42
  %197 = getelementptr inbounds float, ptr %data_pad, i64 %196
  %198 = load float, ptr %197, align 4, !tbaa !7393
  %199 = insertelement <4 x float> undef, float %198, i64 0
  %200 = shufflevector <4 x float> %199, <4 x float> undef, <4 x i32> zeroinitializer
  %201 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %200, <4 x float> %170, <4 x float> %156)
  %202 = add nsw i64 %72, 50
  %203 = getelementptr inbounds float, ptr %data_pad, i64 %202
  %204 = load float, ptr %203, align 4, !tbaa !7393
  %205 = insertelement <4 x float> undef, float %204, i64 0
  %206 = shufflevector <4 x float> %205, <4 x float> undef, <4 x i32> zeroinitializer
  %207 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %206, <4 x float> %170, <4 x float> %162)
  %208 = or i64 %72, 3
  %209 = or i64 %74, 12
  %210 = getelementptr inbounds float, ptr %data_pad, i64 %208
  %211 = load float, ptr %210, align 4, !tbaa !7393
  %212 = insertelement <4 x float> undef, float %211, i64 0
  %213 = shufflevector <4 x float> %212, <4 x float> undef, <4 x i32> zeroinitializer
  %214 = getelementptr inbounds float, ptr %p1, i64 %209
  %215 = load <4 x float>, ptr %214, align 16, !tbaa !7401
  %216 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %213, <4 x float> %215, <4 x float> %171)
  %217 = add nsw i64 %72, 11
  %218 = getelementptr inbounds float, ptr %data_pad, i64 %217
  %219 = load float, ptr %218, align 4, !tbaa !7393
  %220 = insertelement <4 x float> undef, float %219, i64 0
  %221 = shufflevector <4 x float> %220, <4 x float> undef, <4 x i32> zeroinitializer
  %222 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %221, <4 x float> %215, <4 x float> %177)
  %223 = add nsw i64 %72, 19
  %224 = getelementptr inbounds float, ptr %data_pad, i64 %223
  %225 = load float, ptr %224, align 4, !tbaa !7393
  %226 = insertelement <4 x float> undef, float %225, i64 0
  %227 = shufflevector <4 x float> %226, <4 x float> undef, <4 x i32> zeroinitializer
  %228 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %227, <4 x float> %215, <4 x float> %183)
  %229 = add nsw i64 %72, 27
  %230 = getelementptr inbounds float, ptr %data_pad, i64 %229
  %231 = load float, ptr %230, align 4, !tbaa !7393
  %232 = insertelement <4 x float> undef, float %231, i64 0
  %233 = shufflevector <4 x float> %232, <4 x float> undef, <4 x i32> zeroinitializer
  %234 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %233, <4 x float> %215, <4 x float> %189)
  %235 = add nsw i64 %72, 35
  %236 = getelementptr inbounds float, ptr %data_pad, i64 %235
  %237 = load float, ptr %236, align 4, !tbaa !7393
  %238 = insertelement <4 x float> undef, float %237, i64 0
  %239 = shufflevector <4 x float> %238, <4 x float> undef, <4 x i32> zeroinitializer
  %240 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %239, <4 x float> %215, <4 x float> %195)
  %241 = add nsw i64 %72, 43
  %242 = getelementptr inbounds float, ptr %data_pad, i64 %241
  %243 = load float, ptr %242, align 4, !tbaa !7393
  %244 = insertelement <4 x float> undef, float %243, i64 0
  %245 = shufflevector <4 x float> %244, <4 x float> undef, <4 x i32> zeroinitializer
  %246 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %245, <4 x float> %215, <4 x float> %201)
  %247 = add nsw i64 %72, 51
  %248 = getelementptr inbounds float, ptr %data_pad, i64 %247
  %249 = load float, ptr %248, align 4, !tbaa !7393
  %250 = insertelement <4 x float> undef, float %249, i64 0
  %251 = shufflevector <4 x float> %250, <4 x float> undef, <4 x i32> zeroinitializer
  %252 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %251, <4 x float> %215, <4 x float> %207)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for_end_kw, label %for_begin_ic.inner.preheader, !prof !52

for_end_kw:                                       ; preds = %for_begin_ic.inner.preheader
  %indvars.iv.next93 = add nuw nsw i64 %indvars.iv92, 1
  %exitcond95.not = icmp eq i64 %indvars.iv.next93, 3
  br i1 %exitcond95.not, label %for_end_kh, label %for_begin_kw.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_14_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3) unnamed_addr #2 {
entry:
  %4 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.36, align 8
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.36, ptr %4, i64 0, i32 1
  store ptr %1, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.36, ptr %4, i64 0, i32 2
  store ptr %2, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.36, ptr %4, i64 0, i32 3
  store ptr %3, ptr %7, align 8
  %8 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %9 = call i32 %8(ptr nonnull @__tvm_parallel_lambda.1370, ptr nonnull %4, i32 0)
  ret i32 %9
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1370(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.36, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.36, ptr %1, i64 0, i32 2
  %T_relu = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.36, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 111
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 112)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 112)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph:     ; preds = %parallel_closure_entry
  %14 = tail call i32 @llvm.smin.i32(i32 %11, i32 112)
  %smin = sext i32 %14 to i64
  %15 = add i32 %10, %14
  %16 = sub i32 %15, %12
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, %for_begin_ax3.inner.preheader
  %indvars.iv56 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph ], [ %indvars.iv.next57, %for_begin_ax3.inner.preheader ]
  %17 = trunc i64 %indvars.iv56 to i32
  %18 = srem i32 %17, 7
  %19 = mul nsw i32 %18, 28
  %20 = sdiv i32 %17, 7
  %21 = shl nsw i32 %20, 16
  %22 = sext i32 %19 to i64
  %23 = sext i32 %21 to i64
  br label %for_begin_ic.inner.preheader

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_begin_ax3.inner.preheader, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_end_ic.inner
  %24 = shl nsw i32 %20, 5
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds float, ptr %p2, i64 %25
  %27 = load <32 x float>, ptr %26, align 64, !tbaa !7403
  %28 = mul nsw i64 %indvars.iv56, 224
  %29 = fadd <32 x float> %27, %83
  %30 = fcmp ogt <32 x float> %29, zeroinitializer
  %31 = select <32 x i1> %30, <32 x float> %29, <32 x float> zeroinitializer
  %32 = getelementptr inbounds float, ptr %T_relu, i64 %28
  store <32 x float> %31, ptr %32, align 64, !tbaa !7405
  %33 = fadd <32 x float> %27, %89
  %34 = fcmp ogt <32 x float> %33, zeroinitializer
  %35 = select <32 x i1> %34, <32 x float> %33, <32 x float> zeroinitializer
  %36 = add nsw i64 %28, 32
  %37 = getelementptr inbounds float, ptr %T_relu, i64 %36
  store <32 x float> %35, ptr %37, align 64, !tbaa !7405
  %38 = fadd <32 x float> %27, %95
  %39 = fcmp ogt <32 x float> %38, zeroinitializer
  %40 = select <32 x i1> %39, <32 x float> %38, <32 x float> zeroinitializer
  %41 = add nsw i64 %28, 64
  %42 = getelementptr inbounds float, ptr %T_relu, i64 %41
  store <32 x float> %40, ptr %42, align 64, !tbaa !7405
  %43 = fadd <32 x float> %27, %101
  %44 = fcmp ogt <32 x float> %43, zeroinitializer
  %45 = select <32 x i1> %44, <32 x float> %43, <32 x float> zeroinitializer
  %46 = add nsw i64 %28, 96
  %47 = getelementptr inbounds float, ptr %T_relu, i64 %46
  store <32 x float> %45, ptr %47, align 64, !tbaa !7405
  %48 = fadd <32 x float> %27, %107
  %49 = fcmp ogt <32 x float> %48, zeroinitializer
  %50 = select <32 x i1> %49, <32 x float> %48, <32 x float> zeroinitializer
  %51 = add nsw i64 %28, 128
  %52 = getelementptr inbounds float, ptr %T_relu, i64 %51
  store <32 x float> %50, ptr %52, align 64, !tbaa !7405
  %53 = fadd <32 x float> %27, %113
  %54 = fcmp ogt <32 x float> %53, zeroinitializer
  %55 = select <32 x i1> %54, <32 x float> %53, <32 x float> zeroinitializer
  %56 = add nsw i64 %28, 160
  %57 = getelementptr inbounds float, ptr %T_relu, i64 %56
  store <32 x float> %55, ptr %57, align 64, !tbaa !7405
  %58 = fadd <32 x float> %27, %119
  %59 = fcmp ogt <32 x float> %58, zeroinitializer
  %60 = select <32 x i1> %59, <32 x float> %58, <32 x float> zeroinitializer
  %61 = add nsw i64 %28, 192
  %62 = getelementptr inbounds float, ptr %T_relu, i64 %61
  store <32 x float> %60, ptr %62, align 64, !tbaa !7405
  %indvars.iv.next57 = add nsw i64 %indvars.iv56, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next57 to i32
  %exitcond58.not = icmp eq i32 %16, %lftr.wideiv
  br i1 %exitcond58.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !52

for_begin_ic.inner.preheader:                     ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ic.inner
  %indvars.iv48 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %indvars.iv.next49, %for_end_ic.inner ]
  %.lcssa1533 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %83, %for_end_ic.inner ]
  %.lcssa21732 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %89, %for_end_ic.inner ]
  %.lcssa41831 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %95, %for_end_ic.inner ]
  %.lcssa62030 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %101, %for_end_ic.inner ]
  %.lcssa82229 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %107, %for_end_ic.inner ]
  %.lcssa102428 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %113, %for_end_ic.inner ]
  %.lcssa122627 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %119, %for_end_ic.inner ]
  %63 = mul nuw nsw i64 %indvars.iv48, 196
  %64 = add nsw i64 %63, %22
  %65 = shl nsw i64 %indvars.iv48, 7
  %66 = add nuw nsw i64 %65, %23
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %67 = phi <32 x float> [ %.lcssa1533, %for_begin_ic.inner.preheader ], [ %83, %for_body_ic.inner ]
  %68 = phi <32 x float> [ %.lcssa21732, %for_begin_ic.inner.preheader ], [ %89, %for_body_ic.inner ]
  %69 = phi <32 x float> [ %.lcssa41831, %for_begin_ic.inner.preheader ], [ %95, %for_body_ic.inner ]
  %70 = phi <32 x float> [ %.lcssa62030, %for_begin_ic.inner.preheader ], [ %101, %for_body_ic.inner ]
  %71 = phi <32 x float> [ %.lcssa82229, %for_begin_ic.inner.preheader ], [ %107, %for_body_ic.inner ]
  %72 = phi <32 x float> [ %.lcssa102428, %for_begin_ic.inner.preheader ], [ %113, %for_body_ic.inner ]
  %73 = phi <32 x float> [ %.lcssa122627, %for_begin_ic.inner.preheader ], [ %119, %for_body_ic.inner ]
  %74 = add nsw i64 %64, %indvars.iv
  %75 = shl nuw nsw i64 %indvars.iv, 5
  %76 = add nuw nsw i64 %66, %75
  %77 = getelementptr inbounds float, ptr %p0, i64 %74
  %78 = load float, ptr %77, align 4, !tbaa !7407
  %79 = insertelement <32 x float> undef, float %78, i64 0
  %80 = shufflevector <32 x float> %79, <32 x float> undef, <32 x i32> zeroinitializer
  %81 = getelementptr inbounds float, ptr %p1, i64 %76
  %82 = load <32 x float>, ptr %81, align 64, !tbaa !7409
  %83 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %80, <32 x float> %82, <32 x float> %67)
  %84 = add nsw i64 %74, 4
  %85 = getelementptr inbounds float, ptr %p0, i64 %84
  %86 = load float, ptr %85, align 4, !tbaa !7407
  %87 = insertelement <32 x float> undef, float %86, i64 0
  %88 = shufflevector <32 x float> %87, <32 x float> undef, <32 x i32> zeroinitializer
  %89 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %88, <32 x float> %82, <32 x float> %68)
  %90 = add nsw i64 %74, 8
  %91 = getelementptr inbounds float, ptr %p0, i64 %90
  %92 = load float, ptr %91, align 4, !tbaa !7407
  %93 = insertelement <32 x float> undef, float %92, i64 0
  %94 = shufflevector <32 x float> %93, <32 x float> undef, <32 x i32> zeroinitializer
  %95 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %94, <32 x float> %82, <32 x float> %69)
  %96 = add nsw i64 %74, 12
  %97 = getelementptr inbounds float, ptr %p0, i64 %96
  %98 = load float, ptr %97, align 4, !tbaa !7407
  %99 = insertelement <32 x float> undef, float %98, i64 0
  %100 = shufflevector <32 x float> %99, <32 x float> undef, <32 x i32> zeroinitializer
  %101 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %100, <32 x float> %82, <32 x float> %70)
  %102 = add nsw i64 %74, 16
  %103 = getelementptr inbounds float, ptr %p0, i64 %102
  %104 = load float, ptr %103, align 4, !tbaa !7407
  %105 = insertelement <32 x float> undef, float %104, i64 0
  %106 = shufflevector <32 x float> %105, <32 x float> undef, <32 x i32> zeroinitializer
  %107 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %106, <32 x float> %82, <32 x float> %71)
  %108 = add nsw i64 %74, 20
  %109 = getelementptr inbounds float, ptr %p0, i64 %108
  %110 = load float, ptr %109, align 4, !tbaa !7407
  %111 = insertelement <32 x float> undef, float %110, i64 0
  %112 = shufflevector <32 x float> %111, <32 x float> undef, <32 x i32> zeroinitializer
  %113 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %112, <32 x float> %82, <32 x float> %72)
  %114 = add nsw i64 %74, 24
  %115 = getelementptr inbounds float, ptr %p0, i64 %114
  %116 = load float, ptr %115, align 4, !tbaa !7407
  %117 = insertelement <32 x float> undef, float %116, i64 0
  %118 = shufflevector <32 x float> %117, <32 x float> undef, <32 x i32> zeroinitializer
  %119 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %118, <32 x float> %82, <32 x float> %73)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next49 = add nuw nsw i64 %indvars.iv48, 1
  %exitcond51.not = icmp eq i64 %indvars.iv.next49, 512
  br i1 %exitcond51.not, label %for_begin_ax3.inner.preheader, label %for_begin_ic.inner.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_15_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.38, align 8
  %6 = alloca %closure_loop_parallel_i0.i1.fused.i2.fused.37, align 8
  %7 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pad = tail call ptr %7(i32 1, i32 %0, i64 165888, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pad, i64 64) ]
  %8 = icmp eq ptr %data_pad, null
  br i1 %8, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end2, %call_end, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %11, %if_end ], [ %17, %call_end ], [ %., %call_end2 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %data_pad, ptr %6, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.37, ptr %6, i64 0, i32 1
  store ptr %1, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1420, ptr nonnull %6, i32 0)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %call_end, label %common.ret, !prof !18

call_end:                                         ; preds = %if_end
  store ptr %data_pad, ptr %5, align 8
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.38, ptr %5, i64 0, i32 1
  store ptr %2, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.38, ptr %5, i64 0, i32 2
  store ptr %3, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.38, ptr %5, i64 0, i32 3
  store ptr %4, ptr %15, align 8
  %16 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %17 = call i32 %16(ptr nonnull @__tvm_parallel_lambda.1421, ptr nonnull %5, i32 0)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %call_end2, label %common.ret, !prof !18

call_end2:                                        ; preds = %call_end
  %19 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %20 = call i32 %19(i32 1, i32 %0, ptr nonnull %data_pad)
  %.not = icmp ne i32 %20, 0
  %. = sext i1 %.not to i32
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1420(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.37, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 8
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 9)
  %9 = mul nsw i32 %5, %task_id
  %.fr4 = freeze i32 %9
  %10 = tail call i32 @llvm.smin.i32(i32 %.fr4, i32 9)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_i3.preheader.preheader, label %for_end_i0.i1.fused.i2.fused, !prof !18

for_begin_i3.preheader.preheader:                 ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %.fr4, i32 9)
  %smin = sext i32 %12 to i64
  %13 = sub i32 %8, %10
  br label %for_begin_i3.preheader

for_begin_i3.preheader:                           ; preds = %for_begin_i3.preheader.preheader, %for_end_i3
  %indvars.iv = phi i64 [ %smin, %for_begin_i3.preheader.preheader ], [ %indvars.iv.next, %for_end_i3 ]
  %indvar = phi i32 [ 0, %for_begin_i3.preheader.preheader ], [ %indvar.next, %for_end_i3 ]
  %14 = trunc i64 %indvars.iv to i32
  %15 = add i32 %14, -1
  %16 = icmp ult i32 %15, 7
  br i1 %16, label %if_end.8, label %for_body_i3.us.preheader

for_body_i3.us.preheader:                         ; preds = %for_begin_i3.preheader
  %17 = add i32 %10, %indvar
  %18 = mul i32 %17, 4608
  %19 = sext i32 %18 to i64
  %20 = shl nsw i64 %19, 2
  %scevgep = getelementptr i8, ptr %data_pad, i64 %20
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 64 dereferenceable(18432) %scevgep, i8 0, i64 18432, i1 false), !tbaa !7411
  br label %for_end_i3

for_end_i0.i1.fused.i2.fused:                     ; preds = %for_end_i3, %parallel_closure_entry
  ret i32 0

for_end_i3:                                       ; preds = %for_body_i3.us.preheader, %if_end.8
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %indvar.next = add nuw i32 %indvar, 1
  %exitcond.not = icmp eq i32 %indvar.next, %13
  br i1 %exitcond.not, label %for_end_i0.i1.fused.i2.fused, label %for_begin_i3.preheader, !prof !52

if_end.8:                                         ; preds = %for_begin_i3.preheader
  %21 = trunc i64 %indvars.iv to i32
  %22 = mul i32 %21, 3584
  %23 = mul nsw i64 %indvars.iv, 4608
  %24 = getelementptr inbounds float, ptr %data_pad, i64 %23
  store <512 x float> zeroinitializer, ptr %24, align 64, !tbaa !7411
  %25 = add i32 %22, -3584
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds float, ptr %p0, i64 %26
  %28 = load <512 x float>, ptr %27, align 64, !tbaa !7413
  %29 = add nsw i64 %23, 512
  %30 = getelementptr inbounds float, ptr %data_pad, i64 %29
  store <512 x float> %28, ptr %30, align 64, !tbaa !7411
  %31 = add i32 %22, -3072
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds float, ptr %p0, i64 %32
  %34 = load <512 x float>, ptr %33, align 64, !tbaa !7413
  %35 = add nsw i64 %23, 1024
  %36 = getelementptr inbounds float, ptr %data_pad, i64 %35
  store <512 x float> %34, ptr %36, align 64, !tbaa !7411
  %37 = add i32 %22, -2560
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds float, ptr %p0, i64 %38
  %40 = load <512 x float>, ptr %39, align 64, !tbaa !7413
  %41 = add nsw i64 %23, 1536
  %42 = getelementptr inbounds float, ptr %data_pad, i64 %41
  store <512 x float> %40, ptr %42, align 64, !tbaa !7411
  %43 = add i32 %22, -2048
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds float, ptr %p0, i64 %44
  %46 = load <512 x float>, ptr %45, align 64, !tbaa !7413
  %47 = add nsw i64 %23, 2048
  %48 = getelementptr inbounds float, ptr %data_pad, i64 %47
  store <512 x float> %46, ptr %48, align 64, !tbaa !7411
  %49 = add i32 %22, -1536
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds float, ptr %p0, i64 %50
  %52 = load <512 x float>, ptr %51, align 64, !tbaa !7413
  %53 = add nsw i64 %23, 2560
  %54 = getelementptr inbounds float, ptr %data_pad, i64 %53
  store <512 x float> %52, ptr %54, align 64, !tbaa !7411
  %55 = add i32 %22, -1024
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds float, ptr %p0, i64 %56
  %58 = load <512 x float>, ptr %57, align 64, !tbaa !7413
  %59 = add nsw i64 %23, 3072
  %60 = getelementptr inbounds float, ptr %data_pad, i64 %59
  store <512 x float> %58, ptr %60, align 64, !tbaa !7411
  %61 = add i32 %22, -512
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds float, ptr %p0, i64 %62
  %64 = load <512 x float>, ptr %63, align 64, !tbaa !7413
  %65 = add nsw i64 %23, 3584
  %66 = getelementptr inbounds float, ptr %data_pad, i64 %65
  store <512 x float> %64, ptr %66, align 64, !tbaa !7411
  %67 = add nsw i64 %23, 4096
  %68 = getelementptr inbounds float, ptr %data_pad, i64 %67
  store <512 x float> zeroinitializer, ptr %68, align 64, !tbaa !7411
  br label %for_end_i3
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1421(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.38, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.38, ptr %1, i64 0, i32 2
  %T_relu = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.38, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 111
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 112)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 112)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_body_ax0.ax1.fused.ax2.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_body_ax0.ax1.fused.ax2.fused.lr.ph:           ; preds = %parallel_closure_entry
  %14 = tail call i32 @llvm.smin.i32(i32 %11, i32 112)
  %smin = sext i32 %14 to i64
  %15 = add i32 %10, %14
  %16 = sub i32 %15, %12
  br label %for_body_ax0.ax1.fused.ax2.fused

for_body_ax0.ax1.fused.ax2.fused:                 ; preds = %for_body_ax0.ax1.fused.ax2.fused.lr.ph, %for_begin_ax3.inner.preheader
  %indvars.iv65 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.fused.lr.ph ], [ %indvars.iv.next66, %for_begin_ax3.inner.preheader ]
  %17 = trunc i64 %indvars.iv65 to i32
  %18 = srem i32 %17, 7
  %19 = sdiv i32 %17, 7
  %20 = mul nsw i32 %19, 147456
  %21 = sext i32 %20 to i64
  br label %for_begin_ic.inner.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.inner.preheader, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_end_ic.inner
  %22 = shl nsw i32 %19, 5
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds float, ptr %p2, i64 %23
  %25 = load <32 x float>, ptr %24, align 64, !tbaa !7415
  %26 = mul nsw i64 %indvars.iv65, 224
  %27 = fadd <32 x float> %25, %137
  %28 = fcmp ogt <32 x float> %27, zeroinitializer
  %29 = select <32 x i1> %28, <32 x float> %27, <32 x float> zeroinitializer
  %30 = getelementptr inbounds float, ptr %T_relu, i64 %26
  store <32 x float> %29, ptr %30, align 64, !tbaa !7417
  %31 = fadd <32 x float> %25, %138
  %32 = fcmp ogt <32 x float> %31, zeroinitializer
  %33 = select <32 x i1> %32, <32 x float> %31, <32 x float> zeroinitializer
  %34 = add nsw i64 %26, 32
  %35 = getelementptr inbounds float, ptr %T_relu, i64 %34
  store <32 x float> %33, ptr %35, align 64, !tbaa !7417
  %36 = fadd <32 x float> %25, %139
  %37 = fcmp ogt <32 x float> %36, zeroinitializer
  %38 = select <32 x i1> %37, <32 x float> %36, <32 x float> zeroinitializer
  %39 = add nsw i64 %26, 64
  %40 = getelementptr inbounds float, ptr %T_relu, i64 %39
  store <32 x float> %38, ptr %40, align 64, !tbaa !7417
  %41 = fadd <32 x float> %25, %140
  %42 = fcmp ogt <32 x float> %41, zeroinitializer
  %43 = select <32 x i1> %42, <32 x float> %41, <32 x float> zeroinitializer
  %44 = add nsw i64 %26, 96
  %45 = getelementptr inbounds float, ptr %T_relu, i64 %44
  store <32 x float> %43, ptr %45, align 64, !tbaa !7417
  %46 = fadd <32 x float> %25, %141
  %47 = fcmp ogt <32 x float> %46, zeroinitializer
  %48 = select <32 x i1> %47, <32 x float> %46, <32 x float> zeroinitializer
  %49 = add nsw i64 %26, 128
  %50 = getelementptr inbounds float, ptr %T_relu, i64 %49
  store <32 x float> %48, ptr %50, align 64, !tbaa !7417
  %51 = fadd <32 x float> %25, %142
  %52 = fcmp ogt <32 x float> %51, zeroinitializer
  %53 = select <32 x i1> %52, <32 x float> %51, <32 x float> zeroinitializer
  %54 = add nsw i64 %26, 160
  %55 = getelementptr inbounds float, ptr %T_relu, i64 %54
  store <32 x float> %53, ptr %55, align 64, !tbaa !7417
  %56 = fadd <32 x float> %25, %148
  %57 = fcmp ogt <32 x float> %56, zeroinitializer
  %58 = select <32 x i1> %57, <32 x float> %56, <32 x float> zeroinitializer
  %59 = add nsw i64 %26, 192
  %60 = getelementptr inbounds float, ptr %T_relu, i64 %59
  store <32 x float> %58, ptr %60, align 64, !tbaa !7417
  %indvars.iv.next66 = add nsw i64 %indvars.iv65, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next66 to i32
  %exitcond67.not = icmp eq i32 %16, %lftr.wideiv
  br i1 %exitcond67.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_body_ax0.ax1.fused.ax2.fused, !prof !52

for_begin_ic.inner.preheader:                     ; preds = %for_body_ax0.ax1.fused.ax2.fused, %for_end_ic.inner
  %indvars.iv57 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.fused ], [ %indvars.iv.next58, %for_end_ic.inner ]
  %.lcssa1533 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %137, %for_end_ic.inner ]
  %.lcssa21732 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %138, %for_end_ic.inner ]
  %.lcssa41831 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %139, %for_end_ic.inner ]
  %.lcssa62030 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %140, %for_end_ic.inner ]
  %.lcssa82229 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %141, %for_end_ic.inner ]
  %.lcssa102428 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %142, %for_end_ic.inner ]
  %.lcssa122627 = phi <32 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %148, %for_end_ic.inner ]
  %indvars59 = trunc i64 %indvars.iv57 to i32
  %61 = add nsw i32 %18, %indvars59
  %62 = mul i32 %61, 4608
  %63 = mul nuw nsw i64 %indvars.iv57, 49152
  %64 = add nsw i64 %63, %21
  %65 = sext i32 %62 to i64
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %66 = phi <32 x float> [ %.lcssa1533, %for_begin_ic.inner.preheader ], [ %137, %for_body_ic.inner ]
  %67 = phi <32 x float> [ %.lcssa21732, %for_begin_ic.inner.preheader ], [ %138, %for_body_ic.inner ]
  %68 = phi <32 x float> [ %.lcssa41831, %for_begin_ic.inner.preheader ], [ %139, %for_body_ic.inner ]
  %69 = phi <32 x float> [ %.lcssa62030, %for_begin_ic.inner.preheader ], [ %140, %for_body_ic.inner ]
  %70 = phi <32 x float> [ %.lcssa82229, %for_begin_ic.inner.preheader ], [ %141, %for_body_ic.inner ]
  %71 = phi <32 x float> [ %.lcssa102428, %for_begin_ic.inner.preheader ], [ %142, %for_body_ic.inner ]
  %72 = phi <32 x float> [ %.lcssa122627, %for_begin_ic.inner.preheader ], [ %148, %for_body_ic.inner ]
  %73 = add nsw i64 %indvars.iv, %65
  %74 = shl nuw nsw i64 %indvars.iv, 5
  %75 = add nsw i64 %64, %74
  %76 = add nsw i64 %73, 512
  %77 = add nsw i64 %73, 3584
  %78 = add nsw i64 %73, 3072
  %79 = add nsw i64 %73, 2560
  %80 = add nsw i64 %73, 2048
  %81 = add nsw i64 %73, 1536
  %82 = add nsw i64 %73, 1024
  %83 = add nsw i64 %75, 32768
  %84 = add nsw i64 %75, 16384
  %85 = getelementptr inbounds float, ptr %data_pad, i64 %73
  %86 = load float, ptr %85, align 4, !tbaa !7411
  %87 = insertelement <32 x float> undef, float %86, i64 0
  %88 = shufflevector <32 x float> %87, <32 x float> undef, <32 x i32> zeroinitializer
  %89 = getelementptr inbounds float, ptr %p1, i64 %75
  %90 = load <32 x float>, ptr %89, align 64, !tbaa !7419
  %91 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %88, <32 x float> %90, <32 x float> %66)
  %92 = getelementptr inbounds float, ptr %data_pad, i64 %76
  %93 = load float, ptr %92, align 4, !tbaa !7411
  %94 = insertelement <32 x float> undef, float %93, i64 0
  %95 = shufflevector <32 x float> %94, <32 x float> undef, <32 x i32> zeroinitializer
  %96 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %95, <32 x float> %90, <32 x float> %67)
  %97 = getelementptr inbounds float, ptr %data_pad, i64 %82
  %98 = load float, ptr %97, align 4, !tbaa !7411
  %99 = insertelement <32 x float> undef, float %98, i64 0
  %100 = shufflevector <32 x float> %99, <32 x float> undef, <32 x i32> zeroinitializer
  %101 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %100, <32 x float> %90, <32 x float> %68)
  %102 = getelementptr inbounds float, ptr %data_pad, i64 %81
  %103 = load float, ptr %102, align 4, !tbaa !7411
  %104 = insertelement <32 x float> undef, float %103, i64 0
  %105 = shufflevector <32 x float> %104, <32 x float> undef, <32 x i32> zeroinitializer
  %106 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %105, <32 x float> %90, <32 x float> %69)
  %107 = getelementptr inbounds float, ptr %data_pad, i64 %80
  %108 = load float, ptr %107, align 4, !tbaa !7411
  %109 = insertelement <32 x float> undef, float %108, i64 0
  %110 = shufflevector <32 x float> %109, <32 x float> undef, <32 x i32> zeroinitializer
  %111 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %110, <32 x float> %90, <32 x float> %70)
  %112 = getelementptr inbounds float, ptr %data_pad, i64 %79
  %113 = load float, ptr %112, align 4, !tbaa !7411
  %114 = insertelement <32 x float> undef, float %113, i64 0
  %115 = shufflevector <32 x float> %114, <32 x float> undef, <32 x i32> zeroinitializer
  %116 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %115, <32 x float> %90, <32 x float> %71)
  %117 = getelementptr inbounds float, ptr %data_pad, i64 %78
  %118 = load float, ptr %117, align 4, !tbaa !7411
  %119 = insertelement <32 x float> undef, float %118, i64 0
  %120 = shufflevector <32 x float> %119, <32 x float> undef, <32 x i32> zeroinitializer
  %121 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %120, <32 x float> %90, <32 x float> %72)
  %122 = getelementptr inbounds float, ptr %p1, i64 %84
  %123 = load <32 x float>, ptr %122, align 64, !tbaa !7419
  %124 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %95, <32 x float> %123, <32 x float> %91)
  %125 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %100, <32 x float> %123, <32 x float> %96)
  %126 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %105, <32 x float> %123, <32 x float> %101)
  %127 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %110, <32 x float> %123, <32 x float> %106)
  %128 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %115, <32 x float> %123, <32 x float> %111)
  %129 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %120, <32 x float> %123, <32 x float> %116)
  %130 = getelementptr inbounds float, ptr %data_pad, i64 %77
  %131 = load float, ptr %130, align 4, !tbaa !7411
  %132 = insertelement <32 x float> undef, float %131, i64 0
  %133 = shufflevector <32 x float> %132, <32 x float> undef, <32 x i32> zeroinitializer
  %134 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %133, <32 x float> %123, <32 x float> %121)
  %135 = getelementptr inbounds float, ptr %p1, i64 %83
  %136 = load <32 x float>, ptr %135, align 64, !tbaa !7419
  %137 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %100, <32 x float> %136, <32 x float> %124)
  %138 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %105, <32 x float> %136, <32 x float> %125)
  %139 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %110, <32 x float> %136, <32 x float> %126)
  %140 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %115, <32 x float> %136, <32 x float> %127)
  %141 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %120, <32 x float> %136, <32 x float> %128)
  %142 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %133, <32 x float> %136, <32 x float> %129)
  %143 = add nsw i64 %73, 4096
  %144 = getelementptr inbounds float, ptr %data_pad, i64 %143
  %145 = load float, ptr %144, align 4, !tbaa !7411
  %146 = insertelement <32 x float> undef, float %145, i64 0
  %147 = shufflevector <32 x float> %146, <32 x float> undef, <32 x i32> zeroinitializer
  %148 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %147, <32 x float> %136, <32 x float> %134)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 512
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next58 = add nuw nsw i64 %indvars.iv57, 1
  %exitcond60.not = icmp eq i64 %indvars.iv.next58, 3
  br i1 %exitcond60.not, label %for_begin_ax3.inner.preheader, label %for_begin_ic.inner.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.40, align 8
  %6 = alloca %closure_loop_parallel_i0.i1.fused.i2.fused.39, align 8
  %7 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pad = tail call ptr %7(i32 1, i32 %0, i64 861184, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pad, i64 64) ]
  %8 = icmp eq ptr %data_pad, null
  br i1 %8, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end2, %call_end, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %11, %if_end ], [ %18, %call_end ], [ %., %call_end2 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %data_pad, ptr %6, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.39, ptr %6, i64 0, i32 1
  store ptr %1, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1471, ptr nonnull %6, i32 0)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %call_end, label %common.ret, !prof !18

call_end:                                         ; preds = %if_end
  store i32 %0, ptr %5, align 8
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.40, ptr %5, i64 0, i32 1
  store ptr %data_pad, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.40, ptr %5, i64 0, i32 2
  store ptr %2, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.40, ptr %5, i64 0, i32 3
  store ptr %3, ptr %15, align 8
  %16 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.40, ptr %5, i64 0, i32 4
  store ptr %4, ptr %16, align 8
  %17 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %18 = call i32 %17(ptr nonnull @__tvm_parallel_lambda.1472, ptr nonnull %5, i32 0)
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %call_end2, label %common.ret, !prof !18

call_end2:                                        ; preds = %call_end
  %20 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %21 = call i32 %20(i32 1, i32 %0, ptr nonnull %data_pad)
  %.not = icmp ne i32 %21, 0
  %. = sext i1 %.not to i32
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1471(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.39, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 57
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 58)
  %9 = mul nsw i32 %5, %task_id
  %.fr1 = freeze i32 %9
  %10 = tail call i32 @llvm.smin.i32(i32 %.fr1, i32 58)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_i3.preheader.preheader, label %for_end_i0.i1.fused.i2.fused, !prof !18

for_begin_i3.preheader.preheader:                 ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %.fr1, i32 58)
  %smin = sext i32 %12 to i64
  %13 = sub i32 %8, %10
  br label %for_begin_i3.preheader

for_begin_i3.preheader:                           ; preds = %for_begin_i3.preheader.preheader, %for_end_i3
  %indvars.iv9 = phi i64 [ %smin, %for_begin_i3.preheader.preheader ], [ %indvars.iv.next10, %for_end_i3 ]
  %indvar = phi i32 [ 0, %for_begin_i3.preheader.preheader ], [ %indvar.next, %for_end_i3 ]
  %14 = trunc i64 %indvars.iv9 to i32
  %15 = add i32 %14, -1
  %16 = icmp ult i32 %15, 56
  %17 = mul nsw i64 %indvars.iv9, 3712
  %18 = mul i64 %indvars.iv9, 3584
  %19 = add i64 %18, 4294963648
  br i1 %16, label %for_body_i3.us, label %for_body_i3.preheader

for_body_i3.preheader:                            ; preds = %for_begin_i3.preheader
  %20 = add i32 %10, %indvar
  %21 = mul i32 %20, 3712
  %22 = sext i32 %21 to i64
  %23 = shl nsw i64 %22, 2
  %scevgep = getelementptr i8, ptr %data_pad, i64 %23
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 64 dereferenceable(14848) %scevgep, i8 0, i64 14848, i1 false), !tbaa !7421
  br label %for_end_i3

for_body_i3.us:                                   ; preds = %for_begin_i3.preheader, %if_end.us.1
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %if_end.us.1 ], [ 0, %for_begin_i3.preheader ]
  %24 = shl nuw nsw i64 %indvars.iv, 6
  %25 = trunc i64 %indvars.iv to i32
  %cond = icmp eq i32 %25, 0
  br i1 %cond, label %if_end.us, label %if_then.us

if_then.us:                                       ; preds = %for_body_i3.us
  %26 = add nsw i64 %19, %24
  %sext = shl i64 %26, 32
  %27 = ashr exact i64 %sext, 32
  %28 = getelementptr inbounds float, ptr %p0, i64 %27
  %29 = load <64 x float>, ptr %28, align 64, !tbaa !7423
  br label %if_end.us

if_end.us:                                        ; preds = %for_body_i3.us, %if_then.us
  %30 = phi <64 x float> [ %29, %if_then.us ], [ zeroinitializer, %for_body_i3.us ]
  %31 = add nsw i64 %24, %17
  %32 = getelementptr inbounds float, ptr %data_pad, i64 %31
  store <64 x float> %30, ptr %32, align 64, !tbaa !7421
  %indvars.iv.next = or i64 %indvars.iv, 1
  %33 = shl nuw nsw i64 %indvars.iv.next, 6
  %34 = trunc i64 %indvars.iv.next to i32
  %cond12 = icmp eq i32 %34, 57
  br i1 %cond12, label %if_end.us.1, label %if_then.us.1

if_then.us.1:                                     ; preds = %if_end.us
  %35 = add nsw i64 %19, %33
  %sext.1 = shl i64 %35, 32
  %36 = ashr exact i64 %sext.1, 32
  %37 = getelementptr inbounds float, ptr %p0, i64 %36
  %38 = load <64 x float>, ptr %37, align 64, !tbaa !7423
  br label %if_end.us.1

if_end.us.1:                                      ; preds = %if_end.us, %if_then.us.1
  %39 = phi <64 x float> [ %38, %if_then.us.1 ], [ zeroinitializer, %if_end.us ]
  %40 = add nsw i64 %33, %17
  %41 = getelementptr inbounds float, ptr %data_pad, i64 %40
  store <64 x float> %39, ptr %41, align 64, !tbaa !7421
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 58
  br i1 %exitcond.not.1, label %for_end_i3, label %for_body_i3.us, !prof !7085

for_end_i0.i1.fused.i2.fused:                     ; preds = %for_end_i3, %parallel_closure_entry
  ret i32 0

for_end_i3:                                       ; preds = %if_end.us.1, %for_body_i3.preheader
  %indvars.iv.next10 = add nsw i64 %indvars.iv9, 1
  %indvar.next = add nuw i32 %indvar, 1
  %exitcond11.not = icmp eq i32 %indvar.next, %13
  br i1 %exitcond11.not, label %for_end_i0.i1.fused.i2.fused, label %for_begin_i3.preheader, !prof !52
}

define private i32 @__tvm_parallel_lambda.1472(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #0 {
parallel_closure_entry:
  %dev_id = load i32, ptr %1, align 4
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.40, ptr %1, i64 0, i32 1
  %data_pad = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.40, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.40, ptr %1, i64 0, i32 3
  %T_relu = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.40, ptr %1, i64 0, i32 4
  %p2 = load ptr, ptr %5, align 8
  %6 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %6, align 4
  %7 = add nsw i32 %num_task, 111
  %8 = sdiv i32 %7, %num_task
  %9 = add nsw i32 %task_id, 1
  %10 = mul nsw i32 %8, %9
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 112)
  %12 = mul i32 %8, %task_id
  %13 = tail call i32 @llvm.smin.i32(i32 %12, i32 112)
  %14 = icmp slt i32 %13, %11
  br i1 %14, label %for_body_ax0.ax1.fused.ax2.fused.lr.ph, label %common.ret, !prof !18

for_body_ax0.ax1.fused.ax2.fused.lr.ph:           ; preds = %parallel_closure_entry
  %15 = tail call i32 @llvm.smin.i32(i32 %12, i32 112)
  %smin = sext i32 %15 to i64
  %16 = add i32 %11, %15
  %17 = sub i32 %16, %13
  br label %for_body_ax0.ax1.fused.ax2.fused

for_begin_ax0.ax1.fused.ax2.fused:                ; preds = %for_end_ax3.outer
  %indvars.iv.next83 = add nsw i64 %indvars.iv82, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next83 to i32
  %exitcond84.not = icmp eq i32 %17, %lftr.wideiv
  br i1 %exitcond84.not, label %common.ret, label %for_body_ax0.ax1.fused.ax2.fused, !prof !52

for_body_ax0.ax1.fused.ax2.fused:                 ; preds = %for_body_ax0.ax1.fused.ax2.fused.lr.ph, %for_begin_ax0.ax1.fused.ax2.fused
  %indvars.iv82 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.fused.lr.ph ], [ %indvars.iv.next83, %for_begin_ax0.ax1.fused.ax2.fused ]
  %18 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %conv2d_NCHWc = tail call ptr %18(i32 1, i32 %dev_id, i64 7168, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %conv2d_NCHWc, i64 64) ]
  %19 = icmp eq ptr %conv2d_NCHWc, null
  br i1 %19, label %common.ret, label %for_begin_ow.outer.preheader, !prof !18

for_begin_ow.outer.preheader:                     ; preds = %for_body_ax0.ax1.fused.ax2.fused
  %20 = trunc i64 %indvars.iv82 to i32
  %21 = sdiv i32 %20, 56
  %22 = mul nsw i32 %21, 18432
  %23 = srem i32 %20, 56
  %24 = sext i32 %22 to i64
  br label %for_body_ow.outer

common.ret:                                       ; preds = %for_begin_ax0.ax1.fused.ax2.fused, %for_body_ax0.ax1.fused.ax2.fused, %for_end_ax3.outer, %parallel_closure_entry
  %common.ret.op = phi i32 [ 0, %parallel_closure_entry ], [ -1, %for_end_ax3.outer ], [ -1, %for_body_ax0.ax1.fused.ax2.fused ], [ 0, %for_begin_ax0.ax1.fused.ax2.fused ]
  ret i32 %common.ret.op

for_begin_ax3.outer.preheader:                    ; preds = %for_begin_ow.inner.preheader
  %25 = shl nsw i32 %21, 5
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds float, ptr %p2, i64 %26
  %28 = load <32 x float>, ptr %27, align 64, !tbaa !7425
  %29 = mul nsw i64 %indvars.iv82, 1792
  br label %for_begin_ax3.inner.preheader

for_body_ow.outer:                                ; preds = %for_begin_ow.outer.preheader, %for_begin_ow.inner.preheader
  %indvar = phi i64 [ 0, %for_begin_ow.outer.preheader ], [ %indvar.next, %for_begin_ow.inner.preheader ]
  %indvars72 = trunc i64 %indvar to i32
  %30 = mul nuw nsw i64 %indvar, 896
  %scevgep = getelementptr i8, ptr %conv2d_NCHWc, i64 %30
  %31 = mul nuw nsw i32 %indvars72, 448
  br label %for_begin_ic.inner.preheader

for_begin_ow.inner.preheader:                     ; preds = %for_end_ic.inner
  store <32 x float> %109, ptr %scevgep, align 64
  %conv2d_NCHWc.global4.sroa.3.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 128
  store <32 x float> %110, ptr %conv2d_NCHWc.global4.sroa.3.0.scevgep.sroa_idx, align 64
  %conv2d_NCHWc.global4.sroa.5.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 256
  store <32 x float> %111, ptr %conv2d_NCHWc.global4.sroa.5.0.scevgep.sroa_idx, align 64
  %conv2d_NCHWc.global4.sroa.7.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 384
  store <32 x float> %112, ptr %conv2d_NCHWc.global4.sroa.7.0.scevgep.sroa_idx, align 64
  %conv2d_NCHWc.global4.sroa.9.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 512
  store <32 x float> %113, ptr %conv2d_NCHWc.global4.sroa.9.0.scevgep.sroa_idx, align 64
  %conv2d_NCHWc.global4.sroa.11.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 640
  store <32 x float> %114, ptr %conv2d_NCHWc.global4.sroa.11.0.scevgep.sroa_idx, align 64
  %conv2d_NCHWc.global4.sroa.13.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 768
  store <32 x float> %120, ptr %conv2d_NCHWc.global4.sroa.13.0.scevgep.sroa_idx, align 64
  %indvar.next = add nuw nsw i64 %indvar, 1
  %exitcond73.not = icmp eq i64 %indvar.next, 8
  br i1 %exitcond73.not, label %for_begin_ax3.outer.preheader, label %for_body_ow.outer, !prof !52

for_begin_ic.inner.preheader:                     ; preds = %for_body_ow.outer, %for_end_ic.inner
  %indvars.iv65 = phi i64 [ 0, %for_body_ow.outer ], [ %indvars.iv.next66, %for_end_ic.inner ]
  %.lcssa1836 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %109, %for_end_ic.inner ]
  %.lcssa52035 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %110, %for_end_ic.inner ]
  %.lcssa72134 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %111, %for_end_ic.inner ]
  %.lcssa92333 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %112, %for_end_ic.inner ]
  %.lcssa112532 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %113, %for_end_ic.inner ]
  %.lcssa132731 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %114, %for_end_ic.inner ]
  %.lcssa152930 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %120, %for_end_ic.inner ]
  %indvars67 = trunc i64 %indvars.iv65 to i32
  %32 = mul nuw nsw i64 %indvars.iv65, 6144
  %33 = add nsw i64 %32, %24
  %34 = add nsw i32 %23, %indvars67
  %35 = mul i32 %34, 3712
  %36 = add nsw i32 %35, %31
  %37 = sext i32 %36 to i64
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %38 = phi <32 x float> [ %.lcssa1836, %for_begin_ic.inner.preheader ], [ %109, %for_body_ic.inner ]
  %39 = phi <32 x float> [ %.lcssa52035, %for_begin_ic.inner.preheader ], [ %110, %for_body_ic.inner ]
  %40 = phi <32 x float> [ %.lcssa72134, %for_begin_ic.inner.preheader ], [ %111, %for_body_ic.inner ]
  %41 = phi <32 x float> [ %.lcssa92333, %for_begin_ic.inner.preheader ], [ %112, %for_body_ic.inner ]
  %42 = phi <32 x float> [ %.lcssa112532, %for_begin_ic.inner.preheader ], [ %113, %for_body_ic.inner ]
  %43 = phi <32 x float> [ %.lcssa132731, %for_begin_ic.inner.preheader ], [ %114, %for_body_ic.inner ]
  %44 = phi <32 x float> [ %.lcssa152930, %for_begin_ic.inner.preheader ], [ %120, %for_body_ic.inner ]
  %45 = shl nuw nsw i64 %indvars.iv, 5
  %46 = add nsw i64 %33, %45
  %47 = add nsw i64 %indvars.iv, %37
  %48 = add nsw i64 %46, 4096
  %49 = add nsw i64 %46, 2048
  %50 = add nsw i64 %47, 64
  %51 = add nsw i64 %47, 448
  %52 = add nsw i64 %47, 384
  %53 = add nsw i64 %47, 320
  %54 = add nsw i64 %47, 256
  %55 = add nsw i64 %47, 192
  %56 = add nsw i64 %47, 128
  %57 = getelementptr inbounds float, ptr %data_pad, i64 %47
  %58 = load float, ptr %57, align 4, !tbaa !7421
  %59 = insertelement <32 x float> undef, float %58, i64 0
  %60 = shufflevector <32 x float> %59, <32 x float> undef, <32 x i32> zeroinitializer
  %61 = getelementptr inbounds float, ptr %p1, i64 %46
  %62 = load <32 x float>, ptr %61, align 64, !tbaa !7427
  %63 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %60, <32 x float> %62, <32 x float> %38)
  %64 = getelementptr inbounds float, ptr %data_pad, i64 %50
  %65 = load float, ptr %64, align 4, !tbaa !7421
  %66 = insertelement <32 x float> undef, float %65, i64 0
  %67 = shufflevector <32 x float> %66, <32 x float> undef, <32 x i32> zeroinitializer
  %68 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %67, <32 x float> %62, <32 x float> %39)
  %69 = getelementptr inbounds float, ptr %data_pad, i64 %56
  %70 = load float, ptr %69, align 4, !tbaa !7421
  %71 = insertelement <32 x float> undef, float %70, i64 0
  %72 = shufflevector <32 x float> %71, <32 x float> undef, <32 x i32> zeroinitializer
  %73 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %72, <32 x float> %62, <32 x float> %40)
  %74 = getelementptr inbounds float, ptr %data_pad, i64 %55
  %75 = load float, ptr %74, align 4, !tbaa !7421
  %76 = insertelement <32 x float> undef, float %75, i64 0
  %77 = shufflevector <32 x float> %76, <32 x float> undef, <32 x i32> zeroinitializer
  %78 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %77, <32 x float> %62, <32 x float> %41)
  %79 = getelementptr inbounds float, ptr %data_pad, i64 %54
  %80 = load float, ptr %79, align 4, !tbaa !7421
  %81 = insertelement <32 x float> undef, float %80, i64 0
  %82 = shufflevector <32 x float> %81, <32 x float> undef, <32 x i32> zeroinitializer
  %83 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %82, <32 x float> %62, <32 x float> %42)
  %84 = getelementptr inbounds float, ptr %data_pad, i64 %53
  %85 = load float, ptr %84, align 4, !tbaa !7421
  %86 = insertelement <32 x float> undef, float %85, i64 0
  %87 = shufflevector <32 x float> %86, <32 x float> undef, <32 x i32> zeroinitializer
  %88 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %87, <32 x float> %62, <32 x float> %43)
  %89 = getelementptr inbounds float, ptr %data_pad, i64 %52
  %90 = load float, ptr %89, align 4, !tbaa !7421
  %91 = insertelement <32 x float> undef, float %90, i64 0
  %92 = shufflevector <32 x float> %91, <32 x float> undef, <32 x i32> zeroinitializer
  %93 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %92, <32 x float> %62, <32 x float> %44)
  %94 = getelementptr inbounds float, ptr %p1, i64 %49
  %95 = load <32 x float>, ptr %94, align 64, !tbaa !7427
  %96 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %67, <32 x float> %95, <32 x float> %63)
  %97 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %72, <32 x float> %95, <32 x float> %68)
  %98 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %77, <32 x float> %95, <32 x float> %73)
  %99 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %82, <32 x float> %95, <32 x float> %78)
  %100 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %87, <32 x float> %95, <32 x float> %83)
  %101 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %92, <32 x float> %95, <32 x float> %88)
  %102 = getelementptr inbounds float, ptr %data_pad, i64 %51
  %103 = load float, ptr %102, align 4, !tbaa !7421
  %104 = insertelement <32 x float> undef, float %103, i64 0
  %105 = shufflevector <32 x float> %104, <32 x float> undef, <32 x i32> zeroinitializer
  %106 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %105, <32 x float> %95, <32 x float> %93)
  %107 = getelementptr inbounds float, ptr %p1, i64 %48
  %108 = load <32 x float>, ptr %107, align 64, !tbaa !7427
  %109 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %72, <32 x float> %108, <32 x float> %96)
  %110 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %77, <32 x float> %108, <32 x float> %97)
  %111 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %82, <32 x float> %108, <32 x float> %98)
  %112 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %87, <32 x float> %108, <32 x float> %99)
  %113 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %92, <32 x float> %108, <32 x float> %100)
  %114 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %105, <32 x float> %108, <32 x float> %101)
  %115 = add nsw i64 %47, 512
  %116 = getelementptr inbounds float, ptr %data_pad, i64 %115
  %117 = load float, ptr %116, align 4, !tbaa !7421
  %118 = insertelement <32 x float> undef, float %117, i64 0
  %119 = shufflevector <32 x float> %118, <32 x float> undef, <32 x i32> zeroinitializer
  %120 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %119, <32 x float> %108, <32 x float> %106)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 64
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next66 = add nuw nsw i64 %indvars.iv65, 1
  %exitcond68.not = icmp eq i64 %indvars.iv.next66, 3
  br i1 %exitcond68.not, label %for_begin_ow.inner.preheader, label %for_begin_ic.inner.preheader, !prof !52

for_begin_ax3.inner.preheader:                    ; preds = %for_begin_ax3.outer.preheader, %for_begin_ax3.inner.preheader
  %indvars.iv78 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next79, %for_begin_ax3.inner.preheader ]
  %121 = mul nuw nsw i64 %indvars.iv78, 7
  %122 = mul nuw nsw i64 %indvars.iv78, 224
  %123 = add nsw i64 %122, %29
  %124 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %121
  %125 = load <32 x float>, ptr %124, align 64, !tbaa !7429
  %126 = fadd <32 x float> %28, %125
  %127 = fcmp ogt <32 x float> %126, zeroinitializer
  %128 = select <32 x i1> %127, <32 x float> %126, <32 x float> zeroinitializer
  %129 = getelementptr inbounds float, ptr %T_relu, i64 %123
  store <32 x float> %128, ptr %129, align 64, !tbaa !7431
  %130 = add nuw nsw i64 %121, 1
  %131 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %130
  %132 = load <32 x float>, ptr %131, align 64, !tbaa !7429
  %133 = fadd <32 x float> %28, %132
  %134 = fcmp ogt <32 x float> %133, zeroinitializer
  %135 = select <32 x i1> %134, <32 x float> %133, <32 x float> zeroinitializer
  %136 = add nsw i64 %123, 32
  %137 = getelementptr inbounds float, ptr %T_relu, i64 %136
  store <32 x float> %135, ptr %137, align 64, !tbaa !7431
  %138 = add nuw nsw i64 %121, 2
  %139 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %138
  %140 = load <32 x float>, ptr %139, align 64, !tbaa !7429
  %141 = fadd <32 x float> %28, %140
  %142 = fcmp ogt <32 x float> %141, zeroinitializer
  %143 = select <32 x i1> %142, <32 x float> %141, <32 x float> zeroinitializer
  %144 = add nsw i64 %123, 64
  %145 = getelementptr inbounds float, ptr %T_relu, i64 %144
  store <32 x float> %143, ptr %145, align 64, !tbaa !7431
  %146 = add nuw nsw i64 %121, 3
  %147 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %146
  %148 = load <32 x float>, ptr %147, align 64, !tbaa !7429
  %149 = fadd <32 x float> %28, %148
  %150 = fcmp ogt <32 x float> %149, zeroinitializer
  %151 = select <32 x i1> %150, <32 x float> %149, <32 x float> zeroinitializer
  %152 = add nsw i64 %123, 96
  %153 = getelementptr inbounds float, ptr %T_relu, i64 %152
  store <32 x float> %151, ptr %153, align 64, !tbaa !7431
  %154 = add nuw nsw i64 %121, 4
  %155 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %154
  %156 = load <32 x float>, ptr %155, align 64, !tbaa !7429
  %157 = fadd <32 x float> %28, %156
  %158 = fcmp ogt <32 x float> %157, zeroinitializer
  %159 = select <32 x i1> %158, <32 x float> %157, <32 x float> zeroinitializer
  %160 = add nsw i64 %123, 128
  %161 = getelementptr inbounds float, ptr %T_relu, i64 %160
  store <32 x float> %159, ptr %161, align 64, !tbaa !7431
  %162 = add nuw nsw i64 %121, 5
  %163 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %162
  %164 = load <32 x float>, ptr %163, align 64, !tbaa !7429
  %165 = fadd <32 x float> %28, %164
  %166 = fcmp ogt <32 x float> %165, zeroinitializer
  %167 = select <32 x i1> %166, <32 x float> %165, <32 x float> zeroinitializer
  %168 = add nsw i64 %123, 160
  %169 = getelementptr inbounds float, ptr %T_relu, i64 %168
  store <32 x float> %167, ptr %169, align 64, !tbaa !7431
  %170 = add nuw nsw i64 %121, 6
  %171 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %170
  %172 = load <32 x float>, ptr %171, align 64, !tbaa !7429
  %173 = fadd <32 x float> %28, %172
  %174 = fcmp ogt <32 x float> %173, zeroinitializer
  %175 = select <32 x i1> %174, <32 x float> %173, <32 x float> zeroinitializer
  %176 = add nsw i64 %123, 192
  %177 = getelementptr inbounds float, ptr %T_relu, i64 %176
  store <32 x float> %175, ptr %177, align 64, !tbaa !7431
  %indvars.iv.next79 = add nuw nsw i64 %indvars.iv78, 1
  %exitcond81.not = icmp eq i64 %indvars.iv.next79, 8
  br i1 %exitcond81.not, label %for_end_ax3.outer, label %for_begin_ax3.inner.preheader, !prof !52

for_end_ax3.outer:                                ; preds = %for_begin_ax3.inner.preheader
  %178 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %179 = tail call i32 %178(i32 1, i32 %dev_id, ptr nonnull %conv2d_NCHWc)
  %.not = icmp eq i32 %179, 0
  br i1 %.not, label %for_begin_ax0.ax1.fused.ax2.fused, label %common.ret, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.41, align 8
  store i32 %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.41, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.41, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.41, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.41, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1522, ptr nonnull %5, i32 0)
  ret i32 %11
}

define private i32 @__tvm_parallel_lambda.1522(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #0 {
parallel_closure_entry:
  %dev_id = load i32, ptr %1, align 4
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.41, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.41, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.41, ptr %1, i64 0, i32 3
  %T_relu = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.41, ptr %1, i64 0, i32 4
  %p2 = load ptr, ptr %5, align 8
  %6 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %6, align 4
  %7 = add nsw i32 %num_task, 111
  %8 = sdiv i32 %7, %num_task
  %9 = add nsw i32 %task_id, 1
  %10 = mul nsw i32 %8, %9
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 112)
  %12 = mul i32 %8, %task_id
  %13 = tail call i32 @llvm.smin.i32(i32 %12, i32 112)
  %14 = icmp slt i32 %13, %11
  br i1 %14, label %for_body_ax0.ax1.fused.ax2.outer.fused.preheader, label %common.ret, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.preheader: ; preds = %parallel_closure_entry
  %15 = tail call i32 @llvm.smin.i32(i32 %12, i32 112)
  %smin = sext i32 %15 to i64
  %16 = add i32 %11, %15
  %17 = sub i32 %16, %13
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_begin_ax0.ax1.fused.ax2.outer.fused:          ; preds = %for_end_ax3.outer
  %indvars.iv.next46 = add nsw i64 %indvars.iv45, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next46 to i32
  %exitcond47.not = icmp eq i32 %17, %lftr.wideiv
  br i1 %exitcond47.not, label %common.ret, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !52

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.preheader, %for_begin_ax0.ax1.fused.ax2.outer.fused
  %indvars.iv45 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.preheader ], [ %indvars.iv.next46, %for_begin_ax0.ax1.fused.ax2.outer.fused ]
  %18 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %conv2d_NCHWc.global = tail call ptr %18(i32 1, i32 %dev_id, i64 7168, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %conv2d_NCHWc.global, i64 64) ]
  %19 = icmp eq ptr %conv2d_NCHWc.global, null
  br i1 %19, label %common.ret, label %for_begin_ow.c.outer.preheader, !prof !18

for_begin_ow.c.outer.preheader:                   ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused
  %20 = trunc i64 %indvars.iv45 to i32
  %21 = sdiv i32 %20, 56
  %22 = shl nsw i32 %21, 13
  %23 = srem i32 %20, 56
  %24 = mul nsw i32 %23, 14336
  %25 = sext i32 %22 to i64
  %26 = sext i32 %24 to i64
  br label %for_body_ow.c.outer

common.ret:                                       ; preds = %for_begin_ax0.ax1.fused.ax2.outer.fused, %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ax3.outer, %parallel_closure_entry
  %common.ret.op = phi i32 [ 0, %parallel_closure_entry ], [ -1, %for_end_ax3.outer ], [ -1, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ 0, %for_begin_ax0.ax1.fused.ax2.outer.fused ]
  ret i32 %common.ret.op

for_begin_ax3.outer.preheader:                    ; preds = %for_end_ic.inner
  %27 = shl nsw i32 %21, 5
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds float, ptr %p2, i64 %28
  %30 = load <32 x float>, ptr %29, align 64, !tbaa !7433
  %31 = mul nsw i64 %indvars.iv45, 1792
  br label %for_begin_ax3.inner.preheader

for_body_ow.c.outer:                              ; preds = %for_begin_ow.c.outer.preheader, %for_end_ic.inner
  %indvars.iv32 = phi i64 [ 0, %for_begin_ow.c.outer.preheader ], [ %indvars.iv.next33, %for_end_ic.inner ]
  %32 = mul nuw nsw i64 %indvars.iv32, 7
  %33 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %32
  %34 = add nuw nsw i64 %32, 1
  %35 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %34
  %36 = add nuw nsw i64 %32, 2
  %37 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %36
  %38 = add nuw nsw i64 %32, 3
  %39 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %38
  %40 = add nuw nsw i64 %32, 4
  %41 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %40
  %42 = add nuw nsw i64 %32, 5
  %43 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %42
  %44 = add nuw nsw i64 %32, 6
  %45 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %44
  %46 = mul nuw nsw i64 %indvars.iv32, 1792
  %47 = add nsw i64 %46, %26
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_body_ow.c.outer, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_body_ow.c.outer ], [ %indvars.iv.next, %for_body_ic.inner ]
  %48 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %64, %for_body_ic.inner ]
  %49 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %70, %for_body_ic.inner ]
  %50 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %76, %for_body_ic.inner ]
  %51 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %82, %for_body_ic.inner ]
  %52 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %88, %for_body_ic.inner ]
  %53 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %94, %for_body_ic.inner ]
  %54 = phi <32 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %100, %for_body_ic.inner ]
  %55 = shl nuw nsw i64 %indvars.iv, 5
  %56 = add nuw nsw i64 %55, %25
  %57 = add nsw i64 %47, %indvars.iv
  %58 = getelementptr inbounds float, ptr %p0, i64 %57
  %59 = load float, ptr %58, align 4, !tbaa !7435
  %60 = insertelement <32 x float> undef, float %59, i64 0
  %61 = shufflevector <32 x float> %60, <32 x float> undef, <32 x i32> zeroinitializer
  %62 = getelementptr inbounds float, ptr %p1, i64 %56
  %63 = load <32 x float>, ptr %62, align 64, !tbaa !7437
  %64 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %61, <32 x float> %63, <32 x float> %48)
  %65 = add nsw i64 %57, 256
  %66 = getelementptr inbounds float, ptr %p0, i64 %65
  %67 = load float, ptr %66, align 4, !tbaa !7435
  %68 = insertelement <32 x float> undef, float %67, i64 0
  %69 = shufflevector <32 x float> %68, <32 x float> undef, <32 x i32> zeroinitializer
  %70 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %69, <32 x float> %63, <32 x float> %49)
  %71 = add nsw i64 %57, 512
  %72 = getelementptr inbounds float, ptr %p0, i64 %71
  %73 = load float, ptr %72, align 4, !tbaa !7435
  %74 = insertelement <32 x float> undef, float %73, i64 0
  %75 = shufflevector <32 x float> %74, <32 x float> undef, <32 x i32> zeroinitializer
  %76 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %75, <32 x float> %63, <32 x float> %50)
  %77 = add nsw i64 %57, 768
  %78 = getelementptr inbounds float, ptr %p0, i64 %77
  %79 = load float, ptr %78, align 4, !tbaa !7435
  %80 = insertelement <32 x float> undef, float %79, i64 0
  %81 = shufflevector <32 x float> %80, <32 x float> undef, <32 x i32> zeroinitializer
  %82 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %81, <32 x float> %63, <32 x float> %51)
  %83 = add nsw i64 %57, 1024
  %84 = getelementptr inbounds float, ptr %p0, i64 %83
  %85 = load float, ptr %84, align 4, !tbaa !7435
  %86 = insertelement <32 x float> undef, float %85, i64 0
  %87 = shufflevector <32 x float> %86, <32 x float> undef, <32 x i32> zeroinitializer
  %88 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %87, <32 x float> %63, <32 x float> %52)
  %89 = add nsw i64 %57, 1280
  %90 = getelementptr inbounds float, ptr %p0, i64 %89
  %91 = load float, ptr %90, align 4, !tbaa !7435
  %92 = insertelement <32 x float> undef, float %91, i64 0
  %93 = shufflevector <32 x float> %92, <32 x float> undef, <32 x i32> zeroinitializer
  %94 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %93, <32 x float> %63, <32 x float> %53)
  %95 = add nsw i64 %57, 1536
  %96 = getelementptr inbounds float, ptr %p0, i64 %95
  %97 = load float, ptr %96, align 4, !tbaa !7435
  %98 = insertelement <32 x float> undef, float %97, i64 0
  %99 = shufflevector <32 x float> %98, <32 x float> undef, <32 x i32> zeroinitializer
  %100 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %99, <32 x float> %63, <32 x float> %54)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 256
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  store <32 x float> %64, ptr %33, align 64, !tbaa !7439
  store <32 x float> %70, ptr %35, align 64, !tbaa !7439
  store <32 x float> %76, ptr %37, align 64, !tbaa !7439
  store <32 x float> %82, ptr %39, align 64, !tbaa !7439
  store <32 x float> %88, ptr %41, align 64, !tbaa !7439
  store <32 x float> %94, ptr %43, align 64, !tbaa !7439
  store <32 x float> %100, ptr %45, align 64, !tbaa !7439
  %indvars.iv.next33 = add nuw nsw i64 %indvars.iv32, 1
  %exitcond36.not = icmp eq i64 %indvars.iv.next33, 8
  br i1 %exitcond36.not, label %for_begin_ax3.outer.preheader, label %for_body_ow.c.outer, !prof !52

for_begin_ax3.inner.preheader:                    ; preds = %for_begin_ax3.outer.preheader, %for_begin_ax3.inner.preheader
  %indvars.iv41 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next42, %for_begin_ax3.inner.preheader ]
  %101 = mul nuw nsw i64 %indvars.iv41, 7
  %102 = mul nuw nsw i64 %indvars.iv41, 224
  %103 = add nsw i64 %102, %31
  %104 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %101
  %105 = load <32 x float>, ptr %104, align 64, !tbaa !7439
  %106 = fadd <32 x float> %30, %105
  %107 = fcmp ogt <32 x float> %106, zeroinitializer
  %108 = select <32 x i1> %107, <32 x float> %106, <32 x float> zeroinitializer
  %109 = getelementptr inbounds float, ptr %T_relu, i64 %103
  store <32 x float> %108, ptr %109, align 64, !tbaa !7441
  %110 = add nuw nsw i64 %101, 1
  %111 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %110
  %112 = load <32 x float>, ptr %111, align 64, !tbaa !7439
  %113 = fadd <32 x float> %30, %112
  %114 = fcmp ogt <32 x float> %113, zeroinitializer
  %115 = select <32 x i1> %114, <32 x float> %113, <32 x float> zeroinitializer
  %116 = add nsw i64 %103, 32
  %117 = getelementptr inbounds float, ptr %T_relu, i64 %116
  store <32 x float> %115, ptr %117, align 64, !tbaa !7441
  %118 = add nuw nsw i64 %101, 2
  %119 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %118
  %120 = load <32 x float>, ptr %119, align 64, !tbaa !7439
  %121 = fadd <32 x float> %30, %120
  %122 = fcmp ogt <32 x float> %121, zeroinitializer
  %123 = select <32 x i1> %122, <32 x float> %121, <32 x float> zeroinitializer
  %124 = add nsw i64 %103, 64
  %125 = getelementptr inbounds float, ptr %T_relu, i64 %124
  store <32 x float> %123, ptr %125, align 64, !tbaa !7441
  %126 = add nuw nsw i64 %101, 3
  %127 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %126
  %128 = load <32 x float>, ptr %127, align 64, !tbaa !7439
  %129 = fadd <32 x float> %30, %128
  %130 = fcmp ogt <32 x float> %129, zeroinitializer
  %131 = select <32 x i1> %130, <32 x float> %129, <32 x float> zeroinitializer
  %132 = add nsw i64 %103, 96
  %133 = getelementptr inbounds float, ptr %T_relu, i64 %132
  store <32 x float> %131, ptr %133, align 64, !tbaa !7441
  %134 = add nuw nsw i64 %101, 4
  %135 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %134
  %136 = load <32 x float>, ptr %135, align 64, !tbaa !7439
  %137 = fadd <32 x float> %30, %136
  %138 = fcmp ogt <32 x float> %137, zeroinitializer
  %139 = select <32 x i1> %138, <32 x float> %137, <32 x float> zeroinitializer
  %140 = add nsw i64 %103, 128
  %141 = getelementptr inbounds float, ptr %T_relu, i64 %140
  store <32 x float> %139, ptr %141, align 64, !tbaa !7441
  %142 = add nuw nsw i64 %101, 5
  %143 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %142
  %144 = load <32 x float>, ptr %143, align 64, !tbaa !7439
  %145 = fadd <32 x float> %30, %144
  %146 = fcmp ogt <32 x float> %145, zeroinitializer
  %147 = select <32 x i1> %146, <32 x float> %145, <32 x float> zeroinitializer
  %148 = add nsw i64 %103, 160
  %149 = getelementptr inbounds float, ptr %T_relu, i64 %148
  store <32 x float> %147, ptr %149, align 64, !tbaa !7441
  %150 = add nuw nsw i64 %101, 6
  %151 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc.global, i64 %150
  %152 = load <32 x float>, ptr %151, align 64, !tbaa !7439
  %153 = fadd <32 x float> %30, %152
  %154 = fcmp ogt <32 x float> %153, zeroinitializer
  %155 = select <32 x i1> %154, <32 x float> %153, <32 x float> zeroinitializer
  %156 = add nsw i64 %103, 192
  %157 = getelementptr inbounds float, ptr %T_relu, i64 %156
  store <32 x float> %155, ptr %157, align 64, !tbaa !7441
  %indvars.iv.next42 = add nuw nsw i64 %indvars.iv41, 1
  %exitcond44.not = icmp eq i64 %indvars.iv.next42, 8
  br i1 %exitcond44.not, label %for_end_ax3.outer, label %for_begin_ax3.inner.preheader, !prof !52

for_end_ax3.outer:                                ; preds = %for_begin_ax3.inner.preheader
  %158 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %159 = tail call i32 %158(i32 1, i32 %dev_id, ptr nonnull %conv2d_NCHWc.global)
  %.not = icmp eq i32 %159, 0
  br i1 %.not, label %for_begin_ax0.ax1.fused.ax2.outer.fused, label %common.ret, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3) unnamed_addr #2 {
entry:
  %4 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.42, align 8
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.42, ptr %4, i64 0, i32 1
  store ptr %1, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.42, ptr %4, i64 0, i32 2
  store ptr %2, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.42, ptr %4, i64 0, i32 3
  store ptr %3, ptr %7, align 8
  %8 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %9 = call i32 %8(ptr nonnull @__tvm_parallel_lambda.1572, ptr nonnull %4, i32 0)
  ret i32 %9
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1572(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %conv2d_NCHWc.global1 = alloca [56 x <4 x float>], align 16
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.42, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.42, ptr %1, i64 0, i32 2
  %T_relu = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.42, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 1791
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 1792)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 1792)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_begin_ow.c.outer.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_begin_ow.c.outer.preheader.preheader:         ; preds = %parallel_closure_entry
  %14 = tail call i32 @llvm.smin.i32(i32 %11, i32 1792)
  %smin = sext i32 %14 to i64
  %15 = add i32 %10, %14
  %16 = sub i32 %15, %12
  br label %for_begin_ow.c.outer.preheader

for_begin_ow.c.outer.preheader:                   ; preds = %for_begin_ow.c.outer.preheader.preheader, %for_end_ax3.inner.1
  %indvars.iv190 = phi i64 [ %smin, %for_begin_ow.c.outer.preheader.preheader ], [ %indvars.iv.next191, %for_end_ax3.inner.1 ]
  %17 = trunc i64 %indvars.iv190 to i32
  %18 = sdiv i32 %17, 56
  %19 = shl nsw i32 %18, 10
  %20 = srem i32 %17, 56
  %21 = mul nsw i32 %20, 224
  %22 = sext i32 %19 to i64
  %23 = sext i32 %21 to i64
  br label %for_body_ow.c.outer

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_end_ax3.inner.1, %parallel_closure_entry
  ret i32 0

for_begin_ax3.outer.preheader:                    ; preds = %for_end_ic.outer
  %24 = shl nsw i32 %18, 2
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds float, ptr %p2, i64 %25
  %27 = load <4 x float>, ptr %26, align 16, !tbaa !7443
  %28 = mul nsw i64 %indvars.iv190, 224
  br label %for_body_ax3.inner

for_body_ow.c.outer:                              ; preds = %for_begin_ow.c.outer.preheader, %for_end_ic.outer
  %29 = phi i1 [ true, %for_begin_ow.c.outer.preheader ], [ false, %for_end_ic.outer ]
  %indvars.iv179 = phi i64 [ 0, %for_begin_ow.c.outer.preheader ], [ 1, %for_end_ic.outer ]
  %30 = mul nuw nsw i64 %indvars.iv179, 28
  %31 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %30
  store <4 x float> zeroinitializer, ptr %31, align 16, !tbaa !7445
  %32 = or i64 %30, 1
  %33 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %32
  store <4 x float> zeroinitializer, ptr %33, align 16, !tbaa !7445
  %34 = or i64 %30, 2
  %35 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %34
  store <4 x float> zeroinitializer, ptr %35, align 16, !tbaa !7445
  %36 = or i64 %30, 3
  %37 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %36
  store <4 x float> zeroinitializer, ptr %37, align 16, !tbaa !7445
  %38 = add nuw nsw i64 %30, 4
  %39 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %38
  store <4 x float> zeroinitializer, ptr %39, align 16, !tbaa !7445
  %40 = add nuw nsw i64 %30, 5
  %41 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %40
  store <4 x float> zeroinitializer, ptr %41, align 16, !tbaa !7445
  %42 = add nuw nsw i64 %30, 6
  %43 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %42
  store <4 x float> zeroinitializer, ptr %43, align 16, !tbaa !7445
  %44 = add nuw nsw i64 %30, 7
  %45 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %44
  store <4 x float> zeroinitializer, ptr %45, align 16, !tbaa !7445
  %46 = add nuw nsw i64 %30, 8
  %47 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %46
  store <4 x float> zeroinitializer, ptr %47, align 16, !tbaa !7445
  %48 = add nuw nsw i64 %30, 9
  %49 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %48
  store <4 x float> zeroinitializer, ptr %49, align 16, !tbaa !7445
  %50 = add nuw nsw i64 %30, 10
  %51 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %50
  store <4 x float> zeroinitializer, ptr %51, align 16, !tbaa !7445
  %52 = add nuw nsw i64 %30, 11
  %53 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %52
  store <4 x float> zeroinitializer, ptr %53, align 16, !tbaa !7445
  %54 = add nuw nsw i64 %30, 12
  %55 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %54
  store <4 x float> zeroinitializer, ptr %55, align 16, !tbaa !7445
  %56 = add nuw nsw i64 %30, 13
  %57 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %56
  %58 = add nuw nsw i64 %30, 14
  %59 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %58
  %60 = add nuw nsw i64 %30, 15
  %61 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %60
  %62 = add nuw nsw i64 %30, 16
  %63 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %62
  %64 = add nuw nsw i64 %30, 17
  %65 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %64
  %66 = add nuw nsw i64 %30, 18
  %67 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %66
  %68 = add nuw nsw i64 %30, 19
  %69 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %68
  %70 = add nuw nsw i64 %30, 20
  %71 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %70
  %72 = add nuw nsw i64 %30, 21
  %73 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %72
  %74 = add nuw nsw i64 %30, 22
  %75 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %74
  %76 = add nuw nsw i64 %30, 23
  %77 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %76
  %78 = add nuw nsw i64 %30, 24
  %79 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %78
  %80 = add nuw nsw i64 %30, 25
  %81 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %80
  %82 = add nuw nsw i64 %30, 26
  %83 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %82
  %84 = add nuw nsw i64 %30, 27
  %85 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %84
  %86 = mul nuw nsw i64 %indvars.iv179, 112
  %87 = add nsw i64 %86, %23
  br label %for_begin_ic.inner.preheader

for_begin_ic.inner.preheader:                     ; preds = %for_body_ow.c.outer, %for_end_ic.inner
  %indvars.iv175 = phi i64 [ 0, %for_body_ow.c.outer ], [ %indvars.iv.next176, %for_end_ic.inner ]
  %.lcssa58139 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %129, %for_end_ic.inner ]
  %.lcssa359138 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %135, %for_end_ic.inner ]
  %.lcssa561137 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %141, %for_end_ic.inner ]
  %.lcssa763136 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %147, %for_end_ic.inner ]
  %.lcssa965135 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %153, %for_end_ic.inner ]
  %.lcssa1167134 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %159, %for_end_ic.inner ]
  %.lcssa1369133 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %165, %for_end_ic.inner ]
  %.lcssa1571132 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %171, %for_end_ic.inner ]
  %.lcssa1773131 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %177, %for_end_ic.inner ]
  %.lcssa1975130 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %183, %for_end_ic.inner ]
  %.lcssa2177129 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %189, %for_end_ic.inner ]
  %.lcssa2379128 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %195, %for_end_ic.inner ]
  %.lcssa2581127 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %201, %for_end_ic.inner ]
  %.lcssa2783126 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %207, %for_end_ic.inner ]
  %.lcssa2985125 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %213, %for_end_ic.inner ]
  %.lcssa3187124 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %219, %for_end_ic.inner ]
  %.lcssa3389123 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %225, %for_end_ic.inner ]
  %.lcssa3591122 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %231, %for_end_ic.inner ]
  %.lcssa3793121 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %237, %for_end_ic.inner ]
  %.lcssa3995120 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %243, %for_end_ic.inner ]
  %.lcssa4197119 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %249, %for_end_ic.inner ]
  %.lcssa4399118 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %255, %for_end_ic.inner ]
  %.lcssa45101117 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %261, %for_end_ic.inner ]
  %.lcssa47103116 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %267, %for_end_ic.inner ]
  %.lcssa49105115 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %273, %for_end_ic.inner ]
  %.lcssa51107114 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %279, %for_end_ic.inner ]
  %.lcssa53109113 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %285, %for_end_ic.inner ]
  %.lcssa55111112 = phi <4 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %291, %for_end_ic.inner ]
  %88 = shl nsw i64 %indvars.iv175, 4
  %89 = add nuw nsw i64 %88, %22
  %90 = mul nuw nsw i64 %indvars.iv175, 12544
  %91 = add nsw i64 %87, %90
  br label %for_body_ic.inner

for_end_ic.outer:                                 ; preds = %for_end_ic.inner
  store <4 x float> %129, ptr %31, align 16, !tbaa !7445
  store <4 x float> %135, ptr %33, align 16, !tbaa !7445
  store <4 x float> %141, ptr %35, align 16, !tbaa !7445
  store <4 x float> %147, ptr %37, align 16, !tbaa !7445
  store <4 x float> %153, ptr %39, align 16, !tbaa !7445
  store <4 x float> %159, ptr %41, align 16, !tbaa !7445
  store <4 x float> %165, ptr %43, align 16, !tbaa !7445
  store <4 x float> %171, ptr %45, align 16, !tbaa !7445
  store <4 x float> %177, ptr %47, align 16, !tbaa !7445
  store <4 x float> %183, ptr %49, align 16, !tbaa !7445
  store <4 x float> %189, ptr %51, align 16, !tbaa !7445
  store <4 x float> %195, ptr %53, align 16, !tbaa !7445
  store <4 x float> %201, ptr %55, align 16, !tbaa !7445
  store <4 x float> %207, ptr %57, align 16, !tbaa !7445
  store <4 x float> %213, ptr %59, align 16, !tbaa !7445
  store <4 x float> %219, ptr %61, align 16, !tbaa !7445
  store <4 x float> %225, ptr %63, align 16, !tbaa !7445
  store <4 x float> %231, ptr %65, align 16, !tbaa !7445
  store <4 x float> %237, ptr %67, align 16, !tbaa !7445
  store <4 x float> %243, ptr %69, align 16, !tbaa !7445
  store <4 x float> %249, ptr %71, align 16, !tbaa !7445
  store <4 x float> %255, ptr %73, align 16, !tbaa !7445
  store <4 x float> %261, ptr %75, align 16, !tbaa !7445
  store <4 x float> %267, ptr %77, align 16, !tbaa !7445
  store <4 x float> %273, ptr %79, align 16, !tbaa !7445
  store <4 x float> %279, ptr %81, align 16, !tbaa !7445
  store <4 x float> %285, ptr %83, align 16, !tbaa !7445
  store <4 x float> %291, ptr %85, align 16, !tbaa !7445
  br i1 %29, label %for_body_ow.c.outer, label %for_begin_ax3.outer.preheader, !prof !18

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %92 = phi <4 x float> [ %.lcssa58139, %for_begin_ic.inner.preheader ], [ %129, %for_body_ic.inner ]
  %93 = phi <4 x float> [ %.lcssa359138, %for_begin_ic.inner.preheader ], [ %135, %for_body_ic.inner ]
  %94 = phi <4 x float> [ %.lcssa561137, %for_begin_ic.inner.preheader ], [ %141, %for_body_ic.inner ]
  %95 = phi <4 x float> [ %.lcssa763136, %for_begin_ic.inner.preheader ], [ %147, %for_body_ic.inner ]
  %96 = phi <4 x float> [ %.lcssa965135, %for_begin_ic.inner.preheader ], [ %153, %for_body_ic.inner ]
  %97 = phi <4 x float> [ %.lcssa1167134, %for_begin_ic.inner.preheader ], [ %159, %for_body_ic.inner ]
  %98 = phi <4 x float> [ %.lcssa1369133, %for_begin_ic.inner.preheader ], [ %165, %for_body_ic.inner ]
  %99 = phi <4 x float> [ %.lcssa1571132, %for_begin_ic.inner.preheader ], [ %171, %for_body_ic.inner ]
  %100 = phi <4 x float> [ %.lcssa1773131, %for_begin_ic.inner.preheader ], [ %177, %for_body_ic.inner ]
  %101 = phi <4 x float> [ %.lcssa1975130, %for_begin_ic.inner.preheader ], [ %183, %for_body_ic.inner ]
  %102 = phi <4 x float> [ %.lcssa2177129, %for_begin_ic.inner.preheader ], [ %189, %for_body_ic.inner ]
  %103 = phi <4 x float> [ %.lcssa2379128, %for_begin_ic.inner.preheader ], [ %195, %for_body_ic.inner ]
  %104 = phi <4 x float> [ %.lcssa2581127, %for_begin_ic.inner.preheader ], [ %201, %for_body_ic.inner ]
  %105 = phi <4 x float> [ %.lcssa2783126, %for_begin_ic.inner.preheader ], [ %207, %for_body_ic.inner ]
  %106 = phi <4 x float> [ %.lcssa2985125, %for_begin_ic.inner.preheader ], [ %213, %for_body_ic.inner ]
  %107 = phi <4 x float> [ %.lcssa3187124, %for_begin_ic.inner.preheader ], [ %219, %for_body_ic.inner ]
  %108 = phi <4 x float> [ %.lcssa3389123, %for_begin_ic.inner.preheader ], [ %225, %for_body_ic.inner ]
  %109 = phi <4 x float> [ %.lcssa3591122, %for_begin_ic.inner.preheader ], [ %231, %for_body_ic.inner ]
  %110 = phi <4 x float> [ %.lcssa3793121, %for_begin_ic.inner.preheader ], [ %237, %for_body_ic.inner ]
  %111 = phi <4 x float> [ %.lcssa3995120, %for_begin_ic.inner.preheader ], [ %243, %for_body_ic.inner ]
  %112 = phi <4 x float> [ %.lcssa4197119, %for_begin_ic.inner.preheader ], [ %249, %for_body_ic.inner ]
  %113 = phi <4 x float> [ %.lcssa4399118, %for_begin_ic.inner.preheader ], [ %255, %for_body_ic.inner ]
  %114 = phi <4 x float> [ %.lcssa45101117, %for_begin_ic.inner.preheader ], [ %261, %for_body_ic.inner ]
  %115 = phi <4 x float> [ %.lcssa47103116, %for_begin_ic.inner.preheader ], [ %267, %for_body_ic.inner ]
  %116 = phi <4 x float> [ %.lcssa49105115, %for_begin_ic.inner.preheader ], [ %273, %for_body_ic.inner ]
  %117 = phi <4 x float> [ %.lcssa51107114, %for_begin_ic.inner.preheader ], [ %279, %for_body_ic.inner ]
  %118 = phi <4 x float> [ %.lcssa53109113, %for_begin_ic.inner.preheader ], [ %285, %for_body_ic.inner ]
  %119 = phi <4 x float> [ %.lcssa55111112, %for_begin_ic.inner.preheader ], [ %291, %for_body_ic.inner ]
  %120 = shl nuw nsw i64 %indvars.iv, 2
  %121 = add nuw nsw i64 %89, %120
  %122 = add nsw i64 %91, %indvars.iv
  %123 = getelementptr inbounds float, ptr %p0, i64 %122
  %124 = load float, ptr %123, align 4, !tbaa !7447
  %125 = insertelement <4 x float> undef, float %124, i64 0
  %126 = shufflevector <4 x float> %125, <4 x float> undef, <4 x i32> zeroinitializer
  %127 = getelementptr inbounds float, ptr %p1, i64 %121
  %128 = load <4 x float>, ptr %127, align 16, !tbaa !7449
  %129 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %126, <4 x float> %128, <4 x float> %92)
  %130 = add nsw i64 %122, 4
  %131 = getelementptr inbounds float, ptr %p0, i64 %130
  %132 = load float, ptr %131, align 4, !tbaa !7447
  %133 = insertelement <4 x float> undef, float %132, i64 0
  %134 = shufflevector <4 x float> %133, <4 x float> undef, <4 x i32> zeroinitializer
  %135 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %134, <4 x float> %128, <4 x float> %93)
  %136 = add nsw i64 %122, 8
  %137 = getelementptr inbounds float, ptr %p0, i64 %136
  %138 = load float, ptr %137, align 4, !tbaa !7447
  %139 = insertelement <4 x float> undef, float %138, i64 0
  %140 = shufflevector <4 x float> %139, <4 x float> undef, <4 x i32> zeroinitializer
  %141 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %140, <4 x float> %128, <4 x float> %94)
  %142 = add nsw i64 %122, 12
  %143 = getelementptr inbounds float, ptr %p0, i64 %142
  %144 = load float, ptr %143, align 4, !tbaa !7447
  %145 = insertelement <4 x float> undef, float %144, i64 0
  %146 = shufflevector <4 x float> %145, <4 x float> undef, <4 x i32> zeroinitializer
  %147 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %146, <4 x float> %128, <4 x float> %95)
  %148 = add nsw i64 %122, 16
  %149 = getelementptr inbounds float, ptr %p0, i64 %148
  %150 = load float, ptr %149, align 4, !tbaa !7447
  %151 = insertelement <4 x float> undef, float %150, i64 0
  %152 = shufflevector <4 x float> %151, <4 x float> undef, <4 x i32> zeroinitializer
  %153 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %152, <4 x float> %128, <4 x float> %96)
  %154 = add nsw i64 %122, 20
  %155 = getelementptr inbounds float, ptr %p0, i64 %154
  %156 = load float, ptr %155, align 4, !tbaa !7447
  %157 = insertelement <4 x float> undef, float %156, i64 0
  %158 = shufflevector <4 x float> %157, <4 x float> undef, <4 x i32> zeroinitializer
  %159 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %158, <4 x float> %128, <4 x float> %97)
  %160 = add nsw i64 %122, 24
  %161 = getelementptr inbounds float, ptr %p0, i64 %160
  %162 = load float, ptr %161, align 4, !tbaa !7447
  %163 = insertelement <4 x float> undef, float %162, i64 0
  %164 = shufflevector <4 x float> %163, <4 x float> undef, <4 x i32> zeroinitializer
  %165 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %164, <4 x float> %128, <4 x float> %98)
  %166 = add nsw i64 %122, 28
  %167 = getelementptr inbounds float, ptr %p0, i64 %166
  %168 = load float, ptr %167, align 4, !tbaa !7447
  %169 = insertelement <4 x float> undef, float %168, i64 0
  %170 = shufflevector <4 x float> %169, <4 x float> undef, <4 x i32> zeroinitializer
  %171 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %170, <4 x float> %128, <4 x float> %99)
  %172 = add nsw i64 %122, 32
  %173 = getelementptr inbounds float, ptr %p0, i64 %172
  %174 = load float, ptr %173, align 4, !tbaa !7447
  %175 = insertelement <4 x float> undef, float %174, i64 0
  %176 = shufflevector <4 x float> %175, <4 x float> undef, <4 x i32> zeroinitializer
  %177 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %176, <4 x float> %128, <4 x float> %100)
  %178 = add nsw i64 %122, 36
  %179 = getelementptr inbounds float, ptr %p0, i64 %178
  %180 = load float, ptr %179, align 4, !tbaa !7447
  %181 = insertelement <4 x float> undef, float %180, i64 0
  %182 = shufflevector <4 x float> %181, <4 x float> undef, <4 x i32> zeroinitializer
  %183 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %182, <4 x float> %128, <4 x float> %101)
  %184 = add nsw i64 %122, 40
  %185 = getelementptr inbounds float, ptr %p0, i64 %184
  %186 = load float, ptr %185, align 4, !tbaa !7447
  %187 = insertelement <4 x float> undef, float %186, i64 0
  %188 = shufflevector <4 x float> %187, <4 x float> undef, <4 x i32> zeroinitializer
  %189 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %188, <4 x float> %128, <4 x float> %102)
  %190 = add nsw i64 %122, 44
  %191 = getelementptr inbounds float, ptr %p0, i64 %190
  %192 = load float, ptr %191, align 4, !tbaa !7447
  %193 = insertelement <4 x float> undef, float %192, i64 0
  %194 = shufflevector <4 x float> %193, <4 x float> undef, <4 x i32> zeroinitializer
  %195 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %194, <4 x float> %128, <4 x float> %103)
  %196 = add nsw i64 %122, 48
  %197 = getelementptr inbounds float, ptr %p0, i64 %196
  %198 = load float, ptr %197, align 4, !tbaa !7447
  %199 = insertelement <4 x float> undef, float %198, i64 0
  %200 = shufflevector <4 x float> %199, <4 x float> undef, <4 x i32> zeroinitializer
  %201 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %200, <4 x float> %128, <4 x float> %104)
  %202 = add nsw i64 %122, 52
  %203 = getelementptr inbounds float, ptr %p0, i64 %202
  %204 = load float, ptr %203, align 4, !tbaa !7447
  %205 = insertelement <4 x float> undef, float %204, i64 0
  %206 = shufflevector <4 x float> %205, <4 x float> undef, <4 x i32> zeroinitializer
  %207 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %206, <4 x float> %128, <4 x float> %105)
  %208 = add nsw i64 %122, 56
  %209 = getelementptr inbounds float, ptr %p0, i64 %208
  %210 = load float, ptr %209, align 4, !tbaa !7447
  %211 = insertelement <4 x float> undef, float %210, i64 0
  %212 = shufflevector <4 x float> %211, <4 x float> undef, <4 x i32> zeroinitializer
  %213 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %212, <4 x float> %128, <4 x float> %106)
  %214 = add nsw i64 %122, 60
  %215 = getelementptr inbounds float, ptr %p0, i64 %214
  %216 = load float, ptr %215, align 4, !tbaa !7447
  %217 = insertelement <4 x float> undef, float %216, i64 0
  %218 = shufflevector <4 x float> %217, <4 x float> undef, <4 x i32> zeroinitializer
  %219 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %218, <4 x float> %128, <4 x float> %107)
  %220 = add nsw i64 %122, 64
  %221 = getelementptr inbounds float, ptr %p0, i64 %220
  %222 = load float, ptr %221, align 4, !tbaa !7447
  %223 = insertelement <4 x float> undef, float %222, i64 0
  %224 = shufflevector <4 x float> %223, <4 x float> undef, <4 x i32> zeroinitializer
  %225 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %224, <4 x float> %128, <4 x float> %108)
  %226 = add nsw i64 %122, 68
  %227 = getelementptr inbounds float, ptr %p0, i64 %226
  %228 = load float, ptr %227, align 4, !tbaa !7447
  %229 = insertelement <4 x float> undef, float %228, i64 0
  %230 = shufflevector <4 x float> %229, <4 x float> undef, <4 x i32> zeroinitializer
  %231 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %230, <4 x float> %128, <4 x float> %109)
  %232 = add nsw i64 %122, 72
  %233 = getelementptr inbounds float, ptr %p0, i64 %232
  %234 = load float, ptr %233, align 4, !tbaa !7447
  %235 = insertelement <4 x float> undef, float %234, i64 0
  %236 = shufflevector <4 x float> %235, <4 x float> undef, <4 x i32> zeroinitializer
  %237 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %236, <4 x float> %128, <4 x float> %110)
  %238 = add nsw i64 %122, 76
  %239 = getelementptr inbounds float, ptr %p0, i64 %238
  %240 = load float, ptr %239, align 4, !tbaa !7447
  %241 = insertelement <4 x float> undef, float %240, i64 0
  %242 = shufflevector <4 x float> %241, <4 x float> undef, <4 x i32> zeroinitializer
  %243 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %242, <4 x float> %128, <4 x float> %111)
  %244 = add nsw i64 %122, 80
  %245 = getelementptr inbounds float, ptr %p0, i64 %244
  %246 = load float, ptr %245, align 4, !tbaa !7447
  %247 = insertelement <4 x float> undef, float %246, i64 0
  %248 = shufflevector <4 x float> %247, <4 x float> undef, <4 x i32> zeroinitializer
  %249 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %248, <4 x float> %128, <4 x float> %112)
  %250 = add nsw i64 %122, 84
  %251 = getelementptr inbounds float, ptr %p0, i64 %250
  %252 = load float, ptr %251, align 4, !tbaa !7447
  %253 = insertelement <4 x float> undef, float %252, i64 0
  %254 = shufflevector <4 x float> %253, <4 x float> undef, <4 x i32> zeroinitializer
  %255 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %254, <4 x float> %128, <4 x float> %113)
  %256 = add nsw i64 %122, 88
  %257 = getelementptr inbounds float, ptr %p0, i64 %256
  %258 = load float, ptr %257, align 4, !tbaa !7447
  %259 = insertelement <4 x float> undef, float %258, i64 0
  %260 = shufflevector <4 x float> %259, <4 x float> undef, <4 x i32> zeroinitializer
  %261 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %260, <4 x float> %128, <4 x float> %114)
  %262 = add nsw i64 %122, 92
  %263 = getelementptr inbounds float, ptr %p0, i64 %262
  %264 = load float, ptr %263, align 4, !tbaa !7447
  %265 = insertelement <4 x float> undef, float %264, i64 0
  %266 = shufflevector <4 x float> %265, <4 x float> undef, <4 x i32> zeroinitializer
  %267 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %266, <4 x float> %128, <4 x float> %115)
  %268 = add nsw i64 %122, 96
  %269 = getelementptr inbounds float, ptr %p0, i64 %268
  %270 = load float, ptr %269, align 4, !tbaa !7447
  %271 = insertelement <4 x float> undef, float %270, i64 0
  %272 = shufflevector <4 x float> %271, <4 x float> undef, <4 x i32> zeroinitializer
  %273 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %272, <4 x float> %128, <4 x float> %116)
  %274 = add nsw i64 %122, 100
  %275 = getelementptr inbounds float, ptr %p0, i64 %274
  %276 = load float, ptr %275, align 4, !tbaa !7447
  %277 = insertelement <4 x float> undef, float %276, i64 0
  %278 = shufflevector <4 x float> %277, <4 x float> undef, <4 x i32> zeroinitializer
  %279 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %278, <4 x float> %128, <4 x float> %117)
  %280 = add nsw i64 %122, 104
  %281 = getelementptr inbounds float, ptr %p0, i64 %280
  %282 = load float, ptr %281, align 4, !tbaa !7447
  %283 = insertelement <4 x float> undef, float %282, i64 0
  %284 = shufflevector <4 x float> %283, <4 x float> undef, <4 x i32> zeroinitializer
  %285 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %284, <4 x float> %128, <4 x float> %118)
  %286 = add nsw i64 %122, 108
  %287 = getelementptr inbounds float, ptr %p0, i64 %286
  %288 = load float, ptr %287, align 4, !tbaa !7447
  %289 = insertelement <4 x float> undef, float %288, i64 0
  %290 = shufflevector <4 x float> %289, <4 x float> undef, <4 x i32> zeroinitializer
  %291 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %290, <4 x float> %128, <4 x float> %119)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next176 = add nuw nsw i64 %indvars.iv175, 1
  %exitcond178.not = icmp eq i64 %indvars.iv.next176, 64
  br i1 %exitcond178.not, label %for_end_ic.outer, label %for_begin_ic.inner.preheader, !prof !52

for_body_ax3.inner:                               ; preds = %for_body_ax3.inner, %for_begin_ax3.outer.preheader
  %indvars.iv183 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next184.1275, %for_body_ax3.inner ]
  %292 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv183
  %293 = load <4 x float>, ptr %292, align 16, !tbaa !7445
  %294 = fadd <4 x float> %27, %293
  %295 = fcmp ogt <4 x float> %294, zeroinitializer
  %296 = select <4 x i1> %295, <4 x float> %294, <4 x float> zeroinitializer
  %297 = shl nuw nsw i64 %indvars.iv183, 2
  %298 = add nsw i64 %28, %297
  %299 = getelementptr inbounds float, ptr %T_relu, i64 %298
  store <4 x float> %296, ptr %299, align 16, !tbaa !7451
  %indvars.iv.next184 = or i64 %indvars.iv183, 1
  %300 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv.next184
  %301 = load <4 x float>, ptr %300, align 16, !tbaa !7445
  %302 = fadd <4 x float> %27, %301
  %303 = fcmp ogt <4 x float> %302, zeroinitializer
  %304 = select <4 x i1> %303, <4 x float> %302, <4 x float> zeroinitializer
  %305 = shl nuw nsw i64 %indvars.iv.next184, 2
  %306 = add nsw i64 %28, %305
  %307 = getelementptr inbounds float, ptr %T_relu, i64 %306
  store <4 x float> %304, ptr %307, align 16, !tbaa !7451
  %indvars.iv.next184.1275 = add nuw nsw i64 %indvars.iv183, 2
  %exitcond186.not.1 = icmp eq i64 %indvars.iv.next184.1275, 28
  br i1 %exitcond186.not.1, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !7085

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %308 = add nsw i64 %28, 112
  br label %for_body_ax3.inner.1

for_body_ax3.inner.1:                             ; preds = %for_body_ax3.inner.1, %for_end_ax3.inner
  %indvars.iv183.1 = phi i64 [ 0, %for_end_ax3.inner ], [ %indvars.iv.next184.1.1, %for_body_ax3.inner.1 ]
  %309 = add nuw nsw i64 %indvars.iv183.1, 28
  %310 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %309
  %311 = load <4 x float>, ptr %310, align 16, !tbaa !7445
  %312 = fadd <4 x float> %27, %311
  %313 = fcmp ogt <4 x float> %312, zeroinitializer
  %314 = select <4 x i1> %313, <4 x float> %312, <4 x float> zeroinitializer
  %315 = shl nuw nsw i64 %indvars.iv183.1, 2
  %316 = add nsw i64 %308, %315
  %317 = getelementptr inbounds float, ptr %T_relu, i64 %316
  store <4 x float> %314, ptr %317, align 16, !tbaa !7451
  %318 = add nuw nsw i64 %indvars.iv183.1, 29
  %319 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %318
  %320 = load <4 x float>, ptr %319, align 16, !tbaa !7445
  %321 = fadd <4 x float> %27, %320
  %322 = fcmp ogt <4 x float> %321, zeroinitializer
  %323 = select <4 x i1> %322, <4 x float> %321, <4 x float> zeroinitializer
  %indvars.iv.next184.1 = shl i64 %indvars.iv183.1, 2
  %324 = or i64 %indvars.iv.next184.1, 4
  %325 = add nsw i64 %308, %324
  %326 = getelementptr inbounds float, ptr %T_relu, i64 %325
  store <4 x float> %323, ptr %326, align 16, !tbaa !7451
  %indvars.iv.next184.1.1 = add nuw nsw i64 %indvars.iv183.1, 2
  %exitcond186.1.not.1 = icmp eq i64 %indvars.iv.next184.1.1, 28
  br i1 %exitcond186.1.not.1, label %for_end_ax3.inner.1, label %for_body_ax3.inner.1, !prof !7085

for_end_ax3.inner.1:                              ; preds = %for_body_ax3.inner.1
  %indvars.iv.next191 = add nsw i64 %indvars.iv190, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next191 to i32
  %exitcond192.not = icmp eq i32 %16, %lftr.wideiv
  br i1 %exitcond192.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_begin_ow.c.outer.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.44, align 8
  %6 = alloca %closure_loop_parallel_i0.i1.fused.i2.fused.43, align 8
  %7 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pad = tail call ptr %7(i32 1, i32 %0, i64 1663488, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pad, i64 64) ]
  %8 = icmp eq ptr %data_pad, null
  br i1 %8, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end2, %call_end, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %11, %if_end ], [ %17, %call_end ], [ %., %call_end2 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %data_pad, ptr %6, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.43, ptr %6, i64 0, i32 1
  store ptr %1, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1622, ptr nonnull %6, i32 0)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %call_end, label %common.ret, !prof !18

call_end:                                         ; preds = %if_end
  store ptr %data_pad, ptr %5, align 8
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.44, ptr %5, i64 0, i32 1
  store ptr %2, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.44, ptr %5, i64 0, i32 2
  store ptr %3, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.44, ptr %5, i64 0, i32 3
  store ptr %4, ptr %15, align 8
  %16 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %17 = call i32 %16(ptr nonnull @__tvm_parallel_lambda.1623, ptr nonnull %5, i32 0)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %call_end2, label %common.ret, !prof !18

call_end2:                                        ; preds = %call_end
  %19 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %20 = call i32 %19(i32 1, i32 %0, ptr nonnull %data_pad)
  %.not = icmp ne i32 %20, 0
  %. = sext i1 %.not to i32
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1622(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.43, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 1823
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 1824)
  %9 = mul nsw i32 %5, %task_id
  %.fr3 = freeze i32 %9
  %10 = tail call i32 @llvm.smin.i32(i32 %.fr3, i32 1824)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_i3.preheader.preheader, label %for_end_i0.i1.fused.i2.fused, !prof !18

for_begin_i3.preheader.preheader:                 ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %.fr3, i32 1824)
  %smin = sext i32 %12 to i64
  %13 = sub i32 %8, %10
  br label %for_begin_i3.preheader

for_begin_i3.preheader:                           ; preds = %for_begin_i3.preheader.preheader, %for_end_i3
  %indvars.iv10 = phi i64 [ %smin, %for_begin_i3.preheader.preheader ], [ %indvars.iv.next11, %for_end_i3 ]
  %indvar = phi i32 [ 0, %for_begin_i3.preheader.preheader ], [ %indvar.next, %for_end_i3 ]
  %14 = trunc i64 %indvars.iv10 to i32
  %cse_var_2 = srem i32 %14, 57
  %15 = icmp sgt i32 %cse_var_2, 0
  %16 = mul nsw i64 %indvars.iv10, 228
  %17 = mul nuw nsw i32 %cse_var_2, 224
  %18 = sdiv i32 %14, 57
  %19 = mul nsw i32 %18, 12544
  %20 = add nsw i32 %17, -228
  %21 = add i32 %20, %19
  br i1 %15, label %for_body_i3.peel.next, label %for_body_i3.us.preheader

for_body_i3.us.preheader:                         ; preds = %for_begin_i3.preheader
  %22 = add i32 %10, %indvar
  %23 = mul i32 %22, 228
  %24 = sext i32 %23 to i64
  %25 = shl nsw i64 %24, 2
  %scevgep = getelementptr i8, ptr %data_pad, i64 %25
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(912) %scevgep, i8 0, i64 912, i1 false), !tbaa !7453
  br label %for_end_i3

for_body_i3.peel.next:                            ; preds = %for_begin_i3.preheader
  %26 = getelementptr inbounds float, ptr %data_pad, i64 %16
  store <4 x float> zeroinitializer, ptr %26, align 16, !tbaa !7453
  br label %if_end

for_end_i0.i1.fused.i2.fused:                     ; preds = %for_end_i3, %parallel_closure_entry
  ret i32 0

for_end_i3:                                       ; preds = %if_end, %for_body_i3.us.preheader
  %indvars.iv.next11 = add nsw i64 %indvars.iv10, 1
  %indvar.next = add nuw i32 %indvar, 1
  %exitcond12.not = icmp eq i32 %indvar.next, %13
  br i1 %exitcond12.not, label %for_end_i0.i1.fused.i2.fused, label %for_begin_i3.preheader, !prof !52

if_end:                                           ; preds = %if_end, %for_body_i3.peel.next
  %indvars.iv = phi i64 [ 1, %for_body_i3.peel.next ], [ %indvars.iv.next.1, %if_end ]
  %27 = shl nuw nsw i64 %indvars.iv, 2
  %28 = trunc i64 %27 to i32
  %29 = add i32 %21, %28
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds float, ptr %p0, i64 %30
  %32 = load <4 x float>, ptr %31, align 16, !tbaa !7455
  %33 = add nsw i64 %27, %16
  %34 = getelementptr inbounds float, ptr %data_pad, i64 %33
  store <4 x float> %32, ptr %34, align 16, !tbaa !7453
  %indvars.iv.next = shl i64 %indvars.iv, 2
  %35 = add i64 %indvars.iv.next, 4
  %36 = trunc i64 %35 to i32
  %37 = add i32 %21, %36
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds float, ptr %p0, i64 %38
  %40 = load <4 x float>, ptr %39, align 16, !tbaa !7455
  %41 = add nsw i64 %35, %16
  %42 = getelementptr inbounds float, ptr %data_pad, i64 %41
  store <4 x float> %40, ptr %42, align 16, !tbaa !7453
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 57
  br i1 %exitcond.not.1, label %for_end_i3, label %if_end, !prof !7085, !llvm.loop !7457
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1623(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %conv2d_NCHWc.global1 = alloca [28 x <4 x float>], align 16
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.44, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.44, ptr %1, i64 0, i32 2
  %T_relu = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.44, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 895
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 896)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 896)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_body_ax0.ax1.fused.ax2.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_body_ax0.ax1.fused.ax2.fused.lr.ph:           ; preds = %parallel_closure_entry
  %14 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 1
  %15 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 2
  %16 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 3
  %17 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 4
  %18 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 5
  %19 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 6
  %20 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 7
  %21 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 8
  %22 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 9
  %23 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 10
  %24 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 11
  %25 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 12
  %26 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 13
  %27 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 14
  %28 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 15
  %29 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 16
  %30 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 17
  %31 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 18
  %32 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 19
  %33 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 20
  %34 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 21
  %35 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 22
  %36 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 23
  %37 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 24
  %38 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 25
  %39 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 26
  %40 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 27
  %41 = tail call i32 @llvm.smin.i32(i32 %11, i32 896)
  %smin = sext i32 %41 to i64
  %42 = add i32 %10, %41
  %43 = sub i32 %42, %12
  br label %for_body_ax0.ax1.fused.ax2.fused

for_body_ax0.ax1.fused.ax2.fused:                 ; preds = %for_body_ax0.ax1.fused.ax2.fused.lr.ph, %for_end_ax3.inner
  %indvars.iv359 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.fused.lr.ph ], [ %indvars.iv.next360, %for_end_ax3.inner ]
  %44 = trunc i64 %indvars.iv359 to i32
  %45 = srem i32 %44, 28
  %46 = mul nsw i32 %45, 456
  %47 = sdiv i32 %44, 28
  %48 = mul nsw i32 %47, 4608
  %49 = sext i32 %48 to i64
  %50 = sext i32 %46 to i64
  br label %for_begin_kh.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3.inner, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_end_kh
  store <4 x float> %105, ptr %conv2d_NCHWc.global1, align 16, !tbaa !7459
  store <4 x float> %111, ptr %14, align 16, !tbaa !7468
  store <4 x float> %117, ptr %15, align 16, !tbaa !7470
  store <4 x float> %123, ptr %16, align 16, !tbaa !7473
  store <4 x float> %129, ptr %17, align 16, !tbaa !7475
  store <4 x float> %135, ptr %18, align 16, !tbaa !7479
  store <4 x float> %141, ptr %19, align 16, !tbaa !7481
  store <4 x float> %147, ptr %20, align 16, !tbaa !7484
  store <4 x float> %153, ptr %21, align 16, !tbaa !7486
  store <4 x float> %159, ptr %22, align 16, !tbaa !7491
  store <4 x float> %165, ptr %23, align 16, !tbaa !7493
  store <4 x float> %171, ptr %24, align 16, !tbaa !7496
  store <4 x float> %177, ptr %25, align 16, !tbaa !7498
  store <4 x float> %183, ptr %26, align 16, !tbaa !7502
  store <4 x float> %189, ptr %27, align 16, !tbaa !7504
  store <4 x float> %195, ptr %28, align 16, !tbaa !7507
  store <4 x float> %201, ptr %29, align 16, !tbaa !7509
  store <4 x float> %207, ptr %30, align 16, !tbaa !7515
  store <4 x float> %213, ptr %31, align 16, !tbaa !7517
  store <4 x float> %219, ptr %32, align 16, !tbaa !7520
  store <4 x float> %225, ptr %33, align 16, !tbaa !7522
  store <4 x float> %231, ptr %34, align 16, !tbaa !7526
  store <4 x float> %237, ptr %35, align 16, !tbaa !7528
  store <4 x float> %243, ptr %36, align 16, !tbaa !7531
  store <4 x float> %249, ptr %37, align 16, !tbaa !7533
  store <4 x float> %255, ptr %38, align 16, !tbaa !7538
  store <4 x float> %261, ptr %39, align 16, !tbaa !7540
  store <4 x float> %267, ptr %40, align 16, !tbaa !7543
  %51 = shl nsw i32 %47, 2
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds float, ptr %p2, i64 %52
  %54 = load <4 x float>, ptr %53, align 16, !tbaa !7545
  %55 = mul nsw i64 %indvars.iv359, 112
  br label %for_body_ax3.inner

for_begin_kh.preheader:                           ; preds = %for_body_ax0.ax1.fused.ax2.fused, %for_end_kh
  %indvars.iv351 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.fused ], [ %indvars.iv.next352, %for_end_kh ]
  %.lcssa57.lcssa140.lcssa224305 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %105, %for_end_kh ]
  %.lcssa259.lcssa142.lcssa226304 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %111, %for_end_kh ]
  %.lcssa460.lcssa144.lcssa228303 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %117, %for_end_kh ]
  %.lcssa662.lcssa145.lcssa230302 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %123, %for_end_kh ]
  %.lcssa864.lcssa147.lcssa231301 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %129, %for_end_kh ]
  %.lcssa1066.lcssa149.lcssa233300 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %135, %for_end_kh ]
  %.lcssa1268.lcssa151.lcssa235299 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %141, %for_end_kh ]
  %.lcssa1470.lcssa153.lcssa237298 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %147, %for_end_kh ]
  %.lcssa1672.lcssa155.lcssa239297 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %153, %for_end_kh ]
  %.lcssa1874.lcssa157.lcssa241296 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %159, %for_end_kh ]
  %.lcssa2076.lcssa159.lcssa243295 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %165, %for_end_kh ]
  %.lcssa2278.lcssa161.lcssa245294 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %171, %for_end_kh ]
  %.lcssa2480.lcssa163.lcssa247293 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %177, %for_end_kh ]
  %.lcssa2682.lcssa165.lcssa249292 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %183, %for_end_kh ]
  %.lcssa2884.lcssa167.lcssa251291 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %189, %for_end_kh ]
  %.lcssa3086.lcssa169.lcssa253290 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %195, %for_end_kh ]
  %.lcssa3288.lcssa171.lcssa255289 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %201, %for_end_kh ]
  %.lcssa3490.lcssa173.lcssa257288 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %207, %for_end_kh ]
  %.lcssa3692.lcssa175.lcssa259287 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %213, %for_end_kh ]
  %.lcssa3894.lcssa177.lcssa261286 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %219, %for_end_kh ]
  %.lcssa4096.lcssa179.lcssa263285 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %225, %for_end_kh ]
  %.lcssa4298.lcssa181.lcssa265284 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %231, %for_end_kh ]
  %.lcssa44100.lcssa183.lcssa267283 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %237, %for_end_kh ]
  %.lcssa46102.lcssa185.lcssa269282 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %243, %for_end_kh ]
  %.lcssa48104.lcssa187.lcssa271281 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %249, %for_end_kh ]
  %.lcssa50106.lcssa189.lcssa273280 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %255, %for_end_kh ]
  %.lcssa52108.lcssa191.lcssa275279 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %261, %for_end_kh ]
  %.lcssa54110.lcssa193.lcssa277278 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %267, %for_end_kh ]
  %56 = mul nuw nsw i64 %indvars.iv351, 12996
  %57 = add nsw i64 %56, %50
  %58 = mul nuw nsw i64 %indvars.iv351, 144
  %59 = add nsw i64 %58, %49
  br label %for_begin_kw.preheader

for_begin_kw.preheader:                           ; preds = %for_begin_kh.preheader, %for_end_kw
  %indvars.iv347 = phi i64 [ 0, %for_begin_kh.preheader ], [ %indvars.iv.next348, %for_end_kw ]
  %.lcssa57.lcssa140221 = phi <4 x float> [ %.lcssa57.lcssa140.lcssa224305, %for_begin_kh.preheader ], [ %105, %for_end_kw ]
  %.lcssa259.lcssa142220 = phi <4 x float> [ %.lcssa259.lcssa142.lcssa226304, %for_begin_kh.preheader ], [ %111, %for_end_kw ]
  %.lcssa460.lcssa144219 = phi <4 x float> [ %.lcssa460.lcssa144.lcssa228303, %for_begin_kh.preheader ], [ %117, %for_end_kw ]
  %.lcssa662.lcssa145218 = phi <4 x float> [ %.lcssa662.lcssa145.lcssa230302, %for_begin_kh.preheader ], [ %123, %for_end_kw ]
  %.lcssa864.lcssa147217 = phi <4 x float> [ %.lcssa864.lcssa147.lcssa231301, %for_begin_kh.preheader ], [ %129, %for_end_kw ]
  %.lcssa1066.lcssa149216 = phi <4 x float> [ %.lcssa1066.lcssa149.lcssa233300, %for_begin_kh.preheader ], [ %135, %for_end_kw ]
  %.lcssa1268.lcssa151215 = phi <4 x float> [ %.lcssa1268.lcssa151.lcssa235299, %for_begin_kh.preheader ], [ %141, %for_end_kw ]
  %.lcssa1470.lcssa153214 = phi <4 x float> [ %.lcssa1470.lcssa153.lcssa237298, %for_begin_kh.preheader ], [ %147, %for_end_kw ]
  %.lcssa1672.lcssa155213 = phi <4 x float> [ %.lcssa1672.lcssa155.lcssa239297, %for_begin_kh.preheader ], [ %153, %for_end_kw ]
  %.lcssa1874.lcssa157212 = phi <4 x float> [ %.lcssa1874.lcssa157.lcssa241296, %for_begin_kh.preheader ], [ %159, %for_end_kw ]
  %.lcssa2076.lcssa159211 = phi <4 x float> [ %.lcssa2076.lcssa159.lcssa243295, %for_begin_kh.preheader ], [ %165, %for_end_kw ]
  %.lcssa2278.lcssa161210 = phi <4 x float> [ %.lcssa2278.lcssa161.lcssa245294, %for_begin_kh.preheader ], [ %171, %for_end_kw ]
  %.lcssa2480.lcssa163209 = phi <4 x float> [ %.lcssa2480.lcssa163.lcssa247293, %for_begin_kh.preheader ], [ %177, %for_end_kw ]
  %.lcssa2682.lcssa165208 = phi <4 x float> [ %.lcssa2682.lcssa165.lcssa249292, %for_begin_kh.preheader ], [ %183, %for_end_kw ]
  %.lcssa2884.lcssa167207 = phi <4 x float> [ %.lcssa2884.lcssa167.lcssa251291, %for_begin_kh.preheader ], [ %189, %for_end_kw ]
  %.lcssa3086.lcssa169206 = phi <4 x float> [ %.lcssa3086.lcssa169.lcssa253290, %for_begin_kh.preheader ], [ %195, %for_end_kw ]
  %.lcssa3288.lcssa171205 = phi <4 x float> [ %.lcssa3288.lcssa171.lcssa255289, %for_begin_kh.preheader ], [ %201, %for_end_kw ]
  %.lcssa3490.lcssa173204 = phi <4 x float> [ %.lcssa3490.lcssa173.lcssa257288, %for_begin_kh.preheader ], [ %207, %for_end_kw ]
  %.lcssa3692.lcssa175203 = phi <4 x float> [ %.lcssa3692.lcssa175.lcssa259287, %for_begin_kh.preheader ], [ %213, %for_end_kw ]
  %.lcssa3894.lcssa177202 = phi <4 x float> [ %.lcssa3894.lcssa177.lcssa261286, %for_begin_kh.preheader ], [ %219, %for_end_kw ]
  %.lcssa4096.lcssa179201 = phi <4 x float> [ %.lcssa4096.lcssa179.lcssa263285, %for_begin_kh.preheader ], [ %225, %for_end_kw ]
  %.lcssa4298.lcssa181200 = phi <4 x float> [ %.lcssa4298.lcssa181.lcssa265284, %for_begin_kh.preheader ], [ %231, %for_end_kw ]
  %.lcssa44100.lcssa183199 = phi <4 x float> [ %.lcssa44100.lcssa183.lcssa267283, %for_begin_kh.preheader ], [ %237, %for_end_kw ]
  %.lcssa46102.lcssa185198 = phi <4 x float> [ %.lcssa46102.lcssa185.lcssa269282, %for_begin_kh.preheader ], [ %243, %for_end_kw ]
  %.lcssa48104.lcssa187197 = phi <4 x float> [ %.lcssa48104.lcssa187.lcssa271281, %for_begin_kh.preheader ], [ %249, %for_end_kw ]
  %.lcssa50106.lcssa189196 = phi <4 x float> [ %.lcssa50106.lcssa189.lcssa273280, %for_begin_kh.preheader ], [ %255, %for_end_kw ]
  %.lcssa52108.lcssa191195 = phi <4 x float> [ %.lcssa52108.lcssa191.lcssa275279, %for_begin_kh.preheader ], [ %261, %for_end_kw ]
  %.lcssa54110.lcssa193194 = phi <4 x float> [ %.lcssa54110.lcssa193.lcssa277278, %for_begin_kh.preheader ], [ %267, %for_end_kw ]
  %60 = mul nuw nsw i64 %indvars.iv347, 228
  %61 = add nsw i64 %57, %60
  %62 = mul nuw nsw i64 %indvars.iv347, 48
  %63 = add nsw i64 %59, %62
  br label %for_begin_ic.inner.preheader

for_end_kh:                                       ; preds = %for_end_kw
  %indvars.iv.next352 = add nuw nsw i64 %indvars.iv351, 1
  %exitcond354.not = icmp eq i64 %indvars.iv.next352, 32
  br i1 %exitcond354.not, label %for_begin_ax3.inner.preheader, label %for_begin_kh.preheader, !prof !52

for_begin_ic.inner.preheader:                     ; preds = %for_begin_kw.preheader, %for_end_ic.inner
  %indvars.iv343 = phi i64 [ 0, %for_begin_kw.preheader ], [ %indvars.iv.next344, %for_end_ic.inner ]
  %.lcssa57138 = phi <4 x float> [ %.lcssa57.lcssa140221, %for_begin_kw.preheader ], [ %105, %for_end_ic.inner ]
  %.lcssa259137 = phi <4 x float> [ %.lcssa259.lcssa142220, %for_begin_kw.preheader ], [ %111, %for_end_ic.inner ]
  %.lcssa460136 = phi <4 x float> [ %.lcssa460.lcssa144219, %for_begin_kw.preheader ], [ %117, %for_end_ic.inner ]
  %.lcssa662135 = phi <4 x float> [ %.lcssa662.lcssa145218, %for_begin_kw.preheader ], [ %123, %for_end_ic.inner ]
  %.lcssa864134 = phi <4 x float> [ %.lcssa864.lcssa147217, %for_begin_kw.preheader ], [ %129, %for_end_ic.inner ]
  %.lcssa1066133 = phi <4 x float> [ %.lcssa1066.lcssa149216, %for_begin_kw.preheader ], [ %135, %for_end_ic.inner ]
  %.lcssa1268132 = phi <4 x float> [ %.lcssa1268.lcssa151215, %for_begin_kw.preheader ], [ %141, %for_end_ic.inner ]
  %.lcssa1470131 = phi <4 x float> [ %.lcssa1470.lcssa153214, %for_begin_kw.preheader ], [ %147, %for_end_ic.inner ]
  %.lcssa1672130 = phi <4 x float> [ %.lcssa1672.lcssa155213, %for_begin_kw.preheader ], [ %153, %for_end_ic.inner ]
  %.lcssa1874129 = phi <4 x float> [ %.lcssa1874.lcssa157212, %for_begin_kw.preheader ], [ %159, %for_end_ic.inner ]
  %.lcssa2076128 = phi <4 x float> [ %.lcssa2076.lcssa159211, %for_begin_kw.preheader ], [ %165, %for_end_ic.inner ]
  %.lcssa2278127 = phi <4 x float> [ %.lcssa2278.lcssa161210, %for_begin_kw.preheader ], [ %171, %for_end_ic.inner ]
  %.lcssa2480126 = phi <4 x float> [ %.lcssa2480.lcssa163209, %for_begin_kw.preheader ], [ %177, %for_end_ic.inner ]
  %.lcssa2682125 = phi <4 x float> [ %.lcssa2682.lcssa165208, %for_begin_kw.preheader ], [ %183, %for_end_ic.inner ]
  %.lcssa2884124 = phi <4 x float> [ %.lcssa2884.lcssa167207, %for_begin_kw.preheader ], [ %189, %for_end_ic.inner ]
  %.lcssa3086123 = phi <4 x float> [ %.lcssa3086.lcssa169206, %for_begin_kw.preheader ], [ %195, %for_end_ic.inner ]
  %.lcssa3288122 = phi <4 x float> [ %.lcssa3288.lcssa171205, %for_begin_kw.preheader ], [ %201, %for_end_ic.inner ]
  %.lcssa3490121 = phi <4 x float> [ %.lcssa3490.lcssa173204, %for_begin_kw.preheader ], [ %207, %for_end_ic.inner ]
  %.lcssa3692120 = phi <4 x float> [ %.lcssa3692.lcssa175203, %for_begin_kw.preheader ], [ %213, %for_end_ic.inner ]
  %.lcssa3894119 = phi <4 x float> [ %.lcssa3894.lcssa177202, %for_begin_kw.preheader ], [ %219, %for_end_ic.inner ]
  %.lcssa4096118 = phi <4 x float> [ %.lcssa4096.lcssa179201, %for_begin_kw.preheader ], [ %225, %for_end_ic.inner ]
  %.lcssa4298117 = phi <4 x float> [ %.lcssa4298.lcssa181200, %for_begin_kw.preheader ], [ %231, %for_end_ic.inner ]
  %.lcssa44100116 = phi <4 x float> [ %.lcssa44100.lcssa183199, %for_begin_kw.preheader ], [ %237, %for_end_ic.inner ]
  %.lcssa46102115 = phi <4 x float> [ %.lcssa46102.lcssa185198, %for_begin_kw.preheader ], [ %243, %for_end_ic.inner ]
  %.lcssa48104114 = phi <4 x float> [ %.lcssa48104.lcssa187197, %for_begin_kw.preheader ], [ %249, %for_end_ic.inner ]
  %.lcssa50106113 = phi <4 x float> [ %.lcssa50106.lcssa189196, %for_begin_kw.preheader ], [ %255, %for_end_ic.inner ]
  %.lcssa52108112 = phi <4 x float> [ %.lcssa52108.lcssa191195, %for_begin_kw.preheader ], [ %261, %for_end_ic.inner ]
  %.lcssa54110111 = phi <4 x float> [ %.lcssa54110.lcssa193194, %for_begin_kw.preheader ], [ %267, %for_end_ic.inner ]
  %64 = shl nsw i64 %indvars.iv343, 2
  %65 = add nsw i64 %61, %64
  %66 = shl nsw i64 %indvars.iv343, 4
  %67 = add nsw i64 %63, %66
  br label %for_body_ic.inner

for_end_kw:                                       ; preds = %for_end_ic.inner
  %indvars.iv.next348 = add nuw nsw i64 %indvars.iv347, 1
  %exitcond350.not = icmp eq i64 %indvars.iv.next348, 3
  br i1 %exitcond350.not, label %for_end_kh, label %for_begin_kw.preheader, !prof !52

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %68 = phi <4 x float> [ %.lcssa57138, %for_begin_ic.inner.preheader ], [ %105, %for_body_ic.inner ]
  %69 = phi <4 x float> [ %.lcssa259137, %for_begin_ic.inner.preheader ], [ %111, %for_body_ic.inner ]
  %70 = phi <4 x float> [ %.lcssa460136, %for_begin_ic.inner.preheader ], [ %117, %for_body_ic.inner ]
  %71 = phi <4 x float> [ %.lcssa662135, %for_begin_ic.inner.preheader ], [ %123, %for_body_ic.inner ]
  %72 = phi <4 x float> [ %.lcssa864134, %for_begin_ic.inner.preheader ], [ %129, %for_body_ic.inner ]
  %73 = phi <4 x float> [ %.lcssa1066133, %for_begin_ic.inner.preheader ], [ %135, %for_body_ic.inner ]
  %74 = phi <4 x float> [ %.lcssa1268132, %for_begin_ic.inner.preheader ], [ %141, %for_body_ic.inner ]
  %75 = phi <4 x float> [ %.lcssa1470131, %for_begin_ic.inner.preheader ], [ %147, %for_body_ic.inner ]
  %76 = phi <4 x float> [ %.lcssa1672130, %for_begin_ic.inner.preheader ], [ %153, %for_body_ic.inner ]
  %77 = phi <4 x float> [ %.lcssa1874129, %for_begin_ic.inner.preheader ], [ %159, %for_body_ic.inner ]
  %78 = phi <4 x float> [ %.lcssa2076128, %for_begin_ic.inner.preheader ], [ %165, %for_body_ic.inner ]
  %79 = phi <4 x float> [ %.lcssa2278127, %for_begin_ic.inner.preheader ], [ %171, %for_body_ic.inner ]
  %80 = phi <4 x float> [ %.lcssa2480126, %for_begin_ic.inner.preheader ], [ %177, %for_body_ic.inner ]
  %81 = phi <4 x float> [ %.lcssa2682125, %for_begin_ic.inner.preheader ], [ %183, %for_body_ic.inner ]
  %82 = phi <4 x float> [ %.lcssa2884124, %for_begin_ic.inner.preheader ], [ %189, %for_body_ic.inner ]
  %83 = phi <4 x float> [ %.lcssa3086123, %for_begin_ic.inner.preheader ], [ %195, %for_body_ic.inner ]
  %84 = phi <4 x float> [ %.lcssa3288122, %for_begin_ic.inner.preheader ], [ %201, %for_body_ic.inner ]
  %85 = phi <4 x float> [ %.lcssa3490121, %for_begin_ic.inner.preheader ], [ %207, %for_body_ic.inner ]
  %86 = phi <4 x float> [ %.lcssa3692120, %for_begin_ic.inner.preheader ], [ %213, %for_body_ic.inner ]
  %87 = phi <4 x float> [ %.lcssa3894119, %for_begin_ic.inner.preheader ], [ %219, %for_body_ic.inner ]
  %88 = phi <4 x float> [ %.lcssa4096118, %for_begin_ic.inner.preheader ], [ %225, %for_body_ic.inner ]
  %89 = phi <4 x float> [ %.lcssa4298117, %for_begin_ic.inner.preheader ], [ %231, %for_body_ic.inner ]
  %90 = phi <4 x float> [ %.lcssa44100116, %for_begin_ic.inner.preheader ], [ %237, %for_body_ic.inner ]
  %91 = phi <4 x float> [ %.lcssa46102115, %for_begin_ic.inner.preheader ], [ %243, %for_body_ic.inner ]
  %92 = phi <4 x float> [ %.lcssa48104114, %for_begin_ic.inner.preheader ], [ %249, %for_body_ic.inner ]
  %93 = phi <4 x float> [ %.lcssa50106113, %for_begin_ic.inner.preheader ], [ %255, %for_body_ic.inner ]
  %94 = phi <4 x float> [ %.lcssa52108112, %for_begin_ic.inner.preheader ], [ %261, %for_body_ic.inner ]
  %95 = phi <4 x float> [ %.lcssa54110111, %for_begin_ic.inner.preheader ], [ %267, %for_body_ic.inner ]
  %96 = add nsw i64 %65, %indvars.iv
  %97 = shl nuw nsw i64 %indvars.iv, 2
  %98 = add nuw nsw i64 %67, %97
  %99 = getelementptr inbounds float, ptr %data_pad, i64 %96
  %100 = load float, ptr %99, align 4, !tbaa !7453
  %101 = insertelement <4 x float> undef, float %100, i64 0
  %102 = shufflevector <4 x float> %101, <4 x float> undef, <4 x i32> zeroinitializer
  %103 = getelementptr inbounds float, ptr %p1, i64 %98
  %104 = load <4 x float>, ptr %103, align 16, !tbaa !7547
  %105 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %102, <4 x float> %104, <4 x float> %68)
  %106 = add nsw i64 %96, 8
  %107 = getelementptr inbounds float, ptr %data_pad, i64 %106
  %108 = load float, ptr %107, align 4, !tbaa !7453
  %109 = insertelement <4 x float> undef, float %108, i64 0
  %110 = shufflevector <4 x float> %109, <4 x float> undef, <4 x i32> zeroinitializer
  %111 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %110, <4 x float> %104, <4 x float> %69)
  %112 = add nsw i64 %96, 16
  %113 = getelementptr inbounds float, ptr %data_pad, i64 %112
  %114 = load float, ptr %113, align 4, !tbaa !7453
  %115 = insertelement <4 x float> undef, float %114, i64 0
  %116 = shufflevector <4 x float> %115, <4 x float> undef, <4 x i32> zeroinitializer
  %117 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %116, <4 x float> %104, <4 x float> %70)
  %118 = add nsw i64 %96, 24
  %119 = getelementptr inbounds float, ptr %data_pad, i64 %118
  %120 = load float, ptr %119, align 4, !tbaa !7453
  %121 = insertelement <4 x float> undef, float %120, i64 0
  %122 = shufflevector <4 x float> %121, <4 x float> undef, <4 x i32> zeroinitializer
  %123 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %122, <4 x float> %104, <4 x float> %71)
  %124 = add nsw i64 %96, 32
  %125 = getelementptr inbounds float, ptr %data_pad, i64 %124
  %126 = load float, ptr %125, align 4, !tbaa !7453
  %127 = insertelement <4 x float> undef, float %126, i64 0
  %128 = shufflevector <4 x float> %127, <4 x float> undef, <4 x i32> zeroinitializer
  %129 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %128, <4 x float> %104, <4 x float> %72)
  %130 = add nsw i64 %96, 40
  %131 = getelementptr inbounds float, ptr %data_pad, i64 %130
  %132 = load float, ptr %131, align 4, !tbaa !7453
  %133 = insertelement <4 x float> undef, float %132, i64 0
  %134 = shufflevector <4 x float> %133, <4 x float> undef, <4 x i32> zeroinitializer
  %135 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %134, <4 x float> %104, <4 x float> %73)
  %136 = add nsw i64 %96, 48
  %137 = getelementptr inbounds float, ptr %data_pad, i64 %136
  %138 = load float, ptr %137, align 4, !tbaa !7453
  %139 = insertelement <4 x float> undef, float %138, i64 0
  %140 = shufflevector <4 x float> %139, <4 x float> undef, <4 x i32> zeroinitializer
  %141 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %140, <4 x float> %104, <4 x float> %74)
  %142 = add nsw i64 %96, 56
  %143 = getelementptr inbounds float, ptr %data_pad, i64 %142
  %144 = load float, ptr %143, align 4, !tbaa !7453
  %145 = insertelement <4 x float> undef, float %144, i64 0
  %146 = shufflevector <4 x float> %145, <4 x float> undef, <4 x i32> zeroinitializer
  %147 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %146, <4 x float> %104, <4 x float> %75)
  %148 = add nsw i64 %96, 64
  %149 = getelementptr inbounds float, ptr %data_pad, i64 %148
  %150 = load float, ptr %149, align 4, !tbaa !7453
  %151 = insertelement <4 x float> undef, float %150, i64 0
  %152 = shufflevector <4 x float> %151, <4 x float> undef, <4 x i32> zeroinitializer
  %153 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %152, <4 x float> %104, <4 x float> %76)
  %154 = add nsw i64 %96, 72
  %155 = getelementptr inbounds float, ptr %data_pad, i64 %154
  %156 = load float, ptr %155, align 4, !tbaa !7453
  %157 = insertelement <4 x float> undef, float %156, i64 0
  %158 = shufflevector <4 x float> %157, <4 x float> undef, <4 x i32> zeroinitializer
  %159 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %158, <4 x float> %104, <4 x float> %77)
  %160 = add nsw i64 %96, 80
  %161 = getelementptr inbounds float, ptr %data_pad, i64 %160
  %162 = load float, ptr %161, align 4, !tbaa !7453
  %163 = insertelement <4 x float> undef, float %162, i64 0
  %164 = shufflevector <4 x float> %163, <4 x float> undef, <4 x i32> zeroinitializer
  %165 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %164, <4 x float> %104, <4 x float> %78)
  %166 = add nsw i64 %96, 88
  %167 = getelementptr inbounds float, ptr %data_pad, i64 %166
  %168 = load float, ptr %167, align 4, !tbaa !7453
  %169 = insertelement <4 x float> undef, float %168, i64 0
  %170 = shufflevector <4 x float> %169, <4 x float> undef, <4 x i32> zeroinitializer
  %171 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %170, <4 x float> %104, <4 x float> %79)
  %172 = add nsw i64 %96, 96
  %173 = getelementptr inbounds float, ptr %data_pad, i64 %172
  %174 = load float, ptr %173, align 4, !tbaa !7453
  %175 = insertelement <4 x float> undef, float %174, i64 0
  %176 = shufflevector <4 x float> %175, <4 x float> undef, <4 x i32> zeroinitializer
  %177 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %176, <4 x float> %104, <4 x float> %80)
  %178 = add nsw i64 %96, 104
  %179 = getelementptr inbounds float, ptr %data_pad, i64 %178
  %180 = load float, ptr %179, align 4, !tbaa !7453
  %181 = insertelement <4 x float> undef, float %180, i64 0
  %182 = shufflevector <4 x float> %181, <4 x float> undef, <4 x i32> zeroinitializer
  %183 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %182, <4 x float> %104, <4 x float> %81)
  %184 = add nsw i64 %96, 112
  %185 = getelementptr inbounds float, ptr %data_pad, i64 %184
  %186 = load float, ptr %185, align 4, !tbaa !7453
  %187 = insertelement <4 x float> undef, float %186, i64 0
  %188 = shufflevector <4 x float> %187, <4 x float> undef, <4 x i32> zeroinitializer
  %189 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %188, <4 x float> %104, <4 x float> %82)
  %190 = add nsw i64 %96, 120
  %191 = getelementptr inbounds float, ptr %data_pad, i64 %190
  %192 = load float, ptr %191, align 4, !tbaa !7453
  %193 = insertelement <4 x float> undef, float %192, i64 0
  %194 = shufflevector <4 x float> %193, <4 x float> undef, <4 x i32> zeroinitializer
  %195 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %194, <4 x float> %104, <4 x float> %83)
  %196 = add nsw i64 %96, 128
  %197 = getelementptr inbounds float, ptr %data_pad, i64 %196
  %198 = load float, ptr %197, align 4, !tbaa !7453
  %199 = insertelement <4 x float> undef, float %198, i64 0
  %200 = shufflevector <4 x float> %199, <4 x float> undef, <4 x i32> zeroinitializer
  %201 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %200, <4 x float> %104, <4 x float> %84)
  %202 = add nsw i64 %96, 136
  %203 = getelementptr inbounds float, ptr %data_pad, i64 %202
  %204 = load float, ptr %203, align 4, !tbaa !7453
  %205 = insertelement <4 x float> undef, float %204, i64 0
  %206 = shufflevector <4 x float> %205, <4 x float> undef, <4 x i32> zeroinitializer
  %207 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %206, <4 x float> %104, <4 x float> %85)
  %208 = add nsw i64 %96, 144
  %209 = getelementptr inbounds float, ptr %data_pad, i64 %208
  %210 = load float, ptr %209, align 4, !tbaa !7453
  %211 = insertelement <4 x float> undef, float %210, i64 0
  %212 = shufflevector <4 x float> %211, <4 x float> undef, <4 x i32> zeroinitializer
  %213 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %212, <4 x float> %104, <4 x float> %86)
  %214 = add nsw i64 %96, 152
  %215 = getelementptr inbounds float, ptr %data_pad, i64 %214
  %216 = load float, ptr %215, align 4, !tbaa !7453
  %217 = insertelement <4 x float> undef, float %216, i64 0
  %218 = shufflevector <4 x float> %217, <4 x float> undef, <4 x i32> zeroinitializer
  %219 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %218, <4 x float> %104, <4 x float> %87)
  %220 = add nsw i64 %96, 160
  %221 = getelementptr inbounds float, ptr %data_pad, i64 %220
  %222 = load float, ptr %221, align 4, !tbaa !7453
  %223 = insertelement <4 x float> undef, float %222, i64 0
  %224 = shufflevector <4 x float> %223, <4 x float> undef, <4 x i32> zeroinitializer
  %225 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %224, <4 x float> %104, <4 x float> %88)
  %226 = add nsw i64 %96, 168
  %227 = getelementptr inbounds float, ptr %data_pad, i64 %226
  %228 = load float, ptr %227, align 4, !tbaa !7453
  %229 = insertelement <4 x float> undef, float %228, i64 0
  %230 = shufflevector <4 x float> %229, <4 x float> undef, <4 x i32> zeroinitializer
  %231 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %230, <4 x float> %104, <4 x float> %89)
  %232 = add nsw i64 %96, 176
  %233 = getelementptr inbounds float, ptr %data_pad, i64 %232
  %234 = load float, ptr %233, align 4, !tbaa !7453
  %235 = insertelement <4 x float> undef, float %234, i64 0
  %236 = shufflevector <4 x float> %235, <4 x float> undef, <4 x i32> zeroinitializer
  %237 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %236, <4 x float> %104, <4 x float> %90)
  %238 = add nsw i64 %96, 184
  %239 = getelementptr inbounds float, ptr %data_pad, i64 %238
  %240 = load float, ptr %239, align 4, !tbaa !7453
  %241 = insertelement <4 x float> undef, float %240, i64 0
  %242 = shufflevector <4 x float> %241, <4 x float> undef, <4 x i32> zeroinitializer
  %243 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %242, <4 x float> %104, <4 x float> %91)
  %244 = add nsw i64 %96, 192
  %245 = getelementptr inbounds float, ptr %data_pad, i64 %244
  %246 = load float, ptr %245, align 4, !tbaa !7453
  %247 = insertelement <4 x float> undef, float %246, i64 0
  %248 = shufflevector <4 x float> %247, <4 x float> undef, <4 x i32> zeroinitializer
  %249 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %248, <4 x float> %104, <4 x float> %92)
  %250 = add nsw i64 %96, 200
  %251 = getelementptr inbounds float, ptr %data_pad, i64 %250
  %252 = load float, ptr %251, align 4, !tbaa !7453
  %253 = insertelement <4 x float> undef, float %252, i64 0
  %254 = shufflevector <4 x float> %253, <4 x float> undef, <4 x i32> zeroinitializer
  %255 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %254, <4 x float> %104, <4 x float> %93)
  %256 = add nsw i64 %96, 208
  %257 = getelementptr inbounds float, ptr %data_pad, i64 %256
  %258 = load float, ptr %257, align 4, !tbaa !7453
  %259 = insertelement <4 x float> undef, float %258, i64 0
  %260 = shufflevector <4 x float> %259, <4 x float> undef, <4 x i32> zeroinitializer
  %261 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %260, <4 x float> %104, <4 x float> %94)
  %262 = add nsw i64 %96, 216
  %263 = getelementptr inbounds float, ptr %data_pad, i64 %262
  %264 = load float, ptr %263, align 4, !tbaa !7453
  %265 = insertelement <4 x float> undef, float %264, i64 0
  %266 = shufflevector <4 x float> %265, <4 x float> undef, <4 x i32> zeroinitializer
  %267 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %266, <4 x float> %104, <4 x float> %95)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next344 = add nuw nsw i64 %indvars.iv343, 1
  %exitcond346.not = icmp eq i64 %indvars.iv.next344, 3
  br i1 %exitcond346.not, label %for_end_kw, label %for_begin_ic.inner.preheader, !prof !52

for_body_ax3.inner:                               ; preds = %for_body_ax3.inner, %for_begin_ax3.inner.preheader
  %indvars.iv355 = phi i64 [ 0, %for_begin_ax3.inner.preheader ], [ %indvars.iv.next356.1, %for_body_ax3.inner ]
  %268 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv355
  %269 = load <4 x float>, ptr %268, align 16, !tbaa !7549
  %270 = fadd <4 x float> %54, %269
  %271 = fcmp ogt <4 x float> %270, zeroinitializer
  %272 = select <4 x i1> %271, <4 x float> %270, <4 x float> zeroinitializer
  %273 = shl nuw nsw i64 %indvars.iv355, 2
  %274 = add nsw i64 %273, %55
  %275 = getelementptr inbounds float, ptr %T_relu, i64 %274
  store <4 x float> %272, ptr %275, align 16, !tbaa !7550
  %indvars.iv.next356 = or i64 %indvars.iv355, 1
  %276 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv.next356
  %277 = load <4 x float>, ptr %276, align 16, !tbaa !7549
  %278 = fadd <4 x float> %54, %277
  %279 = fcmp ogt <4 x float> %278, zeroinitializer
  %280 = select <4 x i1> %279, <4 x float> %278, <4 x float> zeroinitializer
  %281 = shl nuw nsw i64 %indvars.iv.next356, 2
  %282 = add nsw i64 %281, %55
  %283 = getelementptr inbounds float, ptr %T_relu, i64 %282
  store <4 x float> %280, ptr %283, align 16, !tbaa !7550
  %indvars.iv.next356.1 = add nuw nsw i64 %indvars.iv355, 2
  %exitcond358.not.1 = icmp eq i64 %indvars.iv.next356.1, 28
  br i1 %exitcond358.not.1, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !7085

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %indvars.iv.next360 = add nsw i64 %indvars.iv359, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next360 to i32
  %exitcond361.not = icmp eq i32 %43, %lftr.wideiv
  br i1 %exitcond361.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_body_ax0.ax1.fused.ax2.fused, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45, align 8
  store i32 %0, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8
  %8 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45, ptr %5, i64 0, i32 3
  store ptr %3, ptr %8, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45, ptr %5, i64 0, i32 4
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1673, ptr nonnull %5, i32 0)
  ret i32 %11
}

define private i32 @__tvm_parallel_lambda.1673(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #0 {
parallel_closure_entry:
  %dev_id = load i32, ptr %1, align 4
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45, ptr %1, i64 0, i32 3
  %T_relu = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.45, ptr %1, i64 0, i32 4
  %p2 = load ptr, ptr %5, align 8
  %6 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %6, align 4
  %7 = add nsw i32 %num_task, 55
  %8 = sdiv i32 %7, %num_task
  %9 = add nsw i32 %task_id, 1
  %10 = mul nsw i32 %8, %9
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 56)
  %12 = mul i32 %8, %task_id
  %13 = tail call i32 @llvm.smin.i32(i32 %12, i32 56)
  %14 = icmp slt i32 %13, %11
  br i1 %14, label %for_body_ax0.ax1.fused.ax2.outer.fused.preheader, label %common.ret, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.preheader: ; preds = %parallel_closure_entry
  %15 = tail call i32 @llvm.smin.i32(i32 %12, i32 56)
  %smin = sext i32 %15 to i64
  %16 = add i32 %11, %15
  %17 = sub i32 %16, %13
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_begin_ax0.ax1.fused.ax2.outer.fused:          ; preds = %for_end_ax3.outer
  %indvars.iv.next37 = add nsw i64 %indvars.iv36, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next37 to i32
  %exitcond38.not = icmp eq i32 %17, %lftr.wideiv
  br i1 %exitcond38.not, label %common.ret, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !52

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.preheader, %for_begin_ax0.ax1.fused.ax2.outer.fused
  %indvars.iv36 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.preheader ], [ %indvars.iv.next37, %for_begin_ax0.ax1.fused.ax2.outer.fused ]
  %18 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %conv2d_NCHWc.global = tail call ptr %18(i32 1, i32 %dev_id, i64 7168, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %conv2d_NCHWc.global, i64 64) ]
  %19 = icmp eq ptr %conv2d_NCHWc.global, null
  br i1 %19, label %common.ret, label %for_begin_ow.c.outer.preheader, !prof !18

for_begin_ow.c.outer.preheader:                   ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused
  %20 = trunc i64 %indvars.iv36 to i32
  %21 = sdiv i32 %20, 28
  %22 = shl nsw i32 %21, 15
  %23 = srem i32 %20, 28
  %24 = mul nsw i32 %23, 14336
  %25 = sext i32 %22 to i64
  %26 = sext i32 %24 to i64
  br label %for_body_ow.c.outer

common.ret:                                       ; preds = %for_begin_ax0.ax1.fused.ax2.outer.fused, %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ax3.outer, %parallel_closure_entry
  %common.ret.op = phi i32 [ 0, %parallel_closure_entry ], [ -1, %for_end_ax3.outer ], [ -1, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ 0, %for_begin_ax0.ax1.fused.ax2.outer.fused ]
  ret i32 %common.ret.op

for_begin_ax3.outer.preheader:                    ; preds = %for_end_ic.inner
  %27 = shl nsw i32 %21, 6
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds float, ptr %p2, i64 %28
  %30 = load <64 x float>, ptr %29, align 64, !tbaa !7552
  %31 = mul nsw i64 %indvars.iv36, 1792
  br label %for_begin_ax3.inner.preheader

for_body_ow.c.outer:                              ; preds = %for_begin_ow.c.outer.preheader, %for_end_ic.inner
  %indvars.iv23 = phi i64 [ 0, %for_begin_ow.c.outer.preheader ], [ %indvars.iv.next24, %for_end_ic.inner ]
  %32 = shl nuw nsw i64 %indvars.iv23, 2
  %33 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %32
  %34 = or i64 %32, 1
  %35 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %34
  %36 = or i64 %32, 2
  %37 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %36
  %38 = or i64 %32, 3
  %39 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %38
  %40 = shl nsw i64 %indvars.iv23, 11
  %41 = add nsw i64 %40, %26
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_body_ow.c.outer, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_body_ow.c.outer ], [ %indvars.iv.next, %for_body_ic.inner ]
  %42 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %55, %for_body_ic.inner ]
  %43 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %61, %for_body_ic.inner ]
  %44 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %67, %for_body_ic.inner ]
  %45 = phi <64 x float> [ zeroinitializer, %for_body_ow.c.outer ], [ %73, %for_body_ic.inner ]
  %46 = shl nuw nsw i64 %indvars.iv, 6
  %47 = add nuw nsw i64 %46, %25
  %48 = add nsw i64 %41, %indvars.iv
  %49 = getelementptr inbounds float, ptr %p0, i64 %48
  %50 = load float, ptr %49, align 4, !tbaa !7554
  %51 = insertelement <64 x float> undef, float %50, i64 0
  %52 = shufflevector <64 x float> %51, <64 x float> undef, <64 x i32> zeroinitializer
  %53 = getelementptr inbounds float, ptr %p1, i64 %47
  %54 = load <64 x float>, ptr %53, align 64, !tbaa !7556
  %55 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %52, <64 x float> %54, <64 x float> %42)
  %56 = add nsw i64 %48, 512
  %57 = getelementptr inbounds float, ptr %p0, i64 %56
  %58 = load float, ptr %57, align 4, !tbaa !7554
  %59 = insertelement <64 x float> undef, float %58, i64 0
  %60 = shufflevector <64 x float> %59, <64 x float> undef, <64 x i32> zeroinitializer
  %61 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %60, <64 x float> %54, <64 x float> %43)
  %62 = add nsw i64 %48, 1024
  %63 = getelementptr inbounds float, ptr %p0, i64 %62
  %64 = load float, ptr %63, align 4, !tbaa !7554
  %65 = insertelement <64 x float> undef, float %64, i64 0
  %66 = shufflevector <64 x float> %65, <64 x float> undef, <64 x i32> zeroinitializer
  %67 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %66, <64 x float> %54, <64 x float> %44)
  %68 = add nsw i64 %48, 1536
  %69 = getelementptr inbounds float, ptr %p0, i64 %68
  %70 = load float, ptr %69, align 4, !tbaa !7554
  %71 = insertelement <64 x float> undef, float %70, i64 0
  %72 = shufflevector <64 x float> %71, <64 x float> undef, <64 x i32> zeroinitializer
  %73 = tail call <64 x float> @llvm.fmuladd.v64f32(<64 x float> %72, <64 x float> %54, <64 x float> %45)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 512
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  store <64 x float> %55, ptr %33, align 64, !tbaa !7558
  store <64 x float> %61, ptr %35, align 64, !tbaa !7558
  store <64 x float> %67, ptr %37, align 64, !tbaa !7558
  store <64 x float> %73, ptr %39, align 64, !tbaa !7558
  %indvars.iv.next24 = add nuw nsw i64 %indvars.iv23, 1
  %exitcond27.not = icmp eq i64 %indvars.iv.next24, 7
  br i1 %exitcond27.not, label %for_begin_ax3.outer.preheader, label %for_body_ow.c.outer, !prof !52

for_begin_ax3.inner.preheader:                    ; preds = %for_begin_ax3.outer.preheader, %for_end_ax3.inner
  %indvars.iv32 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next33, %for_end_ax3.inner ]
  %74 = shl nsw i64 %indvars.iv32, 2
  %75 = shl nsw i64 %indvars.iv32, 8
  %76 = add nsw i64 %75, %31
  br label %for_body_ax3.inner

for_end_ax3.outer:                                ; preds = %for_end_ax3.inner
  %77 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %78 = tail call i32 %77(i32 1, i32 %dev_id, ptr nonnull %conv2d_NCHWc.global)
  %.not = icmp eq i32 %78, 0
  br i1 %.not, label %for_begin_ax0.ax1.fused.ax2.outer.fused, label %common.ret, !prof !52

for_body_ax3.inner:                               ; preds = %for_begin_ax3.inner.preheader, %for_body_ax3.inner
  %indvars.iv28 = phi i64 [ 0, %for_begin_ax3.inner.preheader ], [ %indvars.iv.next29, %for_body_ax3.inner ]
  %79 = add nuw nsw i64 %indvars.iv28, %74
  %80 = getelementptr inbounds <64 x float>, ptr %conv2d_NCHWc.global, i64 %79
  %81 = load <64 x float>, ptr %80, align 64, !tbaa !7558
  %82 = fadd <64 x float> %30, %81
  %83 = fcmp ogt <64 x float> %82, zeroinitializer
  %84 = select <64 x i1> %83, <64 x float> %82, <64 x float> zeroinitializer
  %85 = shl nuw nsw i64 %indvars.iv28, 6
  %86 = add nsw i64 %76, %85
  %87 = getelementptr inbounds float, ptr %T_relu, i64 %86
  store <64 x float> %84, ptr %87, align 64, !tbaa !7560
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1
  %exitcond31.not = icmp eq i64 %indvars.iv.next29, 4
  br i1 %exitcond31.not, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !52

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %indvars.iv.next33 = add nuw nsw i64 %indvars.iv32, 1
  %exitcond35.not = icmp eq i64 %indvars.iv.next33, 7
  br i1 %exitcond35.not, label %for_end_ax3.outer, label %for_begin_ax3.inner.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.47, align 8
  %6 = alloca %closure_loop_parallel_i0.i1.fused.i2.fused.46, align 8
  %7 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pad = tail call ptr %7(i32 1, i32 %0, i64 460800, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pad, i64 64) ]
  %8 = icmp eq ptr %data_pad, null
  br i1 %8, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end2, %call_end, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %11, %if_end ], [ %18, %call_end ], [ %., %call_end2 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %data_pad, ptr %6, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.46, ptr %6, i64 0, i32 1
  store ptr %1, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1723, ptr nonnull %6, i32 0)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %call_end, label %common.ret, !prof !18

call_end:                                         ; preds = %if_end
  store i32 %0, ptr %5, align 8
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.47, ptr %5, i64 0, i32 1
  store ptr %data_pad, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.47, ptr %5, i64 0, i32 2
  store ptr %2, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.47, ptr %5, i64 0, i32 3
  store ptr %3, ptr %15, align 8
  %16 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.47, ptr %5, i64 0, i32 4
  store ptr %4, ptr %16, align 8
  %17 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %18 = call i32 %17(ptr nonnull @__tvm_parallel_lambda.1724, ptr nonnull %5, i32 0)
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %call_end2, label %common.ret, !prof !18

call_end2:                                        ; preds = %call_end
  %20 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %21 = call i32 %20(i32 1, i32 %0, ptr nonnull %data_pad)
  %.not = icmp ne i32 %21, 0
  %. = sext i1 %.not to i32
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1723(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.46, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 29
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 30)
  %9 = mul nsw i32 %5, %task_id
  %.fr1 = freeze i32 %9
  %10 = tail call i32 @llvm.smin.i32(i32 %.fr1, i32 30)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_i3.preheader.preheader, label %for_end_i0.i1.fused.i2.fused, !prof !18

for_begin_i3.preheader.preheader:                 ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %.fr1, i32 30)
  %smin = sext i32 %12 to i64
  %13 = sub i32 %8, %10
  br label %for_begin_i3.preheader

for_begin_i3.preheader:                           ; preds = %for_begin_i3.preheader.preheader, %for_end_i3
  %indvars.iv9 = phi i64 [ %smin, %for_begin_i3.preheader.preheader ], [ %indvars.iv.next10, %for_end_i3 ]
  %indvar = phi i32 [ 0, %for_begin_i3.preheader.preheader ], [ %indvar.next, %for_end_i3 ]
  %14 = trunc i64 %indvars.iv9 to i32
  %15 = add i32 %14, -1
  %16 = icmp ult i32 %15, 28
  %17 = mul nsw i64 %indvars.iv9, 3840
  %18 = mul i64 %indvars.iv9, 3584
  %19 = add i64 %18, 4294963584
  br i1 %16, label %for_body_i3.us, label %for_body_i3.preheader

for_body_i3.preheader:                            ; preds = %for_begin_i3.preheader
  %20 = add i32 %10, %indvar
  %21 = mul i32 %20, 3840
  %22 = sext i32 %21 to i64
  %23 = shl nsw i64 %22, 2
  %scevgep = getelementptr i8, ptr %data_pad, i64 %23
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 64 dereferenceable(15360) %scevgep, i8 0, i64 15360, i1 false), !tbaa !7562
  br label %for_end_i3

for_body_i3.us:                                   ; preds = %for_begin_i3.preheader, %if_end.us.1
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %if_end.us.1 ], [ 0, %for_begin_i3.preheader ]
  %24 = shl nuw nsw i64 %indvars.iv, 7
  %25 = trunc i64 %indvars.iv to i32
  %cond = icmp eq i32 %25, 0
  br i1 %cond, label %if_end.us, label %if_then.us

if_then.us:                                       ; preds = %for_body_i3.us
  %26 = add nsw i64 %19, %24
  %sext = shl i64 %26, 32
  %27 = ashr exact i64 %sext, 32
  %28 = getelementptr inbounds float, ptr %p0, i64 %27
  %29 = load <128 x float>, ptr %28, align 64, !tbaa !7564
  br label %if_end.us

if_end.us:                                        ; preds = %for_body_i3.us, %if_then.us
  %30 = phi <128 x float> [ %29, %if_then.us ], [ zeroinitializer, %for_body_i3.us ]
  %31 = add nsw i64 %24, %17
  %32 = getelementptr inbounds float, ptr %data_pad, i64 %31
  store <128 x float> %30, ptr %32, align 64, !tbaa !7562
  %indvars.iv.next = or i64 %indvars.iv, 1
  %33 = shl nuw nsw i64 %indvars.iv.next, 7
  %34 = trunc i64 %indvars.iv.next to i32
  %cond12 = icmp eq i32 %34, 29
  br i1 %cond12, label %if_end.us.1, label %if_then.us.1

if_then.us.1:                                     ; preds = %if_end.us
  %35 = add nsw i64 %19, %33
  %sext.1 = shl i64 %35, 32
  %36 = ashr exact i64 %sext.1, 32
  %37 = getelementptr inbounds float, ptr %p0, i64 %36
  %38 = load <128 x float>, ptr %37, align 64, !tbaa !7564
  br label %if_end.us.1

if_end.us.1:                                      ; preds = %if_end.us, %if_then.us.1
  %39 = phi <128 x float> [ %38, %if_then.us.1 ], [ zeroinitializer, %if_end.us ]
  %40 = add nsw i64 %33, %17
  %41 = getelementptr inbounds float, ptr %data_pad, i64 %40
  store <128 x float> %39, ptr %41, align 64, !tbaa !7562
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 30
  br i1 %exitcond.not.1, label %for_end_i3, label %for_body_i3.us, !prof !7085

for_end_i0.i1.fused.i2.fused:                     ; preds = %for_end_i3, %parallel_closure_entry
  ret i32 0

for_end_i3:                                       ; preds = %if_end.us.1, %for_body_i3.preheader
  %indvars.iv.next10 = add nsw i64 %indvars.iv9, 1
  %indvar.next = add nuw i32 %indvar, 1
  %exitcond11.not = icmp eq i32 %indvar.next, %13
  br i1 %exitcond11.not, label %for_end_i0.i1.fused.i2.fused, label %for_begin_i3.preheader, !prof !52
}

define private i32 @__tvm_parallel_lambda.1724(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #0 {
parallel_closure_entry:
  %dev_id = load i32, ptr %1, align 4
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.47, ptr %1, i64 0, i32 1
  %data_pad = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.47, ptr %1, i64 0, i32 2
  %p1 = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.47, ptr %1, i64 0, i32 3
  %T_relu = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.47, ptr %1, i64 0, i32 4
  %p2 = load ptr, ptr %5, align 8
  %6 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %6, align 4
  %7 = add nsw i32 %num_task, 111
  %8 = sdiv i32 %7, %num_task
  %9 = add nsw i32 %task_id, 1
  %10 = mul nsw i32 %8, %9
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 112)
  %12 = mul i32 %8, %task_id
  %13 = tail call i32 @llvm.smin.i32(i32 %12, i32 112)
  %14 = icmp slt i32 %13, %11
  br i1 %14, label %for_body_ax0.ax1.fused.ax2.fused.lr.ph, label %common.ret, !prof !18

for_body_ax0.ax1.fused.ax2.fused.lr.ph:           ; preds = %parallel_closure_entry
  %15 = tail call i32 @llvm.smin.i32(i32 %12, i32 112)
  %smin = sext i32 %15 to i64
  %16 = add i32 %11, %15
  %17 = sub i32 %16, %13
  br label %for_body_ax0.ax1.fused.ax2.fused

for_begin_ax0.ax1.fused.ax2.fused:                ; preds = %for_end_ax3.outer
  %indvars.iv.next83 = add nsw i64 %indvars.iv82, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next83 to i32
  %exitcond84.not = icmp eq i32 %17, %lftr.wideiv
  br i1 %exitcond84.not, label %common.ret, label %for_body_ax0.ax1.fused.ax2.fused, !prof !52

for_body_ax0.ax1.fused.ax2.fused:                 ; preds = %for_body_ax0.ax1.fused.ax2.fused.lr.ph, %for_begin_ax0.ax1.fused.ax2.fused
  %indvars.iv82 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.fused.lr.ph ], [ %indvars.iv.next83, %for_begin_ax0.ax1.fused.ax2.fused ]
  %18 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %conv2d_NCHWc = tail call ptr %18(i32 1, i32 %dev_id, i64 3584, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %conv2d_NCHWc, i64 64) ]
  %19 = icmp eq ptr %conv2d_NCHWc, null
  br i1 %19, label %common.ret, label %for_begin_ow.outer.preheader, !prof !18

for_begin_ow.outer.preheader:                     ; preds = %for_body_ax0.ax1.fused.ax2.fused
  %20 = trunc i64 %indvars.iv82 to i32
  %21 = sdiv i32 %20, 28
  %22 = mul nsw i32 %21, 36864
  %23 = srem i32 %20, 28
  %24 = sext i32 %22 to i64
  br label %for_body_ow.outer

common.ret:                                       ; preds = %for_begin_ax0.ax1.fused.ax2.fused, %for_body_ax0.ax1.fused.ax2.fused, %for_end_ax3.outer, %parallel_closure_entry
  %common.ret.op = phi i32 [ 0, %parallel_closure_entry ], [ -1, %for_end_ax3.outer ], [ -1, %for_body_ax0.ax1.fused.ax2.fused ], [ 0, %for_begin_ax0.ax1.fused.ax2.fused ]
  ret i32 %common.ret.op

for_begin_ax3.outer.preheader:                    ; preds = %for_begin_ow.inner.preheader
  %25 = shl nsw i32 %21, 5
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds float, ptr %p2, i64 %26
  %28 = load <32 x float>, ptr %27, align 64, !tbaa !7566
  %29 = mul nsw i64 %indvars.iv82, 896
  br label %for_begin_ax3.inner.preheader

for_body_ow.outer:                                ; preds = %for_begin_ow.outer.preheader, %for_begin_ow.inner.preheader
  %indvar = phi i64 [ 0, %for_begin_ow.outer.preheader ], [ %indvar.next, %for_begin_ow.inner.preheader ]
  %indvars72 = trunc i64 %indvar to i32
  %30 = mul nuw nsw i64 %indvar, 896
  %scevgep = getelementptr i8, ptr %conv2d_NCHWc, i64 %30
  %31 = mul nuw nsw i32 %indvars72, 896
  br label %for_begin_ic.inner.preheader

for_begin_ow.inner.preheader:                     ; preds = %for_end_ic.inner
  store <32 x float> %109, ptr %scevgep, align 64
  %conv2d_NCHWc.global4.sroa.3.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 128
  store <32 x float> %110, ptr %conv2d_NCHWc.global4.sroa.3.0.scevgep.sroa_idx, align 64
  %conv2d_NCHWc.global4.sroa.5.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 256
  store <32 x float> %111, ptr %conv2d_NCHWc.global4.sroa.5.0.scevgep.sroa_idx, align 64
  %conv2d_NCHWc.global4.sroa.7.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 384
  store <32 x float> %112, ptr %conv2d_NCHWc.global4.sroa.7.0.scevgep.sroa_idx, align 64
  %conv2d_NCHWc.global4.sroa.9.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 512
  store <32 x float> %113, ptr %conv2d_NCHWc.global4.sroa.9.0.scevgep.sroa_idx, align 64
  %conv2d_NCHWc.global4.sroa.11.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 640
  store <32 x float> %114, ptr %conv2d_NCHWc.global4.sroa.11.0.scevgep.sroa_idx, align 64
  %conv2d_NCHWc.global4.sroa.13.0.scevgep.sroa_idx = getelementptr inbounds i8, ptr %scevgep, i64 768
  store <32 x float> %120, ptr %conv2d_NCHWc.global4.sroa.13.0.scevgep.sroa_idx, align 64
  %indvar.next = add nuw nsw i64 %indvar, 1
  %exitcond73.not = icmp eq i64 %indvar.next, 4
  br i1 %exitcond73.not, label %for_begin_ax3.outer.preheader, label %for_body_ow.outer, !prof !52

for_begin_ic.inner.preheader:                     ; preds = %for_body_ow.outer, %for_end_ic.inner
  %indvars.iv65 = phi i64 [ 0, %for_body_ow.outer ], [ %indvars.iv.next66, %for_end_ic.inner ]
  %.lcssa1836 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %109, %for_end_ic.inner ]
  %.lcssa52035 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %110, %for_end_ic.inner ]
  %.lcssa72134 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %111, %for_end_ic.inner ]
  %.lcssa92333 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %112, %for_end_ic.inner ]
  %.lcssa112532 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %113, %for_end_ic.inner ]
  %.lcssa132731 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %114, %for_end_ic.inner ]
  %.lcssa152930 = phi <32 x float> [ zeroinitializer, %for_body_ow.outer ], [ %120, %for_end_ic.inner ]
  %indvars67 = trunc i64 %indvars.iv65 to i32
  %32 = mul nuw nsw i64 %indvars.iv65, 12288
  %33 = add nsw i64 %32, %24
  %34 = add nsw i32 %23, %indvars67
  %35 = mul i32 %34, 3840
  %36 = add nsw i32 %35, %31
  %37 = sext i32 %36 to i64
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %38 = phi <32 x float> [ %.lcssa1836, %for_begin_ic.inner.preheader ], [ %109, %for_body_ic.inner ]
  %39 = phi <32 x float> [ %.lcssa52035, %for_begin_ic.inner.preheader ], [ %110, %for_body_ic.inner ]
  %40 = phi <32 x float> [ %.lcssa72134, %for_begin_ic.inner.preheader ], [ %111, %for_body_ic.inner ]
  %41 = phi <32 x float> [ %.lcssa92333, %for_begin_ic.inner.preheader ], [ %112, %for_body_ic.inner ]
  %42 = phi <32 x float> [ %.lcssa112532, %for_begin_ic.inner.preheader ], [ %113, %for_body_ic.inner ]
  %43 = phi <32 x float> [ %.lcssa132731, %for_begin_ic.inner.preheader ], [ %114, %for_body_ic.inner ]
  %44 = phi <32 x float> [ %.lcssa152930, %for_begin_ic.inner.preheader ], [ %120, %for_body_ic.inner ]
  %45 = shl nuw nsw i64 %indvars.iv, 5
  %46 = add nsw i64 %33, %45
  %47 = add nsw i64 %indvars.iv, %37
  %48 = add nsw i64 %46, 8192
  %49 = add nsw i64 %46, 4096
  %50 = add nsw i64 %47, 896
  %51 = add nsw i64 %47, 768
  %52 = add nsw i64 %47, 640
  %53 = add nsw i64 %47, 512
  %54 = add nsw i64 %47, 384
  %55 = add nsw i64 %47, 256
  %56 = add nsw i64 %47, 128
  %57 = getelementptr inbounds float, ptr %data_pad, i64 %47
  %58 = load float, ptr %57, align 4, !tbaa !7562
  %59 = insertelement <32 x float> undef, float %58, i64 0
  %60 = shufflevector <32 x float> %59, <32 x float> undef, <32 x i32> zeroinitializer
  %61 = getelementptr inbounds float, ptr %p1, i64 %46
  %62 = load <32 x float>, ptr %61, align 64, !tbaa !7568
  %63 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %60, <32 x float> %62, <32 x float> %38)
  %64 = getelementptr inbounds float, ptr %data_pad, i64 %56
  %65 = load float, ptr %64, align 4, !tbaa !7562
  %66 = insertelement <32 x float> undef, float %65, i64 0
  %67 = shufflevector <32 x float> %66, <32 x float> undef, <32 x i32> zeroinitializer
  %68 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %67, <32 x float> %62, <32 x float> %39)
  %69 = getelementptr inbounds float, ptr %data_pad, i64 %55
  %70 = load float, ptr %69, align 4, !tbaa !7562
  %71 = insertelement <32 x float> undef, float %70, i64 0
  %72 = shufflevector <32 x float> %71, <32 x float> undef, <32 x i32> zeroinitializer
  %73 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %72, <32 x float> %62, <32 x float> %40)
  %74 = getelementptr inbounds float, ptr %data_pad, i64 %54
  %75 = load float, ptr %74, align 4, !tbaa !7562
  %76 = insertelement <32 x float> undef, float %75, i64 0
  %77 = shufflevector <32 x float> %76, <32 x float> undef, <32 x i32> zeroinitializer
  %78 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %77, <32 x float> %62, <32 x float> %41)
  %79 = getelementptr inbounds float, ptr %data_pad, i64 %53
  %80 = load float, ptr %79, align 4, !tbaa !7562
  %81 = insertelement <32 x float> undef, float %80, i64 0
  %82 = shufflevector <32 x float> %81, <32 x float> undef, <32 x i32> zeroinitializer
  %83 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %82, <32 x float> %62, <32 x float> %42)
  %84 = getelementptr inbounds float, ptr %data_pad, i64 %52
  %85 = load float, ptr %84, align 4, !tbaa !7562
  %86 = insertelement <32 x float> undef, float %85, i64 0
  %87 = shufflevector <32 x float> %86, <32 x float> undef, <32 x i32> zeroinitializer
  %88 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %87, <32 x float> %62, <32 x float> %43)
  %89 = getelementptr inbounds float, ptr %data_pad, i64 %51
  %90 = load float, ptr %89, align 4, !tbaa !7562
  %91 = insertelement <32 x float> undef, float %90, i64 0
  %92 = shufflevector <32 x float> %91, <32 x float> undef, <32 x i32> zeroinitializer
  %93 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %92, <32 x float> %62, <32 x float> %44)
  %94 = getelementptr inbounds float, ptr %p1, i64 %49
  %95 = load <32 x float>, ptr %94, align 64, !tbaa !7568
  %96 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %67, <32 x float> %95, <32 x float> %63)
  %97 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %72, <32 x float> %95, <32 x float> %68)
  %98 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %77, <32 x float> %95, <32 x float> %73)
  %99 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %82, <32 x float> %95, <32 x float> %78)
  %100 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %87, <32 x float> %95, <32 x float> %83)
  %101 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %92, <32 x float> %95, <32 x float> %88)
  %102 = getelementptr inbounds float, ptr %data_pad, i64 %50
  %103 = load float, ptr %102, align 4, !tbaa !7562
  %104 = insertelement <32 x float> undef, float %103, i64 0
  %105 = shufflevector <32 x float> %104, <32 x float> undef, <32 x i32> zeroinitializer
  %106 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %105, <32 x float> %95, <32 x float> %93)
  %107 = getelementptr inbounds float, ptr %p1, i64 %48
  %108 = load <32 x float>, ptr %107, align 64, !tbaa !7568
  %109 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %72, <32 x float> %108, <32 x float> %96)
  %110 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %77, <32 x float> %108, <32 x float> %97)
  %111 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %82, <32 x float> %108, <32 x float> %98)
  %112 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %87, <32 x float> %108, <32 x float> %99)
  %113 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %92, <32 x float> %108, <32 x float> %100)
  %114 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %105, <32 x float> %108, <32 x float> %101)
  %115 = add nsw i64 %47, 1024
  %116 = getelementptr inbounds float, ptr %data_pad, i64 %115
  %117 = load float, ptr %116, align 4, !tbaa !7562
  %118 = insertelement <32 x float> undef, float %117, i64 0
  %119 = shufflevector <32 x float> %118, <32 x float> undef, <32 x i32> zeroinitializer
  %120 = tail call <32 x float> @llvm.fmuladd.v32f32(<32 x float> %119, <32 x float> %108, <32 x float> %106)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 128
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next66 = add nuw nsw i64 %indvars.iv65, 1
  %exitcond68.not = icmp eq i64 %indvars.iv.next66, 3
  br i1 %exitcond68.not, label %for_begin_ow.inner.preheader, label %for_begin_ic.inner.preheader, !prof !52

for_begin_ax3.inner.preheader:                    ; preds = %for_begin_ax3.outer.preheader, %for_begin_ax3.inner.preheader
  %indvars.iv78 = phi i64 [ 0, %for_begin_ax3.outer.preheader ], [ %indvars.iv.next79, %for_begin_ax3.inner.preheader ]
  %121 = mul nuw nsw i64 %indvars.iv78, 7
  %122 = mul nuw nsw i64 %indvars.iv78, 224
  %123 = add nsw i64 %122, %29
  %124 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %121
  %125 = load <32 x float>, ptr %124, align 64, !tbaa !7570
  %126 = fadd <32 x float> %28, %125
  %127 = fcmp ogt <32 x float> %126, zeroinitializer
  %128 = select <32 x i1> %127, <32 x float> %126, <32 x float> zeroinitializer
  %129 = getelementptr inbounds float, ptr %T_relu, i64 %123
  store <32 x float> %128, ptr %129, align 64, !tbaa !7572
  %130 = add nuw nsw i64 %121, 1
  %131 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %130
  %132 = load <32 x float>, ptr %131, align 64, !tbaa !7570
  %133 = fadd <32 x float> %28, %132
  %134 = fcmp ogt <32 x float> %133, zeroinitializer
  %135 = select <32 x i1> %134, <32 x float> %133, <32 x float> zeroinitializer
  %136 = add nsw i64 %123, 32
  %137 = getelementptr inbounds float, ptr %T_relu, i64 %136
  store <32 x float> %135, ptr %137, align 64, !tbaa !7572
  %138 = add nuw nsw i64 %121, 2
  %139 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %138
  %140 = load <32 x float>, ptr %139, align 64, !tbaa !7570
  %141 = fadd <32 x float> %28, %140
  %142 = fcmp ogt <32 x float> %141, zeroinitializer
  %143 = select <32 x i1> %142, <32 x float> %141, <32 x float> zeroinitializer
  %144 = add nsw i64 %123, 64
  %145 = getelementptr inbounds float, ptr %T_relu, i64 %144
  store <32 x float> %143, ptr %145, align 64, !tbaa !7572
  %146 = add nuw nsw i64 %121, 3
  %147 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %146
  %148 = load <32 x float>, ptr %147, align 64, !tbaa !7570
  %149 = fadd <32 x float> %28, %148
  %150 = fcmp ogt <32 x float> %149, zeroinitializer
  %151 = select <32 x i1> %150, <32 x float> %149, <32 x float> zeroinitializer
  %152 = add nsw i64 %123, 96
  %153 = getelementptr inbounds float, ptr %T_relu, i64 %152
  store <32 x float> %151, ptr %153, align 64, !tbaa !7572
  %154 = add nuw nsw i64 %121, 4
  %155 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %154
  %156 = load <32 x float>, ptr %155, align 64, !tbaa !7570
  %157 = fadd <32 x float> %28, %156
  %158 = fcmp ogt <32 x float> %157, zeroinitializer
  %159 = select <32 x i1> %158, <32 x float> %157, <32 x float> zeroinitializer
  %160 = add nsw i64 %123, 128
  %161 = getelementptr inbounds float, ptr %T_relu, i64 %160
  store <32 x float> %159, ptr %161, align 64, !tbaa !7572
  %162 = add nuw nsw i64 %121, 5
  %163 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %162
  %164 = load <32 x float>, ptr %163, align 64, !tbaa !7570
  %165 = fadd <32 x float> %28, %164
  %166 = fcmp ogt <32 x float> %165, zeroinitializer
  %167 = select <32 x i1> %166, <32 x float> %165, <32 x float> zeroinitializer
  %168 = add nsw i64 %123, 160
  %169 = getelementptr inbounds float, ptr %T_relu, i64 %168
  store <32 x float> %167, ptr %169, align 64, !tbaa !7572
  %170 = add nuw nsw i64 %121, 6
  %171 = getelementptr inbounds <32 x float>, ptr %conv2d_NCHWc, i64 %170
  %172 = load <32 x float>, ptr %171, align 64, !tbaa !7570
  %173 = fadd <32 x float> %28, %172
  %174 = fcmp ogt <32 x float> %173, zeroinitializer
  %175 = select <32 x i1> %174, <32 x float> %173, <32 x float> zeroinitializer
  %176 = add nsw i64 %123, 192
  %177 = getelementptr inbounds float, ptr %T_relu, i64 %176
  store <32 x float> %175, ptr %177, align 64, !tbaa !7572
  %indvars.iv.next79 = add nuw nsw i64 %indvars.iv78, 1
  %exitcond81.not = icmp eq i64 %indvars.iv.next79, 4
  br i1 %exitcond81.not, label %for_end_ax3.outer, label %for_begin_ax3.inner.preheader, !prof !52

for_end_ax3.outer:                                ; preds = %for_begin_ax3.inner.preheader
  %178 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %179 = tail call i32 %178(i32 1, i32 %dev_id, ptr nonnull %conv2d_NCHWc)
  %.not = icmp eq i32 %179, 0
  br i1 %.not, label %for_begin_ax0.ax1.fused.ax2.fused, label %common.ret, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3) unnamed_addr #2 {
entry:
  %4 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.48, align 8
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.48, ptr %4, i64 0, i32 1
  store ptr %1, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.48, ptr %4, i64 0, i32 2
  store ptr %2, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.48, ptr %4, i64 0, i32 3
  store ptr %3, ptr %7, align 8
  %8 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %9 = call i32 %8(ptr nonnull @__tvm_parallel_lambda.1774, ptr nonnull %4, i32 0)
  ret i32 %9
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1774(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %conv2d_NCHWc.global1 = alloca [28 x <4 x float>], align 16
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.48, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.48, ptr %1, i64 0, i32 2
  %T_relu = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.outer.fused.48, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 1791
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 1792)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 1792)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.outer.fused, !prof !18

for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph:     ; preds = %parallel_closure_entry
  %14 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 1
  %15 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 2
  %16 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 3
  %17 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 4
  %18 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 5
  %19 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 6
  %20 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 7
  %21 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 8
  %22 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 9
  %23 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 10
  %24 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 11
  %25 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 12
  %26 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 13
  %27 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 14
  %28 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 15
  %29 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 16
  %30 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 17
  %31 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 18
  %32 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 19
  %33 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 20
  %34 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 21
  %35 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 22
  %36 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 23
  %37 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 24
  %38 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 25
  %39 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 26
  %40 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 27
  %41 = tail call i32 @llvm.smin.i32(i32 %11, i32 1792)
  %smin = sext i32 %41 to i64
  %42 = add i32 %10, %41
  %43 = sub i32 %42, %12
  br label %for_body_ax0.ax1.fused.ax2.outer.fused

for_body_ax0.ax1.fused.ax2.outer.fused:           ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph, %for_end_ax3.inner
  %indvars.iv182 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.outer.fused.lr.ph ], [ %indvars.iv.next183, %for_end_ax3.inner ]
  %44 = trunc i64 %indvars.iv182 to i32
  %45 = srem i32 %44, 28
  %46 = mul nsw i32 %45, 112
  %47 = sdiv i32 %44, 28
  %48 = shl nsw i32 %47, 11
  %49 = sext i32 %46 to i64
  %50 = sext i32 %48 to i64
  br label %for_begin_ic.inner.preheader

for_end_ax0.ax1.fused.ax2.outer.fused:            ; preds = %for_end_ax3.inner, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_end_ic.inner
  store <4 x float> %97, ptr %conv2d_NCHWc.global1, align 16, !tbaa !7574
  store <4 x float> %103, ptr %14, align 16, !tbaa !7583
  store <4 x float> %109, ptr %15, align 16, !tbaa !7585
  store <4 x float> %115, ptr %16, align 16, !tbaa !7588
  store <4 x float> %121, ptr %17, align 16, !tbaa !7590
  store <4 x float> %127, ptr %18, align 16, !tbaa !7594
  store <4 x float> %133, ptr %19, align 16, !tbaa !7596
  store <4 x float> %139, ptr %20, align 16, !tbaa !7599
  store <4 x float> %145, ptr %21, align 16, !tbaa !7601
  store <4 x float> %151, ptr %22, align 16, !tbaa !7606
  store <4 x float> %157, ptr %23, align 16, !tbaa !7608
  store <4 x float> %163, ptr %24, align 16, !tbaa !7611
  store <4 x float> %169, ptr %25, align 16, !tbaa !7613
  store <4 x float> %175, ptr %26, align 16, !tbaa !7617
  store <4 x float> %181, ptr %27, align 16, !tbaa !7619
  store <4 x float> %187, ptr %28, align 16, !tbaa !7622
  store <4 x float> %193, ptr %29, align 16, !tbaa !7624
  store <4 x float> %199, ptr %30, align 16, !tbaa !7630
  store <4 x float> %205, ptr %31, align 16, !tbaa !7632
  store <4 x float> %211, ptr %32, align 16, !tbaa !7635
  store <4 x float> %217, ptr %33, align 16, !tbaa !7637
  store <4 x float> %223, ptr %34, align 16, !tbaa !7641
  store <4 x float> %229, ptr %35, align 16, !tbaa !7643
  store <4 x float> %235, ptr %36, align 16, !tbaa !7646
  store <4 x float> %241, ptr %37, align 16, !tbaa !7648
  store <4 x float> %247, ptr %38, align 16, !tbaa !7653
  store <4 x float> %253, ptr %39, align 16, !tbaa !7655
  store <4 x float> %259, ptr %40, align 16, !tbaa !7658
  %51 = shl nsw i32 %47, 2
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds float, ptr %p2, i64 %52
  %54 = load <4 x float>, ptr %53, align 16, !tbaa !7660
  %55 = mul nsw i64 %indvars.iv182, 112
  br label %for_body_ax3.inner

for_begin_ic.inner.preheader:                     ; preds = %for_body_ax0.ax1.fused.ax2.outer.fused, %for_end_ic.inner
  %indvars.iv174 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %indvars.iv.next175, %for_end_ic.inner ]
  %.lcssa57138 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %97, %for_end_ic.inner ]
  %.lcssa259137 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %103, %for_end_ic.inner ]
  %.lcssa460136 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %109, %for_end_ic.inner ]
  %.lcssa662135 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %115, %for_end_ic.inner ]
  %.lcssa864134 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %121, %for_end_ic.inner ]
  %.lcssa1066133 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %127, %for_end_ic.inner ]
  %.lcssa1268132 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %133, %for_end_ic.inner ]
  %.lcssa1470131 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %139, %for_end_ic.inner ]
  %.lcssa1672130 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %145, %for_end_ic.inner ]
  %.lcssa1874129 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %151, %for_end_ic.inner ]
  %.lcssa2076128 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %157, %for_end_ic.inner ]
  %.lcssa2278127 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %163, %for_end_ic.inner ]
  %.lcssa2480126 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %169, %for_end_ic.inner ]
  %.lcssa2682125 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %175, %for_end_ic.inner ]
  %.lcssa2884124 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %181, %for_end_ic.inner ]
  %.lcssa3086123 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %187, %for_end_ic.inner ]
  %.lcssa3288122 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %193, %for_end_ic.inner ]
  %.lcssa3490121 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %199, %for_end_ic.inner ]
  %.lcssa3692120 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %205, %for_end_ic.inner ]
  %.lcssa3894119 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %211, %for_end_ic.inner ]
  %.lcssa4096118 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %217, %for_end_ic.inner ]
  %.lcssa4298117 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %223, %for_end_ic.inner ]
  %.lcssa44100116 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %229, %for_end_ic.inner ]
  %.lcssa46102115 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %235, %for_end_ic.inner ]
  %.lcssa48104114 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %241, %for_end_ic.inner ]
  %.lcssa50106113 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %247, %for_end_ic.inner ]
  %.lcssa52108112 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %253, %for_end_ic.inner ]
  %.lcssa54110111 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.outer.fused ], [ %259, %for_end_ic.inner ]
  %56 = mul nuw nsw i64 %indvars.iv174, 3136
  %57 = add nsw i64 %56, %49
  %58 = shl nsw i64 %indvars.iv174, 4
  %59 = add nuw nsw i64 %58, %50
  br label %for_body_ic.inner

for_body_ic.inner:                                ; preds = %for_begin_ic.inner.preheader, %for_body_ic.inner
  %indvars.iv = phi i64 [ 0, %for_begin_ic.inner.preheader ], [ %indvars.iv.next, %for_body_ic.inner ]
  %60 = phi <4 x float> [ %.lcssa57138, %for_begin_ic.inner.preheader ], [ %97, %for_body_ic.inner ]
  %61 = phi <4 x float> [ %.lcssa259137, %for_begin_ic.inner.preheader ], [ %103, %for_body_ic.inner ]
  %62 = phi <4 x float> [ %.lcssa460136, %for_begin_ic.inner.preheader ], [ %109, %for_body_ic.inner ]
  %63 = phi <4 x float> [ %.lcssa662135, %for_begin_ic.inner.preheader ], [ %115, %for_body_ic.inner ]
  %64 = phi <4 x float> [ %.lcssa864134, %for_begin_ic.inner.preheader ], [ %121, %for_body_ic.inner ]
  %65 = phi <4 x float> [ %.lcssa1066133, %for_begin_ic.inner.preheader ], [ %127, %for_body_ic.inner ]
  %66 = phi <4 x float> [ %.lcssa1268132, %for_begin_ic.inner.preheader ], [ %133, %for_body_ic.inner ]
  %67 = phi <4 x float> [ %.lcssa1470131, %for_begin_ic.inner.preheader ], [ %139, %for_body_ic.inner ]
  %68 = phi <4 x float> [ %.lcssa1672130, %for_begin_ic.inner.preheader ], [ %145, %for_body_ic.inner ]
  %69 = phi <4 x float> [ %.lcssa1874129, %for_begin_ic.inner.preheader ], [ %151, %for_body_ic.inner ]
  %70 = phi <4 x float> [ %.lcssa2076128, %for_begin_ic.inner.preheader ], [ %157, %for_body_ic.inner ]
  %71 = phi <4 x float> [ %.lcssa2278127, %for_begin_ic.inner.preheader ], [ %163, %for_body_ic.inner ]
  %72 = phi <4 x float> [ %.lcssa2480126, %for_begin_ic.inner.preheader ], [ %169, %for_body_ic.inner ]
  %73 = phi <4 x float> [ %.lcssa2682125, %for_begin_ic.inner.preheader ], [ %175, %for_body_ic.inner ]
  %74 = phi <4 x float> [ %.lcssa2884124, %for_begin_ic.inner.preheader ], [ %181, %for_body_ic.inner ]
  %75 = phi <4 x float> [ %.lcssa3086123, %for_begin_ic.inner.preheader ], [ %187, %for_body_ic.inner ]
  %76 = phi <4 x float> [ %.lcssa3288122, %for_begin_ic.inner.preheader ], [ %193, %for_body_ic.inner ]
  %77 = phi <4 x float> [ %.lcssa3490121, %for_begin_ic.inner.preheader ], [ %199, %for_body_ic.inner ]
  %78 = phi <4 x float> [ %.lcssa3692120, %for_begin_ic.inner.preheader ], [ %205, %for_body_ic.inner ]
  %79 = phi <4 x float> [ %.lcssa3894119, %for_begin_ic.inner.preheader ], [ %211, %for_body_ic.inner ]
  %80 = phi <4 x float> [ %.lcssa4096118, %for_begin_ic.inner.preheader ], [ %217, %for_body_ic.inner ]
  %81 = phi <4 x float> [ %.lcssa4298117, %for_begin_ic.inner.preheader ], [ %223, %for_body_ic.inner ]
  %82 = phi <4 x float> [ %.lcssa44100116, %for_begin_ic.inner.preheader ], [ %229, %for_body_ic.inner ]
  %83 = phi <4 x float> [ %.lcssa46102115, %for_begin_ic.inner.preheader ], [ %235, %for_body_ic.inner ]
  %84 = phi <4 x float> [ %.lcssa48104114, %for_begin_ic.inner.preheader ], [ %241, %for_body_ic.inner ]
  %85 = phi <4 x float> [ %.lcssa50106113, %for_begin_ic.inner.preheader ], [ %247, %for_body_ic.inner ]
  %86 = phi <4 x float> [ %.lcssa52108112, %for_begin_ic.inner.preheader ], [ %253, %for_body_ic.inner ]
  %87 = phi <4 x float> [ %.lcssa54110111, %for_begin_ic.inner.preheader ], [ %259, %for_body_ic.inner ]
  %88 = add nsw i64 %57, %indvars.iv
  %89 = shl nuw nsw i64 %indvars.iv, 2
  %90 = add nuw nsw i64 %59, %89
  %91 = getelementptr inbounds float, ptr %p0, i64 %88
  %92 = load float, ptr %91, align 4, !tbaa !7662
  %93 = insertelement <4 x float> undef, float %92, i64 0
  %94 = shufflevector <4 x float> %93, <4 x float> undef, <4 x i32> zeroinitializer
  %95 = getelementptr inbounds float, ptr %p1, i64 %90
  %96 = load <4 x float>, ptr %95, align 16, !tbaa !7664
  %97 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %94, <4 x float> %96, <4 x float> %60)
  %98 = add nsw i64 %88, 4
  %99 = getelementptr inbounds float, ptr %p0, i64 %98
  %100 = load float, ptr %99, align 4, !tbaa !7662
  %101 = insertelement <4 x float> undef, float %100, i64 0
  %102 = shufflevector <4 x float> %101, <4 x float> undef, <4 x i32> zeroinitializer
  %103 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %102, <4 x float> %96, <4 x float> %61)
  %104 = add nsw i64 %88, 8
  %105 = getelementptr inbounds float, ptr %p0, i64 %104
  %106 = load float, ptr %105, align 4, !tbaa !7662
  %107 = insertelement <4 x float> undef, float %106, i64 0
  %108 = shufflevector <4 x float> %107, <4 x float> undef, <4 x i32> zeroinitializer
  %109 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %108, <4 x float> %96, <4 x float> %62)
  %110 = add nsw i64 %88, 12
  %111 = getelementptr inbounds float, ptr %p0, i64 %110
  %112 = load float, ptr %111, align 4, !tbaa !7662
  %113 = insertelement <4 x float> undef, float %112, i64 0
  %114 = shufflevector <4 x float> %113, <4 x float> undef, <4 x i32> zeroinitializer
  %115 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %114, <4 x float> %96, <4 x float> %63)
  %116 = add nsw i64 %88, 16
  %117 = getelementptr inbounds float, ptr %p0, i64 %116
  %118 = load float, ptr %117, align 4, !tbaa !7662
  %119 = insertelement <4 x float> undef, float %118, i64 0
  %120 = shufflevector <4 x float> %119, <4 x float> undef, <4 x i32> zeroinitializer
  %121 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %120, <4 x float> %96, <4 x float> %64)
  %122 = add nsw i64 %88, 20
  %123 = getelementptr inbounds float, ptr %p0, i64 %122
  %124 = load float, ptr %123, align 4, !tbaa !7662
  %125 = insertelement <4 x float> undef, float %124, i64 0
  %126 = shufflevector <4 x float> %125, <4 x float> undef, <4 x i32> zeroinitializer
  %127 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %126, <4 x float> %96, <4 x float> %65)
  %128 = add nsw i64 %88, 24
  %129 = getelementptr inbounds float, ptr %p0, i64 %128
  %130 = load float, ptr %129, align 4, !tbaa !7662
  %131 = insertelement <4 x float> undef, float %130, i64 0
  %132 = shufflevector <4 x float> %131, <4 x float> undef, <4 x i32> zeroinitializer
  %133 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %132, <4 x float> %96, <4 x float> %66)
  %134 = add nsw i64 %88, 28
  %135 = getelementptr inbounds float, ptr %p0, i64 %134
  %136 = load float, ptr %135, align 4, !tbaa !7662
  %137 = insertelement <4 x float> undef, float %136, i64 0
  %138 = shufflevector <4 x float> %137, <4 x float> undef, <4 x i32> zeroinitializer
  %139 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %138, <4 x float> %96, <4 x float> %67)
  %140 = add nsw i64 %88, 32
  %141 = getelementptr inbounds float, ptr %p0, i64 %140
  %142 = load float, ptr %141, align 4, !tbaa !7662
  %143 = insertelement <4 x float> undef, float %142, i64 0
  %144 = shufflevector <4 x float> %143, <4 x float> undef, <4 x i32> zeroinitializer
  %145 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %144, <4 x float> %96, <4 x float> %68)
  %146 = add nsw i64 %88, 36
  %147 = getelementptr inbounds float, ptr %p0, i64 %146
  %148 = load float, ptr %147, align 4, !tbaa !7662
  %149 = insertelement <4 x float> undef, float %148, i64 0
  %150 = shufflevector <4 x float> %149, <4 x float> undef, <4 x i32> zeroinitializer
  %151 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %150, <4 x float> %96, <4 x float> %69)
  %152 = add nsw i64 %88, 40
  %153 = getelementptr inbounds float, ptr %p0, i64 %152
  %154 = load float, ptr %153, align 4, !tbaa !7662
  %155 = insertelement <4 x float> undef, float %154, i64 0
  %156 = shufflevector <4 x float> %155, <4 x float> undef, <4 x i32> zeroinitializer
  %157 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %156, <4 x float> %96, <4 x float> %70)
  %158 = add nsw i64 %88, 44
  %159 = getelementptr inbounds float, ptr %p0, i64 %158
  %160 = load float, ptr %159, align 4, !tbaa !7662
  %161 = insertelement <4 x float> undef, float %160, i64 0
  %162 = shufflevector <4 x float> %161, <4 x float> undef, <4 x i32> zeroinitializer
  %163 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %162, <4 x float> %96, <4 x float> %71)
  %164 = add nsw i64 %88, 48
  %165 = getelementptr inbounds float, ptr %p0, i64 %164
  %166 = load float, ptr %165, align 4, !tbaa !7662
  %167 = insertelement <4 x float> undef, float %166, i64 0
  %168 = shufflevector <4 x float> %167, <4 x float> undef, <4 x i32> zeroinitializer
  %169 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %168, <4 x float> %96, <4 x float> %72)
  %170 = add nsw i64 %88, 52
  %171 = getelementptr inbounds float, ptr %p0, i64 %170
  %172 = load float, ptr %171, align 4, !tbaa !7662
  %173 = insertelement <4 x float> undef, float %172, i64 0
  %174 = shufflevector <4 x float> %173, <4 x float> undef, <4 x i32> zeroinitializer
  %175 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %174, <4 x float> %96, <4 x float> %73)
  %176 = add nsw i64 %88, 56
  %177 = getelementptr inbounds float, ptr %p0, i64 %176
  %178 = load float, ptr %177, align 4, !tbaa !7662
  %179 = insertelement <4 x float> undef, float %178, i64 0
  %180 = shufflevector <4 x float> %179, <4 x float> undef, <4 x i32> zeroinitializer
  %181 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %180, <4 x float> %96, <4 x float> %74)
  %182 = add nsw i64 %88, 60
  %183 = getelementptr inbounds float, ptr %p0, i64 %182
  %184 = load float, ptr %183, align 4, !tbaa !7662
  %185 = insertelement <4 x float> undef, float %184, i64 0
  %186 = shufflevector <4 x float> %185, <4 x float> undef, <4 x i32> zeroinitializer
  %187 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %186, <4 x float> %96, <4 x float> %75)
  %188 = add nsw i64 %88, 64
  %189 = getelementptr inbounds float, ptr %p0, i64 %188
  %190 = load float, ptr %189, align 4, !tbaa !7662
  %191 = insertelement <4 x float> undef, float %190, i64 0
  %192 = shufflevector <4 x float> %191, <4 x float> undef, <4 x i32> zeroinitializer
  %193 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %192, <4 x float> %96, <4 x float> %76)
  %194 = add nsw i64 %88, 68
  %195 = getelementptr inbounds float, ptr %p0, i64 %194
  %196 = load float, ptr %195, align 4, !tbaa !7662
  %197 = insertelement <4 x float> undef, float %196, i64 0
  %198 = shufflevector <4 x float> %197, <4 x float> undef, <4 x i32> zeroinitializer
  %199 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %198, <4 x float> %96, <4 x float> %77)
  %200 = add nsw i64 %88, 72
  %201 = getelementptr inbounds float, ptr %p0, i64 %200
  %202 = load float, ptr %201, align 4, !tbaa !7662
  %203 = insertelement <4 x float> undef, float %202, i64 0
  %204 = shufflevector <4 x float> %203, <4 x float> undef, <4 x i32> zeroinitializer
  %205 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %204, <4 x float> %96, <4 x float> %78)
  %206 = add nsw i64 %88, 76
  %207 = getelementptr inbounds float, ptr %p0, i64 %206
  %208 = load float, ptr %207, align 4, !tbaa !7662
  %209 = insertelement <4 x float> undef, float %208, i64 0
  %210 = shufflevector <4 x float> %209, <4 x float> undef, <4 x i32> zeroinitializer
  %211 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %210, <4 x float> %96, <4 x float> %79)
  %212 = add nsw i64 %88, 80
  %213 = getelementptr inbounds float, ptr %p0, i64 %212
  %214 = load float, ptr %213, align 4, !tbaa !7662
  %215 = insertelement <4 x float> undef, float %214, i64 0
  %216 = shufflevector <4 x float> %215, <4 x float> undef, <4 x i32> zeroinitializer
  %217 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %216, <4 x float> %96, <4 x float> %80)
  %218 = add nsw i64 %88, 84
  %219 = getelementptr inbounds float, ptr %p0, i64 %218
  %220 = load float, ptr %219, align 4, !tbaa !7662
  %221 = insertelement <4 x float> undef, float %220, i64 0
  %222 = shufflevector <4 x float> %221, <4 x float> undef, <4 x i32> zeroinitializer
  %223 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %222, <4 x float> %96, <4 x float> %81)
  %224 = add nsw i64 %88, 88
  %225 = getelementptr inbounds float, ptr %p0, i64 %224
  %226 = load float, ptr %225, align 4, !tbaa !7662
  %227 = insertelement <4 x float> undef, float %226, i64 0
  %228 = shufflevector <4 x float> %227, <4 x float> undef, <4 x i32> zeroinitializer
  %229 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %228, <4 x float> %96, <4 x float> %82)
  %230 = add nsw i64 %88, 92
  %231 = getelementptr inbounds float, ptr %p0, i64 %230
  %232 = load float, ptr %231, align 4, !tbaa !7662
  %233 = insertelement <4 x float> undef, float %232, i64 0
  %234 = shufflevector <4 x float> %233, <4 x float> undef, <4 x i32> zeroinitializer
  %235 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %234, <4 x float> %96, <4 x float> %83)
  %236 = add nsw i64 %88, 96
  %237 = getelementptr inbounds float, ptr %p0, i64 %236
  %238 = load float, ptr %237, align 4, !tbaa !7662
  %239 = insertelement <4 x float> undef, float %238, i64 0
  %240 = shufflevector <4 x float> %239, <4 x float> undef, <4 x i32> zeroinitializer
  %241 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %240, <4 x float> %96, <4 x float> %84)
  %242 = add nsw i64 %88, 100
  %243 = getelementptr inbounds float, ptr %p0, i64 %242
  %244 = load float, ptr %243, align 4, !tbaa !7662
  %245 = insertelement <4 x float> undef, float %244, i64 0
  %246 = shufflevector <4 x float> %245, <4 x float> undef, <4 x i32> zeroinitializer
  %247 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %246, <4 x float> %96, <4 x float> %85)
  %248 = add nsw i64 %88, 104
  %249 = getelementptr inbounds float, ptr %p0, i64 %248
  %250 = load float, ptr %249, align 4, !tbaa !7662
  %251 = insertelement <4 x float> undef, float %250, i64 0
  %252 = shufflevector <4 x float> %251, <4 x float> undef, <4 x i32> zeroinitializer
  %253 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %252, <4 x float> %96, <4 x float> %86)
  %254 = add nsw i64 %88, 108
  %255 = getelementptr inbounds float, ptr %p0, i64 %254
  %256 = load float, ptr %255, align 4, !tbaa !7662
  %257 = insertelement <4 x float> undef, float %256, i64 0
  %258 = shufflevector <4 x float> %257, <4 x float> undef, <4 x i32> zeroinitializer
  %259 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %258, <4 x float> %96, <4 x float> %87)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for_end_ic.inner, label %for_body_ic.inner, !prof !52

for_end_ic.inner:                                 ; preds = %for_body_ic.inner
  %indvars.iv.next175 = add nuw nsw i64 %indvars.iv174, 1
  %exitcond177.not = icmp eq i64 %indvars.iv.next175, 128
  br i1 %exitcond177.not, label %for_begin_ax3.inner.preheader, label %for_begin_ic.inner.preheader, !prof !52

for_body_ax3.inner:                               ; preds = %for_body_ax3.inner, %for_begin_ax3.inner.preheader
  %indvars.iv178 = phi i64 [ 0, %for_begin_ax3.inner.preheader ], [ %indvars.iv.next179.1, %for_body_ax3.inner ]
  %260 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv178
  %261 = load <4 x float>, ptr %260, align 16, !tbaa !7666
  %262 = fadd <4 x float> %54, %261
  %263 = fcmp ogt <4 x float> %262, zeroinitializer
  %264 = select <4 x i1> %263, <4 x float> %262, <4 x float> zeroinitializer
  %265 = shl nuw nsw i64 %indvars.iv178, 2
  %266 = add nsw i64 %265, %55
  %267 = getelementptr inbounds float, ptr %T_relu, i64 %266
  store <4 x float> %264, ptr %267, align 16, !tbaa !7667
  %indvars.iv.next179 = or i64 %indvars.iv178, 1
  %268 = getelementptr inbounds <4 x float>, ptr %conv2d_NCHWc.global1, i64 %indvars.iv.next179
  %269 = load <4 x float>, ptr %268, align 16, !tbaa !7666
  %270 = fadd <4 x float> %54, %269
  %271 = fcmp ogt <4 x float> %270, zeroinitializer
  %272 = select <4 x i1> %271, <4 x float> %270, <4 x float> zeroinitializer
  %273 = shl nuw nsw i64 %indvars.iv.next179, 2
  %274 = add nsw i64 %273, %55
  %275 = getelementptr inbounds float, ptr %T_relu, i64 %274
  store <4 x float> %272, ptr %275, align 16, !tbaa !7667
  %indvars.iv.next179.1 = add nuw nsw i64 %indvars.iv178, 2
  %exitcond181.not.1 = icmp eq i64 %indvars.iv.next179.1, 28
  br i1 %exitcond181.not.1, label %for_end_ax3.inner, label %for_body_ax3.inner, !prof !7085

for_end_ax3.inner:                                ; preds = %for_body_ax3.inner
  %indvars.iv.next183 = add nsw i64 %indvars.iv182, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next183 to i32
  %exitcond184.not = icmp eq i32 %43, %lftr.wideiv
  br i1 %exitcond184.not, label %for_end_ax0.ax1.fused.ax2.outer.fused, label %for_body_ax0.ax1.fused.ax2.outer.fused, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9_compute_(i32 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3, ptr noalias align 64 %4) unnamed_addr #2 {
entry:
  %5 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.50, align 8
  %6 = alloca %closure_loop_parallel_i0.i1.fused.i2.fused.49, align 8
  %7 = load ptr, ptr @__TVMBackendAllocWorkspace, align 8, !tbaa !19
  %data_pad = tail call ptr %7(i32 1, i32 %0, i64 861184, i32 2, i32 32)
  call void @llvm.assume(i1 true) [ "align"(ptr %data_pad, i64 64) ]
  %8 = icmp eq ptr %data_pad, null
  br i1 %8, label %common.ret, label %if_end, !prof !18

common.ret:                                       ; preds = %call_end2, %call_end, %if_end, %entry
  %common.ret.op = phi i32 [ -1, %entry ], [ %11, %if_end ], [ %17, %call_end ], [ %., %call_end2 ]
  ret i32 %common.ret.op

if_end:                                           ; preds = %entry
  store ptr %data_pad, ptr %6, align 8
  %9 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.49, ptr %6, i64 0, i32 1
  store ptr %1, ptr %9, align 8
  %10 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %11 = call i32 %10(ptr nonnull @__tvm_parallel_lambda.1824, ptr nonnull %6, i32 0)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %call_end, label %common.ret, !prof !18

call_end:                                         ; preds = %if_end
  store ptr %data_pad, ptr %5, align 8
  %13 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.50, ptr %5, i64 0, i32 1
  store ptr %2, ptr %13, align 8
  %14 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.50, ptr %5, i64 0, i32 2
  store ptr %3, ptr %14, align 8
  %15 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.50, ptr %5, i64 0, i32 3
  store ptr %4, ptr %15, align 8
  %16 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %17 = call i32 %16(ptr nonnull @__tvm_parallel_lambda.1825, ptr nonnull %5, i32 0)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %call_end2, label %common.ret, !prof !18

call_end2:                                        ; preds = %call_end
  %19 = load ptr, ptr @__TVMBackendFreeWorkspace, align 8, !tbaa !19
  %20 = call i32 %19(i32 1, i32 %0, ptr nonnull %data_pad)
  %.not = icmp ne i32 %20, 0
  %. = sext i1 %.not to i32
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1824(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_i0.i1.fused.i2.fused.49, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 1855
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 1856)
  %9 = mul nsw i32 %5, %task_id
  %.fr3 = freeze i32 %9
  %10 = tail call i32 @llvm.smin.i32(i32 %.fr3, i32 1856)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_i3.preheader.preheader, label %for_end_i0.i1.fused.i2.fused, !prof !18

for_begin_i3.preheader.preheader:                 ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %.fr3, i32 1856)
  %smin = sext i32 %12 to i64
  %13 = sub i32 %8, %10
  br label %for_begin_i3.preheader

for_begin_i3.preheader:                           ; preds = %for_begin_i3.preheader.preheader, %for_end_i3
  %indvars.iv10 = phi i64 [ %smin, %for_begin_i3.preheader.preheader ], [ %indvars.iv.next11, %for_end_i3 ]
  %indvar = phi i32 [ 0, %for_begin_i3.preheader.preheader ], [ %indvar.next, %for_end_i3 ]
  %14 = trunc i64 %indvars.iv10 to i32
  %cse_var_2 = srem i32 %14, 29
  %15 = icmp sgt i32 %cse_var_2, 0
  %16 = mul nsw i64 %indvars.iv10, 116
  %17 = mul nuw nsw i32 %cse_var_2, 112
  %18 = sdiv i32 %14, 29
  %19 = mul nsw i32 %18, 3136
  %20 = add nsw i32 %17, -116
  %21 = add i32 %20, %19
  br i1 %15, label %for_body_i3.peel.next, label %for_body_i3.us.preheader

for_body_i3.us.preheader:                         ; preds = %for_begin_i3.preheader
  %22 = add i32 %10, %indvar
  %23 = mul i32 %22, 116
  %24 = sext i32 %23 to i64
  %25 = shl nsw i64 %24, 2
  %scevgep = getelementptr i8, ptr %data_pad, i64 %25
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(464) %scevgep, i8 0, i64 464, i1 false), !tbaa !7669
  br label %for_end_i3

for_body_i3.peel.next:                            ; preds = %for_begin_i3.preheader
  %26 = getelementptr inbounds float, ptr %data_pad, i64 %16
  store <4 x float> zeroinitializer, ptr %26, align 16, !tbaa !7669
  %27 = add i32 %21, 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds float, ptr %p0, i64 %28
  %30 = load <4 x float>, ptr %29, align 16, !tbaa !7671
  %31 = add nsw i64 %16, 4
  %32 = getelementptr inbounds float, ptr %data_pad, i64 %31
  store <4 x float> %30, ptr %32, align 16, !tbaa !7669
  %33 = add i32 %21, 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds float, ptr %p0, i64 %34
  %36 = load <4 x float>, ptr %35, align 16, !tbaa !7671
  %37 = add nsw i64 %16, 8
  %38 = getelementptr inbounds float, ptr %data_pad, i64 %37
  store <4 x float> %36, ptr %38, align 16, !tbaa !7669
  %39 = add i32 %21, 12
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds float, ptr %p0, i64 %40
  %42 = load <4 x float>, ptr %41, align 16, !tbaa !7671
  %43 = add nsw i64 %16, 12
  %44 = getelementptr inbounds float, ptr %data_pad, i64 %43
  store <4 x float> %42, ptr %44, align 16, !tbaa !7669
  %45 = add i32 %21, 16
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds float, ptr %p0, i64 %46
  %48 = load <4 x float>, ptr %47, align 16, !tbaa !7671
  %49 = add nsw i64 %16, 16
  %50 = getelementptr inbounds float, ptr %data_pad, i64 %49
  store <4 x float> %48, ptr %50, align 16, !tbaa !7669
  %51 = add i32 %21, 20
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds float, ptr %p0, i64 %52
  %54 = load <4 x float>, ptr %53, align 16, !tbaa !7671
  %55 = add nsw i64 %16, 20
  %56 = getelementptr inbounds float, ptr %data_pad, i64 %55
  store <4 x float> %54, ptr %56, align 16, !tbaa !7669
  %57 = add i32 %21, 24
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds float, ptr %p0, i64 %58
  %60 = load <4 x float>, ptr %59, align 16, !tbaa !7671
  %61 = add nsw i64 %16, 24
  %62 = getelementptr inbounds float, ptr %data_pad, i64 %61
  store <4 x float> %60, ptr %62, align 16, !tbaa !7669
  %63 = add i32 %21, 28
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds float, ptr %p0, i64 %64
  %66 = load <4 x float>, ptr %65, align 16, !tbaa !7671
  %67 = add nsw i64 %16, 28
  %68 = getelementptr inbounds float, ptr %data_pad, i64 %67
  store <4 x float> %66, ptr %68, align 16, !tbaa !7669
  %69 = add i32 %21, 32
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds float, ptr %p0, i64 %70
  %72 = load <4 x float>, ptr %71, align 16, !tbaa !7671
  %73 = add nsw i64 %16, 32
  %74 = getelementptr inbounds float, ptr %data_pad, i64 %73
  store <4 x float> %72, ptr %74, align 16, !tbaa !7669
  %75 = add i32 %21, 36
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds float, ptr %p0, i64 %76
  %78 = load <4 x float>, ptr %77, align 16, !tbaa !7671
  %79 = add nsw i64 %16, 36
  %80 = getelementptr inbounds float, ptr %data_pad, i64 %79
  store <4 x float> %78, ptr %80, align 16, !tbaa !7669
  %81 = add i32 %21, 40
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds float, ptr %p0, i64 %82
  %84 = load <4 x float>, ptr %83, align 16, !tbaa !7671
  %85 = add nsw i64 %16, 40
  %86 = getelementptr inbounds float, ptr %data_pad, i64 %85
  store <4 x float> %84, ptr %86, align 16, !tbaa !7669
  %87 = add i32 %21, 44
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds float, ptr %p0, i64 %88
  %90 = load <4 x float>, ptr %89, align 16, !tbaa !7671
  %91 = add nsw i64 %16, 44
  %92 = getelementptr inbounds float, ptr %data_pad, i64 %91
  store <4 x float> %90, ptr %92, align 16, !tbaa !7669
  %93 = add i32 %21, 48
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds float, ptr %p0, i64 %94
  %96 = load <4 x float>, ptr %95, align 16, !tbaa !7671
  %97 = add nsw i64 %16, 48
  %98 = getelementptr inbounds float, ptr %data_pad, i64 %97
  store <4 x float> %96, ptr %98, align 16, !tbaa !7669
  %99 = add i32 %21, 52
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds float, ptr %p0, i64 %100
  %102 = load <4 x float>, ptr %101, align 16, !tbaa !7671
  %103 = add nsw i64 %16, 52
  %104 = getelementptr inbounds float, ptr %data_pad, i64 %103
  store <4 x float> %102, ptr %104, align 16, !tbaa !7669
  %105 = add i32 %21, 56
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds float, ptr %p0, i64 %106
  %108 = load <4 x float>, ptr %107, align 16, !tbaa !7671
  %109 = add nsw i64 %16, 56
  %110 = getelementptr inbounds float, ptr %data_pad, i64 %109
  store <4 x float> %108, ptr %110, align 16, !tbaa !7669
  %111 = add i32 %21, 60
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds float, ptr %p0, i64 %112
  %114 = load <4 x float>, ptr %113, align 16, !tbaa !7671
  %115 = add nsw i64 %16, 60
  %116 = getelementptr inbounds float, ptr %data_pad, i64 %115
  store <4 x float> %114, ptr %116, align 16, !tbaa !7669
  %117 = add i32 %21, 64
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds float, ptr %p0, i64 %118
  %120 = load <4 x float>, ptr %119, align 16, !tbaa !7671
  %121 = add nsw i64 %16, 64
  %122 = getelementptr inbounds float, ptr %data_pad, i64 %121
  store <4 x float> %120, ptr %122, align 16, !tbaa !7669
  %123 = add i32 %21, 68
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds float, ptr %p0, i64 %124
  %126 = load <4 x float>, ptr %125, align 16, !tbaa !7671
  %127 = add nsw i64 %16, 68
  %128 = getelementptr inbounds float, ptr %data_pad, i64 %127
  store <4 x float> %126, ptr %128, align 16, !tbaa !7669
  %129 = add i32 %21, 72
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds float, ptr %p0, i64 %130
  %132 = load <4 x float>, ptr %131, align 16, !tbaa !7671
  %133 = add nsw i64 %16, 72
  %134 = getelementptr inbounds float, ptr %data_pad, i64 %133
  store <4 x float> %132, ptr %134, align 16, !tbaa !7669
  %135 = add i32 %21, 76
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds float, ptr %p0, i64 %136
  %138 = load <4 x float>, ptr %137, align 16, !tbaa !7671
  %139 = add nsw i64 %16, 76
  %140 = getelementptr inbounds float, ptr %data_pad, i64 %139
  store <4 x float> %138, ptr %140, align 16, !tbaa !7669
  %141 = add i32 %21, 80
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds float, ptr %p0, i64 %142
  %144 = load <4 x float>, ptr %143, align 16, !tbaa !7671
  %145 = add nsw i64 %16, 80
  %146 = getelementptr inbounds float, ptr %data_pad, i64 %145
  store <4 x float> %144, ptr %146, align 16, !tbaa !7669
  %147 = add i32 %21, 84
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds float, ptr %p0, i64 %148
  %150 = load <4 x float>, ptr %149, align 16, !tbaa !7671
  %151 = add nsw i64 %16, 84
  %152 = getelementptr inbounds float, ptr %data_pad, i64 %151
  store <4 x float> %150, ptr %152, align 16, !tbaa !7669
  %153 = add i32 %21, 88
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds float, ptr %p0, i64 %154
  %156 = load <4 x float>, ptr %155, align 16, !tbaa !7671
  %157 = add nsw i64 %16, 88
  %158 = getelementptr inbounds float, ptr %data_pad, i64 %157
  store <4 x float> %156, ptr %158, align 16, !tbaa !7669
  %159 = add i32 %21, 92
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds float, ptr %p0, i64 %160
  %162 = load <4 x float>, ptr %161, align 16, !tbaa !7671
  %163 = add nsw i64 %16, 92
  %164 = getelementptr inbounds float, ptr %data_pad, i64 %163
  store <4 x float> %162, ptr %164, align 16, !tbaa !7669
  %165 = add i32 %21, 96
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds float, ptr %p0, i64 %166
  %168 = load <4 x float>, ptr %167, align 16, !tbaa !7671
  %169 = add nsw i64 %16, 96
  %170 = getelementptr inbounds float, ptr %data_pad, i64 %169
  store <4 x float> %168, ptr %170, align 16, !tbaa !7669
  %171 = add i32 %21, 100
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds float, ptr %p0, i64 %172
  %174 = load <4 x float>, ptr %173, align 16, !tbaa !7671
  %175 = add nsw i64 %16, 100
  %176 = getelementptr inbounds float, ptr %data_pad, i64 %175
  store <4 x float> %174, ptr %176, align 16, !tbaa !7669
  %177 = add i32 %21, 104
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds float, ptr %p0, i64 %178
  %180 = load <4 x float>, ptr %179, align 16, !tbaa !7671
  %181 = add nsw i64 %16, 104
  %182 = getelementptr inbounds float, ptr %data_pad, i64 %181
  store <4 x float> %180, ptr %182, align 16, !tbaa !7669
  %183 = add i32 %21, 108
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds float, ptr %p0, i64 %184
  %186 = load <4 x float>, ptr %185, align 16, !tbaa !7671
  %187 = add nsw i64 %16, 108
  %188 = getelementptr inbounds float, ptr %data_pad, i64 %187
  store <4 x float> %186, ptr %188, align 16, !tbaa !7669
  %189 = add i32 %21, 112
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds float, ptr %p0, i64 %190
  %192 = load <4 x float>, ptr %191, align 16, !tbaa !7671
  %193 = add nsw i64 %16, 112
  %194 = getelementptr inbounds float, ptr %data_pad, i64 %193
  store <4 x float> %192, ptr %194, align 16, !tbaa !7669
  br label %for_end_i3

for_end_i0.i1.fused.i2.fused:                     ; preds = %for_end_i3, %parallel_closure_entry
  ret i32 0

for_end_i3:                                       ; preds = %for_body_i3.peel.next, %for_body_i3.us.preheader
  %indvars.iv.next11 = add nsw i64 %indvars.iv10, 1
  %indvar.next = add nuw i32 %indvar, 1
  %exitcond12.not = icmp eq i32 %indvar.next, %13
  br i1 %exitcond12.not, label %for_end_i0.i1.fused.i2.fused, label %for_begin_i3.preheader, !prof !52
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1825(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %data_pad = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.50, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.50, ptr %1, i64 0, i32 2
  %T_relu = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.50, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 895
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 896)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 896)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_body_ax0.ax1.fused.ax2.fused.lr.ph, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_body_ax0.ax1.fused.ax2.fused.lr.ph:           ; preds = %parallel_closure_entry
  %14 = tail call i32 @llvm.smin.i32(i32 %11, i32 896)
  %smin = sext i32 %14 to i64
  %15 = add i32 %10, %14
  %16 = sub i32 %15, %12
  br label %for_body_ax0.ax1.fused.ax2.fused

for_body_ax0.ax1.fused.ax2.fused:                 ; preds = %for_body_ax0.ax1.fused.ax2.fused.lr.ph, %for_begin_ax3.inner.preheader
  %indvars.iv188 = phi i64 [ %smin, %for_body_ax0.ax1.fused.ax2.fused.lr.ph ], [ %indvars.iv.next189, %for_begin_ax3.inner.preheader ]
  %17 = trunc i64 %indvars.iv188 to i32
  %18 = srem i32 %17, 14
  %19 = mul nsw i32 %18, 232
  %20 = sdiv i32 %17, 14
  %21 = mul nsw i32 %20, 9216
  %22 = sext i32 %21 to i64
  %23 = sext i32 %19 to i64
  br label %for_begin_kh.preheader

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_begin_ax3.inner.preheader, %parallel_closure_entry
  ret i32 0

for_begin_ax3.inner.preheader:                    ; preds = %for_end_kh
  %24 = shl nsw i32 %20, 2
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds float, ptr %p2, i64 %25
  %27 = load <4 x float>, ptr %26, align 16, !tbaa !7673
  %28 = mul nsw i64 %indvars.iv188, 56
  %29 = fadd <4 x float> %27, %377
  %30 = fcmp ogt <4 x float> %29, zeroinitializer
  %31 = select <4 x i1> %30, <4 x float> %29, <4 x float> zeroinitializer
  %32 = getelementptr inbounds float, ptr %T_relu, i64 %28
  store <4 x float> %31, ptr %32, align 16, !tbaa !7675
  %33 = fadd <4 x float> %27, %383
  %34 = fcmp ogt <4 x float> %33, zeroinitializer
  %35 = select <4 x i1> %34, <4 x float> %33, <4 x float> zeroinitializer
  %36 = or i64 %28, 4
  %37 = getelementptr inbounds float, ptr %T_relu, i64 %36
  store <4 x float> %35, ptr %37, align 16, !tbaa !7675
  %38 = fadd <4 x float> %27, %389
  %39 = fcmp ogt <4 x float> %38, zeroinitializer
  %40 = select <4 x i1> %39, <4 x float> %38, <4 x float> zeroinitializer
  %41 = add nsw i64 %28, 8
  %42 = getelementptr inbounds float, ptr %T_relu, i64 %41
  store <4 x float> %40, ptr %42, align 16, !tbaa !7675
  %43 = fadd <4 x float> %27, %395
  %44 = fcmp ogt <4 x float> %43, zeroinitializer
  %45 = select <4 x i1> %44, <4 x float> %43, <4 x float> zeroinitializer
  %46 = add nsw i64 %28, 12
  %47 = getelementptr inbounds float, ptr %T_relu, i64 %46
  store <4 x float> %45, ptr %47, align 16, !tbaa !7675
  %48 = fadd <4 x float> %27, %401
  %49 = fcmp ogt <4 x float> %48, zeroinitializer
  %50 = select <4 x i1> %49, <4 x float> %48, <4 x float> zeroinitializer
  %51 = add nsw i64 %28, 16
  %52 = getelementptr inbounds float, ptr %T_relu, i64 %51
  store <4 x float> %50, ptr %52, align 16, !tbaa !7675
  %53 = fadd <4 x float> %27, %407
  %54 = fcmp ogt <4 x float> %53, zeroinitializer
  %55 = select <4 x i1> %54, <4 x float> %53, <4 x float> zeroinitializer
  %56 = add nsw i64 %28, 20
  %57 = getelementptr inbounds float, ptr %T_relu, i64 %56
  store <4 x float> %55, ptr %57, align 16, !tbaa !7675
  %58 = fadd <4 x float> %27, %413
  %59 = fcmp ogt <4 x float> %58, zeroinitializer
  %60 = select <4 x i1> %59, <4 x float> %58, <4 x float> zeroinitializer
  %61 = add nsw i64 %28, 24
  %62 = getelementptr inbounds float, ptr %T_relu, i64 %61
  store <4 x float> %60, ptr %62, align 16, !tbaa !7675
  %63 = fadd <4 x float> %27, %419
  %64 = fcmp ogt <4 x float> %63, zeroinitializer
  %65 = select <4 x i1> %64, <4 x float> %63, <4 x float> zeroinitializer
  %66 = add nsw i64 %28, 28
  %67 = getelementptr inbounds float, ptr %T_relu, i64 %66
  store <4 x float> %65, ptr %67, align 16, !tbaa !7675
  %68 = fadd <4 x float> %27, %425
  %69 = fcmp ogt <4 x float> %68, zeroinitializer
  %70 = select <4 x i1> %69, <4 x float> %68, <4 x float> zeroinitializer
  %71 = add nsw i64 %28, 32
  %72 = getelementptr inbounds float, ptr %T_relu, i64 %71
  store <4 x float> %70, ptr %72, align 16, !tbaa !7675
  %73 = fadd <4 x float> %27, %431
  %74 = fcmp ogt <4 x float> %73, zeroinitializer
  %75 = select <4 x i1> %74, <4 x float> %73, <4 x float> zeroinitializer
  %76 = add nsw i64 %28, 36
  %77 = getelementptr inbounds float, ptr %T_relu, i64 %76
  store <4 x float> %75, ptr %77, align 16, !tbaa !7675
  %78 = fadd <4 x float> %27, %437
  %79 = fcmp ogt <4 x float> %78, zeroinitializer
  %80 = select <4 x i1> %79, <4 x float> %78, <4 x float> zeroinitializer
  %81 = add nsw i64 %28, 40
  %82 = getelementptr inbounds float, ptr %T_relu, i64 %81
  store <4 x float> %80, ptr %82, align 16, !tbaa !7675
  %83 = fadd <4 x float> %27, %443
  %84 = fcmp ogt <4 x float> %83, zeroinitializer
  %85 = select <4 x i1> %84, <4 x float> %83, <4 x float> zeroinitializer
  %86 = add nsw i64 %28, 44
  %87 = getelementptr inbounds float, ptr %T_relu, i64 %86
  store <4 x float> %85, ptr %87, align 16, !tbaa !7675
  %88 = fadd <4 x float> %27, %449
  %89 = fcmp ogt <4 x float> %88, zeroinitializer
  %90 = select <4 x i1> %89, <4 x float> %88, <4 x float> zeroinitializer
  %91 = add nsw i64 %28, 48
  %92 = getelementptr inbounds float, ptr %T_relu, i64 %91
  store <4 x float> %90, ptr %92, align 16, !tbaa !7675
  %93 = fadd <4 x float> %27, %455
  %94 = fcmp ogt <4 x float> %93, zeroinitializer
  %95 = select <4 x i1> %94, <4 x float> %93, <4 x float> zeroinitializer
  %96 = add nsw i64 %28, 52
  %97 = getelementptr inbounds float, ptr %T_relu, i64 %96
  store <4 x float> %95, ptr %97, align 16, !tbaa !7675
  %indvars.iv.next189 = add nsw i64 %indvars.iv188, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next189 to i32
  %exitcond190.not = icmp eq i32 %16, %lftr.wideiv
  br i1 %exitcond190.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_body_ax0.ax1.fused.ax2.fused, !prof !52

for_begin_kh.preheader:                           ; preds = %for_body_ax0.ax1.fused.ax2.fused, %for_end_kh
  %indvars.iv180 = phi i64 [ 0, %for_body_ax0.ax1.fused.ax2.fused ], [ %indvars.iv.next181, %for_end_kh ]
  %.lcssa29.lcssa70.lcssa112151 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %377, %for_end_kh ]
  %.lcssa231.lcssa72.lcssa114150 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %383, %for_end_kh ]
  %.lcssa432.lcssa74.lcssa116149 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %389, %for_end_kh ]
  %.lcssa634.lcssa75.lcssa118148 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %395, %for_end_kh ]
  %.lcssa836.lcssa77.lcssa119147 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %401, %for_end_kh ]
  %.lcssa1038.lcssa79.lcssa121146 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %407, %for_end_kh ]
  %.lcssa1240.lcssa81.lcssa123145 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %413, %for_end_kh ]
  %.lcssa1442.lcssa83.lcssa125144 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %419, %for_end_kh ]
  %.lcssa1644.lcssa85.lcssa127143 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %425, %for_end_kh ]
  %.lcssa1846.lcssa87.lcssa129142 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %431, %for_end_kh ]
  %.lcssa2048.lcssa89.lcssa131141 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %437, %for_end_kh ]
  %.lcssa2250.lcssa91.lcssa133140 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %443, %for_end_kh ]
  %.lcssa2452.lcssa93.lcssa135139 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %449, %for_end_kh ]
  %.lcssa2654.lcssa95.lcssa137138 = phi <4 x float> [ zeroinitializer, %for_body_ax0.ax1.fused.ax2.fused ], [ %455, %for_end_kh ]
  %98 = mul nuw nsw i64 %indvars.iv180, 3364
  %99 = add nsw i64 %98, %23
  %100 = mul nuw nsw i64 %indvars.iv180, 144
  %101 = add nsw i64 %100, %22
  br label %for_begin_kw.preheader

for_begin_kw.preheader:                           ; preds = %for_begin_kh.preheader, %for_end_kw
  %indvars.iv176 = phi i64 [ 0, %for_begin_kh.preheader ], [ %indvars.iv.next177, %for_end_kw ]
  %.lcssa29.lcssa70109 = phi <4 x float> [ %.lcssa29.lcssa70.lcssa112151, %for_begin_kh.preheader ], [ %377, %for_end_kw ]
  %.lcssa231.lcssa72108 = phi <4 x float> [ %.lcssa231.lcssa72.lcssa114150, %for_begin_kh.preheader ], [ %383, %for_end_kw ]
  %.lcssa432.lcssa74107 = phi <4 x float> [ %.lcssa432.lcssa74.lcssa116149, %for_begin_kh.preheader ], [ %389, %for_end_kw ]
  %.lcssa634.lcssa75106 = phi <4 x float> [ %.lcssa634.lcssa75.lcssa118148, %for_begin_kh.preheader ], [ %395, %for_end_kw ]
  %.lcssa836.lcssa77105 = phi <4 x float> [ %.lcssa836.lcssa77.lcssa119147, %for_begin_kh.preheader ], [ %401, %for_end_kw ]
  %.lcssa1038.lcssa79104 = phi <4 x float> [ %.lcssa1038.lcssa79.lcssa121146, %for_begin_kh.preheader ], [ %407, %for_end_kw ]
  %.lcssa1240.lcssa81103 = phi <4 x float> [ %.lcssa1240.lcssa81.lcssa123145, %for_begin_kh.preheader ], [ %413, %for_end_kw ]
  %.lcssa1442.lcssa83102 = phi <4 x float> [ %.lcssa1442.lcssa83.lcssa125144, %for_begin_kh.preheader ], [ %419, %for_end_kw ]
  %.lcssa1644.lcssa85101 = phi <4 x float> [ %.lcssa1644.lcssa85.lcssa127143, %for_begin_kh.preheader ], [ %425, %for_end_kw ]
  %.lcssa1846.lcssa87100 = phi <4 x float> [ %.lcssa1846.lcssa87.lcssa129142, %for_begin_kh.preheader ], [ %431, %for_end_kw ]
  %.lcssa2048.lcssa8999 = phi <4 x float> [ %.lcssa2048.lcssa89.lcssa131141, %for_begin_kh.preheader ], [ %437, %for_end_kw ]
  %.lcssa2250.lcssa9198 = phi <4 x float> [ %.lcssa2250.lcssa91.lcssa133140, %for_begin_kh.preheader ], [ %443, %for_end_kw ]
  %.lcssa2452.lcssa9397 = phi <4 x float> [ %.lcssa2452.lcssa93.lcssa135139, %for_begin_kh.preheader ], [ %449, %for_end_kw ]
  %.lcssa2654.lcssa9596 = phi <4 x float> [ %.lcssa2654.lcssa95.lcssa137138, %for_begin_kh.preheader ], [ %455, %for_end_kw ]
  %102 = mul nuw nsw i64 %indvars.iv176, 116
  %103 = add nsw i64 %99, %102
  %104 = mul nuw nsw i64 %indvars.iv176, 48
  %105 = add nsw i64 %101, %104
  br label %for_begin_ic.inner.preheader

for_end_kh:                                       ; preds = %for_end_kw
  %indvars.iv.next181 = add nuw nsw i64 %indvars.iv180, 1
  %exitcond183.not = icmp eq i64 %indvars.iv.next181, 64
  br i1 %exitcond183.not, label %for_begin_ax3.inner.preheader, label %for_begin_kh.preheader, !prof !52

for_begin_ic.inner.preheader:                     ; preds = %for_begin_kw.preheader, %for_begin_ic.inner.preheader
  %indvars.iv = phi i64 [ 0, %for_begin_kw.preheader ], [ %indvars.iv.next, %for_begin_ic.inner.preheader ]
  %.lcssa2968 = phi <4 x float> [ %.lcssa29.lcssa70109, %for_begin_kw.preheader ], [ %377, %for_begin_ic.inner.preheader ]
  %.lcssa23167 = phi <4 x float> [ %.lcssa231.lcssa72108, %for_begin_kw.preheader ], [ %383, %for_begin_ic.inner.preheader ]
  %.lcssa43266 = phi <4 x float> [ %.lcssa432.lcssa74107, %for_begin_kw.preheader ], [ %389, %for_begin_ic.inner.preheader ]
  %.lcssa63465 = phi <4 x float> [ %.lcssa634.lcssa75106, %for_begin_kw.preheader ], [ %395, %for_begin_ic.inner.preheader ]
  %.lcssa83664 = phi <4 x float> [ %.lcssa836.lcssa77105, %for_begin_kw.preheader ], [ %401, %for_begin_ic.inner.preheader ]
  %.lcssa103863 = phi <4 x float> [ %.lcssa1038.lcssa79104, %for_begin_kw.preheader ], [ %407, %for_begin_ic.inner.preheader ]
  %.lcssa124062 = phi <4 x float> [ %.lcssa1240.lcssa81103, %for_begin_kw.preheader ], [ %413, %for_begin_ic.inner.preheader ]
  %.lcssa144261 = phi <4 x float> [ %.lcssa1442.lcssa83102, %for_begin_kw.preheader ], [ %419, %for_begin_ic.inner.preheader ]
  %.lcssa164460 = phi <4 x float> [ %.lcssa1644.lcssa85101, %for_begin_kw.preheader ], [ %425, %for_begin_ic.inner.preheader ]
  %.lcssa184659 = phi <4 x float> [ %.lcssa1846.lcssa87100, %for_begin_kw.preheader ], [ %431, %for_begin_ic.inner.preheader ]
  %.lcssa204858 = phi <4 x float> [ %.lcssa2048.lcssa8999, %for_begin_kw.preheader ], [ %437, %for_begin_ic.inner.preheader ]
  %.lcssa225057 = phi <4 x float> [ %.lcssa2250.lcssa9198, %for_begin_kw.preheader ], [ %443, %for_begin_ic.inner.preheader ]
  %.lcssa245256 = phi <4 x float> [ %.lcssa2452.lcssa9397, %for_begin_kw.preheader ], [ %449, %for_begin_ic.inner.preheader ]
  %.lcssa265455 = phi <4 x float> [ %.lcssa2654.lcssa9596, %for_begin_kw.preheader ], [ %455, %for_begin_ic.inner.preheader ]
  %106 = shl nsw i64 %indvars.iv, 2
  %107 = add nsw i64 %103, %106
  %108 = shl nsw i64 %indvars.iv, 4
  %109 = add nsw i64 %105, %108
  %110 = getelementptr inbounds float, ptr %data_pad, i64 %107
  %111 = load float, ptr %110, align 4, !tbaa !7669
  %112 = insertelement <4 x float> undef, float %111, i64 0
  %113 = shufflevector <4 x float> %112, <4 x float> undef, <4 x i32> zeroinitializer
  %114 = getelementptr inbounds float, ptr %p1, i64 %109
  %115 = load <4 x float>, ptr %114, align 16, !tbaa !7677
  %116 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %113, <4 x float> %115, <4 x float> %.lcssa2968)
  %117 = add nsw i64 %107, 8
  %118 = getelementptr inbounds float, ptr %data_pad, i64 %117
  %119 = load float, ptr %118, align 4, !tbaa !7669
  %120 = insertelement <4 x float> undef, float %119, i64 0
  %121 = shufflevector <4 x float> %120, <4 x float> undef, <4 x i32> zeroinitializer
  %122 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %121, <4 x float> %115, <4 x float> %.lcssa23167)
  %123 = add nsw i64 %107, 16
  %124 = getelementptr inbounds float, ptr %data_pad, i64 %123
  %125 = load float, ptr %124, align 4, !tbaa !7669
  %126 = insertelement <4 x float> undef, float %125, i64 0
  %127 = shufflevector <4 x float> %126, <4 x float> undef, <4 x i32> zeroinitializer
  %128 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %127, <4 x float> %115, <4 x float> %.lcssa43266)
  %129 = add nsw i64 %107, 24
  %130 = getelementptr inbounds float, ptr %data_pad, i64 %129
  %131 = load float, ptr %130, align 4, !tbaa !7669
  %132 = insertelement <4 x float> undef, float %131, i64 0
  %133 = shufflevector <4 x float> %132, <4 x float> undef, <4 x i32> zeroinitializer
  %134 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %133, <4 x float> %115, <4 x float> %.lcssa63465)
  %135 = add nsw i64 %107, 32
  %136 = getelementptr inbounds float, ptr %data_pad, i64 %135
  %137 = load float, ptr %136, align 4, !tbaa !7669
  %138 = insertelement <4 x float> undef, float %137, i64 0
  %139 = shufflevector <4 x float> %138, <4 x float> undef, <4 x i32> zeroinitializer
  %140 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %139, <4 x float> %115, <4 x float> %.lcssa83664)
  %141 = add nsw i64 %107, 40
  %142 = getelementptr inbounds float, ptr %data_pad, i64 %141
  %143 = load float, ptr %142, align 4, !tbaa !7669
  %144 = insertelement <4 x float> undef, float %143, i64 0
  %145 = shufflevector <4 x float> %144, <4 x float> undef, <4 x i32> zeroinitializer
  %146 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %145, <4 x float> %115, <4 x float> %.lcssa103863)
  %147 = add nsw i64 %107, 48
  %148 = getelementptr inbounds float, ptr %data_pad, i64 %147
  %149 = load float, ptr %148, align 4, !tbaa !7669
  %150 = insertelement <4 x float> undef, float %149, i64 0
  %151 = shufflevector <4 x float> %150, <4 x float> undef, <4 x i32> zeroinitializer
  %152 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %151, <4 x float> %115, <4 x float> %.lcssa124062)
  %153 = add nsw i64 %107, 56
  %154 = getelementptr inbounds float, ptr %data_pad, i64 %153
  %155 = load float, ptr %154, align 4, !tbaa !7669
  %156 = insertelement <4 x float> undef, float %155, i64 0
  %157 = shufflevector <4 x float> %156, <4 x float> undef, <4 x i32> zeroinitializer
  %158 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %157, <4 x float> %115, <4 x float> %.lcssa144261)
  %159 = add nsw i64 %107, 64
  %160 = getelementptr inbounds float, ptr %data_pad, i64 %159
  %161 = load float, ptr %160, align 4, !tbaa !7669
  %162 = insertelement <4 x float> undef, float %161, i64 0
  %163 = shufflevector <4 x float> %162, <4 x float> undef, <4 x i32> zeroinitializer
  %164 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %163, <4 x float> %115, <4 x float> %.lcssa164460)
  %165 = add nsw i64 %107, 72
  %166 = getelementptr inbounds float, ptr %data_pad, i64 %165
  %167 = load float, ptr %166, align 4, !tbaa !7669
  %168 = insertelement <4 x float> undef, float %167, i64 0
  %169 = shufflevector <4 x float> %168, <4 x float> undef, <4 x i32> zeroinitializer
  %170 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %169, <4 x float> %115, <4 x float> %.lcssa184659)
  %171 = add nsw i64 %107, 80
  %172 = getelementptr inbounds float, ptr %data_pad, i64 %171
  %173 = load float, ptr %172, align 4, !tbaa !7669
  %174 = insertelement <4 x float> undef, float %173, i64 0
  %175 = shufflevector <4 x float> %174, <4 x float> undef, <4 x i32> zeroinitializer
  %176 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %175, <4 x float> %115, <4 x float> %.lcssa204858)
  %177 = add nsw i64 %107, 88
  %178 = getelementptr inbounds float, ptr %data_pad, i64 %177
  %179 = load float, ptr %178, align 4, !tbaa !7669
  %180 = insertelement <4 x float> undef, float %179, i64 0
  %181 = shufflevector <4 x float> %180, <4 x float> undef, <4 x i32> zeroinitializer
  %182 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %181, <4 x float> %115, <4 x float> %.lcssa225057)
  %183 = add nsw i64 %107, 96
  %184 = getelementptr inbounds float, ptr %data_pad, i64 %183
  %185 = load float, ptr %184, align 4, !tbaa !7669
  %186 = insertelement <4 x float> undef, float %185, i64 0
  %187 = shufflevector <4 x float> %186, <4 x float> undef, <4 x i32> zeroinitializer
  %188 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %187, <4 x float> %115, <4 x float> %.lcssa245256)
  %189 = add nsw i64 %107, 104
  %190 = getelementptr inbounds float, ptr %data_pad, i64 %189
  %191 = load float, ptr %190, align 4, !tbaa !7669
  %192 = insertelement <4 x float> undef, float %191, i64 0
  %193 = shufflevector <4 x float> %192, <4 x float> undef, <4 x i32> zeroinitializer
  %194 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %193, <4 x float> %115, <4 x float> %.lcssa265455)
  %195 = or i64 %107, 1
  %196 = or i64 %109, 4
  %197 = getelementptr inbounds float, ptr %data_pad, i64 %195
  %198 = load float, ptr %197, align 4, !tbaa !7669
  %199 = insertelement <4 x float> undef, float %198, i64 0
  %200 = shufflevector <4 x float> %199, <4 x float> undef, <4 x i32> zeroinitializer
  %201 = getelementptr inbounds float, ptr %p1, i64 %196
  %202 = load <4 x float>, ptr %201, align 16, !tbaa !7677
  %203 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %200, <4 x float> %202, <4 x float> %116)
  %204 = add nsw i64 %107, 9
  %205 = getelementptr inbounds float, ptr %data_pad, i64 %204
  %206 = load float, ptr %205, align 4, !tbaa !7669
  %207 = insertelement <4 x float> undef, float %206, i64 0
  %208 = shufflevector <4 x float> %207, <4 x float> undef, <4 x i32> zeroinitializer
  %209 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %208, <4 x float> %202, <4 x float> %122)
  %210 = add nsw i64 %107, 17
  %211 = getelementptr inbounds float, ptr %data_pad, i64 %210
  %212 = load float, ptr %211, align 4, !tbaa !7669
  %213 = insertelement <4 x float> undef, float %212, i64 0
  %214 = shufflevector <4 x float> %213, <4 x float> undef, <4 x i32> zeroinitializer
  %215 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %214, <4 x float> %202, <4 x float> %128)
  %216 = add nsw i64 %107, 25
  %217 = getelementptr inbounds float, ptr %data_pad, i64 %216
  %218 = load float, ptr %217, align 4, !tbaa !7669
  %219 = insertelement <4 x float> undef, float %218, i64 0
  %220 = shufflevector <4 x float> %219, <4 x float> undef, <4 x i32> zeroinitializer
  %221 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %220, <4 x float> %202, <4 x float> %134)
  %222 = add nsw i64 %107, 33
  %223 = getelementptr inbounds float, ptr %data_pad, i64 %222
  %224 = load float, ptr %223, align 4, !tbaa !7669
  %225 = insertelement <4 x float> undef, float %224, i64 0
  %226 = shufflevector <4 x float> %225, <4 x float> undef, <4 x i32> zeroinitializer
  %227 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %226, <4 x float> %202, <4 x float> %140)
  %228 = add nsw i64 %107, 41
  %229 = getelementptr inbounds float, ptr %data_pad, i64 %228
  %230 = load float, ptr %229, align 4, !tbaa !7669
  %231 = insertelement <4 x float> undef, float %230, i64 0
  %232 = shufflevector <4 x float> %231, <4 x float> undef, <4 x i32> zeroinitializer
  %233 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %232, <4 x float> %202, <4 x float> %146)
  %234 = add nsw i64 %107, 49
  %235 = getelementptr inbounds float, ptr %data_pad, i64 %234
  %236 = load float, ptr %235, align 4, !tbaa !7669
  %237 = insertelement <4 x float> undef, float %236, i64 0
  %238 = shufflevector <4 x float> %237, <4 x float> undef, <4 x i32> zeroinitializer
  %239 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %238, <4 x float> %202, <4 x float> %152)
  %240 = add nsw i64 %107, 57
  %241 = getelementptr inbounds float, ptr %data_pad, i64 %240
  %242 = load float, ptr %241, align 4, !tbaa !7669
  %243 = insertelement <4 x float> undef, float %242, i64 0
  %244 = shufflevector <4 x float> %243, <4 x float> undef, <4 x i32> zeroinitializer
  %245 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %244, <4 x float> %202, <4 x float> %158)
  %246 = add nsw i64 %107, 65
  %247 = getelementptr inbounds float, ptr %data_pad, i64 %246
  %248 = load float, ptr %247, align 4, !tbaa !7669
  %249 = insertelement <4 x float> undef, float %248, i64 0
  %250 = shufflevector <4 x float> %249, <4 x float> undef, <4 x i32> zeroinitializer
  %251 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %250, <4 x float> %202, <4 x float> %164)
  %252 = add nsw i64 %107, 73
  %253 = getelementptr inbounds float, ptr %data_pad, i64 %252
  %254 = load float, ptr %253, align 4, !tbaa !7669
  %255 = insertelement <4 x float> undef, float %254, i64 0
  %256 = shufflevector <4 x float> %255, <4 x float> undef, <4 x i32> zeroinitializer
  %257 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %256, <4 x float> %202, <4 x float> %170)
  %258 = add nsw i64 %107, 81
  %259 = getelementptr inbounds float, ptr %data_pad, i64 %258
  %260 = load float, ptr %259, align 4, !tbaa !7669
  %261 = insertelement <4 x float> undef, float %260, i64 0
  %262 = shufflevector <4 x float> %261, <4 x float> undef, <4 x i32> zeroinitializer
  %263 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %262, <4 x float> %202, <4 x float> %176)
  %264 = add nsw i64 %107, 89
  %265 = getelementptr inbounds float, ptr %data_pad, i64 %264
  %266 = load float, ptr %265, align 4, !tbaa !7669
  %267 = insertelement <4 x float> undef, float %266, i64 0
  %268 = shufflevector <4 x float> %267, <4 x float> undef, <4 x i32> zeroinitializer
  %269 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %268, <4 x float> %202, <4 x float> %182)
  %270 = add nsw i64 %107, 97
  %271 = getelementptr inbounds float, ptr %data_pad, i64 %270
  %272 = load float, ptr %271, align 4, !tbaa !7669
  %273 = insertelement <4 x float> undef, float %272, i64 0
  %274 = shufflevector <4 x float> %273, <4 x float> undef, <4 x i32> zeroinitializer
  %275 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %274, <4 x float> %202, <4 x float> %188)
  %276 = add nsw i64 %107, 105
  %277 = getelementptr inbounds float, ptr %data_pad, i64 %276
  %278 = load float, ptr %277, align 4, !tbaa !7669
  %279 = insertelement <4 x float> undef, float %278, i64 0
  %280 = shufflevector <4 x float> %279, <4 x float> undef, <4 x i32> zeroinitializer
  %281 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %280, <4 x float> %202, <4 x float> %194)
  %282 = or i64 %107, 2
  %283 = or i64 %109, 8
  %284 = getelementptr inbounds float, ptr %data_pad, i64 %282
  %285 = load float, ptr %284, align 4, !tbaa !7669
  %286 = insertelement <4 x float> undef, float %285, i64 0
  %287 = shufflevector <4 x float> %286, <4 x float> undef, <4 x i32> zeroinitializer
  %288 = getelementptr inbounds float, ptr %p1, i64 %283
  %289 = load <4 x float>, ptr %288, align 16, !tbaa !7677
  %290 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %287, <4 x float> %289, <4 x float> %203)
  %291 = add nsw i64 %107, 10
  %292 = getelementptr inbounds float, ptr %data_pad, i64 %291
  %293 = load float, ptr %292, align 4, !tbaa !7669
  %294 = insertelement <4 x float> undef, float %293, i64 0
  %295 = shufflevector <4 x float> %294, <4 x float> undef, <4 x i32> zeroinitializer
  %296 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %295, <4 x float> %289, <4 x float> %209)
  %297 = add nsw i64 %107, 18
  %298 = getelementptr inbounds float, ptr %data_pad, i64 %297
  %299 = load float, ptr %298, align 4, !tbaa !7669
  %300 = insertelement <4 x float> undef, float %299, i64 0
  %301 = shufflevector <4 x float> %300, <4 x float> undef, <4 x i32> zeroinitializer
  %302 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %301, <4 x float> %289, <4 x float> %215)
  %303 = add nsw i64 %107, 26
  %304 = getelementptr inbounds float, ptr %data_pad, i64 %303
  %305 = load float, ptr %304, align 4, !tbaa !7669
  %306 = insertelement <4 x float> undef, float %305, i64 0
  %307 = shufflevector <4 x float> %306, <4 x float> undef, <4 x i32> zeroinitializer
  %308 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %307, <4 x float> %289, <4 x float> %221)
  %309 = add nsw i64 %107, 34
  %310 = getelementptr inbounds float, ptr %data_pad, i64 %309
  %311 = load float, ptr %310, align 4, !tbaa !7669
  %312 = insertelement <4 x float> undef, float %311, i64 0
  %313 = shufflevector <4 x float> %312, <4 x float> undef, <4 x i32> zeroinitializer
  %314 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %313, <4 x float> %289, <4 x float> %227)
  %315 = add nsw i64 %107, 42
  %316 = getelementptr inbounds float, ptr %data_pad, i64 %315
  %317 = load float, ptr %316, align 4, !tbaa !7669
  %318 = insertelement <4 x float> undef, float %317, i64 0
  %319 = shufflevector <4 x float> %318, <4 x float> undef, <4 x i32> zeroinitializer
  %320 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %319, <4 x float> %289, <4 x float> %233)
  %321 = add nsw i64 %107, 50
  %322 = getelementptr inbounds float, ptr %data_pad, i64 %321
  %323 = load float, ptr %322, align 4, !tbaa !7669
  %324 = insertelement <4 x float> undef, float %323, i64 0
  %325 = shufflevector <4 x float> %324, <4 x float> undef, <4 x i32> zeroinitializer
  %326 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %325, <4 x float> %289, <4 x float> %239)
  %327 = add nsw i64 %107, 58
  %328 = getelementptr inbounds float, ptr %data_pad, i64 %327
  %329 = load float, ptr %328, align 4, !tbaa !7669
  %330 = insertelement <4 x float> undef, float %329, i64 0
  %331 = shufflevector <4 x float> %330, <4 x float> undef, <4 x i32> zeroinitializer
  %332 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %331, <4 x float> %289, <4 x float> %245)
  %333 = add nsw i64 %107, 66
  %334 = getelementptr inbounds float, ptr %data_pad, i64 %333
  %335 = load float, ptr %334, align 4, !tbaa !7669
  %336 = insertelement <4 x float> undef, float %335, i64 0
  %337 = shufflevector <4 x float> %336, <4 x float> undef, <4 x i32> zeroinitializer
  %338 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %337, <4 x float> %289, <4 x float> %251)
  %339 = add nsw i64 %107, 74
  %340 = getelementptr inbounds float, ptr %data_pad, i64 %339
  %341 = load float, ptr %340, align 4, !tbaa !7669
  %342 = insertelement <4 x float> undef, float %341, i64 0
  %343 = shufflevector <4 x float> %342, <4 x float> undef, <4 x i32> zeroinitializer
  %344 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %343, <4 x float> %289, <4 x float> %257)
  %345 = add nsw i64 %107, 82
  %346 = getelementptr inbounds float, ptr %data_pad, i64 %345
  %347 = load float, ptr %346, align 4, !tbaa !7669
  %348 = insertelement <4 x float> undef, float %347, i64 0
  %349 = shufflevector <4 x float> %348, <4 x float> undef, <4 x i32> zeroinitializer
  %350 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %349, <4 x float> %289, <4 x float> %263)
  %351 = add nsw i64 %107, 90
  %352 = getelementptr inbounds float, ptr %data_pad, i64 %351
  %353 = load float, ptr %352, align 4, !tbaa !7669
  %354 = insertelement <4 x float> undef, float %353, i64 0
  %355 = shufflevector <4 x float> %354, <4 x float> undef, <4 x i32> zeroinitializer
  %356 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %355, <4 x float> %289, <4 x float> %269)
  %357 = add nsw i64 %107, 98
  %358 = getelementptr inbounds float, ptr %data_pad, i64 %357
  %359 = load float, ptr %358, align 4, !tbaa !7669
  %360 = insertelement <4 x float> undef, float %359, i64 0
  %361 = shufflevector <4 x float> %360, <4 x float> undef, <4 x i32> zeroinitializer
  %362 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %361, <4 x float> %289, <4 x float> %275)
  %363 = add nsw i64 %107, 106
  %364 = getelementptr inbounds float, ptr %data_pad, i64 %363
  %365 = load float, ptr %364, align 4, !tbaa !7669
  %366 = insertelement <4 x float> undef, float %365, i64 0
  %367 = shufflevector <4 x float> %366, <4 x float> undef, <4 x i32> zeroinitializer
  %368 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %367, <4 x float> %289, <4 x float> %281)
  %369 = or i64 %107, 3
  %370 = or i64 %109, 12
  %371 = getelementptr inbounds float, ptr %data_pad, i64 %369
  %372 = load float, ptr %371, align 4, !tbaa !7669
  %373 = insertelement <4 x float> undef, float %372, i64 0
  %374 = shufflevector <4 x float> %373, <4 x float> undef, <4 x i32> zeroinitializer
  %375 = getelementptr inbounds float, ptr %p1, i64 %370
  %376 = load <4 x float>, ptr %375, align 16, !tbaa !7677
  %377 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %374, <4 x float> %376, <4 x float> %290)
  %378 = add nsw i64 %107, 11
  %379 = getelementptr inbounds float, ptr %data_pad, i64 %378
  %380 = load float, ptr %379, align 4, !tbaa !7669
  %381 = insertelement <4 x float> undef, float %380, i64 0
  %382 = shufflevector <4 x float> %381, <4 x float> undef, <4 x i32> zeroinitializer
  %383 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %382, <4 x float> %376, <4 x float> %296)
  %384 = add nsw i64 %107, 19
  %385 = getelementptr inbounds float, ptr %data_pad, i64 %384
  %386 = load float, ptr %385, align 4, !tbaa !7669
  %387 = insertelement <4 x float> undef, float %386, i64 0
  %388 = shufflevector <4 x float> %387, <4 x float> undef, <4 x i32> zeroinitializer
  %389 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %388, <4 x float> %376, <4 x float> %302)
  %390 = add nsw i64 %107, 27
  %391 = getelementptr inbounds float, ptr %data_pad, i64 %390
  %392 = load float, ptr %391, align 4, !tbaa !7669
  %393 = insertelement <4 x float> undef, float %392, i64 0
  %394 = shufflevector <4 x float> %393, <4 x float> undef, <4 x i32> zeroinitializer
  %395 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %394, <4 x float> %376, <4 x float> %308)
  %396 = add nsw i64 %107, 35
  %397 = getelementptr inbounds float, ptr %data_pad, i64 %396
  %398 = load float, ptr %397, align 4, !tbaa !7669
  %399 = insertelement <4 x float> undef, float %398, i64 0
  %400 = shufflevector <4 x float> %399, <4 x float> undef, <4 x i32> zeroinitializer
  %401 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %400, <4 x float> %376, <4 x float> %314)
  %402 = add nsw i64 %107, 43
  %403 = getelementptr inbounds float, ptr %data_pad, i64 %402
  %404 = load float, ptr %403, align 4, !tbaa !7669
  %405 = insertelement <4 x float> undef, float %404, i64 0
  %406 = shufflevector <4 x float> %405, <4 x float> undef, <4 x i32> zeroinitializer
  %407 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %406, <4 x float> %376, <4 x float> %320)
  %408 = add nsw i64 %107, 51
  %409 = getelementptr inbounds float, ptr %data_pad, i64 %408
  %410 = load float, ptr %409, align 4, !tbaa !7669
  %411 = insertelement <4 x float> undef, float %410, i64 0
  %412 = shufflevector <4 x float> %411, <4 x float> undef, <4 x i32> zeroinitializer
  %413 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %412, <4 x float> %376, <4 x float> %326)
  %414 = add nsw i64 %107, 59
  %415 = getelementptr inbounds float, ptr %data_pad, i64 %414
  %416 = load float, ptr %415, align 4, !tbaa !7669
  %417 = insertelement <4 x float> undef, float %416, i64 0
  %418 = shufflevector <4 x float> %417, <4 x float> undef, <4 x i32> zeroinitializer
  %419 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %418, <4 x float> %376, <4 x float> %332)
  %420 = add nsw i64 %107, 67
  %421 = getelementptr inbounds float, ptr %data_pad, i64 %420
  %422 = load float, ptr %421, align 4, !tbaa !7669
  %423 = insertelement <4 x float> undef, float %422, i64 0
  %424 = shufflevector <4 x float> %423, <4 x float> undef, <4 x i32> zeroinitializer
  %425 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %424, <4 x float> %376, <4 x float> %338)
  %426 = add nsw i64 %107, 75
  %427 = getelementptr inbounds float, ptr %data_pad, i64 %426
  %428 = load float, ptr %427, align 4, !tbaa !7669
  %429 = insertelement <4 x float> undef, float %428, i64 0
  %430 = shufflevector <4 x float> %429, <4 x float> undef, <4 x i32> zeroinitializer
  %431 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %430, <4 x float> %376, <4 x float> %344)
  %432 = add nsw i64 %107, 83
  %433 = getelementptr inbounds float, ptr %data_pad, i64 %432
  %434 = load float, ptr %433, align 4, !tbaa !7669
  %435 = insertelement <4 x float> undef, float %434, i64 0
  %436 = shufflevector <4 x float> %435, <4 x float> undef, <4 x i32> zeroinitializer
  %437 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %436, <4 x float> %376, <4 x float> %350)
  %438 = add nsw i64 %107, 91
  %439 = getelementptr inbounds float, ptr %data_pad, i64 %438
  %440 = load float, ptr %439, align 4, !tbaa !7669
  %441 = insertelement <4 x float> undef, float %440, i64 0
  %442 = shufflevector <4 x float> %441, <4 x float> undef, <4 x i32> zeroinitializer
  %443 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %442, <4 x float> %376, <4 x float> %356)
  %444 = add nsw i64 %107, 99
  %445 = getelementptr inbounds float, ptr %data_pad, i64 %444
  %446 = load float, ptr %445, align 4, !tbaa !7669
  %447 = insertelement <4 x float> undef, float %446, i64 0
  %448 = shufflevector <4 x float> %447, <4 x float> undef, <4 x i32> zeroinitializer
  %449 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %448, <4 x float> %376, <4 x float> %362)
  %450 = add nsw i64 %107, 107
  %451 = getelementptr inbounds float, ptr %data_pad, i64 %450
  %452 = load float, ptr %451, align 4, !tbaa !7669
  %453 = insertelement <4 x float> undef, float %452, i64 0
  %454 = shufflevector <4 x float> %453, <4 x float> undef, <4 x i32> zeroinitializer
  %455 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %454, <4 x float> %376, <4 x float> %368)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for_end_kw, label %for_begin_ic.inner.preheader, !prof !52

for_end_kw:                                       ; preds = %for_begin_ic.inner.preheader
  %indvars.iv.next177 = add nuw nsw i64 %indvars.iv176, 1
  %exitcond179.not = icmp eq i64 %indvars.iv.next177, 3
  br i1 %exitcond179.not, label %for_end_kh, label %for_begin_kw.preheader, !prof !52
}

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_contrib_dense_pack_add_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1, ptr noalias align 64 %2, ptr noalias align 64 %3) unnamed_addr #2 {
entry:
  %4 = alloca %closure_loop_parallel_ax1.outer.ax0.outer.fused, align 8
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds %closure_loop_parallel_ax1.outer.ax0.outer.fused, ptr %4, i64 0, i32 1
  store ptr %1, ptr %5, align 8
  %6 = getelementptr inbounds %closure_loop_parallel_ax1.outer.ax0.outer.fused, ptr %4, i64 0, i32 2
  store ptr %2, ptr %6, align 8
  %7 = getelementptr inbounds %closure_loop_parallel_ax1.outer.ax0.outer.fused, ptr %4, i64 0, i32 3
  store ptr %3, ptr %7, align 8
  %8 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %9 = call i32 %8(ptr nonnull @__tvm_parallel_lambda.1863, ptr nonnull %4, i32 0)
  ret i32 %9
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1863(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %p0 = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax1.outer.ax0.outer.fused, ptr %1, i64 0, i32 1
  %p1 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax1.outer.ax0.outer.fused, ptr %1, i64 0, i32 2
  %T_add = load ptr, ptr %3, align 8
  %4 = getelementptr inbounds %closure_loop_parallel_ax1.outer.ax0.outer.fused, ptr %1, i64 0, i32 3
  %p2 = load ptr, ptr %4, align 8
  %5 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %5, align 4
  %6 = add nsw i32 %num_task, 124
  %7 = sdiv i32 %6, %num_task
  %8 = add nsw i32 %task_id, 1
  %9 = mul nsw i32 %7, %8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 125)
  %11 = mul i32 %7, %task_id
  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 125)
  %13 = icmp slt i32 %12, %10
  br i1 %13, label %for_body_ax1.outer.ax0.outer.fused.preheader, label %for_end_ax1.outer.ax0.outer.fused, !prof !18

for_body_ax1.outer.ax0.outer.fused.preheader:     ; preds = %parallel_closure_entry
  %14 = tail call i32 @llvm.smin.i32(i32 %11, i32 125)
  %smin = sext i32 %14 to i64
  %15 = add i32 %10, %14
  %16 = sub i32 %15, %12
  br label %for_body_ax1.outer.ax0.outer.fused

for_body_ax1.outer.ax0.outer.fused:               ; preds = %for_body_ax1.outer.ax0.outer.fused.preheader, %for_end_k.outer
  %indvars.iv6 = phi i64 [ %smin, %for_body_ax1.outer.ax0.outer.fused.preheader ], [ %indvars.iv.next7, %for_end_k.outer ]
  %ax1.outer.ax0.outer.fused4 = phi i32 [ %12, %for_body_ax1.outer.ax0.outer.fused.preheader ], [ %43, %for_end_k.outer ]
  %17 = shl nsw i32 %ax1.outer.ax0.outer.fused4, 14
  %18 = sext i32 %17 to i64
  br label %for_body_k.outer

for_end_ax1.outer.ax0.outer.fused:                ; preds = %for_end_k.outer, %parallel_closure_entry
  ret i32 0

for_body_k.outer:                                 ; preds = %for_body_k.outer, %for_body_ax1.outer.ax0.outer.fused
  %indvars.iv = phi i64 [ 0, %for_body_ax1.outer.ax0.outer.fused ], [ %indvars.iv.next.1, %for_body_k.outer ]
  %compute.global.02 = phi <8 x float> [ zeroinitializer, %for_body_ax1.outer.ax0.outer.fused ], [ %36, %for_body_k.outer ]
  %19 = getelementptr inbounds float, ptr %p0, i64 %indvars.iv
  %20 = load float, ptr %19, align 4, !tbaa !7679
  %21 = insertelement <8 x float> undef, float %20, i64 0
  %22 = shufflevector <8 x float> %21, <8 x float> undef, <8 x i32> zeroinitializer
  %23 = shl nuw nsw i64 %indvars.iv, 3
  %24 = add nuw nsw i64 %23, %18
  %25 = getelementptr inbounds float, ptr %p1, i64 %24
  %26 = load <8 x float>, ptr %25, align 32, !tbaa !7681
  %27 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %22, <8 x float> %26, <8 x float> %compute.global.02)
  %indvars.iv.next = or i64 %indvars.iv, 1
  %28 = getelementptr inbounds float, ptr %p0, i64 %indvars.iv.next
  %29 = load float, ptr %28, align 4, !tbaa !7679
  %30 = insertelement <8 x float> undef, float %29, i64 0
  %31 = shufflevector <8 x float> %30, <8 x float> undef, <8 x i32> zeroinitializer
  %32 = shl nuw nsw i64 %indvars.iv.next, 3
  %33 = add nuw nsw i64 %32, %18
  %34 = getelementptr inbounds float, ptr %p1, i64 %33
  %35 = load <8 x float>, ptr %34, align 32, !tbaa !7681
  %36 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %31, <8 x float> %35, <8 x float> %27)
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 2048
  br i1 %exitcond.not.1, label %for_end_k.outer, label %for_body_k.outer, !prof !7085

for_end_k.outer:                                  ; preds = %for_body_k.outer
  %37 = trunc i64 %indvars.iv6 to i32
  %cse_var_1 = shl nsw i32 %37, 3
  %38 = sext i32 %cse_var_1 to i64
  %39 = getelementptr inbounds float, ptr %p2, i64 %38
  %40 = load <8 x float>, ptr %39, align 32, !tbaa !7683
  %41 = fadd <8 x float> %36, %40
  %42 = getelementptr inbounds float, ptr %T_add, i64 %38
  store <8 x float> %41, ptr %42, align 32, !tbaa !7685
  %indvars.iv.next7 = add nsw i64 %indvars.iv6, 1
  %43 = add nsw i32 %ax1.outer.ax0.outer.fused4, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next7 to i32
  %exitcond8.not = icmp eq i32 %16, %lftr.wideiv
  br i1 %exitcond8.not, label %for_end_ax1.outer.ax0.outer.fused, label %for_body_ax1.outer.ax0.outer.fused, !prof !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x float> @llvm.fmuladd.v8f32(<8 x float>, <8 x float>, <8 x float>) #5

; Function Attrs: noinline
define internal fastcc i32 @tvmgen_default_fused_nn_max_pool2d_compute_(ptr noalias align 64 %0, ptr noalias align 64 %1) unnamed_addr #2 {
entry:
  %2 = alloca %closure_loop_parallel_ax0.ax1.fused.ax2.fused.51, align 8
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.51, ptr %2, i64 0, i32 1
  store ptr %1, ptr %3, align 8
  %4 = load ptr, ptr @__TVMBackendParallelLaunch, align 8, !tbaa !19
  %5 = call i32 %4(ptr nonnull @__tvm_parallel_lambda.1888, ptr nonnull %2, i32 0)
  ret i32 %5
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none)
define private i32 @__tvm_parallel_lambda.1888(i32 %task_id, ptr nocapture readonly %0, ptr nocapture readonly %1) #3 {
parallel_closure_entry:
  %pool_max = load ptr, ptr %1, align 8
  %2 = getelementptr inbounds %closure_loop_parallel_ax0.ax1.fused.ax2.fused.51, ptr %1, i64 0, i32 1
  %p0 = load ptr, ptr %2, align 8
  %3 = getelementptr inbounds %4, ptr %0, i64 0, i32 1
  %num_task = load i32, ptr %3, align 4
  %4 = add nsw i32 %num_task, 111
  %5 = sdiv i32 %4, %num_task
  %6 = add nsw i32 %task_id, 1
  %7 = mul nsw i32 %5, %6
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 112)
  %9 = mul i32 %5, %task_id
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 112)
  %11 = icmp slt i32 %10, %8
  br i1 %11, label %for_begin_ax3.preheader.preheader, label %for_end_ax0.ax1.fused.ax2.fused, !prof !18

for_begin_ax3.preheader.preheader:                ; preds = %parallel_closure_entry
  %12 = tail call i32 @llvm.smin.i32(i32 %9, i32 112)
  %smin = sext i32 %12 to i64
  %13 = add i32 %8, %12
  %14 = sub i32 %13, %10
  br label %for_begin_ax3.preheader

for_begin_ax3.preheader:                          ; preds = %for_begin_ax3.preheader.preheader, %for_end_ax3
  %indvars.iv7 = phi i64 [ %smin, %for_begin_ax3.preheader.preheader ], [ %indvars.iv.next8, %for_end_ax3 ]
  %15 = mul nsw i64 %indvars.iv7, 1792
  %16 = trunc i64 %indvars.iv7 to i32
  %17 = srem i32 %16, 56
  %18 = trunc i64 %indvars.iv7 to i32
  %19 = mul i32 %18, 7168
  %20 = add i32 %19, -3616
  %21 = icmp sgt i32 %17, 0
  %22 = icmp sgt i32 %17, -1
  br label %for_body_ax3

for_end_ax0.ax1.fused.ax2.fused:                  ; preds = %for_end_ax3, %parallel_closure_entry
  ret i32 0

for_body_ax3:                                     ; preds = %for_begin_ax3.preheader, %if_end.8
  %indvars.iv = phi i64 [ 0, %for_begin_ax3.preheader ], [ %indvars.iv.next, %if_end.8 ]
  %23 = shl nuw nsw i64 %indvars.iv, 5
  %24 = add nsw i64 %23, %15
  %25 = getelementptr inbounds float, ptr %pool_max, i64 %24
  %indvars.iv.tr = trunc i64 %indvars.iv to i32
  %26 = shl i32 %indvars.iv.tr, 6
  %27 = add i32 %20, %26
  %28 = icmp ne i64 %indvars.iv, 0
  %29 = and i1 %28, %21
  br i1 %29, label %if_end.thread, label %if_end

for_end_ax3:                                      ; preds = %if_end.8
  %indvars.iv.next8 = add nsw i64 %indvars.iv7, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next8 to i32
  %exitcond9.not = icmp eq i32 %14, %lftr.wideiv
  br i1 %exitcond9.not, label %for_end_ax0.ax1.fused.ax2.fused, label %for_begin_ax3.preheader, !prof !52

if_end.thread:                                    ; preds = %for_body_ax3
  %30 = sext i32 %27 to i64
  %31 = getelementptr inbounds float, ptr %p0, i64 %30
  %32 = load <32 x float>, ptr %31, align 64, !tbaa !7687
  %33 = fcmp olt <32 x float> %32, <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>
  %34 = select <32 x i1> %33, <32 x float> <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, <32 x float> %32
  br label %if_then.2

if_end:                                           ; preds = %for_body_ax3
  br i1 %21, label %if_then.2, label %if_end.2

if_then.2:                                        ; preds = %if_end, %if_end.thread
  %35 = phi <32 x float> [ %34, %if_end.thread ], [ <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, %if_end ]
  %36 = add i32 %27, 32
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds float, ptr %p0, i64 %37
  %39 = load <32 x float>, ptr %38, align 64, !tbaa !7687
  %40 = fcmp ogt <32 x float> %35, %39
  %41 = select <32 x i1> %40, <32 x float> %35, <32 x float> %39
  %42 = add i32 %27, 64
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %p0, i64 %43
  %45 = load <32 x float>, ptr %44, align 64, !tbaa !7687
  br label %if_end.2

if_end.2:                                         ; preds = %if_end, %if_then.2
  %46 = phi <32 x float> [ %41, %if_then.2 ], [ <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, %if_end ]
  %47 = phi <32 x float> [ %45, %if_then.2 ], [ <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, %if_end ]
  %48 = fcmp ogt <32 x float> %46, %47
  %49 = select <32 x i1> %48, <32 x float> %46, <32 x float> %47
  %50 = and i1 %28, %22
  br i1 %50, label %if_end.3.thread, label %if_end.3

if_end.3.thread:                                  ; preds = %if_end.2
  %51 = add i32 %27, 3584
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds float, ptr %p0, i64 %52
  %54 = load <32 x float>, ptr %53, align 64, !tbaa !7687
  %55 = fcmp ogt <32 x float> %49, %54
  %56 = select <32 x i1> %55, <32 x float> %49, <32 x float> %54
  br label %if_end.5

if_end.3:                                         ; preds = %if_end.2
  %57 = fcmp ogt <32 x float> %49, <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>
  %58 = select <32 x i1> %57, <32 x float> %49, <32 x float> <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>
  br i1 %22, label %if_end.5, label %if_end.5.thread

if_end.5.thread:                                  ; preds = %if_end.3
  %59 = select <32 x i1> %57, <32 x float> %49, <32 x float> <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>
  br label %if_end.8

if_end.5:                                         ; preds = %if_end.3.thread, %if_end.3
  %60 = phi <32 x float> [ %56, %if_end.3.thread ], [ %58, %if_end.3 ]
  %61 = add i32 %19, %26
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds float, ptr %p0, i64 %62
  %64 = load <32 x float>, ptr %63, align 64, !tbaa !7687
  %65 = fcmp ogt <32 x float> %60, %64
  %66 = select <32 x i1> %65, <32 x float> %60, <32 x float> %64
  %67 = add i32 %27, 3648
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds float, ptr %p0, i64 %68
  %70 = load <32 x float>, ptr %69, align 64, !tbaa !7687
  %71 = fcmp ogt <32 x float> %66, %70
  %72 = select <32 x i1> %71, <32 x float> %66, <32 x float> %70
  br i1 %28, label %if_then.6, label %if_then.8

if_then.6:                                        ; preds = %if_end.5
  %73 = add i32 %27, 7168
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds float, ptr %p0, i64 %74
  %76 = load <32 x float>, ptr %75, align 64, !tbaa !7687
  br label %if_then.8

if_then.8:                                        ; preds = %if_end.5, %if_then.6
  %.sink12 = phi <32 x float> [ %76, %if_then.6 ], [ <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, %if_end.5 ]
  %77 = fcmp ogt <32 x float> %72, %.sink12
  %78 = select <32 x i1> %77, <32 x float> %72, <32 x float> %.sink12
  %79 = add i32 %27, 7200
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds float, ptr %p0, i64 %80
  %82 = load <32 x float>, ptr %81, align 64, !tbaa !7687
  %83 = fcmp ogt <32 x float> %78, %82
  %84 = select <32 x i1> %83, <32 x float> %78, <32 x float> %82
  %85 = add i32 %27, 7232
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds float, ptr %p0, i64 %86
  %88 = load <32 x float>, ptr %87, align 64, !tbaa !7687
  br label %if_end.8

if_end.8:                                         ; preds = %if_end.5.thread, %if_then.8
  %89 = phi <32 x float> [ %84, %if_then.8 ], [ %59, %if_end.5.thread ]
  %90 = phi <32 x float> [ %88, %if_then.8 ], [ <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, %if_end.5.thread ]
  %91 = fcmp ogt <32 x float> %89, %90
  %92 = select <32 x i1> %91, <32 x float> %89, <32 x float> %90
  store <32 x float> %92, ptr %25, align 64, !tbaa !7689
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 56
  br i1 %exitcond.not, label %for_end_ax3, label %for_body_ax3, !prof !52
}

; Function Attrs: nofree nosync nounwind memory(none)
define weak dso_local half @__truncsfhf2(float %a0) local_unnamed_addr #6 {
b0:
  %v0 = bitcast float %a0 to i32
  %v1 = and i32 %v0, 2147483647
  %v2 = add nsw i32 %v1, -947912704
  %v3 = add nsw i32 %v1, -1199570944
  %v4 = icmp ult i32 %v2, %v3
  br i1 %v4, label %b1, label %b5

b1:                                               ; preds = %b0
  %v5 = lshr i32 %v0, 13
  %v6 = and i32 %v5, 65535
  %v7 = add nuw nsw i32 %v6, -114688
  %v8 = and i32 %v0, 8191
  %v9 = icmp ugt i32 %v8, 4096
  br i1 %v9, label %b2, label %b3

b2:                                               ; preds = %b1
  %v10 = add nuw nsw i32 %v6, -114687
  br label %b13

b3:                                               ; preds = %b1
  %v11 = icmp eq i32 %v8, 4096
  br i1 %v11, label %b4, label %b13

b4:                                               ; preds = %b3
  %v12 = and i32 %v7, 65535
  %v13 = and i32 %v5, 1
  %v14 = add nuw nsw i32 %v12, %v13
  br label %b13

b5:                                               ; preds = %b0
  %v15 = icmp ugt i32 %v1, 2139095040
  br i1 %v15, label %b6, label %b7

b6:                                               ; preds = %b5
  %v16 = lshr i32 %v0, 13
  %v17 = and i32 %v16, 511
  %v18 = or i32 %v17, 32256
  br label %b13

b7:                                               ; preds = %b5
  %v19 = icmp ugt i32 %v1, 1199570943
  br i1 %v19, label %b13, label %b8

b8:                                               ; preds = %b7
  %v20 = icmp ult i32 %v1, 754974720
  br i1 %v20, label %b13, label %b9

b9:                                               ; preds = %b8
  %v21 = lshr i32 %v1, 23
  %v22 = sub nsw i32 113, %v21
  %v23 = and i32 %v0, 8388607
  %v24 = or i32 %v23, 8388608
  %v25 = add nsw i32 %v21, -81
  %v26 = shl i32 %v24, %v25
  %v27 = icmp ne i32 %v26, 0
  %v28 = lshr i32 %v24, %v22
  %v29 = zext i1 %v27 to i32
  %v30 = lshr i32 %v28, 13
  %v31 = and i32 %v28, 8191
  %v32 = or i32 %v31, %v29
  %v33 = icmp ugt i32 %v32, 4096
  br i1 %v33, label %b10, label %b11

b10:                                              ; preds = %b9
  %v34 = add nuw nsw i32 %v30, 1
  br label %b13

b11:                                              ; preds = %b9
  %v35 = icmp eq i32 %v32, 4096
  br i1 %v35, label %b12, label %b13

b12:                                              ; preds = %b11
  %v36 = and i32 %v30, 1
  %v37 = add nuw nsw i32 %v36, %v30
  br label %b13

b13:                                              ; preds = %b12, %b11, %b10, %b8, %b7, %b6, %b4, %b3, %b2
  %v38 = phi i32 [ %v18, %b6 ], [ %v10, %b2 ], [ %v14, %b4 ], [ %v7, %b3 ], [ 31744, %b7 ], [ 0, %b8 ], [ %v34, %b10 ], [ %v37, %b12 ], [ %v30, %b11 ]
  %v39 = lshr i32 %v0, 16
  %v40 = and i32 %v39, 32768
  %v41 = or i32 %v38, %v40
  %vlast = trunc i32 %v41 to i16
  %vres = bitcast i16 %vlast to half
  ret half %vres
}

; Function Attrs: nofree nosync nounwind memory(none)
define weak dso_local float @__extendhfsf2(half %a0) local_unnamed_addr #6 {
b0:
  %vinp = bitcast half %a0 to i16
  %v1 = and i16 %vinp, 32767
  %v2 = zext i16 %v1 to i32
  %v3 = add nsw i16 %v1, -1024
  %v4 = icmp ult i16 %v3, 30720
  br i1 %v4, label %b1, label %b2

b1:                                               ; preds = %b0
  %v5 = shl nuw nsw i32 %v2, 13
  %v6 = add nuw nsw i32 %v5, 939524096
  br label %b6

b2:                                               ; preds = %b0
  %v7 = icmp ugt i16 %v1, 31743
  br i1 %v7, label %b3, label %b4

b3:                                               ; preds = %b2
  %v8 = shl nuw nsw i32 %v2, 13
  %v9 = or i32 %v8, 2139095040
  br label %b6

b4:                                               ; preds = %b2
  %v10 = icmp eq i16 %v1, 0
  br i1 %v10, label %b6, label %b5

b5:                                               ; preds = %b4
  %v11 = icmp ult i16 %v1, 256
  %v12 = lshr i32 %v2, 8
  %v13 = select i1 %v11, i32 %v2, i32 %v12
  %v14 = select i1 %v11, i32 32, i32 24
  %v15 = icmp ult i32 %v13, 16
  %v16 = lshr i32 %v13, 4
  %v17 = add nsw i32 %v14, -4
  %v18 = select i1 %v15, i32 %v13, i32 %v16
  %v19 = select i1 %v15, i32 %v14, i32 %v17
  %v20 = icmp ult i32 %v18, 4
  %v21 = lshr i32 %v18, 2
  %v22 = add nsw i32 %v19, -2
  %v23 = select i1 %v20, i32 %v18, i32 %v21
  %v24 = select i1 %v20, i32 %v19, i32 %v22
  %v25 = icmp ult i32 %v23, 2
  %v26 = sub nsw i32 0, %v23
  %v27 = select i1 %v25, i32 %v26, i32 -2
  %v28 = add nsw i32 %v27, %v24
  %v29 = add nsw i32 %v28, -8
  %v30 = shl i32 %v2, %v29
  %v31 = xor i32 %v30, 8388608
  %v32 = shl i32 %v28, 23
  %v33 = sub i32 1124073472, %v32
  %v34 = or i32 %v31, %v33
  br label %b6

b6:                                               ; preds = %b5, %b4, %b3, %b1
  %v35 = phi i32 [ %v6, %b1 ], [ %v9, %b3 ], [ %v34, %b5 ], [ 0, %b4 ]
  %v36 = and i16 %vinp, -32768
  %v37 = zext i16 %v36 to i32
  %v38 = shl nuw i32 %v37, 16
  %v39 = or i32 %v35, %v38
  %v40 = bitcast i32 %v39 to float
  ret float %v40
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #7

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #7

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #9

attributes #0 = { "target-cpu"="generic" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #2 = { noinline "target-cpu"="generic" }
attributes #3 = { nofree nosync nounwind memory(readwrite, inaccessiblemem: none) "target-cpu"="generic" }
attributes #4 = { mustprogress nofree noinline nosync nounwind willreturn memory(argmem: readwrite) "target-cpu"="generic" }
attributes #5 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #6 = { nofree nosync nounwind memory(none) "target-cpu"="generic" "target-features" }
attributes #7 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #8 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #9 = { nocallback nofree nounwind willreturn memory(argmem: write) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "TVM", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug)
!1 = !DIFile(filename: "main.tir", directory: ".")
!2 = !{i32 2, !"tvm_target", !"llvm -mtriple=x86_64-pc-windows-msvc"}
!3 = !{i32 4, !"Debug Info Version", i32 3}
!4 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10)
!5 = !DISubroutineType(types: !6)
!6 = !{!7, !8, !9, !7, !8, !9, !8}
!7 = !DIBasicType(name: "int32", size: 32, encoding: DW_ATE_signed)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7)
!10 = !{!11, !12, !13, !14, !15, !16}
!11 = !DILocalVariable(name: "arg1", arg: 1, scope: !4, file: !1, type: !8)
!12 = !DILocalVariable(name: "arg2", arg: 2, scope: !4, file: !1, type: !9)
!13 = !DILocalVariable(name: "arg3", arg: 3, scope: !4, file: !1, type: !7)
!14 = !DILocalVariable(name: "arg4", arg: 4, scope: !4, file: !1, type: !8)
!15 = !DILocalVariable(name: "arg5", arg: 5, scope: !4, file: !1, type: !9)
!16 = !DILocalVariable(name: "arg6", arg: 6, scope: !4, file: !1, type: !8)
!17 = !DILocation(line: 0, scope: !4)
!18 = !{!"branch_weights", i32 1048576, i32 1}
!19 = !{!20, !20, i64 0}
!20 = !{!"ctx_ptr", !21, i64 0}
!21 = !{!"tvm-tbaa"}
!22 = !{!23, !23, i64 0}
!23 = !{!"000001F283347830.w4.b0", !24, i64 0}
!24 = !{!"000001F283347830.w8.b0", !25, i64 0}
!25 = !{!"000001F283347830.w16.b0", !26, i64 0}
!26 = !{!"000001F283347830.w32.b0", !27, i64 0}
!27 = !{!"000001F283347830.w64.b0", !28, i64 0}
!28 = !{!"000001F283347830.w128.b0", !29, i64 0}
!29 = !{!"000001F283347830.w256.b0", !30, i64 0}
!30 = !{!"000001F283347830.w512.b0", !31, i64 0}
!31 = !{!"000001F283347830.w1024.b0", !32, i64 0}
!32 = !{!"000001F283347830", !21, i64 0}
!33 = !{!34, !34, i64 0}
!34 = !{!"000001F283347830.w4.b4", !24, i64 0}
!35 = !{!36, !36, i64 0}
!36 = !{!"000001F28334C5F0.w8.b0", !37, i64 0}
!37 = !{!"000001F28334C5F0.w16.b0", !38, i64 0}
!38 = !{!"000001F28334C5F0.w32.b0", !39, i64 0}
!39 = !{!"000001F28334C5F0.w64.b0", !40, i64 0}
!40 = !{!"000001F28334C5F0.w128.b0", !41, i64 0}
!41 = !{!"000001F28334C5F0.w256.b0", !42, i64 0}
!42 = !{!"000001F28334C5F0.w512.b0", !43, i64 0}
!43 = !{!"000001F28334C5F0.w1024.b0", !44, i64 0}
!44 = !{!"000001F28334C5F0", !21, i64 0}
!45 = !{!46, !46, i64 0}
!46 = !{!"000001F28334C5F0.w8.b8", !37, i64 0}
!47 = !{!48, !48, i64 0}
!48 = !{!"000001F28334C5F0.w8.b16", !49, i64 0}
!49 = !{!"000001F28334C5F0.w16.b16", !38, i64 0}
!50 = !{!51, !51, i64 0}
!51 = !{!"000001F28334C5F0.w8.b24", !49, i64 0}
!52 = !{!"branch_weights", i32 1, i32 1048576}
!53 = !{!54, !54, i64 0}
!54 = !{!"000001F28334C370.w8.b8", !55, i64 0}
!55 = !{!"000001F28334C370.w16.b0", !56, i64 0}
!56 = !{!"000001F28334C370.w32.b0", !57, i64 0}
!57 = !{!"000001F28334C370.w64.b0", !58, i64 0}
!58 = !{!"000001F28334C370.w128.b0", !59, i64 0}
!59 = !{!"000001F28334C370.w256.b0", !60, i64 0}
!60 = !{!"000001F28334C370.w512.b0", !61, i64 0}
!61 = !{!"000001F28334C370.w1024.b0", !62, i64 0}
!62 = !{!"000001F28334C370", !21, i64 0}
!63 = !{!64, !64, i64 0}
!64 = !{!"000001F28334C370.w8.b16", !65, i64 0}
!65 = !{!"000001F28334C370.w16.b16", !56, i64 0}
!66 = !{!67, !67, i64 0}
!67 = !{!"000001F28334C370.w8.b24", !65, i64 0}
!68 = !{!69, !69, i64 0}
!69 = !{!"000001F28334D270.w8.b0", !70, i64 0}
!70 = !{!"000001F28334D270.w16.b0", !71, i64 0}
!71 = !{!"000001F28334D270.w32.b0", !72, i64 0}
!72 = !{!"000001F28334D270.w64.b0", !73, i64 0}
!73 = !{!"000001F28334D270.w128.b0", !74, i64 0}
!74 = !{!"000001F28334D270.w256.b0", !75, i64 0}
!75 = !{!"000001F28334D270.w512.b0", !76, i64 0}
!76 = !{!"000001F28334D270.w1024.b0", !77, i64 0}
!77 = !{!"000001F28334D270", !21, i64 0}
!78 = !{!79, !79, i64 0}
!79 = !{!"000001F28334D270.w8.b8", !70, i64 0}
!80 = !{!81, !81, i64 0}
!81 = !{!"000001F28334D270.w8.b16", !82, i64 0}
!82 = !{!"000001F28334D270.w16.b16", !71, i64 0}
!83 = !{!84, !84, i64 0}
!84 = !{!"000001F28334D270.w8.b24", !82, i64 0}
!85 = !{!86, !86, i64 0}
!86 = !{!"000001F28334D270.w8.b32", !87, i64 0}
!87 = !{!"000001F28334D270.w16.b32", !88, i64 0}
!88 = !{!"000001F28334D270.w32.b32", !72, i64 0}
!89 = !{!90, !90, i64 0}
!90 = !{!"000001F28334D670.w8.b16", !91, i64 0}
!91 = !{!"000001F28334D670.w16.b16", !92, i64 0}
!92 = !{!"000001F28334D670.w32.b0", !93, i64 0}
!93 = !{!"000001F28334D670.w64.b0", !94, i64 0}
!94 = !{!"000001F28334D670.w128.b0", !95, i64 0}
!95 = !{!"000001F28334D670.w256.b0", !96, i64 0}
!96 = !{!"000001F28334D670.w512.b0", !97, i64 0}
!97 = !{!"000001F28334D670.w1024.b0", !98, i64 0}
!98 = !{!"000001F28334D670", !21, i64 0}
!99 = !{!100, !100, i64 0}
!100 = !{!"000001F28334D670.w8.b24", !91, i64 0}
!101 = !{!102, !102, i64 0}
!102 = !{!"000001F28334D670.w8.b32", !103, i64 0}
!103 = !{!"000001F28334D670.w16.b32", !104, i64 0}
!104 = !{!"000001F28334D670.w32.b32", !93, i64 0}
!105 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !106)
!106 = !{!107, !108, !109, !110, !111, !112}
!107 = !DILocalVariable(name: "arg1", arg: 1, scope: !105, file: !1, type: !8)
!108 = !DILocalVariable(name: "arg2", arg: 2, scope: !105, file: !1, type: !9)
!109 = !DILocalVariable(name: "arg3", arg: 3, scope: !105, file: !1, type: !7)
!110 = !DILocalVariable(name: "arg4", arg: 4, scope: !105, file: !1, type: !8)
!111 = !DILocalVariable(name: "arg5", arg: 5, scope: !105, file: !1, type: !9)
!112 = !DILocalVariable(name: "arg6", arg: 6, scope: !105, file: !1, type: !8)
!113 = !DILocation(line: 0, scope: !105)
!114 = !{!115, !115, i64 0}
!115 = !{!"000001F2FC569280.w4.b0", !116, i64 0}
!116 = !{!"000001F2FC569280.w8.b0", !117, i64 0}
!117 = !{!"000001F2FC569280.w16.b0", !118, i64 0}
!118 = !{!"000001F2FC569280.w32.b0", !119, i64 0}
!119 = !{!"000001F2FC569280.w64.b0", !120, i64 0}
!120 = !{!"000001F2FC569280.w128.b0", !121, i64 0}
!121 = !{!"000001F2FC569280.w256.b0", !122, i64 0}
!122 = !{!"000001F2FC569280.w512.b0", !123, i64 0}
!123 = !{!"000001F2FC569280.w1024.b0", !124, i64 0}
!124 = !{!"000001F2FC569280", !21, i64 0}
!125 = !{!126, !126, i64 0}
!126 = !{!"000001F2FC569280.w4.b4", !116, i64 0}
!127 = !{!128, !128, i64 0}
!128 = !{!"000001F2FC56E6C0.w8.b0", !129, i64 0}
!129 = !{!"000001F2FC56E6C0.w16.b0", !130, i64 0}
!130 = !{!"000001F2FC56E6C0.w32.b0", !131, i64 0}
!131 = !{!"000001F2FC56E6C0.w64.b0", !132, i64 0}
!132 = !{!"000001F2FC56E6C0.w128.b0", !133, i64 0}
!133 = !{!"000001F2FC56E6C0.w256.b0", !134, i64 0}
!134 = !{!"000001F2FC56E6C0.w512.b0", !135, i64 0}
!135 = !{!"000001F2FC56E6C0.w1024.b0", !136, i64 0}
!136 = !{!"000001F2FC56E6C0", !21, i64 0}
!137 = !{!138, !138, i64 0}
!138 = !{!"000001F2FC56E6C0.w8.b8", !129, i64 0}
!139 = !{!140, !140, i64 0}
!140 = !{!"000001F2FC56E6C0.w8.b16", !141, i64 0}
!141 = !{!"000001F2FC56E6C0.w16.b16", !130, i64 0}
!142 = !{!143, !143, i64 0}
!143 = !{!"000001F2FC56E6C0.w8.b24", !141, i64 0}
!144 = !{!145, !145, i64 0}
!145 = !{!"000001F2FC56E6C0.w8.b32", !146, i64 0}
!146 = !{!"000001F2FC56E6C0.w16.b32", !147, i64 0}
!147 = !{!"000001F2FC56E6C0.w32.b32", !131, i64 0}
!148 = !{!149, !149, i64 0}
!149 = !{!"000001F2FC56FCC0.w8.b8", !150, i64 0}
!150 = !{!"000001F2FC56FCC0.w16.b0", !151, i64 0}
!151 = !{!"000001F2FC56FCC0.w32.b0", !152, i64 0}
!152 = !{!"000001F2FC56FCC0.w64.b0", !153, i64 0}
!153 = !{!"000001F2FC56FCC0.w128.b0", !154, i64 0}
!154 = !{!"000001F2FC56FCC0.w256.b0", !155, i64 0}
!155 = !{!"000001F2FC56FCC0.w512.b0", !156, i64 0}
!156 = !{!"000001F2FC56FCC0.w1024.b0", !157, i64 0}
!157 = !{!"000001F2FC56FCC0", !21, i64 0}
!158 = !{!159, !159, i64 0}
!159 = !{!"000001F2FC56FCC0.w8.b16", !160, i64 0}
!160 = !{!"000001F2FC56FCC0.w16.b16", !151, i64 0}
!161 = !{!162, !162, i64 0}
!162 = !{!"000001F2FC56FCC0.w8.b24", !160, i64 0}
!163 = !{!164, !164, i64 0}
!164 = !{!"000001F2FC56FCC0.w8.b32", !165, i64 0}
!165 = !{!"000001F2FC56FCC0.w16.b32", !166, i64 0}
!166 = !{!"000001F2FC56FCC0.w32.b32", !152, i64 0}
!167 = !{!168, !168, i64 0}
!168 = !{!"000001F2FC56F500.w8.b0", !169, i64 0}
!169 = !{!"000001F2FC56F500.w16.b0", !170, i64 0}
!170 = !{!"000001F2FC56F500.w32.b0", !171, i64 0}
!171 = !{!"000001F2FC56F500.w64.b0", !172, i64 0}
!172 = !{!"000001F2FC56F500.w128.b0", !173, i64 0}
!173 = !{!"000001F2FC56F500.w256.b0", !174, i64 0}
!174 = !{!"000001F2FC56F500.w512.b0", !175, i64 0}
!175 = !{!"000001F2FC56F500.w1024.b0", !176, i64 0}
!176 = !{!"000001F2FC56F500", !21, i64 0}
!177 = !{!178, !178, i64 0}
!178 = !{!"000001F2FC56F500.w8.b8", !169, i64 0}
!179 = !{!180, !180, i64 0}
!180 = !{!"000001F2FC56F500.w8.b16", !181, i64 0}
!181 = !{!"000001F2FC56F500.w16.b16", !170, i64 0}
!182 = !{!183, !183, i64 0}
!183 = !{!"000001F2FC56F500.w8.b24", !181, i64 0}
!184 = !{!185, !185, i64 0}
!185 = !{!"000001F2FC56F500.w8.b32", !186, i64 0}
!186 = !{!"000001F2FC56F500.w16.b32", !187, i64 0}
!187 = !{!"000001F2FC56F500.w32.b32", !171, i64 0}
!188 = !{!189, !189, i64 0}
!189 = !{!"000001F2FC570C80.w8.b8", !190, i64 0}
!190 = !{!"000001F2FC570C80.w16.b0", !191, i64 0}
!191 = !{!"000001F2FC570C80.w32.b0", !192, i64 0}
!192 = !{!"000001F2FC570C80.w64.b0", !193, i64 0}
!193 = !{!"000001F2FC570C80.w128.b0", !194, i64 0}
!194 = !{!"000001F2FC570C80.w256.b0", !195, i64 0}
!195 = !{!"000001F2FC570C80.w512.b0", !196, i64 0}
!196 = !{!"000001F2FC570C80.w1024.b0", !197, i64 0}
!197 = !{!"000001F2FC570C80", !21, i64 0}
!198 = !{!199, !199, i64 0}
!199 = !{!"000001F2FC570C80.w8.b16", !200, i64 0}
!200 = !{!"000001F2FC570C80.w16.b16", !191, i64 0}
!201 = !{!202, !202, i64 0}
!202 = !{!"000001F2FC570C80.w8.b24", !200, i64 0}
!203 = !{!204, !204, i64 0}
!204 = !{!"000001F2FC570C80.w8.b32", !205, i64 0}
!205 = !{!"000001F2FC570C80.w16.b32", !206, i64 0}
!206 = !{!"000001F2FC570C80.w32.b32", !192, i64 0}
!207 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !208)
!208 = !{!209, !210, !211, !212, !213, !214}
!209 = !DILocalVariable(name: "arg1", arg: 1, scope: !207, file: !1, type: !8)
!210 = !DILocalVariable(name: "arg2", arg: 2, scope: !207, file: !1, type: !9)
!211 = !DILocalVariable(name: "arg3", arg: 3, scope: !207, file: !1, type: !7)
!212 = !DILocalVariable(name: "arg4", arg: 4, scope: !207, file: !1, type: !8)
!213 = !DILocalVariable(name: "arg5", arg: 5, scope: !207, file: !1, type: !9)
!214 = !DILocalVariable(name: "arg6", arg: 6, scope: !207, file: !1, type: !8)
!215 = !DILocation(line: 0, scope: !207)
!216 = !{!217, !217, i64 0}
!217 = !{!"000001F2FC55DA00.w4.b0", !218, i64 0}
!218 = !{!"000001F2FC55DA00.w8.b0", !219, i64 0}
!219 = !{!"000001F2FC55DA00.w16.b0", !220, i64 0}
!220 = !{!"000001F2FC55DA00.w32.b0", !221, i64 0}
!221 = !{!"000001F2FC55DA00.w64.b0", !222, i64 0}
!222 = !{!"000001F2FC55DA00.w128.b0", !223, i64 0}
!223 = !{!"000001F2FC55DA00.w256.b0", !224, i64 0}
!224 = !{!"000001F2FC55DA00.w512.b0", !225, i64 0}
!225 = !{!"000001F2FC55DA00.w1024.b0", !226, i64 0}
!226 = !{!"000001F2FC55DA00", !21, i64 0}
!227 = !{!228, !228, i64 0}
!228 = !{!"000001F2FC55DA00.w4.b4", !218, i64 0}
!229 = !{!230, !230, i64 0}
!230 = !{!"000001F2FC56CC40.w8.b0", !231, i64 0}
!231 = !{!"000001F2FC56CC40.w16.b0", !232, i64 0}
!232 = !{!"000001F2FC56CC40.w32.b0", !233, i64 0}
!233 = !{!"000001F2FC56CC40.w64.b0", !234, i64 0}
!234 = !{!"000001F2FC56CC40.w128.b0", !235, i64 0}
!235 = !{!"000001F2FC56CC40.w256.b0", !236, i64 0}
!236 = !{!"000001F2FC56CC40.w512.b0", !237, i64 0}
!237 = !{!"000001F2FC56CC40.w1024.b0", !238, i64 0}
!238 = !{!"000001F2FC56CC40", !21, i64 0}
!239 = !{!240, !240, i64 0}
!240 = !{!"000001F2FC56CC40.w8.b8", !231, i64 0}
!241 = !{!242, !242, i64 0}
!242 = !{!"000001F2FC56CC40.w8.b16", !243, i64 0}
!243 = !{!"000001F2FC56CC40.w16.b16", !232, i64 0}
!244 = !{!245, !245, i64 0}
!245 = !{!"000001F2FC56CC40.w8.b24", !243, i64 0}
!246 = !{!247, !247, i64 0}
!247 = !{!"000001F2FC56CC40.w8.b32", !248, i64 0}
!248 = !{!"000001F2FC56CC40.w16.b32", !249, i64 0}
!249 = !{!"000001F2FC56CC40.w32.b32", !233, i64 0}
!250 = !{!251, !251, i64 0}
!251 = !{!"000001F2FC56C240.w8.b8", !252, i64 0}
!252 = !{!"000001F2FC56C240.w16.b0", !253, i64 0}
!253 = !{!"000001F2FC56C240.w32.b0", !254, i64 0}
!254 = !{!"000001F2FC56C240.w64.b0", !255, i64 0}
!255 = !{!"000001F2FC56C240.w128.b0", !256, i64 0}
!256 = !{!"000001F2FC56C240.w256.b0", !257, i64 0}
!257 = !{!"000001F2FC56C240.w512.b0", !258, i64 0}
!258 = !{!"000001F2FC56C240.w1024.b0", !259, i64 0}
!259 = !{!"000001F2FC56C240", !21, i64 0}
!260 = !{!261, !261, i64 0}
!261 = !{!"000001F2FC56C240.w8.b16", !262, i64 0}
!262 = !{!"000001F2FC56C240.w16.b16", !253, i64 0}
!263 = !{!264, !264, i64 0}
!264 = !{!"000001F2FC56C240.w8.b24", !262, i64 0}
!265 = !{!266, !266, i64 0}
!266 = !{!"000001F2FC56C240.w8.b32", !267, i64 0}
!267 = !{!"000001F2FC56C240.w16.b32", !268, i64 0}
!268 = !{!"000001F2FC56C240.w32.b32", !254, i64 0}
!269 = !{!270, !270, i64 0}
!270 = !{!"000001F2FC56DF40.w8.b0", !271, i64 0}
!271 = !{!"000001F2FC56DF40.w16.b0", !272, i64 0}
!272 = !{!"000001F2FC56DF40.w32.b0", !273, i64 0}
!273 = !{!"000001F2FC56DF40.w64.b0", !274, i64 0}
!274 = !{!"000001F2FC56DF40.w128.b0", !275, i64 0}
!275 = !{!"000001F2FC56DF40.w256.b0", !276, i64 0}
!276 = !{!"000001F2FC56DF40.w512.b0", !277, i64 0}
!277 = !{!"000001F2FC56DF40.w1024.b0", !278, i64 0}
!278 = !{!"000001F2FC56DF40", !21, i64 0}
!279 = !{!280, !280, i64 0}
!280 = !{!"000001F2FC56DF40.w8.b8", !271, i64 0}
!281 = !{!282, !282, i64 0}
!282 = !{!"000001F2FC56DF40.w8.b16", !283, i64 0}
!283 = !{!"000001F2FC56DF40.w16.b16", !272, i64 0}
!284 = !{!285, !285, i64 0}
!285 = !{!"000001F2FC56DF40.w8.b24", !283, i64 0}
!286 = !{!287, !287, i64 0}
!287 = !{!"000001F2FC56DF40.w8.b32", !288, i64 0}
!288 = !{!"000001F2FC56DF40.w16.b32", !289, i64 0}
!289 = !{!"000001F2FC56DF40.w32.b32", !273, i64 0}
!290 = !{!291, !291, i64 0}
!291 = !{!"000001F2FC56DF80.w8.b8", !292, i64 0}
!292 = !{!"000001F2FC56DF80.w16.b0", !293, i64 0}
!293 = !{!"000001F2FC56DF80.w32.b0", !294, i64 0}
!294 = !{!"000001F2FC56DF80.w64.b0", !295, i64 0}
!295 = !{!"000001F2FC56DF80.w128.b0", !296, i64 0}
!296 = !{!"000001F2FC56DF80.w256.b0", !297, i64 0}
!297 = !{!"000001F2FC56DF80.w512.b0", !298, i64 0}
!298 = !{!"000001F2FC56DF80.w1024.b0", !299, i64 0}
!299 = !{!"000001F2FC56DF80", !21, i64 0}
!300 = !{!301, !301, i64 0}
!301 = !{!"000001F2FC56DF80.w8.b16", !302, i64 0}
!302 = !{!"000001F2FC56DF80.w16.b16", !293, i64 0}
!303 = !{!304, !304, i64 0}
!304 = !{!"000001F2FC56DF80.w8.b24", !302, i64 0}
!305 = !{!306, !306, i64 0}
!306 = !{!"000001F2FC56DF80.w8.b32", !307, i64 0}
!307 = !{!"000001F2FC56DF80.w16.b32", !308, i64 0}
!308 = !{!"000001F2FC56DF80.w32.b32", !294, i64 0}
!309 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !310)
!310 = !{!311, !312, !313, !314, !315, !316}
!311 = !DILocalVariable(name: "arg1", arg: 1, scope: !309, file: !1, type: !8)
!312 = !DILocalVariable(name: "arg2", arg: 2, scope: !309, file: !1, type: !9)
!313 = !DILocalVariable(name: "arg3", arg: 3, scope: !309, file: !1, type: !7)
!314 = !DILocalVariable(name: "arg4", arg: 4, scope: !309, file: !1, type: !8)
!315 = !DILocalVariable(name: "arg5", arg: 5, scope: !309, file: !1, type: !9)
!316 = !DILocalVariable(name: "arg6", arg: 6, scope: !309, file: !1, type: !8)
!317 = !DILocation(line: 0, scope: !309)
!318 = !{!319, !319, i64 0}
!319 = !{!"000001F2833512B0.w4.b0", !320, i64 0}
!320 = !{!"000001F2833512B0.w8.b0", !321, i64 0}
!321 = !{!"000001F2833512B0.w16.b0", !322, i64 0}
!322 = !{!"000001F2833512B0.w32.b0", !323, i64 0}
!323 = !{!"000001F2833512B0.w64.b0", !324, i64 0}
!324 = !{!"000001F2833512B0.w128.b0", !325, i64 0}
!325 = !{!"000001F2833512B0.w256.b0", !326, i64 0}
!326 = !{!"000001F2833512B0.w512.b0", !327, i64 0}
!327 = !{!"000001F2833512B0.w1024.b0", !328, i64 0}
!328 = !{!"000001F2833512B0", !21, i64 0}
!329 = !{!330, !330, i64 0}
!330 = !{!"000001F2833512B0.w4.b4", !320, i64 0}
!331 = !{!332, !332, i64 0}
!332 = !{!"000001F283357F30.w8.b0", !333, i64 0}
!333 = !{!"000001F283357F30.w16.b0", !334, i64 0}
!334 = !{!"000001F283357F30.w32.b0", !335, i64 0}
!335 = !{!"000001F283357F30.w64.b0", !336, i64 0}
!336 = !{!"000001F283357F30.w128.b0", !337, i64 0}
!337 = !{!"000001F283357F30.w256.b0", !338, i64 0}
!338 = !{!"000001F283357F30.w512.b0", !339, i64 0}
!339 = !{!"000001F283357F30.w1024.b0", !340, i64 0}
!340 = !{!"000001F283357F30", !21, i64 0}
!341 = !{!342, !342, i64 0}
!342 = !{!"000001F283357F30.w8.b8", !333, i64 0}
!343 = !{!344, !344, i64 0}
!344 = !{!"000001F283357F30.w8.b16", !345, i64 0}
!345 = !{!"000001F283357F30.w16.b16", !334, i64 0}
!346 = !{!347, !347, i64 0}
!347 = !{!"000001F283357F30.w8.b24", !345, i64 0}
!348 = !{!349, !349, i64 0}
!349 = !{!"000001F283357F30.w8.b32", !350, i64 0}
!350 = !{!"000001F283357F30.w16.b32", !351, i64 0}
!351 = !{!"000001F283357F30.w32.b32", !335, i64 0}
!352 = !{!353, !353, i64 0}
!353 = !{!"000001F283359130.w8.b8", !354, i64 0}
!354 = !{!"000001F283359130.w16.b0", !355, i64 0}
!355 = !{!"000001F283359130.w32.b0", !356, i64 0}
!356 = !{!"000001F283359130.w64.b0", !357, i64 0}
!357 = !{!"000001F283359130.w128.b0", !358, i64 0}
!358 = !{!"000001F283359130.w256.b0", !359, i64 0}
!359 = !{!"000001F283359130.w512.b0", !360, i64 0}
!360 = !{!"000001F283359130.w1024.b0", !361, i64 0}
!361 = !{!"000001F283359130", !21, i64 0}
!362 = !{!363, !363, i64 0}
!363 = !{!"000001F283359130.w8.b16", !364, i64 0}
!364 = !{!"000001F283359130.w16.b16", !355, i64 0}
!365 = !{!366, !366, i64 0}
!366 = !{!"000001F283359130.w8.b24", !364, i64 0}
!367 = !{!368, !368, i64 0}
!368 = !{!"000001F283359130.w8.b32", !369, i64 0}
!369 = !{!"000001F283359130.w16.b32", !370, i64 0}
!370 = !{!"000001F283359130.w32.b32", !356, i64 0}
!371 = !{!372, !372, i64 0}
!372 = !{!"000001F28335AAB0.w8.b0", !373, i64 0}
!373 = !{!"000001F28335AAB0.w16.b0", !374, i64 0}
!374 = !{!"000001F28335AAB0.w32.b0", !375, i64 0}
!375 = !{!"000001F28335AAB0.w64.b0", !376, i64 0}
!376 = !{!"000001F28335AAB0.w128.b0", !377, i64 0}
!377 = !{!"000001F28335AAB0.w256.b0", !378, i64 0}
!378 = !{!"000001F28335AAB0.w512.b0", !379, i64 0}
!379 = !{!"000001F28335AAB0.w1024.b0", !380, i64 0}
!380 = !{!"000001F28335AAB0", !21, i64 0}
!381 = !{!382, !382, i64 0}
!382 = !{!"000001F28335AAB0.w8.b8", !373, i64 0}
!383 = !{!384, !384, i64 0}
!384 = !{!"000001F28335AAB0.w8.b16", !385, i64 0}
!385 = !{!"000001F28335AAB0.w16.b16", !374, i64 0}
!386 = !{!387, !387, i64 0}
!387 = !{!"000001F28335AAB0.w8.b24", !385, i64 0}
!388 = !{!389, !389, i64 0}
!389 = !{!"000001F28335AAB0.w8.b32", !390, i64 0}
!390 = !{!"000001F28335AAB0.w16.b32", !391, i64 0}
!391 = !{!"000001F28335AAB0.w32.b32", !375, i64 0}
!392 = !{!393, !393, i64 0}
!393 = !{!"000001F28335C0B0.w8.b8", !394, i64 0}
!394 = !{!"000001F28335C0B0.w16.b0", !395, i64 0}
!395 = !{!"000001F28335C0B0.w32.b0", !396, i64 0}
!396 = !{!"000001F28335C0B0.w64.b0", !397, i64 0}
!397 = !{!"000001F28335C0B0.w128.b0", !398, i64 0}
!398 = !{!"000001F28335C0B0.w256.b0", !399, i64 0}
!399 = !{!"000001F28335C0B0.w512.b0", !400, i64 0}
!400 = !{!"000001F28335C0B0.w1024.b0", !401, i64 0}
!401 = !{!"000001F28335C0B0", !21, i64 0}
!402 = !{!403, !403, i64 0}
!403 = !{!"000001F28335C0B0.w8.b16", !404, i64 0}
!404 = !{!"000001F28335C0B0.w16.b16", !395, i64 0}
!405 = !{!406, !406, i64 0}
!406 = !{!"000001F28335C0B0.w8.b24", !404, i64 0}
!407 = !{!408, !408, i64 0}
!408 = !{!"000001F28335C0B0.w8.b32", !409, i64 0}
!409 = !{!"000001F28335C0B0.w16.b32", !410, i64 0}
!410 = !{!"000001F28335C0B0.w32.b32", !396, i64 0}
!411 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !412)
!412 = !{!413, !414, !415, !416, !417, !418}
!413 = !DILocalVariable(name: "arg1", arg: 1, scope: !411, file: !1, type: !8)
!414 = !DILocalVariable(name: "arg2", arg: 2, scope: !411, file: !1, type: !9)
!415 = !DILocalVariable(name: "arg3", arg: 3, scope: !411, file: !1, type: !7)
!416 = !DILocalVariable(name: "arg4", arg: 4, scope: !411, file: !1, type: !8)
!417 = !DILocalVariable(name: "arg5", arg: 5, scope: !411, file: !1, type: !9)
!418 = !DILocalVariable(name: "arg6", arg: 6, scope: !411, file: !1, type: !8)
!419 = !DILocation(line: 0, scope: !411)
!420 = !{!421, !421, i64 0}
!421 = !{!"000001F28335EBF0.w4.b0", !422, i64 0}
!422 = !{!"000001F28335EBF0.w8.b0", !423, i64 0}
!423 = !{!"000001F28335EBF0.w16.b0", !424, i64 0}
!424 = !{!"000001F28335EBF0.w32.b0", !425, i64 0}
!425 = !{!"000001F28335EBF0.w64.b0", !426, i64 0}
!426 = !{!"000001F28335EBF0.w128.b0", !427, i64 0}
!427 = !{!"000001F28335EBF0.w256.b0", !428, i64 0}
!428 = !{!"000001F28335EBF0.w512.b0", !429, i64 0}
!429 = !{!"000001F28335EBF0.w1024.b0", !430, i64 0}
!430 = !{!"000001F28335EBF0", !21, i64 0}
!431 = !{!432, !432, i64 0}
!432 = !{!"000001F28335EBF0.w4.b4", !422, i64 0}
!433 = !{!434, !434, i64 0}
!434 = !{!"000001F283363770.w8.b0", !435, i64 0}
!435 = !{!"000001F283363770.w16.b0", !436, i64 0}
!436 = !{!"000001F283363770.w32.b0", !437, i64 0}
!437 = !{!"000001F283363770.w64.b0", !438, i64 0}
!438 = !{!"000001F283363770.w128.b0", !439, i64 0}
!439 = !{!"000001F283363770.w256.b0", !440, i64 0}
!440 = !{!"000001F283363770.w512.b0", !441, i64 0}
!441 = !{!"000001F283363770.w1024.b0", !442, i64 0}
!442 = !{!"000001F283363770", !21, i64 0}
!443 = !{!444, !444, i64 0}
!444 = !{!"000001F283363770.w8.b8", !435, i64 0}
!445 = !{!446, !446, i64 0}
!446 = !{!"000001F283363770.w8.b16", !447, i64 0}
!447 = !{!"000001F283363770.w16.b16", !436, i64 0}
!448 = !{!449, !449, i64 0}
!449 = !{!"000001F283363770.w8.b24", !447, i64 0}
!450 = !{!451, !451, i64 0}
!451 = !{!"000001F283363770.w8.b32", !452, i64 0}
!452 = !{!"000001F283363770.w16.b32", !453, i64 0}
!453 = !{!"000001F283363770.w32.b32", !437, i64 0}
!454 = !{!455, !455, i64 0}
!455 = !{!"000001F283363F30.w8.b8", !456, i64 0}
!456 = !{!"000001F283363F30.w16.b0", !457, i64 0}
!457 = !{!"000001F283363F30.w32.b0", !458, i64 0}
!458 = !{!"000001F283363F30.w64.b0", !459, i64 0}
!459 = !{!"000001F283363F30.w128.b0", !460, i64 0}
!460 = !{!"000001F283363F30.w256.b0", !461, i64 0}
!461 = !{!"000001F283363F30.w512.b0", !462, i64 0}
!462 = !{!"000001F283363F30.w1024.b0", !463, i64 0}
!463 = !{!"000001F283363F30", !21, i64 0}
!464 = !{!465, !465, i64 0}
!465 = !{!"000001F283363F30.w8.b16", !466, i64 0}
!466 = !{!"000001F283363F30.w16.b16", !457, i64 0}
!467 = !{!468, !468, i64 0}
!468 = !{!"000001F283363F30.w8.b24", !466, i64 0}
!469 = !{!470, !470, i64 0}
!470 = !{!"000001F283363F30.w8.b32", !471, i64 0}
!471 = !{!"000001F283363F30.w16.b32", !472, i64 0}
!472 = !{!"000001F283363F30.w32.b32", !458, i64 0}
!473 = !{!474, !474, i64 0}
!474 = !{!"000001F2833646B0.w8.b0", !475, i64 0}
!475 = !{!"000001F2833646B0.w16.b0", !476, i64 0}
!476 = !{!"000001F2833646B0.w32.b0", !477, i64 0}
!477 = !{!"000001F2833646B0.w64.b0", !478, i64 0}
!478 = !{!"000001F2833646B0.w128.b0", !479, i64 0}
!479 = !{!"000001F2833646B0.w256.b0", !480, i64 0}
!480 = !{!"000001F2833646B0.w512.b0", !481, i64 0}
!481 = !{!"000001F2833646B0.w1024.b0", !482, i64 0}
!482 = !{!"000001F2833646B0", !21, i64 0}
!483 = !{!484, !484, i64 0}
!484 = !{!"000001F2833646B0.w8.b8", !475, i64 0}
!485 = !{!486, !486, i64 0}
!486 = !{!"000001F2833646B0.w8.b16", !487, i64 0}
!487 = !{!"000001F2833646B0.w16.b16", !476, i64 0}
!488 = !{!489, !489, i64 0}
!489 = !{!"000001F2833646B0.w8.b24", !487, i64 0}
!490 = !{!491, !491, i64 0}
!491 = !{!"000001F2833646B0.w8.b32", !492, i64 0}
!492 = !{!"000001F2833646B0.w16.b32", !493, i64 0}
!493 = !{!"000001F2833646B0.w32.b32", !477, i64 0}
!494 = !{!495, !495, i64 0}
!495 = !{!"000001F283364F30.w8.b16", !496, i64 0}
!496 = !{!"000001F283364F30.w16.b16", !497, i64 0}
!497 = !{!"000001F283364F30.w32.b0", !498, i64 0}
!498 = !{!"000001F283364F30.w64.b0", !499, i64 0}
!499 = !{!"000001F283364F30.w128.b0", !500, i64 0}
!500 = !{!"000001F283364F30.w256.b0", !501, i64 0}
!501 = !{!"000001F283364F30.w512.b0", !502, i64 0}
!502 = !{!"000001F283364F30.w1024.b0", !503, i64 0}
!503 = !{!"000001F283364F30", !21, i64 0}
!504 = !{!505, !505, i64 0}
!505 = !{!"000001F283364F30.w8.b24", !496, i64 0}
!506 = !{!507, !507, i64 0}
!507 = !{!"000001F283364F30.w8.b32", !508, i64 0}
!508 = !{!"000001F283364F30.w16.b32", !509, i64 0}
!509 = !{!"000001F283364F30.w32.b32", !498, i64 0}
!510 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !511)
!511 = !{!512, !513, !514, !515, !516, !517}
!512 = !DILocalVariable(name: "arg1", arg: 1, scope: !510, file: !1, type: !8)
!513 = !DILocalVariable(name: "arg2", arg: 2, scope: !510, file: !1, type: !9)
!514 = !DILocalVariable(name: "arg3", arg: 3, scope: !510, file: !1, type: !7)
!515 = !DILocalVariable(name: "arg4", arg: 4, scope: !510, file: !1, type: !8)
!516 = !DILocalVariable(name: "arg5", arg: 5, scope: !510, file: !1, type: !9)
!517 = !DILocalVariable(name: "arg6", arg: 6, scope: !510, file: !1, type: !8)
!518 = !DILocation(line: 0, scope: !510)
!519 = !{!520, !520, i64 0}
!520 = !{!"000001F28330BD50.w4.b0", !521, i64 0}
!521 = !{!"000001F28330BD50.w8.b0", !522, i64 0}
!522 = !{!"000001F28330BD50.w16.b0", !523, i64 0}
!523 = !{!"000001F28330BD50.w32.b0", !524, i64 0}
!524 = !{!"000001F28330BD50.w64.b0", !525, i64 0}
!525 = !{!"000001F28330BD50.w128.b0", !526, i64 0}
!526 = !{!"000001F28330BD50.w256.b0", !527, i64 0}
!527 = !{!"000001F28330BD50.w512.b0", !528, i64 0}
!528 = !{!"000001F28330BD50.w1024.b0", !529, i64 0}
!529 = !{!"000001F28330BD50", !21, i64 0}
!530 = !{!531, !531, i64 0}
!531 = !{!"000001F28330BD50.w4.b4", !521, i64 0}
!532 = !{!533, !533, i64 0}
!533 = !{!"000001F283312250.w8.b0", !534, i64 0}
!534 = !{!"000001F283312250.w16.b0", !535, i64 0}
!535 = !{!"000001F283312250.w32.b0", !536, i64 0}
!536 = !{!"000001F283312250.w64.b0", !537, i64 0}
!537 = !{!"000001F283312250.w128.b0", !538, i64 0}
!538 = !{!"000001F283312250.w256.b0", !539, i64 0}
!539 = !{!"000001F283312250.w512.b0", !540, i64 0}
!540 = !{!"000001F283312250.w1024.b0", !541, i64 0}
!541 = !{!"000001F283312250", !21, i64 0}
!542 = !{!543, !543, i64 0}
!543 = !{!"000001F283312250.w8.b8", !534, i64 0}
!544 = !{!545, !545, i64 0}
!545 = !{!"000001F283312250.w8.b16", !546, i64 0}
!546 = !{!"000001F283312250.w16.b16", !535, i64 0}
!547 = !{!548, !548, i64 0}
!548 = !{!"000001F283312250.w8.b24", !546, i64 0}
!549 = !{!550, !550, i64 0}
!550 = !{!"000001F283312250.w8.b32", !551, i64 0}
!551 = !{!"000001F283312250.w16.b32", !552, i64 0}
!552 = !{!"000001F283312250.w32.b32", !536, i64 0}
!553 = !{!554, !554, i64 0}
!554 = !{!"000001F2833125D0.w8.b8", !555, i64 0}
!555 = !{!"000001F2833125D0.w16.b0", !556, i64 0}
!556 = !{!"000001F2833125D0.w32.b0", !557, i64 0}
!557 = !{!"000001F2833125D0.w64.b0", !558, i64 0}
!558 = !{!"000001F2833125D0.w128.b0", !559, i64 0}
!559 = !{!"000001F2833125D0.w256.b0", !560, i64 0}
!560 = !{!"000001F2833125D0.w512.b0", !561, i64 0}
!561 = !{!"000001F2833125D0.w1024.b0", !562, i64 0}
!562 = !{!"000001F2833125D0", !21, i64 0}
!563 = !{!564, !564, i64 0}
!564 = !{!"000001F2833125D0.w8.b16", !565, i64 0}
!565 = !{!"000001F2833125D0.w16.b16", !556, i64 0}
!566 = !{!567, !567, i64 0}
!567 = !{!"000001F2833125D0.w8.b24", !565, i64 0}
!568 = !{!569, !569, i64 0}
!569 = !{!"000001F2833125D0.w8.b32", !570, i64 0}
!570 = !{!"000001F2833125D0.w16.b32", !571, i64 0}
!571 = !{!"000001F2833125D0.w32.b32", !557, i64 0}
!572 = !{!573, !573, i64 0}
!573 = !{!"000001F283313390.w8.b0", !574, i64 0}
!574 = !{!"000001F283313390.w16.b0", !575, i64 0}
!575 = !{!"000001F283313390.w32.b0", !576, i64 0}
!576 = !{!"000001F283313390.w64.b0", !577, i64 0}
!577 = !{!"000001F283313390.w128.b0", !578, i64 0}
!578 = !{!"000001F283313390.w256.b0", !579, i64 0}
!579 = !{!"000001F283313390.w512.b0", !580, i64 0}
!580 = !{!"000001F283313390.w1024.b0", !581, i64 0}
!581 = !{!"000001F283313390", !21, i64 0}
!582 = !{!583, !583, i64 0}
!583 = !{!"000001F283313390.w8.b8", !574, i64 0}
!584 = !{!585, !585, i64 0}
!585 = !{!"000001F283313390.w8.b16", !586, i64 0}
!586 = !{!"000001F283313390.w16.b16", !575, i64 0}
!587 = !{!588, !588, i64 0}
!588 = !{!"000001F283313390.w8.b24", !586, i64 0}
!589 = !{!590, !590, i64 0}
!590 = !{!"000001F283313390.w8.b32", !591, i64 0}
!591 = !{!"000001F283313390.w16.b32", !592, i64 0}
!592 = !{!"000001F283313390.w32.b32", !576, i64 0}
!593 = !{!594, !594, i64 0}
!594 = !{!"000001F283313C90.w8.b8", !595, i64 0}
!595 = !{!"000001F283313C90.w16.b0", !596, i64 0}
!596 = !{!"000001F283313C90.w32.b0", !597, i64 0}
!597 = !{!"000001F283313C90.w64.b0", !598, i64 0}
!598 = !{!"000001F283313C90.w128.b0", !599, i64 0}
!599 = !{!"000001F283313C90.w256.b0", !600, i64 0}
!600 = !{!"000001F283313C90.w512.b0", !601, i64 0}
!601 = !{!"000001F283313C90.w1024.b0", !602, i64 0}
!602 = !{!"000001F283313C90", !21, i64 0}
!603 = !{!604, !604, i64 0}
!604 = !{!"000001F283313C90.w8.b16", !605, i64 0}
!605 = !{!"000001F283313C90.w16.b16", !596, i64 0}
!606 = !{!607, !607, i64 0}
!607 = !{!"000001F283313C90.w8.b24", !605, i64 0}
!608 = !{!609, !609, i64 0}
!609 = !{!"000001F283313C90.w8.b32", !610, i64 0}
!610 = !{!"000001F283313C90.w16.b32", !611, i64 0}
!611 = !{!"000001F283313C90.w32.b32", !597, i64 0}
!612 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !613)
!613 = !{!614, !615, !616, !617, !618, !619}
!614 = !DILocalVariable(name: "arg1", arg: 1, scope: !612, file: !1, type: !8)
!615 = !DILocalVariable(name: "arg2", arg: 2, scope: !612, file: !1, type: !9)
!616 = !DILocalVariable(name: "arg3", arg: 3, scope: !612, file: !1, type: !7)
!617 = !DILocalVariable(name: "arg4", arg: 4, scope: !612, file: !1, type: !8)
!618 = !DILocalVariable(name: "arg5", arg: 5, scope: !612, file: !1, type: !9)
!619 = !DILocalVariable(name: "arg6", arg: 6, scope: !612, file: !1, type: !8)
!620 = !DILocation(line: 0, scope: !612)
!621 = !{!622, !622, i64 0}
!622 = !{!"000001F28335CE70.w4.b0", !623, i64 0}
!623 = !{!"000001F28335CE70.w8.b0", !624, i64 0}
!624 = !{!"000001F28335CE70.w16.b0", !625, i64 0}
!625 = !{!"000001F28335CE70.w32.b0", !626, i64 0}
!626 = !{!"000001F28335CE70.w64.b0", !627, i64 0}
!627 = !{!"000001F28335CE70.w128.b0", !628, i64 0}
!628 = !{!"000001F28335CE70.w256.b0", !629, i64 0}
!629 = !{!"000001F28335CE70.w512.b0", !630, i64 0}
!630 = !{!"000001F28335CE70.w1024.b0", !631, i64 0}
!631 = !{!"000001F28335CE70", !21, i64 0}
!632 = !{!633, !633, i64 0}
!633 = !{!"000001F28335CE70.w4.b4", !623, i64 0}
!634 = !{!635, !635, i64 0}
!635 = !{!"000001F2833614F0.w8.b0", !636, i64 0}
!636 = !{!"000001F2833614F0.w16.b0", !637, i64 0}
!637 = !{!"000001F2833614F0.w32.b0", !638, i64 0}
!638 = !{!"000001F2833614F0.w64.b0", !639, i64 0}
!639 = !{!"000001F2833614F0.w128.b0", !640, i64 0}
!640 = !{!"000001F2833614F0.w256.b0", !641, i64 0}
!641 = !{!"000001F2833614F0.w512.b0", !642, i64 0}
!642 = !{!"000001F2833614F0.w1024.b0", !643, i64 0}
!643 = !{!"000001F2833614F0", !21, i64 0}
!644 = !{!645, !645, i64 0}
!645 = !{!"000001F2833614F0.w8.b8", !636, i64 0}
!646 = !{!647, !647, i64 0}
!647 = !{!"000001F2833614F0.w8.b16", !648, i64 0}
!648 = !{!"000001F2833614F0.w16.b16", !637, i64 0}
!649 = !{!650, !650, i64 0}
!650 = !{!"000001F2833614F0.w8.b24", !648, i64 0}
!651 = !{!652, !652, i64 0}
!652 = !{!"000001F2833614F0.w8.b32", !653, i64 0}
!653 = !{!"000001F2833614F0.w16.b32", !654, i64 0}
!654 = !{!"000001F2833614F0.w32.b32", !638, i64 0}
!655 = !{!656, !656, i64 0}
!656 = !{!"000001F283361F70.w8.b8", !657, i64 0}
!657 = !{!"000001F283361F70.w16.b0", !658, i64 0}
!658 = !{!"000001F283361F70.w32.b0", !659, i64 0}
!659 = !{!"000001F283361F70.w64.b0", !660, i64 0}
!660 = !{!"000001F283361F70.w128.b0", !661, i64 0}
!661 = !{!"000001F283361F70.w256.b0", !662, i64 0}
!662 = !{!"000001F283361F70.w512.b0", !663, i64 0}
!663 = !{!"000001F283361F70.w1024.b0", !664, i64 0}
!664 = !{!"000001F283361F70", !21, i64 0}
!665 = !{!666, !666, i64 0}
!666 = !{!"000001F283361F70.w8.b16", !667, i64 0}
!667 = !{!"000001F283361F70.w16.b16", !658, i64 0}
!668 = !{!669, !669, i64 0}
!669 = !{!"000001F283361F70.w8.b24", !667, i64 0}
!670 = !{!671, !671, i64 0}
!671 = !{!"000001F283361F70.w8.b32", !672, i64 0}
!672 = !{!"000001F283361F70.w16.b32", !673, i64 0}
!673 = !{!"000001F283361F70.w32.b32", !659, i64 0}
!674 = !{!675, !675, i64 0}
!675 = !{!"000001F2833628B0.w8.b0", !676, i64 0}
!676 = !{!"000001F2833628B0.w16.b0", !677, i64 0}
!677 = !{!"000001F2833628B0.w32.b0", !678, i64 0}
!678 = !{!"000001F2833628B0.w64.b0", !679, i64 0}
!679 = !{!"000001F2833628B0.w128.b0", !680, i64 0}
!680 = !{!"000001F2833628B0.w256.b0", !681, i64 0}
!681 = !{!"000001F2833628B0.w512.b0", !682, i64 0}
!682 = !{!"000001F2833628B0.w1024.b0", !683, i64 0}
!683 = !{!"000001F2833628B0", !21, i64 0}
!684 = !{!685, !685, i64 0}
!685 = !{!"000001F2833628B0.w8.b8", !676, i64 0}
!686 = !{!687, !687, i64 0}
!687 = !{!"000001F2833628B0.w8.b16", !688, i64 0}
!688 = !{!"000001F2833628B0.w16.b16", !677, i64 0}
!689 = !{!690, !690, i64 0}
!690 = !{!"000001F2833628B0.w8.b24", !688, i64 0}
!691 = !{!692, !692, i64 0}
!692 = !{!"000001F2833628B0.w8.b32", !693, i64 0}
!693 = !{!"000001F2833628B0.w16.b32", !694, i64 0}
!694 = !{!"000001F2833628B0.w32.b32", !678, i64 0}
!695 = !{!696, !696, i64 0}
!696 = !{!"000001F2833621B0.w8.b8", !697, i64 0}
!697 = !{!"000001F2833621B0.w16.b0", !698, i64 0}
!698 = !{!"000001F2833621B0.w32.b0", !699, i64 0}
!699 = !{!"000001F2833621B0.w64.b0", !700, i64 0}
!700 = !{!"000001F2833621B0.w128.b0", !701, i64 0}
!701 = !{!"000001F2833621B0.w256.b0", !702, i64 0}
!702 = !{!"000001F2833621B0.w512.b0", !703, i64 0}
!703 = !{!"000001F2833621B0.w1024.b0", !704, i64 0}
!704 = !{!"000001F2833621B0", !21, i64 0}
!705 = !{!706, !706, i64 0}
!706 = !{!"000001F2833621B0.w8.b16", !707, i64 0}
!707 = !{!"000001F2833621B0.w16.b16", !698, i64 0}
!708 = !{!709, !709, i64 0}
!709 = !{!"000001F2833621B0.w8.b24", !707, i64 0}
!710 = !{!711, !711, i64 0}
!711 = !{!"000001F2833621B0.w8.b32", !712, i64 0}
!712 = !{!"000001F2833621B0.w16.b32", !713, i64 0}
!713 = !{!"000001F2833621B0.w32.b32", !699, i64 0}
!714 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !715)
!715 = !{!716, !717, !718, !719, !720, !721}
!716 = !DILocalVariable(name: "arg1", arg: 1, scope: !714, file: !1, type: !8)
!717 = !DILocalVariable(name: "arg2", arg: 2, scope: !714, file: !1, type: !9)
!718 = !DILocalVariable(name: "arg3", arg: 3, scope: !714, file: !1, type: !7)
!719 = !DILocalVariable(name: "arg4", arg: 4, scope: !714, file: !1, type: !8)
!720 = !DILocalVariable(name: "arg5", arg: 5, scope: !714, file: !1, type: !9)
!721 = !DILocalVariable(name: "arg6", arg: 6, scope: !714, file: !1, type: !8)
!722 = !DILocation(line: 0, scope: !714)
!723 = !{!724, !724, i64 0}
!724 = !{!"000001F28335AA30.w4.b0", !725, i64 0}
!725 = !{!"000001F28335AA30.w8.b0", !726, i64 0}
!726 = !{!"000001F28335AA30.w16.b0", !727, i64 0}
!727 = !{!"000001F28335AA30.w32.b0", !728, i64 0}
!728 = !{!"000001F28335AA30.w64.b0", !729, i64 0}
!729 = !{!"000001F28335AA30.w128.b0", !730, i64 0}
!730 = !{!"000001F28335AA30.w256.b0", !731, i64 0}
!731 = !{!"000001F28335AA30.w512.b0", !732, i64 0}
!732 = !{!"000001F28335AA30.w1024.b0", !733, i64 0}
!733 = !{!"000001F28335AA30", !21, i64 0}
!734 = !{!735, !735, i64 0}
!735 = !{!"000001F28335AA30.w4.b4", !725, i64 0}
!736 = !{!737, !737, i64 0}
!737 = !{!"000001F28335E1B0.w8.b0", !738, i64 0}
!738 = !{!"000001F28335E1B0.w16.b0", !739, i64 0}
!739 = !{!"000001F28335E1B0.w32.b0", !740, i64 0}
!740 = !{!"000001F28335E1B0.w64.b0", !741, i64 0}
!741 = !{!"000001F28335E1B0.w128.b0", !742, i64 0}
!742 = !{!"000001F28335E1B0.w256.b0", !743, i64 0}
!743 = !{!"000001F28335E1B0.w512.b0", !744, i64 0}
!744 = !{!"000001F28335E1B0.w1024.b0", !745, i64 0}
!745 = !{!"000001F28335E1B0", !21, i64 0}
!746 = !{!747, !747, i64 0}
!747 = !{!"000001F28335E1B0.w8.b8", !738, i64 0}
!748 = !{!749, !749, i64 0}
!749 = !{!"000001F28335E1B0.w8.b16", !750, i64 0}
!750 = !{!"000001F28335E1B0.w16.b16", !739, i64 0}
!751 = !{!752, !752, i64 0}
!752 = !{!"000001F28335E1B0.w8.b24", !750, i64 0}
!753 = !{!754, !754, i64 0}
!754 = !{!"000001F28335E1B0.w8.b32", !755, i64 0}
!755 = !{!"000001F28335E1B0.w16.b32", !756, i64 0}
!756 = !{!"000001F28335E1B0.w32.b32", !740, i64 0}
!757 = !{!758, !758, i64 0}
!758 = !{!"000001F28335EB70.w8.b8", !759, i64 0}
!759 = !{!"000001F28335EB70.w16.b0", !760, i64 0}
!760 = !{!"000001F28335EB70.w32.b0", !761, i64 0}
!761 = !{!"000001F28335EB70.w64.b0", !762, i64 0}
!762 = !{!"000001F28335EB70.w128.b0", !763, i64 0}
!763 = !{!"000001F28335EB70.w256.b0", !764, i64 0}
!764 = !{!"000001F28335EB70.w512.b0", !765, i64 0}
!765 = !{!"000001F28335EB70.w1024.b0", !766, i64 0}
!766 = !{!"000001F28335EB70", !21, i64 0}
!767 = !{!768, !768, i64 0}
!768 = !{!"000001F28335EB70.w8.b16", !769, i64 0}
!769 = !{!"000001F28335EB70.w16.b16", !760, i64 0}
!770 = !{!771, !771, i64 0}
!771 = !{!"000001F28335EB70.w8.b24", !769, i64 0}
!772 = !{!773, !773, i64 0}
!773 = !{!"000001F28335EB70.w8.b32", !774, i64 0}
!774 = !{!"000001F28335EB70.w16.b32", !775, i64 0}
!775 = !{!"000001F28335EB70.w32.b32", !761, i64 0}
!776 = !{!777, !777, i64 0}
!777 = !{!"000001F28335FD30.w8.b0", !778, i64 0}
!778 = !{!"000001F28335FD30.w16.b0", !779, i64 0}
!779 = !{!"000001F28335FD30.w32.b0", !780, i64 0}
!780 = !{!"000001F28335FD30.w64.b0", !781, i64 0}
!781 = !{!"000001F28335FD30.w128.b0", !782, i64 0}
!782 = !{!"000001F28335FD30.w256.b0", !783, i64 0}
!783 = !{!"000001F28335FD30.w512.b0", !784, i64 0}
!784 = !{!"000001F28335FD30.w1024.b0", !785, i64 0}
!785 = !{!"000001F28335FD30", !21, i64 0}
!786 = !{!787, !787, i64 0}
!787 = !{!"000001F28335FD30.w8.b8", !778, i64 0}
!788 = !{!789, !789, i64 0}
!789 = !{!"000001F28335FD30.w8.b16", !790, i64 0}
!790 = !{!"000001F28335FD30.w16.b16", !779, i64 0}
!791 = !{!792, !792, i64 0}
!792 = !{!"000001F28335FD30.w8.b24", !790, i64 0}
!793 = !{!794, !794, i64 0}
!794 = !{!"000001F28335FD30.w8.b32", !795, i64 0}
!795 = !{!"000001F28335FD30.w16.b32", !796, i64 0}
!796 = !{!"000001F28335FD30.w32.b32", !780, i64 0}
!797 = !{!798, !798, i64 0}
!798 = !{!"000001F28335FA30.w8.b16", !799, i64 0}
!799 = !{!"000001F28335FA30.w16.b16", !800, i64 0}
!800 = !{!"000001F28335FA30.w32.b0", !801, i64 0}
!801 = !{!"000001F28335FA30.w64.b0", !802, i64 0}
!802 = !{!"000001F28335FA30.w128.b0", !803, i64 0}
!803 = !{!"000001F28335FA30.w256.b0", !804, i64 0}
!804 = !{!"000001F28335FA30.w512.b0", !805, i64 0}
!805 = !{!"000001F28335FA30.w1024.b0", !806, i64 0}
!806 = !{!"000001F28335FA30", !21, i64 0}
!807 = !{!808, !808, i64 0}
!808 = !{!"000001F28335FA30.w8.b24", !799, i64 0}
!809 = !{!810, !810, i64 0}
!810 = !{!"000001F28335FA30.w8.b32", !811, i64 0}
!811 = !{!"000001F28335FA30.w16.b32", !812, i64 0}
!812 = !{!"000001F28335FA30.w32.b32", !801, i64 0}
!813 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !814)
!814 = !{!815, !816, !817, !818, !819, !820}
!815 = !DILocalVariable(name: "arg1", arg: 1, scope: !813, file: !1, type: !8)
!816 = !DILocalVariable(name: "arg2", arg: 2, scope: !813, file: !1, type: !9)
!817 = !DILocalVariable(name: "arg3", arg: 3, scope: !813, file: !1, type: !7)
!818 = !DILocalVariable(name: "arg4", arg: 4, scope: !813, file: !1, type: !8)
!819 = !DILocalVariable(name: "arg5", arg: 5, scope: !813, file: !1, type: !9)
!820 = !DILocalVariable(name: "arg6", arg: 6, scope: !813, file: !1, type: !8)
!821 = !DILocation(line: 0, scope: !813)
!822 = !{!823, !823, i64 0}
!823 = !{!"000001F28330E690.w4.b0", !824, i64 0}
!824 = !{!"000001F28330E690.w8.b0", !825, i64 0}
!825 = !{!"000001F28330E690.w16.b0", !826, i64 0}
!826 = !{!"000001F28330E690.w32.b0", !827, i64 0}
!827 = !{!"000001F28330E690.w64.b0", !828, i64 0}
!828 = !{!"000001F28330E690.w128.b0", !829, i64 0}
!829 = !{!"000001F28330E690.w256.b0", !830, i64 0}
!830 = !{!"000001F28330E690.w512.b0", !831, i64 0}
!831 = !{!"000001F28330E690.w1024.b0", !832, i64 0}
!832 = !{!"000001F28330E690", !21, i64 0}
!833 = !{!834, !834, i64 0}
!834 = !{!"000001F28330E690.w4.b4", !824, i64 0}
!835 = !{!836, !836, i64 0}
!836 = !{!"000001F283315D90.w8.b0", !837, i64 0}
!837 = !{!"000001F283315D90.w16.b0", !838, i64 0}
!838 = !{!"000001F283315D90.w32.b0", !839, i64 0}
!839 = !{!"000001F283315D90.w64.b0", !840, i64 0}
!840 = !{!"000001F283315D90.w128.b0", !841, i64 0}
!841 = !{!"000001F283315D90.w256.b0", !842, i64 0}
!842 = !{!"000001F283315D90.w512.b0", !843, i64 0}
!843 = !{!"000001F283315D90.w1024.b0", !844, i64 0}
!844 = !{!"000001F283315D90", !21, i64 0}
!845 = !{!846, !846, i64 0}
!846 = !{!"000001F283315D90.w8.b8", !837, i64 0}
!847 = !{!848, !848, i64 0}
!848 = !{!"000001F283315D90.w8.b16", !849, i64 0}
!849 = !{!"000001F283315D90.w16.b16", !838, i64 0}
!850 = !{!851, !851, i64 0}
!851 = !{!"000001F283315D90.w8.b24", !849, i64 0}
!852 = !{!853, !853, i64 0}
!853 = !{!"000001F283315D90.w8.b32", !854, i64 0}
!854 = !{!"000001F283315D90.w16.b32", !855, i64 0}
!855 = !{!"000001F283315D90.w32.b32", !839, i64 0}
!856 = !{!857, !857, i64 0}
!857 = !{!"000001F283315B50.w8.b8", !858, i64 0}
!858 = !{!"000001F283315B50.w16.b0", !859, i64 0}
!859 = !{!"000001F283315B50.w32.b0", !860, i64 0}
!860 = !{!"000001F283315B50.w64.b0", !861, i64 0}
!861 = !{!"000001F283315B50.w128.b0", !862, i64 0}
!862 = !{!"000001F283315B50.w256.b0", !863, i64 0}
!863 = !{!"000001F283315B50.w512.b0", !864, i64 0}
!864 = !{!"000001F283315B50.w1024.b0", !865, i64 0}
!865 = !{!"000001F283315B50", !21, i64 0}
!866 = !{!867, !867, i64 0}
!867 = !{!"000001F283315B50.w8.b16", !868, i64 0}
!868 = !{!"000001F283315B50.w16.b16", !859, i64 0}
!869 = !{!870, !870, i64 0}
!870 = !{!"000001F283315B50.w8.b24", !868, i64 0}
!871 = !{!872, !872, i64 0}
!872 = !{!"000001F283315B50.w8.b32", !873, i64 0}
!873 = !{!"000001F283315B50.w16.b32", !874, i64 0}
!874 = !{!"000001F283315B50.w32.b32", !860, i64 0}
!875 = !{!876, !876, i64 0}
!876 = !{!"000001F283316D50.w8.b0", !877, i64 0}
!877 = !{!"000001F283316D50.w16.b0", !878, i64 0}
!878 = !{!"000001F283316D50.w32.b0", !879, i64 0}
!879 = !{!"000001F283316D50.w64.b0", !880, i64 0}
!880 = !{!"000001F283316D50.w128.b0", !881, i64 0}
!881 = !{!"000001F283316D50.w256.b0", !882, i64 0}
!882 = !{!"000001F283316D50.w512.b0", !883, i64 0}
!883 = !{!"000001F283316D50.w1024.b0", !884, i64 0}
!884 = !{!"000001F283316D50", !21, i64 0}
!885 = !{!886, !886, i64 0}
!886 = !{!"000001F283316D50.w8.b8", !877, i64 0}
!887 = !{!888, !888, i64 0}
!888 = !{!"000001F283316D50.w8.b16", !889, i64 0}
!889 = !{!"000001F283316D50.w16.b16", !878, i64 0}
!890 = !{!891, !891, i64 0}
!891 = !{!"000001F283316D50.w8.b24", !889, i64 0}
!892 = !{!893, !893, i64 0}
!893 = !{!"000001F283316D50.w8.b32", !894, i64 0}
!894 = !{!"000001F283316D50.w16.b32", !895, i64 0}
!895 = !{!"000001F283316D50.w32.b32", !879, i64 0}
!896 = !{!897, !897, i64 0}
!897 = !{!"000001F283316290.w8.b8", !898, i64 0}
!898 = !{!"000001F283316290.w16.b0", !899, i64 0}
!899 = !{!"000001F283316290.w32.b0", !900, i64 0}
!900 = !{!"000001F283316290.w64.b0", !901, i64 0}
!901 = !{!"000001F283316290.w128.b0", !902, i64 0}
!902 = !{!"000001F283316290.w256.b0", !903, i64 0}
!903 = !{!"000001F283316290.w512.b0", !904, i64 0}
!904 = !{!"000001F283316290.w1024.b0", !905, i64 0}
!905 = !{!"000001F283316290", !21, i64 0}
!906 = !{!907, !907, i64 0}
!907 = !{!"000001F283316290.w8.b16", !908, i64 0}
!908 = !{!"000001F283316290.w16.b16", !899, i64 0}
!909 = !{!910, !910, i64 0}
!910 = !{!"000001F283316290.w8.b24", !908, i64 0}
!911 = !{!912, !912, i64 0}
!912 = !{!"000001F283316290.w8.b32", !913, i64 0}
!913 = !{!"000001F283316290.w16.b32", !914, i64 0}
!914 = !{!"000001F283316290.w32.b32", !900, i64 0}
!915 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !916)
!916 = !{!917, !918, !919, !920, !921, !922}
!917 = !DILocalVariable(name: "arg1", arg: 1, scope: !915, file: !1, type: !8)
!918 = !DILocalVariable(name: "arg2", arg: 2, scope: !915, file: !1, type: !9)
!919 = !DILocalVariable(name: "arg3", arg: 3, scope: !915, file: !1, type: !7)
!920 = !DILocalVariable(name: "arg4", arg: 4, scope: !915, file: !1, type: !8)
!921 = !DILocalVariable(name: "arg5", arg: 5, scope: !915, file: !1, type: !9)
!922 = !DILocalVariable(name: "arg6", arg: 6, scope: !915, file: !1, type: !8)
!923 = !DILocation(line: 0, scope: !915)
!924 = !{!925, !925, i64 0}
!925 = !{!"000001F2833455F0.w4.b0", !926, i64 0}
!926 = !{!"000001F2833455F0.w8.b0", !927, i64 0}
!927 = !{!"000001F2833455F0.w16.b0", !928, i64 0}
!928 = !{!"000001F2833455F0.w32.b0", !929, i64 0}
!929 = !{!"000001F2833455F0.w64.b0", !930, i64 0}
!930 = !{!"000001F2833455F0.w128.b0", !931, i64 0}
!931 = !{!"000001F2833455F0.w256.b0", !932, i64 0}
!932 = !{!"000001F2833455F0.w512.b0", !933, i64 0}
!933 = !{!"000001F2833455F0.w1024.b0", !934, i64 0}
!934 = !{!"000001F2833455F0", !21, i64 0}
!935 = !{!936, !936, i64 0}
!936 = !{!"000001F2833455F0.w4.b4", !926, i64 0}
!937 = !{!938, !938, i64 0}
!938 = !{!"000001F283347470.w8.b0", !939, i64 0}
!939 = !{!"000001F283347470.w16.b0", !940, i64 0}
!940 = !{!"000001F283347470.w32.b0", !941, i64 0}
!941 = !{!"000001F283347470.w64.b0", !942, i64 0}
!942 = !{!"000001F283347470.w128.b0", !943, i64 0}
!943 = !{!"000001F283347470.w256.b0", !944, i64 0}
!944 = !{!"000001F283347470.w512.b0", !945, i64 0}
!945 = !{!"000001F283347470.w1024.b0", !946, i64 0}
!946 = !{!"000001F283347470", !21, i64 0}
!947 = !{!948, !948, i64 0}
!948 = !{!"000001F283347470.w8.b8", !939, i64 0}
!949 = !{!950, !950, i64 0}
!950 = !{!"000001F283347470.w8.b16", !951, i64 0}
!951 = !{!"000001F283347470.w16.b16", !940, i64 0}
!952 = !{!953, !953, i64 0}
!953 = !{!"000001F283347470.w8.b24", !951, i64 0}
!954 = !{!955, !955, i64 0}
!955 = !{!"000001F283347470.w8.b32", !956, i64 0}
!956 = !{!"000001F283347470.w16.b32", !957, i64 0}
!957 = !{!"000001F283347470.w32.b32", !941, i64 0}
!958 = !{!959, !959, i64 0}
!959 = !{!"000001F283347370.w8.b8", !960, i64 0}
!960 = !{!"000001F283347370.w16.b0", !961, i64 0}
!961 = !{!"000001F283347370.w32.b0", !962, i64 0}
!962 = !{!"000001F283347370.w64.b0", !963, i64 0}
!963 = !{!"000001F283347370.w128.b0", !964, i64 0}
!964 = !{!"000001F283347370.w256.b0", !965, i64 0}
!965 = !{!"000001F283347370.w512.b0", !966, i64 0}
!966 = !{!"000001F283347370.w1024.b0", !967, i64 0}
!967 = !{!"000001F283347370", !21, i64 0}
!968 = !{!969, !969, i64 0}
!969 = !{!"000001F283347370.w8.b16", !970, i64 0}
!970 = !{!"000001F283347370.w16.b16", !961, i64 0}
!971 = !{!972, !972, i64 0}
!972 = !{!"000001F283347370.w8.b24", !970, i64 0}
!973 = !{!974, !974, i64 0}
!974 = !{!"000001F283347370.w8.b32", !975, i64 0}
!975 = !{!"000001F283347370.w16.b32", !976, i64 0}
!976 = !{!"000001F283347370.w32.b32", !962, i64 0}
!977 = !{!978, !978, i64 0}
!978 = !{!"000001F2833489B0.w8.b0", !979, i64 0}
!979 = !{!"000001F2833489B0.w16.b0", !980, i64 0}
!980 = !{!"000001F2833489B0.w32.b0", !981, i64 0}
!981 = !{!"000001F2833489B0.w64.b0", !982, i64 0}
!982 = !{!"000001F2833489B0.w128.b0", !983, i64 0}
!983 = !{!"000001F2833489B0.w256.b0", !984, i64 0}
!984 = !{!"000001F2833489B0.w512.b0", !985, i64 0}
!985 = !{!"000001F2833489B0.w1024.b0", !986, i64 0}
!986 = !{!"000001F2833489B0", !21, i64 0}
!987 = !{!988, !988, i64 0}
!988 = !{!"000001F2833489B0.w8.b8", !979, i64 0}
!989 = !{!990, !990, i64 0}
!990 = !{!"000001F2833489B0.w8.b16", !991, i64 0}
!991 = !{!"000001F2833489B0.w16.b16", !980, i64 0}
!992 = !{!993, !993, i64 0}
!993 = !{!"000001F2833489B0.w8.b24", !991, i64 0}
!994 = !{!995, !995, i64 0}
!995 = !{!"000001F2833489B0.w8.b32", !996, i64 0}
!996 = !{!"000001F2833489B0.w16.b32", !997, i64 0}
!997 = !{!"000001F2833489B0.w32.b32", !981, i64 0}
!998 = !{!999, !999, i64 0}
!999 = !{!"000001F283348A30.w8.b16", !1000, i64 0}
!1000 = !{!"000001F283348A30.w16.b16", !1001, i64 0}
!1001 = !{!"000001F283348A30.w32.b0", !1002, i64 0}
!1002 = !{!"000001F283348A30.w64.b0", !1003, i64 0}
!1003 = !{!"000001F283348A30.w128.b0", !1004, i64 0}
!1004 = !{!"000001F283348A30.w256.b0", !1005, i64 0}
!1005 = !{!"000001F283348A30.w512.b0", !1006, i64 0}
!1006 = !{!"000001F283348A30.w1024.b0", !1007, i64 0}
!1007 = !{!"000001F283348A30", !21, i64 0}
!1008 = !{!1009, !1009, i64 0}
!1009 = !{!"000001F283348A30.w8.b24", !1000, i64 0}
!1010 = !{!1011, !1011, i64 0}
!1011 = !{!"000001F283348A30.w8.b32", !1012, i64 0}
!1012 = !{!"000001F283348A30.w16.b32", !1013, i64 0}
!1013 = !{!"000001F283348A30.w32.b32", !1002, i64 0}
!1014 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1015)
!1015 = !{!1016, !1017, !1018, !1019, !1020, !1021}
!1016 = !DILocalVariable(name: "arg1", arg: 1, scope: !1014, file: !1, type: !8)
!1017 = !DILocalVariable(name: "arg2", arg: 2, scope: !1014, file: !1, type: !9)
!1018 = !DILocalVariable(name: "arg3", arg: 3, scope: !1014, file: !1, type: !7)
!1019 = !DILocalVariable(name: "arg4", arg: 4, scope: !1014, file: !1, type: !8)
!1020 = !DILocalVariable(name: "arg5", arg: 5, scope: !1014, file: !1, type: !9)
!1021 = !DILocalVariable(name: "arg6", arg: 6, scope: !1014, file: !1, type: !8)
!1022 = !DILocation(line: 0, scope: !1014)
!1023 = !{!1024, !1024, i64 0}
!1024 = !{!"000001F2FC561C00.w4.b0", !1025, i64 0}
!1025 = !{!"000001F2FC561C00.w8.b0", !1026, i64 0}
!1026 = !{!"000001F2FC561C00.w16.b0", !1027, i64 0}
!1027 = !{!"000001F2FC561C00.w32.b0", !1028, i64 0}
!1028 = !{!"000001F2FC561C00.w64.b0", !1029, i64 0}
!1029 = !{!"000001F2FC561C00.w128.b0", !1030, i64 0}
!1030 = !{!"000001F2FC561C00.w256.b0", !1031, i64 0}
!1031 = !{!"000001F2FC561C00.w512.b0", !1032, i64 0}
!1032 = !{!"000001F2FC561C00.w1024.b0", !1033, i64 0}
!1033 = !{!"000001F2FC561C00", !21, i64 0}
!1034 = !{!1035, !1035, i64 0}
!1035 = !{!"000001F2FC561C00.w4.b4", !1025, i64 0}
!1036 = !{!1037, !1037, i64 0}
!1037 = !{!"000001F2FC564D00.w8.b0", !1038, i64 0}
!1038 = !{!"000001F2FC564D00.w16.b0", !1039, i64 0}
!1039 = !{!"000001F2FC564D00.w32.b0", !1040, i64 0}
!1040 = !{!"000001F2FC564D00.w64.b0", !1041, i64 0}
!1041 = !{!"000001F2FC564D00.w128.b0", !1042, i64 0}
!1042 = !{!"000001F2FC564D00.w256.b0", !1043, i64 0}
!1043 = !{!"000001F2FC564D00.w512.b0", !1044, i64 0}
!1044 = !{!"000001F2FC564D00.w1024.b0", !1045, i64 0}
!1045 = !{!"000001F2FC564D00", !21, i64 0}
!1046 = !{!1047, !1047, i64 0}
!1047 = !{!"000001F2FC564D00.w8.b8", !1038, i64 0}
!1048 = !{!1049, !1049, i64 0}
!1049 = !{!"000001F2FC564D00.w8.b16", !1050, i64 0}
!1050 = !{!"000001F2FC564D00.w16.b16", !1039, i64 0}
!1051 = !{!1052, !1052, i64 0}
!1052 = !{!"000001F2FC564D00.w8.b24", !1050, i64 0}
!1053 = !{!1054, !1054, i64 0}
!1054 = !{!"000001F2FC564D00.w8.b32", !1055, i64 0}
!1055 = !{!"000001F2FC564D00.w16.b32", !1056, i64 0}
!1056 = !{!"000001F2FC564D00.w32.b32", !1040, i64 0}
!1057 = !{!1058, !1058, i64 0}
!1058 = !{!"000001F2FC564A40.w8.b8", !1059, i64 0}
!1059 = !{!"000001F2FC564A40.w16.b0", !1060, i64 0}
!1060 = !{!"000001F2FC564A40.w32.b0", !1061, i64 0}
!1061 = !{!"000001F2FC564A40.w64.b0", !1062, i64 0}
!1062 = !{!"000001F2FC564A40.w128.b0", !1063, i64 0}
!1063 = !{!"000001F2FC564A40.w256.b0", !1064, i64 0}
!1064 = !{!"000001F2FC564A40.w512.b0", !1065, i64 0}
!1065 = !{!"000001F2FC564A40.w1024.b0", !1066, i64 0}
!1066 = !{!"000001F2FC564A40", !21, i64 0}
!1067 = !{!1068, !1068, i64 0}
!1068 = !{!"000001F2FC564A40.w8.b16", !1069, i64 0}
!1069 = !{!"000001F2FC564A40.w16.b16", !1060, i64 0}
!1070 = !{!1071, !1071, i64 0}
!1071 = !{!"000001F2FC564A40.w8.b24", !1069, i64 0}
!1072 = !{!1073, !1073, i64 0}
!1073 = !{!"000001F2FC564A40.w8.b32", !1074, i64 0}
!1074 = !{!"000001F2FC564A40.w16.b32", !1075, i64 0}
!1075 = !{!"000001F2FC564A40.w32.b32", !1061, i64 0}
!1076 = !{!1077, !1077, i64 0}
!1077 = !{!"000001F2FC568980.w8.b0", !1078, i64 0}
!1078 = !{!"000001F2FC568980.w16.b0", !1079, i64 0}
!1079 = !{!"000001F2FC568980.w32.b0", !1080, i64 0}
!1080 = !{!"000001F2FC568980.w64.b0", !1081, i64 0}
!1081 = !{!"000001F2FC568980.w128.b0", !1082, i64 0}
!1082 = !{!"000001F2FC568980.w256.b0", !1083, i64 0}
!1083 = !{!"000001F2FC568980.w512.b0", !1084, i64 0}
!1084 = !{!"000001F2FC568980.w1024.b0", !1085, i64 0}
!1085 = !{!"000001F2FC568980", !21, i64 0}
!1086 = !{!1087, !1087, i64 0}
!1087 = !{!"000001F2FC568980.w8.b8", !1078, i64 0}
!1088 = !{!1089, !1089, i64 0}
!1089 = !{!"000001F2FC568980.w8.b16", !1090, i64 0}
!1090 = !{!"000001F2FC568980.w16.b16", !1079, i64 0}
!1091 = !{!1092, !1092, i64 0}
!1092 = !{!"000001F2FC568980.w8.b24", !1090, i64 0}
!1093 = !{!1094, !1094, i64 0}
!1094 = !{!"000001F2FC568980.w8.b32", !1095, i64 0}
!1095 = !{!"000001F2FC568980.w16.b32", !1096, i64 0}
!1096 = !{!"000001F2FC568980.w32.b32", !1080, i64 0}
!1097 = !{!1098, !1098, i64 0}
!1098 = !{!"000001F2FC568600.w8.b8", !1099, i64 0}
!1099 = !{!"000001F2FC568600.w16.b0", !1100, i64 0}
!1100 = !{!"000001F2FC568600.w32.b0", !1101, i64 0}
!1101 = !{!"000001F2FC568600.w64.b0", !1102, i64 0}
!1102 = !{!"000001F2FC568600.w128.b0", !1103, i64 0}
!1103 = !{!"000001F2FC568600.w256.b0", !1104, i64 0}
!1104 = !{!"000001F2FC568600.w512.b0", !1105, i64 0}
!1105 = !{!"000001F2FC568600.w1024.b0", !1106, i64 0}
!1106 = !{!"000001F2FC568600", !21, i64 0}
!1107 = !{!1108, !1108, i64 0}
!1108 = !{!"000001F2FC568600.w8.b16", !1109, i64 0}
!1109 = !{!"000001F2FC568600.w16.b16", !1100, i64 0}
!1110 = !{!1111, !1111, i64 0}
!1111 = !{!"000001F2FC568600.w8.b24", !1109, i64 0}
!1112 = !{!1113, !1113, i64 0}
!1113 = !{!"000001F2FC568600.w8.b32", !1114, i64 0}
!1114 = !{!"000001F2FC568600.w16.b32", !1115, i64 0}
!1115 = !{!"000001F2FC568600.w32.b32", !1101, i64 0}
!1116 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1117)
!1117 = !{!1118, !1119, !1120, !1121, !1122, !1123}
!1118 = !DILocalVariable(name: "arg1", arg: 1, scope: !1116, file: !1, type: !8)
!1119 = !DILocalVariable(name: "arg2", arg: 2, scope: !1116, file: !1, type: !9)
!1120 = !DILocalVariable(name: "arg3", arg: 3, scope: !1116, file: !1, type: !7)
!1121 = !DILocalVariable(name: "arg4", arg: 4, scope: !1116, file: !1, type: !8)
!1122 = !DILocalVariable(name: "arg5", arg: 5, scope: !1116, file: !1, type: !9)
!1123 = !DILocalVariable(name: "arg6", arg: 6, scope: !1116, file: !1, type: !8)
!1124 = !DILocation(line: 0, scope: !1116)
!1125 = !{!1126, !1126, i64 0}
!1126 = !{!"000001F2833A4B60.w4.b0", !1127, i64 0}
!1127 = !{!"000001F2833A4B60.w8.b0", !1128, i64 0}
!1128 = !{!"000001F2833A4B60.w16.b0", !1129, i64 0}
!1129 = !{!"000001F2833A4B60.w32.b0", !1130, i64 0}
!1130 = !{!"000001F2833A4B60.w64.b0", !1131, i64 0}
!1131 = !{!"000001F2833A4B60.w128.b0", !1132, i64 0}
!1132 = !{!"000001F2833A4B60.w256.b0", !1133, i64 0}
!1133 = !{!"000001F2833A4B60.w512.b0", !1134, i64 0}
!1134 = !{!"000001F2833A4B60.w1024.b0", !1135, i64 0}
!1135 = !{!"000001F2833A4B60", !21, i64 0}
!1136 = !{!1137, !1137, i64 0}
!1137 = !{!"000001F2833A4B60.w4.b4", !1127, i64 0}
!1138 = !{!1139, !1139, i64 0}
!1139 = !{!"000001F2833A8EA0.w8.b0", !1140, i64 0}
!1140 = !{!"000001F2833A8EA0.w16.b0", !1141, i64 0}
!1141 = !{!"000001F2833A8EA0.w32.b0", !1142, i64 0}
!1142 = !{!"000001F2833A8EA0.w64.b0", !1143, i64 0}
!1143 = !{!"000001F2833A8EA0.w128.b0", !1144, i64 0}
!1144 = !{!"000001F2833A8EA0.w256.b0", !1145, i64 0}
!1145 = !{!"000001F2833A8EA0.w512.b0", !1146, i64 0}
!1146 = !{!"000001F2833A8EA0.w1024.b0", !1147, i64 0}
!1147 = !{!"000001F2833A8EA0", !21, i64 0}
!1148 = !{!1149, !1149, i64 0}
!1149 = !{!"000001F2833A8EA0.w8.b8", !1140, i64 0}
!1150 = !{!1151, !1151, i64 0}
!1151 = !{!"000001F2833A8EA0.w8.b16", !1152, i64 0}
!1152 = !{!"000001F2833A8EA0.w16.b16", !1141, i64 0}
!1153 = !{!1154, !1154, i64 0}
!1154 = !{!"000001F2833A8EA0.w8.b24", !1152, i64 0}
!1155 = !{!1156, !1156, i64 0}
!1156 = !{!"000001F2833A8EA0.w8.b32", !1157, i64 0}
!1157 = !{!"000001F2833A8EA0.w16.b32", !1158, i64 0}
!1158 = !{!"000001F2833A8EA0.w32.b32", !1142, i64 0}
!1159 = !{!1160, !1160, i64 0}
!1160 = !{!"000001F2833A8A20.w8.b8", !1161, i64 0}
!1161 = !{!"000001F2833A8A20.w16.b0", !1162, i64 0}
!1162 = !{!"000001F2833A8A20.w32.b0", !1163, i64 0}
!1163 = !{!"000001F2833A8A20.w64.b0", !1164, i64 0}
!1164 = !{!"000001F2833A8A20.w128.b0", !1165, i64 0}
!1165 = !{!"000001F2833A8A20.w256.b0", !1166, i64 0}
!1166 = !{!"000001F2833A8A20.w512.b0", !1167, i64 0}
!1167 = !{!"000001F2833A8A20.w1024.b0", !1168, i64 0}
!1168 = !{!"000001F2833A8A20", !21, i64 0}
!1169 = !{!1170, !1170, i64 0}
!1170 = !{!"000001F2833A8A20.w8.b16", !1171, i64 0}
!1171 = !{!"000001F2833A8A20.w16.b16", !1162, i64 0}
!1172 = !{!1173, !1173, i64 0}
!1173 = !{!"000001F2833A8A20.w8.b24", !1171, i64 0}
!1174 = !{!1175, !1175, i64 0}
!1175 = !{!"000001F2833A8A20.w8.b32", !1176, i64 0}
!1176 = !{!"000001F2833A8A20.w16.b32", !1177, i64 0}
!1177 = !{!"000001F2833A8A20.w32.b32", !1163, i64 0}
!1178 = !{!1179, !1179, i64 0}
!1179 = !{!"000001F28338BD60.w8.b0", !1180, i64 0}
!1180 = !{!"000001F28338BD60.w16.b0", !1181, i64 0}
!1181 = !{!"000001F28338BD60.w32.b0", !1182, i64 0}
!1182 = !{!"000001F28338BD60.w64.b0", !1183, i64 0}
!1183 = !{!"000001F28338BD60.w128.b0", !1184, i64 0}
!1184 = !{!"000001F28338BD60.w256.b0", !1185, i64 0}
!1185 = !{!"000001F28338BD60.w512.b0", !1186, i64 0}
!1186 = !{!"000001F28338BD60.w1024.b0", !1187, i64 0}
!1187 = !{!"000001F28338BD60", !21, i64 0}
!1188 = !{!1189, !1189, i64 0}
!1189 = !{!"000001F28338BD60.w8.b8", !1180, i64 0}
!1190 = !{!1191, !1191, i64 0}
!1191 = !{!"000001F28338BD60.w8.b16", !1192, i64 0}
!1192 = !{!"000001F28338BD60.w16.b16", !1181, i64 0}
!1193 = !{!1194, !1194, i64 0}
!1194 = !{!"000001F28338BD60.w8.b24", !1192, i64 0}
!1195 = !{!1196, !1196, i64 0}
!1196 = !{!"000001F28338BD60.w8.b32", !1197, i64 0}
!1197 = !{!"000001F28338BD60.w16.b32", !1198, i64 0}
!1198 = !{!"000001F28338BD60.w32.b32", !1182, i64 0}
!1199 = !{!1200, !1200, i64 0}
!1200 = !{!"000001F2833944E0.w8.b16", !1201, i64 0}
!1201 = !{!"000001F2833944E0.w16.b16", !1202, i64 0}
!1202 = !{!"000001F2833944E0.w32.b0", !1203, i64 0}
!1203 = !{!"000001F2833944E0.w64.b0", !1204, i64 0}
!1204 = !{!"000001F2833944E0.w128.b0", !1205, i64 0}
!1205 = !{!"000001F2833944E0.w256.b0", !1206, i64 0}
!1206 = !{!"000001F2833944E0.w512.b0", !1207, i64 0}
!1207 = !{!"000001F2833944E0.w1024.b0", !1208, i64 0}
!1208 = !{!"000001F2833944E0", !21, i64 0}
!1209 = !{!1210, !1210, i64 0}
!1210 = !{!"000001F2833944E0.w8.b24", !1201, i64 0}
!1211 = !{!1212, !1212, i64 0}
!1212 = !{!"000001F2833944E0.w8.b32", !1213, i64 0}
!1213 = !{!"000001F2833944E0.w16.b32", !1214, i64 0}
!1214 = !{!"000001F2833944E0.w32.b32", !1203, i64 0}
!1215 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1216)
!1216 = !{!1217, !1218, !1219, !1220, !1221, !1222}
!1217 = !DILocalVariable(name: "arg1", arg: 1, scope: !1215, file: !1, type: !8)
!1218 = !DILocalVariable(name: "arg2", arg: 2, scope: !1215, file: !1, type: !9)
!1219 = !DILocalVariable(name: "arg3", arg: 3, scope: !1215, file: !1, type: !7)
!1220 = !DILocalVariable(name: "arg4", arg: 4, scope: !1215, file: !1, type: !8)
!1221 = !DILocalVariable(name: "arg5", arg: 5, scope: !1215, file: !1, type: !9)
!1222 = !DILocalVariable(name: "arg6", arg: 6, scope: !1215, file: !1, type: !8)
!1223 = !DILocation(line: 0, scope: !1215)
!1224 = !{!1225, !1225, i64 0}
!1225 = !{!"000001F283346B70.w4.b0", !1226, i64 0}
!1226 = !{!"000001F283346B70.w8.b0", !1227, i64 0}
!1227 = !{!"000001F283346B70.w16.b0", !1228, i64 0}
!1228 = !{!"000001F283346B70.w32.b0", !1229, i64 0}
!1229 = !{!"000001F283346B70.w64.b0", !1230, i64 0}
!1230 = !{!"000001F283346B70.w128.b0", !1231, i64 0}
!1231 = !{!"000001F283346B70.w256.b0", !1232, i64 0}
!1232 = !{!"000001F283346B70.w512.b0", !1233, i64 0}
!1233 = !{!"000001F283346B70.w1024.b0", !1234, i64 0}
!1234 = !{!"000001F283346B70", !21, i64 0}
!1235 = !{!1236, !1236, i64 0}
!1236 = !{!"000001F283346B70.w4.b4", !1226, i64 0}
!1237 = !{!1238, !1238, i64 0}
!1238 = !{!"000001F283349BF0.w8.b0", !1239, i64 0}
!1239 = !{!"000001F283349BF0.w16.b0", !1240, i64 0}
!1240 = !{!"000001F283349BF0.w32.b0", !1241, i64 0}
!1241 = !{!"000001F283349BF0.w64.b0", !1242, i64 0}
!1242 = !{!"000001F283349BF0.w128.b0", !1243, i64 0}
!1243 = !{!"000001F283349BF0.w256.b0", !1244, i64 0}
!1244 = !{!"000001F283349BF0.w512.b0", !1245, i64 0}
!1245 = !{!"000001F283349BF0.w1024.b0", !1246, i64 0}
!1246 = !{!"000001F283349BF0", !21, i64 0}
!1247 = !{!1248, !1248, i64 0}
!1248 = !{!"000001F283349BF0.w8.b8", !1239, i64 0}
!1249 = !{!1250, !1250, i64 0}
!1250 = !{!"000001F283349BF0.w8.b16", !1251, i64 0}
!1251 = !{!"000001F283349BF0.w16.b16", !1240, i64 0}
!1252 = !{!1253, !1253, i64 0}
!1253 = !{!"000001F283349BF0.w8.b24", !1251, i64 0}
!1254 = !{!1255, !1255, i64 0}
!1255 = !{!"000001F283349BF0.w8.b32", !1256, i64 0}
!1256 = !{!"000001F283349BF0.w16.b32", !1257, i64 0}
!1257 = !{!"000001F283349BF0.w32.b32", !1241, i64 0}
!1258 = !{!1259, !1259, i64 0}
!1259 = !{!"000001F28334AEB0.w8.b8", !1260, i64 0}
!1260 = !{!"000001F28334AEB0.w16.b0", !1261, i64 0}
!1261 = !{!"000001F28334AEB0.w32.b0", !1262, i64 0}
!1262 = !{!"000001F28334AEB0.w64.b0", !1263, i64 0}
!1263 = !{!"000001F28334AEB0.w128.b0", !1264, i64 0}
!1264 = !{!"000001F28334AEB0.w256.b0", !1265, i64 0}
!1265 = !{!"000001F28334AEB0.w512.b0", !1266, i64 0}
!1266 = !{!"000001F28334AEB0.w1024.b0", !1267, i64 0}
!1267 = !{!"000001F28334AEB0", !21, i64 0}
!1268 = !{!1269, !1269, i64 0}
!1269 = !{!"000001F28334AEB0.w8.b16", !1270, i64 0}
!1270 = !{!"000001F28334AEB0.w16.b16", !1261, i64 0}
!1271 = !{!1272, !1272, i64 0}
!1272 = !{!"000001F28334AEB0.w8.b24", !1270, i64 0}
!1273 = !{!1274, !1274, i64 0}
!1274 = !{!"000001F28334AEB0.w8.b32", !1275, i64 0}
!1275 = !{!"000001F28334AEB0.w16.b32", !1276, i64 0}
!1276 = !{!"000001F28334AEB0.w32.b32", !1262, i64 0}
!1277 = !{!1278, !1278, i64 0}
!1278 = !{!"000001F28334A370.w8.b0", !1279, i64 0}
!1279 = !{!"000001F28334A370.w16.b0", !1280, i64 0}
!1280 = !{!"000001F28334A370.w32.b0", !1281, i64 0}
!1281 = !{!"000001F28334A370.w64.b0", !1282, i64 0}
!1282 = !{!"000001F28334A370.w128.b0", !1283, i64 0}
!1283 = !{!"000001F28334A370.w256.b0", !1284, i64 0}
!1284 = !{!"000001F28334A370.w512.b0", !1285, i64 0}
!1285 = !{!"000001F28334A370.w1024.b0", !1286, i64 0}
!1286 = !{!"000001F28334A370", !21, i64 0}
!1287 = !{!1288, !1288, i64 0}
!1288 = !{!"000001F28334A370.w8.b8", !1279, i64 0}
!1289 = !{!1290, !1290, i64 0}
!1290 = !{!"000001F28334A370.w8.b16", !1291, i64 0}
!1291 = !{!"000001F28334A370.w16.b16", !1280, i64 0}
!1292 = !{!1293, !1293, i64 0}
!1293 = !{!"000001F28334A370.w8.b24", !1291, i64 0}
!1294 = !{!1295, !1295, i64 0}
!1295 = !{!"000001F28334A370.w8.b32", !1296, i64 0}
!1296 = !{!"000001F28334A370.w16.b32", !1297, i64 0}
!1297 = !{!"000001F28334A370.w32.b32", !1281, i64 0}
!1298 = !{!1299, !1299, i64 0}
!1299 = !{!"000001F28334BFB0.w8.b16", !1300, i64 0}
!1300 = !{!"000001F28334BFB0.w16.b16", !1301, i64 0}
!1301 = !{!"000001F28334BFB0.w32.b0", !1302, i64 0}
!1302 = !{!"000001F28334BFB0.w64.b0", !1303, i64 0}
!1303 = !{!"000001F28334BFB0.w128.b0", !1304, i64 0}
!1304 = !{!"000001F28334BFB0.w256.b0", !1305, i64 0}
!1305 = !{!"000001F28334BFB0.w512.b0", !1306, i64 0}
!1306 = !{!"000001F28334BFB0.w1024.b0", !1307, i64 0}
!1307 = !{!"000001F28334BFB0", !21, i64 0}
!1308 = !{!1309, !1309, i64 0}
!1309 = !{!"000001F28334BFB0.w8.b24", !1300, i64 0}
!1310 = !{!1311, !1311, i64 0}
!1311 = !{!"000001F28334BFB0.w8.b32", !1312, i64 0}
!1312 = !{!"000001F28334BFB0.w16.b32", !1313, i64 0}
!1313 = !{!"000001F28334BFB0.w32.b32", !1302, i64 0}
!1314 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1315)
!1315 = !{!1316, !1317, !1318, !1319, !1320, !1321}
!1316 = !DILocalVariable(name: "arg1", arg: 1, scope: !1314, file: !1, type: !8)
!1317 = !DILocalVariable(name: "arg2", arg: 2, scope: !1314, file: !1, type: !9)
!1318 = !DILocalVariable(name: "arg3", arg: 3, scope: !1314, file: !1, type: !7)
!1319 = !DILocalVariable(name: "arg4", arg: 4, scope: !1314, file: !1, type: !8)
!1320 = !DILocalVariable(name: "arg5", arg: 5, scope: !1314, file: !1, type: !9)
!1321 = !DILocalVariable(name: "arg6", arg: 6, scope: !1314, file: !1, type: !8)
!1322 = !DILocation(line: 0, scope: !1314)
!1323 = !{!1324, !1324, i64 0}
!1324 = !{!"000001F2EEAA9770.w4.b0", !1325, i64 0}
!1325 = !{!"000001F2EEAA9770.w8.b0", !1326, i64 0}
!1326 = !{!"000001F2EEAA9770.w16.b0", !1327, i64 0}
!1327 = !{!"000001F2EEAA9770.w32.b0", !1328, i64 0}
!1328 = !{!"000001F2EEAA9770.w64.b0", !1329, i64 0}
!1329 = !{!"000001F2EEAA9770.w128.b0", !1330, i64 0}
!1330 = !{!"000001F2EEAA9770.w256.b0", !1331, i64 0}
!1331 = !{!"000001F2EEAA9770.w512.b0", !1332, i64 0}
!1332 = !{!"000001F2EEAA9770.w1024.b0", !1333, i64 0}
!1333 = !{!"000001F2EEAA9770", !21, i64 0}
!1334 = !{!1335, !1335, i64 0}
!1335 = !{!"000001F2EEAA9770.w4.b4", !1325, i64 0}
!1336 = !{!1337, !1337, i64 0}
!1337 = !{!"000001F2EEAAB970.w8.b0", !1338, i64 0}
!1338 = !{!"000001F2EEAAB970.w16.b0", !1339, i64 0}
!1339 = !{!"000001F2EEAAB970.w32.b0", !1340, i64 0}
!1340 = !{!"000001F2EEAAB970.w64.b0", !1341, i64 0}
!1341 = !{!"000001F2EEAAB970.w128.b0", !1342, i64 0}
!1342 = !{!"000001F2EEAAB970.w256.b0", !1343, i64 0}
!1343 = !{!"000001F2EEAAB970.w512.b0", !1344, i64 0}
!1344 = !{!"000001F2EEAAB970.w1024.b0", !1345, i64 0}
!1345 = !{!"000001F2EEAAB970", !21, i64 0}
!1346 = !{!1347, !1347, i64 0}
!1347 = !{!"000001F2EEAAB970.w8.b8", !1338, i64 0}
!1348 = !{!1349, !1349, i64 0}
!1349 = !{!"000001F2EEAAB970.w8.b16", !1350, i64 0}
!1350 = !{!"000001F2EEAAB970.w16.b16", !1339, i64 0}
!1351 = !{!1352, !1352, i64 0}
!1352 = !{!"000001F2EEAAB970.w8.b24", !1350, i64 0}
!1353 = !{!1354, !1354, i64 0}
!1354 = !{!"000001F2EEAAB970.w8.b32", !1355, i64 0}
!1355 = !{!"000001F2EEAAB970.w16.b32", !1356, i64 0}
!1356 = !{!"000001F2EEAAB970.w32.b32", !1340, i64 0}
!1357 = !{!1358, !1358, i64 0}
!1358 = !{!"000001F2EEAAC7B0.w8.b8", !1359, i64 0}
!1359 = !{!"000001F2EEAAC7B0.w16.b0", !1360, i64 0}
!1360 = !{!"000001F2EEAAC7B0.w32.b0", !1361, i64 0}
!1361 = !{!"000001F2EEAAC7B0.w64.b0", !1362, i64 0}
!1362 = !{!"000001F2EEAAC7B0.w128.b0", !1363, i64 0}
!1363 = !{!"000001F2EEAAC7B0.w256.b0", !1364, i64 0}
!1364 = !{!"000001F2EEAAC7B0.w512.b0", !1365, i64 0}
!1365 = !{!"000001F2EEAAC7B0.w1024.b0", !1366, i64 0}
!1366 = !{!"000001F2EEAAC7B0", !21, i64 0}
!1367 = !{!1368, !1368, i64 0}
!1368 = !{!"000001F2EEAAC7B0.w8.b16", !1369, i64 0}
!1369 = !{!"000001F2EEAAC7B0.w16.b16", !1360, i64 0}
!1370 = !{!1371, !1371, i64 0}
!1371 = !{!"000001F2EEAAC7B0.w8.b24", !1369, i64 0}
!1372 = !{!1373, !1373, i64 0}
!1373 = !{!"000001F2EEAAC7B0.w8.b32", !1374, i64 0}
!1374 = !{!"000001F2EEAAC7B0.w16.b32", !1375, i64 0}
!1375 = !{!"000001F2EEAAC7B0.w32.b32", !1361, i64 0}
!1376 = !{!1377, !1377, i64 0}
!1377 = !{!"000001F2EEAB04B0.w8.b0", !1378, i64 0}
!1378 = !{!"000001F2EEAB04B0.w16.b0", !1379, i64 0}
!1379 = !{!"000001F2EEAB04B0.w32.b0", !1380, i64 0}
!1380 = !{!"000001F2EEAB04B0.w64.b0", !1381, i64 0}
!1381 = !{!"000001F2EEAB04B0.w128.b0", !1382, i64 0}
!1382 = !{!"000001F2EEAB04B0.w256.b0", !1383, i64 0}
!1383 = !{!"000001F2EEAB04B0.w512.b0", !1384, i64 0}
!1384 = !{!"000001F2EEAB04B0.w1024.b0", !1385, i64 0}
!1385 = !{!"000001F2EEAB04B0", !21, i64 0}
!1386 = !{!1387, !1387, i64 0}
!1387 = !{!"000001F2EEAB04B0.w8.b8", !1378, i64 0}
!1388 = !{!1389, !1389, i64 0}
!1389 = !{!"000001F2EEAB04B0.w8.b16", !1390, i64 0}
!1390 = !{!"000001F2EEAB04B0.w16.b16", !1379, i64 0}
!1391 = !{!1392, !1392, i64 0}
!1392 = !{!"000001F2EEAB04B0.w8.b24", !1390, i64 0}
!1393 = !{!1394, !1394, i64 0}
!1394 = !{!"000001F2EEAB04B0.w8.b32", !1395, i64 0}
!1395 = !{!"000001F2EEAB04B0.w16.b32", !1396, i64 0}
!1396 = !{!"000001F2EEAB04B0.w32.b32", !1380, i64 0}
!1397 = !{!1398, !1398, i64 0}
!1398 = !{!"000001F2EEA97EB0.w8.b8", !1399, i64 0}
!1399 = !{!"000001F2EEA97EB0.w16.b0", !1400, i64 0}
!1400 = !{!"000001F2EEA97EB0.w32.b0", !1401, i64 0}
!1401 = !{!"000001F2EEA97EB0.w64.b0", !1402, i64 0}
!1402 = !{!"000001F2EEA97EB0.w128.b0", !1403, i64 0}
!1403 = !{!"000001F2EEA97EB0.w256.b0", !1404, i64 0}
!1404 = !{!"000001F2EEA97EB0.w512.b0", !1405, i64 0}
!1405 = !{!"000001F2EEA97EB0.w1024.b0", !1406, i64 0}
!1406 = !{!"000001F2EEA97EB0", !21, i64 0}
!1407 = !{!1408, !1408, i64 0}
!1408 = !{!"000001F2EEA97EB0.w8.b16", !1409, i64 0}
!1409 = !{!"000001F2EEA97EB0.w16.b16", !1400, i64 0}
!1410 = !{!1411, !1411, i64 0}
!1411 = !{!"000001F2EEA97EB0.w8.b24", !1409, i64 0}
!1412 = !{!1413, !1413, i64 0}
!1413 = !{!"000001F2EEA97EB0.w8.b32", !1414, i64 0}
!1414 = !{!"000001F2EEA97EB0.w16.b32", !1415, i64 0}
!1415 = !{!"000001F2EEA97EB0.w32.b32", !1401, i64 0}
!1416 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1417)
!1417 = !{!1418, !1419, !1420, !1421, !1422, !1423}
!1418 = !DILocalVariable(name: "arg1", arg: 1, scope: !1416, file: !1, type: !8)
!1419 = !DILocalVariable(name: "arg2", arg: 2, scope: !1416, file: !1, type: !9)
!1420 = !DILocalVariable(name: "arg3", arg: 3, scope: !1416, file: !1, type: !7)
!1421 = !DILocalVariable(name: "arg4", arg: 4, scope: !1416, file: !1, type: !8)
!1422 = !DILocalVariable(name: "arg5", arg: 5, scope: !1416, file: !1, type: !9)
!1423 = !DILocalVariable(name: "arg6", arg: 6, scope: !1416, file: !1, type: !8)
!1424 = !DILocation(line: 0, scope: !1416)
!1425 = !{!1426, !1426, i64 0}
!1426 = !{!"000001F2EB0E60E0.w4.b0", !1427, i64 0}
!1427 = !{!"000001F2EB0E60E0.w8.b0", !1428, i64 0}
!1428 = !{!"000001F2EB0E60E0.w16.b0", !1429, i64 0}
!1429 = !{!"000001F2EB0E60E0.w32.b0", !1430, i64 0}
!1430 = !{!"000001F2EB0E60E0.w64.b0", !1431, i64 0}
!1431 = !{!"000001F2EB0E60E0.w128.b0", !1432, i64 0}
!1432 = !{!"000001F2EB0E60E0.w256.b0", !1433, i64 0}
!1433 = !{!"000001F2EB0E60E0.w512.b0", !1434, i64 0}
!1434 = !{!"000001F2EB0E60E0.w1024.b0", !1435, i64 0}
!1435 = !{!"000001F2EB0E60E0", !21, i64 0}
!1436 = !{!1437, !1437, i64 0}
!1437 = !{!"000001F2EB0E60E0.w4.b4", !1427, i64 0}
!1438 = !{!1439, !1439, i64 0}
!1439 = !{!"000001F2EB0EAAA0.w8.b0", !1440, i64 0}
!1440 = !{!"000001F2EB0EAAA0.w16.b0", !1441, i64 0}
!1441 = !{!"000001F2EB0EAAA0.w32.b0", !1442, i64 0}
!1442 = !{!"000001F2EB0EAAA0.w64.b0", !1443, i64 0}
!1443 = !{!"000001F2EB0EAAA0.w128.b0", !1444, i64 0}
!1444 = !{!"000001F2EB0EAAA0.w256.b0", !1445, i64 0}
!1445 = !{!"000001F2EB0EAAA0.w512.b0", !1446, i64 0}
!1446 = !{!"000001F2EB0EAAA0.w1024.b0", !1447, i64 0}
!1447 = !{!"000001F2EB0EAAA0", !21, i64 0}
!1448 = !{!1449, !1449, i64 0}
!1449 = !{!"000001F2EB0EAAA0.w8.b8", !1440, i64 0}
!1450 = !{!1451, !1451, i64 0}
!1451 = !{!"000001F2EB0EAAA0.w8.b16", !1452, i64 0}
!1452 = !{!"000001F2EB0EAAA0.w16.b16", !1441, i64 0}
!1453 = !{!1454, !1454, i64 0}
!1454 = !{!"000001F2EB0EAAA0.w8.b24", !1452, i64 0}
!1455 = !{!1456, !1456, i64 0}
!1456 = !{!"000001F2EB0EAAA0.w8.b32", !1457, i64 0}
!1457 = !{!"000001F2EB0EAAA0.w16.b32", !1458, i64 0}
!1458 = !{!"000001F2EB0EAAA0.w32.b32", !1442, i64 0}
!1459 = !{!1460, !1460, i64 0}
!1460 = !{!"000001F2EB0EB6A0.w8.b8", !1461, i64 0}
!1461 = !{!"000001F2EB0EB6A0.w16.b0", !1462, i64 0}
!1462 = !{!"000001F2EB0EB6A0.w32.b0", !1463, i64 0}
!1463 = !{!"000001F2EB0EB6A0.w64.b0", !1464, i64 0}
!1464 = !{!"000001F2EB0EB6A0.w128.b0", !1465, i64 0}
!1465 = !{!"000001F2EB0EB6A0.w256.b0", !1466, i64 0}
!1466 = !{!"000001F2EB0EB6A0.w512.b0", !1467, i64 0}
!1467 = !{!"000001F2EB0EB6A0.w1024.b0", !1468, i64 0}
!1468 = !{!"000001F2EB0EB6A0", !21, i64 0}
!1469 = !{!1470, !1470, i64 0}
!1470 = !{!"000001F2EB0EB6A0.w8.b16", !1471, i64 0}
!1471 = !{!"000001F2EB0EB6A0.w16.b16", !1462, i64 0}
!1472 = !{!1473, !1473, i64 0}
!1473 = !{!"000001F2EB0EB6A0.w8.b24", !1471, i64 0}
!1474 = !{!1475, !1475, i64 0}
!1475 = !{!"000001F2EB0EB6A0.w8.b32", !1476, i64 0}
!1476 = !{!"000001F2EB0EB6A0.w16.b32", !1477, i64 0}
!1477 = !{!"000001F2EB0EB6A0.w32.b32", !1463, i64 0}
!1478 = !{!1479, !1479, i64 0}
!1479 = !{!"000001F2EB0ED7E0.w8.b0", !1480, i64 0}
!1480 = !{!"000001F2EB0ED7E0.w16.b0", !1481, i64 0}
!1481 = !{!"000001F2EB0ED7E0.w32.b0", !1482, i64 0}
!1482 = !{!"000001F2EB0ED7E0.w64.b0", !1483, i64 0}
!1483 = !{!"000001F2EB0ED7E0.w128.b0", !1484, i64 0}
!1484 = !{!"000001F2EB0ED7E0.w256.b0", !1485, i64 0}
!1485 = !{!"000001F2EB0ED7E0.w512.b0", !1486, i64 0}
!1486 = !{!"000001F2EB0ED7E0.w1024.b0", !1487, i64 0}
!1487 = !{!"000001F2EB0ED7E0", !21, i64 0}
!1488 = !{!1489, !1489, i64 0}
!1489 = !{!"000001F2EB0ED7E0.w8.b8", !1480, i64 0}
!1490 = !{!1491, !1491, i64 0}
!1491 = !{!"000001F2EB0ED7E0.w8.b16", !1492, i64 0}
!1492 = !{!"000001F2EB0ED7E0.w16.b16", !1481, i64 0}
!1493 = !{!1494, !1494, i64 0}
!1494 = !{!"000001F2EB0ED7E0.w8.b24", !1492, i64 0}
!1495 = !{!1496, !1496, i64 0}
!1496 = !{!"000001F2EB0ED7E0.w8.b32", !1497, i64 0}
!1497 = !{!"000001F2EB0ED7E0.w16.b32", !1498, i64 0}
!1498 = !{!"000001F2EB0ED7E0.w32.b32", !1482, i64 0}
!1499 = !{!1500, !1500, i64 0}
!1500 = !{!"000001F2EB0EE6E0.w8.b8", !1501, i64 0}
!1501 = !{!"000001F2EB0EE6E0.w16.b0", !1502, i64 0}
!1502 = !{!"000001F2EB0EE6E0.w32.b0", !1503, i64 0}
!1503 = !{!"000001F2EB0EE6E0.w64.b0", !1504, i64 0}
!1504 = !{!"000001F2EB0EE6E0.w128.b0", !1505, i64 0}
!1505 = !{!"000001F2EB0EE6E0.w256.b0", !1506, i64 0}
!1506 = !{!"000001F2EB0EE6E0.w512.b0", !1507, i64 0}
!1507 = !{!"000001F2EB0EE6E0.w1024.b0", !1508, i64 0}
!1508 = !{!"000001F2EB0EE6E0", !21, i64 0}
!1509 = !{!1510, !1510, i64 0}
!1510 = !{!"000001F2EB0EE6E0.w8.b16", !1511, i64 0}
!1511 = !{!"000001F2EB0EE6E0.w16.b16", !1502, i64 0}
!1512 = !{!1513, !1513, i64 0}
!1513 = !{!"000001F2EB0EE6E0.w8.b24", !1511, i64 0}
!1514 = !{!1515, !1515, i64 0}
!1515 = !{!"000001F2EB0EE6E0.w8.b32", !1516, i64 0}
!1516 = !{!"000001F2EB0EE6E0.w16.b32", !1517, i64 0}
!1517 = !{!"000001F2EB0EE6E0.w32.b32", !1503, i64 0}
!1518 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1519)
!1519 = !{!1520, !1521, !1522, !1523, !1524, !1525}
!1520 = !DILocalVariable(name: "arg1", arg: 1, scope: !1518, file: !1, type: !8)
!1521 = !DILocalVariable(name: "arg2", arg: 2, scope: !1518, file: !1, type: !9)
!1522 = !DILocalVariable(name: "arg3", arg: 3, scope: !1518, file: !1, type: !7)
!1523 = !DILocalVariable(name: "arg4", arg: 4, scope: !1518, file: !1, type: !8)
!1524 = !DILocalVariable(name: "arg5", arg: 5, scope: !1518, file: !1, type: !9)
!1525 = !DILocalVariable(name: "arg6", arg: 6, scope: !1518, file: !1, type: !8)
!1526 = !DILocation(line: 0, scope: !1518)
!1527 = !{!1528, !1528, i64 0}
!1528 = !{!"000001F2FC56CE00.w4.b0", !1529, i64 0}
!1529 = !{!"000001F2FC56CE00.w8.b0", !1530, i64 0}
!1530 = !{!"000001F2FC56CE00.w16.b0", !1531, i64 0}
!1531 = !{!"000001F2FC56CE00.w32.b0", !1532, i64 0}
!1532 = !{!"000001F2FC56CE00.w64.b0", !1533, i64 0}
!1533 = !{!"000001F2FC56CE00.w128.b0", !1534, i64 0}
!1534 = !{!"000001F2FC56CE00.w256.b0", !1535, i64 0}
!1535 = !{!"000001F2FC56CE00.w512.b0", !1536, i64 0}
!1536 = !{!"000001F2FC56CE00.w1024.b0", !1537, i64 0}
!1537 = !{!"000001F2FC56CE00", !21, i64 0}
!1538 = !{!1539, !1539, i64 0}
!1539 = !{!"000001F2FC56CE00.w4.b4", !1529, i64 0}
!1540 = !{!1541, !1541, i64 0}
!1541 = !{!"000001F2FC5716C0.w8.b0", !1542, i64 0}
!1542 = !{!"000001F2FC5716C0.w16.b0", !1543, i64 0}
!1543 = !{!"000001F2FC5716C0.w32.b0", !1544, i64 0}
!1544 = !{!"000001F2FC5716C0.w64.b0", !1545, i64 0}
!1545 = !{!"000001F2FC5716C0.w128.b0", !1546, i64 0}
!1546 = !{!"000001F2FC5716C0.w256.b0", !1547, i64 0}
!1547 = !{!"000001F2FC5716C0.w512.b0", !1548, i64 0}
!1548 = !{!"000001F2FC5716C0.w1024.b0", !1549, i64 0}
!1549 = !{!"000001F2FC5716C0", !21, i64 0}
!1550 = !{!1551, !1551, i64 0}
!1551 = !{!"000001F2FC5716C0.w8.b8", !1542, i64 0}
!1552 = !{!1553, !1553, i64 0}
!1553 = !{!"000001F2FC5716C0.w8.b16", !1554, i64 0}
!1554 = !{!"000001F2FC5716C0.w16.b16", !1543, i64 0}
!1555 = !{!1556, !1556, i64 0}
!1556 = !{!"000001F2FC5716C0.w8.b24", !1554, i64 0}
!1557 = !{!1558, !1558, i64 0}
!1558 = !{!"000001F2FC5716C0.w8.b32", !1559, i64 0}
!1559 = !{!"000001F2FC5716C0.w16.b32", !1560, i64 0}
!1560 = !{!"000001F2FC5716C0.w32.b32", !1544, i64 0}
!1561 = !{!1562, !1562, i64 0}
!1562 = !{!"000001F2FC5719C0.w8.b8", !1563, i64 0}
!1563 = !{!"000001F2FC5719C0.w16.b0", !1564, i64 0}
!1564 = !{!"000001F2FC5719C0.w32.b0", !1565, i64 0}
!1565 = !{!"000001F2FC5719C0.w64.b0", !1566, i64 0}
!1566 = !{!"000001F2FC5719C0.w128.b0", !1567, i64 0}
!1567 = !{!"000001F2FC5719C0.w256.b0", !1568, i64 0}
!1568 = !{!"000001F2FC5719C0.w512.b0", !1569, i64 0}
!1569 = !{!"000001F2FC5719C0.w1024.b0", !1570, i64 0}
!1570 = !{!"000001F2FC5719C0", !21, i64 0}
!1571 = !{!1572, !1572, i64 0}
!1572 = !{!"000001F2FC5719C0.w8.b16", !1573, i64 0}
!1573 = !{!"000001F2FC5719C0.w16.b16", !1564, i64 0}
!1574 = !{!1575, !1575, i64 0}
!1575 = !{!"000001F2FC5719C0.w8.b24", !1573, i64 0}
!1576 = !{!1577, !1577, i64 0}
!1577 = !{!"000001F2FC5719C0.w8.b32", !1578, i64 0}
!1578 = !{!"000001F2FC5719C0.w16.b32", !1579, i64 0}
!1579 = !{!"000001F2FC5719C0.w32.b32", !1565, i64 0}
!1580 = !{!1581, !1581, i64 0}
!1581 = !{!"000001F2FC572840.w8.b0", !1582, i64 0}
!1582 = !{!"000001F2FC572840.w16.b0", !1583, i64 0}
!1583 = !{!"000001F2FC572840.w32.b0", !1584, i64 0}
!1584 = !{!"000001F2FC572840.w64.b0", !1585, i64 0}
!1585 = !{!"000001F2FC572840.w128.b0", !1586, i64 0}
!1586 = !{!"000001F2FC572840.w256.b0", !1587, i64 0}
!1587 = !{!"000001F2FC572840.w512.b0", !1588, i64 0}
!1588 = !{!"000001F2FC572840.w1024.b0", !1589, i64 0}
!1589 = !{!"000001F2FC572840", !21, i64 0}
!1590 = !{!1591, !1591, i64 0}
!1591 = !{!"000001F2FC572840.w8.b8", !1582, i64 0}
!1592 = !{!1593, !1593, i64 0}
!1593 = !{!"000001F2FC572840.w8.b16", !1594, i64 0}
!1594 = !{!"000001F2FC572840.w16.b16", !1583, i64 0}
!1595 = !{!1596, !1596, i64 0}
!1596 = !{!"000001F2FC572840.w8.b24", !1594, i64 0}
!1597 = !{!1598, !1598, i64 0}
!1598 = !{!"000001F2FC572840.w8.b32", !1599, i64 0}
!1599 = !{!"000001F2FC572840.w16.b32", !1600, i64 0}
!1600 = !{!"000001F2FC572840.w32.b32", !1584, i64 0}
!1601 = !{!1602, !1602, i64 0}
!1602 = !{!"000001F2FC572B40.w8.b16", !1603, i64 0}
!1603 = !{!"000001F2FC572B40.w16.b16", !1604, i64 0}
!1604 = !{!"000001F2FC572B40.w32.b0", !1605, i64 0}
!1605 = !{!"000001F2FC572B40.w64.b0", !1606, i64 0}
!1606 = !{!"000001F2FC572B40.w128.b0", !1607, i64 0}
!1607 = !{!"000001F2FC572B40.w256.b0", !1608, i64 0}
!1608 = !{!"000001F2FC572B40.w512.b0", !1609, i64 0}
!1609 = !{!"000001F2FC572B40.w1024.b0", !1610, i64 0}
!1610 = !{!"000001F2FC572B40", !21, i64 0}
!1611 = !{!1612, !1612, i64 0}
!1612 = !{!"000001F2FC572B40.w8.b24", !1603, i64 0}
!1613 = !{!1614, !1614, i64 0}
!1614 = !{!"000001F2FC572B40.w8.b32", !1615, i64 0}
!1615 = !{!"000001F2FC572B40.w16.b32", !1616, i64 0}
!1616 = !{!"000001F2FC572B40.w32.b32", !1605, i64 0}
!1617 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1618)
!1618 = !{!1619, !1620, !1621, !1622, !1623, !1624}
!1619 = !DILocalVariable(name: "arg1", arg: 1, scope: !1617, file: !1, type: !8)
!1620 = !DILocalVariable(name: "arg2", arg: 2, scope: !1617, file: !1, type: !9)
!1621 = !DILocalVariable(name: "arg3", arg: 3, scope: !1617, file: !1, type: !7)
!1622 = !DILocalVariable(name: "arg4", arg: 4, scope: !1617, file: !1, type: !8)
!1623 = !DILocalVariable(name: "arg5", arg: 5, scope: !1617, file: !1, type: !9)
!1624 = !DILocalVariable(name: "arg6", arg: 6, scope: !1617, file: !1, type: !8)
!1625 = !DILocation(line: 0, scope: !1617)
!1626 = !{!1627, !1627, i64 0}
!1627 = !{!"000001F28339B2E0.w4.b0", !1628, i64 0}
!1628 = !{!"000001F28339B2E0.w8.b0", !1629, i64 0}
!1629 = !{!"000001F28339B2E0.w16.b0", !1630, i64 0}
!1630 = !{!"000001F28339B2E0.w32.b0", !1631, i64 0}
!1631 = !{!"000001F28339B2E0.w64.b0", !1632, i64 0}
!1632 = !{!"000001F28339B2E0.w128.b0", !1633, i64 0}
!1633 = !{!"000001F28339B2E0.w256.b0", !1634, i64 0}
!1634 = !{!"000001F28339B2E0.w512.b0", !1635, i64 0}
!1635 = !{!"000001F28339B2E0.w1024.b0", !1636, i64 0}
!1636 = !{!"000001F28339B2E0", !21, i64 0}
!1637 = !{!1638, !1638, i64 0}
!1638 = !{!"000001F28339B2E0.w4.b4", !1628, i64 0}
!1639 = !{!1640, !1640, i64 0}
!1640 = !{!"000001F2833A0EA0.w8.b0", !1641, i64 0}
!1641 = !{!"000001F2833A0EA0.w16.b0", !1642, i64 0}
!1642 = !{!"000001F2833A0EA0.w32.b0", !1643, i64 0}
!1643 = !{!"000001F2833A0EA0.w64.b0", !1644, i64 0}
!1644 = !{!"000001F2833A0EA0.w128.b0", !1645, i64 0}
!1645 = !{!"000001F2833A0EA0.w256.b0", !1646, i64 0}
!1646 = !{!"000001F2833A0EA0.w512.b0", !1647, i64 0}
!1647 = !{!"000001F2833A0EA0.w1024.b0", !1648, i64 0}
!1648 = !{!"000001F2833A0EA0", !21, i64 0}
!1649 = !{!1650, !1650, i64 0}
!1650 = !{!"000001F2833A0EA0.w8.b8", !1641, i64 0}
!1651 = !{!1652, !1652, i64 0}
!1652 = !{!"000001F2833A0EA0.w8.b16", !1653, i64 0}
!1653 = !{!"000001F2833A0EA0.w16.b16", !1642, i64 0}
!1654 = !{!1655, !1655, i64 0}
!1655 = !{!"000001F2833A0EA0.w8.b24", !1653, i64 0}
!1656 = !{!1657, !1657, i64 0}
!1657 = !{!"000001F2833A0EA0.w8.b32", !1658, i64 0}
!1658 = !{!"000001F2833A0EA0.w16.b32", !1659, i64 0}
!1659 = !{!"000001F2833A0EA0.w32.b32", !1643, i64 0}
!1660 = !{!1661, !1661, i64 0}
!1661 = !{!"000001F2833A11E0.w8.b8", !1662, i64 0}
!1662 = !{!"000001F2833A11E0.w16.b0", !1663, i64 0}
!1663 = !{!"000001F2833A11E0.w32.b0", !1664, i64 0}
!1664 = !{!"000001F2833A11E0.w64.b0", !1665, i64 0}
!1665 = !{!"000001F2833A11E0.w128.b0", !1666, i64 0}
!1666 = !{!"000001F2833A11E0.w256.b0", !1667, i64 0}
!1667 = !{!"000001F2833A11E0.w512.b0", !1668, i64 0}
!1668 = !{!"000001F2833A11E0.w1024.b0", !1669, i64 0}
!1669 = !{!"000001F2833A11E0", !21, i64 0}
!1670 = !{!1671, !1671, i64 0}
!1671 = !{!"000001F2833A11E0.w8.b16", !1672, i64 0}
!1672 = !{!"000001F2833A11E0.w16.b16", !1663, i64 0}
!1673 = !{!1674, !1674, i64 0}
!1674 = !{!"000001F2833A11E0.w8.b24", !1672, i64 0}
!1675 = !{!1676, !1676, i64 0}
!1676 = !{!"000001F2833A11E0.w8.b32", !1677, i64 0}
!1677 = !{!"000001F2833A11E0.w16.b32", !1678, i64 0}
!1678 = !{!"000001F2833A11E0.w32.b32", !1664, i64 0}
!1679 = !{!1680, !1680, i64 0}
!1680 = !{!"000001F2833A48A0.w8.b0", !1681, i64 0}
!1681 = !{!"000001F2833A48A0.w16.b0", !1682, i64 0}
!1682 = !{!"000001F2833A48A0.w32.b0", !1683, i64 0}
!1683 = !{!"000001F2833A48A0.w64.b0", !1684, i64 0}
!1684 = !{!"000001F2833A48A0.w128.b0", !1685, i64 0}
!1685 = !{!"000001F2833A48A0.w256.b0", !1686, i64 0}
!1686 = !{!"000001F2833A48A0.w512.b0", !1687, i64 0}
!1687 = !{!"000001F2833A48A0.w1024.b0", !1688, i64 0}
!1688 = !{!"000001F2833A48A0", !21, i64 0}
!1689 = !{!1690, !1690, i64 0}
!1690 = !{!"000001F2833A48A0.w8.b8", !1681, i64 0}
!1691 = !{!1692, !1692, i64 0}
!1692 = !{!"000001F2833A48A0.w8.b16", !1693, i64 0}
!1693 = !{!"000001F2833A48A0.w16.b16", !1682, i64 0}
!1694 = !{!1695, !1695, i64 0}
!1695 = !{!"000001F2833A48A0.w8.b24", !1693, i64 0}
!1696 = !{!1697, !1697, i64 0}
!1697 = !{!"000001F2833A48A0.w8.b32", !1698, i64 0}
!1698 = !{!"000001F2833A48A0.w16.b32", !1699, i64 0}
!1699 = !{!"000001F2833A48A0.w32.b32", !1683, i64 0}
!1700 = !{!1701, !1701, i64 0}
!1701 = !{!"000001F2833A4FE0.w8.b16", !1702, i64 0}
!1702 = !{!"000001F2833A4FE0.w16.b16", !1703, i64 0}
!1703 = !{!"000001F2833A4FE0.w32.b0", !1704, i64 0}
!1704 = !{!"000001F2833A4FE0.w64.b0", !1705, i64 0}
!1705 = !{!"000001F2833A4FE0.w128.b0", !1706, i64 0}
!1706 = !{!"000001F2833A4FE0.w256.b0", !1707, i64 0}
!1707 = !{!"000001F2833A4FE0.w512.b0", !1708, i64 0}
!1708 = !{!"000001F2833A4FE0.w1024.b0", !1709, i64 0}
!1709 = !{!"000001F2833A4FE0", !21, i64 0}
!1710 = !{!1711, !1711, i64 0}
!1711 = !{!"000001F2833A4FE0.w8.b24", !1702, i64 0}
!1712 = !{!1713, !1713, i64 0}
!1713 = !{!"000001F2833A4FE0.w8.b32", !1714, i64 0}
!1714 = !{!"000001F2833A4FE0.w16.b32", !1715, i64 0}
!1715 = !{!"000001F2833A4FE0.w32.b32", !1704, i64 0}
!1716 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1717)
!1717 = !{!1718, !1719, !1720, !1721, !1722, !1723}
!1718 = !DILocalVariable(name: "arg1", arg: 1, scope: !1716, file: !1, type: !8)
!1719 = !DILocalVariable(name: "arg2", arg: 2, scope: !1716, file: !1, type: !9)
!1720 = !DILocalVariable(name: "arg3", arg: 3, scope: !1716, file: !1, type: !7)
!1721 = !DILocalVariable(name: "arg4", arg: 4, scope: !1716, file: !1, type: !8)
!1722 = !DILocalVariable(name: "arg5", arg: 5, scope: !1716, file: !1, type: !9)
!1723 = !DILocalVariable(name: "arg6", arg: 6, scope: !1716, file: !1, type: !8)
!1724 = !DILocation(line: 0, scope: !1716)
!1725 = !{!1726, !1726, i64 0}
!1726 = !{!"000001F2FC559800.w4.b0", !1727, i64 0}
!1727 = !{!"000001F2FC559800.w8.b0", !1728, i64 0}
!1728 = !{!"000001F2FC559800.w16.b0", !1729, i64 0}
!1729 = !{!"000001F2FC559800.w32.b0", !1730, i64 0}
!1730 = !{!"000001F2FC559800.w64.b0", !1731, i64 0}
!1731 = !{!"000001F2FC559800.w128.b0", !1732, i64 0}
!1732 = !{!"000001F2FC559800.w256.b0", !1733, i64 0}
!1733 = !{!"000001F2FC559800.w512.b0", !1734, i64 0}
!1734 = !{!"000001F2FC559800.w1024.b0", !1735, i64 0}
!1735 = !{!"000001F2FC559800", !21, i64 0}
!1736 = !{!1737, !1737, i64 0}
!1737 = !{!"000001F2FC559800.w4.b4", !1727, i64 0}
!1738 = !{!1739, !1739, i64 0}
!1739 = !{!"000001F2FC55C540.w8.b0", !1740, i64 0}
!1740 = !{!"000001F2FC55C540.w16.b0", !1741, i64 0}
!1741 = !{!"000001F2FC55C540.w32.b0", !1742, i64 0}
!1742 = !{!"000001F2FC55C540.w64.b0", !1743, i64 0}
!1743 = !{!"000001F2FC55C540.w128.b0", !1744, i64 0}
!1744 = !{!"000001F2FC55C540.w256.b0", !1745, i64 0}
!1745 = !{!"000001F2FC55C540.w512.b0", !1746, i64 0}
!1746 = !{!"000001F2FC55C540.w1024.b0", !1747, i64 0}
!1747 = !{!"000001F2FC55C540", !21, i64 0}
!1748 = !{!1749, !1749, i64 0}
!1749 = !{!"000001F2FC55C540.w8.b8", !1740, i64 0}
!1750 = !{!1751, !1751, i64 0}
!1751 = !{!"000001F2FC55C540.w8.b16", !1752, i64 0}
!1752 = !{!"000001F2FC55C540.w16.b16", !1741, i64 0}
!1753 = !{!1754, !1754, i64 0}
!1754 = !{!"000001F2FC55C540.w8.b24", !1752, i64 0}
!1755 = !{!1756, !1756, i64 0}
!1756 = !{!"000001F2FC55C540.w8.b32", !1757, i64 0}
!1757 = !{!"000001F2FC55C540.w16.b32", !1758, i64 0}
!1758 = !{!"000001F2FC55C540.w32.b32", !1742, i64 0}
!1759 = !{!1760, !1760, i64 0}
!1760 = !{!"000001F2FC55E0C0.w8.b8", !1761, i64 0}
!1761 = !{!"000001F2FC55E0C0.w16.b0", !1762, i64 0}
!1762 = !{!"000001F2FC55E0C0.w32.b0", !1763, i64 0}
!1763 = !{!"000001F2FC55E0C0.w64.b0", !1764, i64 0}
!1764 = !{!"000001F2FC55E0C0.w128.b0", !1765, i64 0}
!1765 = !{!"000001F2FC55E0C0.w256.b0", !1766, i64 0}
!1766 = !{!"000001F2FC55E0C0.w512.b0", !1767, i64 0}
!1767 = !{!"000001F2FC55E0C0.w1024.b0", !1768, i64 0}
!1768 = !{!"000001F2FC55E0C0", !21, i64 0}
!1769 = !{!1770, !1770, i64 0}
!1770 = !{!"000001F2FC55E0C0.w8.b16", !1771, i64 0}
!1771 = !{!"000001F2FC55E0C0.w16.b16", !1762, i64 0}
!1772 = !{!1773, !1773, i64 0}
!1773 = !{!"000001F2FC55E0C0.w8.b24", !1771, i64 0}
!1774 = !{!1775, !1775, i64 0}
!1775 = !{!"000001F2FC55E0C0.w8.b32", !1776, i64 0}
!1776 = !{!"000001F2FC55E0C0.w16.b32", !1777, i64 0}
!1777 = !{!"000001F2FC55E0C0.w32.b32", !1763, i64 0}
!1778 = !{!1779, !1779, i64 0}
!1779 = !{!"000001F2FC55FEC0.w8.b0", !1780, i64 0}
!1780 = !{!"000001F2FC55FEC0.w16.b0", !1781, i64 0}
!1781 = !{!"000001F2FC55FEC0.w32.b0", !1782, i64 0}
!1782 = !{!"000001F2FC55FEC0.w64.b0", !1783, i64 0}
!1783 = !{!"000001F2FC55FEC0.w128.b0", !1784, i64 0}
!1784 = !{!"000001F2FC55FEC0.w256.b0", !1785, i64 0}
!1785 = !{!"000001F2FC55FEC0.w512.b0", !1786, i64 0}
!1786 = !{!"000001F2FC55FEC0.w1024.b0", !1787, i64 0}
!1787 = !{!"000001F2FC55FEC0", !21, i64 0}
!1788 = !{!1789, !1789, i64 0}
!1789 = !{!"000001F2FC55FEC0.w8.b8", !1780, i64 0}
!1790 = !{!1791, !1791, i64 0}
!1791 = !{!"000001F2FC55FEC0.w8.b16", !1792, i64 0}
!1792 = !{!"000001F2FC55FEC0.w16.b16", !1781, i64 0}
!1793 = !{!1794, !1794, i64 0}
!1794 = !{!"000001F2FC55FEC0.w8.b24", !1792, i64 0}
!1795 = !{!1796, !1796, i64 0}
!1796 = !{!"000001F2FC55FEC0.w8.b32", !1797, i64 0}
!1797 = !{!"000001F2FC55FEC0.w16.b32", !1798, i64 0}
!1798 = !{!"000001F2FC55FEC0.w32.b32", !1782, i64 0}
!1799 = !{!1800, !1800, i64 0}
!1800 = !{!"000001F2FC55FAC0.w8.b8", !1801, i64 0}
!1801 = !{!"000001F2FC55FAC0.w16.b0", !1802, i64 0}
!1802 = !{!"000001F2FC55FAC0.w32.b0", !1803, i64 0}
!1803 = !{!"000001F2FC55FAC0.w64.b0", !1804, i64 0}
!1804 = !{!"000001F2FC55FAC0.w128.b0", !1805, i64 0}
!1805 = !{!"000001F2FC55FAC0.w256.b0", !1806, i64 0}
!1806 = !{!"000001F2FC55FAC0.w512.b0", !1807, i64 0}
!1807 = !{!"000001F2FC55FAC0.w1024.b0", !1808, i64 0}
!1808 = !{!"000001F2FC55FAC0", !21, i64 0}
!1809 = !{!1810, !1810, i64 0}
!1810 = !{!"000001F2FC55FAC0.w8.b16", !1811, i64 0}
!1811 = !{!"000001F2FC55FAC0.w16.b16", !1802, i64 0}
!1812 = !{!1813, !1813, i64 0}
!1813 = !{!"000001F2FC55FAC0.w8.b24", !1811, i64 0}
!1814 = !{!1815, !1815, i64 0}
!1815 = !{!"000001F2FC55FAC0.w8.b32", !1816, i64 0}
!1816 = !{!"000001F2FC55FAC0.w16.b32", !1817, i64 0}
!1817 = !{!"000001F2FC55FAC0.w32.b32", !1803, i64 0}
!1818 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1819)
!1819 = !{!1820, !1821, !1822, !1823, !1824, !1825}
!1820 = !DILocalVariable(name: "arg1", arg: 1, scope: !1818, file: !1, type: !8)
!1821 = !DILocalVariable(name: "arg2", arg: 2, scope: !1818, file: !1, type: !9)
!1822 = !DILocalVariable(name: "arg3", arg: 3, scope: !1818, file: !1, type: !7)
!1823 = !DILocalVariable(name: "arg4", arg: 4, scope: !1818, file: !1, type: !8)
!1824 = !DILocalVariable(name: "arg5", arg: 5, scope: !1818, file: !1, type: !9)
!1825 = !DILocalVariable(name: "arg6", arg: 6, scope: !1818, file: !1, type: !8)
!1826 = !DILocation(line: 0, scope: !1818)
!1827 = !{!1828, !1828, i64 0}
!1828 = !{!"000001F283313350.w4.b0", !1829, i64 0}
!1829 = !{!"000001F283313350.w8.b0", !1830, i64 0}
!1830 = !{!"000001F283313350.w16.b0", !1831, i64 0}
!1831 = !{!"000001F283313350.w32.b0", !1832, i64 0}
!1832 = !{!"000001F283313350.w64.b0", !1833, i64 0}
!1833 = !{!"000001F283313350.w128.b0", !1834, i64 0}
!1834 = !{!"000001F283313350.w256.b0", !1835, i64 0}
!1835 = !{!"000001F283313350.w512.b0", !1836, i64 0}
!1836 = !{!"000001F283313350.w1024.b0", !1837, i64 0}
!1837 = !{!"000001F283313350", !21, i64 0}
!1838 = !{!1839, !1839, i64 0}
!1839 = !{!"000001F283313350.w4.b4", !1829, i64 0}
!1840 = !{!1841, !1841, i64 0}
!1841 = !{!"000001F283317F10.w8.b0", !1842, i64 0}
!1842 = !{!"000001F283317F10.w16.b0", !1843, i64 0}
!1843 = !{!"000001F283317F10.w32.b0", !1844, i64 0}
!1844 = !{!"000001F283317F10.w64.b0", !1845, i64 0}
!1845 = !{!"000001F283317F10.w128.b0", !1846, i64 0}
!1846 = !{!"000001F283317F10.w256.b0", !1847, i64 0}
!1847 = !{!"000001F283317F10.w512.b0", !1848, i64 0}
!1848 = !{!"000001F283317F10.w1024.b0", !1849, i64 0}
!1849 = !{!"000001F283317F10", !21, i64 0}
!1850 = !{!1851, !1851, i64 0}
!1851 = !{!"000001F283317F10.w8.b8", !1842, i64 0}
!1852 = !{!1853, !1853, i64 0}
!1853 = !{!"000001F283317F10.w8.b16", !1854, i64 0}
!1854 = !{!"000001F283317F10.w16.b16", !1843, i64 0}
!1855 = !{!1856, !1856, i64 0}
!1856 = !{!"000001F283317F10.w8.b24", !1854, i64 0}
!1857 = !{!1858, !1858, i64 0}
!1858 = !{!"000001F283317F10.w8.b32", !1859, i64 0}
!1859 = !{!"000001F283317F10.w16.b32", !1860, i64 0}
!1860 = !{!"000001F283317F10.w32.b32", !1844, i64 0}
!1861 = !{!1862, !1862, i64 0}
!1862 = !{!"000001F2833174D0.w8.b8", !1863, i64 0}
!1863 = !{!"000001F2833174D0.w16.b0", !1864, i64 0}
!1864 = !{!"000001F2833174D0.w32.b0", !1865, i64 0}
!1865 = !{!"000001F2833174D0.w64.b0", !1866, i64 0}
!1866 = !{!"000001F2833174D0.w128.b0", !1867, i64 0}
!1867 = !{!"000001F2833174D0.w256.b0", !1868, i64 0}
!1868 = !{!"000001F2833174D0.w512.b0", !1869, i64 0}
!1869 = !{!"000001F2833174D0.w1024.b0", !1870, i64 0}
!1870 = !{!"000001F2833174D0", !21, i64 0}
!1871 = !{!1872, !1872, i64 0}
!1872 = !{!"000001F2833174D0.w8.b16", !1873, i64 0}
!1873 = !{!"000001F2833174D0.w16.b16", !1864, i64 0}
!1874 = !{!1875, !1875, i64 0}
!1875 = !{!"000001F2833174D0.w8.b24", !1873, i64 0}
!1876 = !{!1877, !1877, i64 0}
!1877 = !{!"000001F2833174D0.w8.b32", !1878, i64 0}
!1878 = !{!"000001F2833174D0.w16.b32", !1879, i64 0}
!1879 = !{!"000001F2833174D0.w32.b32", !1865, i64 0}
!1880 = !{!1881, !1881, i64 0}
!1881 = !{!"000001F283318ED0.w8.b0", !1882, i64 0}
!1882 = !{!"000001F283318ED0.w16.b0", !1883, i64 0}
!1883 = !{!"000001F283318ED0.w32.b0", !1884, i64 0}
!1884 = !{!"000001F283318ED0.w64.b0", !1885, i64 0}
!1885 = !{!"000001F283318ED0.w128.b0", !1886, i64 0}
!1886 = !{!"000001F283318ED0.w256.b0", !1887, i64 0}
!1887 = !{!"000001F283318ED0.w512.b0", !1888, i64 0}
!1888 = !{!"000001F283318ED0.w1024.b0", !1889, i64 0}
!1889 = !{!"000001F283318ED0", !21, i64 0}
!1890 = !{!1891, !1891, i64 0}
!1891 = !{!"000001F283318ED0.w8.b8", !1882, i64 0}
!1892 = !{!1893, !1893, i64 0}
!1893 = !{!"000001F283318ED0.w8.b16", !1894, i64 0}
!1894 = !{!"000001F283318ED0.w16.b16", !1883, i64 0}
!1895 = !{!1896, !1896, i64 0}
!1896 = !{!"000001F283318ED0.w8.b24", !1894, i64 0}
!1897 = !{!1898, !1898, i64 0}
!1898 = !{!"000001F283318ED0.w8.b32", !1899, i64 0}
!1899 = !{!"000001F283318ED0.w16.b32", !1900, i64 0}
!1900 = !{!"000001F283318ED0.w32.b32", !1884, i64 0}
!1901 = !{!1902, !1902, i64 0}
!1902 = !{!"000001F2833187D0.w8.b8", !1903, i64 0}
!1903 = !{!"000001F2833187D0.w16.b0", !1904, i64 0}
!1904 = !{!"000001F2833187D0.w32.b0", !1905, i64 0}
!1905 = !{!"000001F2833187D0.w64.b0", !1906, i64 0}
!1906 = !{!"000001F2833187D0.w128.b0", !1907, i64 0}
!1907 = !{!"000001F2833187D0.w256.b0", !1908, i64 0}
!1908 = !{!"000001F2833187D0.w512.b0", !1909, i64 0}
!1909 = !{!"000001F2833187D0.w1024.b0", !1910, i64 0}
!1910 = !{!"000001F2833187D0", !21, i64 0}
!1911 = !{!1912, !1912, i64 0}
!1912 = !{!"000001F2833187D0.w8.b16", !1913, i64 0}
!1913 = !{!"000001F2833187D0.w16.b16", !1904, i64 0}
!1914 = !{!1915, !1915, i64 0}
!1915 = !{!"000001F2833187D0.w8.b24", !1913, i64 0}
!1916 = !{!1917, !1917, i64 0}
!1917 = !{!"000001F2833187D0.w8.b32", !1918, i64 0}
!1918 = !{!"000001F2833187D0.w16.b32", !1919, i64 0}
!1919 = !{!"000001F2833187D0.w32.b32", !1905, i64 0}
!1920 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1921)
!1921 = !{!1922, !1923, !1924, !1925, !1926, !1927}
!1922 = !DILocalVariable(name: "arg1", arg: 1, scope: !1920, file: !1, type: !8)
!1923 = !DILocalVariable(name: "arg2", arg: 2, scope: !1920, file: !1, type: !9)
!1924 = !DILocalVariable(name: "arg3", arg: 3, scope: !1920, file: !1, type: !7)
!1925 = !DILocalVariable(name: "arg4", arg: 4, scope: !1920, file: !1, type: !8)
!1926 = !DILocalVariable(name: "arg5", arg: 5, scope: !1920, file: !1, type: !9)
!1927 = !DILocalVariable(name: "arg6", arg: 6, scope: !1920, file: !1, type: !8)
!1928 = !DILocation(line: 0, scope: !1920)
!1929 = !{!1930, !1930, i64 0}
!1930 = !{!"000001F283436F60.w4.b0", !1931, i64 0}
!1931 = !{!"000001F283436F60.w8.b0", !1932, i64 0}
!1932 = !{!"000001F283436F60.w16.b0", !1933, i64 0}
!1933 = !{!"000001F283436F60.w32.b0", !1934, i64 0}
!1934 = !{!"000001F283436F60.w64.b0", !1935, i64 0}
!1935 = !{!"000001F283436F60.w128.b0", !1936, i64 0}
!1936 = !{!"000001F283436F60.w256.b0", !1937, i64 0}
!1937 = !{!"000001F283436F60.w512.b0", !1938, i64 0}
!1938 = !{!"000001F283436F60.w1024.b0", !1939, i64 0}
!1939 = !{!"000001F283436F60", !21, i64 0}
!1940 = !{!1941, !1941, i64 0}
!1941 = !{!"000001F283436F60.w4.b4", !1931, i64 0}
!1942 = !{!1943, !1943, i64 0}
!1943 = !{!"000001F2834388E0.w8.b0", !1944, i64 0}
!1944 = !{!"000001F2834388E0.w16.b0", !1945, i64 0}
!1945 = !{!"000001F2834388E0.w32.b0", !1946, i64 0}
!1946 = !{!"000001F2834388E0.w64.b0", !1947, i64 0}
!1947 = !{!"000001F2834388E0.w128.b0", !1948, i64 0}
!1948 = !{!"000001F2834388E0.w256.b0", !1949, i64 0}
!1949 = !{!"000001F2834388E0.w512.b0", !1950, i64 0}
!1950 = !{!"000001F2834388E0.w1024.b0", !1951, i64 0}
!1951 = !{!"000001F2834388E0", !21, i64 0}
!1952 = !{!1953, !1953, i64 0}
!1953 = !{!"000001F2834388E0.w8.b8", !1944, i64 0}
!1954 = !{!1955, !1955, i64 0}
!1955 = !{!"000001F2834388E0.w8.b16", !1956, i64 0}
!1956 = !{!"000001F2834388E0.w16.b16", !1945, i64 0}
!1957 = !{!1958, !1958, i64 0}
!1958 = !{!"000001F2834388E0.w8.b24", !1956, i64 0}
!1959 = !{!1960, !1960, i64 0}
!1960 = !{!"000001F2834388E0.w8.b32", !1961, i64 0}
!1961 = !{!"000001F2834388E0.w16.b32", !1962, i64 0}
!1962 = !{!"000001F2834388E0.w32.b32", !1946, i64 0}
!1963 = !{!1964, !1964, i64 0}
!1964 = !{!"000001F28343A020.w8.b8", !1965, i64 0}
!1965 = !{!"000001F28343A020.w16.b0", !1966, i64 0}
!1966 = !{!"000001F28343A020.w32.b0", !1967, i64 0}
!1967 = !{!"000001F28343A020.w64.b0", !1968, i64 0}
!1968 = !{!"000001F28343A020.w128.b0", !1969, i64 0}
!1969 = !{!"000001F28343A020.w256.b0", !1970, i64 0}
!1970 = !{!"000001F28343A020.w512.b0", !1971, i64 0}
!1971 = !{!"000001F28343A020.w1024.b0", !1972, i64 0}
!1972 = !{!"000001F28343A020", !21, i64 0}
!1973 = !{!1974, !1974, i64 0}
!1974 = !{!"000001F28343A020.w8.b16", !1975, i64 0}
!1975 = !{!"000001F28343A020.w16.b16", !1966, i64 0}
!1976 = !{!1977, !1977, i64 0}
!1977 = !{!"000001F28343A020.w8.b24", !1975, i64 0}
!1978 = !{!1979, !1979, i64 0}
!1979 = !{!"000001F28343A020.w8.b32", !1980, i64 0}
!1980 = !{!"000001F28343A020.w16.b32", !1981, i64 0}
!1981 = !{!"000001F28343A020.w32.b32", !1967, i64 0}
!1982 = !{!1983, !1983, i64 0}
!1983 = !{!"000001F28343CCA0.w8.b0", !1984, i64 0}
!1984 = !{!"000001F28343CCA0.w16.b0", !1985, i64 0}
!1985 = !{!"000001F28343CCA0.w32.b0", !1986, i64 0}
!1986 = !{!"000001F28343CCA0.w64.b0", !1987, i64 0}
!1987 = !{!"000001F28343CCA0.w128.b0", !1988, i64 0}
!1988 = !{!"000001F28343CCA0.w256.b0", !1989, i64 0}
!1989 = !{!"000001F28343CCA0.w512.b0", !1990, i64 0}
!1990 = !{!"000001F28343CCA0.w1024.b0", !1991, i64 0}
!1991 = !{!"000001F28343CCA0", !21, i64 0}
!1992 = !{!1993, !1993, i64 0}
!1993 = !{!"000001F28343CCA0.w8.b8", !1984, i64 0}
!1994 = !{!1995, !1995, i64 0}
!1995 = !{!"000001F28343CCA0.w8.b16", !1996, i64 0}
!1996 = !{!"000001F28343CCA0.w16.b16", !1985, i64 0}
!1997 = !{!1998, !1998, i64 0}
!1998 = !{!"000001F28343CCA0.w8.b24", !1996, i64 0}
!1999 = !{!2000, !2000, i64 0}
!2000 = !{!"000001F28343CCA0.w8.b32", !2001, i64 0}
!2001 = !{!"000001F28343CCA0.w16.b32", !2002, i64 0}
!2002 = !{!"000001F28343CCA0.w32.b32", !1986, i64 0}
!2003 = !{!2004, !2004, i64 0}
!2004 = !{!"000001F28343CFA0.w8.b16", !2005, i64 0}
!2005 = !{!"000001F28343CFA0.w16.b16", !2006, i64 0}
!2006 = !{!"000001F28343CFA0.w32.b0", !2007, i64 0}
!2007 = !{!"000001F28343CFA0.w64.b0", !2008, i64 0}
!2008 = !{!"000001F28343CFA0.w128.b0", !2009, i64 0}
!2009 = !{!"000001F28343CFA0.w256.b0", !2010, i64 0}
!2010 = !{!"000001F28343CFA0.w512.b0", !2011, i64 0}
!2011 = !{!"000001F28343CFA0.w1024.b0", !2012, i64 0}
!2012 = !{!"000001F28343CFA0", !21, i64 0}
!2013 = !{!2014, !2014, i64 0}
!2014 = !{!"000001F28343CFA0.w8.b24", !2005, i64 0}
!2015 = !{!2016, !2016, i64 0}
!2016 = !{!"000001F28343CFA0.w8.b32", !2017, i64 0}
!2017 = !{!"000001F28343CFA0.w16.b32", !2018, i64 0}
!2018 = !{!"000001F28343CFA0.w32.b32", !2007, i64 0}
!2019 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2020)
!2020 = !{!2021, !2022, !2023, !2024, !2025, !2026}
!2021 = !DILocalVariable(name: "arg1", arg: 1, scope: !2019, file: !1, type: !8)
!2022 = !DILocalVariable(name: "arg2", arg: 2, scope: !2019, file: !1, type: !9)
!2023 = !DILocalVariable(name: "arg3", arg: 3, scope: !2019, file: !1, type: !7)
!2024 = !DILocalVariable(name: "arg4", arg: 4, scope: !2019, file: !1, type: !8)
!2025 = !DILocalVariable(name: "arg5", arg: 5, scope: !2019, file: !1, type: !9)
!2026 = !DILocalVariable(name: "arg6", arg: 6, scope: !2019, file: !1, type: !8)
!2027 = !DILocation(line: 0, scope: !2019)
!2028 = !{!2029, !2029, i64 0}
!2029 = !{!"000001F283309410.w4.b0", !2030, i64 0}
!2030 = !{!"000001F283309410.w8.b0", !2031, i64 0}
!2031 = !{!"000001F283309410.w16.b0", !2032, i64 0}
!2032 = !{!"000001F283309410.w32.b0", !2033, i64 0}
!2033 = !{!"000001F283309410.w64.b0", !2034, i64 0}
!2034 = !{!"000001F283309410.w128.b0", !2035, i64 0}
!2035 = !{!"000001F283309410.w256.b0", !2036, i64 0}
!2036 = !{!"000001F283309410.w512.b0", !2037, i64 0}
!2037 = !{!"000001F283309410.w1024.b0", !2038, i64 0}
!2038 = !{!"000001F283309410", !21, i64 0}
!2039 = !{!2040, !2040, i64 0}
!2040 = !{!"000001F283309410.w4.b4", !2030, i64 0}
!2041 = !{!2042, !2042, i64 0}
!2042 = !{!"000001F28330DF10.w8.b0", !2043, i64 0}
!2043 = !{!"000001F28330DF10.w16.b0", !2044, i64 0}
!2044 = !{!"000001F28330DF10.w32.b0", !2045, i64 0}
!2045 = !{!"000001F28330DF10.w64.b0", !2046, i64 0}
!2046 = !{!"000001F28330DF10.w128.b0", !2047, i64 0}
!2047 = !{!"000001F28330DF10.w256.b0", !2048, i64 0}
!2048 = !{!"000001F28330DF10.w512.b0", !2049, i64 0}
!2049 = !{!"000001F28330DF10.w1024.b0", !2050, i64 0}
!2050 = !{!"000001F28330DF10", !21, i64 0}
!2051 = !{!2052, !2052, i64 0}
!2052 = !{!"000001F28330DF10.w8.b8", !2043, i64 0}
!2053 = !{!2054, !2054, i64 0}
!2054 = !{!"000001F28330DF10.w8.b16", !2055, i64 0}
!2055 = !{!"000001F28330DF10.w16.b16", !2044, i64 0}
!2056 = !{!2057, !2057, i64 0}
!2057 = !{!"000001F28330DF10.w8.b24", !2055, i64 0}
!2058 = !{!2059, !2059, i64 0}
!2059 = !{!"000001F28330DF10.w8.b32", !2060, i64 0}
!2060 = !{!"000001F28330DF10.w16.b32", !2061, i64 0}
!2061 = !{!"000001F28330DF10.w32.b32", !2045, i64 0}
!2062 = !{!2063, !2063, i64 0}
!2063 = !{!"000001F28330EB90.w8.b8", !2064, i64 0}
!2064 = !{!"000001F28330EB90.w16.b0", !2065, i64 0}
!2065 = !{!"000001F28330EB90.w32.b0", !2066, i64 0}
!2066 = !{!"000001F28330EB90.w64.b0", !2067, i64 0}
!2067 = !{!"000001F28330EB90.w128.b0", !2068, i64 0}
!2068 = !{!"000001F28330EB90.w256.b0", !2069, i64 0}
!2069 = !{!"000001F28330EB90.w512.b0", !2070, i64 0}
!2070 = !{!"000001F28330EB90.w1024.b0", !2071, i64 0}
!2071 = !{!"000001F28330EB90", !21, i64 0}
!2072 = !{!2073, !2073, i64 0}
!2073 = !{!"000001F28330EB90.w8.b16", !2074, i64 0}
!2074 = !{!"000001F28330EB90.w16.b16", !2065, i64 0}
!2075 = !{!2076, !2076, i64 0}
!2076 = !{!"000001F28330EB90.w8.b24", !2074, i64 0}
!2077 = !{!2078, !2078, i64 0}
!2078 = !{!"000001F28330EB90.w8.b32", !2079, i64 0}
!2079 = !{!"000001F28330EB90.w16.b32", !2080, i64 0}
!2080 = !{!"000001F28330EB90.w32.b32", !2066, i64 0}
!2081 = !{!2082, !2082, i64 0}
!2082 = !{!"000001F283311510.w8.b0", !2083, i64 0}
!2083 = !{!"000001F283311510.w16.b0", !2084, i64 0}
!2084 = !{!"000001F283311510.w32.b0", !2085, i64 0}
!2085 = !{!"000001F283311510.w64.b0", !2086, i64 0}
!2086 = !{!"000001F283311510.w128.b0", !2087, i64 0}
!2087 = !{!"000001F283311510.w256.b0", !2088, i64 0}
!2088 = !{!"000001F283311510.w512.b0", !2089, i64 0}
!2089 = !{!"000001F283311510.w1024.b0", !2090, i64 0}
!2090 = !{!"000001F283311510", !21, i64 0}
!2091 = !{!2092, !2092, i64 0}
!2092 = !{!"000001F283311510.w8.b8", !2083, i64 0}
!2093 = !{!2094, !2094, i64 0}
!2094 = !{!"000001F283311510.w8.b16", !2095, i64 0}
!2095 = !{!"000001F283311510.w16.b16", !2084, i64 0}
!2096 = !{!2097, !2097, i64 0}
!2097 = !{!"000001F283311510.w8.b24", !2095, i64 0}
!2098 = !{!2099, !2099, i64 0}
!2099 = !{!"000001F283311510.w8.b32", !2100, i64 0}
!2100 = !{!"000001F283311510.w16.b32", !2101, i64 0}
!2101 = !{!"000001F283311510.w32.b32", !2085, i64 0}
!2102 = !{!2103, !2103, i64 0}
!2103 = !{!"000001F2833112D0.w8.b16", !2104, i64 0}
!2104 = !{!"000001F2833112D0.w16.b16", !2105, i64 0}
!2105 = !{!"000001F2833112D0.w32.b0", !2106, i64 0}
!2106 = !{!"000001F2833112D0.w64.b0", !2107, i64 0}
!2107 = !{!"000001F2833112D0.w128.b0", !2108, i64 0}
!2108 = !{!"000001F2833112D0.w256.b0", !2109, i64 0}
!2109 = !{!"000001F2833112D0.w512.b0", !2110, i64 0}
!2110 = !{!"000001F2833112D0.w1024.b0", !2111, i64 0}
!2111 = !{!"000001F2833112D0", !21, i64 0}
!2112 = !{!2113, !2113, i64 0}
!2113 = !{!"000001F2833112D0.w8.b24", !2104, i64 0}
!2114 = !{!2115, !2115, i64 0}
!2115 = !{!"000001F2833112D0.w8.b32", !2116, i64 0}
!2116 = !{!"000001F2833112D0.w16.b32", !2117, i64 0}
!2117 = !{!"000001F2833112D0.w32.b32", !2106, i64 0}
!2118 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2119)
!2119 = !{!2120, !2121, !2122, !2123, !2124, !2125}
!2120 = !DILocalVariable(name: "arg1", arg: 1, scope: !2118, file: !1, type: !8)
!2121 = !DILocalVariable(name: "arg2", arg: 2, scope: !2118, file: !1, type: !9)
!2122 = !DILocalVariable(name: "arg3", arg: 3, scope: !2118, file: !1, type: !7)
!2123 = !DILocalVariable(name: "arg4", arg: 4, scope: !2118, file: !1, type: !8)
!2124 = !DILocalVariable(name: "arg5", arg: 5, scope: !2118, file: !1, type: !9)
!2125 = !DILocalVariable(name: "arg6", arg: 6, scope: !2118, file: !1, type: !8)
!2126 = !DILocation(line: 0, scope: !2118)
!2127 = !{!2128, !2128, i64 0}
!2128 = !{!"000001F283352CB0.w4.b0", !2129, i64 0}
!2129 = !{!"000001F283352CB0.w8.b0", !2130, i64 0}
!2130 = !{!"000001F283352CB0.w16.b0", !2131, i64 0}
!2131 = !{!"000001F283352CB0.w32.b0", !2132, i64 0}
!2132 = !{!"000001F283352CB0.w64.b0", !2133, i64 0}
!2133 = !{!"000001F283352CB0.w128.b0", !2134, i64 0}
!2134 = !{!"000001F283352CB0.w256.b0", !2135, i64 0}
!2135 = !{!"000001F283352CB0.w512.b0", !2136, i64 0}
!2136 = !{!"000001F283352CB0.w1024.b0", !2137, i64 0}
!2137 = !{!"000001F283352CB0", !21, i64 0}
!2138 = !{!2139, !2139, i64 0}
!2139 = !{!"000001F283352CB0.w4.b4", !2129, i64 0}
!2140 = !{!2141, !2141, i64 0}
!2141 = !{!"000001F28335C3B0.w8.b0", !2142, i64 0}
!2142 = !{!"000001F28335C3B0.w16.b0", !2143, i64 0}
!2143 = !{!"000001F28335C3B0.w32.b0", !2144, i64 0}
!2144 = !{!"000001F28335C3B0.w64.b0", !2145, i64 0}
!2145 = !{!"000001F28335C3B0.w128.b0", !2146, i64 0}
!2146 = !{!"000001F28335C3B0.w256.b0", !2147, i64 0}
!2147 = !{!"000001F28335C3B0.w512.b0", !2148, i64 0}
!2148 = !{!"000001F28335C3B0.w1024.b0", !2149, i64 0}
!2149 = !{!"000001F28335C3B0", !21, i64 0}
!2150 = !{!2151, !2151, i64 0}
!2151 = !{!"000001F28335C3B0.w8.b8", !2142, i64 0}
!2152 = !{!2153, !2153, i64 0}
!2153 = !{!"000001F28335C3B0.w8.b16", !2154, i64 0}
!2154 = !{!"000001F28335C3B0.w16.b16", !2143, i64 0}
!2155 = !{!2156, !2156, i64 0}
!2156 = !{!"000001F28335C3B0.w8.b24", !2154, i64 0}
!2157 = !{!2158, !2158, i64 0}
!2158 = !{!"000001F28335C3B0.w8.b32", !2159, i64 0}
!2159 = !{!"000001F28335C3B0.w16.b32", !2160, i64 0}
!2160 = !{!"000001F28335C3B0.w32.b32", !2144, i64 0}
!2161 = !{!2162, !2162, i64 0}
!2162 = !{!"000001F28335D0B0.w8.b8", !2163, i64 0}
!2163 = !{!"000001F28335D0B0.w16.b0", !2164, i64 0}
!2164 = !{!"000001F28335D0B0.w32.b0", !2165, i64 0}
!2165 = !{!"000001F28335D0B0.w64.b0", !2166, i64 0}
!2166 = !{!"000001F28335D0B0.w128.b0", !2167, i64 0}
!2167 = !{!"000001F28335D0B0.w256.b0", !2168, i64 0}
!2168 = !{!"000001F28335D0B0.w512.b0", !2169, i64 0}
!2169 = !{!"000001F28335D0B0.w1024.b0", !2170, i64 0}
!2170 = !{!"000001F28335D0B0", !21, i64 0}
!2171 = !{!2172, !2172, i64 0}
!2172 = !{!"000001F28335D0B0.w8.b32", !2173, i64 0}
!2173 = !{!"000001F28335D0B0.w16.b32", !2174, i64 0}
!2174 = !{!"000001F28335D0B0.w32.b32", !2165, i64 0}
!2175 = !{!2176, !2176, i64 0}
!2176 = !{!"000001F28335DC70.w8.b0", !2177, i64 0}
!2177 = !{!"000001F28335DC70.w16.b0", !2178, i64 0}
!2178 = !{!"000001F28335DC70.w32.b0", !2179, i64 0}
!2179 = !{!"000001F28335DC70.w64.b0", !2180, i64 0}
!2180 = !{!"000001F28335DC70.w128.b0", !2181, i64 0}
!2181 = !{!"000001F28335DC70.w256.b0", !2182, i64 0}
!2182 = !{!"000001F28335DC70.w512.b0", !2183, i64 0}
!2183 = !{!"000001F28335DC70.w1024.b0", !2184, i64 0}
!2184 = !{!"000001F28335DC70", !21, i64 0}
!2185 = !{!2186, !2186, i64 0}
!2186 = !{!"000001F28335DC70.w8.b8", !2177, i64 0}
!2187 = !{!2188, !2188, i64 0}
!2188 = !{!"000001F28335DF30.w8.b8", !2189, i64 0}
!2189 = !{!"000001F28335DF30.w16.b0", !2190, i64 0}
!2190 = !{!"000001F28335DF30.w32.b0", !2191, i64 0}
!2191 = !{!"000001F28335DF30.w64.b0", !2192, i64 0}
!2192 = !{!"000001F28335DF30.w128.b0", !2193, i64 0}
!2193 = !{!"000001F28335DF30.w256.b0", !2194, i64 0}
!2194 = !{!"000001F28335DF30.w512.b0", !2195, i64 0}
!2195 = !{!"000001F28335DF30.w1024.b0", !2196, i64 0}
!2196 = !{!"000001F28335DF30", !21, i64 0}
!2197 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2198)
!2198 = !{!2199, !2200, !2201, !2202, !2203, !2204}
!2199 = !DILocalVariable(name: "arg1", arg: 1, scope: !2197, file: !1, type: !8)
!2200 = !DILocalVariable(name: "arg2", arg: 2, scope: !2197, file: !1, type: !9)
!2201 = !DILocalVariable(name: "arg3", arg: 3, scope: !2197, file: !1, type: !7)
!2202 = !DILocalVariable(name: "arg4", arg: 4, scope: !2197, file: !1, type: !8)
!2203 = !DILocalVariable(name: "arg5", arg: 5, scope: !2197, file: !1, type: !9)
!2204 = !DILocalVariable(name: "arg6", arg: 6, scope: !2197, file: !1, type: !8)
!2205 = !DILocation(line: 0, scope: !2197)
!2206 = !{!2207, !2207, i64 0}
!2207 = !{!"000001F2FC575780.w4.b0", !2208, i64 0}
!2208 = !{!"000001F2FC575780.w8.b0", !2209, i64 0}
!2209 = !{!"000001F2FC575780.w16.b0", !2210, i64 0}
!2210 = !{!"000001F2FC575780.w32.b0", !2211, i64 0}
!2211 = !{!"000001F2FC575780.w64.b0", !2212, i64 0}
!2212 = !{!"000001F2FC575780.w128.b0", !2213, i64 0}
!2213 = !{!"000001F2FC575780.w256.b0", !2214, i64 0}
!2214 = !{!"000001F2FC575780.w512.b0", !2215, i64 0}
!2215 = !{!"000001F2FC575780.w1024.b0", !2216, i64 0}
!2216 = !{!"000001F2FC575780", !21, i64 0}
!2217 = !{!2218, !2218, i64 0}
!2218 = !{!"000001F2FC575780.w4.b4", !2208, i64 0}
!2219 = !{!2220, !2220, i64 0}
!2220 = !{!"000001F2EB0F02E0.w8.b0", !2221, i64 0}
!2221 = !{!"000001F2EB0F02E0.w16.b0", !2222, i64 0}
!2222 = !{!"000001F2EB0F02E0.w32.b0", !2223, i64 0}
!2223 = !{!"000001F2EB0F02E0.w64.b0", !2224, i64 0}
!2224 = !{!"000001F2EB0F02E0.w128.b0", !2225, i64 0}
!2225 = !{!"000001F2EB0F02E0.w256.b0", !2226, i64 0}
!2226 = !{!"000001F2EB0F02E0.w512.b0", !2227, i64 0}
!2227 = !{!"000001F2EB0F02E0.w1024.b0", !2228, i64 0}
!2228 = !{!"000001F2EB0F02E0", !21, i64 0}
!2229 = !{!2230, !2230, i64 0}
!2230 = !{!"000001F2EB0F02E0.w8.b8", !2221, i64 0}
!2231 = !{!2232, !2232, i64 0}
!2232 = !{!"000001F2EB0F02E0.w8.b16", !2233, i64 0}
!2233 = !{!"000001F2EB0F02E0.w16.b16", !2222, i64 0}
!2234 = !{!2235, !2235, i64 0}
!2235 = !{!"000001F2EB0F02E0.w8.b24", !2233, i64 0}
!2236 = !{!2237, !2237, i64 0}
!2237 = !{!"000001F2EB0F02E0.w8.b32", !2238, i64 0}
!2238 = !{!"000001F2EB0F02E0.w16.b32", !2239, i64 0}
!2239 = !{!"000001F2EB0F02E0.w32.b32", !2223, i64 0}
!2240 = !{!2241, !2241, i64 0}
!2241 = !{!"000001F2EB0F12E0.w8.b8", !2242, i64 0}
!2242 = !{!"000001F2EB0F12E0.w16.b0", !2243, i64 0}
!2243 = !{!"000001F2EB0F12E0.w32.b0", !2244, i64 0}
!2244 = !{!"000001F2EB0F12E0.w64.b0", !2245, i64 0}
!2245 = !{!"000001F2EB0F12E0.w128.b0", !2246, i64 0}
!2246 = !{!"000001F2EB0F12E0.w256.b0", !2247, i64 0}
!2247 = !{!"000001F2EB0F12E0.w512.b0", !2248, i64 0}
!2248 = !{!"000001F2EB0F12E0.w1024.b0", !2249, i64 0}
!2249 = !{!"000001F2EB0F12E0", !21, i64 0}
!2250 = !{!2251, !2251, i64 0}
!2251 = !{!"000001F2EB0F12E0.w8.b16", !2252, i64 0}
!2252 = !{!"000001F2EB0F12E0.w16.b16", !2243, i64 0}
!2253 = !{!2254, !2254, i64 0}
!2254 = !{!"000001F2EB0F12E0.w8.b24", !2252, i64 0}
!2255 = !{!2256, !2256, i64 0}
!2256 = !{!"000001F2EB0F12E0.w8.b32", !2257, i64 0}
!2257 = !{!"000001F2EB0F12E0.w16.b32", !2258, i64 0}
!2258 = !{!"000001F2EB0F12E0.w32.b32", !2244, i64 0}
!2259 = !{!2260, !2260, i64 0}
!2260 = !{!"000001F2EB0EDC60.w8.b0", !2261, i64 0}
!2261 = !{!"000001F2EB0EDC60.w16.b0", !2262, i64 0}
!2262 = !{!"000001F2EB0EDC60.w32.b0", !2263, i64 0}
!2263 = !{!"000001F2EB0EDC60.w64.b0", !2264, i64 0}
!2264 = !{!"000001F2EB0EDC60.w128.b0", !2265, i64 0}
!2265 = !{!"000001F2EB0EDC60.w256.b0", !2266, i64 0}
!2266 = !{!"000001F2EB0EDC60.w512.b0", !2267, i64 0}
!2267 = !{!"000001F2EB0EDC60.w1024.b0", !2268, i64 0}
!2268 = !{!"000001F2EB0EDC60", !21, i64 0}
!2269 = !{!2270, !2270, i64 0}
!2270 = !{!"000001F2EB0EDC60.w8.b8", !2261, i64 0}
!2271 = !{!2272, !2272, i64 0}
!2272 = !{!"000001F2EB0EDC60.w8.b16", !2273, i64 0}
!2273 = !{!"000001F2EB0EDC60.w16.b16", !2262, i64 0}
!2274 = !{!2275, !2275, i64 0}
!2275 = !{!"000001F2EB0EDC60.w8.b24", !2273, i64 0}
!2276 = !{!2277, !2277, i64 0}
!2277 = !{!"000001F2EB0EDC60.w8.b32", !2278, i64 0}
!2278 = !{!"000001F2EB0EDC60.w16.b32", !2279, i64 0}
!2279 = !{!"000001F2EB0EDC60.w32.b32", !2263, i64 0}
!2280 = !{!2281, !2281, i64 0}
!2281 = !{!"000001F2EAEEA9B0.w8.b8", !2282, i64 0}
!2282 = !{!"000001F2EAEEA9B0.w16.b0", !2283, i64 0}
!2283 = !{!"000001F2EAEEA9B0.w32.b0", !2284, i64 0}
!2284 = !{!"000001F2EAEEA9B0.w64.b0", !2285, i64 0}
!2285 = !{!"000001F2EAEEA9B0.w128.b0", !2286, i64 0}
!2286 = !{!"000001F2EAEEA9B0.w256.b0", !2287, i64 0}
!2287 = !{!"000001F2EAEEA9B0.w512.b0", !2288, i64 0}
!2288 = !{!"000001F2EAEEA9B0.w1024.b0", !2289, i64 0}
!2289 = !{!"000001F2EAEEA9B0", !21, i64 0}
!2290 = !{!2291, !2291, i64 0}
!2291 = !{!"000001F2EAEEA9B0.w8.b32", !2292, i64 0}
!2292 = !{!"000001F2EAEEA9B0.w16.b32", !2293, i64 0}
!2293 = !{!"000001F2EAEEA9B0.w32.b32", !2284, i64 0}
!2294 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2295)
!2295 = !{!2296, !2297, !2298, !2299, !2300, !2301}
!2296 = !DILocalVariable(name: "arg1", arg: 1, scope: !2294, file: !1, type: !8)
!2297 = !DILocalVariable(name: "arg2", arg: 2, scope: !2294, file: !1, type: !9)
!2298 = !DILocalVariable(name: "arg3", arg: 3, scope: !2294, file: !1, type: !7)
!2299 = !DILocalVariable(name: "arg4", arg: 4, scope: !2294, file: !1, type: !8)
!2300 = !DILocalVariable(name: "arg5", arg: 5, scope: !2294, file: !1, type: !9)
!2301 = !DILocalVariable(name: "arg6", arg: 6, scope: !2294, file: !1, type: !8)
!2302 = !DILocation(line: 0, scope: !2294)
!2303 = !{!2304, !2304, i64 0}
!2304 = !{!"000001F283361F30.w4.b0", !2305, i64 0}
!2305 = !{!"000001F283361F30.w8.b0", !2306, i64 0}
!2306 = !{!"000001F283361F30.w16.b0", !2307, i64 0}
!2307 = !{!"000001F283361F30.w32.b0", !2308, i64 0}
!2308 = !{!"000001F283361F30.w64.b0", !2309, i64 0}
!2309 = !{!"000001F283361F30.w128.b0", !2310, i64 0}
!2310 = !{!"000001F283361F30.w256.b0", !2311, i64 0}
!2311 = !{!"000001F283361F30.w512.b0", !2312, i64 0}
!2312 = !{!"000001F283361F30.w1024.b0", !2313, i64 0}
!2313 = !{!"000001F283361F30", !21, i64 0}
!2314 = !{!2315, !2315, i64 0}
!2315 = !{!"000001F283361F30.w4.b4", !2305, i64 0}
!2316 = !{!2317, !2317, i64 0}
!2317 = !{!"000001F283361F30.w4.b8", !2318, i64 0}
!2318 = !{!"000001F283361F30.w8.b8", !2306, i64 0}
!2319 = !{!2320, !2320, i64 0}
!2320 = !{!"000001F283361F30.w4.b12", !2318, i64 0}
!2321 = !{!2322, !2322, i64 0}
!2322 = !{!"000001F283320DD0.w8.b0", !2323, i64 0}
!2323 = !{!"000001F283320DD0.w16.b0", !2324, i64 0}
!2324 = !{!"000001F283320DD0.w32.b0", !2325, i64 0}
!2325 = !{!"000001F283320DD0.w64.b0", !2326, i64 0}
!2326 = !{!"000001F283320DD0.w128.b0", !2327, i64 0}
!2327 = !{!"000001F283320DD0.w256.b0", !2328, i64 0}
!2328 = !{!"000001F283320DD0.w512.b0", !2329, i64 0}
!2329 = !{!"000001F283320DD0.w1024.b0", !2330, i64 0}
!2330 = !{!"000001F283320DD0", !21, i64 0}
!2331 = !{!2332, !2332, i64 0}
!2332 = !{!"000001F283320DD0.w8.b8", !2323, i64 0}
!2333 = !{!2334, !2334, i64 0}
!2334 = !{!"000001F283320DD0.w8.b16", !2335, i64 0}
!2335 = !{!"000001F283320DD0.w16.b16", !2324, i64 0}
!2336 = !{!2337, !2337, i64 0}
!2337 = !{!"000001F283320DD0.w8.b24", !2335, i64 0}
!2338 = !{!2339, !2339, i64 0}
!2339 = !{!"000001F283320DD0.w8.b32", !2340, i64 0}
!2340 = !{!"000001F283320DD0.w16.b32", !2341, i64 0}
!2341 = !{!"000001F283320DD0.w32.b32", !2325, i64 0}
!2342 = !{!2343, !2343, i64 0}
!2343 = !{!"000001F283320810.w8.b8", !2344, i64 0}
!2344 = !{!"000001F283320810.w16.b0", !2345, i64 0}
!2345 = !{!"000001F283320810.w32.b0", !2346, i64 0}
!2346 = !{!"000001F283320810.w64.b0", !2347, i64 0}
!2347 = !{!"000001F283320810.w128.b0", !2348, i64 0}
!2348 = !{!"000001F283320810.w256.b0", !2349, i64 0}
!2349 = !{!"000001F283320810.w512.b0", !2350, i64 0}
!2350 = !{!"000001F283320810.w1024.b0", !2351, i64 0}
!2351 = !{!"000001F283320810", !21, i64 0}
!2352 = !{!2353, !2353, i64 0}
!2353 = !{!"000001F283320810.w8.b16", !2354, i64 0}
!2354 = !{!"000001F283320810.w16.b16", !2345, i64 0}
!2355 = !{!2356, !2356, i64 0}
!2356 = !{!"000001F283320810.w8.b24", !2354, i64 0}
!2357 = !{!2358, !2358, i64 0}
!2358 = !{!"000001F283320810.w8.b32", !2359, i64 0}
!2359 = !{!"000001F283320810.w16.b32", !2360, i64 0}
!2360 = !{!"000001F283320810.w32.b32", !2346, i64 0}
!2361 = !{!2362, !2362, i64 0}
!2362 = !{!"000001F28338A860.w8.b0", !2363, i64 0}
!2363 = !{!"000001F28338A860.w16.b0", !2364, i64 0}
!2364 = !{!"000001F28338A860.w32.b0", !2365, i64 0}
!2365 = !{!"000001F28338A860.w64.b0", !2366, i64 0}
!2366 = !{!"000001F28338A860.w128.b0", !2367, i64 0}
!2367 = !{!"000001F28338A860.w256.b0", !2368, i64 0}
!2368 = !{!"000001F28338A860.w512.b0", !2369, i64 0}
!2369 = !{!"000001F28338A860.w1024.b0", !2370, i64 0}
!2370 = !{!"000001F28338A860", !21, i64 0}
!2371 = !{!2372, !2372, i64 0}
!2372 = !{!"000001F28338A860.w8.b8", !2363, i64 0}
!2373 = !{!2374, !2374, i64 0}
!2374 = !{!"000001F28338A860.w8.b16", !2375, i64 0}
!2375 = !{!"000001F28338A860.w16.b16", !2364, i64 0}
!2376 = !{!2377, !2377, i64 0}
!2377 = !{!"000001F28338A860.w8.b24", !2375, i64 0}
!2378 = !{!2379, !2379, i64 0}
!2379 = !{!"000001F28338A860.w8.b32", !2380, i64 0}
!2380 = !{!"000001F28338A860.w16.b32", !2381, i64 0}
!2381 = !{!"000001F28338A860.w32.b32", !2365, i64 0}
!2382 = !{!2383, !2383, i64 0}
!2383 = !{!"000001F28338A860.w8.b40", !2380, i64 0}
!2384 = !{!2385, !2385, i64 0}
!2385 = !{!"000001F28338A4A0.w8.b0", !2386, i64 0}
!2386 = !{!"000001F28338A4A0.w16.b0", !2387, i64 0}
!2387 = !{!"000001F28338A4A0.w32.b0", !2388, i64 0}
!2388 = !{!"000001F28338A4A0.w64.b0", !2389, i64 0}
!2389 = !{!"000001F28338A4A0.w128.b0", !2390, i64 0}
!2390 = !{!"000001F28338A4A0.w256.b0", !2391, i64 0}
!2391 = !{!"000001F28338A4A0.w512.b0", !2392, i64 0}
!2392 = !{!"000001F28338A4A0.w1024.b0", !2393, i64 0}
!2393 = !{!"000001F28338A4A0", !21, i64 0}
!2394 = !{!2395, !2395, i64 0}
!2395 = !{!"000001F28338A4A0.w8.b8", !2386, i64 0}
!2396 = !{!2397, !2397, i64 0}
!2397 = !{!"000001F28338A4A0.w8.b32", !2398, i64 0}
!2398 = !{!"000001F28338A4A0.w16.b32", !2399, i64 0}
!2399 = !{!"000001F28338A4A0.w32.b32", !2388, i64 0}
!2400 = !{!2401, !2401, i64 0}
!2401 = !{!"000001F28338A4A0.w8.b40", !2398, i64 0}
!2402 = !{!2403, !2403, i64 0}
!2403 = !{!"000001F28338BE20.w8.b0", !2404, i64 0}
!2404 = !{!"000001F28338BE20.w16.b0", !2405, i64 0}
!2405 = !{!"000001F28338BE20.w32.b0", !2406, i64 0}
!2406 = !{!"000001F28338BE20.w64.b0", !2407, i64 0}
!2407 = !{!"000001F28338BE20.w128.b0", !2408, i64 0}
!2408 = !{!"000001F28338BE20.w256.b0", !2409, i64 0}
!2409 = !{!"000001F28338BE20.w512.b0", !2410, i64 0}
!2410 = !{!"000001F28338BE20.w1024.b0", !2411, i64 0}
!2411 = !{!"000001F28338BE20", !21, i64 0}
!2412 = !{!2413, !2413, i64 0}
!2413 = !{!"000001F28338BE20.w8.b8", !2404, i64 0}
!2414 = !{!2415, !2415, i64 0}
!2415 = !{!"000001F28338BE20.w8.b16", !2416, i64 0}
!2416 = !{!"000001F28338BE20.w16.b16", !2405, i64 0}
!2417 = !{!2418, !2418, i64 0}
!2418 = !{!"000001F28338BE20.w8.b24", !2416, i64 0}
!2419 = !{!2420, !2420, i64 0}
!2420 = !{!"000001F28338BE20.w8.b32", !2421, i64 0}
!2421 = !{!"000001F28338BE20.w16.b32", !2422, i64 0}
!2422 = !{!"000001F28338BE20.w32.b32", !2406, i64 0}
!2423 = !{!2424, !2424, i64 0}
!2424 = !{!"000001F28338B960.w8.b8", !2425, i64 0}
!2425 = !{!"000001F28338B960.w16.b0", !2426, i64 0}
!2426 = !{!"000001F28338B960.w32.b0", !2427, i64 0}
!2427 = !{!"000001F28338B960.w64.b0", !2428, i64 0}
!2428 = !{!"000001F28338B960.w128.b0", !2429, i64 0}
!2429 = !{!"000001F28338B960.w256.b0", !2430, i64 0}
!2430 = !{!"000001F28338B960.w512.b0", !2431, i64 0}
!2431 = !{!"000001F28338B960.w1024.b0", !2432, i64 0}
!2432 = !{!"000001F28338B960", !21, i64 0}
!2433 = !{!2434, !2434, i64 0}
!2434 = !{!"000001F28338B960.w8.b32", !2435, i64 0}
!2435 = !{!"000001F28338B960.w16.b32", !2436, i64 0}
!2436 = !{!"000001F28338B960.w32.b32", !2427, i64 0}
!2437 = !{!2438, !2438, i64 0}
!2438 = !{!"000001F28338BDA0.w8.b0", !2439, i64 0}
!2439 = !{!"000001F28338BDA0.w16.b0", !2440, i64 0}
!2440 = !{!"000001F28338BDA0.w32.b0", !2441, i64 0}
!2441 = !{!"000001F28338BDA0.w64.b0", !2442, i64 0}
!2442 = !{!"000001F28338BDA0.w128.b0", !2443, i64 0}
!2443 = !{!"000001F28338BDA0.w256.b0", !2444, i64 0}
!2444 = !{!"000001F28338BDA0.w512.b0", !2445, i64 0}
!2445 = !{!"000001F28338BDA0.w1024.b0", !2446, i64 0}
!2446 = !{!"000001F28338BDA0", !21, i64 0}
!2447 = !{!2448, !2448, i64 0}
!2448 = !{!"000001F28338BDA0.w8.b8", !2439, i64 0}
!2449 = !{!2450, !2450, i64 0}
!2450 = !{!"000001F28338BDA0.w8.b16", !2451, i64 0}
!2451 = !{!"000001F28338BDA0.w16.b16", !2440, i64 0}
!2452 = !{!2453, !2453, i64 0}
!2453 = !{!"000001F28338BDA0.w8.b24", !2451, i64 0}
!2454 = !{!2455, !2455, i64 0}
!2455 = !{!"000001F28338BDA0.w8.b32", !2456, i64 0}
!2456 = !{!"000001F28338BDA0.w16.b32", !2457, i64 0}
!2457 = !{!"000001F28338BDA0.w32.b32", !2441, i64 0}
!2458 = !{!2459, !2459, i64 0}
!2459 = !{!"000001F28338C860.w8.b8", !2460, i64 0}
!2460 = !{!"000001F28338C860.w16.b0", !2461, i64 0}
!2461 = !{!"000001F28338C860.w32.b0", !2462, i64 0}
!2462 = !{!"000001F28338C860.w64.b0", !2463, i64 0}
!2463 = !{!"000001F28338C860.w128.b0", !2464, i64 0}
!2464 = !{!"000001F28338C860.w256.b0", !2465, i64 0}
!2465 = !{!"000001F28338C860.w512.b0", !2466, i64 0}
!2466 = !{!"000001F28338C860.w1024.b0", !2467, i64 0}
!2467 = !{!"000001F28338C860", !21, i64 0}
!2468 = !{!2469, !2469, i64 0}
!2469 = !{!"000001F28338C860.w8.b16", !2470, i64 0}
!2470 = !{!"000001F28338C860.w16.b16", !2461, i64 0}
!2471 = !{!2472, !2472, i64 0}
!2472 = !{!"000001F28338C860.w8.b24", !2470, i64 0}
!2473 = !{!2474, !2474, i64 0}
!2474 = !{!"000001F28338C860.w8.b32", !2475, i64 0}
!2475 = !{!"000001F28338C860.w16.b32", !2476, i64 0}
!2476 = !{!"000001F28338C860.w32.b32", !2462, i64 0}
!2477 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2478)
!2478 = !{!2479, !2480, !2481, !2482, !2483, !2484}
!2479 = !DILocalVariable(name: "arg1", arg: 1, scope: !2477, file: !1, type: !8)
!2480 = !DILocalVariable(name: "arg2", arg: 2, scope: !2477, file: !1, type: !9)
!2481 = !DILocalVariable(name: "arg3", arg: 3, scope: !2477, file: !1, type: !7)
!2482 = !DILocalVariable(name: "arg4", arg: 4, scope: !2477, file: !1, type: !8)
!2483 = !DILocalVariable(name: "arg5", arg: 5, scope: !2477, file: !1, type: !9)
!2484 = !DILocalVariable(name: "arg6", arg: 6, scope: !2477, file: !1, type: !8)
!2485 = !DILocation(line: 0, scope: !2477)
!2486 = !{!2487, !2487, i64 0}
!2487 = !{!"000001F283395CA0.w4.b0", !2488, i64 0}
!2488 = !{!"000001F283395CA0.w8.b0", !2489, i64 0}
!2489 = !{!"000001F283395CA0.w16.b0", !2490, i64 0}
!2490 = !{!"000001F283395CA0.w32.b0", !2491, i64 0}
!2491 = !{!"000001F283395CA0.w64.b0", !2492, i64 0}
!2492 = !{!"000001F283395CA0.w128.b0", !2493, i64 0}
!2493 = !{!"000001F283395CA0.w256.b0", !2494, i64 0}
!2494 = !{!"000001F283395CA0.w512.b0", !2495, i64 0}
!2495 = !{!"000001F283395CA0.w1024.b0", !2496, i64 0}
!2496 = !{!"000001F283395CA0", !21, i64 0}
!2497 = !{!2498, !2498, i64 0}
!2498 = !{!"000001F283395CA0.w4.b4", !2488, i64 0}
!2499 = !{!2500, !2500, i64 0}
!2500 = !{!"000001F283395CA0.w4.b8", !2501, i64 0}
!2501 = !{!"000001F283395CA0.w8.b8", !2489, i64 0}
!2502 = !{!2503, !2503, i64 0}
!2503 = !{!"000001F283395CA0.w4.b12", !2501, i64 0}
!2504 = !{!2505, !2505, i64 0}
!2505 = !{!"000001F28339DDA0.w8.b0", !2506, i64 0}
!2506 = !{!"000001F28339DDA0.w16.b0", !2507, i64 0}
!2507 = !{!"000001F28339DDA0.w32.b0", !2508, i64 0}
!2508 = !{!"000001F28339DDA0.w64.b0", !2509, i64 0}
!2509 = !{!"000001F28339DDA0.w128.b0", !2510, i64 0}
!2510 = !{!"000001F28339DDA0.w256.b0", !2511, i64 0}
!2511 = !{!"000001F28339DDA0.w512.b0", !2512, i64 0}
!2512 = !{!"000001F28339DDA0.w1024.b0", !2513, i64 0}
!2513 = !{!"000001F28339DDA0", !21, i64 0}
!2514 = !{!2515, !2515, i64 0}
!2515 = !{!"000001F28339DDA0.w8.b8", !2506, i64 0}
!2516 = !{!2517, !2517, i64 0}
!2517 = !{!"000001F28339DDA0.w8.b16", !2518, i64 0}
!2518 = !{!"000001F28339DDA0.w16.b16", !2507, i64 0}
!2519 = !{!2520, !2520, i64 0}
!2520 = !{!"000001F28339DDA0.w8.b24", !2518, i64 0}
!2521 = !{!2522, !2522, i64 0}
!2522 = !{!"000001F28339DDA0.w8.b32", !2523, i64 0}
!2523 = !{!"000001F28339DDA0.w16.b32", !2524, i64 0}
!2524 = !{!"000001F28339DDA0.w32.b32", !2508, i64 0}
!2525 = !{!2526, !2526, i64 0}
!2526 = !{!"000001F28339E8A0.w8.b16", !2527, i64 0}
!2527 = !{!"000001F28339E8A0.w16.b16", !2528, i64 0}
!2528 = !{!"000001F28339E8A0.w32.b0", !2529, i64 0}
!2529 = !{!"000001F28339E8A0.w64.b0", !2530, i64 0}
!2530 = !{!"000001F28339E8A0.w128.b0", !2531, i64 0}
!2531 = !{!"000001F28339E8A0.w256.b0", !2532, i64 0}
!2532 = !{!"000001F28339E8A0.w512.b0", !2533, i64 0}
!2533 = !{!"000001F28339E8A0.w1024.b0", !2534, i64 0}
!2534 = !{!"000001F28339E8A0", !21, i64 0}
!2535 = !{!2536, !2536, i64 0}
!2536 = !{!"000001F28339E8A0.w8.b24", !2527, i64 0}
!2537 = !{!2538, !2538, i64 0}
!2538 = !{!"000001F28339E8A0.w8.b32", !2539, i64 0}
!2539 = !{!"000001F28339E8A0.w16.b32", !2540, i64 0}
!2540 = !{!"000001F28339E8A0.w32.b32", !2529, i64 0}
!2541 = !{!2542, !2542, i64 0}
!2542 = !{!"000001F28339F3A0.w8.b0", !2543, i64 0}
!2543 = !{!"000001F28339F3A0.w16.b0", !2544, i64 0}
!2544 = !{!"000001F28339F3A0.w32.b0", !2545, i64 0}
!2545 = !{!"000001F28339F3A0.w64.b0", !2546, i64 0}
!2546 = !{!"000001F28339F3A0.w128.b0", !2547, i64 0}
!2547 = !{!"000001F28339F3A0.w256.b0", !2548, i64 0}
!2548 = !{!"000001F28339F3A0.w512.b0", !2549, i64 0}
!2549 = !{!"000001F28339F3A0.w1024.b0", !2550, i64 0}
!2550 = !{!"000001F28339F3A0", !21, i64 0}
!2551 = !{!2552, !2552, i64 0}
!2552 = !{!"000001F28339F3A0.w8.b8", !2543, i64 0}
!2553 = !{!2554, !2554, i64 0}
!2554 = !{!"000001F28339F3A0.w8.b16", !2555, i64 0}
!2555 = !{!"000001F28339F3A0.w16.b16", !2544, i64 0}
!2556 = !{!2557, !2557, i64 0}
!2557 = !{!"000001F28339F3A0.w8.b24", !2555, i64 0}
!2558 = !{!2559, !2559, i64 0}
!2559 = !{!"000001F28339F3A0.w8.b32", !2560, i64 0}
!2560 = !{!"000001F28339F3A0.w16.b32", !2561, i64 0}
!2561 = !{!"000001F28339F3A0.w32.b32", !2545, i64 0}
!2562 = !{!2563, !2563, i64 0}
!2563 = !{!"000001F28339F3A0.w8.b40", !2560, i64 0}
!2564 = !{!2565, !2565, i64 0}
!2565 = !{!"000001F28339F1A0.w8.b0", !2566, i64 0}
!2566 = !{!"000001F28339F1A0.w16.b0", !2567, i64 0}
!2567 = !{!"000001F28339F1A0.w32.b0", !2568, i64 0}
!2568 = !{!"000001F28339F1A0.w64.b0", !2569, i64 0}
!2569 = !{!"000001F28339F1A0.w128.b0", !2570, i64 0}
!2570 = !{!"000001F28339F1A0.w256.b0", !2571, i64 0}
!2571 = !{!"000001F28339F1A0.w512.b0", !2572, i64 0}
!2572 = !{!"000001F28339F1A0.w1024.b0", !2573, i64 0}
!2573 = !{!"000001F28339F1A0", !21, i64 0}
!2574 = !{!2575, !2575, i64 0}
!2575 = !{!"000001F28339F1A0.w8.b32", !2576, i64 0}
!2576 = !{!"000001F28339F1A0.w16.b32", !2577, i64 0}
!2577 = !{!"000001F28339F1A0.w32.b32", !2568, i64 0}
!2578 = !{!2579, !2579, i64 0}
!2579 = !{!"000001F28339F1A0.w8.b40", !2576, i64 0}
!2580 = !{!2581, !2581, i64 0}
!2581 = !{!"000001F2833A0F20.w8.b0", !2582, i64 0}
!2582 = !{!"000001F2833A0F20.w16.b0", !2583, i64 0}
!2583 = !{!"000001F2833A0F20.w32.b0", !2584, i64 0}
!2584 = !{!"000001F2833A0F20.w64.b0", !2585, i64 0}
!2585 = !{!"000001F2833A0F20.w128.b0", !2586, i64 0}
!2586 = !{!"000001F2833A0F20.w256.b0", !2587, i64 0}
!2587 = !{!"000001F2833A0F20.w512.b0", !2588, i64 0}
!2588 = !{!"000001F2833A0F20.w1024.b0", !2589, i64 0}
!2589 = !{!"000001F2833A0F20", !21, i64 0}
!2590 = !{!2591, !2591, i64 0}
!2591 = !{!"000001F2833A0F20.w8.b8", !2582, i64 0}
!2592 = !{!2593, !2593, i64 0}
!2593 = !{!"000001F2833A0F20.w8.b16", !2594, i64 0}
!2594 = !{!"000001F2833A0F20.w16.b16", !2583, i64 0}
!2595 = !{!2596, !2596, i64 0}
!2596 = !{!"000001F2833A0F20.w8.b24", !2594, i64 0}
!2597 = !{!2598, !2598, i64 0}
!2598 = !{!"000001F2833A0F20.w8.b32", !2599, i64 0}
!2599 = !{!"000001F2833A0F20.w16.b32", !2600, i64 0}
!2600 = !{!"000001F2833A0F20.w32.b32", !2584, i64 0}
!2601 = !{!2602, !2602, i64 0}
!2602 = !{!"000001F2833A06A0.w8.b8", !2603, i64 0}
!2603 = !{!"000001F2833A06A0.w16.b0", !2604, i64 0}
!2604 = !{!"000001F2833A06A0.w32.b0", !2605, i64 0}
!2605 = !{!"000001F2833A06A0.w64.b0", !2606, i64 0}
!2606 = !{!"000001F2833A06A0.w128.b0", !2607, i64 0}
!2607 = !{!"000001F2833A06A0.w256.b0", !2608, i64 0}
!2608 = !{!"000001F2833A06A0.w512.b0", !2609, i64 0}
!2609 = !{!"000001F2833A06A0.w1024.b0", !2610, i64 0}
!2610 = !{!"000001F2833A06A0", !21, i64 0}
!2611 = !{!2612, !2612, i64 0}
!2612 = !{!"000001F2833A06A0.w8.b32", !2613, i64 0}
!2613 = !{!"000001F2833A06A0.w16.b32", !2614, i64 0}
!2614 = !{!"000001F2833A06A0.w32.b32", !2605, i64 0}
!2615 = !{!2616, !2616, i64 0}
!2616 = !{!"000001F2833A1AE0.w8.b0", !2617, i64 0}
!2617 = !{!"000001F2833A1AE0.w16.b0", !2618, i64 0}
!2618 = !{!"000001F2833A1AE0.w32.b0", !2619, i64 0}
!2619 = !{!"000001F2833A1AE0.w64.b0", !2620, i64 0}
!2620 = !{!"000001F2833A1AE0.w128.b0", !2621, i64 0}
!2621 = !{!"000001F2833A1AE0.w256.b0", !2622, i64 0}
!2622 = !{!"000001F2833A1AE0.w512.b0", !2623, i64 0}
!2623 = !{!"000001F2833A1AE0.w1024.b0", !2624, i64 0}
!2624 = !{!"000001F2833A1AE0", !21, i64 0}
!2625 = !{!2626, !2626, i64 0}
!2626 = !{!"000001F2833A1AE0.w8.b8", !2617, i64 0}
!2627 = !{!2628, !2628, i64 0}
!2628 = !{!"000001F2833A1AE0.w8.b16", !2629, i64 0}
!2629 = !{!"000001F2833A1AE0.w16.b16", !2618, i64 0}
!2630 = !{!2631, !2631, i64 0}
!2631 = !{!"000001F2833A1AE0.w8.b24", !2629, i64 0}
!2632 = !{!2633, !2633, i64 0}
!2633 = !{!"000001F2833A1AE0.w8.b32", !2634, i64 0}
!2634 = !{!"000001F2833A1AE0.w16.b32", !2635, i64 0}
!2635 = !{!"000001F2833A1AE0.w32.b32", !2619, i64 0}
!2636 = !{!2637, !2637, i64 0}
!2637 = !{!"000001F2833A20E0.w8.b8", !2638, i64 0}
!2638 = !{!"000001F2833A20E0.w16.b0", !2639, i64 0}
!2639 = !{!"000001F2833A20E0.w32.b0", !2640, i64 0}
!2640 = !{!"000001F2833A20E0.w64.b0", !2641, i64 0}
!2641 = !{!"000001F2833A20E0.w128.b0", !2642, i64 0}
!2642 = !{!"000001F2833A20E0.w256.b0", !2643, i64 0}
!2643 = !{!"000001F2833A20E0.w512.b0", !2644, i64 0}
!2644 = !{!"000001F2833A20E0.w1024.b0", !2645, i64 0}
!2645 = !{!"000001F2833A20E0", !21, i64 0}
!2646 = !{!2647, !2647, i64 0}
!2647 = !{!"000001F2833A20E0.w8.b16", !2648, i64 0}
!2648 = !{!"000001F2833A20E0.w16.b16", !2639, i64 0}
!2649 = !{!2650, !2650, i64 0}
!2650 = !{!"000001F2833A20E0.w8.b24", !2648, i64 0}
!2651 = !{!2652, !2652, i64 0}
!2652 = !{!"000001F2833A20E0.w8.b32", !2653, i64 0}
!2653 = !{!"000001F2833A20E0.w16.b32", !2654, i64 0}
!2654 = !{!"000001F2833A20E0.w32.b32", !2640, i64 0}
!2655 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2656)
!2656 = !{!2657, !2658, !2659, !2660, !2661, !2662}
!2657 = !DILocalVariable(name: "arg1", arg: 1, scope: !2655, file: !1, type: !8)
!2658 = !DILocalVariable(name: "arg2", arg: 2, scope: !2655, file: !1, type: !9)
!2659 = !DILocalVariable(name: "arg3", arg: 3, scope: !2655, file: !1, type: !7)
!2660 = !DILocalVariable(name: "arg4", arg: 4, scope: !2655, file: !1, type: !8)
!2661 = !DILocalVariable(name: "arg5", arg: 5, scope: !2655, file: !1, type: !9)
!2662 = !DILocalVariable(name: "arg6", arg: 6, scope: !2655, file: !1, type: !8)
!2663 = !DILocation(line: 0, scope: !2655)
!2664 = !{!2665, !2665, i64 0}
!2665 = !{!"000001F2833013D0.w4.b0", !2666, i64 0}
!2666 = !{!"000001F2833013D0.w8.b0", !2667, i64 0}
!2667 = !{!"000001F2833013D0.w16.b0", !2668, i64 0}
!2668 = !{!"000001F2833013D0.w32.b0", !2669, i64 0}
!2669 = !{!"000001F2833013D0.w64.b0", !2670, i64 0}
!2670 = !{!"000001F2833013D0.w128.b0", !2671, i64 0}
!2671 = !{!"000001F2833013D0.w256.b0", !2672, i64 0}
!2672 = !{!"000001F2833013D0.w512.b0", !2673, i64 0}
!2673 = !{!"000001F2833013D0.w1024.b0", !2674, i64 0}
!2674 = !{!"000001F2833013D0", !21, i64 0}
!2675 = !{!2676, !2676, i64 0}
!2676 = !{!"000001F2833013D0.w4.b4", !2666, i64 0}
!2677 = !{!2678, !2678, i64 0}
!2678 = !{!"000001F2833013D0.w4.b8", !2679, i64 0}
!2679 = !{!"000001F2833013D0.w8.b8", !2667, i64 0}
!2680 = !{!2681, !2681, i64 0}
!2681 = !{!"000001F2833013D0.w4.b12", !2679, i64 0}
!2682 = !{!2683, !2683, i64 0}
!2683 = !{!"000001F283303C10.w8.b0", !2684, i64 0}
!2684 = !{!"000001F283303C10.w16.b0", !2685, i64 0}
!2685 = !{!"000001F283303C10.w32.b0", !2686, i64 0}
!2686 = !{!"000001F283303C10.w64.b0", !2687, i64 0}
!2687 = !{!"000001F283303C10.w128.b0", !2688, i64 0}
!2688 = !{!"000001F283303C10.w256.b0", !2689, i64 0}
!2689 = !{!"000001F283303C10.w512.b0", !2690, i64 0}
!2690 = !{!"000001F283303C10.w1024.b0", !2691, i64 0}
!2691 = !{!"000001F283303C10", !21, i64 0}
!2692 = !{!2693, !2693, i64 0}
!2693 = !{!"000001F283303C10.w8.b8", !2684, i64 0}
!2694 = !{!2695, !2695, i64 0}
!2695 = !{!"000001F283303C10.w8.b16", !2696, i64 0}
!2696 = !{!"000001F283303C10.w16.b16", !2685, i64 0}
!2697 = !{!2698, !2698, i64 0}
!2698 = !{!"000001F283303C10.w8.b24", !2696, i64 0}
!2699 = !{!2700, !2700, i64 0}
!2700 = !{!"000001F283303C10.w8.b32", !2701, i64 0}
!2701 = !{!"000001F283303C10.w16.b32", !2702, i64 0}
!2702 = !{!"000001F283303C10.w32.b32", !2686, i64 0}
!2703 = !{!2704, !2704, i64 0}
!2704 = !{!"000001F283303C50.w8.b16", !2705, i64 0}
!2705 = !{!"000001F283303C50.w16.b16", !2706, i64 0}
!2706 = !{!"000001F283303C50.w32.b0", !2707, i64 0}
!2707 = !{!"000001F283303C50.w64.b0", !2708, i64 0}
!2708 = !{!"000001F283303C50.w128.b0", !2709, i64 0}
!2709 = !{!"000001F283303C50.w256.b0", !2710, i64 0}
!2710 = !{!"000001F283303C50.w512.b0", !2711, i64 0}
!2711 = !{!"000001F283303C50.w1024.b0", !2712, i64 0}
!2712 = !{!"000001F283303C50", !21, i64 0}
!2713 = !{!2714, !2714, i64 0}
!2714 = !{!"000001F283303C50.w8.b24", !2705, i64 0}
!2715 = !{!2716, !2716, i64 0}
!2716 = !{!"000001F283303C50.w8.b32", !2717, i64 0}
!2717 = !{!"000001F283303C50.w16.b32", !2718, i64 0}
!2718 = !{!"000001F283303C50.w32.b32", !2707, i64 0}
!2719 = !{!2720, !2720, i64 0}
!2720 = !{!"000001F283304890.w8.b0", !2721, i64 0}
!2721 = !{!"000001F283304890.w16.b0", !2722, i64 0}
!2722 = !{!"000001F283304890.w32.b0", !2723, i64 0}
!2723 = !{!"000001F283304890.w64.b0", !2724, i64 0}
!2724 = !{!"000001F283304890.w128.b0", !2725, i64 0}
!2725 = !{!"000001F283304890.w256.b0", !2726, i64 0}
!2726 = !{!"000001F283304890.w512.b0", !2727, i64 0}
!2727 = !{!"000001F283304890.w1024.b0", !2728, i64 0}
!2728 = !{!"000001F283304890", !21, i64 0}
!2729 = !{!2730, !2730, i64 0}
!2730 = !{!"000001F283304890.w8.b8", !2721, i64 0}
!2731 = !{!2732, !2732, i64 0}
!2732 = !{!"000001F283304890.w8.b16", !2733, i64 0}
!2733 = !{!"000001F283304890.w16.b16", !2722, i64 0}
!2734 = !{!2735, !2735, i64 0}
!2735 = !{!"000001F283304890.w8.b24", !2733, i64 0}
!2736 = !{!2737, !2737, i64 0}
!2737 = !{!"000001F283304890.w8.b32", !2738, i64 0}
!2738 = !{!"000001F283304890.w16.b32", !2739, i64 0}
!2739 = !{!"000001F283304890.w32.b32", !2723, i64 0}
!2740 = !{!2741, !2741, i64 0}
!2741 = !{!"000001F283304890.w8.b40", !2738, i64 0}
!2742 = !{!2743, !2743, i64 0}
!2743 = !{!"000001F283304F10.w8.b0", !2744, i64 0}
!2744 = !{!"000001F283304F10.w16.b0", !2745, i64 0}
!2745 = !{!"000001F283304F10.w32.b0", !2746, i64 0}
!2746 = !{!"000001F283304F10.w64.b0", !2747, i64 0}
!2747 = !{!"000001F283304F10.w128.b0", !2748, i64 0}
!2748 = !{!"000001F283304F10.w256.b0", !2749, i64 0}
!2749 = !{!"000001F283304F10.w512.b0", !2750, i64 0}
!2750 = !{!"000001F283304F10.w1024.b0", !2751, i64 0}
!2751 = !{!"000001F283304F10", !21, i64 0}
!2752 = !{!2753, !2753, i64 0}
!2753 = !{!"000001F283304F10.w8.b32", !2754, i64 0}
!2754 = !{!"000001F283304F10.w16.b32", !2755, i64 0}
!2755 = !{!"000001F283304F10.w32.b32", !2746, i64 0}
!2756 = !{!2757, !2757, i64 0}
!2757 = !{!"000001F283304F10.w8.b40", !2754, i64 0}
!2758 = !{!2759, !2759, i64 0}
!2759 = !{!"000001F283305610.w8.b0", !2760, i64 0}
!2760 = !{!"000001F283305610.w16.b0", !2761, i64 0}
!2761 = !{!"000001F283305610.w32.b0", !2762, i64 0}
!2762 = !{!"000001F283305610.w64.b0", !2763, i64 0}
!2763 = !{!"000001F283305610.w128.b0", !2764, i64 0}
!2764 = !{!"000001F283305610.w256.b0", !2765, i64 0}
!2765 = !{!"000001F283305610.w512.b0", !2766, i64 0}
!2766 = !{!"000001F283305610.w1024.b0", !2767, i64 0}
!2767 = !{!"000001F283305610", !21, i64 0}
!2768 = !{!2769, !2769, i64 0}
!2769 = !{!"000001F283305610.w8.b8", !2760, i64 0}
!2770 = !{!2771, !2771, i64 0}
!2771 = !{!"000001F283305610.w8.b16", !2772, i64 0}
!2772 = !{!"000001F283305610.w16.b16", !2761, i64 0}
!2773 = !{!2774, !2774, i64 0}
!2774 = !{!"000001F283305610.w8.b24", !2772, i64 0}
!2775 = !{!2776, !2776, i64 0}
!2776 = !{!"000001F283305610.w8.b32", !2777, i64 0}
!2777 = !{!"000001F283305610.w16.b32", !2778, i64 0}
!2778 = !{!"000001F283305610.w32.b32", !2762, i64 0}
!2779 = !{!2780, !2780, i64 0}
!2780 = !{!"000001F2833054D0.w8.b8", !2781, i64 0}
!2781 = !{!"000001F2833054D0.w16.b0", !2782, i64 0}
!2782 = !{!"000001F2833054D0.w32.b0", !2783, i64 0}
!2783 = !{!"000001F2833054D0.w64.b0", !2784, i64 0}
!2784 = !{!"000001F2833054D0.w128.b0", !2785, i64 0}
!2785 = !{!"000001F2833054D0.w256.b0", !2786, i64 0}
!2786 = !{!"000001F2833054D0.w512.b0", !2787, i64 0}
!2787 = !{!"000001F2833054D0.w1024.b0", !2788, i64 0}
!2788 = !{!"000001F2833054D0", !21, i64 0}
!2789 = !{!2790, !2790, i64 0}
!2790 = !{!"000001F2833054D0.w8.b32", !2791, i64 0}
!2791 = !{!"000001F2833054D0.w16.b32", !2792, i64 0}
!2792 = !{!"000001F2833054D0.w32.b32", !2783, i64 0}
!2793 = !{!2794, !2794, i64 0}
!2794 = !{!"000001F283305E10.w8.b0", !2795, i64 0}
!2795 = !{!"000001F283305E10.w16.b0", !2796, i64 0}
!2796 = !{!"000001F283305E10.w32.b0", !2797, i64 0}
!2797 = !{!"000001F283305E10.w64.b0", !2798, i64 0}
!2798 = !{!"000001F283305E10.w128.b0", !2799, i64 0}
!2799 = !{!"000001F283305E10.w256.b0", !2800, i64 0}
!2800 = !{!"000001F283305E10.w512.b0", !2801, i64 0}
!2801 = !{!"000001F283305E10.w1024.b0", !2802, i64 0}
!2802 = !{!"000001F283305E10", !21, i64 0}
!2803 = !{!2804, !2804, i64 0}
!2804 = !{!"000001F283305E10.w8.b8", !2795, i64 0}
!2805 = !{!2806, !2806, i64 0}
!2806 = !{!"000001F283305E10.w8.b16", !2807, i64 0}
!2807 = !{!"000001F283305E10.w16.b16", !2796, i64 0}
!2808 = !{!2809, !2809, i64 0}
!2809 = !{!"000001F283305E10.w8.b24", !2807, i64 0}
!2810 = !{!2811, !2811, i64 0}
!2811 = !{!"000001F283305E10.w8.b32", !2812, i64 0}
!2812 = !{!"000001F283305E10.w16.b32", !2813, i64 0}
!2813 = !{!"000001F283305E10.w32.b32", !2797, i64 0}
!2814 = !{!2815, !2815, i64 0}
!2815 = !{!"000001F283306FD0.w8.b8", !2816, i64 0}
!2816 = !{!"000001F283306FD0.w16.b0", !2817, i64 0}
!2817 = !{!"000001F283306FD0.w32.b0", !2818, i64 0}
!2818 = !{!"000001F283306FD0.w64.b0", !2819, i64 0}
!2819 = !{!"000001F283306FD0.w128.b0", !2820, i64 0}
!2820 = !{!"000001F283306FD0.w256.b0", !2821, i64 0}
!2821 = !{!"000001F283306FD0.w512.b0", !2822, i64 0}
!2822 = !{!"000001F283306FD0.w1024.b0", !2823, i64 0}
!2823 = !{!"000001F283306FD0", !21, i64 0}
!2824 = !{!2825, !2825, i64 0}
!2825 = !{!"000001F283306FD0.w8.b16", !2826, i64 0}
!2826 = !{!"000001F283306FD0.w16.b16", !2817, i64 0}
!2827 = !{!2828, !2828, i64 0}
!2828 = !{!"000001F283306FD0.w8.b24", !2826, i64 0}
!2829 = !{!2830, !2830, i64 0}
!2830 = !{!"000001F283306FD0.w8.b32", !2831, i64 0}
!2831 = !{!"000001F283306FD0.w16.b32", !2832, i64 0}
!2832 = !{!"000001F283306FD0.w32.b32", !2818, i64 0}
!2833 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2834)
!2834 = !{!2835, !2836, !2837, !2838, !2839, !2840}
!2835 = !DILocalVariable(name: "arg1", arg: 1, scope: !2833, file: !1, type: !8)
!2836 = !DILocalVariable(name: "arg2", arg: 2, scope: !2833, file: !1, type: !9)
!2837 = !DILocalVariable(name: "arg3", arg: 3, scope: !2833, file: !1, type: !7)
!2838 = !DILocalVariable(name: "arg4", arg: 4, scope: !2833, file: !1, type: !8)
!2839 = !DILocalVariable(name: "arg5", arg: 5, scope: !2833, file: !1, type: !9)
!2840 = !DILocalVariable(name: "arg6", arg: 6, scope: !2833, file: !1, type: !8)
!2841 = !DILocation(line: 0, scope: !2833)
!2842 = !{!2843, !2843, i64 0}
!2843 = !{!"000001F2EB0E02E0.w4.b0", !2844, i64 0}
!2844 = !{!"000001F2EB0E02E0.w8.b0", !2845, i64 0}
!2845 = !{!"000001F2EB0E02E0.w16.b0", !2846, i64 0}
!2846 = !{!"000001F2EB0E02E0.w32.b0", !2847, i64 0}
!2847 = !{!"000001F2EB0E02E0.w64.b0", !2848, i64 0}
!2848 = !{!"000001F2EB0E02E0.w128.b0", !2849, i64 0}
!2849 = !{!"000001F2EB0E02E0.w256.b0", !2850, i64 0}
!2850 = !{!"000001F2EB0E02E0.w512.b0", !2851, i64 0}
!2851 = !{!"000001F2EB0E02E0.w1024.b0", !2852, i64 0}
!2852 = !{!"000001F2EB0E02E0", !21, i64 0}
!2853 = !{!2854, !2854, i64 0}
!2854 = !{!"000001F2EB0E02E0.w4.b4", !2844, i64 0}
!2855 = !{!2856, !2856, i64 0}
!2856 = !{!"000001F2EB0E02E0.w4.b8", !2857, i64 0}
!2857 = !{!"000001F2EB0E02E0.w8.b8", !2845, i64 0}
!2858 = !{!2859, !2859, i64 0}
!2859 = !{!"000001F2EB0E02E0.w4.b12", !2857, i64 0}
!2860 = !{!2861, !2861, i64 0}
!2861 = !{!"000001F2EB0E7CA0.w8.b0", !2862, i64 0}
!2862 = !{!"000001F2EB0E7CA0.w16.b0", !2863, i64 0}
!2863 = !{!"000001F2EB0E7CA0.w32.b0", !2864, i64 0}
!2864 = !{!"000001F2EB0E7CA0.w64.b0", !2865, i64 0}
!2865 = !{!"000001F2EB0E7CA0.w128.b0", !2866, i64 0}
!2866 = !{!"000001F2EB0E7CA0.w256.b0", !2867, i64 0}
!2867 = !{!"000001F2EB0E7CA0.w512.b0", !2868, i64 0}
!2868 = !{!"000001F2EB0E7CA0.w1024.b0", !2869, i64 0}
!2869 = !{!"000001F2EB0E7CA0", !21, i64 0}
!2870 = !{!2871, !2871, i64 0}
!2871 = !{!"000001F2EB0E7CA0.w8.b8", !2862, i64 0}
!2872 = !{!2873, !2873, i64 0}
!2873 = !{!"000001F2EB0E7CA0.w8.b16", !2874, i64 0}
!2874 = !{!"000001F2EB0E7CA0.w16.b16", !2863, i64 0}
!2875 = !{!2876, !2876, i64 0}
!2876 = !{!"000001F2EB0E7CA0.w8.b24", !2874, i64 0}
!2877 = !{!2878, !2878, i64 0}
!2878 = !{!"000001F2EB0E7CA0.w8.b32", !2879, i64 0}
!2879 = !{!"000001F2EB0E7CA0.w16.b32", !2880, i64 0}
!2880 = !{!"000001F2EB0E7CA0.w32.b32", !2864, i64 0}
!2881 = !{!2882, !2882, i64 0}
!2882 = !{!"000001F2EB0E86E0.w8.b16", !2883, i64 0}
!2883 = !{!"000001F2EB0E86E0.w16.b16", !2884, i64 0}
!2884 = !{!"000001F2EB0E86E0.w32.b0", !2885, i64 0}
!2885 = !{!"000001F2EB0E86E0.w64.b0", !2886, i64 0}
!2886 = !{!"000001F2EB0E86E0.w128.b0", !2887, i64 0}
!2887 = !{!"000001F2EB0E86E0.w256.b0", !2888, i64 0}
!2888 = !{!"000001F2EB0E86E0.w512.b0", !2889, i64 0}
!2889 = !{!"000001F2EB0E86E0.w1024.b0", !2890, i64 0}
!2890 = !{!"000001F2EB0E86E0", !21, i64 0}
!2891 = !{!2892, !2892, i64 0}
!2892 = !{!"000001F2EB0E86E0.w8.b24", !2883, i64 0}
!2893 = !{!2894, !2894, i64 0}
!2894 = !{!"000001F2EB0E86E0.w8.b32", !2895, i64 0}
!2895 = !{!"000001F2EB0E86E0.w16.b32", !2896, i64 0}
!2896 = !{!"000001F2EB0E86E0.w32.b32", !2885, i64 0}
!2897 = !{!2898, !2898, i64 0}
!2898 = !{!"000001F2EB0E9720.w8.b0", !2899, i64 0}
!2899 = !{!"000001F2EB0E9720.w16.b0", !2900, i64 0}
!2900 = !{!"000001F2EB0E9720.w32.b0", !2901, i64 0}
!2901 = !{!"000001F2EB0E9720.w64.b0", !2902, i64 0}
!2902 = !{!"000001F2EB0E9720.w128.b0", !2903, i64 0}
!2903 = !{!"000001F2EB0E9720.w256.b0", !2904, i64 0}
!2904 = !{!"000001F2EB0E9720.w512.b0", !2905, i64 0}
!2905 = !{!"000001F2EB0E9720.w1024.b0", !2906, i64 0}
!2906 = !{!"000001F2EB0E9720", !21, i64 0}
!2907 = !{!2908, !2908, i64 0}
!2908 = !{!"000001F2EB0E9720.w8.b8", !2899, i64 0}
!2909 = !{!2910, !2910, i64 0}
!2910 = !{!"000001F2EB0E9720.w8.b16", !2911, i64 0}
!2911 = !{!"000001F2EB0E9720.w16.b16", !2900, i64 0}
!2912 = !{!2913, !2913, i64 0}
!2913 = !{!"000001F2EB0E9720.w8.b24", !2911, i64 0}
!2914 = !{!2915, !2915, i64 0}
!2915 = !{!"000001F2EB0E9720.w8.b32", !2916, i64 0}
!2916 = !{!"000001F2EB0E9720.w16.b32", !2917, i64 0}
!2917 = !{!"000001F2EB0E9720.w32.b32", !2901, i64 0}
!2918 = !{!2919, !2919, i64 0}
!2919 = !{!"000001F2EB0E9720.w8.b40", !2916, i64 0}
!2920 = !{!2921, !2921, i64 0}
!2921 = !{!"000001F2EB0E91E0.w8.b0", !2922, i64 0}
!2922 = !{!"000001F2EB0E91E0.w16.b0", !2923, i64 0}
!2923 = !{!"000001F2EB0E91E0.w32.b0", !2924, i64 0}
!2924 = !{!"000001F2EB0E91E0.w64.b0", !2925, i64 0}
!2925 = !{!"000001F2EB0E91E0.w128.b0", !2926, i64 0}
!2926 = !{!"000001F2EB0E91E0.w256.b0", !2927, i64 0}
!2927 = !{!"000001F2EB0E91E0.w512.b0", !2928, i64 0}
!2928 = !{!"000001F2EB0E91E0.w1024.b0", !2929, i64 0}
!2929 = !{!"000001F2EB0E91E0", !21, i64 0}
!2930 = !{!2931, !2931, i64 0}
!2931 = !{!"000001F2EB0E91E0.w8.b32", !2932, i64 0}
!2932 = !{!"000001F2EB0E91E0.w16.b32", !2933, i64 0}
!2933 = !{!"000001F2EB0E91E0.w32.b32", !2924, i64 0}
!2934 = !{!2935, !2935, i64 0}
!2935 = !{!"000001F2EB0E91E0.w8.b40", !2932, i64 0}
!2936 = !{!2937, !2937, i64 0}
!2937 = !{!"000001F2EB0EAB60.w8.b0", !2938, i64 0}
!2938 = !{!"000001F2EB0EAB60.w16.b0", !2939, i64 0}
!2939 = !{!"000001F2EB0EAB60.w32.b0", !2940, i64 0}
!2940 = !{!"000001F2EB0EAB60.w64.b0", !2941, i64 0}
!2941 = !{!"000001F2EB0EAB60.w128.b0", !2942, i64 0}
!2942 = !{!"000001F2EB0EAB60.w256.b0", !2943, i64 0}
!2943 = !{!"000001F2EB0EAB60.w512.b0", !2944, i64 0}
!2944 = !{!"000001F2EB0EAB60.w1024.b0", !2945, i64 0}
!2945 = !{!"000001F2EB0EAB60", !21, i64 0}
!2946 = !{!2947, !2947, i64 0}
!2947 = !{!"000001F2EB0EAB60.w8.b8", !2938, i64 0}
!2948 = !{!2949, !2949, i64 0}
!2949 = !{!"000001F2EB0EAB60.w8.b16", !2950, i64 0}
!2950 = !{!"000001F2EB0EAB60.w16.b16", !2939, i64 0}
!2951 = !{!2952, !2952, i64 0}
!2952 = !{!"000001F2EB0EAB60.w8.b24", !2950, i64 0}
!2953 = !{!2954, !2954, i64 0}
!2954 = !{!"000001F2EB0EAB60.w8.b32", !2955, i64 0}
!2955 = !{!"000001F2EB0EAB60.w16.b32", !2956, i64 0}
!2956 = !{!"000001F2EB0EAB60.w32.b32", !2940, i64 0}
!2957 = !{!2958, !2958, i64 0}
!2958 = !{!"000001F2EB0EA520.w8.b8", !2959, i64 0}
!2959 = !{!"000001F2EB0EA520.w16.b0", !2960, i64 0}
!2960 = !{!"000001F2EB0EA520.w32.b0", !2961, i64 0}
!2961 = !{!"000001F2EB0EA520.w64.b0", !2962, i64 0}
!2962 = !{!"000001F2EB0EA520.w128.b0", !2963, i64 0}
!2963 = !{!"000001F2EB0EA520.w256.b0", !2964, i64 0}
!2964 = !{!"000001F2EB0EA520.w512.b0", !2965, i64 0}
!2965 = !{!"000001F2EB0EA520.w1024.b0", !2966, i64 0}
!2966 = !{!"000001F2EB0EA520", !21, i64 0}
!2967 = !{!2968, !2968, i64 0}
!2968 = !{!"000001F2EB0EA520.w8.b32", !2969, i64 0}
!2969 = !{!"000001F2EB0EA520.w16.b32", !2970, i64 0}
!2970 = !{!"000001F2EB0EA520.w32.b32", !2961, i64 0}
!2971 = !{!2972, !2972, i64 0}
!2972 = !{!"000001F2EB0EB2E0.w8.b0", !2973, i64 0}
!2973 = !{!"000001F2EB0EB2E0.w16.b0", !2974, i64 0}
!2974 = !{!"000001F2EB0EB2E0.w32.b0", !2975, i64 0}
!2975 = !{!"000001F2EB0EB2E0.w64.b0", !2976, i64 0}
!2976 = !{!"000001F2EB0EB2E0.w128.b0", !2977, i64 0}
!2977 = !{!"000001F2EB0EB2E0.w256.b0", !2978, i64 0}
!2978 = !{!"000001F2EB0EB2E0.w512.b0", !2979, i64 0}
!2979 = !{!"000001F2EB0EB2E0.w1024.b0", !2980, i64 0}
!2980 = !{!"000001F2EB0EB2E0", !21, i64 0}
!2981 = !{!2982, !2982, i64 0}
!2982 = !{!"000001F2EB0EB2E0.w8.b8", !2973, i64 0}
!2983 = !{!2984, !2984, i64 0}
!2984 = !{!"000001F2EB0EB2E0.w8.b16", !2985, i64 0}
!2985 = !{!"000001F2EB0EB2E0.w16.b16", !2974, i64 0}
!2986 = !{!2987, !2987, i64 0}
!2987 = !{!"000001F2EB0EB2E0.w8.b24", !2985, i64 0}
!2988 = !{!2989, !2989, i64 0}
!2989 = !{!"000001F2EB0EB2E0.w8.b32", !2990, i64 0}
!2990 = !{!"000001F2EB0EB2E0.w16.b32", !2991, i64 0}
!2991 = !{!"000001F2EB0EB2E0.w32.b32", !2975, i64 0}
!2992 = !{!2993, !2993, i64 0}
!2993 = !{!"000001F2EB0EC060.w8.b8", !2994, i64 0}
!2994 = !{!"000001F2EB0EC060.w16.b0", !2995, i64 0}
!2995 = !{!"000001F2EB0EC060.w32.b0", !2996, i64 0}
!2996 = !{!"000001F2EB0EC060.w64.b0", !2997, i64 0}
!2997 = !{!"000001F2EB0EC060.w128.b0", !2998, i64 0}
!2998 = !{!"000001F2EB0EC060.w256.b0", !2999, i64 0}
!2999 = !{!"000001F2EB0EC060.w512.b0", !3000, i64 0}
!3000 = !{!"000001F2EB0EC060.w1024.b0", !3001, i64 0}
!3001 = !{!"000001F2EB0EC060", !21, i64 0}
!3002 = !{!3003, !3003, i64 0}
!3003 = !{!"000001F2EB0EC060.w8.b16", !3004, i64 0}
!3004 = !{!"000001F2EB0EC060.w16.b16", !2995, i64 0}
!3005 = !{!3006, !3006, i64 0}
!3006 = !{!"000001F2EB0EC060.w8.b24", !3004, i64 0}
!3007 = !{!3008, !3008, i64 0}
!3008 = !{!"000001F2EB0EC060.w8.b32", !3009, i64 0}
!3009 = !{!"000001F2EB0EC060.w16.b32", !3010, i64 0}
!3010 = !{!"000001F2EB0EC060.w32.b32", !2996, i64 0}
!3011 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3012)
!3012 = !{!3013, !3014, !3015, !3016, !3017, !3018}
!3013 = !DILocalVariable(name: "arg1", arg: 1, scope: !3011, file: !1, type: !8)
!3014 = !DILocalVariable(name: "arg2", arg: 2, scope: !3011, file: !1, type: !9)
!3015 = !DILocalVariable(name: "arg3", arg: 3, scope: !3011, file: !1, type: !7)
!3016 = !DILocalVariable(name: "arg4", arg: 4, scope: !3011, file: !1, type: !8)
!3017 = !DILocalVariable(name: "arg5", arg: 5, scope: !3011, file: !1, type: !9)
!3018 = !DILocalVariable(name: "arg6", arg: 6, scope: !3011, file: !1, type: !8)
!3019 = !DILocation(line: 0, scope: !3011)
!3020 = !{!3021, !3021, i64 0}
!3021 = !{!"000001F28334AA30.w4.b0", !3022, i64 0}
!3022 = !{!"000001F28334AA30.w8.b0", !3023, i64 0}
!3023 = !{!"000001F28334AA30.w16.b0", !3024, i64 0}
!3024 = !{!"000001F28334AA30.w32.b0", !3025, i64 0}
!3025 = !{!"000001F28334AA30.w64.b0", !3026, i64 0}
!3026 = !{!"000001F28334AA30.w128.b0", !3027, i64 0}
!3027 = !{!"000001F28334AA30.w256.b0", !3028, i64 0}
!3028 = !{!"000001F28334AA30.w512.b0", !3029, i64 0}
!3029 = !{!"000001F28334AA30.w1024.b0", !3030, i64 0}
!3030 = !{!"000001F28334AA30", !21, i64 0}
!3031 = !{!3032, !3032, i64 0}
!3032 = !{!"000001F28334AA30.w4.b4", !3022, i64 0}
!3033 = !{!3034, !3034, i64 0}
!3034 = !{!"000001F28334AA30.w4.b8", !3035, i64 0}
!3035 = !{!"000001F28334AA30.w8.b8", !3023, i64 0}
!3036 = !{!3037, !3037, i64 0}
!3037 = !{!"000001F28334AA30.w4.b12", !3035, i64 0}
!3038 = !{!3039, !3039, i64 0}
!3039 = !{!"000001F28334AA30.w4.b16", !3040, i64 0}
!3040 = !{!"000001F28334AA30.w8.b16", !3041, i64 0}
!3041 = !{!"000001F28334AA30.w16.b16", !3024, i64 0}
!3042 = !{!3043, !3043, i64 0}
!3043 = !{!"000001F28334F930.w8.b0", !3044, i64 0}
!3044 = !{!"000001F28334F930.w16.b0", !3045, i64 0}
!3045 = !{!"000001F28334F930.w32.b0", !3046, i64 0}
!3046 = !{!"000001F28334F930.w64.b0", !3047, i64 0}
!3047 = !{!"000001F28334F930.w128.b0", !3048, i64 0}
!3048 = !{!"000001F28334F930.w256.b0", !3049, i64 0}
!3049 = !{!"000001F28334F930.w512.b0", !3050, i64 0}
!3050 = !{!"000001F28334F930.w1024.b0", !3051, i64 0}
!3051 = !{!"000001F28334F930", !21, i64 0}
!3052 = !{!3053, !3053, i64 0}
!3053 = !{!"000001F28334F930.w8.b8", !3044, i64 0}
!3054 = !{!3055, !3055, i64 0}
!3055 = !{!"000001F28334F930.w8.b16", !3056, i64 0}
!3056 = !{!"000001F28334F930.w16.b16", !3045, i64 0}
!3057 = !{!3058, !3058, i64 0}
!3058 = !{!"000001F28334F930.w8.b24", !3056, i64 0}
!3059 = !{!3060, !3060, i64 0}
!3060 = !{!"000001F28334F930.w8.b32", !3061, i64 0}
!3061 = !{!"000001F28334F930.w16.b32", !3062, i64 0}
!3062 = !{!"000001F28334F930.w32.b32", !3046, i64 0}
!3063 = !{!3064, !3064, i64 0}
!3064 = !{!"000001F28334F730.w8.b8", !3065, i64 0}
!3065 = !{!"000001F28334F730.w16.b0", !3066, i64 0}
!3066 = !{!"000001F28334F730.w32.b0", !3067, i64 0}
!3067 = !{!"000001F28334F730.w64.b0", !3068, i64 0}
!3068 = !{!"000001F28334F730.w128.b0", !3069, i64 0}
!3069 = !{!"000001F28334F730.w256.b0", !3070, i64 0}
!3070 = !{!"000001F28334F730.w512.b0", !3071, i64 0}
!3071 = !{!"000001F28334F730.w1024.b0", !3072, i64 0}
!3072 = !{!"000001F28334F730", !21, i64 0}
!3073 = !{!3074, !3074, i64 0}
!3074 = !{!"000001F28334F730.w8.b16", !3075, i64 0}
!3075 = !{!"000001F28334F730.w16.b16", !3066, i64 0}
!3076 = !{!3077, !3077, i64 0}
!3077 = !{!"000001F28334F730.w8.b24", !3075, i64 0}
!3078 = !{!3079, !3079, i64 0}
!3079 = !{!"000001F28334F730.w8.b32", !3080, i64 0}
!3080 = !{!"000001F28334F730.w16.b32", !3081, i64 0}
!3081 = !{!"000001F28334F730.w32.b32", !3067, i64 0}
!3082 = !{!3083, !3083, i64 0}
!3083 = !{!"000001F283350330.w8.b0", !3084, i64 0}
!3084 = !{!"000001F283350330.w16.b0", !3085, i64 0}
!3085 = !{!"000001F283350330.w32.b0", !3086, i64 0}
!3086 = !{!"000001F283350330.w64.b0", !3087, i64 0}
!3087 = !{!"000001F283350330.w128.b0", !3088, i64 0}
!3088 = !{!"000001F283350330.w256.b0", !3089, i64 0}
!3089 = !{!"000001F283350330.w512.b0", !3090, i64 0}
!3090 = !{!"000001F283350330.w1024.b0", !3091, i64 0}
!3091 = !{!"000001F283350330", !21, i64 0}
!3092 = !{!3093, !3093, i64 0}
!3093 = !{!"000001F283350330.w8.b8", !3084, i64 0}
!3094 = !{!3095, !3095, i64 0}
!3095 = !{!"000001F283350330.w8.b16", !3096, i64 0}
!3096 = !{!"000001F283350330.w16.b16", !3085, i64 0}
!3097 = !{!3098, !3098, i64 0}
!3098 = !{!"000001F283350330.w8.b24", !3096, i64 0}
!3099 = !{!3100, !3100, i64 0}
!3100 = !{!"000001F283350330.w8.b32", !3101, i64 0}
!3101 = !{!"000001F283350330.w16.b32", !3102, i64 0}
!3102 = !{!"000001F283350330.w32.b32", !3086, i64 0}
!3103 = !{!3104, !3104, i64 0}
!3104 = !{!"000001F283350330.w8.b40", !3101, i64 0}
!3105 = !{!3106, !3106, i64 0}
!3106 = !{!"000001F2833507B0.w8.b0", !3107, i64 0}
!3107 = !{!"000001F2833507B0.w16.b0", !3108, i64 0}
!3108 = !{!"000001F2833507B0.w32.b0", !3109, i64 0}
!3109 = !{!"000001F2833507B0.w64.b0", !3110, i64 0}
!3110 = !{!"000001F2833507B0.w128.b0", !3111, i64 0}
!3111 = !{!"000001F2833507B0.w256.b0", !3112, i64 0}
!3112 = !{!"000001F2833507B0.w512.b0", !3113, i64 0}
!3113 = !{!"000001F2833507B0.w1024.b0", !3114, i64 0}
!3114 = !{!"000001F2833507B0", !21, i64 0}
!3115 = !{!3116, !3116, i64 0}
!3116 = !{!"000001F2833507B0.w8.b8", !3107, i64 0}
!3117 = !{!3118, !3118, i64 0}
!3118 = !{!"000001F2833507B0.w8.b32", !3119, i64 0}
!3119 = !{!"000001F2833507B0.w16.b32", !3120, i64 0}
!3120 = !{!"000001F2833507B0.w32.b32", !3109, i64 0}
!3121 = !{!3122, !3122, i64 0}
!3122 = !{!"000001F2833507B0.w8.b40", !3119, i64 0}
!3123 = !{!3124, !3124, i64 0}
!3124 = !{!"000001F2833511F0.w8.b0", !3125, i64 0}
!3125 = !{!"000001F2833511F0.w16.b0", !3126, i64 0}
!3126 = !{!"000001F2833511F0.w32.b0", !3127, i64 0}
!3127 = !{!"000001F2833511F0.w64.b0", !3128, i64 0}
!3128 = !{!"000001F2833511F0.w128.b0", !3129, i64 0}
!3129 = !{!"000001F2833511F0.w256.b0", !3130, i64 0}
!3130 = !{!"000001F2833511F0.w512.b0", !3131, i64 0}
!3131 = !{!"000001F2833511F0.w1024.b0", !3132, i64 0}
!3132 = !{!"000001F2833511F0", !21, i64 0}
!3133 = !{!3134, !3134, i64 0}
!3134 = !{!"000001F2833511F0.w8.b8", !3125, i64 0}
!3135 = !{!3136, !3136, i64 0}
!3136 = !{!"000001F2833511F0.w8.b16", !3137, i64 0}
!3137 = !{!"000001F2833511F0.w16.b16", !3126, i64 0}
!3138 = !{!3139, !3139, i64 0}
!3139 = !{!"000001F2833511F0.w8.b24", !3137, i64 0}
!3140 = !{!3141, !3141, i64 0}
!3141 = !{!"000001F2833511F0.w8.b32", !3142, i64 0}
!3142 = !{!"000001F2833511F0.w16.b32", !3143, i64 0}
!3143 = !{!"000001F2833511F0.w32.b32", !3127, i64 0}
!3144 = !{!3145, !3145, i64 0}
!3145 = !{!"000001F2833514F0.w8.b8", !3146, i64 0}
!3146 = !{!"000001F2833514F0.w16.b0", !3147, i64 0}
!3147 = !{!"000001F2833514F0.w32.b0", !3148, i64 0}
!3148 = !{!"000001F2833514F0.w64.b0", !3149, i64 0}
!3149 = !{!"000001F2833514F0.w128.b0", !3150, i64 0}
!3150 = !{!"000001F2833514F0.w256.b0", !3151, i64 0}
!3151 = !{!"000001F2833514F0.w512.b0", !3152, i64 0}
!3152 = !{!"000001F2833514F0.w1024.b0", !3153, i64 0}
!3153 = !{!"000001F2833514F0", !21, i64 0}
!3154 = !{!3155, !3155, i64 0}
!3155 = !{!"000001F2833514F0.w8.b32", !3156, i64 0}
!3156 = !{!"000001F2833514F0.w16.b32", !3157, i64 0}
!3157 = !{!"000001F2833514F0.w32.b32", !3148, i64 0}
!3158 = !{!3159, !3159, i64 0}
!3159 = !{!"000001F283352B70.w8.b0", !3160, i64 0}
!3160 = !{!"000001F283352B70.w16.b0", !3161, i64 0}
!3161 = !{!"000001F283352B70.w32.b0", !3162, i64 0}
!3162 = !{!"000001F283352B70.w64.b0", !3163, i64 0}
!3163 = !{!"000001F283352B70.w128.b0", !3164, i64 0}
!3164 = !{!"000001F283352B70.w256.b0", !3165, i64 0}
!3165 = !{!"000001F283352B70.w512.b0", !3166, i64 0}
!3166 = !{!"000001F283352B70.w1024.b0", !3167, i64 0}
!3167 = !{!"000001F283352B70", !21, i64 0}
!3168 = !{!3169, !3169, i64 0}
!3169 = !{!"000001F283352B70.w8.b8", !3160, i64 0}
!3170 = !{!3171, !3171, i64 0}
!3171 = !{!"000001F283352B70.w8.b16", !3172, i64 0}
!3172 = !{!"000001F283352B70.w16.b16", !3161, i64 0}
!3173 = !{!3174, !3174, i64 0}
!3174 = !{!"000001F283352B70.w8.b24", !3172, i64 0}
!3175 = !{!3176, !3176, i64 0}
!3176 = !{!"000001F283352B70.w8.b32", !3177, i64 0}
!3177 = !{!"000001F283352B70.w16.b32", !3178, i64 0}
!3178 = !{!"000001F283352B70.w32.b32", !3162, i64 0}
!3179 = !{!3180, !3180, i64 0}
!3180 = !{!"000001F2833527B0.w8.b8", !3181, i64 0}
!3181 = !{!"000001F2833527B0.w16.b0", !3182, i64 0}
!3182 = !{!"000001F2833527B0.w32.b0", !3183, i64 0}
!3183 = !{!"000001F2833527B0.w64.b0", !3184, i64 0}
!3184 = !{!"000001F2833527B0.w128.b0", !3185, i64 0}
!3185 = !{!"000001F2833527B0.w256.b0", !3186, i64 0}
!3186 = !{!"000001F2833527B0.w512.b0", !3187, i64 0}
!3187 = !{!"000001F2833527B0.w1024.b0", !3188, i64 0}
!3188 = !{!"000001F2833527B0", !21, i64 0}
!3189 = !{!3190, !3190, i64 0}
!3190 = !{!"000001F2833527B0.w8.b16", !3191, i64 0}
!3191 = !{!"000001F2833527B0.w16.b16", !3182, i64 0}
!3192 = !{!3193, !3193, i64 0}
!3193 = !{!"000001F2833527B0.w8.b24", !3191, i64 0}
!3194 = !{!3195, !3195, i64 0}
!3195 = !{!"000001F2833527B0.w8.b32", !3196, i64 0}
!3196 = !{!"000001F2833527B0.w16.b32", !3197, i64 0}
!3197 = !{!"000001F2833527B0.w32.b32", !3183, i64 0}
!3198 = !{!3199, !3199, i64 0}
!3199 = !{!"000001F2833539B0.w8.b0", !3200, i64 0}
!3200 = !{!"000001F2833539B0.w16.b0", !3201, i64 0}
!3201 = !{!"000001F2833539B0.w32.b0", !3202, i64 0}
!3202 = !{!"000001F2833539B0.w64.b0", !3203, i64 0}
!3203 = !{!"000001F2833539B0.w128.b0", !3204, i64 0}
!3204 = !{!"000001F2833539B0.w256.b0", !3205, i64 0}
!3205 = !{!"000001F2833539B0.w512.b0", !3206, i64 0}
!3206 = !{!"000001F2833539B0.w1024.b0", !3207, i64 0}
!3207 = !{!"000001F2833539B0", !21, i64 0}
!3208 = !{!3209, !3209, i64 0}
!3209 = !{!"000001F2833539B0.w8.b8", !3200, i64 0}
!3210 = !{!3211, !3211, i64 0}
!3211 = !{!"000001F2833539B0.w8.b16", !3212, i64 0}
!3212 = !{!"000001F2833539B0.w16.b16", !3201, i64 0}
!3213 = !{!3214, !3214, i64 0}
!3214 = !{!"000001F2833539B0.w8.b24", !3212, i64 0}
!3215 = !{!3216, !3216, i64 0}
!3216 = !{!"000001F2833539B0.w8.b32", !3217, i64 0}
!3217 = !{!"000001F2833539B0.w16.b32", !3218, i64 0}
!3218 = !{!"000001F2833539B0.w32.b32", !3202, i64 0}
!3219 = !{!3220, !3220, i64 0}
!3220 = !{!"000001F283353FB0.w8.b8", !3221, i64 0}
!3221 = !{!"000001F283353FB0.w16.b0", !3222, i64 0}
!3222 = !{!"000001F283353FB0.w32.b0", !3223, i64 0}
!3223 = !{!"000001F283353FB0.w64.b0", !3224, i64 0}
!3224 = !{!"000001F283353FB0.w128.b0", !3225, i64 0}
!3225 = !{!"000001F283353FB0.w256.b0", !3226, i64 0}
!3226 = !{!"000001F283353FB0.w512.b0", !3227, i64 0}
!3227 = !{!"000001F283353FB0.w1024.b0", !3228, i64 0}
!3228 = !{!"000001F283353FB0", !21, i64 0}
!3229 = !{!3230, !3230, i64 0}
!3230 = !{!"000001F283353FB0.w8.b16", !3231, i64 0}
!3231 = !{!"000001F283353FB0.w16.b16", !3222, i64 0}
!3232 = !{!3233, !3233, i64 0}
!3233 = !{!"000001F283353FB0.w8.b24", !3231, i64 0}
!3234 = !{!3235, !3235, i64 0}
!3235 = !{!"000001F283353FB0.w8.b32", !3236, i64 0}
!3236 = !{!"000001F283353FB0.w16.b32", !3237, i64 0}
!3237 = !{!"000001F283353FB0.w32.b32", !3223, i64 0}
!3238 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3239)
!3239 = !{!3240, !3241, !3242, !3243, !3244, !3245}
!3240 = !DILocalVariable(name: "arg1", arg: 1, scope: !3238, file: !1, type: !8)
!3241 = !DILocalVariable(name: "arg2", arg: 2, scope: !3238, file: !1, type: !9)
!3242 = !DILocalVariable(name: "arg3", arg: 3, scope: !3238, file: !1, type: !7)
!3243 = !DILocalVariable(name: "arg4", arg: 4, scope: !3238, file: !1, type: !8)
!3244 = !DILocalVariable(name: "arg5", arg: 5, scope: !3238, file: !1, type: !9)
!3245 = !DILocalVariable(name: "arg6", arg: 6, scope: !3238, file: !1, type: !8)
!3246 = !DILocation(line: 0, scope: !3238)
!3247 = !{!3248, !3248, i64 0}
!3248 = !{!"000001F2EABF6010.w4.b0", !3249, i64 0}
!3249 = !{!"000001F2EABF6010.w8.b0", !3250, i64 0}
!3250 = !{!"000001F2EABF6010.w16.b0", !3251, i64 0}
!3251 = !{!"000001F2EABF6010.w32.b0", !3252, i64 0}
!3252 = !{!"000001F2EABF6010.w64.b0", !3253, i64 0}
!3253 = !{!"000001F2EABF6010.w128.b0", !3254, i64 0}
!3254 = !{!"000001F2EABF6010.w256.b0", !3255, i64 0}
!3255 = !{!"000001F2EABF6010.w512.b0", !3256, i64 0}
!3256 = !{!"000001F2EABF6010.w1024.b0", !3257, i64 0}
!3257 = !{!"000001F2EABF6010", !21, i64 0}
!3258 = !{!3259, !3259, i64 0}
!3259 = !{!"000001F2EABF6010.w4.b4", !3249, i64 0}
!3260 = !{!3261, !3261, i64 0}
!3261 = !{!"000001F2EABF6010.w4.b8", !3262, i64 0}
!3262 = !{!"000001F2EABF6010.w8.b8", !3250, i64 0}
!3263 = !{!3264, !3264, i64 0}
!3264 = !{!"000001F2EABF6010.w4.b12", !3262, i64 0}
!3265 = !{!3266, !3266, i64 0}
!3266 = !{!"000001F2EABF6010.w4.b16", !3267, i64 0}
!3267 = !{!"000001F2EABF6010.w8.b16", !3268, i64 0}
!3268 = !{!"000001F2EABF6010.w16.b16", !3251, i64 0}
!3269 = !{!3270, !3270, i64 0}
!3270 = !{!"000001F2EEACA2F0.w8.b0", !3271, i64 0}
!3271 = !{!"000001F2EEACA2F0.w16.b0", !3272, i64 0}
!3272 = !{!"000001F2EEACA2F0.w32.b0", !3273, i64 0}
!3273 = !{!"000001F2EEACA2F0.w64.b0", !3274, i64 0}
!3274 = !{!"000001F2EEACA2F0.w128.b0", !3275, i64 0}
!3275 = !{!"000001F2EEACA2F0.w256.b0", !3276, i64 0}
!3276 = !{!"000001F2EEACA2F0.w512.b0", !3277, i64 0}
!3277 = !{!"000001F2EEACA2F0.w1024.b0", !3278, i64 0}
!3278 = !{!"000001F2EEACA2F0", !21, i64 0}
!3279 = !{!3280, !3280, i64 0}
!3280 = !{!"000001F2EEACA2F0.w8.b8", !3271, i64 0}
!3281 = !{!3282, !3282, i64 0}
!3282 = !{!"000001F2EEACA2F0.w8.b16", !3283, i64 0}
!3283 = !{!"000001F2EEACA2F0.w16.b16", !3272, i64 0}
!3284 = !{!3285, !3285, i64 0}
!3285 = !{!"000001F2EEACA2F0.w8.b24", !3283, i64 0}
!3286 = !{!3287, !3287, i64 0}
!3287 = !{!"000001F2EEACA2F0.w8.b32", !3288, i64 0}
!3288 = !{!"000001F2EEACA2F0.w16.b32", !3289, i64 0}
!3289 = !{!"000001F2EEACA2F0.w32.b32", !3273, i64 0}
!3290 = !{!3291, !3291, i64 0}
!3291 = !{!"000001F2EAEEA1F0.w8.b8", !3292, i64 0}
!3292 = !{!"000001F2EAEEA1F0.w16.b0", !3293, i64 0}
!3293 = !{!"000001F2EAEEA1F0.w32.b0", !3294, i64 0}
!3294 = !{!"000001F2EAEEA1F0.w64.b0", !3295, i64 0}
!3295 = !{!"000001F2EAEEA1F0.w128.b0", !3296, i64 0}
!3296 = !{!"000001F2EAEEA1F0.w256.b0", !3297, i64 0}
!3297 = !{!"000001F2EAEEA1F0.w512.b0", !3298, i64 0}
!3298 = !{!"000001F2EAEEA1F0.w1024.b0", !3299, i64 0}
!3299 = !{!"000001F2EAEEA1F0", !21, i64 0}
!3300 = !{!3301, !3301, i64 0}
!3301 = !{!"000001F2EAEEA1F0.w8.b16", !3302, i64 0}
!3302 = !{!"000001F2EAEEA1F0.w16.b16", !3293, i64 0}
!3303 = !{!3304, !3304, i64 0}
!3304 = !{!"000001F2EAEEA1F0.w8.b24", !3302, i64 0}
!3305 = !{!3306, !3306, i64 0}
!3306 = !{!"000001F2EAEEA1F0.w8.b32", !3307, i64 0}
!3307 = !{!"000001F2EAEEA1F0.w16.b32", !3308, i64 0}
!3308 = !{!"000001F2EAEEA1F0.w32.b32", !3294, i64 0}
!3309 = !{!3310, !3310, i64 0}
!3310 = !{!"000001F2EF92B9E0.w8.b0", !3311, i64 0}
!3311 = !{!"000001F2EF92B9E0.w16.b0", !3312, i64 0}
!3312 = !{!"000001F2EF92B9E0.w32.b0", !3313, i64 0}
!3313 = !{!"000001F2EF92B9E0.w64.b0", !3314, i64 0}
!3314 = !{!"000001F2EF92B9E0.w128.b0", !3315, i64 0}
!3315 = !{!"000001F2EF92B9E0.w256.b0", !3316, i64 0}
!3316 = !{!"000001F2EF92B9E0.w512.b0", !3317, i64 0}
!3317 = !{!"000001F2EF92B9E0.w1024.b0", !3318, i64 0}
!3318 = !{!"000001F2EF92B9E0", !21, i64 0}
!3319 = !{!3320, !3320, i64 0}
!3320 = !{!"000001F2EF92B9E0.w8.b8", !3311, i64 0}
!3321 = !{!3322, !3322, i64 0}
!3322 = !{!"000001F2EF92B9E0.w8.b16", !3323, i64 0}
!3323 = !{!"000001F2EF92B9E0.w16.b16", !3312, i64 0}
!3324 = !{!3325, !3325, i64 0}
!3325 = !{!"000001F2EF92B9E0.w8.b24", !3323, i64 0}
!3326 = !{!3327, !3327, i64 0}
!3327 = !{!"000001F2EF92B9E0.w8.b32", !3328, i64 0}
!3328 = !{!"000001F2EF92B9E0.w16.b32", !3329, i64 0}
!3329 = !{!"000001F2EF92B9E0.w32.b32", !3313, i64 0}
!3330 = !{!3331, !3331, i64 0}
!3331 = !{!"000001F2EF92B9E0.w8.b40", !3328, i64 0}
!3332 = !{!3333, !3333, i64 0}
!3333 = !{!"000001F2E9D4D6E0.w8.b0", !3334, i64 0}
!3334 = !{!"000001F2E9D4D6E0.w16.b0", !3335, i64 0}
!3335 = !{!"000001F2E9D4D6E0.w32.b0", !3336, i64 0}
!3336 = !{!"000001F2E9D4D6E0.w64.b0", !3337, i64 0}
!3337 = !{!"000001F2E9D4D6E0.w128.b0", !3338, i64 0}
!3338 = !{!"000001F2E9D4D6E0.w256.b0", !3339, i64 0}
!3339 = !{!"000001F2E9D4D6E0.w512.b0", !3340, i64 0}
!3340 = !{!"000001F2E9D4D6E0.w1024.b0", !3341, i64 0}
!3341 = !{!"000001F2E9D4D6E0", !21, i64 0}
!3342 = !{!3343, !3343, i64 0}
!3343 = !{!"000001F2E9D4D6E0.w8.b8", !3334, i64 0}
!3344 = !{!3345, !3345, i64 0}
!3345 = !{!"000001F2E9D4D6E0.w8.b32", !3346, i64 0}
!3346 = !{!"000001F2E9D4D6E0.w16.b32", !3347, i64 0}
!3347 = !{!"000001F2E9D4D6E0.w32.b32", !3336, i64 0}
!3348 = !{!3349, !3349, i64 0}
!3349 = !{!"000001F2E9D4D6E0.w8.b40", !3346, i64 0}
!3350 = !{!3351, !3351, i64 0}
!3351 = !{!"000001F2EC0974E0.w8.b0", !3352, i64 0}
!3352 = !{!"000001F2EC0974E0.w16.b0", !3353, i64 0}
!3353 = !{!"000001F2EC0974E0.w32.b0", !3354, i64 0}
!3354 = !{!"000001F2EC0974E0.w64.b0", !3355, i64 0}
!3355 = !{!"000001F2EC0974E0.w128.b0", !3356, i64 0}
!3356 = !{!"000001F2EC0974E0.w256.b0", !3357, i64 0}
!3357 = !{!"000001F2EC0974E0.w512.b0", !3358, i64 0}
!3358 = !{!"000001F2EC0974E0.w1024.b0", !3359, i64 0}
!3359 = !{!"000001F2EC0974E0", !21, i64 0}
!3360 = !{!3361, !3361, i64 0}
!3361 = !{!"000001F2EC0974E0.w8.b8", !3352, i64 0}
!3362 = !{!3363, !3363, i64 0}
!3363 = !{!"000001F2EC0974E0.w8.b16", !3364, i64 0}
!3364 = !{!"000001F2EC0974E0.w16.b16", !3353, i64 0}
!3365 = !{!3366, !3366, i64 0}
!3366 = !{!"000001F2EC0974E0.w8.b24", !3364, i64 0}
!3367 = !{!3368, !3368, i64 0}
!3368 = !{!"000001F2EC0974E0.w8.b32", !3369, i64 0}
!3369 = !{!"000001F2EC0974E0.w16.b32", !3370, i64 0}
!3370 = !{!"000001F2EC0974E0.w32.b32", !3354, i64 0}
!3371 = !{!3372, !3372, i64 0}
!3372 = !{!"000001F2E8758AE0.w8.b8", !3373, i64 0}
!3373 = !{!"000001F2E8758AE0.w16.b0", !3374, i64 0}
!3374 = !{!"000001F2E8758AE0.w32.b0", !3375, i64 0}
!3375 = !{!"000001F2E8758AE0.w64.b0", !3376, i64 0}
!3376 = !{!"000001F2E8758AE0.w128.b0", !3377, i64 0}
!3377 = !{!"000001F2E8758AE0.w256.b0", !3378, i64 0}
!3378 = !{!"000001F2E8758AE0.w512.b0", !3379, i64 0}
!3379 = !{!"000001F2E8758AE0.w1024.b0", !3380, i64 0}
!3380 = !{!"000001F2E8758AE0", !21, i64 0}
!3381 = !{!3382, !3382, i64 0}
!3382 = !{!"000001F2E8758AE0.w8.b32", !3383, i64 0}
!3383 = !{!"000001F2E8758AE0.w16.b32", !3384, i64 0}
!3384 = !{!"000001F2E8758AE0.w32.b32", !3375, i64 0}
!3385 = !{!3386, !3386, i64 0}
!3386 = !{!"000001F2EF585CA0.w8.b0", !3387, i64 0}
!3387 = !{!"000001F2EF585CA0.w16.b0", !3388, i64 0}
!3388 = !{!"000001F2EF585CA0.w32.b0", !3389, i64 0}
!3389 = !{!"000001F2EF585CA0.w64.b0", !3390, i64 0}
!3390 = !{!"000001F2EF585CA0.w128.b0", !3391, i64 0}
!3391 = !{!"000001F2EF585CA0.w256.b0", !3392, i64 0}
!3392 = !{!"000001F2EF585CA0.w512.b0", !3393, i64 0}
!3393 = !{!"000001F2EF585CA0.w1024.b0", !3394, i64 0}
!3394 = !{!"000001F2EF585CA0", !21, i64 0}
!3395 = !{!3396, !3396, i64 0}
!3396 = !{!"000001F2EF585CA0.w8.b8", !3387, i64 0}
!3397 = !{!3398, !3398, i64 0}
!3398 = !{!"000001F2EF585CA0.w8.b16", !3399, i64 0}
!3399 = !{!"000001F2EF585CA0.w16.b16", !3388, i64 0}
!3400 = !{!3401, !3401, i64 0}
!3401 = !{!"000001F2EF585CA0.w8.b24", !3399, i64 0}
!3402 = !{!3403, !3403, i64 0}
!3403 = !{!"000001F2EF585CA0.w8.b32", !3404, i64 0}
!3404 = !{!"000001F2EF585CA0.w16.b32", !3405, i64 0}
!3405 = !{!"000001F2EF585CA0.w32.b32", !3389, i64 0}
!3406 = !{!3407, !3407, i64 0}
!3407 = !{!"000001F2EAAD7260.w8.b8", !3408, i64 0}
!3408 = !{!"000001F2EAAD7260.w16.b0", !3409, i64 0}
!3409 = !{!"000001F2EAAD7260.w32.b0", !3410, i64 0}
!3410 = !{!"000001F2EAAD7260.w64.b0", !3411, i64 0}
!3411 = !{!"000001F2EAAD7260.w128.b0", !3412, i64 0}
!3412 = !{!"000001F2EAAD7260.w256.b0", !3413, i64 0}
!3413 = !{!"000001F2EAAD7260.w512.b0", !3414, i64 0}
!3414 = !{!"000001F2EAAD7260.w1024.b0", !3415, i64 0}
!3415 = !{!"000001F2EAAD7260", !21, i64 0}
!3416 = !{!3417, !3417, i64 0}
!3417 = !{!"000001F2EAAD7260.w8.b16", !3418, i64 0}
!3418 = !{!"000001F2EAAD7260.w16.b16", !3409, i64 0}
!3419 = !{!3420, !3420, i64 0}
!3420 = !{!"000001F2EAAD7260.w8.b24", !3418, i64 0}
!3421 = !{!3422, !3422, i64 0}
!3422 = !{!"000001F2EAAD7260.w8.b32", !3423, i64 0}
!3423 = !{!"000001F2EAAD7260.w16.b32", !3424, i64 0}
!3424 = !{!"000001F2EAAD7260.w32.b32", !3410, i64 0}
!3425 = !{!3426, !3426, i64 0}
!3426 = !{!"000001F2FC557200.w8.b0", !3427, i64 0}
!3427 = !{!"000001F2FC557200.w16.b0", !3428, i64 0}
!3428 = !{!"000001F2FC557200.w32.b0", !3429, i64 0}
!3429 = !{!"000001F2FC557200.w64.b0", !3430, i64 0}
!3430 = !{!"000001F2FC557200.w128.b0", !3431, i64 0}
!3431 = !{!"000001F2FC557200.w256.b0", !3432, i64 0}
!3432 = !{!"000001F2FC557200.w512.b0", !3433, i64 0}
!3433 = !{!"000001F2FC557200.w1024.b0", !3434, i64 0}
!3434 = !{!"000001F2FC557200", !21, i64 0}
!3435 = !{!3436, !3436, i64 0}
!3436 = !{!"000001F2FC557200.w8.b8", !3427, i64 0}
!3437 = !{!3438, !3438, i64 0}
!3438 = !{!"000001F2FC557200.w8.b16", !3439, i64 0}
!3439 = !{!"000001F2FC557200.w16.b16", !3428, i64 0}
!3440 = !{!3441, !3441, i64 0}
!3441 = !{!"000001F2FC557200.w8.b24", !3439, i64 0}
!3442 = !{!3443, !3443, i64 0}
!3443 = !{!"000001F2FC557200.w8.b32", !3444, i64 0}
!3444 = !{!"000001F2FC557200.w16.b32", !3445, i64 0}
!3445 = !{!"000001F2FC557200.w32.b32", !3429, i64 0}
!3446 = !{!3447, !3447, i64 0}
!3447 = !{!"000001F2FC557840.w8.b8", !3448, i64 0}
!3448 = !{!"000001F2FC557840.w16.b0", !3449, i64 0}
!3449 = !{!"000001F2FC557840.w32.b0", !3450, i64 0}
!3450 = !{!"000001F2FC557840.w64.b0", !3451, i64 0}
!3451 = !{!"000001F2FC557840.w128.b0", !3452, i64 0}
!3452 = !{!"000001F2FC557840.w256.b0", !3453, i64 0}
!3453 = !{!"000001F2FC557840.w512.b0", !3454, i64 0}
!3454 = !{!"000001F2FC557840.w1024.b0", !3455, i64 0}
!3455 = !{!"000001F2FC557840", !21, i64 0}
!3456 = !{!3457, !3457, i64 0}
!3457 = !{!"000001F2FC557840.w8.b16", !3458, i64 0}
!3458 = !{!"000001F2FC557840.w16.b16", !3449, i64 0}
!3459 = !{!3460, !3460, i64 0}
!3460 = !{!"000001F2FC557840.w8.b24", !3458, i64 0}
!3461 = !{!3462, !3462, i64 0}
!3462 = !{!"000001F2FC557840.w8.b32", !3463, i64 0}
!3463 = !{!"000001F2FC557840.w16.b32", !3464, i64 0}
!3464 = !{!"000001F2FC557840.w32.b32", !3450, i64 0}
!3465 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3466)
!3466 = !{!3467, !3468, !3469, !3470, !3471, !3472}
!3467 = !DILocalVariable(name: "arg1", arg: 1, scope: !3465, file: !1, type: !8)
!3468 = !DILocalVariable(name: "arg2", arg: 2, scope: !3465, file: !1, type: !9)
!3469 = !DILocalVariable(name: "arg3", arg: 3, scope: !3465, file: !1, type: !7)
!3470 = !DILocalVariable(name: "arg4", arg: 4, scope: !3465, file: !1, type: !8)
!3471 = !DILocalVariable(name: "arg5", arg: 5, scope: !3465, file: !1, type: !9)
!3472 = !DILocalVariable(name: "arg6", arg: 6, scope: !3465, file: !1, type: !8)
!3473 = !DILocation(line: 0, scope: !3465)
!3474 = !{!3475, !3475, i64 0}
!3475 = !{!"000001F28338ECE0.w4.b0", !3476, i64 0}
!3476 = !{!"000001F28338ECE0.w8.b0", !3477, i64 0}
!3477 = !{!"000001F28338ECE0.w16.b0", !3478, i64 0}
!3478 = !{!"000001F28338ECE0.w32.b0", !3479, i64 0}
!3479 = !{!"000001F28338ECE0.w64.b0", !3480, i64 0}
!3480 = !{!"000001F28338ECE0.w128.b0", !3481, i64 0}
!3481 = !{!"000001F28338ECE0.w256.b0", !3482, i64 0}
!3482 = !{!"000001F28338ECE0.w512.b0", !3483, i64 0}
!3483 = !{!"000001F28338ECE0.w1024.b0", !3484, i64 0}
!3484 = !{!"000001F28338ECE0", !21, i64 0}
!3485 = !{!3486, !3486, i64 0}
!3486 = !{!"000001F28338ECE0.w4.b4", !3476, i64 0}
!3487 = !{!3488, !3488, i64 0}
!3488 = !{!"000001F28338ECE0.w4.b8", !3489, i64 0}
!3489 = !{!"000001F28338ECE0.w8.b8", !3477, i64 0}
!3490 = !{!3491, !3491, i64 0}
!3491 = !{!"000001F28338ECE0.w4.b12", !3489, i64 0}
!3492 = !{!3493, !3493, i64 0}
!3493 = !{!"000001F28338ECE0.w4.b16", !3494, i64 0}
!3494 = !{!"000001F28338ECE0.w8.b16", !3495, i64 0}
!3495 = !{!"000001F28338ECE0.w16.b16", !3478, i64 0}
!3496 = !{!3497, !3497, i64 0}
!3497 = !{!"000001F283392520.w8.b0", !3498, i64 0}
!3498 = !{!"000001F283392520.w16.b0", !3499, i64 0}
!3499 = !{!"000001F283392520.w32.b0", !3500, i64 0}
!3500 = !{!"000001F283392520.w64.b0", !3501, i64 0}
!3501 = !{!"000001F283392520.w128.b0", !3502, i64 0}
!3502 = !{!"000001F283392520.w256.b0", !3503, i64 0}
!3503 = !{!"000001F283392520.w512.b0", !3504, i64 0}
!3504 = !{!"000001F283392520.w1024.b0", !3505, i64 0}
!3505 = !{!"000001F283392520", !21, i64 0}
!3506 = !{!3507, !3507, i64 0}
!3507 = !{!"000001F283392520.w8.b8", !3498, i64 0}
!3508 = !{!3509, !3509, i64 0}
!3509 = !{!"000001F283392520.w8.b16", !3510, i64 0}
!3510 = !{!"000001F283392520.w16.b16", !3499, i64 0}
!3511 = !{!3512, !3512, i64 0}
!3512 = !{!"000001F283392520.w8.b24", !3510, i64 0}
!3513 = !{!3514, !3514, i64 0}
!3514 = !{!"000001F283392520.w8.b32", !3515, i64 0}
!3515 = !{!"000001F283392520.w16.b32", !3516, i64 0}
!3516 = !{!"000001F283392520.w32.b32", !3500, i64 0}
!3517 = !{!3518, !3518, i64 0}
!3518 = !{!"000001F283394AE0.w8.b16", !3519, i64 0}
!3519 = !{!"000001F283394AE0.w16.b16", !3520, i64 0}
!3520 = !{!"000001F283394AE0.w32.b0", !3521, i64 0}
!3521 = !{!"000001F283394AE0.w64.b0", !3522, i64 0}
!3522 = !{!"000001F283394AE0.w128.b0", !3523, i64 0}
!3523 = !{!"000001F283394AE0.w256.b0", !3524, i64 0}
!3524 = !{!"000001F283394AE0.w512.b0", !3525, i64 0}
!3525 = !{!"000001F283394AE0.w1024.b0", !3526, i64 0}
!3526 = !{!"000001F283394AE0", !21, i64 0}
!3527 = !{!3528, !3528, i64 0}
!3528 = !{!"000001F283394AE0.w8.b24", !3519, i64 0}
!3529 = !{!3530, !3530, i64 0}
!3530 = !{!"000001F283394AE0.w8.b32", !3531, i64 0}
!3531 = !{!"000001F283394AE0.w16.b32", !3532, i64 0}
!3532 = !{!"000001F283394AE0.w32.b32", !3521, i64 0}
!3533 = !{!3534, !3534, i64 0}
!3534 = !{!"000001F283394720.w8.b0", !3535, i64 0}
!3535 = !{!"000001F283394720.w16.b0", !3536, i64 0}
!3536 = !{!"000001F283394720.w32.b0", !3537, i64 0}
!3537 = !{!"000001F283394720.w64.b0", !3538, i64 0}
!3538 = !{!"000001F283394720.w128.b0", !3539, i64 0}
!3539 = !{!"000001F283394720.w256.b0", !3540, i64 0}
!3540 = !{!"000001F283394720.w512.b0", !3541, i64 0}
!3541 = !{!"000001F283394720.w1024.b0", !3542, i64 0}
!3542 = !{!"000001F283394720", !21, i64 0}
!3543 = !{!3544, !3544, i64 0}
!3544 = !{!"000001F283394720.w8.b8", !3535, i64 0}
!3545 = !{!3546, !3546, i64 0}
!3546 = !{!"000001F283394720.w8.b16", !3547, i64 0}
!3547 = !{!"000001F283394720.w16.b16", !3536, i64 0}
!3548 = !{!3549, !3549, i64 0}
!3549 = !{!"000001F283394720.w8.b24", !3547, i64 0}
!3550 = !{!3551, !3551, i64 0}
!3551 = !{!"000001F283394720.w8.b32", !3552, i64 0}
!3552 = !{!"000001F283394720.w16.b32", !3553, i64 0}
!3553 = !{!"000001F283394720.w32.b32", !3537, i64 0}
!3554 = !{!3555, !3555, i64 0}
!3555 = !{!"000001F283394720.w8.b40", !3552, i64 0}
!3556 = !{!3557, !3557, i64 0}
!3557 = !{!"000001F2833951A0.w8.b0", !3558, i64 0}
!3558 = !{!"000001F2833951A0.w16.b0", !3559, i64 0}
!3559 = !{!"000001F2833951A0.w32.b0", !3560, i64 0}
!3560 = !{!"000001F2833951A0.w64.b0", !3561, i64 0}
!3561 = !{!"000001F2833951A0.w128.b0", !3562, i64 0}
!3562 = !{!"000001F2833951A0.w256.b0", !3563, i64 0}
!3563 = !{!"000001F2833951A0.w512.b0", !3564, i64 0}
!3564 = !{!"000001F2833951A0.w1024.b0", !3565, i64 0}
!3565 = !{!"000001F2833951A0", !21, i64 0}
!3566 = !{!3567, !3567, i64 0}
!3567 = !{!"000001F2833951A0.w8.b32", !3568, i64 0}
!3568 = !{!"000001F2833951A0.w16.b32", !3569, i64 0}
!3569 = !{!"000001F2833951A0.w32.b32", !3560, i64 0}
!3570 = !{!3571, !3571, i64 0}
!3571 = !{!"000001F2833951A0.w8.b40", !3568, i64 0}
!3572 = !{!3573, !3573, i64 0}
!3573 = !{!"000001F283395E60.w8.b0", !3574, i64 0}
!3574 = !{!"000001F283395E60.w16.b0", !3575, i64 0}
!3575 = !{!"000001F283395E60.w32.b0", !3576, i64 0}
!3576 = !{!"000001F283395E60.w64.b0", !3577, i64 0}
!3577 = !{!"000001F283395E60.w128.b0", !3578, i64 0}
!3578 = !{!"000001F283395E60.w256.b0", !3579, i64 0}
!3579 = !{!"000001F283395E60.w512.b0", !3580, i64 0}
!3580 = !{!"000001F283395E60.w1024.b0", !3581, i64 0}
!3581 = !{!"000001F283395E60", !21, i64 0}
!3582 = !{!3583, !3583, i64 0}
!3583 = !{!"000001F283395E60.w8.b8", !3574, i64 0}
!3584 = !{!3585, !3585, i64 0}
!3585 = !{!"000001F283395E60.w8.b16", !3586, i64 0}
!3586 = !{!"000001F283395E60.w16.b16", !3575, i64 0}
!3587 = !{!3588, !3588, i64 0}
!3588 = !{!"000001F283395E60.w8.b24", !3586, i64 0}
!3589 = !{!3590, !3590, i64 0}
!3590 = !{!"000001F283395E60.w8.b32", !3591, i64 0}
!3591 = !{!"000001F283395E60.w16.b32", !3592, i64 0}
!3592 = !{!"000001F283395E60.w32.b32", !3576, i64 0}
!3593 = !{!3594, !3594, i64 0}
!3594 = !{!"000001F2833968E0.w8.b8", !3595, i64 0}
!3595 = !{!"000001F2833968E0.w16.b0", !3596, i64 0}
!3596 = !{!"000001F2833968E0.w32.b0", !3597, i64 0}
!3597 = !{!"000001F2833968E0.w64.b0", !3598, i64 0}
!3598 = !{!"000001F2833968E0.w128.b0", !3599, i64 0}
!3599 = !{!"000001F2833968E0.w256.b0", !3600, i64 0}
!3600 = !{!"000001F2833968E0.w512.b0", !3601, i64 0}
!3601 = !{!"000001F2833968E0.w1024.b0", !3602, i64 0}
!3602 = !{!"000001F2833968E0", !21, i64 0}
!3603 = !{!3604, !3604, i64 0}
!3604 = !{!"000001F2833968E0.w8.b32", !3605, i64 0}
!3605 = !{!"000001F2833968E0.w16.b32", !3606, i64 0}
!3606 = !{!"000001F2833968E0.w32.b32", !3597, i64 0}
!3607 = !{!3608, !3608, i64 0}
!3608 = !{!"000001F283396720.w8.b0", !3609, i64 0}
!3609 = !{!"000001F283396720.w16.b0", !3610, i64 0}
!3610 = !{!"000001F283396720.w32.b0", !3611, i64 0}
!3611 = !{!"000001F283396720.w64.b0", !3612, i64 0}
!3612 = !{!"000001F283396720.w128.b0", !3613, i64 0}
!3613 = !{!"000001F283396720.w256.b0", !3614, i64 0}
!3614 = !{!"000001F283396720.w512.b0", !3615, i64 0}
!3615 = !{!"000001F283396720.w1024.b0", !3616, i64 0}
!3616 = !{!"000001F283396720", !21, i64 0}
!3617 = !{!3618, !3618, i64 0}
!3618 = !{!"000001F283396720.w8.b8", !3609, i64 0}
!3619 = !{!3620, !3620, i64 0}
!3620 = !{!"000001F283396720.w8.b16", !3621, i64 0}
!3621 = !{!"000001F283396720.w16.b16", !3610, i64 0}
!3622 = !{!3623, !3623, i64 0}
!3623 = !{!"000001F283396720.w8.b24", !3621, i64 0}
!3624 = !{!3625, !3625, i64 0}
!3625 = !{!"000001F283396720.w8.b32", !3626, i64 0}
!3626 = !{!"000001F283396720.w16.b32", !3627, i64 0}
!3627 = !{!"000001F283396720.w32.b32", !3611, i64 0}
!3628 = !{!3629, !3629, i64 0}
!3629 = !{!"000001F2833974E0.w8.b8", !3630, i64 0}
!3630 = !{!"000001F2833974E0.w16.b0", !3631, i64 0}
!3631 = !{!"000001F2833974E0.w32.b0", !3632, i64 0}
!3632 = !{!"000001F2833974E0.w64.b0", !3633, i64 0}
!3633 = !{!"000001F2833974E0.w128.b0", !3634, i64 0}
!3634 = !{!"000001F2833974E0.w256.b0", !3635, i64 0}
!3635 = !{!"000001F2833974E0.w512.b0", !3636, i64 0}
!3636 = !{!"000001F2833974E0.w1024.b0", !3637, i64 0}
!3637 = !{!"000001F2833974E0", !21, i64 0}
!3638 = !{!3639, !3639, i64 0}
!3639 = !{!"000001F2833974E0.w8.b16", !3640, i64 0}
!3640 = !{!"000001F2833974E0.w16.b16", !3631, i64 0}
!3641 = !{!3642, !3642, i64 0}
!3642 = !{!"000001F2833974E0.w8.b24", !3640, i64 0}
!3643 = !{!3644, !3644, i64 0}
!3644 = !{!"000001F2833974E0.w8.b32", !3645, i64 0}
!3645 = !{!"000001F2833974E0.w16.b32", !3646, i64 0}
!3646 = !{!"000001F2833974E0.w32.b32", !3632, i64 0}
!3647 = !{!3648, !3648, i64 0}
!3648 = !{!"000001F2833973E0.w8.b0", !3649, i64 0}
!3649 = !{!"000001F2833973E0.w16.b0", !3650, i64 0}
!3650 = !{!"000001F2833973E0.w32.b0", !3651, i64 0}
!3651 = !{!"000001F2833973E0.w64.b0", !3652, i64 0}
!3652 = !{!"000001F2833973E0.w128.b0", !3653, i64 0}
!3653 = !{!"000001F2833973E0.w256.b0", !3654, i64 0}
!3654 = !{!"000001F2833973E0.w512.b0", !3655, i64 0}
!3655 = !{!"000001F2833973E0.w1024.b0", !3656, i64 0}
!3656 = !{!"000001F2833973E0", !21, i64 0}
!3657 = !{!3658, !3658, i64 0}
!3658 = !{!"000001F2833973E0.w8.b8", !3649, i64 0}
!3659 = !{!3660, !3660, i64 0}
!3660 = !{!"000001F2833973E0.w8.b16", !3661, i64 0}
!3661 = !{!"000001F2833973E0.w16.b16", !3650, i64 0}
!3662 = !{!3663, !3663, i64 0}
!3663 = !{!"000001F2833973E0.w8.b24", !3661, i64 0}
!3664 = !{!3665, !3665, i64 0}
!3665 = !{!"000001F2833973E0.w8.b32", !3666, i64 0}
!3666 = !{!"000001F2833973E0.w16.b32", !3667, i64 0}
!3667 = !{!"000001F2833973E0.w32.b32", !3651, i64 0}
!3668 = !{!3669, !3669, i64 0}
!3669 = !{!"000001F2833981E0.w8.b8", !3670, i64 0}
!3670 = !{!"000001F2833981E0.w16.b0", !3671, i64 0}
!3671 = !{!"000001F2833981E0.w32.b0", !3672, i64 0}
!3672 = !{!"000001F2833981E0.w64.b0", !3673, i64 0}
!3673 = !{!"000001F2833981E0.w128.b0", !3674, i64 0}
!3674 = !{!"000001F2833981E0.w256.b0", !3675, i64 0}
!3675 = !{!"000001F2833981E0.w512.b0", !3676, i64 0}
!3676 = !{!"000001F2833981E0.w1024.b0", !3677, i64 0}
!3677 = !{!"000001F2833981E0", !21, i64 0}
!3678 = !{!3679, !3679, i64 0}
!3679 = !{!"000001F2833981E0.w8.b16", !3680, i64 0}
!3680 = !{!"000001F2833981E0.w16.b16", !3671, i64 0}
!3681 = !{!3682, !3682, i64 0}
!3682 = !{!"000001F2833981E0.w8.b24", !3680, i64 0}
!3683 = !{!3684, !3684, i64 0}
!3684 = !{!"000001F2833981E0.w8.b32", !3685, i64 0}
!3685 = !{!"000001F2833981E0.w16.b32", !3686, i64 0}
!3686 = !{!"000001F2833981E0.w32.b32", !3672, i64 0}
!3687 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3688)
!3688 = !{!3689, !3690, !3691, !3692, !3693, !3694}
!3689 = !DILocalVariable(name: "arg1", arg: 1, scope: !3687, file: !1, type: !8)
!3690 = !DILocalVariable(name: "arg2", arg: 2, scope: !3687, file: !1, type: !9)
!3691 = !DILocalVariable(name: "arg3", arg: 3, scope: !3687, file: !1, type: !7)
!3692 = !DILocalVariable(name: "arg4", arg: 4, scope: !3687, file: !1, type: !8)
!3693 = !DILocalVariable(name: "arg5", arg: 5, scope: !3687, file: !1, type: !9)
!3694 = !DILocalVariable(name: "arg6", arg: 6, scope: !3687, file: !1, type: !8)
!3695 = !DILocation(line: 0, scope: !3687)
!3696 = !{!3697, !3697, i64 0}
!3697 = !{!"000001F2FC55A400.w4.b0", !3698, i64 0}
!3698 = !{!"000001F2FC55A400.w8.b0", !3699, i64 0}
!3699 = !{!"000001F2FC55A400.w16.b0", !3700, i64 0}
!3700 = !{!"000001F2FC55A400.w32.b0", !3701, i64 0}
!3701 = !{!"000001F2FC55A400.w64.b0", !3702, i64 0}
!3702 = !{!"000001F2FC55A400.w128.b0", !3703, i64 0}
!3703 = !{!"000001F2FC55A400.w256.b0", !3704, i64 0}
!3704 = !{!"000001F2FC55A400.w512.b0", !3705, i64 0}
!3705 = !{!"000001F2FC55A400.w1024.b0", !3706, i64 0}
!3706 = !{!"000001F2FC55A400", !21, i64 0}
!3707 = !{!3708, !3708, i64 0}
!3708 = !{!"000001F2FC55A400.w4.b4", !3698, i64 0}
!3709 = !{!3710, !3710, i64 0}
!3710 = !{!"000001F2FC55A400.w4.b8", !3711, i64 0}
!3711 = !{!"000001F2FC55A400.w8.b8", !3699, i64 0}
!3712 = !{!3713, !3713, i64 0}
!3713 = !{!"000001F2FC55A400.w4.b12", !3711, i64 0}
!3714 = !{!3715, !3715, i64 0}
!3715 = !{!"000001F2FC55A400.w4.b16", !3716, i64 0}
!3716 = !{!"000001F2FC55A400.w8.b16", !3717, i64 0}
!3717 = !{!"000001F2FC55A400.w16.b16", !3700, i64 0}
!3718 = !{!3719, !3719, i64 0}
!3719 = !{!"000001F2FC561AC0.w8.b0", !3720, i64 0}
!3720 = !{!"000001F2FC561AC0.w16.b0", !3721, i64 0}
!3721 = !{!"000001F2FC561AC0.w32.b0", !3722, i64 0}
!3722 = !{!"000001F2FC561AC0.w64.b0", !3723, i64 0}
!3723 = !{!"000001F2FC561AC0.w128.b0", !3724, i64 0}
!3724 = !{!"000001F2FC561AC0.w256.b0", !3725, i64 0}
!3725 = !{!"000001F2FC561AC0.w512.b0", !3726, i64 0}
!3726 = !{!"000001F2FC561AC0.w1024.b0", !3727, i64 0}
!3727 = !{!"000001F2FC561AC0", !21, i64 0}
!3728 = !{!3729, !3729, i64 0}
!3729 = !{!"000001F2FC561AC0.w8.b8", !3720, i64 0}
!3730 = !{!3731, !3731, i64 0}
!3731 = !{!"000001F2FC561AC0.w8.b16", !3732, i64 0}
!3732 = !{!"000001F2FC561AC0.w16.b16", !3721, i64 0}
!3733 = !{!3734, !3734, i64 0}
!3734 = !{!"000001F2FC561AC0.w8.b24", !3732, i64 0}
!3735 = !{!3736, !3736, i64 0}
!3736 = !{!"000001F2FC561AC0.w8.b32", !3737, i64 0}
!3737 = !{!"000001F2FC561AC0.w16.b32", !3738, i64 0}
!3738 = !{!"000001F2FC561AC0.w32.b32", !3722, i64 0}
!3739 = !{!3740, !3740, i64 0}
!3740 = !{!"000001F2FC562500.w8.b8", !3741, i64 0}
!3741 = !{!"000001F2FC562500.w16.b0", !3742, i64 0}
!3742 = !{!"000001F2FC562500.w32.b0", !3743, i64 0}
!3743 = !{!"000001F2FC562500.w64.b0", !3744, i64 0}
!3744 = !{!"000001F2FC562500.w128.b0", !3745, i64 0}
!3745 = !{!"000001F2FC562500.w256.b0", !3746, i64 0}
!3746 = !{!"000001F2FC562500.w512.b0", !3747, i64 0}
!3747 = !{!"000001F2FC562500.w1024.b0", !3748, i64 0}
!3748 = !{!"000001F2FC562500", !21, i64 0}
!3749 = !{!3750, !3750, i64 0}
!3750 = !{!"000001F2FC562500.w8.b16", !3751, i64 0}
!3751 = !{!"000001F2FC562500.w16.b16", !3742, i64 0}
!3752 = !{!3753, !3753, i64 0}
!3753 = !{!"000001F2FC562500.w8.b24", !3751, i64 0}
!3754 = !{!3755, !3755, i64 0}
!3755 = !{!"000001F2FC562500.w8.b32", !3756, i64 0}
!3756 = !{!"000001F2FC562500.w16.b32", !3757, i64 0}
!3757 = !{!"000001F2FC562500.w32.b32", !3743, i64 0}
!3758 = !{!3759, !3759, i64 0}
!3759 = !{!"000001F2FC562980.w8.b0", !3760, i64 0}
!3760 = !{!"000001F2FC562980.w16.b0", !3761, i64 0}
!3761 = !{!"000001F2FC562980.w32.b0", !3762, i64 0}
!3762 = !{!"000001F2FC562980.w64.b0", !3763, i64 0}
!3763 = !{!"000001F2FC562980.w128.b0", !3764, i64 0}
!3764 = !{!"000001F2FC562980.w256.b0", !3765, i64 0}
!3765 = !{!"000001F2FC562980.w512.b0", !3766, i64 0}
!3766 = !{!"000001F2FC562980.w1024.b0", !3767, i64 0}
!3767 = !{!"000001F2FC562980", !21, i64 0}
!3768 = !{!3769, !3769, i64 0}
!3769 = !{!"000001F2FC562980.w8.b8", !3760, i64 0}
!3770 = !{!3771, !3771, i64 0}
!3771 = !{!"000001F2FC562980.w8.b16", !3772, i64 0}
!3772 = !{!"000001F2FC562980.w16.b16", !3761, i64 0}
!3773 = !{!3774, !3774, i64 0}
!3774 = !{!"000001F2FC562980.w8.b24", !3772, i64 0}
!3775 = !{!3776, !3776, i64 0}
!3776 = !{!"000001F2FC562980.w8.b32", !3777, i64 0}
!3777 = !{!"000001F2FC562980.w16.b32", !3778, i64 0}
!3778 = !{!"000001F2FC562980.w32.b32", !3762, i64 0}
!3779 = !{!3780, !3780, i64 0}
!3780 = !{!"000001F2FC562980.w8.b40", !3777, i64 0}
!3781 = !{!3782, !3782, i64 0}
!3782 = !{!"000001F2FC5631C0.w8.b0", !3783, i64 0}
!3783 = !{!"000001F2FC5631C0.w16.b0", !3784, i64 0}
!3784 = !{!"000001F2FC5631C0.w32.b0", !3785, i64 0}
!3785 = !{!"000001F2FC5631C0.w64.b0", !3786, i64 0}
!3786 = !{!"000001F2FC5631C0.w128.b0", !3787, i64 0}
!3787 = !{!"000001F2FC5631C0.w256.b0", !3788, i64 0}
!3788 = !{!"000001F2FC5631C0.w512.b0", !3789, i64 0}
!3789 = !{!"000001F2FC5631C0.w1024.b0", !3790, i64 0}
!3790 = !{!"000001F2FC5631C0", !21, i64 0}
!3791 = !{!3792, !3792, i64 0}
!3792 = !{!"000001F2FC5631C0.w8.b8", !3783, i64 0}
!3793 = !{!3794, !3794, i64 0}
!3794 = !{!"000001F2FC5631C0.w8.b32", !3795, i64 0}
!3795 = !{!"000001F2FC5631C0.w16.b32", !3796, i64 0}
!3796 = !{!"000001F2FC5631C0.w32.b32", !3785, i64 0}
!3797 = !{!3798, !3798, i64 0}
!3798 = !{!"000001F2FC5631C0.w8.b40", !3795, i64 0}
!3799 = !{!3800, !3800, i64 0}
!3800 = !{!"000001F2FC563A40.w8.b0", !3801, i64 0}
!3801 = !{!"000001F2FC563A40.w16.b0", !3802, i64 0}
!3802 = !{!"000001F2FC563A40.w32.b0", !3803, i64 0}
!3803 = !{!"000001F2FC563A40.w64.b0", !3804, i64 0}
!3804 = !{!"000001F2FC563A40.w128.b0", !3805, i64 0}
!3805 = !{!"000001F2FC563A40.w256.b0", !3806, i64 0}
!3806 = !{!"000001F2FC563A40.w512.b0", !3807, i64 0}
!3807 = !{!"000001F2FC563A40.w1024.b0", !3808, i64 0}
!3808 = !{!"000001F2FC563A40", !21, i64 0}
!3809 = !{!3810, !3810, i64 0}
!3810 = !{!"000001F2FC563A40.w8.b8", !3801, i64 0}
!3811 = !{!3812, !3812, i64 0}
!3812 = !{!"000001F2FC563A40.w8.b16", !3813, i64 0}
!3813 = !{!"000001F2FC563A40.w16.b16", !3802, i64 0}
!3814 = !{!3815, !3815, i64 0}
!3815 = !{!"000001F2FC563A40.w8.b24", !3813, i64 0}
!3816 = !{!3817, !3817, i64 0}
!3817 = !{!"000001F2FC563A40.w8.b32", !3818, i64 0}
!3818 = !{!"000001F2FC563A40.w16.b32", !3819, i64 0}
!3819 = !{!"000001F2FC563A40.w32.b32", !3803, i64 0}
!3820 = !{!3821, !3821, i64 0}
!3821 = !{!"000001F2FC564F40.w8.b8", !3822, i64 0}
!3822 = !{!"000001F2FC564F40.w16.b0", !3823, i64 0}
!3823 = !{!"000001F2FC564F40.w32.b0", !3824, i64 0}
!3824 = !{!"000001F2FC564F40.w64.b0", !3825, i64 0}
!3825 = !{!"000001F2FC564F40.w128.b0", !3826, i64 0}
!3826 = !{!"000001F2FC564F40.w256.b0", !3827, i64 0}
!3827 = !{!"000001F2FC564F40.w512.b0", !3828, i64 0}
!3828 = !{!"000001F2FC564F40.w1024.b0", !3829, i64 0}
!3829 = !{!"000001F2FC564F40", !21, i64 0}
!3830 = !{!3831, !3831, i64 0}
!3831 = !{!"000001F2FC564F40.w8.b32", !3832, i64 0}
!3832 = !{!"000001F2FC564F40.w16.b32", !3833, i64 0}
!3833 = !{!"000001F2FC564F40.w32.b32", !3824, i64 0}
!3834 = !{!3835, !3835, i64 0}
!3835 = !{!"000001F2FC564480.w8.b0", !3836, i64 0}
!3836 = !{!"000001F2FC564480.w16.b0", !3837, i64 0}
!3837 = !{!"000001F2FC564480.w32.b0", !3838, i64 0}
!3838 = !{!"000001F2FC564480.w64.b0", !3839, i64 0}
!3839 = !{!"000001F2FC564480.w128.b0", !3840, i64 0}
!3840 = !{!"000001F2FC564480.w256.b0", !3841, i64 0}
!3841 = !{!"000001F2FC564480.w512.b0", !3842, i64 0}
!3842 = !{!"000001F2FC564480.w1024.b0", !3843, i64 0}
!3843 = !{!"000001F2FC564480", !21, i64 0}
!3844 = !{!3845, !3845, i64 0}
!3845 = !{!"000001F2FC564480.w8.b8", !3836, i64 0}
!3846 = !{!3847, !3847, i64 0}
!3847 = !{!"000001F2FC564480.w8.b16", !3848, i64 0}
!3848 = !{!"000001F2FC564480.w16.b16", !3837, i64 0}
!3849 = !{!3850, !3850, i64 0}
!3850 = !{!"000001F2FC564480.w8.b24", !3848, i64 0}
!3851 = !{!3852, !3852, i64 0}
!3852 = !{!"000001F2FC564480.w8.b32", !3853, i64 0}
!3853 = !{!"000001F2FC564480.w16.b32", !3854, i64 0}
!3854 = !{!"000001F2FC564480.w32.b32", !3838, i64 0}
!3855 = !{!3856, !3856, i64 0}
!3856 = !{!"000001F2FC566040.w8.b8", !3857, i64 0}
!3857 = !{!"000001F2FC566040.w16.b0", !3858, i64 0}
!3858 = !{!"000001F2FC566040.w32.b0", !3859, i64 0}
!3859 = !{!"000001F2FC566040.w64.b0", !3860, i64 0}
!3860 = !{!"000001F2FC566040.w128.b0", !3861, i64 0}
!3861 = !{!"000001F2FC566040.w256.b0", !3862, i64 0}
!3862 = !{!"000001F2FC566040.w512.b0", !3863, i64 0}
!3863 = !{!"000001F2FC566040.w1024.b0", !3864, i64 0}
!3864 = !{!"000001F2FC566040", !21, i64 0}
!3865 = !{!3866, !3866, i64 0}
!3866 = !{!"000001F2FC566040.w8.b16", !3867, i64 0}
!3867 = !{!"000001F2FC566040.w16.b16", !3858, i64 0}
!3868 = !{!3869, !3869, i64 0}
!3869 = !{!"000001F2FC566040.w8.b24", !3867, i64 0}
!3870 = !{!3871, !3871, i64 0}
!3871 = !{!"000001F2FC566040.w8.b32", !3872, i64 0}
!3872 = !{!"000001F2FC566040.w16.b32", !3873, i64 0}
!3873 = !{!"000001F2FC566040.w32.b32", !3859, i64 0}
!3874 = !{!3875, !3875, i64 0}
!3875 = !{!"000001F2FC565840.w8.b0", !3876, i64 0}
!3876 = !{!"000001F2FC565840.w16.b0", !3877, i64 0}
!3877 = !{!"000001F2FC565840.w32.b0", !3878, i64 0}
!3878 = !{!"000001F2FC565840.w64.b0", !3879, i64 0}
!3879 = !{!"000001F2FC565840.w128.b0", !3880, i64 0}
!3880 = !{!"000001F2FC565840.w256.b0", !3881, i64 0}
!3881 = !{!"000001F2FC565840.w512.b0", !3882, i64 0}
!3882 = !{!"000001F2FC565840.w1024.b0", !3883, i64 0}
!3883 = !{!"000001F2FC565840", !21, i64 0}
!3884 = !{!3885, !3885, i64 0}
!3885 = !{!"000001F2FC565840.w8.b8", !3876, i64 0}
!3886 = !{!3887, !3887, i64 0}
!3887 = !{!"000001F2FC565840.w8.b16", !3888, i64 0}
!3888 = !{!"000001F2FC565840.w16.b16", !3877, i64 0}
!3889 = !{!3890, !3890, i64 0}
!3890 = !{!"000001F2FC565840.w8.b24", !3888, i64 0}
!3891 = !{!3892, !3892, i64 0}
!3892 = !{!"000001F2FC565840.w8.b32", !3893, i64 0}
!3893 = !{!"000001F2FC565840.w16.b32", !3894, i64 0}
!3894 = !{!"000001F2FC565840.w32.b32", !3878, i64 0}
!3895 = !{!3896, !3896, i64 0}
!3896 = !{!"000001F2FC566500.w8.b8", !3897, i64 0}
!3897 = !{!"000001F2FC566500.w16.b0", !3898, i64 0}
!3898 = !{!"000001F2FC566500.w32.b0", !3899, i64 0}
!3899 = !{!"000001F2FC566500.w64.b0", !3900, i64 0}
!3900 = !{!"000001F2FC566500.w128.b0", !3901, i64 0}
!3901 = !{!"000001F2FC566500.w256.b0", !3902, i64 0}
!3902 = !{!"000001F2FC566500.w512.b0", !3903, i64 0}
!3903 = !{!"000001F2FC566500.w1024.b0", !3904, i64 0}
!3904 = !{!"000001F2FC566500", !21, i64 0}
!3905 = !{!3906, !3906, i64 0}
!3906 = !{!"000001F2FC566500.w8.b16", !3907, i64 0}
!3907 = !{!"000001F2FC566500.w16.b16", !3898, i64 0}
!3908 = !{!3909, !3909, i64 0}
!3909 = !{!"000001F2FC566500.w8.b24", !3907, i64 0}
!3910 = !{!3911, !3911, i64 0}
!3911 = !{!"000001F2FC566500.w8.b32", !3912, i64 0}
!3912 = !{!"000001F2FC566500.w16.b32", !3913, i64 0}
!3913 = !{!"000001F2FC566500.w32.b32", !3899, i64 0}
!3914 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3915)
!3915 = !{!3916, !3917, !3918, !3919, !3920, !3921}
!3916 = !DILocalVariable(name: "arg1", arg: 1, scope: !3914, file: !1, type: !8)
!3917 = !DILocalVariable(name: "arg2", arg: 2, scope: !3914, file: !1, type: !9)
!3918 = !DILocalVariable(name: "arg3", arg: 3, scope: !3914, file: !1, type: !7)
!3919 = !DILocalVariable(name: "arg4", arg: 4, scope: !3914, file: !1, type: !8)
!3920 = !DILocalVariable(name: "arg5", arg: 5, scope: !3914, file: !1, type: !9)
!3921 = !DILocalVariable(name: "arg6", arg: 6, scope: !3914, file: !1, type: !8)
!3922 = !DILocation(line: 0, scope: !3914)
!3923 = !{!3924, !3924, i64 0}
!3924 = !{!"000001F283315450.w4.b0", !3925, i64 0}
!3925 = !{!"000001F283315450.w8.b0", !3926, i64 0}
!3926 = !{!"000001F283315450.w16.b0", !3927, i64 0}
!3927 = !{!"000001F283315450.w32.b0", !3928, i64 0}
!3928 = !{!"000001F283315450.w64.b0", !3929, i64 0}
!3929 = !{!"000001F283315450.w128.b0", !3930, i64 0}
!3930 = !{!"000001F283315450.w256.b0", !3931, i64 0}
!3931 = !{!"000001F283315450.w512.b0", !3932, i64 0}
!3932 = !{!"000001F283315450.w1024.b0", !3933, i64 0}
!3933 = !{!"000001F283315450", !21, i64 0}
!3934 = !{!3935, !3935, i64 0}
!3935 = !{!"000001F283315450.w4.b4", !3925, i64 0}
!3936 = !{!3937, !3937, i64 0}
!3937 = !{!"000001F283315450.w4.b8", !3938, i64 0}
!3938 = !{!"000001F283315450.w8.b8", !3926, i64 0}
!3939 = !{!3940, !3940, i64 0}
!3940 = !{!"000001F283315450.w4.b12", !3938, i64 0}
!3941 = !{!3942, !3942, i64 0}
!3942 = !{!"000001F28331A290.w8.b0", !3943, i64 0}
!3943 = !{!"000001F28331A290.w16.b0", !3944, i64 0}
!3944 = !{!"000001F28331A290.w32.b0", !3945, i64 0}
!3945 = !{!"000001F28331A290.w64.b0", !3946, i64 0}
!3946 = !{!"000001F28331A290.w128.b0", !3947, i64 0}
!3947 = !{!"000001F28331A290.w256.b0", !3948, i64 0}
!3948 = !{!"000001F28331A290.w512.b0", !3949, i64 0}
!3949 = !{!"000001F28331A290.w1024.b0", !3950, i64 0}
!3950 = !{!"000001F28331A290", !21, i64 0}
!3951 = !{!3952, !3952, i64 0}
!3952 = !{!"000001F28331A290.w8.b8", !3943, i64 0}
!3953 = !{!3954, !3954, i64 0}
!3954 = !{!"000001F28331A290.w8.b16", !3955, i64 0}
!3955 = !{!"000001F28331A290.w16.b16", !3944, i64 0}
!3956 = !{!3957, !3957, i64 0}
!3957 = !{!"000001F28331A290.w8.b24", !3955, i64 0}
!3958 = !{!3959, !3959, i64 0}
!3959 = !{!"000001F28331A290.w8.b32", !3960, i64 0}
!3960 = !{!"000001F28331A290.w16.b32", !3961, i64 0}
!3961 = !{!"000001F28331A290.w32.b32", !3945, i64 0}
!3962 = !{!3963, !3963, i64 0}
!3963 = !{!"000001F28331AE10.w8.b16", !3964, i64 0}
!3964 = !{!"000001F28331AE10.w16.b16", !3965, i64 0}
!3965 = !{!"000001F28331AE10.w32.b0", !3966, i64 0}
!3966 = !{!"000001F28331AE10.w64.b0", !3967, i64 0}
!3967 = !{!"000001F28331AE10.w128.b0", !3968, i64 0}
!3968 = !{!"000001F28331AE10.w256.b0", !3969, i64 0}
!3969 = !{!"000001F28331AE10.w512.b0", !3970, i64 0}
!3970 = !{!"000001F28331AE10.w1024.b0", !3971, i64 0}
!3971 = !{!"000001F28331AE10", !21, i64 0}
!3972 = !{!3973, !3973, i64 0}
!3973 = !{!"000001F28331AE10.w8.b24", !3964, i64 0}
!3974 = !{!3975, !3975, i64 0}
!3975 = !{!"000001F28331AE10.w8.b32", !3976, i64 0}
!3976 = !{!"000001F28331AE10.w16.b32", !3977, i64 0}
!3977 = !{!"000001F28331AE10.w32.b32", !3966, i64 0}
!3978 = !{!3979, !3979, i64 0}
!3979 = !{!"000001F28331B890.w8.b0", !3980, i64 0}
!3980 = !{!"000001F28331B890.w16.b0", !3981, i64 0}
!3981 = !{!"000001F28331B890.w32.b0", !3982, i64 0}
!3982 = !{!"000001F28331B890.w64.b0", !3983, i64 0}
!3983 = !{!"000001F28331B890.w128.b0", !3984, i64 0}
!3984 = !{!"000001F28331B890.w256.b0", !3985, i64 0}
!3985 = !{!"000001F28331B890.w512.b0", !3986, i64 0}
!3986 = !{!"000001F28331B890.w1024.b0", !3987, i64 0}
!3987 = !{!"000001F28331B890", !21, i64 0}
!3988 = !{!3989, !3989, i64 0}
!3989 = !{!"000001F28331B890.w8.b8", !3980, i64 0}
!3990 = !{!3991, !3991, i64 0}
!3991 = !{!"000001F28331B890.w8.b16", !3992, i64 0}
!3992 = !{!"000001F28331B890.w16.b16", !3981, i64 0}
!3993 = !{!3994, !3994, i64 0}
!3994 = !{!"000001F28331B890.w8.b24", !3992, i64 0}
!3995 = !{!3996, !3996, i64 0}
!3996 = !{!"000001F28331B890.w8.b32", !3997, i64 0}
!3997 = !{!"000001F28331B890.w16.b32", !3998, i64 0}
!3998 = !{!"000001F28331B890.w32.b32", !3982, i64 0}
!3999 = !{!4000, !4000, i64 0}
!4000 = !{!"000001F28331B890.w8.b40", !3997, i64 0}
!4001 = !{!4002, !4002, i64 0}
!4002 = !{!"000001F28331B390.w8.b0", !4003, i64 0}
!4003 = !{!"000001F28331B390.w16.b0", !4004, i64 0}
!4004 = !{!"000001F28331B390.w32.b0", !4005, i64 0}
!4005 = !{!"000001F28331B390.w64.b0", !4006, i64 0}
!4006 = !{!"000001F28331B390.w128.b0", !4007, i64 0}
!4007 = !{!"000001F28331B390.w256.b0", !4008, i64 0}
!4008 = !{!"000001F28331B390.w512.b0", !4009, i64 0}
!4009 = !{!"000001F28331B390.w1024.b0", !4010, i64 0}
!4010 = !{!"000001F28331B390", !21, i64 0}
!4011 = !{!4012, !4012, i64 0}
!4012 = !{!"000001F28331B390.w8.b16", !4013, i64 0}
!4013 = !{!"000001F28331B390.w16.b16", !4004, i64 0}
!4014 = !{!4015, !4015, i64 0}
!4015 = !{!"000001F28331B390.w8.b24", !4013, i64 0}
!4016 = !{!4017, !4017, i64 0}
!4017 = !{!"000001F28331B390.w8.b32", !4018, i64 0}
!4018 = !{!"000001F28331B390.w16.b32", !4019, i64 0}
!4019 = !{!"000001F28331B390.w32.b32", !4005, i64 0}
!4020 = !{!4021, !4021, i64 0}
!4021 = !{!"000001F28331B390.w8.b40", !4018, i64 0}
!4022 = !{!4023, !4023, i64 0}
!4023 = !{!"000001F28331C2D0.w8.b0", !4024, i64 0}
!4024 = !{!"000001F28331C2D0.w16.b0", !4025, i64 0}
!4025 = !{!"000001F28331C2D0.w32.b0", !4026, i64 0}
!4026 = !{!"000001F28331C2D0.w64.b0", !4027, i64 0}
!4027 = !{!"000001F28331C2D0.w128.b0", !4028, i64 0}
!4028 = !{!"000001F28331C2D0.w256.b0", !4029, i64 0}
!4029 = !{!"000001F28331C2D0.w512.b0", !4030, i64 0}
!4030 = !{!"000001F28331C2D0.w1024.b0", !4031, i64 0}
!4031 = !{!"000001F28331C2D0", !21, i64 0}
!4032 = !{!4033, !4033, i64 0}
!4033 = !{!"000001F28331C2D0.w8.b8", !4024, i64 0}
!4034 = !{!4035, !4035, i64 0}
!4035 = !{!"000001F28331C2D0.w8.b16", !4036, i64 0}
!4036 = !{!"000001F28331C2D0.w16.b16", !4025, i64 0}
!4037 = !{!4038, !4038, i64 0}
!4038 = !{!"000001F28331C2D0.w8.b24", !4036, i64 0}
!4039 = !{!4040, !4040, i64 0}
!4040 = !{!"000001F28331C2D0.w8.b32", !4041, i64 0}
!4041 = !{!"000001F28331C2D0.w16.b32", !4042, i64 0}
!4042 = !{!"000001F28331C2D0.w32.b32", !4026, i64 0}
!4043 = !{!4044, !4044, i64 0}
!4044 = !{!"000001F28331C910.w8.b8", !4045, i64 0}
!4045 = !{!"000001F28331C910.w16.b0", !4046, i64 0}
!4046 = !{!"000001F28331C910.w32.b0", !4047, i64 0}
!4047 = !{!"000001F28331C910.w64.b0", !4048, i64 0}
!4048 = !{!"000001F28331C910.w128.b0", !4049, i64 0}
!4049 = !{!"000001F28331C910.w256.b0", !4050, i64 0}
!4050 = !{!"000001F28331C910.w512.b0", !4051, i64 0}
!4051 = !{!"000001F28331C910.w1024.b0", !4052, i64 0}
!4052 = !{!"000001F28331C910", !21, i64 0}
!4053 = !{!4054, !4054, i64 0}
!4054 = !{!"000001F28331C910.w8.b32", !4055, i64 0}
!4055 = !{!"000001F28331C910.w16.b32", !4056, i64 0}
!4056 = !{!"000001F28331C910.w32.b32", !4047, i64 0}
!4057 = !{!4058, !4058, i64 0}
!4058 = !{!"000001F28331D3D0.w8.b0", !4059, i64 0}
!4059 = !{!"000001F28331D3D0.w16.b0", !4060, i64 0}
!4060 = !{!"000001F28331D3D0.w32.b0", !4061, i64 0}
!4061 = !{!"000001F28331D3D0.w64.b0", !4062, i64 0}
!4062 = !{!"000001F28331D3D0.w128.b0", !4063, i64 0}
!4063 = !{!"000001F28331D3D0.w256.b0", !4064, i64 0}
!4064 = !{!"000001F28331D3D0.w512.b0", !4065, i64 0}
!4065 = !{!"000001F28331D3D0.w1024.b0", !4066, i64 0}
!4066 = !{!"000001F28331D3D0", !21, i64 0}
!4067 = !{!4068, !4068, i64 0}
!4068 = !{!"000001F28331D3D0.w8.b8", !4059, i64 0}
!4069 = !{!4070, !4070, i64 0}
!4070 = !{!"000001F28331D3D0.w8.b16", !4071, i64 0}
!4071 = !{!"000001F28331D3D0.w16.b16", !4060, i64 0}
!4072 = !{!4073, !4073, i64 0}
!4073 = !{!"000001F28331D3D0.w8.b24", !4071, i64 0}
!4074 = !{!4075, !4075, i64 0}
!4075 = !{!"000001F28331D3D0.w8.b32", !4076, i64 0}
!4076 = !{!"000001F28331D3D0.w16.b32", !4077, i64 0}
!4077 = !{!"000001F28331D3D0.w32.b32", !4061, i64 0}
!4078 = !{!4079, !4079, i64 0}
!4079 = !{!"000001F28331D2D0.w8.b8", !4080, i64 0}
!4080 = !{!"000001F28331D2D0.w16.b0", !4081, i64 0}
!4081 = !{!"000001F28331D2D0.w32.b0", !4082, i64 0}
!4082 = !{!"000001F28331D2D0.w64.b0", !4083, i64 0}
!4083 = !{!"000001F28331D2D0.w128.b0", !4084, i64 0}
!4084 = !{!"000001F28331D2D0.w256.b0", !4085, i64 0}
!4085 = !{!"000001F28331D2D0.w512.b0", !4086, i64 0}
!4086 = !{!"000001F28331D2D0.w1024.b0", !4087, i64 0}
!4087 = !{!"000001F28331D2D0", !21, i64 0}
!4088 = !{!4089, !4089, i64 0}
!4089 = !{!"000001F28331D2D0.w8.b16", !4090, i64 0}
!4090 = !{!"000001F28331D2D0.w16.b16", !4081, i64 0}
!4091 = !{!4092, !4092, i64 0}
!4092 = !{!"000001F28331D2D0.w8.b24", !4090, i64 0}
!4093 = !{!4094, !4094, i64 0}
!4094 = !{!"000001F28331D2D0.w8.b32", !4095, i64 0}
!4095 = !{!"000001F28331D2D0.w16.b32", !4096, i64 0}
!4096 = !{!"000001F28331D2D0.w32.b32", !4082, i64 0}
!4097 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4098)
!4098 = !{!4099, !4100, !4101, !4102, !4103, !4104}
!4099 = !DILocalVariable(name: "arg1", arg: 1, scope: !4097, file: !1, type: !8)
!4100 = !DILocalVariable(name: "arg2", arg: 2, scope: !4097, file: !1, type: !9)
!4101 = !DILocalVariable(name: "arg3", arg: 3, scope: !4097, file: !1, type: !7)
!4102 = !DILocalVariable(name: "arg4", arg: 4, scope: !4097, file: !1, type: !8)
!4103 = !DILocalVariable(name: "arg5", arg: 5, scope: !4097, file: !1, type: !9)
!4104 = !DILocalVariable(name: "arg6", arg: 6, scope: !4097, file: !1, type: !8)
!4105 = !DILocation(line: 0, scope: !4097)
!4106 = !{!4107, !4107, i64 0}
!4107 = !{!"000001F2EEAA96B0.w4.b0", !4108, i64 0}
!4108 = !{!"000001F2EEAA96B0.w8.b0", !4109, i64 0}
!4109 = !{!"000001F2EEAA96B0.w16.b0", !4110, i64 0}
!4110 = !{!"000001F2EEAA96B0.w32.b0", !4111, i64 0}
!4111 = !{!"000001F2EEAA96B0.w64.b0", !4112, i64 0}
!4112 = !{!"000001F2EEAA96B0.w128.b0", !4113, i64 0}
!4113 = !{!"000001F2EEAA96B0.w256.b0", !4114, i64 0}
!4114 = !{!"000001F2EEAA96B0.w512.b0", !4115, i64 0}
!4115 = !{!"000001F2EEAA96B0.w1024.b0", !4116, i64 0}
!4116 = !{!"000001F2EEAA96B0", !21, i64 0}
!4117 = !{!4118, !4118, i64 0}
!4118 = !{!"000001F2EEAA96B0.w4.b4", !4108, i64 0}
!4119 = !{!4120, !4120, i64 0}
!4120 = !{!"000001F2EEAA96B0.w4.b8", !4121, i64 0}
!4121 = !{!"000001F2EEAA96B0.w8.b8", !4109, i64 0}
!4122 = !{!4123, !4123, i64 0}
!4123 = !{!"000001F2EEAA96B0.w4.b12", !4121, i64 0}
!4124 = !{!4125, !4125, i64 0}
!4125 = !{!"000001F2EEACA7F0.w8.b0", !4126, i64 0}
!4126 = !{!"000001F2EEACA7F0.w16.b0", !4127, i64 0}
!4127 = !{!"000001F2EEACA7F0.w32.b0", !4128, i64 0}
!4128 = !{!"000001F2EEACA7F0.w64.b0", !4129, i64 0}
!4129 = !{!"000001F2EEACA7F0.w128.b0", !4130, i64 0}
!4130 = !{!"000001F2EEACA7F0.w256.b0", !4131, i64 0}
!4131 = !{!"000001F2EEACA7F0.w512.b0", !4132, i64 0}
!4132 = !{!"000001F2EEACA7F0.w1024.b0", !4133, i64 0}
!4133 = !{!"000001F2EEACA7F0", !21, i64 0}
!4134 = !{!4135, !4135, i64 0}
!4135 = !{!"000001F2EEACA7F0.w8.b8", !4126, i64 0}
!4136 = !{!4137, !4137, i64 0}
!4137 = !{!"000001F2EEACA7F0.w8.b16", !4138, i64 0}
!4138 = !{!"000001F2EEACA7F0.w16.b16", !4127, i64 0}
!4139 = !{!4140, !4140, i64 0}
!4140 = !{!"000001F2EEACA7F0.w8.b24", !4138, i64 0}
!4141 = !{!4142, !4142, i64 0}
!4142 = !{!"000001F2EEACA7F0.w8.b32", !4143, i64 0}
!4143 = !{!"000001F2EEACA7F0.w16.b32", !4144, i64 0}
!4144 = !{!"000001F2EEACA7F0.w32.b32", !4128, i64 0}
!4145 = !{!4146, !4146, i64 0}
!4146 = !{!"000001F2EEACA5F0.w8.b8", !4147, i64 0}
!4147 = !{!"000001F2EEACA5F0.w16.b0", !4148, i64 0}
!4148 = !{!"000001F2EEACA5F0.w32.b0", !4149, i64 0}
!4149 = !{!"000001F2EEACA5F0.w64.b0", !4150, i64 0}
!4150 = !{!"000001F2EEACA5F0.w128.b0", !4151, i64 0}
!4151 = !{!"000001F2EEACA5F0.w256.b0", !4152, i64 0}
!4152 = !{!"000001F2EEACA5F0.w512.b0", !4153, i64 0}
!4153 = !{!"000001F2EEACA5F0.w1024.b0", !4154, i64 0}
!4154 = !{!"000001F2EEACA5F0", !21, i64 0}
!4155 = !{!4156, !4156, i64 0}
!4156 = !{!"000001F2EEACA5F0.w8.b16", !4157, i64 0}
!4157 = !{!"000001F2EEACA5F0.w16.b16", !4148, i64 0}
!4158 = !{!4159, !4159, i64 0}
!4159 = !{!"000001F2EEACA5F0.w8.b24", !4157, i64 0}
!4160 = !{!4161, !4161, i64 0}
!4161 = !{!"000001F2EEACA5F0.w8.b32", !4162, i64 0}
!4162 = !{!"000001F2EEACA5F0.w16.b32", !4163, i64 0}
!4163 = !{!"000001F2EEACA5F0.w32.b32", !4149, i64 0}
!4164 = !{!4165, !4165, i64 0}
!4165 = !{!"000001F2EEACB2F0.w8.b0", !4166, i64 0}
!4166 = !{!"000001F2EEACB2F0.w16.b0", !4167, i64 0}
!4167 = !{!"000001F2EEACB2F0.w32.b0", !4168, i64 0}
!4168 = !{!"000001F2EEACB2F0.w64.b0", !4169, i64 0}
!4169 = !{!"000001F2EEACB2F0.w128.b0", !4170, i64 0}
!4170 = !{!"000001F2EEACB2F0.w256.b0", !4171, i64 0}
!4171 = !{!"000001F2EEACB2F0.w512.b0", !4172, i64 0}
!4172 = !{!"000001F2EEACB2F0.w1024.b0", !4173, i64 0}
!4173 = !{!"000001F2EEACB2F0", !21, i64 0}
!4174 = !{!4175, !4175, i64 0}
!4175 = !{!"000001F2EEACB2F0.w8.b8", !4166, i64 0}
!4176 = !{!4177, !4177, i64 0}
!4177 = !{!"000001F2EEACB2F0.w8.b16", !4178, i64 0}
!4178 = !{!"000001F2EEACB2F0.w16.b16", !4167, i64 0}
!4179 = !{!4180, !4180, i64 0}
!4180 = !{!"000001F2EEACB2F0.w8.b24", !4178, i64 0}
!4181 = !{!4182, !4182, i64 0}
!4182 = !{!"000001F2EEACB2F0.w8.b32", !4183, i64 0}
!4183 = !{!"000001F2EEACB2F0.w16.b32", !4184, i64 0}
!4184 = !{!"000001F2EEACB2F0.w32.b32", !4168, i64 0}
!4185 = !{!4186, !4186, i64 0}
!4186 = !{!"000001F2EEACB2F0.w8.b40", !4183, i64 0}
!4187 = !{!4188, !4188, i64 0}
!4188 = !{!"000001F2EA7CFF70.w8.b0", !4189, i64 0}
!4189 = !{!"000001F2EA7CFF70.w16.b0", !4190, i64 0}
!4190 = !{!"000001F2EA7CFF70.w32.b0", !4191, i64 0}
!4191 = !{!"000001F2EA7CFF70.w64.b0", !4192, i64 0}
!4192 = !{!"000001F2EA7CFF70.w128.b0", !4193, i64 0}
!4193 = !{!"000001F2EA7CFF70.w256.b0", !4194, i64 0}
!4194 = !{!"000001F2EA7CFF70.w512.b0", !4195, i64 0}
!4195 = !{!"000001F2EA7CFF70.w1024.b0", !4196, i64 0}
!4196 = !{!"000001F2EA7CFF70", !21, i64 0}
!4197 = !{!4198, !4198, i64 0}
!4198 = !{!"000001F2EA7CFF70.w8.b8", !4189, i64 0}
!4199 = !{!4200, !4200, i64 0}
!4200 = !{!"000001F2EA7CFF70.w8.b32", !4201, i64 0}
!4201 = !{!"000001F2EA7CFF70.w16.b32", !4202, i64 0}
!4202 = !{!"000001F2EA7CFF70.w32.b32", !4191, i64 0}
!4203 = !{!4204, !4204, i64 0}
!4204 = !{!"000001F2EA7CFF70.w8.b40", !4201, i64 0}
!4205 = !{!4206, !4206, i64 0}
!4206 = !{!"000001F2EA7C65F0.w8.b0", !4207, i64 0}
!4207 = !{!"000001F2EA7C65F0.w16.b0", !4208, i64 0}
!4208 = !{!"000001F2EA7C65F0.w32.b0", !4209, i64 0}
!4209 = !{!"000001F2EA7C65F0.w64.b0", !4210, i64 0}
!4210 = !{!"000001F2EA7C65F0.w128.b0", !4211, i64 0}
!4211 = !{!"000001F2EA7C65F0.w256.b0", !4212, i64 0}
!4212 = !{!"000001F2EA7C65F0.w512.b0", !4213, i64 0}
!4213 = !{!"000001F2EA7C65F0.w1024.b0", !4214, i64 0}
!4214 = !{!"000001F2EA7C65F0", !21, i64 0}
!4215 = !{!4216, !4216, i64 0}
!4216 = !{!"000001F2EA7C65F0.w8.b8", !4207, i64 0}
!4217 = !{!4218, !4218, i64 0}
!4218 = !{!"000001F2EA7C65F0.w8.b16", !4219, i64 0}
!4219 = !{!"000001F2EA7C65F0.w16.b16", !4208, i64 0}
!4220 = !{!4221, !4221, i64 0}
!4221 = !{!"000001F2EA7C65F0.w8.b24", !4219, i64 0}
!4222 = !{!4223, !4223, i64 0}
!4223 = !{!"000001F2EA7C65F0.w8.b32", !4224, i64 0}
!4224 = !{!"000001F2EA7C65F0.w16.b32", !4225, i64 0}
!4225 = !{!"000001F2EA7C65F0.w32.b32", !4209, i64 0}
!4226 = !{!4227, !4227, i64 0}
!4227 = !{!"000001F2EA7C6370.w8.b8", !4228, i64 0}
!4228 = !{!"000001F2EA7C6370.w16.b0", !4229, i64 0}
!4229 = !{!"000001F2EA7C6370.w32.b0", !4230, i64 0}
!4230 = !{!"000001F2EA7C6370.w64.b0", !4231, i64 0}
!4231 = !{!"000001F2EA7C6370.w128.b0", !4232, i64 0}
!4232 = !{!"000001F2EA7C6370.w256.b0", !4233, i64 0}
!4233 = !{!"000001F2EA7C6370.w512.b0", !4234, i64 0}
!4234 = !{!"000001F2EA7C6370.w1024.b0", !4235, i64 0}
!4235 = !{!"000001F2EA7C6370", !21, i64 0}
!4236 = !{!4237, !4237, i64 0}
!4237 = !{!"000001F2EA7C6370.w8.b32", !4238, i64 0}
!4238 = !{!"000001F2EA7C6370.w16.b32", !4239, i64 0}
!4239 = !{!"000001F2EA7C6370.w32.b32", !4230, i64 0}
!4240 = !{!4241, !4241, i64 0}
!4241 = !{!"000001F2EABECC10.w8.b0", !4242, i64 0}
!4242 = !{!"000001F2EABECC10.w16.b0", !4243, i64 0}
!4243 = !{!"000001F2EABECC10.w32.b0", !4244, i64 0}
!4244 = !{!"000001F2EABECC10.w64.b0", !4245, i64 0}
!4245 = !{!"000001F2EABECC10.w128.b0", !4246, i64 0}
!4246 = !{!"000001F2EABECC10.w256.b0", !4247, i64 0}
!4247 = !{!"000001F2EABECC10.w512.b0", !4248, i64 0}
!4248 = !{!"000001F2EABECC10.w1024.b0", !4249, i64 0}
!4249 = !{!"000001F2EABECC10", !21, i64 0}
!4250 = !{!4251, !4251, i64 0}
!4251 = !{!"000001F2EABECC10.w8.b8", !4242, i64 0}
!4252 = !{!4253, !4253, i64 0}
!4253 = !{!"000001F2EABECC10.w8.b16", !4254, i64 0}
!4254 = !{!"000001F2EABECC10.w16.b16", !4243, i64 0}
!4255 = !{!4256, !4256, i64 0}
!4256 = !{!"000001F2EABECC10.w8.b24", !4254, i64 0}
!4257 = !{!4258, !4258, i64 0}
!4258 = !{!"000001F2EABECC10.w8.b32", !4259, i64 0}
!4259 = !{!"000001F2EABECC10.w16.b32", !4260, i64 0}
!4260 = !{!"000001F2EABECC10.w32.b32", !4244, i64 0}
!4261 = !{!4262, !4262, i64 0}
!4262 = !{!"000001F2EAAD8F60.w8.b8", !4263, i64 0}
!4263 = !{!"000001F2EAAD8F60.w16.b0", !4264, i64 0}
!4264 = !{!"000001F2EAAD8F60.w32.b0", !4265, i64 0}
!4265 = !{!"000001F2EAAD8F60.w64.b0", !4266, i64 0}
!4266 = !{!"000001F2EAAD8F60.w128.b0", !4267, i64 0}
!4267 = !{!"000001F2EAAD8F60.w256.b0", !4268, i64 0}
!4268 = !{!"000001F2EAAD8F60.w512.b0", !4269, i64 0}
!4269 = !{!"000001F2EAAD8F60.w1024.b0", !4270, i64 0}
!4270 = !{!"000001F2EAAD8F60", !21, i64 0}
!4271 = !{!4272, !4272, i64 0}
!4272 = !{!"000001F2EAAD8F60.w8.b16", !4273, i64 0}
!4273 = !{!"000001F2EAAD8F60.w16.b16", !4264, i64 0}
!4274 = !{!4275, !4275, i64 0}
!4275 = !{!"000001F2EAAD8F60.w8.b24", !4273, i64 0}
!4276 = !{!4277, !4277, i64 0}
!4277 = !{!"000001F2EAAD8F60.w8.b32", !4278, i64 0}
!4278 = !{!"000001F2EAAD8F60.w16.b32", !4279, i64 0}
!4279 = !{!"000001F2EAAD8F60.w32.b32", !4265, i64 0}
!4280 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4281)
!4281 = !{!4282, !4283, !4284, !4285, !4286, !4287}
!4282 = !DILocalVariable(name: "arg1", arg: 1, scope: !4280, file: !1, type: !8)
!4283 = !DILocalVariable(name: "arg2", arg: 2, scope: !4280, file: !1, type: !9)
!4284 = !DILocalVariable(name: "arg3", arg: 3, scope: !4280, file: !1, type: !7)
!4285 = !DILocalVariable(name: "arg4", arg: 4, scope: !4280, file: !1, type: !8)
!4286 = !DILocalVariable(name: "arg5", arg: 5, scope: !4280, file: !1, type: !9)
!4287 = !DILocalVariable(name: "arg6", arg: 6, scope: !4280, file: !1, type: !8)
!4288 = !DILocation(line: 0, scope: !4280)
!4289 = !{!4290, !4290, i64 0}
!4290 = !{!"000001F2EB0D4FA0.w4.b0", !4291, i64 0}
!4291 = !{!"000001F2EB0D4FA0.w8.b0", !4292, i64 0}
!4292 = !{!"000001F2EB0D4FA0.w16.b0", !4293, i64 0}
!4293 = !{!"000001F2EB0D4FA0.w32.b0", !4294, i64 0}
!4294 = !{!"000001F2EB0D4FA0.w64.b0", !4295, i64 0}
!4295 = !{!"000001F2EB0D4FA0.w128.b0", !4296, i64 0}
!4296 = !{!"000001F2EB0D4FA0.w256.b0", !4297, i64 0}
!4297 = !{!"000001F2EB0D4FA0.w512.b0", !4298, i64 0}
!4298 = !{!"000001F2EB0D4FA0.w1024.b0", !4299, i64 0}
!4299 = !{!"000001F2EB0D4FA0", !21, i64 0}
!4300 = !{!4301, !4301, i64 0}
!4301 = !{!"000001F2EB0D4FA0.w4.b4", !4291, i64 0}
!4302 = !{!4303, !4303, i64 0}
!4303 = !{!"000001F2EB0D4FA0.w4.b8", !4304, i64 0}
!4304 = !{!"000001F2EB0D4FA0.w8.b8", !4292, i64 0}
!4305 = !{!4306, !4306, i64 0}
!4306 = !{!"000001F2EB0D4FA0.w4.b12", !4304, i64 0}
!4307 = !{!4308, !4308, i64 0}
!4308 = !{!"000001F2EB0D87A0.w8.b0", !4309, i64 0}
!4309 = !{!"000001F2EB0D87A0.w16.b0", !4310, i64 0}
!4310 = !{!"000001F2EB0D87A0.w32.b0", !4311, i64 0}
!4311 = !{!"000001F2EB0D87A0.w64.b0", !4312, i64 0}
!4312 = !{!"000001F2EB0D87A0.w128.b0", !4313, i64 0}
!4313 = !{!"000001F2EB0D87A0.w256.b0", !4314, i64 0}
!4314 = !{!"000001F2EB0D87A0.w512.b0", !4315, i64 0}
!4315 = !{!"000001F2EB0D87A0.w1024.b0", !4316, i64 0}
!4316 = !{!"000001F2EB0D87A0", !21, i64 0}
!4317 = !{!4318, !4318, i64 0}
!4318 = !{!"000001F2EB0D87A0.w8.b8", !4309, i64 0}
!4319 = !{!4320, !4320, i64 0}
!4320 = !{!"000001F2EB0D87A0.w8.b16", !4321, i64 0}
!4321 = !{!"000001F2EB0D87A0.w16.b16", !4310, i64 0}
!4322 = !{!4323, !4323, i64 0}
!4323 = !{!"000001F2EB0D87A0.w8.b24", !4321, i64 0}
!4324 = !{!4325, !4325, i64 0}
!4325 = !{!"000001F2EB0D87A0.w8.b32", !4326, i64 0}
!4326 = !{!"000001F2EB0D87A0.w16.b32", !4327, i64 0}
!4327 = !{!"000001F2EB0D87A0.w32.b32", !4311, i64 0}
!4328 = !{!4329, !4329, i64 0}
!4329 = !{!"000001F2EB0D8A20.w8.b8", !4330, i64 0}
!4330 = !{!"000001F2EB0D8A20.w16.b0", !4331, i64 0}
!4331 = !{!"000001F2EB0D8A20.w32.b0", !4332, i64 0}
!4332 = !{!"000001F2EB0D8A20.w64.b0", !4333, i64 0}
!4333 = !{!"000001F2EB0D8A20.w128.b0", !4334, i64 0}
!4334 = !{!"000001F2EB0D8A20.w256.b0", !4335, i64 0}
!4335 = !{!"000001F2EB0D8A20.w512.b0", !4336, i64 0}
!4336 = !{!"000001F2EB0D8A20.w1024.b0", !4337, i64 0}
!4337 = !{!"000001F2EB0D8A20", !21, i64 0}
!4338 = !{!4339, !4339, i64 0}
!4339 = !{!"000001F2EB0D8A20.w8.b16", !4340, i64 0}
!4340 = !{!"000001F2EB0D8A20.w16.b16", !4331, i64 0}
!4341 = !{!4342, !4342, i64 0}
!4342 = !{!"000001F2EB0D8A20.w8.b24", !4340, i64 0}
!4343 = !{!4344, !4344, i64 0}
!4344 = !{!"000001F2EB0D8A20.w8.b32", !4345, i64 0}
!4345 = !{!"000001F2EB0D8A20.w16.b32", !4346, i64 0}
!4346 = !{!"000001F2EB0D8A20.w32.b32", !4332, i64 0}
!4347 = !{!4348, !4348, i64 0}
!4348 = !{!"000001F2EB0DB0A0.w8.b0", !4349, i64 0}
!4349 = !{!"000001F2EB0DB0A0.w16.b0", !4350, i64 0}
!4350 = !{!"000001F2EB0DB0A0.w32.b0", !4351, i64 0}
!4351 = !{!"000001F2EB0DB0A0.w64.b0", !4352, i64 0}
!4352 = !{!"000001F2EB0DB0A0.w128.b0", !4353, i64 0}
!4353 = !{!"000001F2EB0DB0A0.w256.b0", !4354, i64 0}
!4354 = !{!"000001F2EB0DB0A0.w512.b0", !4355, i64 0}
!4355 = !{!"000001F2EB0DB0A0.w1024.b0", !4356, i64 0}
!4356 = !{!"000001F2EB0DB0A0", !21, i64 0}
!4357 = !{!4358, !4358, i64 0}
!4358 = !{!"000001F2EB0DB0A0.w8.b8", !4349, i64 0}
!4359 = !{!4360, !4360, i64 0}
!4360 = !{!"000001F2EB0DB0A0.w8.b16", !4361, i64 0}
!4361 = !{!"000001F2EB0DB0A0.w16.b16", !4350, i64 0}
!4362 = !{!4363, !4363, i64 0}
!4363 = !{!"000001F2EB0DB0A0.w8.b24", !4361, i64 0}
!4364 = !{!4365, !4365, i64 0}
!4365 = !{!"000001F2EB0DB0A0.w8.b32", !4366, i64 0}
!4366 = !{!"000001F2EB0DB0A0.w16.b32", !4367, i64 0}
!4367 = !{!"000001F2EB0DB0A0.w32.b32", !4351, i64 0}
!4368 = !{!4369, !4369, i64 0}
!4369 = !{!"000001F2EB0DB0A0.w8.b40", !4366, i64 0}
!4370 = !{!4371, !4371, i64 0}
!4371 = !{!"000001F2EB0DBFE0.w8.b0", !4372, i64 0}
!4372 = !{!"000001F2EB0DBFE0.w16.b0", !4373, i64 0}
!4373 = !{!"000001F2EB0DBFE0.w32.b0", !4374, i64 0}
!4374 = !{!"000001F2EB0DBFE0.w64.b0", !4375, i64 0}
!4375 = !{!"000001F2EB0DBFE0.w128.b0", !4376, i64 0}
!4376 = !{!"000001F2EB0DBFE0.w256.b0", !4377, i64 0}
!4377 = !{!"000001F2EB0DBFE0.w512.b0", !4378, i64 0}
!4378 = !{!"000001F2EB0DBFE0.w1024.b0", !4379, i64 0}
!4379 = !{!"000001F2EB0DBFE0", !21, i64 0}
!4380 = !{!4381, !4381, i64 0}
!4381 = !{!"000001F2EB0DBFE0.w8.b8", !4372, i64 0}
!4382 = !{!4383, !4383, i64 0}
!4383 = !{!"000001F2EB0DBFE0.w8.b32", !4384, i64 0}
!4384 = !{!"000001F2EB0DBFE0.w16.b32", !4385, i64 0}
!4385 = !{!"000001F2EB0DBFE0.w32.b32", !4374, i64 0}
!4386 = !{!4387, !4387, i64 0}
!4387 = !{!"000001F2EB0DBFE0.w8.b40", !4384, i64 0}
!4388 = !{!4389, !4389, i64 0}
!4389 = !{!"000001F2EB0DBA20.w8.b0", !4390, i64 0}
!4390 = !{!"000001F2EB0DBA20.w16.b0", !4391, i64 0}
!4391 = !{!"000001F2EB0DBA20.w32.b0", !4392, i64 0}
!4392 = !{!"000001F2EB0DBA20.w64.b0", !4393, i64 0}
!4393 = !{!"000001F2EB0DBA20.w128.b0", !4394, i64 0}
!4394 = !{!"000001F2EB0DBA20.w256.b0", !4395, i64 0}
!4395 = !{!"000001F2EB0DBA20.w512.b0", !4396, i64 0}
!4396 = !{!"000001F2EB0DBA20.w1024.b0", !4397, i64 0}
!4397 = !{!"000001F2EB0DBA20", !21, i64 0}
!4398 = !{!4399, !4399, i64 0}
!4399 = !{!"000001F2EB0DBA20.w8.b8", !4390, i64 0}
!4400 = !{!4401, !4401, i64 0}
!4401 = !{!"000001F2EB0DBA20.w8.b16", !4402, i64 0}
!4402 = !{!"000001F2EB0DBA20.w16.b16", !4391, i64 0}
!4403 = !{!4404, !4404, i64 0}
!4404 = !{!"000001F2EB0DBA20.w8.b24", !4402, i64 0}
!4405 = !{!4406, !4406, i64 0}
!4406 = !{!"000001F2EB0DBA20.w8.b32", !4407, i64 0}
!4407 = !{!"000001F2EB0DBA20.w16.b32", !4408, i64 0}
!4408 = !{!"000001F2EB0DBA20.w32.b32", !4392, i64 0}
!4409 = !{!4410, !4410, i64 0}
!4410 = !{!"000001F2EB0DC9E0.w8.b8", !4411, i64 0}
!4411 = !{!"000001F2EB0DC9E0.w16.b0", !4412, i64 0}
!4412 = !{!"000001F2EB0DC9E0.w32.b0", !4413, i64 0}
!4413 = !{!"000001F2EB0DC9E0.w64.b0", !4414, i64 0}
!4414 = !{!"000001F2EB0DC9E0.w128.b0", !4415, i64 0}
!4415 = !{!"000001F2EB0DC9E0.w256.b0", !4416, i64 0}
!4416 = !{!"000001F2EB0DC9E0.w512.b0", !4417, i64 0}
!4417 = !{!"000001F2EB0DC9E0.w1024.b0", !4418, i64 0}
!4418 = !{!"000001F2EB0DC9E0", !21, i64 0}
!4419 = !{!4420, !4420, i64 0}
!4420 = !{!"000001F2EB0DC9E0.w8.b32", !4421, i64 0}
!4421 = !{!"000001F2EB0DC9E0.w16.b32", !4422, i64 0}
!4422 = !{!"000001F2EB0DC9E0.w32.b32", !4413, i64 0}
!4423 = !{!4424, !4424, i64 0}
!4424 = !{!"000001F2EB0DC620.w8.b0", !4425, i64 0}
!4425 = !{!"000001F2EB0DC620.w16.b0", !4426, i64 0}
!4426 = !{!"000001F2EB0DC620.w32.b0", !4427, i64 0}
!4427 = !{!"000001F2EB0DC620.w64.b0", !4428, i64 0}
!4428 = !{!"000001F2EB0DC620.w128.b0", !4429, i64 0}
!4429 = !{!"000001F2EB0DC620.w256.b0", !4430, i64 0}
!4430 = !{!"000001F2EB0DC620.w512.b0", !4431, i64 0}
!4431 = !{!"000001F2EB0DC620.w1024.b0", !4432, i64 0}
!4432 = !{!"000001F2EB0DC620", !21, i64 0}
!4433 = !{!4434, !4434, i64 0}
!4434 = !{!"000001F2EB0DC620.w8.b8", !4425, i64 0}
!4435 = !{!4436, !4436, i64 0}
!4436 = !{!"000001F2EB0DC620.w8.b16", !4437, i64 0}
!4437 = !{!"000001F2EB0DC620.w16.b16", !4426, i64 0}
!4438 = !{!4439, !4439, i64 0}
!4439 = !{!"000001F2EB0DC620.w8.b24", !4437, i64 0}
!4440 = !{!4441, !4441, i64 0}
!4441 = !{!"000001F2EB0DC620.w8.b32", !4442, i64 0}
!4442 = !{!"000001F2EB0DC620.w16.b32", !4443, i64 0}
!4443 = !{!"000001F2EB0DC620.w32.b32", !4427, i64 0}
!4444 = !{!4445, !4445, i64 0}
!4445 = !{!"000001F2EB0DDFA0.w8.b8", !4446, i64 0}
!4446 = !{!"000001F2EB0DDFA0.w16.b0", !4447, i64 0}
!4447 = !{!"000001F2EB0DDFA0.w32.b0", !4448, i64 0}
!4448 = !{!"000001F2EB0DDFA0.w64.b0", !4449, i64 0}
!4449 = !{!"000001F2EB0DDFA0.w128.b0", !4450, i64 0}
!4450 = !{!"000001F2EB0DDFA0.w256.b0", !4451, i64 0}
!4451 = !{!"000001F2EB0DDFA0.w512.b0", !4452, i64 0}
!4452 = !{!"000001F2EB0DDFA0.w1024.b0", !4453, i64 0}
!4453 = !{!"000001F2EB0DDFA0", !21, i64 0}
!4454 = !{!4455, !4455, i64 0}
!4455 = !{!"000001F2EB0DDFA0.w8.b16", !4456, i64 0}
!4456 = !{!"000001F2EB0DDFA0.w16.b16", !4447, i64 0}
!4457 = !{!4458, !4458, i64 0}
!4458 = !{!"000001F2EB0DDFA0.w8.b24", !4456, i64 0}
!4459 = !{!4460, !4460, i64 0}
!4460 = !{!"000001F2EB0DDFA0.w8.b32", !4461, i64 0}
!4461 = !{!"000001F2EB0DDFA0.w16.b32", !4462, i64 0}
!4462 = !{!"000001F2EB0DDFA0.w32.b32", !4448, i64 0}
!4463 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4464)
!4464 = !{!4465, !4466, !4467, !4468, !4469, !4470}
!4465 = !DILocalVariable(name: "arg1", arg: 1, scope: !4463, file: !1, type: !8)
!4466 = !DILocalVariable(name: "arg2", arg: 2, scope: !4463, file: !1, type: !9)
!4467 = !DILocalVariable(name: "arg3", arg: 3, scope: !4463, file: !1, type: !7)
!4468 = !DILocalVariable(name: "arg4", arg: 4, scope: !4463, file: !1, type: !8)
!4469 = !DILocalVariable(name: "arg5", arg: 5, scope: !4463, file: !1, type: !9)
!4470 = !DILocalVariable(name: "arg6", arg: 6, scope: !4463, file: !1, type: !8)
!4471 = !DILocation(line: 0, scope: !4463)
!4472 = !{!4473, !4473, i64 0}
!4473 = !{!"000001F28339D4E0.w4.b0", !4474, i64 0}
!4474 = !{!"000001F28339D4E0.w8.b0", !4475, i64 0}
!4475 = !{!"000001F28339D4E0.w16.b0", !4476, i64 0}
!4476 = !{!"000001F28339D4E0.w32.b0", !4477, i64 0}
!4477 = !{!"000001F28339D4E0.w64.b0", !4478, i64 0}
!4478 = !{!"000001F28339D4E0.w128.b0", !4479, i64 0}
!4479 = !{!"000001F28339D4E0.w256.b0", !4480, i64 0}
!4480 = !{!"000001F28339D4E0.w512.b0", !4481, i64 0}
!4481 = !{!"000001F28339D4E0.w1024.b0", !4482, i64 0}
!4482 = !{!"000001F28339D4E0", !21, i64 0}
!4483 = !{!4484, !4484, i64 0}
!4484 = !{!"000001F28339D4E0.w4.b4", !4474, i64 0}
!4485 = !{!4486, !4486, i64 0}
!4486 = !{!"000001F28339D4E0.w4.b8", !4487, i64 0}
!4487 = !{!"000001F28339D4E0.w8.b8", !4475, i64 0}
!4488 = !{!4489, !4489, i64 0}
!4489 = !{!"000001F28339D4E0.w4.b12", !4487, i64 0}
!4490 = !{!4491, !4491, i64 0}
!4491 = !{!"000001F2833A6020.w8.b0", !4492, i64 0}
!4492 = !{!"000001F2833A6020.w16.b0", !4493, i64 0}
!4493 = !{!"000001F2833A6020.w32.b0", !4494, i64 0}
!4494 = !{!"000001F2833A6020.w64.b0", !4495, i64 0}
!4495 = !{!"000001F2833A6020.w128.b0", !4496, i64 0}
!4496 = !{!"000001F2833A6020.w256.b0", !4497, i64 0}
!4497 = !{!"000001F2833A6020.w512.b0", !4498, i64 0}
!4498 = !{!"000001F2833A6020.w1024.b0", !4499, i64 0}
!4499 = !{!"000001F2833A6020", !21, i64 0}
!4500 = !{!4501, !4501, i64 0}
!4501 = !{!"000001F2833A6020.w8.b8", !4492, i64 0}
!4502 = !{!4503, !4503, i64 0}
!4503 = !{!"000001F2833A6020.w8.b16", !4504, i64 0}
!4504 = !{!"000001F2833A6020.w16.b16", !4493, i64 0}
!4505 = !{!4506, !4506, i64 0}
!4506 = !{!"000001F2833A6020.w8.b24", !4504, i64 0}
!4507 = !{!4508, !4508, i64 0}
!4508 = !{!"000001F2833A6020.w8.b32", !4509, i64 0}
!4509 = !{!"000001F2833A6020.w16.b32", !4510, i64 0}
!4510 = !{!"000001F2833A6020.w32.b32", !4494, i64 0}
!4511 = !{!4512, !4512, i64 0}
!4512 = !{!"000001F2833A65A0.w8.b8", !4513, i64 0}
!4513 = !{!"000001F2833A65A0.w16.b0", !4514, i64 0}
!4514 = !{!"000001F2833A65A0.w32.b0", !4515, i64 0}
!4515 = !{!"000001F2833A65A0.w64.b0", !4516, i64 0}
!4516 = !{!"000001F2833A65A0.w128.b0", !4517, i64 0}
!4517 = !{!"000001F2833A65A0.w256.b0", !4518, i64 0}
!4518 = !{!"000001F2833A65A0.w512.b0", !4519, i64 0}
!4519 = !{!"000001F2833A65A0.w1024.b0", !4520, i64 0}
!4520 = !{!"000001F2833A65A0", !21, i64 0}
!4521 = !{!4522, !4522, i64 0}
!4522 = !{!"000001F2833A65A0.w8.b16", !4523, i64 0}
!4523 = !{!"000001F2833A65A0.w16.b16", !4514, i64 0}
!4524 = !{!4525, !4525, i64 0}
!4525 = !{!"000001F2833A65A0.w8.b24", !4523, i64 0}
!4526 = !{!4527, !4527, i64 0}
!4527 = !{!"000001F2833A65A0.w8.b32", !4528, i64 0}
!4528 = !{!"000001F2833A65A0.w16.b32", !4529, i64 0}
!4529 = !{!"000001F2833A65A0.w32.b32", !4515, i64 0}
!4530 = !{!4531, !4531, i64 0}
!4531 = !{!"000001F2833A6E20.w8.b0", !4532, i64 0}
!4532 = !{!"000001F2833A6E20.w16.b0", !4533, i64 0}
!4533 = !{!"000001F2833A6E20.w32.b0", !4534, i64 0}
!4534 = !{!"000001F2833A6E20.w64.b0", !4535, i64 0}
!4535 = !{!"000001F2833A6E20.w128.b0", !4536, i64 0}
!4536 = !{!"000001F2833A6E20.w256.b0", !4537, i64 0}
!4537 = !{!"000001F2833A6E20.w512.b0", !4538, i64 0}
!4538 = !{!"000001F2833A6E20.w1024.b0", !4539, i64 0}
!4539 = !{!"000001F2833A6E20", !21, i64 0}
!4540 = !{!4541, !4541, i64 0}
!4541 = !{!"000001F2833A6E20.w8.b8", !4532, i64 0}
!4542 = !{!4543, !4543, i64 0}
!4543 = !{!"000001F2833A6E20.w8.b16", !4544, i64 0}
!4544 = !{!"000001F2833A6E20.w16.b16", !4533, i64 0}
!4545 = !{!4546, !4546, i64 0}
!4546 = !{!"000001F2833A6E20.w8.b24", !4544, i64 0}
!4547 = !{!4548, !4548, i64 0}
!4548 = !{!"000001F2833A6E20.w8.b32", !4549, i64 0}
!4549 = !{!"000001F2833A6E20.w16.b32", !4550, i64 0}
!4550 = !{!"000001F2833A6E20.w32.b32", !4534, i64 0}
!4551 = !{!4552, !4552, i64 0}
!4552 = !{!"000001F2833A6E20.w8.b40", !4549, i64 0}
!4553 = !{!4554, !4554, i64 0}
!4554 = !{!"000001F2833A7AA0.w8.b0", !4555, i64 0}
!4555 = !{!"000001F2833A7AA0.w16.b0", !4556, i64 0}
!4556 = !{!"000001F2833A7AA0.w32.b0", !4557, i64 0}
!4557 = !{!"000001F2833A7AA0.w64.b0", !4558, i64 0}
!4558 = !{!"000001F2833A7AA0.w128.b0", !4559, i64 0}
!4559 = !{!"000001F2833A7AA0.w256.b0", !4560, i64 0}
!4560 = !{!"000001F2833A7AA0.w512.b0", !4561, i64 0}
!4561 = !{!"000001F2833A7AA0.w1024.b0", !4562, i64 0}
!4562 = !{!"000001F2833A7AA0", !21, i64 0}
!4563 = !{!4564, !4564, i64 0}
!4564 = !{!"000001F2833A7AA0.w8.b8", !4555, i64 0}
!4565 = !{!4566, !4566, i64 0}
!4566 = !{!"000001F2833A7AA0.w8.b16", !4567, i64 0}
!4567 = !{!"000001F2833A7AA0.w16.b16", !4556, i64 0}
!4568 = !{!4569, !4569, i64 0}
!4569 = !{!"000001F2833A7AA0.w8.b24", !4567, i64 0}
!4570 = !{!4571, !4571, i64 0}
!4571 = !{!"000001F2833A7AA0.w8.b32", !4572, i64 0}
!4572 = !{!"000001F2833A7AA0.w16.b32", !4573, i64 0}
!4573 = !{!"000001F2833A7AA0.w32.b32", !4557, i64 0}
!4574 = !{!4575, !4575, i64 0}
!4575 = !{!"000001F2833A7AA0.w8.b40", !4572, i64 0}
!4576 = !{!4577, !4577, i64 0}
!4577 = !{!"000001F2833A86E0.w8.b0", !4578, i64 0}
!4578 = !{!"000001F2833A86E0.w16.b0", !4579, i64 0}
!4579 = !{!"000001F2833A86E0.w32.b0", !4580, i64 0}
!4580 = !{!"000001F2833A86E0.w64.b0", !4581, i64 0}
!4581 = !{!"000001F2833A86E0.w128.b0", !4582, i64 0}
!4582 = !{!"000001F2833A86E0.w256.b0", !4583, i64 0}
!4583 = !{!"000001F2833A86E0.w512.b0", !4584, i64 0}
!4584 = !{!"000001F2833A86E0.w1024.b0", !4585, i64 0}
!4585 = !{!"000001F2833A86E0", !21, i64 0}
!4586 = !{!4587, !4587, i64 0}
!4587 = !{!"000001F2833A86E0.w8.b8", !4578, i64 0}
!4588 = !{!4589, !4589, i64 0}
!4589 = !{!"000001F2833A86E0.w8.b16", !4590, i64 0}
!4590 = !{!"000001F2833A86E0.w16.b16", !4579, i64 0}
!4591 = !{!4592, !4592, i64 0}
!4592 = !{!"000001F2833A86E0.w8.b24", !4590, i64 0}
!4593 = !{!4594, !4594, i64 0}
!4594 = !{!"000001F2833A86E0.w8.b32", !4595, i64 0}
!4595 = !{!"000001F2833A86E0.w16.b32", !4596, i64 0}
!4596 = !{!"000001F2833A86E0.w32.b32", !4580, i64 0}
!4597 = !{!4598, !4598, i64 0}
!4598 = !{!"000001F2833A81E0.w8.b8", !4599, i64 0}
!4599 = !{!"000001F2833A81E0.w16.b0", !4600, i64 0}
!4600 = !{!"000001F2833A81E0.w32.b0", !4601, i64 0}
!4601 = !{!"000001F2833A81E0.w64.b0", !4602, i64 0}
!4602 = !{!"000001F2833A81E0.w128.b0", !4603, i64 0}
!4603 = !{!"000001F2833A81E0.w256.b0", !4604, i64 0}
!4604 = !{!"000001F2833A81E0.w512.b0", !4605, i64 0}
!4605 = !{!"000001F2833A81E0.w1024.b0", !4606, i64 0}
!4606 = !{!"000001F2833A81E0", !21, i64 0}
!4607 = !{!4608, !4608, i64 0}
!4608 = !{!"000001F2833A81E0.w8.b32", !4609, i64 0}
!4609 = !{!"000001F2833A81E0.w16.b32", !4610, i64 0}
!4610 = !{!"000001F2833A81E0.w32.b32", !4601, i64 0}
!4611 = !{!4612, !4612, i64 0}
!4612 = !{!"000001F2833A8A60.w8.b0", !4613, i64 0}
!4613 = !{!"000001F2833A8A60.w16.b0", !4614, i64 0}
!4614 = !{!"000001F2833A8A60.w32.b0", !4615, i64 0}
!4615 = !{!"000001F2833A8A60.w64.b0", !4616, i64 0}
!4616 = !{!"000001F2833A8A60.w128.b0", !4617, i64 0}
!4617 = !{!"000001F2833A8A60.w256.b0", !4618, i64 0}
!4618 = !{!"000001F2833A8A60.w512.b0", !4619, i64 0}
!4619 = !{!"000001F2833A8A60.w1024.b0", !4620, i64 0}
!4620 = !{!"000001F2833A8A60", !21, i64 0}
!4621 = !{!4622, !4622, i64 0}
!4622 = !{!"000001F2833A8A60.w8.b8", !4613, i64 0}
!4623 = !{!4624, !4624, i64 0}
!4624 = !{!"000001F2833A8A60.w8.b16", !4625, i64 0}
!4625 = !{!"000001F2833A8A60.w16.b16", !4614, i64 0}
!4626 = !{!4627, !4627, i64 0}
!4627 = !{!"000001F2833A8A60.w8.b24", !4625, i64 0}
!4628 = !{!4629, !4629, i64 0}
!4629 = !{!"000001F2833A8A60.w8.b32", !4630, i64 0}
!4630 = !{!"000001F2833A8A60.w16.b32", !4631, i64 0}
!4631 = !{!"000001F2833A8A60.w32.b32", !4615, i64 0}
!4632 = !{!4633, !4633, i64 0}
!4633 = !{!"000001F2833A9660.w8.b8", !4634, i64 0}
!4634 = !{!"000001F2833A9660.w16.b0", !4635, i64 0}
!4635 = !{!"000001F2833A9660.w32.b0", !4636, i64 0}
!4636 = !{!"000001F2833A9660.w64.b0", !4637, i64 0}
!4637 = !{!"000001F2833A9660.w128.b0", !4638, i64 0}
!4638 = !{!"000001F2833A9660.w256.b0", !4639, i64 0}
!4639 = !{!"000001F2833A9660.w512.b0", !4640, i64 0}
!4640 = !{!"000001F2833A9660.w1024.b0", !4641, i64 0}
!4641 = !{!"000001F2833A9660", !21, i64 0}
!4642 = !{!4643, !4643, i64 0}
!4643 = !{!"000001F2833A9660.w8.b16", !4644, i64 0}
!4644 = !{!"000001F2833A9660.w16.b16", !4635, i64 0}
!4645 = !{!4646, !4646, i64 0}
!4646 = !{!"000001F2833A9660.w8.b24", !4644, i64 0}
!4647 = !{!4648, !4648, i64 0}
!4648 = !{!"000001F2833A9660.w8.b32", !4649, i64 0}
!4649 = !{!"000001F2833A9660.w16.b32", !4650, i64 0}
!4650 = !{!"000001F2833A9660.w32.b32", !4636, i64 0}
!4651 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4652)
!4652 = !{!4653, !4654, !4655, !4656, !4657, !4658}
!4653 = !DILocalVariable(name: "arg1", arg: 1, scope: !4651, file: !1, type: !8)
!4654 = !DILocalVariable(name: "arg2", arg: 2, scope: !4651, file: !1, type: !9)
!4655 = !DILocalVariable(name: "arg3", arg: 3, scope: !4651, file: !1, type: !7)
!4656 = !DILocalVariable(name: "arg4", arg: 4, scope: !4651, file: !1, type: !8)
!4657 = !DILocalVariable(name: "arg5", arg: 5, scope: !4651, file: !1, type: !9)
!4658 = !DILocalVariable(name: "arg6", arg: 6, scope: !4651, file: !1, type: !8)
!4659 = !DILocation(line: 0, scope: !4651)
!4660 = !{!4661, !4661, i64 0}
!4661 = !{!"000001F2EB0D3460.w4.b0", !4662, i64 0}
!4662 = !{!"000001F2EB0D3460.w8.b0", !4663, i64 0}
!4663 = !{!"000001F2EB0D3460.w16.b0", !4664, i64 0}
!4664 = !{!"000001F2EB0D3460.w32.b0", !4665, i64 0}
!4665 = !{!"000001F2EB0D3460.w64.b0", !4666, i64 0}
!4666 = !{!"000001F2EB0D3460.w128.b0", !4667, i64 0}
!4667 = !{!"000001F2EB0D3460.w256.b0", !4668, i64 0}
!4668 = !{!"000001F2EB0D3460.w512.b0", !4669, i64 0}
!4669 = !{!"000001F2EB0D3460.w1024.b0", !4670, i64 0}
!4670 = !{!"000001F2EB0D3460", !21, i64 0}
!4671 = !{!4672, !4672, i64 0}
!4672 = !{!"000001F2EB0D3460.w4.b4", !4662, i64 0}
!4673 = !{!4674, !4674, i64 0}
!4674 = !{!"000001F2EB0D3460.w4.b8", !4675, i64 0}
!4675 = !{!"000001F2EB0D3460.w8.b8", !4663, i64 0}
!4676 = !{!4677, !4677, i64 0}
!4677 = !{!"000001F2EB0D3460.w4.b12", !4675, i64 0}
!4678 = !{!4679, !4679, i64 0}
!4679 = !{!"000001F2EB0D6060.w8.b0", !4680, i64 0}
!4680 = !{!"000001F2EB0D6060.w16.b0", !4681, i64 0}
!4681 = !{!"000001F2EB0D6060.w32.b0", !4682, i64 0}
!4682 = !{!"000001F2EB0D6060.w64.b0", !4683, i64 0}
!4683 = !{!"000001F2EB0D6060.w128.b0", !4684, i64 0}
!4684 = !{!"000001F2EB0D6060.w256.b0", !4685, i64 0}
!4685 = !{!"000001F2EB0D6060.w512.b0", !4686, i64 0}
!4686 = !{!"000001F2EB0D6060.w1024.b0", !4687, i64 0}
!4687 = !{!"000001F2EB0D6060", !21, i64 0}
!4688 = !{!4689, !4689, i64 0}
!4689 = !{!"000001F2EB0D6060.w8.b8", !4680, i64 0}
!4690 = !{!4691, !4691, i64 0}
!4691 = !{!"000001F2EB0D6060.w8.b16", !4692, i64 0}
!4692 = !{!"000001F2EB0D6060.w16.b16", !4681, i64 0}
!4693 = !{!4694, !4694, i64 0}
!4694 = !{!"000001F2EB0D6060.w8.b24", !4692, i64 0}
!4695 = !{!4696, !4696, i64 0}
!4696 = !{!"000001F2EB0D6060.w8.b32", !4697, i64 0}
!4697 = !{!"000001F2EB0D6060.w16.b32", !4698, i64 0}
!4698 = !{!"000001F2EB0D6060.w32.b32", !4682, i64 0}
!4699 = !{!4700, !4700, i64 0}
!4700 = !{!"000001F2EB0D59E0.w8.b8", !4701, i64 0}
!4701 = !{!"000001F2EB0D59E0.w16.b0", !4702, i64 0}
!4702 = !{!"000001F2EB0D59E0.w32.b0", !4703, i64 0}
!4703 = !{!"000001F2EB0D59E0.w64.b0", !4704, i64 0}
!4704 = !{!"000001F2EB0D59E0.w128.b0", !4705, i64 0}
!4705 = !{!"000001F2EB0D59E0.w256.b0", !4706, i64 0}
!4706 = !{!"000001F2EB0D59E0.w512.b0", !4707, i64 0}
!4707 = !{!"000001F2EB0D59E0.w1024.b0", !4708, i64 0}
!4708 = !{!"000001F2EB0D59E0", !21, i64 0}
!4709 = !{!4710, !4710, i64 0}
!4710 = !{!"000001F2EB0D59E0.w8.b16", !4711, i64 0}
!4711 = !{!"000001F2EB0D59E0.w16.b16", !4702, i64 0}
!4712 = !{!4713, !4713, i64 0}
!4713 = !{!"000001F2EB0D59E0.w8.b24", !4711, i64 0}
!4714 = !{!4715, !4715, i64 0}
!4715 = !{!"000001F2EB0D59E0.w8.b32", !4716, i64 0}
!4716 = !{!"000001F2EB0D59E0.w16.b32", !4717, i64 0}
!4717 = !{!"000001F2EB0D59E0.w32.b32", !4703, i64 0}
!4718 = !{!4719, !4719, i64 0}
!4719 = !{!"000001F2EB0D6660.w8.b0", !4720, i64 0}
!4720 = !{!"000001F2EB0D6660.w16.b0", !4721, i64 0}
!4721 = !{!"000001F2EB0D6660.w32.b0", !4722, i64 0}
!4722 = !{!"000001F2EB0D6660.w64.b0", !4723, i64 0}
!4723 = !{!"000001F2EB0D6660.w128.b0", !4724, i64 0}
!4724 = !{!"000001F2EB0D6660.w256.b0", !4725, i64 0}
!4725 = !{!"000001F2EB0D6660.w512.b0", !4726, i64 0}
!4726 = !{!"000001F2EB0D6660.w1024.b0", !4727, i64 0}
!4727 = !{!"000001F2EB0D6660", !21, i64 0}
!4728 = !{!4729, !4729, i64 0}
!4729 = !{!"000001F2EB0D6660.w8.b8", !4720, i64 0}
!4730 = !{!4731, !4731, i64 0}
!4731 = !{!"000001F2EB0D6660.w8.b16", !4732, i64 0}
!4732 = !{!"000001F2EB0D6660.w16.b16", !4721, i64 0}
!4733 = !{!4734, !4734, i64 0}
!4734 = !{!"000001F2EB0D6660.w8.b24", !4732, i64 0}
!4735 = !{!4736, !4736, i64 0}
!4736 = !{!"000001F2EB0D6660.w8.b32", !4737, i64 0}
!4737 = !{!"000001F2EB0D6660.w16.b32", !4738, i64 0}
!4738 = !{!"000001F2EB0D6660.w32.b32", !4722, i64 0}
!4739 = !{!4740, !4740, i64 0}
!4740 = !{!"000001F2EB0D6660.w8.b40", !4737, i64 0}
!4741 = !{!4742, !4742, i64 0}
!4742 = !{!"000001F2EB0D63A0.w8.b0", !4743, i64 0}
!4743 = !{!"000001F2EB0D63A0.w16.b0", !4744, i64 0}
!4744 = !{!"000001F2EB0D63A0.w32.b0", !4745, i64 0}
!4745 = !{!"000001F2EB0D63A0.w64.b0", !4746, i64 0}
!4746 = !{!"000001F2EB0D63A0.w128.b0", !4747, i64 0}
!4747 = !{!"000001F2EB0D63A0.w256.b0", !4748, i64 0}
!4748 = !{!"000001F2EB0D63A0.w512.b0", !4749, i64 0}
!4749 = !{!"000001F2EB0D63A0.w1024.b0", !4750, i64 0}
!4750 = !{!"000001F2EB0D63A0", !21, i64 0}
!4751 = !{!4752, !4752, i64 0}
!4752 = !{!"000001F2EB0D63A0.w8.b8", !4743, i64 0}
!4753 = !{!4754, !4754, i64 0}
!4754 = !{!"000001F2EB0D63A0.w8.b32", !4755, i64 0}
!4755 = !{!"000001F2EB0D63A0.w16.b32", !4756, i64 0}
!4756 = !{!"000001F2EB0D63A0.w32.b32", !4745, i64 0}
!4757 = !{!4758, !4758, i64 0}
!4758 = !{!"000001F2EB0D63A0.w8.b40", !4755, i64 0}
!4759 = !{!4760, !4760, i64 0}
!4760 = !{!"000001F2EB0D7660.w8.b0", !4761, i64 0}
!4761 = !{!"000001F2EB0D7660.w16.b0", !4762, i64 0}
!4762 = !{!"000001F2EB0D7660.w32.b0", !4763, i64 0}
!4763 = !{!"000001F2EB0D7660.w64.b0", !4764, i64 0}
!4764 = !{!"000001F2EB0D7660.w128.b0", !4765, i64 0}
!4765 = !{!"000001F2EB0D7660.w256.b0", !4766, i64 0}
!4766 = !{!"000001F2EB0D7660.w512.b0", !4767, i64 0}
!4767 = !{!"000001F2EB0D7660.w1024.b0", !4768, i64 0}
!4768 = !{!"000001F2EB0D7660", !21, i64 0}
!4769 = !{!4770, !4770, i64 0}
!4770 = !{!"000001F2EB0D7660.w8.b8", !4761, i64 0}
!4771 = !{!4772, !4772, i64 0}
!4772 = !{!"000001F2EB0D7660.w8.b16", !4773, i64 0}
!4773 = !{!"000001F2EB0D7660.w16.b16", !4762, i64 0}
!4774 = !{!4775, !4775, i64 0}
!4775 = !{!"000001F2EB0D7660.w8.b24", !4773, i64 0}
!4776 = !{!4777, !4777, i64 0}
!4777 = !{!"000001F2EB0D7660.w8.b32", !4778, i64 0}
!4778 = !{!"000001F2EB0D7660.w16.b32", !4779, i64 0}
!4779 = !{!"000001F2EB0D7660.w32.b32", !4763, i64 0}
!4780 = !{!4781, !4781, i64 0}
!4781 = !{!"000001F2EB0D7E20.w8.b8", !4782, i64 0}
!4782 = !{!"000001F2EB0D7E20.w16.b0", !4783, i64 0}
!4783 = !{!"000001F2EB0D7E20.w32.b0", !4784, i64 0}
!4784 = !{!"000001F2EB0D7E20.w64.b0", !4785, i64 0}
!4785 = !{!"000001F2EB0D7E20.w128.b0", !4786, i64 0}
!4786 = !{!"000001F2EB0D7E20.w256.b0", !4787, i64 0}
!4787 = !{!"000001F2EB0D7E20.w512.b0", !4788, i64 0}
!4788 = !{!"000001F2EB0D7E20.w1024.b0", !4789, i64 0}
!4789 = !{!"000001F2EB0D7E20", !21, i64 0}
!4790 = !{!4791, !4791, i64 0}
!4791 = !{!"000001F2EB0D7E20.w8.b32", !4792, i64 0}
!4792 = !{!"000001F2EB0D7E20.w16.b32", !4793, i64 0}
!4793 = !{!"000001F2EB0D7E20.w32.b32", !4784, i64 0}
!4794 = !{!4795, !4795, i64 0}
!4795 = !{!"000001F2EB0D8820.w8.b0", !4796, i64 0}
!4796 = !{!"000001F2EB0D8820.w16.b0", !4797, i64 0}
!4797 = !{!"000001F2EB0D8820.w32.b0", !4798, i64 0}
!4798 = !{!"000001F2EB0D8820.w64.b0", !4799, i64 0}
!4799 = !{!"000001F2EB0D8820.w128.b0", !4800, i64 0}
!4800 = !{!"000001F2EB0D8820.w256.b0", !4801, i64 0}
!4801 = !{!"000001F2EB0D8820.w512.b0", !4802, i64 0}
!4802 = !{!"000001F2EB0D8820.w1024.b0", !4803, i64 0}
!4803 = !{!"000001F2EB0D8820", !21, i64 0}
!4804 = !{!4805, !4805, i64 0}
!4805 = !{!"000001F2EB0D8820.w8.b8", !4796, i64 0}
!4806 = !{!4807, !4807, i64 0}
!4807 = !{!"000001F2EB0D8820.w8.b16", !4808, i64 0}
!4808 = !{!"000001F2EB0D8820.w16.b16", !4797, i64 0}
!4809 = !{!4810, !4810, i64 0}
!4810 = !{!"000001F2EB0D8820.w8.b24", !4808, i64 0}
!4811 = !{!4812, !4812, i64 0}
!4812 = !{!"000001F2EB0D8820.w8.b32", !4813, i64 0}
!4813 = !{!"000001F2EB0D8820.w16.b32", !4814, i64 0}
!4814 = !{!"000001F2EB0D8820.w32.b32", !4798, i64 0}
!4815 = !{!4816, !4816, i64 0}
!4816 = !{!"000001F2EB0D8760.w8.b8", !4817, i64 0}
!4817 = !{!"000001F2EB0D8760.w16.b0", !4818, i64 0}
!4818 = !{!"000001F2EB0D8760.w32.b0", !4819, i64 0}
!4819 = !{!"000001F2EB0D8760.w64.b0", !4820, i64 0}
!4820 = !{!"000001F2EB0D8760.w128.b0", !4821, i64 0}
!4821 = !{!"000001F2EB0D8760.w256.b0", !4822, i64 0}
!4822 = !{!"000001F2EB0D8760.w512.b0", !4823, i64 0}
!4823 = !{!"000001F2EB0D8760.w1024.b0", !4824, i64 0}
!4824 = !{!"000001F2EB0D8760", !21, i64 0}
!4825 = !{!4826, !4826, i64 0}
!4826 = !{!"000001F2EB0D8760.w8.b16", !4827, i64 0}
!4827 = !{!"000001F2EB0D8760.w16.b16", !4818, i64 0}
!4828 = !{!4829, !4829, i64 0}
!4829 = !{!"000001F2EB0D8760.w8.b24", !4827, i64 0}
!4830 = !{!4831, !4831, i64 0}
!4831 = !{!"000001F2EB0D8760.w8.b32", !4832, i64 0}
!4832 = !{!"000001F2EB0D8760.w16.b32", !4833, i64 0}
!4833 = !{!"000001F2EB0D8760.w32.b32", !4819, i64 0}
!4834 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4835)
!4835 = !{!4836, !4837, !4838, !4839, !4840, !4841}
!4836 = !DILocalVariable(name: "arg1", arg: 1, scope: !4834, file: !1, type: !8)
!4837 = !DILocalVariable(name: "arg2", arg: 2, scope: !4834, file: !1, type: !9)
!4838 = !DILocalVariable(name: "arg3", arg: 3, scope: !4834, file: !1, type: !7)
!4839 = !DILocalVariable(name: "arg4", arg: 4, scope: !4834, file: !1, type: !8)
!4840 = !DILocalVariable(name: "arg5", arg: 5, scope: !4834, file: !1, type: !9)
!4841 = !DILocalVariable(name: "arg6", arg: 6, scope: !4834, file: !1, type: !8)
!4842 = !DILocation(line: 0, scope: !4834)
!4843 = !{!4844, !4844, i64 0}
!4844 = !{!"000001F28334EAB0.w4.b0", !4845, i64 0}
!4845 = !{!"000001F28334EAB0.w8.b0", !4846, i64 0}
!4846 = !{!"000001F28334EAB0.w16.b0", !4847, i64 0}
!4847 = !{!"000001F28334EAB0.w32.b0", !4848, i64 0}
!4848 = !{!"000001F28334EAB0.w64.b0", !4849, i64 0}
!4849 = !{!"000001F28334EAB0.w128.b0", !4850, i64 0}
!4850 = !{!"000001F28334EAB0.w256.b0", !4851, i64 0}
!4851 = !{!"000001F28334EAB0.w512.b0", !4852, i64 0}
!4852 = !{!"000001F28334EAB0.w1024.b0", !4853, i64 0}
!4853 = !{!"000001F28334EAB0", !21, i64 0}
!4854 = !{!4855, !4855, i64 0}
!4855 = !{!"000001F28334EAB0.w4.b4", !4845, i64 0}
!4856 = !{!4857, !4857, i64 0}
!4857 = !{!"000001F28334EAB0.w4.b8", !4858, i64 0}
!4858 = !{!"000001F28334EAB0.w8.b8", !4846, i64 0}
!4859 = !{!4860, !4860, i64 0}
!4860 = !{!"000001F28334EAB0.w4.b12", !4858, i64 0}
!4861 = !{!4862, !4862, i64 0}
!4862 = !{!"000001F283352F30.w8.b0", !4863, i64 0}
!4863 = !{!"000001F283352F30.w16.b0", !4864, i64 0}
!4864 = !{!"000001F283352F30.w32.b0", !4865, i64 0}
!4865 = !{!"000001F283352F30.w64.b0", !4866, i64 0}
!4866 = !{!"000001F283352F30.w128.b0", !4867, i64 0}
!4867 = !{!"000001F283352F30.w256.b0", !4868, i64 0}
!4868 = !{!"000001F283352F30.w512.b0", !4869, i64 0}
!4869 = !{!"000001F283352F30.w1024.b0", !4870, i64 0}
!4870 = !{!"000001F283352F30", !21, i64 0}
!4871 = !{!4872, !4872, i64 0}
!4872 = !{!"000001F283352F30.w8.b8", !4863, i64 0}
!4873 = !{!4874, !4874, i64 0}
!4874 = !{!"000001F283352F30.w8.b16", !4875, i64 0}
!4875 = !{!"000001F283352F30.w16.b16", !4864, i64 0}
!4876 = !{!4877, !4877, i64 0}
!4877 = !{!"000001F283352F30.w8.b24", !4875, i64 0}
!4878 = !{!4879, !4879, i64 0}
!4879 = !{!"000001F283352F30.w8.b32", !4880, i64 0}
!4880 = !{!"000001F283352F30.w16.b32", !4881, i64 0}
!4881 = !{!"000001F283352F30.w32.b32", !4865, i64 0}
!4882 = !{!4883, !4883, i64 0}
!4883 = !{!"000001F2833536B0.w8.b8", !4884, i64 0}
!4884 = !{!"000001F2833536B0.w16.b0", !4885, i64 0}
!4885 = !{!"000001F2833536B0.w32.b0", !4886, i64 0}
!4886 = !{!"000001F2833536B0.w64.b0", !4887, i64 0}
!4887 = !{!"000001F2833536B0.w128.b0", !4888, i64 0}
!4888 = !{!"000001F2833536B0.w256.b0", !4889, i64 0}
!4889 = !{!"000001F2833536B0.w512.b0", !4890, i64 0}
!4890 = !{!"000001F2833536B0.w1024.b0", !4891, i64 0}
!4891 = !{!"000001F2833536B0", !21, i64 0}
!4892 = !{!4893, !4893, i64 0}
!4893 = !{!"000001F2833536B0.w8.b16", !4894, i64 0}
!4894 = !{!"000001F2833536B0.w16.b16", !4885, i64 0}
!4895 = !{!4896, !4896, i64 0}
!4896 = !{!"000001F2833536B0.w8.b24", !4894, i64 0}
!4897 = !{!4898, !4898, i64 0}
!4898 = !{!"000001F2833536B0.w8.b32", !4899, i64 0}
!4899 = !{!"000001F2833536B0.w16.b32", !4900, i64 0}
!4900 = !{!"000001F2833536B0.w32.b32", !4886, i64 0}
!4901 = !{!4902, !4902, i64 0}
!4902 = !{!"000001F2833566B0.w8.b0", !4903, i64 0}
!4903 = !{!"000001F2833566B0.w16.b0", !4904, i64 0}
!4904 = !{!"000001F2833566B0.w32.b0", !4905, i64 0}
!4905 = !{!"000001F2833566B0.w64.b0", !4906, i64 0}
!4906 = !{!"000001F2833566B0.w128.b0", !4907, i64 0}
!4907 = !{!"000001F2833566B0.w256.b0", !4908, i64 0}
!4908 = !{!"000001F2833566B0.w512.b0", !4909, i64 0}
!4909 = !{!"000001F2833566B0.w1024.b0", !4910, i64 0}
!4910 = !{!"000001F2833566B0", !21, i64 0}
!4911 = !{!4912, !4912, i64 0}
!4912 = !{!"000001F2833566B0.w8.b8", !4903, i64 0}
!4913 = !{!4914, !4914, i64 0}
!4914 = !{!"000001F2833566B0.w8.b16", !4915, i64 0}
!4915 = !{!"000001F2833566B0.w16.b16", !4904, i64 0}
!4916 = !{!4917, !4917, i64 0}
!4917 = !{!"000001F2833566B0.w8.b24", !4915, i64 0}
!4918 = !{!4919, !4919, i64 0}
!4919 = !{!"000001F2833566B0.w8.b32", !4920, i64 0}
!4920 = !{!"000001F2833566B0.w16.b32", !4921, i64 0}
!4921 = !{!"000001F2833566B0.w32.b32", !4905, i64 0}
!4922 = !{!4923, !4923, i64 0}
!4923 = !{!"000001F2833566B0.w8.b40", !4920, i64 0}
!4924 = !{!4925, !4925, i64 0}
!4925 = !{!"000001F283356370.w8.b0", !4926, i64 0}
!4926 = !{!"000001F283356370.w16.b0", !4927, i64 0}
!4927 = !{!"000001F283356370.w32.b0", !4928, i64 0}
!4928 = !{!"000001F283356370.w64.b0", !4929, i64 0}
!4929 = !{!"000001F283356370.w128.b0", !4930, i64 0}
!4930 = !{!"000001F283356370.w256.b0", !4931, i64 0}
!4931 = !{!"000001F283356370.w512.b0", !4932, i64 0}
!4932 = !{!"000001F283356370.w1024.b0", !4933, i64 0}
!4933 = !{!"000001F283356370", !21, i64 0}
!4934 = !{!4935, !4935, i64 0}
!4935 = !{!"000001F283356370.w8.b8", !4926, i64 0}
!4936 = !{!4937, !4937, i64 0}
!4937 = !{!"000001F283356370.w8.b16", !4938, i64 0}
!4938 = !{!"000001F283356370.w16.b16", !4927, i64 0}
!4939 = !{!4940, !4940, i64 0}
!4940 = !{!"000001F283356370.w8.b24", !4938, i64 0}
!4941 = !{!4942, !4942, i64 0}
!4942 = !{!"000001F283356370.w8.b32", !4943, i64 0}
!4943 = !{!"000001F283356370.w16.b32", !4944, i64 0}
!4944 = !{!"000001F283356370.w32.b32", !4928, i64 0}
!4945 = !{!4946, !4946, i64 0}
!4946 = !{!"000001F283356370.w8.b40", !4943, i64 0}
!4947 = !{!4948, !4948, i64 0}
!4948 = !{!"000001F2833578F0.w8.b0", !4949, i64 0}
!4949 = !{!"000001F2833578F0.w16.b0", !4950, i64 0}
!4950 = !{!"000001F2833578F0.w32.b0", !4951, i64 0}
!4951 = !{!"000001F2833578F0.w64.b0", !4952, i64 0}
!4952 = !{!"000001F2833578F0.w128.b0", !4953, i64 0}
!4953 = !{!"000001F2833578F0.w256.b0", !4954, i64 0}
!4954 = !{!"000001F2833578F0.w512.b0", !4955, i64 0}
!4955 = !{!"000001F2833578F0.w1024.b0", !4956, i64 0}
!4956 = !{!"000001F2833578F0", !21, i64 0}
!4957 = !{!4958, !4958, i64 0}
!4958 = !{!"000001F2833578F0.w8.b8", !4949, i64 0}
!4959 = !{!4960, !4960, i64 0}
!4960 = !{!"000001F2833578F0.w8.b16", !4961, i64 0}
!4961 = !{!"000001F2833578F0.w16.b16", !4950, i64 0}
!4962 = !{!4963, !4963, i64 0}
!4963 = !{!"000001F2833578F0.w8.b24", !4961, i64 0}
!4964 = !{!4965, !4965, i64 0}
!4965 = !{!"000001F2833578F0.w8.b32", !4966, i64 0}
!4966 = !{!"000001F2833578F0.w16.b32", !4967, i64 0}
!4967 = !{!"000001F2833578F0.w32.b32", !4951, i64 0}
!4968 = !{!4969, !4969, i64 0}
!4969 = !{!"000001F283357170.w8.b8", !4970, i64 0}
!4970 = !{!"000001F283357170.w16.b0", !4971, i64 0}
!4971 = !{!"000001F283357170.w32.b0", !4972, i64 0}
!4972 = !{!"000001F283357170.w64.b0", !4973, i64 0}
!4973 = !{!"000001F283357170.w128.b0", !4974, i64 0}
!4974 = !{!"000001F283357170.w256.b0", !4975, i64 0}
!4975 = !{!"000001F283357170.w512.b0", !4976, i64 0}
!4976 = !{!"000001F283357170.w1024.b0", !4977, i64 0}
!4977 = !{!"000001F283357170", !21, i64 0}
!4978 = !{!4979, !4979, i64 0}
!4979 = !{!"000001F283357170.w8.b32", !4980, i64 0}
!4980 = !{!"000001F283357170.w16.b32", !4981, i64 0}
!4981 = !{!"000001F283357170.w32.b32", !4972, i64 0}
!4982 = !{!4983, !4983, i64 0}
!4983 = !{!"000001F283358530.w8.b0", !4984, i64 0}
!4984 = !{!"000001F283358530.w16.b0", !4985, i64 0}
!4985 = !{!"000001F283358530.w32.b0", !4986, i64 0}
!4986 = !{!"000001F283358530.w64.b0", !4987, i64 0}
!4987 = !{!"000001F283358530.w128.b0", !4988, i64 0}
!4988 = !{!"000001F283358530.w256.b0", !4989, i64 0}
!4989 = !{!"000001F283358530.w512.b0", !4990, i64 0}
!4990 = !{!"000001F283358530.w1024.b0", !4991, i64 0}
!4991 = !{!"000001F283358530", !21, i64 0}
!4992 = !{!4993, !4993, i64 0}
!4993 = !{!"000001F283358530.w8.b8", !4984, i64 0}
!4994 = !{!4995, !4995, i64 0}
!4995 = !{!"000001F283358530.w8.b16", !4996, i64 0}
!4996 = !{!"000001F283358530.w16.b16", !4985, i64 0}
!4997 = !{!4998, !4998, i64 0}
!4998 = !{!"000001F283358530.w8.b24", !4996, i64 0}
!4999 = !{!5000, !5000, i64 0}
!5000 = !{!"000001F283358530.w8.b32", !5001, i64 0}
!5001 = !{!"000001F283358530.w16.b32", !5002, i64 0}
!5002 = !{!"000001F283358530.w32.b32", !4986, i64 0}
!5003 = !{!5004, !5004, i64 0}
!5004 = !{!"000001F283358370.w8.b8", !5005, i64 0}
!5005 = !{!"000001F283358370.w16.b0", !5006, i64 0}
!5006 = !{!"000001F283358370.w32.b0", !5007, i64 0}
!5007 = !{!"000001F283358370.w64.b0", !5008, i64 0}
!5008 = !{!"000001F283358370.w128.b0", !5009, i64 0}
!5009 = !{!"000001F283358370.w256.b0", !5010, i64 0}
!5010 = !{!"000001F283358370.w512.b0", !5011, i64 0}
!5011 = !{!"000001F283358370.w1024.b0", !5012, i64 0}
!5012 = !{!"000001F283358370", !21, i64 0}
!5013 = !{!5014, !5014, i64 0}
!5014 = !{!"000001F283358370.w8.b16", !5015, i64 0}
!5015 = !{!"000001F283358370.w16.b16", !5006, i64 0}
!5016 = !{!5017, !5017, i64 0}
!5017 = !{!"000001F283358370.w8.b24", !5015, i64 0}
!5018 = !{!5019, !5019, i64 0}
!5019 = !{!"000001F283358370.w8.b32", !5020, i64 0}
!5020 = !{!"000001F283358370.w16.b32", !5021, i64 0}
!5021 = !{!"000001F283358370.w32.b32", !5007, i64 0}
!5022 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5023)
!5023 = !{!5024, !5025, !5026, !5027, !5028, !5029}
!5024 = !DILocalVariable(name: "arg1", arg: 1, scope: !5022, file: !1, type: !8)
!5025 = !DILocalVariable(name: "arg2", arg: 2, scope: !5022, file: !1, type: !9)
!5026 = !DILocalVariable(name: "arg3", arg: 3, scope: !5022, file: !1, type: !7)
!5027 = !DILocalVariable(name: "arg4", arg: 4, scope: !5022, file: !1, type: !8)
!5028 = !DILocalVariable(name: "arg5", arg: 5, scope: !5022, file: !1, type: !9)
!5029 = !DILocalVariable(name: "arg6", arg: 6, scope: !5022, file: !1, type: !8)
!5030 = !DILocation(line: 0, scope: !5022)
!5031 = !{!5032, !5032, i64 0}
!5032 = !{!"000001F2834352A0.w4.b0", !5033, i64 0}
!5033 = !{!"000001F2834352A0.w8.b0", !5034, i64 0}
!5034 = !{!"000001F2834352A0.w16.b0", !5035, i64 0}
!5035 = !{!"000001F2834352A0.w32.b0", !5036, i64 0}
!5036 = !{!"000001F2834352A0.w64.b0", !5037, i64 0}
!5037 = !{!"000001F2834352A0.w128.b0", !5038, i64 0}
!5038 = !{!"000001F2834352A0.w256.b0", !5039, i64 0}
!5039 = !{!"000001F2834352A0.w512.b0", !5040, i64 0}
!5040 = !{!"000001F2834352A0.w1024.b0", !5041, i64 0}
!5041 = !{!"000001F2834352A0", !21, i64 0}
!5042 = !{!5043, !5043, i64 0}
!5043 = !{!"000001F2834352A0.w4.b4", !5033, i64 0}
!5044 = !{!5045, !5045, i64 0}
!5045 = !{!"000001F2834352A0.w4.b8", !5046, i64 0}
!5046 = !{!"000001F2834352A0.w8.b8", !5034, i64 0}
!5047 = !{!5048, !5048, i64 0}
!5048 = !{!"000001F2834352A0.w4.b12", !5046, i64 0}
!5049 = !{!5050, !5050, i64 0}
!5050 = !{!"000001F283436DE0.w8.b0", !5051, i64 0}
!5051 = !{!"000001F283436DE0.w16.b0", !5052, i64 0}
!5052 = !{!"000001F283436DE0.w32.b0", !5053, i64 0}
!5053 = !{!"000001F283436DE0.w64.b0", !5054, i64 0}
!5054 = !{!"000001F283436DE0.w128.b0", !5055, i64 0}
!5055 = !{!"000001F283436DE0.w256.b0", !5056, i64 0}
!5056 = !{!"000001F283436DE0.w512.b0", !5057, i64 0}
!5057 = !{!"000001F283436DE0.w1024.b0", !5058, i64 0}
!5058 = !{!"000001F283436DE0", !21, i64 0}
!5059 = !{!5060, !5060, i64 0}
!5060 = !{!"000001F283436DE0.w8.b8", !5051, i64 0}
!5061 = !{!5062, !5062, i64 0}
!5062 = !{!"000001F283436DE0.w8.b16", !5063, i64 0}
!5063 = !{!"000001F283436DE0.w16.b16", !5052, i64 0}
!5064 = !{!5065, !5065, i64 0}
!5065 = !{!"000001F283436DE0.w8.b24", !5063, i64 0}
!5066 = !{!5067, !5067, i64 0}
!5067 = !{!"000001F283436DE0.w8.b32", !5068, i64 0}
!5068 = !{!"000001F283436DE0.w16.b32", !5069, i64 0}
!5069 = !{!"000001F283436DE0.w32.b32", !5053, i64 0}
!5070 = !{!5071, !5071, i64 0}
!5071 = !{!"000001F2834372E0.w8.b8", !5072, i64 0}
!5072 = !{!"000001F2834372E0.w16.b0", !5073, i64 0}
!5073 = !{!"000001F2834372E0.w32.b0", !5074, i64 0}
!5074 = !{!"000001F2834372E0.w64.b0", !5075, i64 0}
!5075 = !{!"000001F2834372E0.w128.b0", !5076, i64 0}
!5076 = !{!"000001F2834372E0.w256.b0", !5077, i64 0}
!5077 = !{!"000001F2834372E0.w512.b0", !5078, i64 0}
!5078 = !{!"000001F2834372E0.w1024.b0", !5079, i64 0}
!5079 = !{!"000001F2834372E0", !21, i64 0}
!5080 = !{!5081, !5081, i64 0}
!5081 = !{!"000001F2834372E0.w8.b16", !5082, i64 0}
!5082 = !{!"000001F2834372E0.w16.b16", !5073, i64 0}
!5083 = !{!5084, !5084, i64 0}
!5084 = !{!"000001F2834372E0.w8.b24", !5082, i64 0}
!5085 = !{!5086, !5086, i64 0}
!5086 = !{!"000001F2834372E0.w8.b32", !5087, i64 0}
!5087 = !{!"000001F2834372E0.w16.b32", !5088, i64 0}
!5088 = !{!"000001F2834372E0.w32.b32", !5074, i64 0}
!5089 = !{!5090, !5090, i64 0}
!5090 = !{!"000001F283437BA0.w8.b0", !5091, i64 0}
!5091 = !{!"000001F283437BA0.w16.b0", !5092, i64 0}
!5092 = !{!"000001F283437BA0.w32.b0", !5093, i64 0}
!5093 = !{!"000001F283437BA0.w64.b0", !5094, i64 0}
!5094 = !{!"000001F283437BA0.w128.b0", !5095, i64 0}
!5095 = !{!"000001F283437BA0.w256.b0", !5096, i64 0}
!5096 = !{!"000001F283437BA0.w512.b0", !5097, i64 0}
!5097 = !{!"000001F283437BA0.w1024.b0", !5098, i64 0}
!5098 = !{!"000001F283437BA0", !21, i64 0}
!5099 = !{!5100, !5100, i64 0}
!5100 = !{!"000001F283437BA0.w8.b8", !5091, i64 0}
!5101 = !{!5102, !5102, i64 0}
!5102 = !{!"000001F283437BA0.w8.b16", !5103, i64 0}
!5103 = !{!"000001F283437BA0.w16.b16", !5092, i64 0}
!5104 = !{!5105, !5105, i64 0}
!5105 = !{!"000001F283437BA0.w8.b24", !5103, i64 0}
!5106 = !{!5107, !5107, i64 0}
!5107 = !{!"000001F283437BA0.w8.b32", !5108, i64 0}
!5108 = !{!"000001F283437BA0.w16.b32", !5109, i64 0}
!5109 = !{!"000001F283437BA0.w32.b32", !5093, i64 0}
!5110 = !{!5111, !5111, i64 0}
!5111 = !{!"000001F283437BA0.w8.b40", !5108, i64 0}
!5112 = !{!5113, !5113, i64 0}
!5113 = !{!"000001F283438160.w8.b0", !5114, i64 0}
!5114 = !{!"000001F283438160.w16.b0", !5115, i64 0}
!5115 = !{!"000001F283438160.w32.b0", !5116, i64 0}
!5116 = !{!"000001F283438160.w64.b0", !5117, i64 0}
!5117 = !{!"000001F283438160.w128.b0", !5118, i64 0}
!5118 = !{!"000001F283438160.w256.b0", !5119, i64 0}
!5119 = !{!"000001F283438160.w512.b0", !5120, i64 0}
!5120 = !{!"000001F283438160.w1024.b0", !5121, i64 0}
!5121 = !{!"000001F283438160", !21, i64 0}
!5122 = !{!5123, !5123, i64 0}
!5123 = !{!"000001F283438160.w8.b8", !5114, i64 0}
!5124 = !{!5125, !5125, i64 0}
!5125 = !{!"000001F283438160.w8.b32", !5126, i64 0}
!5126 = !{!"000001F283438160.w16.b32", !5127, i64 0}
!5127 = !{!"000001F283438160.w32.b32", !5116, i64 0}
!5128 = !{!5129, !5129, i64 0}
!5129 = !{!"000001F283438160.w8.b40", !5126, i64 0}
!5130 = !{!5131, !5131, i64 0}
!5131 = !{!"000001F283438960.w8.b0", !5132, i64 0}
!5132 = !{!"000001F283438960.w16.b0", !5133, i64 0}
!5133 = !{!"000001F283438960.w32.b0", !5134, i64 0}
!5134 = !{!"000001F283438960.w64.b0", !5135, i64 0}
!5135 = !{!"000001F283438960.w128.b0", !5136, i64 0}
!5136 = !{!"000001F283438960.w256.b0", !5137, i64 0}
!5137 = !{!"000001F283438960.w512.b0", !5138, i64 0}
!5138 = !{!"000001F283438960.w1024.b0", !5139, i64 0}
!5139 = !{!"000001F283438960", !21, i64 0}
!5140 = !{!5141, !5141, i64 0}
!5141 = !{!"000001F283438960.w8.b8", !5132, i64 0}
!5142 = !{!5143, !5143, i64 0}
!5143 = !{!"000001F283438960.w8.b16", !5144, i64 0}
!5144 = !{!"000001F283438960.w16.b16", !5133, i64 0}
!5145 = !{!5146, !5146, i64 0}
!5146 = !{!"000001F283438960.w8.b24", !5144, i64 0}
!5147 = !{!5148, !5148, i64 0}
!5148 = !{!"000001F283438960.w8.b32", !5149, i64 0}
!5149 = !{!"000001F283438960.w16.b32", !5150, i64 0}
!5150 = !{!"000001F283438960.w32.b32", !5134, i64 0}
!5151 = !{!5152, !5152, i64 0}
!5152 = !{!"000001F283439820.w8.b8", !5153, i64 0}
!5153 = !{!"000001F283439820.w16.b0", !5154, i64 0}
!5154 = !{!"000001F283439820.w32.b0", !5155, i64 0}
!5155 = !{!"000001F283439820.w64.b0", !5156, i64 0}
!5156 = !{!"000001F283439820.w128.b0", !5157, i64 0}
!5157 = !{!"000001F283439820.w256.b0", !5158, i64 0}
!5158 = !{!"000001F283439820.w512.b0", !5159, i64 0}
!5159 = !{!"000001F283439820.w1024.b0", !5160, i64 0}
!5160 = !{!"000001F283439820", !21, i64 0}
!5161 = !{!5162, !5162, i64 0}
!5162 = !{!"000001F283439820.w8.b32", !5163, i64 0}
!5163 = !{!"000001F283439820.w16.b32", !5164, i64 0}
!5164 = !{!"000001F283439820.w32.b32", !5155, i64 0}
!5165 = !{!5166, !5166, i64 0}
!5166 = !{!"000001F2834397A0.w8.b0", !5167, i64 0}
!5167 = !{!"000001F2834397A0.w16.b0", !5168, i64 0}
!5168 = !{!"000001F2834397A0.w32.b0", !5169, i64 0}
!5169 = !{!"000001F2834397A0.w64.b0", !5170, i64 0}
!5170 = !{!"000001F2834397A0.w128.b0", !5171, i64 0}
!5171 = !{!"000001F2834397A0.w256.b0", !5172, i64 0}
!5172 = !{!"000001F2834397A0.w512.b0", !5173, i64 0}
!5173 = !{!"000001F2834397A0.w1024.b0", !5174, i64 0}
!5174 = !{!"000001F2834397A0", !21, i64 0}
!5175 = !{!5176, !5176, i64 0}
!5176 = !{!"000001F2834397A0.w8.b8", !5167, i64 0}
!5177 = !{!5178, !5178, i64 0}
!5178 = !{!"000001F2834397A0.w8.b16", !5179, i64 0}
!5179 = !{!"000001F2834397A0.w16.b16", !5168, i64 0}
!5180 = !{!5181, !5181, i64 0}
!5181 = !{!"000001F2834397A0.w8.b24", !5179, i64 0}
!5182 = !{!5183, !5183, i64 0}
!5183 = !{!"000001F2834397A0.w8.b32", !5184, i64 0}
!5184 = !{!"000001F2834397A0.w16.b32", !5185, i64 0}
!5185 = !{!"000001F2834397A0.w32.b32", !5169, i64 0}
!5186 = !{!5187, !5187, i64 0}
!5187 = !{!"000001F283439420.w8.b8", !5188, i64 0}
!5188 = !{!"000001F283439420.w16.b0", !5189, i64 0}
!5189 = !{!"000001F283439420.w32.b0", !5190, i64 0}
!5190 = !{!"000001F283439420.w64.b0", !5191, i64 0}
!5191 = !{!"000001F283439420.w128.b0", !5192, i64 0}
!5192 = !{!"000001F283439420.w256.b0", !5193, i64 0}
!5193 = !{!"000001F283439420.w512.b0", !5194, i64 0}
!5194 = !{!"000001F283439420.w1024.b0", !5195, i64 0}
!5195 = !{!"000001F283439420", !21, i64 0}
!5196 = !{!5197, !5197, i64 0}
!5197 = !{!"000001F283439420.w8.b16", !5198, i64 0}
!5198 = !{!"000001F283439420.w16.b16", !5189, i64 0}
!5199 = !{!5200, !5200, i64 0}
!5200 = !{!"000001F283439420.w8.b24", !5198, i64 0}
!5201 = !{!5202, !5202, i64 0}
!5202 = !{!"000001F283439420.w8.b32", !5203, i64 0}
!5203 = !{!"000001F283439420.w16.b32", !5204, i64 0}
!5204 = !{!"000001F283439420.w32.b32", !5190, i64 0}
!5205 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5206)
!5206 = !{!5207, !5208, !5209, !5210, !5211, !5212}
!5207 = !DILocalVariable(name: "arg1", arg: 1, scope: !5205, file: !1, type: !8)
!5208 = !DILocalVariable(name: "arg2", arg: 2, scope: !5205, file: !1, type: !9)
!5209 = !DILocalVariable(name: "arg3", arg: 3, scope: !5205, file: !1, type: !7)
!5210 = !DILocalVariable(name: "arg4", arg: 4, scope: !5205, file: !1, type: !8)
!5211 = !DILocalVariable(name: "arg5", arg: 5, scope: !5205, file: !1, type: !9)
!5212 = !DILocalVariable(name: "arg6", arg: 6, scope: !5205, file: !1, type: !8)
!5213 = !DILocation(line: 0, scope: !5205)
!5214 = !{!5215, !5215, i64 0}
!5215 = !{!"000001F2EB0E6EA0.w4.b0", !5216, i64 0}
!5216 = !{!"000001F2EB0E6EA0.w8.b0", !5217, i64 0}
!5217 = !{!"000001F2EB0E6EA0.w16.b0", !5218, i64 0}
!5218 = !{!"000001F2EB0E6EA0.w32.b0", !5219, i64 0}
!5219 = !{!"000001F2EB0E6EA0.w64.b0", !5220, i64 0}
!5220 = !{!"000001F2EB0E6EA0.w128.b0", !5221, i64 0}
!5221 = !{!"000001F2EB0E6EA0.w256.b0", !5222, i64 0}
!5222 = !{!"000001F2EB0E6EA0.w512.b0", !5223, i64 0}
!5223 = !{!"000001F2EB0E6EA0.w1024.b0", !5224, i64 0}
!5224 = !{!"000001F2EB0E6EA0", !21, i64 0}
!5225 = !{!5226, !5226, i64 0}
!5226 = !{!"000001F2EB0E6EA0.w4.b4", !5216, i64 0}
!5227 = !{!5228, !5228, i64 0}
!5228 = !{!"000001F2EB0E6EA0.w4.b8", !5229, i64 0}
!5229 = !{!"000001F2EB0E6EA0.w8.b8", !5217, i64 0}
!5230 = !{!5231, !5231, i64 0}
!5231 = !{!"000001F2EB0E6EA0.w4.b12", !5229, i64 0}
!5232 = !{!5233, !5233, i64 0}
!5233 = !{!"000001F2EB0EF6E0.w8.b0", !5234, i64 0}
!5234 = !{!"000001F2EB0EF6E0.w16.b0", !5235, i64 0}
!5235 = !{!"000001F2EB0EF6E0.w32.b0", !5236, i64 0}
!5236 = !{!"000001F2EB0EF6E0.w64.b0", !5237, i64 0}
!5237 = !{!"000001F2EB0EF6E0.w128.b0", !5238, i64 0}
!5238 = !{!"000001F2EB0EF6E0.w256.b0", !5239, i64 0}
!5239 = !{!"000001F2EB0EF6E0.w512.b0", !5240, i64 0}
!5240 = !{!"000001F2EB0EF6E0.w1024.b0", !5241, i64 0}
!5241 = !{!"000001F2EB0EF6E0", !21, i64 0}
!5242 = !{!5243, !5243, i64 0}
!5243 = !{!"000001F2EB0EF6E0.w8.b8", !5234, i64 0}
!5244 = !{!5245, !5245, i64 0}
!5245 = !{!"000001F2EB0EF6E0.w8.b16", !5246, i64 0}
!5246 = !{!"000001F2EB0EF6E0.w16.b16", !5235, i64 0}
!5247 = !{!5248, !5248, i64 0}
!5248 = !{!"000001F2EB0EF6E0.w8.b24", !5246, i64 0}
!5249 = !{!5250, !5250, i64 0}
!5250 = !{!"000001F2EB0EF6E0.w8.b32", !5251, i64 0}
!5251 = !{!"000001F2EB0EF6E0.w16.b32", !5252, i64 0}
!5252 = !{!"000001F2EB0EF6E0.w32.b32", !5236, i64 0}
!5253 = !{!5254, !5254, i64 0}
!5254 = !{!"000001F2EB0F0560.w8.b16", !5255, i64 0}
!5255 = !{!"000001F2EB0F0560.w16.b16", !5256, i64 0}
!5256 = !{!"000001F2EB0F0560.w32.b0", !5257, i64 0}
!5257 = !{!"000001F2EB0F0560.w64.b0", !5258, i64 0}
!5258 = !{!"000001F2EB0F0560.w128.b0", !5259, i64 0}
!5259 = !{!"000001F2EB0F0560.w256.b0", !5260, i64 0}
!5260 = !{!"000001F2EB0F0560.w512.b0", !5261, i64 0}
!5261 = !{!"000001F2EB0F0560.w1024.b0", !5262, i64 0}
!5262 = !{!"000001F2EB0F0560", !21, i64 0}
!5263 = !{!5264, !5264, i64 0}
!5264 = !{!"000001F2EB0F0560.w8.b24", !5255, i64 0}
!5265 = !{!5266, !5266, i64 0}
!5266 = !{!"000001F2EB0F0560.w8.b32", !5267, i64 0}
!5267 = !{!"000001F2EB0F0560.w16.b32", !5268, i64 0}
!5268 = !{!"000001F2EB0F0560.w32.b32", !5257, i64 0}
!5269 = !{!5270, !5270, i64 0}
!5270 = !{!"000001F2EB0F08E0.w8.b0", !5271, i64 0}
!5271 = !{!"000001F2EB0F08E0.w16.b0", !5272, i64 0}
!5272 = !{!"000001F2EB0F08E0.w32.b0", !5273, i64 0}
!5273 = !{!"000001F2EB0F08E0.w64.b0", !5274, i64 0}
!5274 = !{!"000001F2EB0F08E0.w128.b0", !5275, i64 0}
!5275 = !{!"000001F2EB0F08E0.w256.b0", !5276, i64 0}
!5276 = !{!"000001F2EB0F08E0.w512.b0", !5277, i64 0}
!5277 = !{!"000001F2EB0F08E0.w1024.b0", !5278, i64 0}
!5278 = !{!"000001F2EB0F08E0", !21, i64 0}
!5279 = !{!5280, !5280, i64 0}
!5280 = !{!"000001F2EB0F08E0.w8.b8", !5271, i64 0}
!5281 = !{!5282, !5282, i64 0}
!5282 = !{!"000001F2EB0F08E0.w8.b16", !5283, i64 0}
!5283 = !{!"000001F2EB0F08E0.w16.b16", !5272, i64 0}
!5284 = !{!5285, !5285, i64 0}
!5285 = !{!"000001F2EB0F08E0.w8.b24", !5283, i64 0}
!5286 = !{!5287, !5287, i64 0}
!5287 = !{!"000001F2EB0F08E0.w8.b32", !5288, i64 0}
!5288 = !{!"000001F2EB0F08E0.w16.b32", !5289, i64 0}
!5289 = !{!"000001F2EB0F08E0.w32.b32", !5273, i64 0}
!5290 = !{!5291, !5291, i64 0}
!5291 = !{!"000001F2EB0F08E0.w8.b40", !5288, i64 0}
!5292 = !{!5293, !5293, i64 0}
!5293 = !{!"000001F2EB0F1760.w8.b0", !5294, i64 0}
!5294 = !{!"000001F2EB0F1760.w16.b0", !5295, i64 0}
!5295 = !{!"000001F2EB0F1760.w32.b0", !5296, i64 0}
!5296 = !{!"000001F2EB0F1760.w64.b0", !5297, i64 0}
!5297 = !{!"000001F2EB0F1760.w128.b0", !5298, i64 0}
!5298 = !{!"000001F2EB0F1760.w256.b0", !5299, i64 0}
!5299 = !{!"000001F2EB0F1760.w512.b0", !5300, i64 0}
!5300 = !{!"000001F2EB0F1760.w1024.b0", !5301, i64 0}
!5301 = !{!"000001F2EB0F1760", !21, i64 0}
!5302 = !{!5303, !5303, i64 0}
!5303 = !{!"000001F2EB0F1760.w8.b16", !5304, i64 0}
!5304 = !{!"000001F2EB0F1760.w16.b16", !5295, i64 0}
!5305 = !{!5306, !5306, i64 0}
!5306 = !{!"000001F2EB0F1760.w8.b24", !5304, i64 0}
!5307 = !{!5308, !5308, i64 0}
!5308 = !{!"000001F2EB0F1760.w8.b32", !5309, i64 0}
!5309 = !{!"000001F2EB0F1760.w16.b32", !5310, i64 0}
!5310 = !{!"000001F2EB0F1760.w32.b32", !5296, i64 0}
!5311 = !{!5312, !5312, i64 0}
!5312 = !{!"000001F2EB0F1760.w8.b40", !5309, i64 0}
!5313 = !{!5314, !5314, i64 0}
!5314 = !{!"000001F2EB0F1D20.w8.b0", !5315, i64 0}
!5315 = !{!"000001F2EB0F1D20.w16.b0", !5316, i64 0}
!5316 = !{!"000001F2EB0F1D20.w32.b0", !5317, i64 0}
!5317 = !{!"000001F2EB0F1D20.w64.b0", !5318, i64 0}
!5318 = !{!"000001F2EB0F1D20.w128.b0", !5319, i64 0}
!5319 = !{!"000001F2EB0F1D20.w256.b0", !5320, i64 0}
!5320 = !{!"000001F2EB0F1D20.w512.b0", !5321, i64 0}
!5321 = !{!"000001F2EB0F1D20.w1024.b0", !5322, i64 0}
!5322 = !{!"000001F2EB0F1D20", !21, i64 0}
!5323 = !{!5324, !5324, i64 0}
!5324 = !{!"000001F2EB0F1D20.w8.b8", !5315, i64 0}
!5325 = !{!5326, !5326, i64 0}
!5326 = !{!"000001F2EB0F1D20.w8.b16", !5327, i64 0}
!5327 = !{!"000001F2EB0F1D20.w16.b16", !5316, i64 0}
!5328 = !{!5329, !5329, i64 0}
!5329 = !{!"000001F2EB0F1D20.w8.b24", !5327, i64 0}
!5330 = !{!5331, !5331, i64 0}
!5331 = !{!"000001F2EB0F1D20.w8.b32", !5332, i64 0}
!5332 = !{!"000001F2EB0F1D20.w16.b32", !5333, i64 0}
!5333 = !{!"000001F2EB0F1D20.w32.b32", !5317, i64 0}
!5334 = !{!5335, !5335, i64 0}
!5335 = !{!"000001F2EB0F2DA0.w8.b8", !5336, i64 0}
!5336 = !{!"000001F2EB0F2DA0.w16.b0", !5337, i64 0}
!5337 = !{!"000001F2EB0F2DA0.w32.b0", !5338, i64 0}
!5338 = !{!"000001F2EB0F2DA0.w64.b0", !5339, i64 0}
!5339 = !{!"000001F2EB0F2DA0.w128.b0", !5340, i64 0}
!5340 = !{!"000001F2EB0F2DA0.w256.b0", !5341, i64 0}
!5341 = !{!"000001F2EB0F2DA0.w512.b0", !5342, i64 0}
!5342 = !{!"000001F2EB0F2DA0.w1024.b0", !5343, i64 0}
!5343 = !{!"000001F2EB0F2DA0", !21, i64 0}
!5344 = !{!5345, !5345, i64 0}
!5345 = !{!"000001F2EB0F2DA0.w8.b32", !5346, i64 0}
!5346 = !{!"000001F2EB0F2DA0.w16.b32", !5347, i64 0}
!5347 = !{!"000001F2EB0F2DA0.w32.b32", !5338, i64 0}
!5348 = !{!5349, !5349, i64 0}
!5349 = !{!"000001F2EB0F3120.w8.b0", !5350, i64 0}
!5350 = !{!"000001F2EB0F3120.w16.b0", !5351, i64 0}
!5351 = !{!"000001F2EB0F3120.w32.b0", !5352, i64 0}
!5352 = !{!"000001F2EB0F3120.w64.b0", !5353, i64 0}
!5353 = !{!"000001F2EB0F3120.w128.b0", !5354, i64 0}
!5354 = !{!"000001F2EB0F3120.w256.b0", !5355, i64 0}
!5355 = !{!"000001F2EB0F3120.w512.b0", !5356, i64 0}
!5356 = !{!"000001F2EB0F3120.w1024.b0", !5357, i64 0}
!5357 = !{!"000001F2EB0F3120", !21, i64 0}
!5358 = !{!5359, !5359, i64 0}
!5359 = !{!"000001F2EB0F3120.w8.b8", !5350, i64 0}
!5360 = !{!5361, !5361, i64 0}
!5361 = !{!"000001F2EB0F3120.w8.b16", !5362, i64 0}
!5362 = !{!"000001F2EB0F3120.w16.b16", !5351, i64 0}
!5363 = !{!5364, !5364, i64 0}
!5364 = !{!"000001F2EB0F3120.w8.b24", !5362, i64 0}
!5365 = !{!5366, !5366, i64 0}
!5366 = !{!"000001F2EB0F3120.w8.b32", !5367, i64 0}
!5367 = !{!"000001F2EB0F3120.w16.b32", !5368, i64 0}
!5368 = !{!"000001F2EB0F3120.w32.b32", !5352, i64 0}
!5369 = !{!5370, !5370, i64 0}
!5370 = !{!"000001F2EB0F3320.w8.b8", !5371, i64 0}
!5371 = !{!"000001F2EB0F3320.w16.b0", !5372, i64 0}
!5372 = !{!"000001F2EB0F3320.w32.b0", !5373, i64 0}
!5373 = !{!"000001F2EB0F3320.w64.b0", !5374, i64 0}
!5374 = !{!"000001F2EB0F3320.w128.b0", !5375, i64 0}
!5375 = !{!"000001F2EB0F3320.w256.b0", !5376, i64 0}
!5376 = !{!"000001F2EB0F3320.w512.b0", !5377, i64 0}
!5377 = !{!"000001F2EB0F3320.w1024.b0", !5378, i64 0}
!5378 = !{!"000001F2EB0F3320", !21, i64 0}
!5379 = !{!5380, !5380, i64 0}
!5380 = !{!"000001F2EB0F3320.w8.b16", !5381, i64 0}
!5381 = !{!"000001F2EB0F3320.w16.b16", !5372, i64 0}
!5382 = !{!5383, !5383, i64 0}
!5383 = !{!"000001F2EB0F3320.w8.b24", !5381, i64 0}
!5384 = !{!5385, !5385, i64 0}
!5385 = !{!"000001F2EB0F3320.w8.b32", !5386, i64 0}
!5386 = !{!"000001F2EB0F3320.w16.b32", !5387, i64 0}
!5387 = !{!"000001F2EB0F3320.w32.b32", !5373, i64 0}
!5388 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5389)
!5389 = !{!5390, !5391, !5392, !5393, !5394, !5395}
!5390 = !DILocalVariable(name: "arg1", arg: 1, scope: !5388, file: !1, type: !8)
!5391 = !DILocalVariable(name: "arg2", arg: 2, scope: !5388, file: !1, type: !9)
!5392 = !DILocalVariable(name: "arg3", arg: 3, scope: !5388, file: !1, type: !7)
!5393 = !DILocalVariable(name: "arg4", arg: 4, scope: !5388, file: !1, type: !8)
!5394 = !DILocalVariable(name: "arg5", arg: 5, scope: !5388, file: !1, type: !9)
!5395 = !DILocalVariable(name: "arg6", arg: 6, scope: !5388, file: !1, type: !8)
!5396 = !DILocation(line: 0, scope: !5388)
!5397 = !{!5398, !5398, i64 0}
!5398 = !{!"000001F2FC56E680.w4.b0", !5399, i64 0}
!5399 = !{!"000001F2FC56E680.w8.b0", !5400, i64 0}
!5400 = !{!"000001F2FC56E680.w16.b0", !5401, i64 0}
!5401 = !{!"000001F2FC56E680.w32.b0", !5402, i64 0}
!5402 = !{!"000001F2FC56E680.w64.b0", !5403, i64 0}
!5403 = !{!"000001F2FC56E680.w128.b0", !5404, i64 0}
!5404 = !{!"000001F2FC56E680.w256.b0", !5405, i64 0}
!5405 = !{!"000001F2FC56E680.w512.b0", !5406, i64 0}
!5406 = !{!"000001F2FC56E680.w1024.b0", !5407, i64 0}
!5407 = !{!"000001F2FC56E680", !21, i64 0}
!5408 = !{!5409, !5409, i64 0}
!5409 = !{!"000001F2FC56E680.w4.b4", !5399, i64 0}
!5410 = !{!5411, !5411, i64 0}
!5411 = !{!"000001F2FC56E680.w4.b8", !5412, i64 0}
!5412 = !{!"000001F2FC56E680.w8.b8", !5400, i64 0}
!5413 = !{!5414, !5414, i64 0}
!5414 = !{!"000001F2FC56E680.w4.b12", !5412, i64 0}
!5415 = !{!5416, !5416, i64 0}
!5416 = !{!"000001F2FC5741C0.w8.b0", !5417, i64 0}
!5417 = !{!"000001F2FC5741C0.w16.b0", !5418, i64 0}
!5418 = !{!"000001F2FC5741C0.w32.b0", !5419, i64 0}
!5419 = !{!"000001F2FC5741C0.w64.b0", !5420, i64 0}
!5420 = !{!"000001F2FC5741C0.w128.b0", !5421, i64 0}
!5421 = !{!"000001F2FC5741C0.w256.b0", !5422, i64 0}
!5422 = !{!"000001F2FC5741C0.w512.b0", !5423, i64 0}
!5423 = !{!"000001F2FC5741C0.w1024.b0", !5424, i64 0}
!5424 = !{!"000001F2FC5741C0", !21, i64 0}
!5425 = !{!5426, !5426, i64 0}
!5426 = !{!"000001F2FC5741C0.w8.b8", !5417, i64 0}
!5427 = !{!5428, !5428, i64 0}
!5428 = !{!"000001F2FC5741C0.w8.b16", !5429, i64 0}
!5429 = !{!"000001F2FC5741C0.w16.b16", !5418, i64 0}
!5430 = !{!5431, !5431, i64 0}
!5431 = !{!"000001F2FC5741C0.w8.b24", !5429, i64 0}
!5432 = !{!5433, !5433, i64 0}
!5433 = !{!"000001F2FC5741C0.w8.b32", !5434, i64 0}
!5434 = !{!"000001F2FC5741C0.w16.b32", !5435, i64 0}
!5435 = !{!"000001F2FC5741C0.w32.b32", !5419, i64 0}
!5436 = !{!5437, !5437, i64 0}
!5437 = !{!"000001F2FC574240.w8.b16", !5438, i64 0}
!5438 = !{!"000001F2FC574240.w16.b16", !5439, i64 0}
!5439 = !{!"000001F2FC574240.w32.b0", !5440, i64 0}
!5440 = !{!"000001F2FC574240.w64.b0", !5441, i64 0}
!5441 = !{!"000001F2FC574240.w128.b0", !5442, i64 0}
!5442 = !{!"000001F2FC574240.w256.b0", !5443, i64 0}
!5443 = !{!"000001F2FC574240.w512.b0", !5444, i64 0}
!5444 = !{!"000001F2FC574240.w1024.b0", !5445, i64 0}
!5445 = !{!"000001F2FC574240", !21, i64 0}
!5446 = !{!5447, !5447, i64 0}
!5447 = !{!"000001F2FC574240.w8.b24", !5438, i64 0}
!5448 = !{!5449, !5449, i64 0}
!5449 = !{!"000001F2FC574240.w8.b32", !5450, i64 0}
!5450 = !{!"000001F2FC574240.w16.b32", !5451, i64 0}
!5451 = !{!"000001F2FC574240.w32.b32", !5440, i64 0}
!5452 = !{!5453, !5453, i64 0}
!5453 = !{!"000001F2FC575B40.w8.b0", !5454, i64 0}
!5454 = !{!"000001F2FC575B40.w16.b0", !5455, i64 0}
!5455 = !{!"000001F2FC575B40.w32.b0", !5456, i64 0}
!5456 = !{!"000001F2FC575B40.w64.b0", !5457, i64 0}
!5457 = !{!"000001F2FC575B40.w128.b0", !5458, i64 0}
!5458 = !{!"000001F2FC575B40.w256.b0", !5459, i64 0}
!5459 = !{!"000001F2FC575B40.w512.b0", !5460, i64 0}
!5460 = !{!"000001F2FC575B40.w1024.b0", !5461, i64 0}
!5461 = !{!"000001F2FC575B40", !21, i64 0}
!5462 = !{!5463, !5463, i64 0}
!5463 = !{!"000001F2FC575B40.w8.b8", !5454, i64 0}
!5464 = !{!5465, !5465, i64 0}
!5465 = !{!"000001F2FC575B40.w8.b16", !5466, i64 0}
!5466 = !{!"000001F2FC575B40.w16.b16", !5455, i64 0}
!5467 = !{!5468, !5468, i64 0}
!5468 = !{!"000001F2FC575B40.w8.b24", !5466, i64 0}
!5469 = !{!5470, !5470, i64 0}
!5470 = !{!"000001F2FC575B40.w8.b32", !5471, i64 0}
!5471 = !{!"000001F2FC575B40.w16.b32", !5472, i64 0}
!5472 = !{!"000001F2FC575B40.w32.b32", !5456, i64 0}
!5473 = !{!5474, !5474, i64 0}
!5474 = !{!"000001F2FC575B40.w8.b40", !5471, i64 0}
!5475 = !{!5476, !5476, i64 0}
!5476 = !{!"000001F2FC575900.w8.b0", !5477, i64 0}
!5477 = !{!"000001F2FC575900.w16.b0", !5478, i64 0}
!5478 = !{!"000001F2FC575900.w32.b0", !5479, i64 0}
!5479 = !{!"000001F2FC575900.w64.b0", !5480, i64 0}
!5480 = !{!"000001F2FC575900.w128.b0", !5481, i64 0}
!5481 = !{!"000001F2FC575900.w256.b0", !5482, i64 0}
!5482 = !{!"000001F2FC575900.w512.b0", !5483, i64 0}
!5483 = !{!"000001F2FC575900.w1024.b0", !5484, i64 0}
!5484 = !{!"000001F2FC575900", !21, i64 0}
!5485 = !{!5486, !5486, i64 0}
!5486 = !{!"000001F2FC575900.w8.b16", !5487, i64 0}
!5487 = !{!"000001F2FC575900.w16.b16", !5478, i64 0}
!5488 = !{!5489, !5489, i64 0}
!5489 = !{!"000001F2FC575900.w8.b24", !5487, i64 0}
!5490 = !{!5491, !5491, i64 0}
!5491 = !{!"000001F2FC575900.w8.b32", !5492, i64 0}
!5492 = !{!"000001F2FC575900.w16.b32", !5493, i64 0}
!5493 = !{!"000001F2FC575900.w32.b32", !5479, i64 0}
!5494 = !{!5495, !5495, i64 0}
!5495 = !{!"000001F2FC575900.w8.b40", !5492, i64 0}
!5496 = !{!5497, !5497, i64 0}
!5497 = !{!"000001F2FC576C80.w8.b0", !5498, i64 0}
!5498 = !{!"000001F2FC576C80.w16.b0", !5499, i64 0}
!5499 = !{!"000001F2FC576C80.w32.b0", !5500, i64 0}
!5500 = !{!"000001F2FC576C80.w64.b0", !5501, i64 0}
!5501 = !{!"000001F2FC576C80.w128.b0", !5502, i64 0}
!5502 = !{!"000001F2FC576C80.w256.b0", !5503, i64 0}
!5503 = !{!"000001F2FC576C80.w512.b0", !5504, i64 0}
!5504 = !{!"000001F2FC576C80.w1024.b0", !5505, i64 0}
!5505 = !{!"000001F2FC576C80", !21, i64 0}
!5506 = !{!5507, !5507, i64 0}
!5507 = !{!"000001F2FC576C80.w8.b8", !5498, i64 0}
!5508 = !{!5509, !5509, i64 0}
!5509 = !{!"000001F2FC576C80.w8.b16", !5510, i64 0}
!5510 = !{!"000001F2FC576C80.w16.b16", !5499, i64 0}
!5511 = !{!5512, !5512, i64 0}
!5512 = !{!"000001F2FC576C80.w8.b24", !5510, i64 0}
!5513 = !{!5514, !5514, i64 0}
!5514 = !{!"000001F2FC576C80.w8.b32", !5515, i64 0}
!5515 = !{!"000001F2FC576C80.w16.b32", !5516, i64 0}
!5516 = !{!"000001F2FC576C80.w32.b32", !5500, i64 0}
!5517 = !{!5518, !5518, i64 0}
!5518 = !{!"000001F2EA7C9CB0.w8.b8", !5519, i64 0}
!5519 = !{!"000001F2EA7C9CB0.w16.b0", !5520, i64 0}
!5520 = !{!"000001F2EA7C9CB0.w32.b0", !5521, i64 0}
!5521 = !{!"000001F2EA7C9CB0.w64.b0", !5522, i64 0}
!5522 = !{!"000001F2EA7C9CB0.w128.b0", !5523, i64 0}
!5523 = !{!"000001F2EA7C9CB0.w256.b0", !5524, i64 0}
!5524 = !{!"000001F2EA7C9CB0.w512.b0", !5525, i64 0}
!5525 = !{!"000001F2EA7C9CB0.w1024.b0", !5526, i64 0}
!5526 = !{!"000001F2EA7C9CB0", !21, i64 0}
!5527 = !{!5528, !5528, i64 0}
!5528 = !{!"000001F2EA7C9CB0.w8.b32", !5529, i64 0}
!5529 = !{!"000001F2EA7C9CB0.w16.b32", !5530, i64 0}
!5530 = !{!"000001F2EA7C9CB0.w32.b32", !5521, i64 0}
!5531 = !{!5532, !5532, i64 0}
!5532 = !{!"000001F2FC575340.w8.b0", !5533, i64 0}
!5533 = !{!"000001F2FC575340.w16.b0", !5534, i64 0}
!5534 = !{!"000001F2FC575340.w32.b0", !5535, i64 0}
!5535 = !{!"000001F2FC575340.w64.b0", !5536, i64 0}
!5536 = !{!"000001F2FC575340.w128.b0", !5537, i64 0}
!5537 = !{!"000001F2FC575340.w256.b0", !5538, i64 0}
!5538 = !{!"000001F2FC575340.w512.b0", !5539, i64 0}
!5539 = !{!"000001F2FC575340.w1024.b0", !5540, i64 0}
!5540 = !{!"000001F2FC575340", !21, i64 0}
!5541 = !{!5542, !5542, i64 0}
!5542 = !{!"000001F2FC575340.w8.b8", !5533, i64 0}
!5543 = !{!5544, !5544, i64 0}
!5544 = !{!"000001F2FC575340.w8.b16", !5545, i64 0}
!5545 = !{!"000001F2FC575340.w16.b16", !5534, i64 0}
!5546 = !{!5547, !5547, i64 0}
!5547 = !{!"000001F2FC575340.w8.b24", !5545, i64 0}
!5548 = !{!5549, !5549, i64 0}
!5549 = !{!"000001F2FC575340.w8.b32", !5550, i64 0}
!5550 = !{!"000001F2FC575340.w16.b32", !5551, i64 0}
!5551 = !{!"000001F2FC575340.w32.b32", !5535, i64 0}
!5552 = !{!5553, !5553, i64 0}
!5553 = !{!"000001F2EAAD79E0.w8.b8", !5554, i64 0}
!5554 = !{!"000001F2EAAD79E0.w16.b0", !5555, i64 0}
!5555 = !{!"000001F2EAAD79E0.w32.b0", !5556, i64 0}
!5556 = !{!"000001F2EAAD79E0.w64.b0", !5557, i64 0}
!5557 = !{!"000001F2EAAD79E0.w128.b0", !5558, i64 0}
!5558 = !{!"000001F2EAAD79E0.w256.b0", !5559, i64 0}
!5559 = !{!"000001F2EAAD79E0.w512.b0", !5560, i64 0}
!5560 = !{!"000001F2EAAD79E0.w1024.b0", !5561, i64 0}
!5561 = !{!"000001F2EAAD79E0", !21, i64 0}
!5562 = !{!5563, !5563, i64 0}
!5563 = !{!"000001F2EAAD79E0.w8.b16", !5564, i64 0}
!5564 = !{!"000001F2EAAD79E0.w16.b16", !5555, i64 0}
!5565 = !{!5566, !5566, i64 0}
!5566 = !{!"000001F2EAAD79E0.w8.b24", !5564, i64 0}
!5567 = !{!5568, !5568, i64 0}
!5568 = !{!"000001F2EAAD79E0.w8.b32", !5569, i64 0}
!5569 = !{!"000001F2EAAD79E0.w16.b32", !5570, i64 0}
!5570 = !{!"000001F2EAAD79E0.w32.b32", !5556, i64 0}
!5571 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5572)
!5572 = !{!5573, !5574, !5575, !5576, !5577, !5578}
!5573 = !DILocalVariable(name: "arg1", arg: 1, scope: !5571, file: !1, type: !8)
!5574 = !DILocalVariable(name: "arg2", arg: 2, scope: !5571, file: !1, type: !9)
!5575 = !DILocalVariable(name: "arg3", arg: 3, scope: !5571, file: !1, type: !7)
!5576 = !DILocalVariable(name: "arg4", arg: 4, scope: !5571, file: !1, type: !8)
!5577 = !DILocalVariable(name: "arg5", arg: 5, scope: !5571, file: !1, type: !9)
!5578 = !DILocalVariable(name: "arg6", arg: 6, scope: !5571, file: !1, type: !8)
!5579 = !DILocation(line: 0, scope: !5571)
!5580 = !{!5581, !5581, i64 0}
!5581 = !{!"000001F2EB0DB160.w4.b0", !5582, i64 0}
!5582 = !{!"000001F2EB0DB160.w8.b0", !5583, i64 0}
!5583 = !{!"000001F2EB0DB160.w16.b0", !5584, i64 0}
!5584 = !{!"000001F2EB0DB160.w32.b0", !5585, i64 0}
!5585 = !{!"000001F2EB0DB160.w64.b0", !5586, i64 0}
!5586 = !{!"000001F2EB0DB160.w128.b0", !5587, i64 0}
!5587 = !{!"000001F2EB0DB160.w256.b0", !5588, i64 0}
!5588 = !{!"000001F2EB0DB160.w512.b0", !5589, i64 0}
!5589 = !{!"000001F2EB0DB160.w1024.b0", !5590, i64 0}
!5590 = !{!"000001F2EB0DB160", !21, i64 0}
!5591 = !{!5592, !5592, i64 0}
!5592 = !{!"000001F2EB0DB160.w4.b4", !5582, i64 0}
!5593 = !{!5594, !5594, i64 0}
!5594 = !{!"000001F2EB0DB160.w4.b8", !5595, i64 0}
!5595 = !{!"000001F2EB0DB160.w8.b8", !5583, i64 0}
!5596 = !{!5597, !5597, i64 0}
!5597 = !{!"000001F2EB0DB160.w4.b12", !5595, i64 0}
!5598 = !{!5599, !5599, i64 0}
!5599 = !{!"000001F2EB0E30E0.w8.b0", !5600, i64 0}
!5600 = !{!"000001F2EB0E30E0.w16.b0", !5601, i64 0}
!5601 = !{!"000001F2EB0E30E0.w32.b0", !5602, i64 0}
!5602 = !{!"000001F2EB0E30E0.w64.b0", !5603, i64 0}
!5603 = !{!"000001F2EB0E30E0.w128.b0", !5604, i64 0}
!5604 = !{!"000001F2EB0E30E0.w256.b0", !5605, i64 0}
!5605 = !{!"000001F2EB0E30E0.w512.b0", !5606, i64 0}
!5606 = !{!"000001F2EB0E30E0.w1024.b0", !5607, i64 0}
!5607 = !{!"000001F2EB0E30E0", !21, i64 0}
!5608 = !{!5609, !5609, i64 0}
!5609 = !{!"000001F2EB0E30E0.w8.b8", !5600, i64 0}
!5610 = !{!5611, !5611, i64 0}
!5611 = !{!"000001F2EB0E30E0.w8.b16", !5612, i64 0}
!5612 = !{!"000001F2EB0E30E0.w16.b16", !5601, i64 0}
!5613 = !{!5614, !5614, i64 0}
!5614 = !{!"000001F2EB0E30E0.w8.b24", !5612, i64 0}
!5615 = !{!5616, !5616, i64 0}
!5616 = !{!"000001F2EB0E30E0.w8.b32", !5617, i64 0}
!5617 = !{!"000001F2EB0E30E0.w16.b32", !5618, i64 0}
!5618 = !{!"000001F2EB0E30E0.w32.b32", !5602, i64 0}
!5619 = !{!5620, !5620, i64 0}
!5620 = !{!"000001F2EB0E33E0.w8.b16", !5621, i64 0}
!5621 = !{!"000001F2EB0E33E0.w16.b16", !5622, i64 0}
!5622 = !{!"000001F2EB0E33E0.w32.b0", !5623, i64 0}
!5623 = !{!"000001F2EB0E33E0.w64.b0", !5624, i64 0}
!5624 = !{!"000001F2EB0E33E0.w128.b0", !5625, i64 0}
!5625 = !{!"000001F2EB0E33E0.w256.b0", !5626, i64 0}
!5626 = !{!"000001F2EB0E33E0.w512.b0", !5627, i64 0}
!5627 = !{!"000001F2EB0E33E0.w1024.b0", !5628, i64 0}
!5628 = !{!"000001F2EB0E33E0", !21, i64 0}
!5629 = !{!5630, !5630, i64 0}
!5630 = !{!"000001F2EB0E33E0.w8.b24", !5621, i64 0}
!5631 = !{!5632, !5632, i64 0}
!5632 = !{!"000001F2EB0E33E0.w8.b32", !5633, i64 0}
!5633 = !{!"000001F2EB0E33E0.w16.b32", !5634, i64 0}
!5634 = !{!"000001F2EB0E33E0.w32.b32", !5623, i64 0}
!5635 = !{!5636, !5636, i64 0}
!5636 = !{!"000001F2EB0E4FE0.w8.b0", !5637, i64 0}
!5637 = !{!"000001F2EB0E4FE0.w16.b0", !5638, i64 0}
!5638 = !{!"000001F2EB0E4FE0.w32.b0", !5639, i64 0}
!5639 = !{!"000001F2EB0E4FE0.w64.b0", !5640, i64 0}
!5640 = !{!"000001F2EB0E4FE0.w128.b0", !5641, i64 0}
!5641 = !{!"000001F2EB0E4FE0.w256.b0", !5642, i64 0}
!5642 = !{!"000001F2EB0E4FE0.w512.b0", !5643, i64 0}
!5643 = !{!"000001F2EB0E4FE0.w1024.b0", !5644, i64 0}
!5644 = !{!"000001F2EB0E4FE0", !21, i64 0}
!5645 = !{!5646, !5646, i64 0}
!5646 = !{!"000001F2EB0E4FE0.w8.b8", !5637, i64 0}
!5647 = !{!5648, !5648, i64 0}
!5648 = !{!"000001F2EB0E4FE0.w8.b16", !5649, i64 0}
!5649 = !{!"000001F2EB0E4FE0.w16.b16", !5638, i64 0}
!5650 = !{!5651, !5651, i64 0}
!5651 = !{!"000001F2EB0E4FE0.w8.b24", !5649, i64 0}
!5652 = !{!5653, !5653, i64 0}
!5653 = !{!"000001F2EB0E4FE0.w8.b32", !5654, i64 0}
!5654 = !{!"000001F2EB0E4FE0.w16.b32", !5655, i64 0}
!5655 = !{!"000001F2EB0E4FE0.w32.b32", !5639, i64 0}
!5656 = !{!5657, !5657, i64 0}
!5657 = !{!"000001F2EB0E4FE0.w8.b40", !5654, i64 0}
!5658 = !{!5659, !5659, i64 0}
!5659 = !{!"000001F2EB0E4F60.w8.b0", !5660, i64 0}
!5660 = !{!"000001F2EB0E4F60.w16.b0", !5661, i64 0}
!5661 = !{!"000001F2EB0E4F60.w32.b0", !5662, i64 0}
!5662 = !{!"000001F2EB0E4F60.w64.b0", !5663, i64 0}
!5663 = !{!"000001F2EB0E4F60.w128.b0", !5664, i64 0}
!5664 = !{!"000001F2EB0E4F60.w256.b0", !5665, i64 0}
!5665 = !{!"000001F2EB0E4F60.w512.b0", !5666, i64 0}
!5666 = !{!"000001F2EB0E4F60.w1024.b0", !5667, i64 0}
!5667 = !{!"000001F2EB0E4F60", !21, i64 0}
!5668 = !{!5669, !5669, i64 0}
!5669 = !{!"000001F2EB0E4F60.w8.b32", !5670, i64 0}
!5670 = !{!"000001F2EB0E4F60.w16.b32", !5671, i64 0}
!5671 = !{!"000001F2EB0E4F60.w32.b32", !5662, i64 0}
!5672 = !{!5673, !5673, i64 0}
!5673 = !{!"000001F2EB0E4F60.w8.b40", !5670, i64 0}
!5674 = !{!5675, !5675, i64 0}
!5675 = !{!"000001F2EB0E60A0.w8.b0", !5676, i64 0}
!5676 = !{!"000001F2EB0E60A0.w16.b0", !5677, i64 0}
!5677 = !{!"000001F2EB0E60A0.w32.b0", !5678, i64 0}
!5678 = !{!"000001F2EB0E60A0.w64.b0", !5679, i64 0}
!5679 = !{!"000001F2EB0E60A0.w128.b0", !5680, i64 0}
!5680 = !{!"000001F2EB0E60A0.w256.b0", !5681, i64 0}
!5681 = !{!"000001F2EB0E60A0.w512.b0", !5682, i64 0}
!5682 = !{!"000001F2EB0E60A0.w1024.b0", !5683, i64 0}
!5683 = !{!"000001F2EB0E60A0", !21, i64 0}
!5684 = !{!5685, !5685, i64 0}
!5685 = !{!"000001F2EB0E60A0.w8.b8", !5676, i64 0}
!5686 = !{!5687, !5687, i64 0}
!5687 = !{!"000001F2EB0E60A0.w8.b16", !5688, i64 0}
!5688 = !{!"000001F2EB0E60A0.w16.b16", !5677, i64 0}
!5689 = !{!5690, !5690, i64 0}
!5690 = !{!"000001F2EB0E60A0.w8.b24", !5688, i64 0}
!5691 = !{!5692, !5692, i64 0}
!5692 = !{!"000001F2EB0E60A0.w8.b32", !5693, i64 0}
!5693 = !{!"000001F2EB0E60A0.w16.b32", !5694, i64 0}
!5694 = !{!"000001F2EB0E60A0.w32.b32", !5678, i64 0}
!5695 = !{!5696, !5696, i64 0}
!5696 = !{!"000001F2EB0E5CA0.w8.b8", !5697, i64 0}
!5697 = !{!"000001F2EB0E5CA0.w16.b0", !5698, i64 0}
!5698 = !{!"000001F2EB0E5CA0.w32.b0", !5699, i64 0}
!5699 = !{!"000001F2EB0E5CA0.w64.b0", !5700, i64 0}
!5700 = !{!"000001F2EB0E5CA0.w128.b0", !5701, i64 0}
!5701 = !{!"000001F2EB0E5CA0.w256.b0", !5702, i64 0}
!5702 = !{!"000001F2EB0E5CA0.w512.b0", !5703, i64 0}
!5703 = !{!"000001F2EB0E5CA0.w1024.b0", !5704, i64 0}
!5704 = !{!"000001F2EB0E5CA0", !21, i64 0}
!5705 = !{!5706, !5706, i64 0}
!5706 = !{!"000001F2EB0E5CA0.w8.b32", !5707, i64 0}
!5707 = !{!"000001F2EB0E5CA0.w16.b32", !5708, i64 0}
!5708 = !{!"000001F2EB0E5CA0.w32.b32", !5699, i64 0}
!5709 = !{!5710, !5710, i64 0}
!5710 = !{!"000001F2EB0E6D60.w8.b0", !5711, i64 0}
!5711 = !{!"000001F2EB0E6D60.w16.b0", !5712, i64 0}
!5712 = !{!"000001F2EB0E6D60.w32.b0", !5713, i64 0}
!5713 = !{!"000001F2EB0E6D60.w64.b0", !5714, i64 0}
!5714 = !{!"000001F2EB0E6D60.w128.b0", !5715, i64 0}
!5715 = !{!"000001F2EB0E6D60.w256.b0", !5716, i64 0}
!5716 = !{!"000001F2EB0E6D60.w512.b0", !5717, i64 0}
!5717 = !{!"000001F2EB0E6D60.w1024.b0", !5718, i64 0}
!5718 = !{!"000001F2EB0E6D60", !21, i64 0}
!5719 = !{!5720, !5720, i64 0}
!5720 = !{!"000001F2EB0E6D60.w8.b8", !5711, i64 0}
!5721 = !{!5722, !5722, i64 0}
!5722 = !{!"000001F2EB0E6D60.w8.b16", !5723, i64 0}
!5723 = !{!"000001F2EB0E6D60.w16.b16", !5712, i64 0}
!5724 = !{!5725, !5725, i64 0}
!5725 = !{!"000001F2EB0E6D60.w8.b24", !5723, i64 0}
!5726 = !{!5727, !5727, i64 0}
!5727 = !{!"000001F2EB0E6D60.w8.b32", !5728, i64 0}
!5728 = !{!"000001F2EB0E6D60.w16.b32", !5729, i64 0}
!5729 = !{!"000001F2EB0E6D60.w32.b32", !5713, i64 0}
!5730 = !{!5731, !5731, i64 0}
!5731 = !{!"000001F2EB0E6AE0.w8.b8", !5732, i64 0}
!5732 = !{!"000001F2EB0E6AE0.w16.b0", !5733, i64 0}
!5733 = !{!"000001F2EB0E6AE0.w32.b0", !5734, i64 0}
!5734 = !{!"000001F2EB0E6AE0.w64.b0", !5735, i64 0}
!5735 = !{!"000001F2EB0E6AE0.w128.b0", !5736, i64 0}
!5736 = !{!"000001F2EB0E6AE0.w256.b0", !5737, i64 0}
!5737 = !{!"000001F2EB0E6AE0.w512.b0", !5738, i64 0}
!5738 = !{!"000001F2EB0E6AE0.w1024.b0", !5739, i64 0}
!5739 = !{!"000001F2EB0E6AE0", !21, i64 0}
!5740 = !{!5741, !5741, i64 0}
!5741 = !{!"000001F2EB0E6AE0.w8.b16", !5742, i64 0}
!5742 = !{!"000001F2EB0E6AE0.w16.b16", !5733, i64 0}
!5743 = !{!5744, !5744, i64 0}
!5744 = !{!"000001F2EB0E6AE0.w8.b24", !5742, i64 0}
!5745 = !{!5746, !5746, i64 0}
!5746 = !{!"000001F2EB0E6AE0.w8.b32", !5747, i64 0}
!5747 = !{!"000001F2EB0E6AE0.w16.b32", !5748, i64 0}
!5748 = !{!"000001F2EB0E6AE0.w32.b32", !5734, i64 0}
!5749 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5750)
!5750 = !{!5751, !5752, !5753, !5754, !5755, !5756}
!5751 = !DILocalVariable(name: "arg1", arg: 1, scope: !5749, file: !1, type: !8)
!5752 = !DILocalVariable(name: "arg2", arg: 2, scope: !5749, file: !1, type: !9)
!5753 = !DILocalVariable(name: "arg3", arg: 3, scope: !5749, file: !1, type: !7)
!5754 = !DILocalVariable(name: "arg4", arg: 4, scope: !5749, file: !1, type: !8)
!5755 = !DILocalVariable(name: "arg5", arg: 5, scope: !5749, file: !1, type: !9)
!5756 = !DILocalVariable(name: "arg6", arg: 6, scope: !5749, file: !1, type: !8)
!5757 = !DILocation(line: 0, scope: !5749)
!5758 = !{!5759, !5759, i64 0}
!5759 = !{!"000001F28338C820.w4.b0", !5760, i64 0}
!5760 = !{!"000001F28338C820.w8.b0", !5761, i64 0}
!5761 = !{!"000001F28338C820.w16.b0", !5762, i64 0}
!5762 = !{!"000001F28338C820.w32.b0", !5763, i64 0}
!5763 = !{!"000001F28338C820.w64.b0", !5764, i64 0}
!5764 = !{!"000001F28338C820.w128.b0", !5765, i64 0}
!5765 = !{!"000001F28338C820.w256.b0", !5766, i64 0}
!5766 = !{!"000001F28338C820.w512.b0", !5767, i64 0}
!5767 = !{!"000001F28338C820.w1024.b0", !5768, i64 0}
!5768 = !{!"000001F28338C820", !21, i64 0}
!5769 = !{!5770, !5770, i64 0}
!5770 = !{!"000001F28338C820.w4.b4", !5760, i64 0}
!5771 = !{!5772, !5772, i64 0}
!5772 = !{!"000001F28338C820.w4.b8", !5773, i64 0}
!5773 = !{!"000001F28338C820.w8.b8", !5761, i64 0}
!5774 = !{!5775, !5775, i64 0}
!5775 = !{!"000001F28338C820.w4.b12", !5773, i64 0}
!5776 = !{!5777, !5777, i64 0}
!5777 = !{!"000001F28338FA20.w8.b0", !5778, i64 0}
!5778 = !{!"000001F28338FA20.w16.b0", !5779, i64 0}
!5779 = !{!"000001F28338FA20.w32.b0", !5780, i64 0}
!5780 = !{!"000001F28338FA20.w64.b0", !5781, i64 0}
!5781 = !{!"000001F28338FA20.w128.b0", !5782, i64 0}
!5782 = !{!"000001F28338FA20.w256.b0", !5783, i64 0}
!5783 = !{!"000001F28338FA20.w512.b0", !5784, i64 0}
!5784 = !{!"000001F28338FA20.w1024.b0", !5785, i64 0}
!5785 = !{!"000001F28338FA20", !21, i64 0}
!5786 = !{!5787, !5787, i64 0}
!5787 = !{!"000001F28338FA20.w8.b8", !5778, i64 0}
!5788 = !{!5789, !5789, i64 0}
!5789 = !{!"000001F28338FA20.w8.b16", !5790, i64 0}
!5790 = !{!"000001F28338FA20.w16.b16", !5779, i64 0}
!5791 = !{!5792, !5792, i64 0}
!5792 = !{!"000001F28338FA20.w8.b24", !5790, i64 0}
!5793 = !{!5794, !5794, i64 0}
!5794 = !{!"000001F28338FA20.w8.b32", !5795, i64 0}
!5795 = !{!"000001F28338FA20.w16.b32", !5796, i64 0}
!5796 = !{!"000001F28338FA20.w32.b32", !5780, i64 0}
!5797 = !{!5798, !5798, i64 0}
!5798 = !{!"000001F28338F9E0.w8.b8", !5799, i64 0}
!5799 = !{!"000001F28338F9E0.w16.b0", !5800, i64 0}
!5800 = !{!"000001F28338F9E0.w32.b0", !5801, i64 0}
!5801 = !{!"000001F28338F9E0.w64.b0", !5802, i64 0}
!5802 = !{!"000001F28338F9E0.w128.b0", !5803, i64 0}
!5803 = !{!"000001F28338F9E0.w256.b0", !5804, i64 0}
!5804 = !{!"000001F28338F9E0.w512.b0", !5805, i64 0}
!5805 = !{!"000001F28338F9E0.w1024.b0", !5806, i64 0}
!5806 = !{!"000001F28338F9E0", !21, i64 0}
!5807 = !{!5808, !5808, i64 0}
!5808 = !{!"000001F28338F9E0.w8.b16", !5809, i64 0}
!5809 = !{!"000001F28338F9E0.w16.b16", !5800, i64 0}
!5810 = !{!5811, !5811, i64 0}
!5811 = !{!"000001F28338F9E0.w8.b24", !5809, i64 0}
!5812 = !{!5813, !5813, i64 0}
!5813 = !{!"000001F28338F9E0.w8.b32", !5814, i64 0}
!5814 = !{!"000001F28338F9E0.w16.b32", !5815, i64 0}
!5815 = !{!"000001F28338F9E0.w32.b32", !5801, i64 0}
!5816 = !{!5817, !5817, i64 0}
!5817 = !{!"000001F28338F7A0.w8.b0", !5818, i64 0}
!5818 = !{!"000001F28338F7A0.w16.b0", !5819, i64 0}
!5819 = !{!"000001F28338F7A0.w32.b0", !5820, i64 0}
!5820 = !{!"000001F28338F7A0.w64.b0", !5821, i64 0}
!5821 = !{!"000001F28338F7A0.w128.b0", !5822, i64 0}
!5822 = !{!"000001F28338F7A0.w256.b0", !5823, i64 0}
!5823 = !{!"000001F28338F7A0.w512.b0", !5824, i64 0}
!5824 = !{!"000001F28338F7A0.w1024.b0", !5825, i64 0}
!5825 = !{!"000001F28338F7A0", !21, i64 0}
!5826 = !{!5827, !5827, i64 0}
!5827 = !{!"000001F28338F7A0.w8.b8", !5818, i64 0}
!5828 = !{!5829, !5829, i64 0}
!5829 = !{!"000001F28338F7A0.w8.b16", !5830, i64 0}
!5830 = !{!"000001F28338F7A0.w16.b16", !5819, i64 0}
!5831 = !{!5832, !5832, i64 0}
!5832 = !{!"000001F28338F7A0.w8.b24", !5830, i64 0}
!5833 = !{!5834, !5834, i64 0}
!5834 = !{!"000001F28338F7A0.w8.b32", !5835, i64 0}
!5835 = !{!"000001F28338F7A0.w16.b32", !5836, i64 0}
!5836 = !{!"000001F28338F7A0.w32.b32", !5820, i64 0}
!5837 = !{!5838, !5838, i64 0}
!5838 = !{!"000001F28338F7A0.w8.b40", !5835, i64 0}
!5839 = !{!5840, !5840, i64 0}
!5840 = !{!"000001F283390460.w8.b0", !5841, i64 0}
!5841 = !{!"000001F283390460.w16.b0", !5842, i64 0}
!5842 = !{!"000001F283390460.w32.b0", !5843, i64 0}
!5843 = !{!"000001F283390460.w64.b0", !5844, i64 0}
!5844 = !{!"000001F283390460.w128.b0", !5845, i64 0}
!5845 = !{!"000001F283390460.w256.b0", !5846, i64 0}
!5846 = !{!"000001F283390460.w512.b0", !5847, i64 0}
!5847 = !{!"000001F283390460.w1024.b0", !5848, i64 0}
!5848 = !{!"000001F283390460", !21, i64 0}
!5849 = !{!5850, !5850, i64 0}
!5850 = !{!"000001F283390460.w8.b8", !5841, i64 0}
!5851 = !{!5852, !5852, i64 0}
!5852 = !{!"000001F283390460.w8.b32", !5853, i64 0}
!5853 = !{!"000001F283390460.w16.b32", !5854, i64 0}
!5854 = !{!"000001F283390460.w32.b32", !5843, i64 0}
!5855 = !{!5856, !5856, i64 0}
!5856 = !{!"000001F283390460.w8.b40", !5853, i64 0}
!5857 = !{!5858, !5858, i64 0}
!5858 = !{!"000001F2833915A0.w8.b0", !5859, i64 0}
!5859 = !{!"000001F2833915A0.w16.b0", !5860, i64 0}
!5860 = !{!"000001F2833915A0.w32.b0", !5861, i64 0}
!5861 = !{!"000001F2833915A0.w64.b0", !5862, i64 0}
!5862 = !{!"000001F2833915A0.w128.b0", !5863, i64 0}
!5863 = !{!"000001F2833915A0.w256.b0", !5864, i64 0}
!5864 = !{!"000001F2833915A0.w512.b0", !5865, i64 0}
!5865 = !{!"000001F2833915A0.w1024.b0", !5866, i64 0}
!5866 = !{!"000001F2833915A0", !21, i64 0}
!5867 = !{!5868, !5868, i64 0}
!5868 = !{!"000001F2833915A0.w8.b8", !5859, i64 0}
!5869 = !{!5870, !5870, i64 0}
!5870 = !{!"000001F2833915A0.w8.b16", !5871, i64 0}
!5871 = !{!"000001F2833915A0.w16.b16", !5860, i64 0}
!5872 = !{!5873, !5873, i64 0}
!5873 = !{!"000001F2833915A0.w8.b24", !5871, i64 0}
!5874 = !{!5875, !5875, i64 0}
!5875 = !{!"000001F2833915A0.w8.b32", !5876, i64 0}
!5876 = !{!"000001F2833915A0.w16.b32", !5877, i64 0}
!5877 = !{!"000001F2833915A0.w32.b32", !5861, i64 0}
!5878 = !{!5879, !5879, i64 0}
!5879 = !{!"000001F283391820.w8.b8", !5880, i64 0}
!5880 = !{!"000001F283391820.w16.b0", !5881, i64 0}
!5881 = !{!"000001F283391820.w32.b0", !5882, i64 0}
!5882 = !{!"000001F283391820.w64.b0", !5883, i64 0}
!5883 = !{!"000001F283391820.w128.b0", !5884, i64 0}
!5884 = !{!"000001F283391820.w256.b0", !5885, i64 0}
!5885 = !{!"000001F283391820.w512.b0", !5886, i64 0}
!5886 = !{!"000001F283391820.w1024.b0", !5887, i64 0}
!5887 = !{!"000001F283391820", !21, i64 0}
!5888 = !{!5889, !5889, i64 0}
!5889 = !{!"000001F283391820.w8.b32", !5890, i64 0}
!5890 = !{!"000001F283391820.w16.b32", !5891, i64 0}
!5891 = !{!"000001F283391820.w32.b32", !5882, i64 0}
!5892 = !{!5893, !5893, i64 0}
!5893 = !{!"000001F2833918A0.w8.b0", !5894, i64 0}
!5894 = !{!"000001F2833918A0.w16.b0", !5895, i64 0}
!5895 = !{!"000001F2833918A0.w32.b0", !5896, i64 0}
!5896 = !{!"000001F2833918A0.w64.b0", !5897, i64 0}
!5897 = !{!"000001F2833918A0.w128.b0", !5898, i64 0}
!5898 = !{!"000001F2833918A0.w256.b0", !5899, i64 0}
!5899 = !{!"000001F2833918A0.w512.b0", !5900, i64 0}
!5900 = !{!"000001F2833918A0.w1024.b0", !5901, i64 0}
!5901 = !{!"000001F2833918A0", !21, i64 0}
!5902 = !{!5903, !5903, i64 0}
!5903 = !{!"000001F2833918A0.w8.b8", !5894, i64 0}
!5904 = !{!5905, !5905, i64 0}
!5905 = !{!"000001F2833918A0.w8.b16", !5906, i64 0}
!5906 = !{!"000001F2833918A0.w16.b16", !5895, i64 0}
!5907 = !{!5908, !5908, i64 0}
!5908 = !{!"000001F2833918A0.w8.b24", !5906, i64 0}
!5909 = !{!5910, !5910, i64 0}
!5910 = !{!"000001F2833918A0.w8.b32", !5911, i64 0}
!5911 = !{!"000001F2833918A0.w16.b32", !5912, i64 0}
!5912 = !{!"000001F2833918A0.w32.b32", !5896, i64 0}
!5913 = !{!5914, !5914, i64 0}
!5914 = !{!"000001F283392BA0.w8.b8", !5915, i64 0}
!5915 = !{!"000001F283392BA0.w16.b0", !5916, i64 0}
!5916 = !{!"000001F283392BA0.w32.b0", !5917, i64 0}
!5917 = !{!"000001F283392BA0.w64.b0", !5918, i64 0}
!5918 = !{!"000001F283392BA0.w128.b0", !5919, i64 0}
!5919 = !{!"000001F283392BA0.w256.b0", !5920, i64 0}
!5920 = !{!"000001F283392BA0.w512.b0", !5921, i64 0}
!5921 = !{!"000001F283392BA0.w1024.b0", !5922, i64 0}
!5922 = !{!"000001F283392BA0", !21, i64 0}
!5923 = !{!5924, !5924, i64 0}
!5924 = !{!"000001F283392BA0.w8.b16", !5925, i64 0}
!5925 = !{!"000001F283392BA0.w16.b16", !5916, i64 0}
!5926 = !{!5927, !5927, i64 0}
!5927 = !{!"000001F283392BA0.w8.b24", !5925, i64 0}
!5928 = !{!5929, !5929, i64 0}
!5929 = !{!"000001F283392BA0.w8.b32", !5930, i64 0}
!5930 = !{!"000001F283392BA0.w16.b32", !5931, i64 0}
!5931 = !{!"000001F283392BA0.w32.b32", !5917, i64 0}
!5932 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5933)
!5933 = !{!5934, !5935, !5936, !5937, !5938, !5939}
!5934 = !DILocalVariable(name: "arg1", arg: 1, scope: !5932, file: !1, type: !8)
!5935 = !DILocalVariable(name: "arg2", arg: 2, scope: !5932, file: !1, type: !9)
!5936 = !DILocalVariable(name: "arg3", arg: 3, scope: !5932, file: !1, type: !7)
!5937 = !DILocalVariable(name: "arg4", arg: 4, scope: !5932, file: !1, type: !8)
!5938 = !DILocalVariable(name: "arg5", arg: 5, scope: !5932, file: !1, type: !9)
!5939 = !DILocalVariable(name: "arg6", arg: 6, scope: !5932, file: !1, type: !8)
!5940 = !DILocation(line: 0, scope: !5932)
!5941 = !{!5942, !5942, i64 0}
!5942 = !{!"000001F2EB0D6960.w4.b0", !5943, i64 0}
!5943 = !{!"000001F2EB0D6960.w8.b0", !5944, i64 0}
!5944 = !{!"000001F2EB0D6960.w16.b0", !5945, i64 0}
!5945 = !{!"000001F2EB0D6960.w32.b0", !5946, i64 0}
!5946 = !{!"000001F2EB0D6960.w64.b0", !5947, i64 0}
!5947 = !{!"000001F2EB0D6960.w128.b0", !5948, i64 0}
!5948 = !{!"000001F2EB0D6960.w256.b0", !5949, i64 0}
!5949 = !{!"000001F2EB0D6960.w512.b0", !5950, i64 0}
!5950 = !{!"000001F2EB0D6960.w1024.b0", !5951, i64 0}
!5951 = !{!"000001F2EB0D6960", !21, i64 0}
!5952 = !{!5953, !5953, i64 0}
!5953 = !{!"000001F2EB0D6960.w4.b4", !5943, i64 0}
!5954 = !{!5955, !5955, i64 0}
!5955 = !{!"000001F2EB0D6960.w4.b8", !5956, i64 0}
!5956 = !{!"000001F2EB0D6960.w8.b8", !5944, i64 0}
!5957 = !{!5958, !5958, i64 0}
!5958 = !{!"000001F2EB0D6960.w4.b12", !5956, i64 0}
!5959 = !{!5960, !5960, i64 0}
!5960 = !{!"000001F2EB0DD920.w8.b0", !5961, i64 0}
!5961 = !{!"000001F2EB0DD920.w16.b0", !5962, i64 0}
!5962 = !{!"000001F2EB0DD920.w32.b0", !5963, i64 0}
!5963 = !{!"000001F2EB0DD920.w64.b0", !5964, i64 0}
!5964 = !{!"000001F2EB0DD920.w128.b0", !5965, i64 0}
!5965 = !{!"000001F2EB0DD920.w256.b0", !5966, i64 0}
!5966 = !{!"000001F2EB0DD920.w512.b0", !5967, i64 0}
!5967 = !{!"000001F2EB0DD920.w1024.b0", !5968, i64 0}
!5968 = !{!"000001F2EB0DD920", !21, i64 0}
!5969 = !{!5970, !5970, i64 0}
!5970 = !{!"000001F2EB0DD920.w8.b8", !5961, i64 0}
!5971 = !{!5972, !5972, i64 0}
!5972 = !{!"000001F2EB0DD920.w8.b16", !5973, i64 0}
!5973 = !{!"000001F2EB0DD920.w16.b16", !5962, i64 0}
!5974 = !{!5975, !5975, i64 0}
!5975 = !{!"000001F2EB0DD920.w8.b24", !5973, i64 0}
!5976 = !{!5977, !5977, i64 0}
!5977 = !{!"000001F2EB0DD920.w8.b32", !5978, i64 0}
!5978 = !{!"000001F2EB0DD920.w16.b32", !5979, i64 0}
!5979 = !{!"000001F2EB0DD920.w32.b32", !5963, i64 0}
!5980 = !{!5981, !5981, i64 0}
!5981 = !{!"000001F2EB0DFFE0.w8.b8", !5982, i64 0}
!5982 = !{!"000001F2EB0DFFE0.w16.b0", !5983, i64 0}
!5983 = !{!"000001F2EB0DFFE0.w32.b0", !5984, i64 0}
!5984 = !{!"000001F2EB0DFFE0.w64.b0", !5985, i64 0}
!5985 = !{!"000001F2EB0DFFE0.w128.b0", !5986, i64 0}
!5986 = !{!"000001F2EB0DFFE0.w256.b0", !5987, i64 0}
!5987 = !{!"000001F2EB0DFFE0.w512.b0", !5988, i64 0}
!5988 = !{!"000001F2EB0DFFE0.w1024.b0", !5989, i64 0}
!5989 = !{!"000001F2EB0DFFE0", !21, i64 0}
!5990 = !{!5991, !5991, i64 0}
!5991 = !{!"000001F2EB0DFFE0.w8.b16", !5992, i64 0}
!5992 = !{!"000001F2EB0DFFE0.w16.b16", !5983, i64 0}
!5993 = !{!5994, !5994, i64 0}
!5994 = !{!"000001F2EB0DFFE0.w8.b24", !5992, i64 0}
!5995 = !{!5996, !5996, i64 0}
!5996 = !{!"000001F2EB0DFFE0.w8.b32", !5997, i64 0}
!5997 = !{!"000001F2EB0DFFE0.w16.b32", !5998, i64 0}
!5998 = !{!"000001F2EB0DFFE0.w32.b32", !5984, i64 0}
!5999 = !{!6000, !6000, i64 0}
!6000 = !{!"000001F2EB0DF5E0.w8.b0", !6001, i64 0}
!6001 = !{!"000001F2EB0DF5E0.w16.b0", !6002, i64 0}
!6002 = !{!"000001F2EB0DF5E0.w32.b0", !6003, i64 0}
!6003 = !{!"000001F2EB0DF5E0.w64.b0", !6004, i64 0}
!6004 = !{!"000001F2EB0DF5E0.w128.b0", !6005, i64 0}
!6005 = !{!"000001F2EB0DF5E0.w256.b0", !6006, i64 0}
!6006 = !{!"000001F2EB0DF5E0.w512.b0", !6007, i64 0}
!6007 = !{!"000001F2EB0DF5E0.w1024.b0", !6008, i64 0}
!6008 = !{!"000001F2EB0DF5E0", !21, i64 0}
!6009 = !{!6010, !6010, i64 0}
!6010 = !{!"000001F2EB0DF5E0.w8.b8", !6001, i64 0}
!6011 = !{!6012, !6012, i64 0}
!6012 = !{!"000001F2EB0DF5E0.w8.b16", !6013, i64 0}
!6013 = !{!"000001F2EB0DF5E0.w16.b16", !6002, i64 0}
!6014 = !{!6015, !6015, i64 0}
!6015 = !{!"000001F2EB0DF5E0.w8.b24", !6013, i64 0}
!6016 = !{!6017, !6017, i64 0}
!6017 = !{!"000001F2EB0DF5E0.w8.b32", !6018, i64 0}
!6018 = !{!"000001F2EB0DF5E0.w16.b32", !6019, i64 0}
!6019 = !{!"000001F2EB0DF5E0.w32.b32", !6003, i64 0}
!6020 = !{!6021, !6021, i64 0}
!6021 = !{!"000001F2EB0DF5E0.w8.b40", !6018, i64 0}
!6022 = !{!6023, !6023, i64 0}
!6023 = !{!"000001F2EB0E0660.w8.b0", !6024, i64 0}
!6024 = !{!"000001F2EB0E0660.w16.b0", !6025, i64 0}
!6025 = !{!"000001F2EB0E0660.w32.b0", !6026, i64 0}
!6026 = !{!"000001F2EB0E0660.w64.b0", !6027, i64 0}
!6027 = !{!"000001F2EB0E0660.w128.b0", !6028, i64 0}
!6028 = !{!"000001F2EB0E0660.w256.b0", !6029, i64 0}
!6029 = !{!"000001F2EB0E0660.w512.b0", !6030, i64 0}
!6030 = !{!"000001F2EB0E0660.w1024.b0", !6031, i64 0}
!6031 = !{!"000001F2EB0E0660", !21, i64 0}
!6032 = !{!6033, !6033, i64 0}
!6033 = !{!"000001F2EB0E0660.w8.b8", !6024, i64 0}
!6034 = !{!6035, !6035, i64 0}
!6035 = !{!"000001F2EB0E0660.w8.b16", !6036, i64 0}
!6036 = !{!"000001F2EB0E0660.w16.b16", !6025, i64 0}
!6037 = !{!6038, !6038, i64 0}
!6038 = !{!"000001F2EB0E0660.w8.b24", !6036, i64 0}
!6039 = !{!6040, !6040, i64 0}
!6040 = !{!"000001F2EB0E0660.w8.b32", !6041, i64 0}
!6041 = !{!"000001F2EB0E0660.w16.b32", !6042, i64 0}
!6042 = !{!"000001F2EB0E0660.w32.b32", !6026, i64 0}
!6043 = !{!6044, !6044, i64 0}
!6044 = !{!"000001F2EB0E0660.w8.b40", !6041, i64 0}
!6045 = !{!6046, !6046, i64 0}
!6046 = !{!"000001F2EB0E04A0.w8.b0", !6047, i64 0}
!6047 = !{!"000001F2EB0E04A0.w16.b0", !6048, i64 0}
!6048 = !{!"000001F2EB0E04A0.w32.b0", !6049, i64 0}
!6049 = !{!"000001F2EB0E04A0.w64.b0", !6050, i64 0}
!6050 = !{!"000001F2EB0E04A0.w128.b0", !6051, i64 0}
!6051 = !{!"000001F2EB0E04A0.w256.b0", !6052, i64 0}
!6052 = !{!"000001F2EB0E04A0.w512.b0", !6053, i64 0}
!6053 = !{!"000001F2EB0E04A0.w1024.b0", !6054, i64 0}
!6054 = !{!"000001F2EB0E04A0", !21, i64 0}
!6055 = !{!6056, !6056, i64 0}
!6056 = !{!"000001F2EB0E04A0.w8.b8", !6047, i64 0}
!6057 = !{!6058, !6058, i64 0}
!6058 = !{!"000001F2EB0E04A0.w8.b16", !6059, i64 0}
!6059 = !{!"000001F2EB0E04A0.w16.b16", !6048, i64 0}
!6060 = !{!6061, !6061, i64 0}
!6061 = !{!"000001F2EB0E04A0.w8.b24", !6059, i64 0}
!6062 = !{!6063, !6063, i64 0}
!6063 = !{!"000001F2EB0E04A0.w8.b32", !6064, i64 0}
!6064 = !{!"000001F2EB0E04A0.w16.b32", !6065, i64 0}
!6065 = !{!"000001F2EB0E04A0.w32.b32", !6049, i64 0}
!6066 = !{!6067, !6067, i64 0}
!6067 = !{!"000001F2EB0E1C60.w8.b8", !6068, i64 0}
!6068 = !{!"000001F2EB0E1C60.w16.b0", !6069, i64 0}
!6069 = !{!"000001F2EB0E1C60.w32.b0", !6070, i64 0}
!6070 = !{!"000001F2EB0E1C60.w64.b0", !6071, i64 0}
!6071 = !{!"000001F2EB0E1C60.w128.b0", !6072, i64 0}
!6072 = !{!"000001F2EB0E1C60.w256.b0", !6073, i64 0}
!6073 = !{!"000001F2EB0E1C60.w512.b0", !6074, i64 0}
!6074 = !{!"000001F2EB0E1C60.w1024.b0", !6075, i64 0}
!6075 = !{!"000001F2EB0E1C60", !21, i64 0}
!6076 = !{!6077, !6077, i64 0}
!6077 = !{!"000001F2EB0E1C60.w8.b32", !6078, i64 0}
!6078 = !{!"000001F2EB0E1C60.w16.b32", !6079, i64 0}
!6079 = !{!"000001F2EB0E1C60.w32.b32", !6070, i64 0}
!6080 = !{!6081, !6081, i64 0}
!6081 = !{!"000001F2EB0E16E0.w8.b0", !6082, i64 0}
!6082 = !{!"000001F2EB0E16E0.w16.b0", !6083, i64 0}
!6083 = !{!"000001F2EB0E16E0.w32.b0", !6084, i64 0}
!6084 = !{!"000001F2EB0E16E0.w64.b0", !6085, i64 0}
!6085 = !{!"000001F2EB0E16E0.w128.b0", !6086, i64 0}
!6086 = !{!"000001F2EB0E16E0.w256.b0", !6087, i64 0}
!6087 = !{!"000001F2EB0E16E0.w512.b0", !6088, i64 0}
!6088 = !{!"000001F2EB0E16E0.w1024.b0", !6089, i64 0}
!6089 = !{!"000001F2EB0E16E0", !21, i64 0}
!6090 = !{!6091, !6091, i64 0}
!6091 = !{!"000001F2EB0E16E0.w8.b8", !6082, i64 0}
!6092 = !{!6093, !6093, i64 0}
!6093 = !{!"000001F2EB0E16E0.w8.b16", !6094, i64 0}
!6094 = !{!"000001F2EB0E16E0.w16.b16", !6083, i64 0}
!6095 = !{!6096, !6096, i64 0}
!6096 = !{!"000001F2EB0E16E0.w8.b24", !6094, i64 0}
!6097 = !{!6098, !6098, i64 0}
!6098 = !{!"000001F2EB0E16E0.w8.b32", !6099, i64 0}
!6099 = !{!"000001F2EB0E16E0.w16.b32", !6100, i64 0}
!6100 = !{!"000001F2EB0E16E0.w32.b32", !6084, i64 0}
!6101 = !{!6102, !6102, i64 0}
!6102 = !{!"000001F2EB0E2BE0.w8.b8", !6103, i64 0}
!6103 = !{!"000001F2EB0E2BE0.w16.b0", !6104, i64 0}
!6104 = !{!"000001F2EB0E2BE0.w32.b0", !6105, i64 0}
!6105 = !{!"000001F2EB0E2BE0.w64.b0", !6106, i64 0}
!6106 = !{!"000001F2EB0E2BE0.w128.b0", !6107, i64 0}
!6107 = !{!"000001F2EB0E2BE0.w256.b0", !6108, i64 0}
!6108 = !{!"000001F2EB0E2BE0.w512.b0", !6109, i64 0}
!6109 = !{!"000001F2EB0E2BE0.w1024.b0", !6110, i64 0}
!6110 = !{!"000001F2EB0E2BE0", !21, i64 0}
!6111 = !{!6112, !6112, i64 0}
!6112 = !{!"000001F2EB0E2BE0.w8.b16", !6113, i64 0}
!6113 = !{!"000001F2EB0E2BE0.w16.b16", !6104, i64 0}
!6114 = !{!6115, !6115, i64 0}
!6115 = !{!"000001F2EB0E2BE0.w8.b24", !6113, i64 0}
!6116 = !{!6117, !6117, i64 0}
!6117 = !{!"000001F2EB0E2BE0.w8.b32", !6118, i64 0}
!6118 = !{!"000001F2EB0E2BE0.w16.b32", !6119, i64 0}
!6119 = !{!"000001F2EB0E2BE0.w32.b32", !6105, i64 0}
!6120 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6121)
!6121 = !{!6122, !6123, !6124, !6125, !6126, !6127}
!6122 = !DILocalVariable(name: "arg1", arg: 1, scope: !6120, file: !1, type: !8)
!6123 = !DILocalVariable(name: "arg2", arg: 2, scope: !6120, file: !1, type: !9)
!6124 = !DILocalVariable(name: "arg3", arg: 3, scope: !6120, file: !1, type: !7)
!6125 = !DILocalVariable(name: "arg4", arg: 4, scope: !6120, file: !1, type: !8)
!6126 = !DILocalVariable(name: "arg5", arg: 5, scope: !6120, file: !1, type: !9)
!6127 = !DILocalVariable(name: "arg6", arg: 6, scope: !6120, file: !1, type: !8)
!6128 = !DILocation(line: 0, scope: !6120)
!6129 = !{!6130, !6130, i64 0}
!6130 = !{!"000001F283319D50.w4.b0", !6131, i64 0}
!6131 = !{!"000001F283319D50.w8.b0", !6132, i64 0}
!6132 = !{!"000001F283319D50.w16.b0", !6133, i64 0}
!6133 = !{!"000001F283319D50.w32.b0", !6134, i64 0}
!6134 = !{!"000001F283319D50.w64.b0", !6135, i64 0}
!6135 = !{!"000001F283319D50.w128.b0", !6136, i64 0}
!6136 = !{!"000001F283319D50.w256.b0", !6137, i64 0}
!6137 = !{!"000001F283319D50.w512.b0", !6138, i64 0}
!6138 = !{!"000001F283319D50.w1024.b0", !6139, i64 0}
!6139 = !{!"000001F283319D50", !21, i64 0}
!6140 = !{!6141, !6141, i64 0}
!6141 = !{!"000001F283319D50.w4.b4", !6131, i64 0}
!6142 = !{!6143, !6143, i64 0}
!6143 = !{!"000001F283319D50.w4.b8", !6144, i64 0}
!6144 = !{!"000001F283319D50.w8.b8", !6132, i64 0}
!6145 = !{!6146, !6146, i64 0}
!6146 = !{!"000001F283319D50.w4.b12", !6144, i64 0}
!6147 = !{!6148, !6148, i64 0}
!6148 = !{!"000001F28331EFD0.w8.b0", !6149, i64 0}
!6149 = !{!"000001F28331EFD0.w16.b0", !6150, i64 0}
!6150 = !{!"000001F28331EFD0.w32.b0", !6151, i64 0}
!6151 = !{!"000001F28331EFD0.w64.b0", !6152, i64 0}
!6152 = !{!"000001F28331EFD0.w128.b0", !6153, i64 0}
!6153 = !{!"000001F28331EFD0.w256.b0", !6154, i64 0}
!6154 = !{!"000001F28331EFD0.w512.b0", !6155, i64 0}
!6155 = !{!"000001F28331EFD0.w1024.b0", !6156, i64 0}
!6156 = !{!"000001F28331EFD0", !21, i64 0}
!6157 = !{!6158, !6158, i64 0}
!6158 = !{!"000001F28331EFD0.w8.b8", !6149, i64 0}
!6159 = !{!6160, !6160, i64 0}
!6160 = !{!"000001F28331EFD0.w8.b16", !6161, i64 0}
!6161 = !{!"000001F28331EFD0.w16.b16", !6150, i64 0}
!6162 = !{!6163, !6163, i64 0}
!6163 = !{!"000001F28331EFD0.w8.b24", !6161, i64 0}
!6164 = !{!6165, !6165, i64 0}
!6165 = !{!"000001F28331EFD0.w8.b32", !6166, i64 0}
!6166 = !{!"000001F28331EFD0.w16.b32", !6167, i64 0}
!6167 = !{!"000001F28331EFD0.w32.b32", !6151, i64 0}
!6168 = !{!6169, !6169, i64 0}
!6169 = !{!"000001F28331F250.w8.b16", !6170, i64 0}
!6170 = !{!"000001F28331F250.w16.b16", !6171, i64 0}
!6171 = !{!"000001F28331F250.w32.b0", !6172, i64 0}
!6172 = !{!"000001F28331F250.w64.b0", !6173, i64 0}
!6173 = !{!"000001F28331F250.w128.b0", !6174, i64 0}
!6174 = !{!"000001F28331F250.w256.b0", !6175, i64 0}
!6175 = !{!"000001F28331F250.w512.b0", !6176, i64 0}
!6176 = !{!"000001F28331F250.w1024.b0", !6177, i64 0}
!6177 = !{!"000001F28331F250", !21, i64 0}
!6178 = !{!6179, !6179, i64 0}
!6179 = !{!"000001F28331F250.w8.b24", !6170, i64 0}
!6180 = !{!6181, !6181, i64 0}
!6181 = !{!"000001F28331F250.w8.b32", !6182, i64 0}
!6182 = !{!"000001F28331F250.w16.b32", !6183, i64 0}
!6183 = !{!"000001F28331F250.w32.b32", !6172, i64 0}
!6184 = !{!6185, !6185, i64 0}
!6185 = !{!"000001F283320510.w8.b0", !6186, i64 0}
!6186 = !{!"000001F283320510.w16.b0", !6187, i64 0}
!6187 = !{!"000001F283320510.w32.b0", !6188, i64 0}
!6188 = !{!"000001F283320510.w64.b0", !6189, i64 0}
!6189 = !{!"000001F283320510.w128.b0", !6190, i64 0}
!6190 = !{!"000001F283320510.w256.b0", !6191, i64 0}
!6191 = !{!"000001F283320510.w512.b0", !6192, i64 0}
!6192 = !{!"000001F283320510.w1024.b0", !6193, i64 0}
!6193 = !{!"000001F283320510", !21, i64 0}
!6194 = !{!6195, !6195, i64 0}
!6195 = !{!"000001F283320510.w8.b8", !6186, i64 0}
!6196 = !{!6197, !6197, i64 0}
!6197 = !{!"000001F283320510.w8.b16", !6198, i64 0}
!6198 = !{!"000001F283320510.w16.b16", !6187, i64 0}
!6199 = !{!6200, !6200, i64 0}
!6200 = !{!"000001F283320510.w8.b24", !6198, i64 0}
!6201 = !{!6202, !6202, i64 0}
!6202 = !{!"000001F283320510.w8.b32", !6203, i64 0}
!6203 = !{!"000001F283320510.w16.b32", !6204, i64 0}
!6204 = !{!"000001F283320510.w32.b32", !6188, i64 0}
!6205 = !{!6206, !6206, i64 0}
!6206 = !{!"000001F283320510.w8.b40", !6203, i64 0}
!6207 = !{!6208, !6208, i64 0}
!6208 = !{!"000001F283320C10.w8.b0", !6209, i64 0}
!6209 = !{!"000001F283320C10.w16.b0", !6210, i64 0}
!6210 = !{!"000001F283320C10.w32.b0", !6211, i64 0}
!6211 = !{!"000001F283320C10.w64.b0", !6212, i64 0}
!6212 = !{!"000001F283320C10.w128.b0", !6213, i64 0}
!6213 = !{!"000001F283320C10.w256.b0", !6214, i64 0}
!6214 = !{!"000001F283320C10.w512.b0", !6215, i64 0}
!6215 = !{!"000001F283320C10.w1024.b0", !6216, i64 0}
!6216 = !{!"000001F283320C10", !21, i64 0}
!6217 = !{!6218, !6218, i64 0}
!6218 = !{!"000001F283320C10.w8.b32", !6219, i64 0}
!6219 = !{!"000001F283320C10.w16.b32", !6220, i64 0}
!6220 = !{!"000001F283320C10.w32.b32", !6211, i64 0}
!6221 = !{!6222, !6222, i64 0}
!6222 = !{!"000001F283320C10.w8.b40", !6219, i64 0}
!6223 = !{!6224, !6224, i64 0}
!6224 = !{!"000001F283300690.w8.b0", !6225, i64 0}
!6225 = !{!"000001F283300690.w16.b0", !6226, i64 0}
!6226 = !{!"000001F283300690.w32.b0", !6227, i64 0}
!6227 = !{!"000001F283300690.w64.b0", !6228, i64 0}
!6228 = !{!"000001F283300690.w128.b0", !6229, i64 0}
!6229 = !{!"000001F283300690.w256.b0", !6230, i64 0}
!6230 = !{!"000001F283300690.w512.b0", !6231, i64 0}
!6231 = !{!"000001F283300690.w1024.b0", !6232, i64 0}
!6232 = !{!"000001F283300690", !21, i64 0}
!6233 = !{!6234, !6234, i64 0}
!6234 = !{!"000001F283300690.w8.b8", !6225, i64 0}
!6235 = !{!6236, !6236, i64 0}
!6236 = !{!"000001F283300690.w8.b16", !6237, i64 0}
!6237 = !{!"000001F283300690.w16.b16", !6226, i64 0}
!6238 = !{!6239, !6239, i64 0}
!6239 = !{!"000001F283300690.w8.b24", !6237, i64 0}
!6240 = !{!6241, !6241, i64 0}
!6241 = !{!"000001F283300690.w8.b32", !6242, i64 0}
!6242 = !{!"000001F283300690.w16.b32", !6243, i64 0}
!6243 = !{!"000001F283300690.w32.b32", !6227, i64 0}
!6244 = !{!6245, !6245, i64 0}
!6245 = !{!"000001F283300B90.w8.b8", !6246, i64 0}
!6246 = !{!"000001F283300B90.w16.b0", !6247, i64 0}
!6247 = !{!"000001F283300B90.w32.b0", !6248, i64 0}
!6248 = !{!"000001F283300B90.w64.b0", !6249, i64 0}
!6249 = !{!"000001F283300B90.w128.b0", !6250, i64 0}
!6250 = !{!"000001F283300B90.w256.b0", !6251, i64 0}
!6251 = !{!"000001F283300B90.w512.b0", !6252, i64 0}
!6252 = !{!"000001F283300B90.w1024.b0", !6253, i64 0}
!6253 = !{!"000001F283300B90", !21, i64 0}
!6254 = !{!6255, !6255, i64 0}
!6255 = !{!"000001F283300B90.w8.b32", !6256, i64 0}
!6256 = !{!"000001F283300B90.w16.b32", !6257, i64 0}
!6257 = !{!"000001F283300B90.w32.b32", !6248, i64 0}
!6258 = !{!6259, !6259, i64 0}
!6259 = !{!"000001F2EB0F06E0.w8.b0", !6260, i64 0}
!6260 = !{!"000001F2EB0F06E0.w16.b0", !6261, i64 0}
!6261 = !{!"000001F2EB0F06E0.w32.b0", !6262, i64 0}
!6262 = !{!"000001F2EB0F06E0.w64.b0", !6263, i64 0}
!6263 = !{!"000001F2EB0F06E0.w128.b0", !6264, i64 0}
!6264 = !{!"000001F2EB0F06E0.w256.b0", !6265, i64 0}
!6265 = !{!"000001F2EB0F06E0.w512.b0", !6266, i64 0}
!6266 = !{!"000001F2EB0F06E0.w1024.b0", !6267, i64 0}
!6267 = !{!"000001F2EB0F06E0", !21, i64 0}
!6268 = !{!6269, !6269, i64 0}
!6269 = !{!"000001F2EB0F06E0.w8.b8", !6260, i64 0}
!6270 = !{!6271, !6271, i64 0}
!6271 = !{!"000001F2EB0F06E0.w8.b16", !6272, i64 0}
!6272 = !{!"000001F2EB0F06E0.w16.b16", !6261, i64 0}
!6273 = !{!6274, !6274, i64 0}
!6274 = !{!"000001F2EB0F06E0.w8.b24", !6272, i64 0}
!6275 = !{!6276, !6276, i64 0}
!6276 = !{!"000001F2EB0F06E0.w8.b32", !6277, i64 0}
!6277 = !{!"000001F2EB0F06E0.w16.b32", !6278, i64 0}
!6278 = !{!"000001F2EB0F06E0.w32.b32", !6262, i64 0}
!6279 = !{!6280, !6280, i64 0}
!6280 = !{!"000001F2EF926260.w8.b8", !6281, i64 0}
!6281 = !{!"000001F2EF926260.w16.b0", !6282, i64 0}
!6282 = !{!"000001F2EF926260.w32.b0", !6283, i64 0}
!6283 = !{!"000001F2EF926260.w64.b0", !6284, i64 0}
!6284 = !{!"000001F2EF926260.w128.b0", !6285, i64 0}
!6285 = !{!"000001F2EF926260.w256.b0", !6286, i64 0}
!6286 = !{!"000001F2EF926260.w512.b0", !6287, i64 0}
!6287 = !{!"000001F2EF926260.w1024.b0", !6288, i64 0}
!6288 = !{!"000001F2EF926260", !21, i64 0}
!6289 = !{!6290, !6290, i64 0}
!6290 = !{!"000001F2EF926260.w8.b16", !6291, i64 0}
!6291 = !{!"000001F2EF926260.w16.b16", !6282, i64 0}
!6292 = !{!6293, !6293, i64 0}
!6293 = !{!"000001F2EF926260.w8.b24", !6291, i64 0}
!6294 = !{!6295, !6295, i64 0}
!6295 = !{!"000001F2EF926260.w8.b32", !6296, i64 0}
!6296 = !{!"000001F2EF926260.w16.b32", !6297, i64 0}
!6297 = !{!"000001F2EF926260.w32.b32", !6283, i64 0}
!6298 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6299)
!6299 = !{!6300, !6301, !6302, !6303, !6304, !6305}
!6300 = !DILocalVariable(name: "arg1", arg: 1, scope: !6298, file: !1, type: !8)
!6301 = !DILocalVariable(name: "arg2", arg: 2, scope: !6298, file: !1, type: !9)
!6302 = !DILocalVariable(name: "arg3", arg: 3, scope: !6298, file: !1, type: !7)
!6303 = !DILocalVariable(name: "arg4", arg: 4, scope: !6298, file: !1, type: !8)
!6304 = !DILocalVariable(name: "arg5", arg: 5, scope: !6298, file: !1, type: !9)
!6305 = !DILocalVariable(name: "arg6", arg: 6, scope: !6298, file: !1, type: !8)
!6306 = !DILocation(line: 0, scope: !6298)
!6307 = !{!6308, !6308, i64 0}
!6308 = !{!"000001F283303090.w4.b0", !6309, i64 0}
!6309 = !{!"000001F283303090.w8.b0", !6310, i64 0}
!6310 = !{!"000001F283303090.w16.b0", !6311, i64 0}
!6311 = !{!"000001F283303090.w32.b0", !6312, i64 0}
!6312 = !{!"000001F283303090.w64.b0", !6313, i64 0}
!6313 = !{!"000001F283303090.w128.b0", !6314, i64 0}
!6314 = !{!"000001F283303090.w256.b0", !6315, i64 0}
!6315 = !{!"000001F283303090.w512.b0", !6316, i64 0}
!6316 = !{!"000001F283303090.w1024.b0", !6317, i64 0}
!6317 = !{!"000001F283303090", !21, i64 0}
!6318 = !{!6319, !6319, i64 0}
!6319 = !{!"000001F283303090.w4.b4", !6309, i64 0}
!6320 = !{!6321, !6321, i64 0}
!6321 = !{!"000001F283303090.w4.b8", !6322, i64 0}
!6322 = !{!"000001F283303090.w8.b8", !6310, i64 0}
!6323 = !{!6324, !6324, i64 0}
!6324 = !{!"000001F283303090.w4.b12", !6322, i64 0}
!6325 = !{!6326, !6326, i64 0}
!6326 = !{!"000001F28330A990.w8.b0", !6327, i64 0}
!6327 = !{!"000001F28330A990.w16.b0", !6328, i64 0}
!6328 = !{!"000001F28330A990.w32.b0", !6329, i64 0}
!6329 = !{!"000001F28330A990.w64.b0", !6330, i64 0}
!6330 = !{!"000001F28330A990.w128.b0", !6331, i64 0}
!6331 = !{!"000001F28330A990.w256.b0", !6332, i64 0}
!6332 = !{!"000001F28330A990.w512.b0", !6333, i64 0}
!6333 = !{!"000001F28330A990.w1024.b0", !6334, i64 0}
!6334 = !{!"000001F28330A990", !21, i64 0}
!6335 = !{!6336, !6336, i64 0}
!6336 = !{!"000001F28330A990.w8.b8", !6327, i64 0}
!6337 = !{!6338, !6338, i64 0}
!6338 = !{!"000001F28330A990.w8.b16", !6339, i64 0}
!6339 = !{!"000001F28330A990.w16.b16", !6328, i64 0}
!6340 = !{!6341, !6341, i64 0}
!6341 = !{!"000001F28330A990.w8.b24", !6339, i64 0}
!6342 = !{!6343, !6343, i64 0}
!6343 = !{!"000001F28330A990.w8.b32", !6344, i64 0}
!6344 = !{!"000001F28330A990.w16.b32", !6345, i64 0}
!6345 = !{!"000001F28330A990.w32.b32", !6329, i64 0}
!6346 = !{!6347, !6347, i64 0}
!6347 = !{!"000001F28330B250.w8.b16", !6348, i64 0}
!6348 = !{!"000001F28330B250.w16.b16", !6349, i64 0}
!6349 = !{!"000001F28330B250.w32.b0", !6350, i64 0}
!6350 = !{!"000001F28330B250.w64.b0", !6351, i64 0}
!6351 = !{!"000001F28330B250.w128.b0", !6352, i64 0}
!6352 = !{!"000001F28330B250.w256.b0", !6353, i64 0}
!6353 = !{!"000001F28330B250.w512.b0", !6354, i64 0}
!6354 = !{!"000001F28330B250.w1024.b0", !6355, i64 0}
!6355 = !{!"000001F28330B250", !21, i64 0}
!6356 = !{!6357, !6357, i64 0}
!6357 = !{!"000001F28330B250.w8.b24", !6348, i64 0}
!6358 = !{!6359, !6359, i64 0}
!6359 = !{!"000001F28330B250.w8.b32", !6360, i64 0}
!6360 = !{!"000001F28330B250.w16.b32", !6361, i64 0}
!6361 = !{!"000001F28330B250.w32.b32", !6350, i64 0}
!6362 = !{!6363, !6363, i64 0}
!6363 = !{!"000001F28330C750.w8.b0", !6364, i64 0}
!6364 = !{!"000001F28330C750.w16.b0", !6365, i64 0}
!6365 = !{!"000001F28330C750.w32.b0", !6366, i64 0}
!6366 = !{!"000001F28330C750.w64.b0", !6367, i64 0}
!6367 = !{!"000001F28330C750.w128.b0", !6368, i64 0}
!6368 = !{!"000001F28330C750.w256.b0", !6369, i64 0}
!6369 = !{!"000001F28330C750.w512.b0", !6370, i64 0}
!6370 = !{!"000001F28330C750.w1024.b0", !6371, i64 0}
!6371 = !{!"000001F28330C750", !21, i64 0}
!6372 = !{!6373, !6373, i64 0}
!6373 = !{!"000001F28330C750.w8.b8", !6364, i64 0}
!6374 = !{!6375, !6375, i64 0}
!6375 = !{!"000001F28330C750.w8.b16", !6376, i64 0}
!6376 = !{!"000001F28330C750.w16.b16", !6365, i64 0}
!6377 = !{!6378, !6378, i64 0}
!6378 = !{!"000001F28330C750.w8.b24", !6376, i64 0}
!6379 = !{!6380, !6380, i64 0}
!6380 = !{!"000001F28330C750.w8.b32", !6381, i64 0}
!6381 = !{!"000001F28330C750.w16.b32", !6382, i64 0}
!6382 = !{!"000001F28330C750.w32.b32", !6366, i64 0}
!6383 = !{!6384, !6384, i64 0}
!6384 = !{!"000001F28330C750.w8.b40", !6381, i64 0}
!6385 = !{!6386, !6386, i64 0}
!6386 = !{!"000001F28330CBD0.w8.b0", !6387, i64 0}
!6387 = !{!"000001F28330CBD0.w16.b0", !6388, i64 0}
!6388 = !{!"000001F28330CBD0.w32.b0", !6389, i64 0}
!6389 = !{!"000001F28330CBD0.w64.b0", !6390, i64 0}
!6390 = !{!"000001F28330CBD0.w128.b0", !6391, i64 0}
!6391 = !{!"000001F28330CBD0.w256.b0", !6392, i64 0}
!6392 = !{!"000001F28330CBD0.w512.b0", !6393, i64 0}
!6393 = !{!"000001F28330CBD0.w1024.b0", !6394, i64 0}
!6394 = !{!"000001F28330CBD0", !21, i64 0}
!6395 = !{!6396, !6396, i64 0}
!6396 = !{!"000001F28330CBD0.w8.b16", !6397, i64 0}
!6397 = !{!"000001F28330CBD0.w16.b16", !6388, i64 0}
!6398 = !{!6399, !6399, i64 0}
!6399 = !{!"000001F28330CBD0.w8.b24", !6397, i64 0}
!6400 = !{!6401, !6401, i64 0}
!6401 = !{!"000001F28330CBD0.w8.b32", !6402, i64 0}
!6402 = !{!"000001F28330CBD0.w16.b32", !6403, i64 0}
!6403 = !{!"000001F28330CBD0.w32.b32", !6389, i64 0}
!6404 = !{!6405, !6405, i64 0}
!6405 = !{!"000001F28330CBD0.w8.b40", !6402, i64 0}
!6406 = !{!6407, !6407, i64 0}
!6407 = !{!"000001F28330D390.w8.b0", !6408, i64 0}
!6408 = !{!"000001F28330D390.w16.b0", !6409, i64 0}
!6409 = !{!"000001F28330D390.w32.b0", !6410, i64 0}
!6410 = !{!"000001F28330D390.w64.b0", !6411, i64 0}
!6411 = !{!"000001F28330D390.w128.b0", !6412, i64 0}
!6412 = !{!"000001F28330D390.w256.b0", !6413, i64 0}
!6413 = !{!"000001F28330D390.w512.b0", !6414, i64 0}
!6414 = !{!"000001F28330D390.w1024.b0", !6415, i64 0}
!6415 = !{!"000001F28330D390", !21, i64 0}
!6416 = !{!6417, !6417, i64 0}
!6417 = !{!"000001F28330D390.w8.b8", !6408, i64 0}
!6418 = !{!6419, !6419, i64 0}
!6419 = !{!"000001F28330D390.w8.b16", !6420, i64 0}
!6420 = !{!"000001F28330D390.w16.b16", !6409, i64 0}
!6421 = !{!6422, !6422, i64 0}
!6422 = !{!"000001F28330D390.w8.b24", !6420, i64 0}
!6423 = !{!6424, !6424, i64 0}
!6424 = !{!"000001F28330D390.w8.b32", !6425, i64 0}
!6425 = !{!"000001F28330D390.w16.b32", !6426, i64 0}
!6426 = !{!"000001F28330D390.w32.b32", !6410, i64 0}
!6427 = !{!6428, !6428, i64 0}
!6428 = !{!"000001F28330D350.w8.b8", !6429, i64 0}
!6429 = !{!"000001F28330D350.w16.b0", !6430, i64 0}
!6430 = !{!"000001F28330D350.w32.b0", !6431, i64 0}
!6431 = !{!"000001F28330D350.w64.b0", !6432, i64 0}
!6432 = !{!"000001F28330D350.w128.b0", !6433, i64 0}
!6433 = !{!"000001F28330D350.w256.b0", !6434, i64 0}
!6434 = !{!"000001F28330D350.w512.b0", !6435, i64 0}
!6435 = !{!"000001F28330D350.w1024.b0", !6436, i64 0}
!6436 = !{!"000001F28330D350", !21, i64 0}
!6437 = !{!6438, !6438, i64 0}
!6438 = !{!"000001F28330D350.w8.b32", !6439, i64 0}
!6439 = !{!"000001F28330D350.w16.b32", !6440, i64 0}
!6440 = !{!"000001F28330D350.w32.b32", !6431, i64 0}
!6441 = !{!6442, !6442, i64 0}
!6442 = !{!"000001F28330F190.w8.b0", !6443, i64 0}
!6443 = !{!"000001F28330F190.w16.b0", !6444, i64 0}
!6444 = !{!"000001F28330F190.w32.b0", !6445, i64 0}
!6445 = !{!"000001F28330F190.w64.b0", !6446, i64 0}
!6446 = !{!"000001F28330F190.w128.b0", !6447, i64 0}
!6447 = !{!"000001F28330F190.w256.b0", !6448, i64 0}
!6448 = !{!"000001F28330F190.w512.b0", !6449, i64 0}
!6449 = !{!"000001F28330F190.w1024.b0", !6450, i64 0}
!6450 = !{!"000001F28330F190", !21, i64 0}
!6451 = !{!6452, !6452, i64 0}
!6452 = !{!"000001F28330F190.w8.b8", !6443, i64 0}
!6453 = !{!6454, !6454, i64 0}
!6454 = !{!"000001F28330F190.w8.b16", !6455, i64 0}
!6455 = !{!"000001F28330F190.w16.b16", !6444, i64 0}
!6456 = !{!6457, !6457, i64 0}
!6457 = !{!"000001F28330F190.w8.b24", !6455, i64 0}
!6458 = !{!6459, !6459, i64 0}
!6459 = !{!"000001F28330F190.w8.b32", !6460, i64 0}
!6460 = !{!"000001F28330F190.w16.b32", !6461, i64 0}
!6461 = !{!"000001F28330F190.w32.b32", !6445, i64 0}
!6462 = !{!6463, !6463, i64 0}
!6463 = !{!"000001F28330ED10.w8.b8", !6464, i64 0}
!6464 = !{!"000001F28330ED10.w16.b0", !6465, i64 0}
!6465 = !{!"000001F28330ED10.w32.b0", !6466, i64 0}
!6466 = !{!"000001F28330ED10.w64.b0", !6467, i64 0}
!6467 = !{!"000001F28330ED10.w128.b0", !6468, i64 0}
!6468 = !{!"000001F28330ED10.w256.b0", !6469, i64 0}
!6469 = !{!"000001F28330ED10.w512.b0", !6470, i64 0}
!6470 = !{!"000001F28330ED10.w1024.b0", !6471, i64 0}
!6471 = !{!"000001F28330ED10", !21, i64 0}
!6472 = !{!6473, !6473, i64 0}
!6473 = !{!"000001F28330ED10.w8.b16", !6474, i64 0}
!6474 = !{!"000001F28330ED10.w16.b16", !6465, i64 0}
!6475 = !{!6476, !6476, i64 0}
!6476 = !{!"000001F28330ED10.w8.b24", !6474, i64 0}
!6477 = !{!6478, !6478, i64 0}
!6478 = !{!"000001F28330ED10.w8.b32", !6479, i64 0}
!6479 = !{!"000001F28330ED10.w16.b32", !6480, i64 0}
!6480 = !{!"000001F28330ED10.w32.b32", !6466, i64 0}
!6481 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6482)
!6482 = !{!6483, !6484, !6485, !6486, !6487, !6488}
!6483 = !DILocalVariable(name: "arg1", arg: 1, scope: !6481, file: !1, type: !8)
!6484 = !DILocalVariable(name: "arg2", arg: 2, scope: !6481, file: !1, type: !9)
!6485 = !DILocalVariable(name: "arg3", arg: 3, scope: !6481, file: !1, type: !7)
!6486 = !DILocalVariable(name: "arg4", arg: 4, scope: !6481, file: !1, type: !8)
!6487 = !DILocalVariable(name: "arg5", arg: 5, scope: !6481, file: !1, type: !9)
!6488 = !DILocalVariable(name: "arg6", arg: 6, scope: !6481, file: !1, type: !8)
!6489 = !DILocation(line: 0, scope: !6481)
!6490 = !{!6491, !6491, i64 0}
!6491 = !{!"000001F2FC557DC0.w4.b0", !6492, i64 0}
!6492 = !{!"000001F2FC557DC0.w8.b0", !6493, i64 0}
!6493 = !{!"000001F2FC557DC0.w16.b0", !6494, i64 0}
!6494 = !{!"000001F2FC557DC0.w32.b0", !6495, i64 0}
!6495 = !{!"000001F2FC557DC0.w64.b0", !6496, i64 0}
!6496 = !{!"000001F2FC557DC0.w128.b0", !6497, i64 0}
!6497 = !{!"000001F2FC557DC0.w256.b0", !6498, i64 0}
!6498 = !{!"000001F2FC557DC0.w512.b0", !6499, i64 0}
!6499 = !{!"000001F2FC557DC0.w1024.b0", !6500, i64 0}
!6500 = !{!"000001F2FC557DC0", !21, i64 0}
!6501 = !{!6502, !6502, i64 0}
!6502 = !{!"000001F2FC557DC0.w4.b4", !6492, i64 0}
!6503 = !{!6504, !6504, i64 0}
!6504 = !{!"000001F2FC557DC0.w4.b8", !6505, i64 0}
!6505 = !{!"000001F2FC557DC0.w8.b8", !6493, i64 0}
!6506 = !{!6507, !6507, i64 0}
!6507 = !{!"000001F2FC557DC0.w4.b12", !6505, i64 0}
!6508 = !{!6509, !6509, i64 0}
!6509 = !{!"000001F2FC55AB80.w8.b0", !6510, i64 0}
!6510 = !{!"000001F2FC55AB80.w16.b0", !6511, i64 0}
!6511 = !{!"000001F2FC55AB80.w32.b0", !6512, i64 0}
!6512 = !{!"000001F2FC55AB80.w64.b0", !6513, i64 0}
!6513 = !{!"000001F2FC55AB80.w128.b0", !6514, i64 0}
!6514 = !{!"000001F2FC55AB80.w256.b0", !6515, i64 0}
!6515 = !{!"000001F2FC55AB80.w512.b0", !6516, i64 0}
!6516 = !{!"000001F2FC55AB80.w1024.b0", !6517, i64 0}
!6517 = !{!"000001F2FC55AB80", !21, i64 0}
!6518 = !{!6519, !6519, i64 0}
!6519 = !{!"000001F2FC55AB80.w8.b8", !6510, i64 0}
!6520 = !{!6521, !6521, i64 0}
!6521 = !{!"000001F2FC55AB80.w8.b16", !6522, i64 0}
!6522 = !{!"000001F2FC55AB80.w16.b16", !6511, i64 0}
!6523 = !{!6524, !6524, i64 0}
!6524 = !{!"000001F2FC55AB80.w8.b24", !6522, i64 0}
!6525 = !{!6526, !6526, i64 0}
!6526 = !{!"000001F2FC55AB80.w8.b32", !6527, i64 0}
!6527 = !{!"000001F2FC55AB80.w16.b32", !6528, i64 0}
!6528 = !{!"000001F2FC55AB80.w32.b32", !6512, i64 0}
!6529 = !{!6530, !6530, i64 0}
!6530 = !{!"000001F2FC55AF00.w8.b8", !6531, i64 0}
!6531 = !{!"000001F2FC55AF00.w16.b0", !6532, i64 0}
!6532 = !{!"000001F2FC55AF00.w32.b0", !6533, i64 0}
!6533 = !{!"000001F2FC55AF00.w64.b0", !6534, i64 0}
!6534 = !{!"000001F2FC55AF00.w128.b0", !6535, i64 0}
!6535 = !{!"000001F2FC55AF00.w256.b0", !6536, i64 0}
!6536 = !{!"000001F2FC55AF00.w512.b0", !6537, i64 0}
!6537 = !{!"000001F2FC55AF00.w1024.b0", !6538, i64 0}
!6538 = !{!"000001F2FC55AF00", !21, i64 0}
!6539 = !{!6540, !6540, i64 0}
!6540 = !{!"000001F2FC55AF00.w8.b16", !6541, i64 0}
!6541 = !{!"000001F2FC55AF00.w16.b16", !6532, i64 0}
!6542 = !{!6543, !6543, i64 0}
!6543 = !{!"000001F2FC55AF00.w8.b24", !6541, i64 0}
!6544 = !{!6545, !6545, i64 0}
!6545 = !{!"000001F2FC55AF00.w8.b32", !6546, i64 0}
!6546 = !{!"000001F2FC55AF00.w16.b32", !6547, i64 0}
!6547 = !{!"000001F2FC55AF00.w32.b32", !6533, i64 0}
!6548 = !{!6549, !6549, i64 0}
!6549 = !{!"000001F2FC55B3C0.w8.b0", !6550, i64 0}
!6550 = !{!"000001F2FC55B3C0.w16.b0", !6551, i64 0}
!6551 = !{!"000001F2FC55B3C0.w32.b0", !6552, i64 0}
!6552 = !{!"000001F2FC55B3C0.w64.b0", !6553, i64 0}
!6553 = !{!"000001F2FC55B3C0.w128.b0", !6554, i64 0}
!6554 = !{!"000001F2FC55B3C0.w256.b0", !6555, i64 0}
!6555 = !{!"000001F2FC55B3C0.w512.b0", !6556, i64 0}
!6556 = !{!"000001F2FC55B3C0.w1024.b0", !6557, i64 0}
!6557 = !{!"000001F2FC55B3C0", !21, i64 0}
!6558 = !{!6559, !6559, i64 0}
!6559 = !{!"000001F2FC55B3C0.w8.b8", !6550, i64 0}
!6560 = !{!6561, !6561, i64 0}
!6561 = !{!"000001F2FC55B3C0.w8.b16", !6562, i64 0}
!6562 = !{!"000001F2FC55B3C0.w16.b16", !6551, i64 0}
!6563 = !{!6564, !6564, i64 0}
!6564 = !{!"000001F2FC55B3C0.w8.b24", !6562, i64 0}
!6565 = !{!6566, !6566, i64 0}
!6566 = !{!"000001F2FC55B3C0.w8.b32", !6567, i64 0}
!6567 = !{!"000001F2FC55B3C0.w16.b32", !6568, i64 0}
!6568 = !{!"000001F2FC55B3C0.w32.b32", !6552, i64 0}
!6569 = !{!6570, !6570, i64 0}
!6570 = !{!"000001F2FC55B3C0.w8.b40", !6567, i64 0}
!6571 = !{!6572, !6572, i64 0}
!6572 = !{!"000001F2FC55B780.w8.b0", !6573, i64 0}
!6573 = !{!"000001F2FC55B780.w16.b0", !6574, i64 0}
!6574 = !{!"000001F2FC55B780.w32.b0", !6575, i64 0}
!6575 = !{!"000001F2FC55B780.w64.b0", !6576, i64 0}
!6576 = !{!"000001F2FC55B780.w128.b0", !6577, i64 0}
!6577 = !{!"000001F2FC55B780.w256.b0", !6578, i64 0}
!6578 = !{!"000001F2FC55B780.w512.b0", !6579, i64 0}
!6579 = !{!"000001F2FC55B780.w1024.b0", !6580, i64 0}
!6580 = !{!"000001F2FC55B780", !21, i64 0}
!6581 = !{!6582, !6582, i64 0}
!6582 = !{!"000001F2FC55B780.w8.b8", !6573, i64 0}
!6583 = !{!6584, !6584, i64 0}
!6584 = !{!"000001F2FC55B780.w8.b32", !6585, i64 0}
!6585 = !{!"000001F2FC55B780.w16.b32", !6586, i64 0}
!6586 = !{!"000001F2FC55B780.w32.b32", !6575, i64 0}
!6587 = !{!6588, !6588, i64 0}
!6588 = !{!"000001F2FC55B780.w8.b40", !6585, i64 0}
!6589 = !{!6590, !6590, i64 0}
!6590 = !{!"000001F2FC55CFC0.w8.b0", !6591, i64 0}
!6591 = !{!"000001F2FC55CFC0.w16.b0", !6592, i64 0}
!6592 = !{!"000001F2FC55CFC0.w32.b0", !6593, i64 0}
!6593 = !{!"000001F2FC55CFC0.w64.b0", !6594, i64 0}
!6594 = !{!"000001F2FC55CFC0.w128.b0", !6595, i64 0}
!6595 = !{!"000001F2FC55CFC0.w256.b0", !6596, i64 0}
!6596 = !{!"000001F2FC55CFC0.w512.b0", !6597, i64 0}
!6597 = !{!"000001F2FC55CFC0.w1024.b0", !6598, i64 0}
!6598 = !{!"000001F2FC55CFC0", !21, i64 0}
!6599 = !{!6600, !6600, i64 0}
!6600 = !{!"000001F2FC55CFC0.w8.b8", !6591, i64 0}
!6601 = !{!6602, !6602, i64 0}
!6602 = !{!"000001F2FC55CFC0.w8.b16", !6603, i64 0}
!6603 = !{!"000001F2FC55CFC0.w16.b16", !6592, i64 0}
!6604 = !{!6605, !6605, i64 0}
!6605 = !{!"000001F2FC55CFC0.w8.b24", !6603, i64 0}
!6606 = !{!6607, !6607, i64 0}
!6607 = !{!"000001F2FC55CFC0.w8.b32", !6608, i64 0}
!6608 = !{!"000001F2FC55CFC0.w16.b32", !6609, i64 0}
!6609 = !{!"000001F2FC55CFC0.w32.b32", !6593, i64 0}
!6610 = !{!6611, !6611, i64 0}
!6611 = !{!"000001F2FC55CF00.w8.b8", !6612, i64 0}
!6612 = !{!"000001F2FC55CF00.w16.b0", !6613, i64 0}
!6613 = !{!"000001F2FC55CF00.w32.b0", !6614, i64 0}
!6614 = !{!"000001F2FC55CF00.w64.b0", !6615, i64 0}
!6615 = !{!"000001F2FC55CF00.w128.b0", !6616, i64 0}
!6616 = !{!"000001F2FC55CF00.w256.b0", !6617, i64 0}
!6617 = !{!"000001F2FC55CF00.w512.b0", !6618, i64 0}
!6618 = !{!"000001F2FC55CF00.w1024.b0", !6619, i64 0}
!6619 = !{!"000001F2FC55CF00", !21, i64 0}
!6620 = !{!6621, !6621, i64 0}
!6621 = !{!"000001F2FC55CF00.w8.b32", !6622, i64 0}
!6622 = !{!"000001F2FC55CF00.w16.b32", !6623, i64 0}
!6623 = !{!"000001F2FC55CF00.w32.b32", !6614, i64 0}
!6624 = !{!6625, !6625, i64 0}
!6625 = !{!"000001F2FC55D500.w8.b0", !6626, i64 0}
!6626 = !{!"000001F2FC55D500.w16.b0", !6627, i64 0}
!6627 = !{!"000001F2FC55D500.w32.b0", !6628, i64 0}
!6628 = !{!"000001F2FC55D500.w64.b0", !6629, i64 0}
!6629 = !{!"000001F2FC55D500.w128.b0", !6630, i64 0}
!6630 = !{!"000001F2FC55D500.w256.b0", !6631, i64 0}
!6631 = !{!"000001F2FC55D500.w512.b0", !6632, i64 0}
!6632 = !{!"000001F2FC55D500.w1024.b0", !6633, i64 0}
!6633 = !{!"000001F2FC55D500", !21, i64 0}
!6634 = !{!6635, !6635, i64 0}
!6635 = !{!"000001F2FC55D500.w8.b8", !6626, i64 0}
!6636 = !{!6637, !6637, i64 0}
!6637 = !{!"000001F2FC55D500.w8.b16", !6638, i64 0}
!6638 = !{!"000001F2FC55D500.w16.b16", !6627, i64 0}
!6639 = !{!6640, !6640, i64 0}
!6640 = !{!"000001F2FC55D500.w8.b24", !6638, i64 0}
!6641 = !{!6642, !6642, i64 0}
!6642 = !{!"000001F2FC55D500.w8.b32", !6643, i64 0}
!6643 = !{!"000001F2FC55D500.w16.b32", !6644, i64 0}
!6644 = !{!"000001F2FC55D500.w32.b32", !6628, i64 0}
!6645 = !{!6646, !6646, i64 0}
!6646 = !{!"000001F2FC55DD00.w8.b8", !6647, i64 0}
!6647 = !{!"000001F2FC55DD00.w16.b0", !6648, i64 0}
!6648 = !{!"000001F2FC55DD00.w32.b0", !6649, i64 0}
!6649 = !{!"000001F2FC55DD00.w64.b0", !6650, i64 0}
!6650 = !{!"000001F2FC55DD00.w128.b0", !6651, i64 0}
!6651 = !{!"000001F2FC55DD00.w256.b0", !6652, i64 0}
!6652 = !{!"000001F2FC55DD00.w512.b0", !6653, i64 0}
!6653 = !{!"000001F2FC55DD00.w1024.b0", !6654, i64 0}
!6654 = !{!"000001F2FC55DD00", !21, i64 0}
!6655 = !{!6656, !6656, i64 0}
!6656 = !{!"000001F2FC55DD00.w8.b16", !6657, i64 0}
!6657 = !{!"000001F2FC55DD00.w16.b16", !6648, i64 0}
!6658 = !{!6659, !6659, i64 0}
!6659 = !{!"000001F2FC55DD00.w8.b24", !6657, i64 0}
!6660 = !{!6661, !6661, i64 0}
!6661 = !{!"000001F2FC55DD00.w8.b32", !6662, i64 0}
!6662 = !{!"000001F2FC55DD00.w16.b32", !6663, i64 0}
!6663 = !{!"000001F2FC55DD00.w32.b32", !6649, i64 0}
!6664 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6665)
!6665 = !{!6666, !6667, !6668, !6669, !6670, !6671}
!6666 = !DILocalVariable(name: "arg1", arg: 1, scope: !6664, file: !1, type: !8)
!6667 = !DILocalVariable(name: "arg2", arg: 2, scope: !6664, file: !1, type: !9)
!6668 = !DILocalVariable(name: "arg3", arg: 3, scope: !6664, file: !1, type: !7)
!6669 = !DILocalVariable(name: "arg4", arg: 4, scope: !6664, file: !1, type: !8)
!6670 = !DILocalVariable(name: "arg5", arg: 5, scope: !6664, file: !1, type: !9)
!6671 = !DILocalVariable(name: "arg6", arg: 6, scope: !6664, file: !1, type: !8)
!6672 = !DILocation(line: 0, scope: !6664)
!6673 = !{!6674, !6674, i64 0}
!6674 = !{!"000001F2833902E0.w4.b0", !6675, i64 0}
!6675 = !{!"000001F2833902E0.w8.b0", !6676, i64 0}
!6676 = !{!"000001F2833902E0.w16.b0", !6677, i64 0}
!6677 = !{!"000001F2833902E0.w32.b0", !6678, i64 0}
!6678 = !{!"000001F2833902E0.w64.b0", !6679, i64 0}
!6679 = !{!"000001F2833902E0.w128.b0", !6680, i64 0}
!6680 = !{!"000001F2833902E0.w256.b0", !6681, i64 0}
!6681 = !{!"000001F2833902E0.w512.b0", !6682, i64 0}
!6682 = !{!"000001F2833902E0.w1024.b0", !6683, i64 0}
!6683 = !{!"000001F2833902E0", !21, i64 0}
!6684 = !{!6685, !6685, i64 0}
!6685 = !{!"000001F2833902E0.w4.b4", !6675, i64 0}
!6686 = !{!6687, !6687, i64 0}
!6687 = !{!"000001F2833902E0.w4.b8", !6688, i64 0}
!6688 = !{!"000001F2833902E0.w8.b8", !6676, i64 0}
!6689 = !{!6690, !6690, i64 0}
!6690 = !{!"000001F2833902E0.w4.b12", !6688, i64 0}
!6691 = !{!6692, !6692, i64 0}
!6692 = !{!"000001F2833972E0.w8.b0", !6693, i64 0}
!6693 = !{!"000001F2833972E0.w16.b0", !6694, i64 0}
!6694 = !{!"000001F2833972E0.w32.b0", !6695, i64 0}
!6695 = !{!"000001F2833972E0.w64.b0", !6696, i64 0}
!6696 = !{!"000001F2833972E0.w128.b0", !6697, i64 0}
!6697 = !{!"000001F2833972E0.w256.b0", !6698, i64 0}
!6698 = !{!"000001F2833972E0.w512.b0", !6699, i64 0}
!6699 = !{!"000001F2833972E0.w1024.b0", !6700, i64 0}
!6700 = !{!"000001F2833972E0", !21, i64 0}
!6701 = !{!6702, !6702, i64 0}
!6702 = !{!"000001F2833972E0.w8.b8", !6693, i64 0}
!6703 = !{!6704, !6704, i64 0}
!6704 = !{!"000001F2833972E0.w8.b16", !6705, i64 0}
!6705 = !{!"000001F2833972E0.w16.b16", !6694, i64 0}
!6706 = !{!6707, !6707, i64 0}
!6707 = !{!"000001F2833972E0.w8.b24", !6705, i64 0}
!6708 = !{!6709, !6709, i64 0}
!6709 = !{!"000001F2833972E0.w8.b32", !6710, i64 0}
!6710 = !{!"000001F2833972E0.w16.b32", !6711, i64 0}
!6711 = !{!"000001F2833972E0.w32.b32", !6695, i64 0}
!6712 = !{!6713, !6713, i64 0}
!6713 = !{!"000001F283397760.w8.b8", !6714, i64 0}
!6714 = !{!"000001F283397760.w16.b0", !6715, i64 0}
!6715 = !{!"000001F283397760.w32.b0", !6716, i64 0}
!6716 = !{!"000001F283397760.w64.b0", !6717, i64 0}
!6717 = !{!"000001F283397760.w128.b0", !6718, i64 0}
!6718 = !{!"000001F283397760.w256.b0", !6719, i64 0}
!6719 = !{!"000001F283397760.w512.b0", !6720, i64 0}
!6720 = !{!"000001F283397760.w1024.b0", !6721, i64 0}
!6721 = !{!"000001F283397760", !21, i64 0}
!6722 = !{!6723, !6723, i64 0}
!6723 = !{!"000001F283397760.w8.b16", !6724, i64 0}
!6724 = !{!"000001F283397760.w16.b16", !6715, i64 0}
!6725 = !{!6726, !6726, i64 0}
!6726 = !{!"000001F283397760.w8.b24", !6724, i64 0}
!6727 = !{!6728, !6728, i64 0}
!6728 = !{!"000001F283397760.w8.b32", !6729, i64 0}
!6729 = !{!"000001F283397760.w16.b32", !6730, i64 0}
!6730 = !{!"000001F283397760.w32.b32", !6716, i64 0}
!6731 = !{!6732, !6732, i64 0}
!6732 = !{!"000001F28339ACA0.w8.b0", !6733, i64 0}
!6733 = !{!"000001F28339ACA0.w16.b0", !6734, i64 0}
!6734 = !{!"000001F28339ACA0.w32.b0", !6735, i64 0}
!6735 = !{!"000001F28339ACA0.w64.b0", !6736, i64 0}
!6736 = !{!"000001F28339ACA0.w128.b0", !6737, i64 0}
!6737 = !{!"000001F28339ACA0.w256.b0", !6738, i64 0}
!6738 = !{!"000001F28339ACA0.w512.b0", !6739, i64 0}
!6739 = !{!"000001F28339ACA0.w1024.b0", !6740, i64 0}
!6740 = !{!"000001F28339ACA0", !21, i64 0}
!6741 = !{!6742, !6742, i64 0}
!6742 = !{!"000001F28339ACA0.w8.b8", !6733, i64 0}
!6743 = !{!6744, !6744, i64 0}
!6744 = !{!"000001F28339ACA0.w8.b16", !6745, i64 0}
!6745 = !{!"000001F28339ACA0.w16.b16", !6734, i64 0}
!6746 = !{!6747, !6747, i64 0}
!6747 = !{!"000001F28339ACA0.w8.b24", !6745, i64 0}
!6748 = !{!6749, !6749, i64 0}
!6749 = !{!"000001F28339ACA0.w8.b32", !6750, i64 0}
!6750 = !{!"000001F28339ACA0.w16.b32", !6751, i64 0}
!6751 = !{!"000001F28339ACA0.w32.b32", !6735, i64 0}
!6752 = !{!6753, !6753, i64 0}
!6753 = !{!"000001F28339ACA0.w8.b40", !6750, i64 0}
!6754 = !{!6755, !6755, i64 0}
!6755 = !{!"000001F28339B860.w8.b0", !6756, i64 0}
!6756 = !{!"000001F28339B860.w16.b0", !6757, i64 0}
!6757 = !{!"000001F28339B860.w32.b0", !6758, i64 0}
!6758 = !{!"000001F28339B860.w64.b0", !6759, i64 0}
!6759 = !{!"000001F28339B860.w128.b0", !6760, i64 0}
!6760 = !{!"000001F28339B860.w256.b0", !6761, i64 0}
!6761 = !{!"000001F28339B860.w512.b0", !6762, i64 0}
!6762 = !{!"000001F28339B860.w1024.b0", !6763, i64 0}
!6763 = !{!"000001F28339B860", !21, i64 0}
!6764 = !{!6765, !6765, i64 0}
!6765 = !{!"000001F28339B860.w8.b8", !6756, i64 0}
!6766 = !{!6767, !6767, i64 0}
!6767 = !{!"000001F28339B860.w8.b16", !6768, i64 0}
!6768 = !{!"000001F28339B860.w16.b16", !6757, i64 0}
!6769 = !{!6770, !6770, i64 0}
!6770 = !{!"000001F28339B860.w8.b24", !6768, i64 0}
!6771 = !{!6772, !6772, i64 0}
!6772 = !{!"000001F28339B860.w8.b32", !6773, i64 0}
!6773 = !{!"000001F28339B860.w16.b32", !6774, i64 0}
!6774 = !{!"000001F28339B860.w32.b32", !6758, i64 0}
!6775 = !{!6776, !6776, i64 0}
!6776 = !{!"000001F28339B860.w8.b40", !6773, i64 0}
!6777 = !{!6778, !6778, i64 0}
!6778 = !{!"000001F28339B360.w8.b0", !6779, i64 0}
!6779 = !{!"000001F28339B360.w16.b0", !6780, i64 0}
!6780 = !{!"000001F28339B360.w32.b0", !6781, i64 0}
!6781 = !{!"000001F28339B360.w64.b0", !6782, i64 0}
!6782 = !{!"000001F28339B360.w128.b0", !6783, i64 0}
!6783 = !{!"000001F28339B360.w256.b0", !6784, i64 0}
!6784 = !{!"000001F28339B360.w512.b0", !6785, i64 0}
!6785 = !{!"000001F28339B360.w1024.b0", !6786, i64 0}
!6786 = !{!"000001F28339B360", !21, i64 0}
!6787 = !{!6788, !6788, i64 0}
!6788 = !{!"000001F28339B360.w8.b8", !6779, i64 0}
!6789 = !{!6790, !6790, i64 0}
!6790 = !{!"000001F28339B360.w8.b16", !6791, i64 0}
!6791 = !{!"000001F28339B360.w16.b16", !6780, i64 0}
!6792 = !{!6793, !6793, i64 0}
!6793 = !{!"000001F28339B360.w8.b24", !6791, i64 0}
!6794 = !{!6795, !6795, i64 0}
!6795 = !{!"000001F28339B360.w8.b32", !6796, i64 0}
!6796 = !{!"000001F28339B360.w16.b32", !6797, i64 0}
!6797 = !{!"000001F28339B360.w32.b32", !6781, i64 0}
!6798 = !{!6799, !6799, i64 0}
!6799 = !{!"000001F28339C2E0.w8.b8", !6800, i64 0}
!6800 = !{!"000001F28339C2E0.w16.b0", !6801, i64 0}
!6801 = !{!"000001F28339C2E0.w32.b0", !6802, i64 0}
!6802 = !{!"000001F28339C2E0.w64.b0", !6803, i64 0}
!6803 = !{!"000001F28339C2E0.w128.b0", !6804, i64 0}
!6804 = !{!"000001F28339C2E0.w256.b0", !6805, i64 0}
!6805 = !{!"000001F28339C2E0.w512.b0", !6806, i64 0}
!6806 = !{!"000001F28339C2E0.w1024.b0", !6807, i64 0}
!6807 = !{!"000001F28339C2E0", !21, i64 0}
!6808 = !{!6809, !6809, i64 0}
!6809 = !{!"000001F28339C2E0.w8.b32", !6810, i64 0}
!6810 = !{!"000001F28339C2E0.w16.b32", !6811, i64 0}
!6811 = !{!"000001F28339C2E0.w32.b32", !6802, i64 0}
!6812 = !{!6813, !6813, i64 0}
!6813 = !{!"000001F28339CD60.w8.b0", !6814, i64 0}
!6814 = !{!"000001F28339CD60.w16.b0", !6815, i64 0}
!6815 = !{!"000001F28339CD60.w32.b0", !6816, i64 0}
!6816 = !{!"000001F28339CD60.w64.b0", !6817, i64 0}
!6817 = !{!"000001F28339CD60.w128.b0", !6818, i64 0}
!6818 = !{!"000001F28339CD60.w256.b0", !6819, i64 0}
!6819 = !{!"000001F28339CD60.w512.b0", !6820, i64 0}
!6820 = !{!"000001F28339CD60.w1024.b0", !6821, i64 0}
!6821 = !{!"000001F28339CD60", !21, i64 0}
!6822 = !{!6823, !6823, i64 0}
!6823 = !{!"000001F28339CD60.w8.b8", !6814, i64 0}
!6824 = !{!6825, !6825, i64 0}
!6825 = !{!"000001F28339CD60.w8.b16", !6826, i64 0}
!6826 = !{!"000001F28339CD60.w16.b16", !6815, i64 0}
!6827 = !{!6828, !6828, i64 0}
!6828 = !{!"000001F28339CD60.w8.b24", !6826, i64 0}
!6829 = !{!6830, !6830, i64 0}
!6830 = !{!"000001F28339CD60.w8.b32", !6831, i64 0}
!6831 = !{!"000001F28339CD60.w16.b32", !6832, i64 0}
!6832 = !{!"000001F28339CD60.w32.b32", !6816, i64 0}
!6833 = !{!6834, !6834, i64 0}
!6834 = !{!"000001F28339D9A0.w8.b8", !6835, i64 0}
!6835 = !{!"000001F28339D9A0.w16.b0", !6836, i64 0}
!6836 = !{!"000001F28339D9A0.w32.b0", !6837, i64 0}
!6837 = !{!"000001F28339D9A0.w64.b0", !6838, i64 0}
!6838 = !{!"000001F28339D9A0.w128.b0", !6839, i64 0}
!6839 = !{!"000001F28339D9A0.w256.b0", !6840, i64 0}
!6840 = !{!"000001F28339D9A0.w512.b0", !6841, i64 0}
!6841 = !{!"000001F28339D9A0.w1024.b0", !6842, i64 0}
!6842 = !{!"000001F28339D9A0", !21, i64 0}
!6843 = !{!6844, !6844, i64 0}
!6844 = !{!"000001F28339D9A0.w8.b16", !6845, i64 0}
!6845 = !{!"000001F28339D9A0.w16.b16", !6836, i64 0}
!6846 = !{!6847, !6847, i64 0}
!6847 = !{!"000001F28339D9A0.w8.b24", !6845, i64 0}
!6848 = !{!6849, !6849, i64 0}
!6849 = !{!"000001F28339D9A0.w8.b32", !6850, i64 0}
!6850 = !{!"000001F28339D9A0.w16.b32", !6851, i64 0}
!6851 = !{!"000001F28339D9A0.w32.b32", !6837, i64 0}
!6852 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6853)
!6853 = !{!6854, !6855, !6856, !6857, !6858, !6859}
!6854 = !DILocalVariable(name: "arg1", arg: 1, scope: !6852, file: !1, type: !8)
!6855 = !DILocalVariable(name: "arg2", arg: 2, scope: !6852, file: !1, type: !9)
!6856 = !DILocalVariable(name: "arg3", arg: 3, scope: !6852, file: !1, type: !7)
!6857 = !DILocalVariable(name: "arg4", arg: 4, scope: !6852, file: !1, type: !8)
!6858 = !DILocalVariable(name: "arg5", arg: 5, scope: !6852, file: !1, type: !9)
!6859 = !DILocalVariable(name: "arg6", arg: 6, scope: !6852, file: !1, type: !8)
!6860 = !DILocation(line: 0, scope: !6852)
!6861 = !{!6862, !6862, i64 0}
!6862 = !{!"000001F283302990.w4.b0", !6863, i64 0}
!6863 = !{!"000001F283302990.w8.b0", !6864, i64 0}
!6864 = !{!"000001F283302990.w16.b0", !6865, i64 0}
!6865 = !{!"000001F283302990.w32.b0", !6866, i64 0}
!6866 = !{!"000001F283302990.w64.b0", !6867, i64 0}
!6867 = !{!"000001F283302990.w128.b0", !6868, i64 0}
!6868 = !{!"000001F283302990.w256.b0", !6869, i64 0}
!6869 = !{!"000001F283302990.w512.b0", !6870, i64 0}
!6870 = !{!"000001F283302990.w1024.b0", !6871, i64 0}
!6871 = !{!"000001F283302990", !21, i64 0}
!6872 = !{!6873, !6873, i64 0}
!6873 = !{!"000001F283302990.w4.b4", !6863, i64 0}
!6874 = !{!6875, !6875, i64 0}
!6875 = !{!"000001F283302990.w4.b8", !6876, i64 0}
!6876 = !{!"000001F283302990.w8.b8", !6864, i64 0}
!6877 = !{!6878, !6878, i64 0}
!6878 = !{!"000001F283302990.w4.b12", !6876, i64 0}
!6879 = !{!6880, !6880, i64 0}
!6880 = !{!"000001F2833069D0.w8.b0", !6881, i64 0}
!6881 = !{!"000001F2833069D0.w16.b0", !6882, i64 0}
!6882 = !{!"000001F2833069D0.w32.b0", !6883, i64 0}
!6883 = !{!"000001F2833069D0.w64.b0", !6884, i64 0}
!6884 = !{!"000001F2833069D0.w128.b0", !6885, i64 0}
!6885 = !{!"000001F2833069D0.w256.b0", !6886, i64 0}
!6886 = !{!"000001F2833069D0.w512.b0", !6887, i64 0}
!6887 = !{!"000001F2833069D0.w1024.b0", !6888, i64 0}
!6888 = !{!"000001F2833069D0", !21, i64 0}
!6889 = !{!6890, !6890, i64 0}
!6890 = !{!"000001F2833069D0.w8.b8", !6881, i64 0}
!6891 = !{!6892, !6892, i64 0}
!6892 = !{!"000001F283306510.w8.b8", !6893, i64 0}
!6893 = !{!"000001F283306510.w16.b0", !6894, i64 0}
!6894 = !{!"000001F283306510.w32.b0", !6895, i64 0}
!6895 = !{!"000001F283306510.w64.b0", !6896, i64 0}
!6896 = !{!"000001F283306510.w128.b0", !6897, i64 0}
!6897 = !{!"000001F283306510.w256.b0", !6898, i64 0}
!6898 = !{!"000001F283306510.w512.b0", !6899, i64 0}
!6899 = !{!"000001F283306510.w1024.b0", !6900, i64 0}
!6900 = !{!"000001F283306510", !21, i64 0}
!6901 = !{!6902, !6902, i64 0}
!6902 = !{!"000001F283308790.w8.b0", !6903, i64 0}
!6903 = !{!"000001F283308790.w16.b0", !6904, i64 0}
!6904 = !{!"000001F283308790.w32.b0", !6905, i64 0}
!6905 = !{!"000001F283308790.w64.b0", !6906, i64 0}
!6906 = !{!"000001F283308790.w128.b0", !6907, i64 0}
!6907 = !{!"000001F283308790.w256.b0", !6908, i64 0}
!6908 = !{!"000001F283308790.w512.b0", !6909, i64 0}
!6909 = !{!"000001F283308790.w1024.b0", !6910, i64 0}
!6910 = !{!"000001F283308790", !21, i64 0}
!6911 = !{!6912, !6912, i64 0}
!6912 = !{!"000001F283308790.w8.b8", !6903, i64 0}
!6913 = !{!6914, !6914, i64 0}
!6914 = !{!"000001F283308790.w8.b16", !6915, i64 0}
!6915 = !{!"000001F283308790.w16.b16", !6904, i64 0}
!6916 = !{!6917, !6917, i64 0}
!6917 = !{!"000001F2833084D0.w8.b0", !6918, i64 0}
!6918 = !{!"000001F2833084D0.w16.b0", !6919, i64 0}
!6919 = !{!"000001F2833084D0.w32.b0", !6920, i64 0}
!6920 = !{!"000001F2833084D0.w64.b0", !6921, i64 0}
!6921 = !{!"000001F2833084D0.w128.b0", !6922, i64 0}
!6922 = !{!"000001F2833084D0.w256.b0", !6923, i64 0}
!6923 = !{!"000001F2833084D0.w512.b0", !6924, i64 0}
!6924 = !{!"000001F2833084D0.w1024.b0", !6925, i64 0}
!6925 = !{!"000001F2833084D0", !21, i64 0}
!6926 = !{!6927, !6927, i64 0}
!6927 = !{!"000001F2833084D0.w8.b8", !6918, i64 0}
!6928 = !{!6929, !6929, i64 0}
!6929 = !{!"000001F2833084D0.w8.b16", !6930, i64 0}
!6930 = !{!"000001F2833084D0.w16.b16", !6919, i64 0}
!6931 = !{!6932, !6932, i64 0}
!6932 = !{!"000001F283309A50.w8.b0", !6933, i64 0}
!6933 = !{!"000001F283309A50.w16.b0", !6934, i64 0}
!6934 = !{!"000001F283309A50.w32.b0", !6935, i64 0}
!6935 = !{!"000001F283309A50.w64.b0", !6936, i64 0}
!6936 = !{!"000001F283309A50.w128.b0", !6937, i64 0}
!6937 = !{!"000001F283309A50.w256.b0", !6938, i64 0}
!6938 = !{!"000001F283309A50.w512.b0", !6939, i64 0}
!6939 = !{!"000001F283309A50.w1024.b0", !6940, i64 0}
!6940 = !{!"000001F283309A50", !21, i64 0}
!6941 = !{!6942, !6942, i64 0}
!6942 = !{!"000001F283309A50.w8.b8", !6933, i64 0}
!6943 = !{!6944, !6944, i64 0}
!6944 = !{!"000001F283309A90.w8.b8", !6945, i64 0}
!6945 = !{!"000001F283309A90.w16.b0", !6946, i64 0}
!6946 = !{!"000001F283309A90.w32.b0", !6947, i64 0}
!6947 = !{!"000001F283309A90.w64.b0", !6948, i64 0}
!6948 = !{!"000001F283309A90.w128.b0", !6949, i64 0}
!6949 = !{!"000001F283309A90.w256.b0", !6950, i64 0}
!6950 = !{!"000001F283309A90.w512.b0", !6951, i64 0}
!6951 = !{!"000001F283309A90.w1024.b0", !6952, i64 0}
!6952 = !{!"000001F283309A90", !21, i64 0}
!6953 = !{!6954, !6954, i64 0}
!6954 = !{!"000001F28330AB50.w8.b0", !6955, i64 0}
!6955 = !{!"000001F28330AB50.w16.b0", !6956, i64 0}
!6956 = !{!"000001F28330AB50.w32.b0", !6957, i64 0}
!6957 = !{!"000001F28330AB50.w64.b0", !6958, i64 0}
!6958 = !{!"000001F28330AB50.w128.b0", !6959, i64 0}
!6959 = !{!"000001F28330AB50.w256.b0", !6960, i64 0}
!6960 = !{!"000001F28330AB50.w512.b0", !6961, i64 0}
!6961 = !{!"000001F28330AB50.w1024.b0", !6962, i64 0}
!6962 = !{!"000001F28330AB50", !21, i64 0}
!6963 = !{!6964, !6964, i64 0}
!6964 = !{!"000001F28330AB50.w8.b8", !6955, i64 0}
!6965 = !{!6966, !6966, i64 0}
!6966 = !{!"000001F28330A6D0.w8.b8", !6967, i64 0}
!6967 = !{!"000001F28330A6D0.w16.b0", !6968, i64 0}
!6968 = !{!"000001F28330A6D0.w32.b0", !6969, i64 0}
!6969 = !{!"000001F28330A6D0.w64.b0", !6970, i64 0}
!6970 = !{!"000001F28330A6D0.w128.b0", !6971, i64 0}
!6971 = !{!"000001F28330A6D0.w256.b0", !6972, i64 0}
!6972 = !{!"000001F28330A6D0.w512.b0", !6973, i64 0}
!6973 = !{!"000001F28330A6D0.w1024.b0", !6974, i64 0}
!6974 = !{!"000001F28330A6D0", !21, i64 0}
!6975 = distinct !DISubprogram(name: "main.tir", scope: !1, file: !1, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6976)
!6976 = !{!6977, !6978, !6979, !6980, !6981, !6982}
!6977 = !DILocalVariable(name: "arg1", arg: 1, scope: !6975, file: !1, type: !8)
!6978 = !DILocalVariable(name: "arg2", arg: 2, scope: !6975, file: !1, type: !9)
!6979 = !DILocalVariable(name: "arg3", arg: 3, scope: !6975, file: !1, type: !7)
!6980 = !DILocalVariable(name: "arg4", arg: 4, scope: !6975, file: !1, type: !8)
!6981 = !DILocalVariable(name: "arg5", arg: 5, scope: !6975, file: !1, type: !9)
!6982 = !DILocalVariable(name: "arg6", arg: 6, scope: !6975, file: !1, type: !8)
!6983 = !DILocation(line: 0, scope: !6975)
!6984 = !{!6985, !6985, i64 0}
!6985 = !{!"000001F2FC562E40.w4.b0", !6986, i64 0}
!6986 = !{!"000001F2FC562E40.w8.b0", !6987, i64 0}
!6987 = !{!"000001F2FC562E40.w16.b0", !6988, i64 0}
!6988 = !{!"000001F2FC562E40.w32.b0", !6989, i64 0}
!6989 = !{!"000001F2FC562E40.w64.b0", !6990, i64 0}
!6990 = !{!"000001F2FC562E40.w128.b0", !6991, i64 0}
!6991 = !{!"000001F2FC562E40.w256.b0", !6992, i64 0}
!6992 = !{!"000001F2FC562E40.w512.b0", !6993, i64 0}
!6993 = !{!"000001F2FC562E40.w1024.b0", !6994, i64 0}
!6994 = !{!"000001F2FC562E40", !21, i64 0}
!6995 = !{!6996, !6996, i64 0}
!6996 = !{!"000001F2FC562E40.w4.b4", !6986, i64 0}
!6997 = !{!6998, !6998, i64 0}
!6998 = !{!"000001F2FC569400.w8.b0", !6999, i64 0}
!6999 = !{!"000001F2FC569400.w16.b0", !7000, i64 0}
!7000 = !{!"000001F2FC569400.w32.b0", !7001, i64 0}
!7001 = !{!"000001F2FC569400.w64.b0", !7002, i64 0}
!7002 = !{!"000001F2FC569400.w128.b0", !7003, i64 0}
!7003 = !{!"000001F2FC569400.w256.b0", !7004, i64 0}
!7004 = !{!"000001F2FC569400.w512.b0", !7005, i64 0}
!7005 = !{!"000001F2FC569400.w1024.b0", !7006, i64 0}
!7006 = !{!"000001F2FC569400", !21, i64 0}
!7007 = !{!7008, !7008, i64 0}
!7008 = !{!"000001F2FC569400.w8.b8", !6999, i64 0}
!7009 = !{!7010, !7010, i64 0}
!7010 = !{!"000001F2FC569400.w8.b16", !7011, i64 0}
!7011 = !{!"000001F2FC569400.w16.b16", !7000, i64 0}
!7012 = !{!7013, !7013, i64 0}
!7013 = !{!"000001F2FC569400.w8.b24", !7011, i64 0}
!7014 = !{!7015, !7015, i64 0}
!7015 = !{!"000001F2FC569400.w8.b32", !7016, i64 0}
!7016 = !{!"000001F2FC569400.w16.b32", !7017, i64 0}
!7017 = !{!"000001F2FC569400.w32.b32", !7001, i64 0}
!7018 = !{!7019, !7019, i64 0}
!7019 = !{!"000001F2FC56AF00.w8.b8", !7020, i64 0}
!7020 = !{!"000001F2FC56AF00.w16.b0", !7021, i64 0}
!7021 = !{!"000001F2FC56AF00.w32.b0", !7022, i64 0}
!7022 = !{!"000001F2FC56AF00.w64.b0", !7023, i64 0}
!7023 = !{!"000001F2FC56AF00.w128.b0", !7024, i64 0}
!7024 = !{!"000001F2FC56AF00.w256.b0", !7025, i64 0}
!7025 = !{!"000001F2FC56AF00.w512.b0", !7026, i64 0}
!7026 = !{!"000001F2FC56AF00.w1024.b0", !7027, i64 0}
!7027 = !{!"000001F2FC56AF00", !21, i64 0}
!7028 = !{!7029, !7029, i64 0}
!7029 = !{!"000001F2FC56AF00.w8.b16", !7030, i64 0}
!7030 = !{!"000001F2FC56AF00.w16.b16", !7021, i64 0}
!7031 = !{!7032, !7032, i64 0}
!7032 = !{!"000001F2FC56AF00.w8.b24", !7030, i64 0}
!7033 = !{!7034, !7034, i64 0}
!7034 = !{!"000001F2FC56AF00.w8.b32", !7035, i64 0}
!7035 = !{!"000001F2FC56AF00.w16.b32", !7036, i64 0}
!7036 = !{!"000001F2FC56AF00.w32.b32", !7022, i64 0}
!7037 = !{!7038, !7038, i64 0}
!7038 = !{!"000001F2FC56A9C0.w8.b0", !7039, i64 0}
!7039 = !{!"000001F2FC56A9C0.w16.b0", !7040, i64 0}
!7040 = !{!"000001F2FC56A9C0.w32.b0", !7041, i64 0}
!7041 = !{!"000001F2FC56A9C0.w64.b0", !7042, i64 0}
!7042 = !{!"000001F2FC56A9C0.w128.b0", !7043, i64 0}
!7043 = !{!"000001F2FC56A9C0.w256.b0", !7044, i64 0}
!7044 = !{!"000001F2FC56A9C0.w512.b0", !7045, i64 0}
!7045 = !{!"000001F2FC56A9C0.w1024.b0", !7046, i64 0}
!7046 = !{!"000001F2FC56A9C0", !21, i64 0}
!7047 = !{!7048, !7048, i64 0}
!7048 = !{!"000001F2FC56A9C0.w8.b8", !7039, i64 0}
!7049 = !{!7050, !7050, i64 0}
!7050 = !{!"000001F2FC56A9C0.w8.b16", !7051, i64 0}
!7051 = !{!"000001F2FC56A9C0.w16.b16", !7040, i64 0}
!7052 = !{!7053, !7053, i64 0}
!7053 = !{!"000001F2FC56A9C0.w8.b24", !7051, i64 0}
!7054 = !{!7055, !7055, i64 0}
!7055 = !{!"000001F2FC56A9C0.w8.b32", !7056, i64 0}
!7056 = !{!"000001F2FC56A9C0.w16.b32", !7057, i64 0}
!7057 = !{!"000001F2FC56A9C0.w32.b32", !7041, i64 0}
!7058 = !{!7059, !7059, i64 0}
!7059 = !{!"000001F2FC56BD40.w8.b8", !7060, i64 0}
!7060 = !{!"000001F2FC56BD40.w16.b0", !7061, i64 0}
!7061 = !{!"000001F2FC56BD40.w32.b0", !7062, i64 0}
!7062 = !{!"000001F2FC56BD40.w64.b0", !7063, i64 0}
!7063 = !{!"000001F2FC56BD40.w128.b0", !7064, i64 0}
!7064 = !{!"000001F2FC56BD40.w256.b0", !7065, i64 0}
!7065 = !{!"000001F2FC56BD40.w512.b0", !7066, i64 0}
!7066 = !{!"000001F2FC56BD40.w1024.b0", !7067, i64 0}
!7067 = !{!"000001F2FC56BD40", !21, i64 0}
!7068 = !{!7069, !7069, i64 0}
!7069 = !{!"000001F2FC56BD40.w8.b16", !7070, i64 0}
!7070 = !{!"000001F2FC56BD40.w16.b16", !7061, i64 0}
!7071 = !{!7072, !7072, i64 0}
!7072 = !{!"000001F2FC56BD40.w8.b24", !7070, i64 0}
!7073 = !{!7074, !7074, i64 0}
!7074 = !{!"000001F2FC56BD40.w8.b32", !7075, i64 0}
!7075 = !{!"000001F2FC56BD40.w16.b32", !7076, i64 0}
!7076 = !{!"000001F2FC56BD40.w32.b32", !7062, i64 0}
!7077 = !{!7078, !7078, i64 0}
!7078 = !{!"000001F2FCD56D90", !21, i64 0}
!7079 = !{!7080, !7080, i64 0}
!7080 = !{!"000001F2FCD56F90", !21, i64 0}
!7081 = !{!7082, !7082, i64 0}
!7082 = !{!"000001F2FCD5C090", !21, i64 0}
!7083 = !{!7084, !7084, i64 0}
!7084 = !{!"000001F2FCD5BE50", !21, i64 0}
!7085 = !{!"branch_weights", i32 1, i32 524287}
!7086 = !{!7087, !7087, i64 0}
!7087 = !{!"000001F2EABE0610", !21, i64 0}
!7088 = !{!7089, !7089, i64 0}
!7089 = !{!"000001F2EABE0ED0", !21, i64 0}
!7090 = !{!7091, !7091, i64 0}
!7091 = !{!"000001F2EABEC590", !21, i64 0}
!7092 = !{!7093, !7093, i64 0}
!7093 = !{!"000001F2EABEC790", !21, i64 0}
!7094 = !{!7095, !7095, i64 0}
!7095 = !{!"000001F2EA7B60F0", !21, i64 0}
!7096 = !{!7097, !7097, i64 0}
!7097 = !{!"000001F2EA7B5170", !21, i64 0}
!7098 = !{!7099, !7099, i64 0}
!7099 = !{!"000001F2EA7C70F0", !21, i64 0}
!7100 = !{!7101, !7101, i64 0}
!7101 = !{!"000001F2EA7C6730", !21, i64 0}
!7102 = !{!7103, !7103, i64 0}
!7103 = !{!"000001F2EA7CF430", !21, i64 0}
!7104 = !{!7105, !7105, i64 0}
!7105 = !{!"000001F2EA7CF5B0", !21, i64 0}
!7106 = !{!7107, !7107, i64 0}
!7107 = !{!"000001F2EEA9F270", !21, i64 0}
!7108 = !{!7109, !7109, i64 0}
!7109 = !{!"000001F2EEA9F630", !21, i64 0}
!7110 = !{!7111, !7111, i64 0}
!7111 = !{!"000001F2EEAA3F70", !21, i64 0}
!7112 = !{!7113, !7113, i64 0}
!7113 = !{!"000001F2EEAA35B0", !21, i64 0}
!7114 = !{!7115, !7115, i64 0}
!7115 = !{!"000001F2EEADC670", !21, i64 0}
!7116 = !{!7117, !7117, i64 0}
!7117 = !{!"000001F2EEADC870", !21, i64 0}
!7118 = !{!7119, !7119, i64 0}
!7119 = !{!"000001F2EABFBDD0", !21, i64 0}
!7120 = !{!7121, !7121, i64 0}
!7121 = !{!"000001F2EABFB950", !21, i64 0}
!7122 = !{!7123, !7123, i64 0}
!7123 = !{!"000001F2EF584760", !21, i64 0}
!7124 = !{!7125, !7125, i64 0}
!7125 = !{!"000001F2EF5844A0", !21, i64 0}
!7126 = !{!7127, !7127, i64 0}
!7127 = !{!"000001F2EF34CC60", !21, i64 0}
!7128 = !{!7129, !7129, i64 0}
!7129 = !{!"000001F2EF34CB60", !21, i64 0}
!7130 = !{!7131, !7131, i64 0}
!7131 = !{!"000001F2EAEDBCB0", !21, i64 0}
!7132 = !{!7133, !7133, i64 0}
!7133 = !{!"000001F2EAEDB470", !21, i64 0}
!7134 = !{!7135, !7135, i64 0}
!7135 = !{!"000001F2EF922860", !21, i64 0}
!7136 = !{!7137, !7137, i64 0}
!7137 = !{!"000001F2EF922AA0", !21, i64 0}
!7138 = !{!7139, !7139, i64 0}
!7139 = !{!"000001F2EF934A20", !21, i64 0}
!7140 = !{!7141, !7141, i64 0}
!7141 = !{!"000001F2EF934AE0", !21, i64 0}
!7142 = !{!7143, !7143, i64 0}
!7143 = !{!"000001F2EAAD7DA0", !21, i64 0}
!7144 = !{!7145, !7145, i64 0}
!7145 = !{!"000001F2EAAD7560", !21, i64 0}
!7146 = !{!7147, !7147, i64 0}
!7147 = !{!"000001F2EAAD84A0", !21, i64 0}
!7148 = !{!7149, !7149, i64 0}
!7149 = !{!"000001F2EAAD8660", !21, i64 0}
!7150 = !{!7151, !7151, i64 0}
!7151 = !{!"000001F2FCC33370", !21, i64 0}
!7152 = !{!7153, !7153, i64 0}
!7153 = !{!"000001F2FCC333F0", !21, i64 0}
!7154 = !{!7155, !7155, i64 0}
!7155 = !{!"000001F2FCC40BB0", !21, i64 0}
!7156 = !{!7157, !7157, i64 0}
!7157 = !{!"000001F2FCC40230", !21, i64 0}
!7158 = !{!7159, !7159, i64 0}
!7159 = !{!"000001F2EF57DAA0", !21, i64 0}
!7160 = !{!7161, !7161, i64 0}
!7161 = !{!"000001F2EF57D6A0", !21, i64 0}
!7162 = !{!7163, !7163, i64 0}
!7163 = !{!"000001F2EAEDE830", !21, i64 0}
!7164 = !{!7165, !7165, i64 0}
!7165 = !{!"000001F2EAEDF3B0", !21, i64 0}
!7166 = !{!7167, !7167, i64 0}
!7167 = !{!"000001F2EAEDE1F0", !21, i64 0}
!7168 = !{!7169, !7169, i64 0}
!7169 = !{!"000001F2EF929A60", !21, i64 0}
!7170 = !{!7171, !7171, i64 0}
!7171 = !{!"000001F2EF9340E0", !21, i64 0}
!7172 = !{!7173, !7173, i64 0}
!7173 = !{!"000001F2EF929BE0", !21, i64 0}
!7174 = !{!7175, !7175, i64 0}
!7175 = !{!"000001F2EF929920", !21, i64 0}
!7176 = !{!7177, !7177, i64 0}
!7177 = !{!"000001F2EF929960", !21, i64 0}
!7178 = !{!7179, !7179, i64 0}
!7179 = !{!"000001F2FCC33A30", !21, i64 0}
!7180 = !{!7181, !7181, i64 0}
!7181 = !{!"000001F2FCC33EF0", !21, i64 0}
!7182 = !{!7183, !7183, i64 0}
!7183 = !{!"000001F2FCC33830", !21, i64 0}
!7184 = !{!7185, !7185, i64 0}
!7185 = !{!"000001F2FCC37E70", !21, i64 0}
!7186 = !{!7187, !7187, i64 0}
!7187 = !{!"000001F2FCC340B0", !21, i64 0}
!7188 = !{!7189, !7189, i64 0}
!7189 = !{!"000001F2EA7C0730", !21, i64 0}
!7190 = !{!7191, !7191, i64 0}
!7191 = !{!"000001F2EA7C01F0", !21, i64 0}
!7192 = !{!7193, !7193, i64 0}
!7193 = !{!"000001F2EA7C0C70", !21, i64 0}
!7194 = !{!7195, !7195, i64 0}
!7195 = !{!"000001F2EA7C5A70", !21, i64 0}
!7196 = !{!7197, !7197, i64 0}
!7197 = !{!"000001F2EA7C0EB0", !21, i64 0}
!7198 = !{!7199, !7199, i64 0}
!7199 = !{!"000001F2EEAE3370", !21, i64 0}
!7200 = !{!7201, !7201, i64 0}
!7201 = !{!"000001F2EEAE3A70", !21, i64 0}
!7202 = !{!7203, !7203, i64 0}
!7203 = !{!"000001F2EEAE3A30", !21, i64 0}
!7204 = !{!7205, !7205, i64 0}
!7205 = !{!"000001F2EEAE3670", !21, i64 0}
!7206 = !{!7207, !7207, i64 0}
!7207 = !{!"000001F2EF9313A0", !21, i64 0}
!7208 = !{!7209, !7209, i64 0}
!7209 = !{!"000001F2EF91BC60", !21, i64 0}
!7210 = !{!7211, !7211, i64 0}
!7211 = !{!"000001F2EF931DE0", !21, i64 0}
!7212 = !{!7213, !7213, i64 0}
!7213 = !{!"000001F2EF931A20", !21, i64 0}
!7214 = !{!7215, !7215, i64 0}
!7215 = !{!"000001F2EF931260", !21, i64 0}
!7216 = !{!7217, !7217, i64 0}
!7217 = !{!"000001F2EF9312E0", !21, i64 0}
!7218 = !{!7219, !7219, i64 0}
!7219 = !{!"000001F2FCC3E530", !21, i64 0}
!7220 = !{!7221, !7221, i64 0}
!7221 = !{!"000001F2FCC2AFB0", !21, i64 0}
!7222 = !{!7223, !7223, i64 0}
!7223 = !{!"000001F2FCC3E270", !21, i64 0}
!7224 = !{!7225, !7225, i64 0}
!7225 = !{!"000001F2FCC3E8B0", !21, i64 0}
!7226 = !{!7227, !7227, i64 0}
!7227 = !{!"000001F2FCC3EE70", !21, i64 0}
!7228 = !{!7229, !7229, i64 0}
!7229 = !{!"000001F2FCC3E6B0", !21, i64 0}
!7230 = !{!7231, !7231, i64 0}
!7231 = !{!"000001F2EA7C48F0", !21, i64 0}
!7232 = !{!7233, !7233, i64 0}
!7233 = !{!"000001F2EA7C4870", !21, i64 0}
!7234 = !{!7235, !7235, i64 0}
!7235 = !{!"000001F2EA7C42B0", !21, i64 0}
!7236 = !{!7237, !7237, i64 0}
!7237 = !{!"000001F2EA7CBD30", !21, i64 0}
!7238 = !{!7239, !7239, i64 0}
!7239 = !{!"000001F2EA7C49B0", !21, i64 0}
!7240 = !{!7241, !7241, i64 0}
!7241 = !{!"000001F2EA7C4CB0", !21, i64 0}
!7242 = !{!7243, !7243, i64 0}
!7243 = !{!"000001F2EEACD0F0.w128.b0", !7244, i64 0}
!7244 = !{!"000001F2EEACD0F0.w256.b0", !7245, i64 0}
!7245 = !{!"000001F2EEACD0F0.w512.b0", !7246, i64 0}
!7246 = !{!"000001F2EEACD0F0.w1024.b0", !7247, i64 0}
!7247 = !{!"000001F2EEACD0F0", !21, i64 0}
!7248 = !{!7249, !7249, i64 0}
!7249 = !{!"000001F2EEACD0F0.w128.b128", !7244, i64 0}
!7250 = !{!7251, !7251, i64 0}
!7251 = !{!"000001F2EEACD0F0.w128.b256", !7252, i64 0}
!7252 = !{!"000001F2EEACD0F0.w256.b256", !7245, i64 0}
!7253 = !{!7254, !7254, i64 0}
!7254 = !{!"000001F2EEACD0F0.w128.b384", !7252, i64 0}
!7255 = !{!7256, !7256, i64 0}
!7256 = !{!"000001F2EEACD0F0.w128.b512", !7257, i64 0}
!7257 = !{!"000001F2EEACD0F0.w256.b512", !7258, i64 0}
!7258 = !{!"000001F2EEACD0F0.w512.b512", !7246, i64 0}
!7259 = !{!7260, !7260, i64 0}
!7260 = !{!"000001F2EEACD0F0.w128.b640", !7257, i64 0}
!7261 = !{!7262, !7262, i64 0}
!7262 = !{!"000001F2EEACD0F0.w128.b768", !7263, i64 0}
!7263 = !{!"000001F2EEACD0F0.w256.b768", !7258, i64 0}
!7264 = !{!7265, !7265, i64 0}
!7265 = !{!"000001F2EEACB070", !21, i64 0}
!7266 = !{!7267, !7267, i64 0}
!7267 = !{!"000001F2EEACA870", !21, i64 0}
!7268 = !{!7269, !7269, i64 0}
!7269 = !{!"000001F2EEACA370", !21, i64 0}
!7270 = !{!7271, !7271, i64 0}
!7271 = !{!"000001F2EEACA3F0", !21, i64 0}
!7272 = !{!7247, !7247, i64 0}
!7273 = !{!7274, !7274, i64 0}
!7274 = !{!"000001F2EEACAF70", !21, i64 0}
!7275 = !{!7276, !7276, i64 0}
!7276 = !{!"000001F2FCD59D10", !21, i64 0}
!7277 = !{!7278, !7278, i64 0}
!7278 = !{!"000001F2FCD5AF90", !21, i64 0}
!7279 = !{!7280, !7280, i64 0}
!7280 = !{!"000001F2FCD5B010", !21, i64 0}
!7281 = !{!7282, !7282, i64 0}
!7282 = !{!"000001F2FCD5E850.w128.b0", !7283, i64 0}
!7283 = !{!"000001F2FCD5E850.w256.b0", !7284, i64 0}
!7284 = !{!"000001F2FCD5E850.w512.b0", !7285, i64 0}
!7285 = !{!"000001F2FCD5E850.w1024.b0", !7286, i64 0}
!7286 = !{!"000001F2FCD5E850", !21, i64 0}
!7287 = !{!7288, !7288, i64 0}
!7288 = !{!"000001F2FCD5E850.w128.b128", !7283, i64 0}
!7289 = !{!7290, !7290, i64 0}
!7290 = !{!"000001F2FCD5E850.w128.b256", !7291, i64 0}
!7291 = !{!"000001F2FCD5E850.w256.b256", !7284, i64 0}
!7292 = !{!7293, !7293, i64 0}
!7293 = !{!"000001F2FCD5E850.w128.b384", !7291, i64 0}
!7294 = !{!7295, !7295, i64 0}
!7295 = !{!"000001F2FCD5E850.w128.b512", !7296, i64 0}
!7296 = !{!"000001F2FCD5E850.w256.b512", !7297, i64 0}
!7297 = !{!"000001F2FCD5E850.w512.b512", !7285, i64 0}
!7298 = !{!7299, !7299, i64 0}
!7299 = !{!"000001F2FCD5E850.w128.b640", !7296, i64 0}
!7300 = !{!7301, !7301, i64 0}
!7301 = !{!"000001F2FCD5E850.w128.b768", !7302, i64 0}
!7302 = !{!"000001F2FCD5E850.w256.b768", !7297, i64 0}
!7303 = !{!7304, !7304, i64 0}
!7304 = !{!"000001F2FCD5E850.w128.b896", !7302, i64 0}
!7305 = !{!7306, !7306, i64 0}
!7306 = !{!"000001F2FCD5E650", !21, i64 0}
!7307 = !{!7308, !7308, i64 0}
!7308 = !{!"000001F2FCD5A250", !21, i64 0}
!7309 = !{!7310, !7310, i64 0}
!7310 = !{!"000001F2FCD5A990", !21, i64 0}
!7311 = !{!7312, !7312, i64 0}
!7312 = !{!"000001F2FCD66C90", !21, i64 0}
!7313 = !{!7314, !7314, i64 0}
!7314 = !{!"000001F2FCD69450", !21, i64 0}
!7315 = !{!7316, !7316, i64 0}
!7316 = !{!"000001F2FCD664D0", !21, i64 0}
!7317 = !{!7318, !7318, i64 0}
!7318 = !{!"000001F2FCD66E90", !21, i64 0}
!7319 = !{!7320, !7320, i64 0}
!7320 = !{!"000001F2FCD66B50", !21, i64 0}
!7321 = !{!7322, !7322, i64 0}
!7322 = !{!"000001F2EA7CD970", !21, i64 0}
!7323 = !{!7324, !7324, i64 0}
!7324 = !{!"000001F2EA7D3370", !21, i64 0}
!7325 = !{!7326, !7326, i64 0}
!7326 = !{!"000001F2EA7CDEB0", !21, i64 0}
!7327 = !{!7328, !7328, i64 0}
!7328 = !{!"000001F2EA7CDC30", !21, i64 0}
!7329 = !{!7330, !7330, i64 0}
!7330 = !{!"000001F2EA7CDEF0", !21, i64 0}
!7331 = !{!7332, !7332, i64 0}
!7332 = !{!"000001F2EABF8510", !21, i64 0}
!7333 = !{!7334, !7334, i64 0}
!7334 = !{!"000001F2EABF7B50", !21, i64 0}
!7335 = !{!7336, !7336, i64 0}
!7336 = !{!"000001F2EABFBED0.w64.b0", !7337, i64 0}
!7337 = !{!"000001F2EABFBED0.w128.b0", !7338, i64 0}
!7338 = !{!"000001F2EABFBED0.w256.b0", !7339, i64 0}
!7339 = !{!"000001F2EABFBED0.w512.b0", !7340, i64 0}
!7340 = !{!"000001F2EABFBED0.w1024.b0", !7341, i64 0}
!7341 = !{!"000001F2EABFBED0", !21, i64 0}
!7342 = !{!7343, !7343, i64 0}
!7343 = !{!"000001F2EABFBED0.w64.b64", !7337, i64 0}
!7344 = !{!7345, !7345, i64 0}
!7345 = !{!"000001F2EABFBED0.w64.b128", !7346, i64 0}
!7346 = !{!"000001F2EABFBED0.w128.b128", !7338, i64 0}
!7347 = !{!7348, !7348, i64 0}
!7348 = !{!"000001F2EABFBED0.w64.b192", !7346, i64 0}
!7349 = !{!7350, !7350, i64 0}
!7350 = !{!"000001F2EABFBED0.w64.b256", !7351, i64 0}
!7351 = !{!"000001F2EABFBED0.w128.b256", !7352, i64 0}
!7352 = !{!"000001F2EABFBED0.w256.b256", !7339, i64 0}
!7353 = !{!7354, !7354, i64 0}
!7354 = !{!"000001F2EABFBED0.w64.b320", !7351, i64 0}
!7355 = !{!7356, !7356, i64 0}
!7356 = !{!"000001F2EABFBED0.w64.b384", !7357, i64 0}
!7357 = !{!"000001F2EABFBED0.w128.b384", !7352, i64 0}
!7358 = !{!7359, !7359, i64 0}
!7359 = !{!"000001F2EABFBED0.w64.b448", !7357, i64 0}
!7360 = !{!7361, !7361, i64 0}
!7361 = !{!"000001F2EABFBED0.w64.b512", !7362, i64 0}
!7362 = !{!"000001F2EABFBED0.w128.b512", !7363, i64 0}
!7363 = !{!"000001F2EABFBED0.w256.b512", !7364, i64 0}
!7364 = !{!"000001F2EABFBED0.w512.b512", !7340, i64 0}
!7365 = !{!7366, !7366, i64 0}
!7366 = !{!"000001F2EABFBED0.w64.b576", !7362, i64 0}
!7367 = !{!7368, !7368, i64 0}
!7368 = !{!"000001F2EABFBED0.w64.b640", !7369, i64 0}
!7369 = !{!"000001F2EABFBED0.w128.b640", !7363, i64 0}
!7370 = !{!7371, !7371, i64 0}
!7371 = !{!"000001F2EABFBED0.w64.b704", !7369, i64 0}
!7372 = !{!7373, !7373, i64 0}
!7373 = !{!"000001F2EABFBED0.w64.b768", !7374, i64 0}
!7374 = !{!"000001F2EABFBED0.w128.b768", !7375, i64 0}
!7375 = !{!"000001F2EABFBED0.w256.b768", !7364, i64 0}
!7376 = !{!7377, !7377, i64 0}
!7377 = !{!"000001F2EABFBED0.w64.b832", !7374, i64 0}
!7378 = !{!7379, !7379, i64 0}
!7379 = !{!"000001F2EABF8010", !21, i64 0}
!7380 = !{!7381, !7381, i64 0}
!7381 = !{!"000001F2EABF7890", !21, i64 0}
!7382 = !{!7341, !7341, i64 0}
!7383 = !{!7384, !7384, i64 0}
!7384 = !{!"000001F2EABF7C10", !21, i64 0}
!7385 = !{!7386, !7386, i64 0}
!7386 = !{!"000001F2EEAA94F0", !21, i64 0}
!7387 = !{!7388, !7388, i64 0}
!7388 = !{!"000001F2EEAA9F70", !21, i64 0}
!7389 = !{!7390, !7390, i64 0}
!7390 = !{!"000001F2EEAA9E70", !21, i64 0}
!7391 = !{!7392, !7392, i64 0}
!7392 = !{!"000001F2EEAA93F0", !21, i64 0}
!7393 = !{!7394, !7394, i64 0}
!7394 = !{!"000001F2EEADC5B0", !21, i64 0}
!7395 = !{!7396, !7396, i64 0}
!7396 = !{!"000001F2EEADC630", !21, i64 0}
!7397 = !{!7398, !7398, i64 0}
!7398 = !{!"000001F2EEADC6F0", !21, i64 0}
!7399 = !{!7400, !7400, i64 0}
!7400 = !{!"000001F2EEADCB30", !21, i64 0}
!7401 = !{!7402, !7402, i64 0}
!7402 = !{!"000001F2EEADC1B0", !21, i64 0}
!7403 = !{!7404, !7404, i64 0}
!7404 = !{!"000001F2EEAABDF0", !21, i64 0}
!7405 = !{!7406, !7406, i64 0}
!7406 = !{!"000001F2EEAAB470", !21, i64 0}
!7407 = !{!7408, !7408, i64 0}
!7408 = !{!"000001F2EEAAB270", !21, i64 0}
!7409 = !{!7410, !7410, i64 0}
!7410 = !{!"000001F2EEAAB430", !21, i64 0}
!7411 = !{!7412, !7412, i64 0}
!7412 = !{!"000001F2EEAAE6F0", !21, i64 0}
!7413 = !{!7414, !7414, i64 0}
!7414 = !{!"000001F2EEAB0E30", !21, i64 0}
!7415 = !{!7416, !7416, i64 0}
!7416 = !{!"000001F2EEAB0430", !21, i64 0}
!7417 = !{!7418, !7418, i64 0}
!7418 = !{!"000001F2EEAB0AF0", !21, i64 0}
!7419 = !{!7420, !7420, i64 0}
!7420 = !{!"000001F2EEAB0670", !21, i64 0}
!7421 = !{!7422, !7422, i64 0}
!7422 = !{!"000001F2EA3AF160", !21, i64 0}
!7423 = !{!7424, !7424, i64 0}
!7424 = !{!"000001F2E97811E0", !21, i64 0}
!7425 = !{!7426, !7426, i64 0}
!7426 = !{!"000001F2E978C320", !21, i64 0}
!7427 = !{!7428, !7428, i64 0}
!7428 = !{!"000001F2E9784EE0", !21, i64 0}
!7429 = !{!7430, !7430, i64 0}
!7430 = !{!"000001F2ED24A8E0", !21, i64 0}
!7431 = !{!7432, !7432, i64 0}
!7432 = !{!"000001F2E977F760", !21, i64 0}
!7433 = !{!7434, !7434, i64 0}
!7434 = !{!"000001F2EF92F660", !21, i64 0}
!7435 = !{!7436, !7436, i64 0}
!7436 = !{!"000001F2EF9264E0", !21, i64 0}
!7437 = !{!7438, !7438, i64 0}
!7438 = !{!"000001F2EF92A660", !21, i64 0}
!7439 = !{!7440, !7440, i64 0}
!7440 = !{!"000001F2EF93ABE0", !21, i64 0}
!7441 = !{!7442, !7442, i64 0}
!7442 = !{!"000001F2EF930DE0", !21, i64 0}
!7443 = !{!7444, !7444, i64 0}
!7444 = !{!"000001F2EAADDC60", !21, i64 0}
!7445 = !{!7446, !7446, i64 0}
!7446 = !{!"000001F2EAADFF60", !21, i64 0}
!7447 = !{!7448, !7448, i64 0}
!7448 = !{!"000001F2EAADD5E0", !21, i64 0}
!7449 = !{!7450, !7450, i64 0}
!7450 = !{!"000001F2EAADDB20", !21, i64 0}
!7451 = !{!7452, !7452, i64 0}
!7452 = !{!"000001F2EAADE120", !21, i64 0}
!7453 = !{!7454, !7454, i64 0}
!7454 = !{!"000001F2EAADDA60", !21, i64 0}
!7455 = !{!7456, !7456, i64 0}
!7456 = !{!"000001F2EF9327A0", !21, i64 0}
!7457 = distinct !{!7457, !7458}
!7458 = !{!"llvm.loop.peeled.count", i32 1}
!7459 = !{!7460, !7460, i64 0}
!7460 = !{!"000001F2E999AA60.w16.b0", !7461, i64 0}
!7461 = !{!"000001F2E999AA60.w32.b0", !7462, i64 0}
!7462 = !{!"000001F2E999AA60.w64.b0", !7463, i64 0}
!7463 = !{!"000001F2E999AA60.w128.b0", !7464, i64 0}
!7464 = !{!"000001F2E999AA60.w256.b0", !7465, i64 0}
!7465 = !{!"000001F2E999AA60.w512.b0", !7466, i64 0}
!7466 = !{!"000001F2E999AA60.w1024.b0", !7467, i64 0}
!7467 = !{!"000001F2E999AA60", !21, i64 0}
!7468 = !{!7469, !7469, i64 0}
!7469 = !{!"000001F2E999AA60.w16.b16", !7461, i64 0}
!7470 = !{!7471, !7471, i64 0}
!7471 = !{!"000001F2E999AA60.w16.b32", !7472, i64 0}
!7472 = !{!"000001F2E999AA60.w32.b32", !7462, i64 0}
!7473 = !{!7474, !7474, i64 0}
!7474 = !{!"000001F2E999AA60.w16.b48", !7472, i64 0}
!7475 = !{!7476, !7476, i64 0}
!7476 = !{!"000001F2E999AA60.w16.b64", !7477, i64 0}
!7477 = !{!"000001F2E999AA60.w32.b64", !7478, i64 0}
!7478 = !{!"000001F2E999AA60.w64.b64", !7463, i64 0}
!7479 = !{!7480, !7480, i64 0}
!7480 = !{!"000001F2E999AA60.w16.b80", !7477, i64 0}
!7481 = !{!7482, !7482, i64 0}
!7482 = !{!"000001F2E999AA60.w16.b96", !7483, i64 0}
!7483 = !{!"000001F2E999AA60.w32.b96", !7478, i64 0}
!7484 = !{!7485, !7485, i64 0}
!7485 = !{!"000001F2E999AA60.w16.b112", !7483, i64 0}
!7486 = !{!7487, !7487, i64 0}
!7487 = !{!"000001F2E999AA60.w16.b128", !7488, i64 0}
!7488 = !{!"000001F2E999AA60.w32.b128", !7489, i64 0}
!7489 = !{!"000001F2E999AA60.w64.b128", !7490, i64 0}
!7490 = !{!"000001F2E999AA60.w128.b128", !7464, i64 0}
!7491 = !{!7492, !7492, i64 0}
!7492 = !{!"000001F2E999AA60.w16.b144", !7488, i64 0}
!7493 = !{!7494, !7494, i64 0}
!7494 = !{!"000001F2E999AA60.w16.b160", !7495, i64 0}
!7495 = !{!"000001F2E999AA60.w32.b160", !7489, i64 0}
!7496 = !{!7497, !7497, i64 0}
!7497 = !{!"000001F2E999AA60.w16.b176", !7495, i64 0}
!7498 = !{!7499, !7499, i64 0}
!7499 = !{!"000001F2E999AA60.w16.b192", !7500, i64 0}
!7500 = !{!"000001F2E999AA60.w32.b192", !7501, i64 0}
!7501 = !{!"000001F2E999AA60.w64.b192", !7490, i64 0}
!7502 = !{!7503, !7503, i64 0}
!7503 = !{!"000001F2E999AA60.w16.b208", !7500, i64 0}
!7504 = !{!7505, !7505, i64 0}
!7505 = !{!"000001F2E999AA60.w16.b224", !7506, i64 0}
!7506 = !{!"000001F2E999AA60.w32.b224", !7501, i64 0}
!7507 = !{!7508, !7508, i64 0}
!7508 = !{!"000001F2E999AA60.w16.b240", !7506, i64 0}
!7509 = !{!7510, !7510, i64 0}
!7510 = !{!"000001F2E999AA60.w16.b256", !7511, i64 0}
!7511 = !{!"000001F2E999AA60.w32.b256", !7512, i64 0}
!7512 = !{!"000001F2E999AA60.w64.b256", !7513, i64 0}
!7513 = !{!"000001F2E999AA60.w128.b256", !7514, i64 0}
!7514 = !{!"000001F2E999AA60.w256.b256", !7465, i64 0}
!7515 = !{!7516, !7516, i64 0}
!7516 = !{!"000001F2E999AA60.w16.b272", !7511, i64 0}
!7517 = !{!7518, !7518, i64 0}
!7518 = !{!"000001F2E999AA60.w16.b288", !7519, i64 0}
!7519 = !{!"000001F2E999AA60.w32.b288", !7512, i64 0}
!7520 = !{!7521, !7521, i64 0}
!7521 = !{!"000001F2E999AA60.w16.b304", !7519, i64 0}
!7522 = !{!7523, !7523, i64 0}
!7523 = !{!"000001F2E999AA60.w16.b320", !7524, i64 0}
!7524 = !{!"000001F2E999AA60.w32.b320", !7525, i64 0}
!7525 = !{!"000001F2E999AA60.w64.b320", !7513, i64 0}
!7526 = !{!7527, !7527, i64 0}
!7527 = !{!"000001F2E999AA60.w16.b336", !7524, i64 0}
!7528 = !{!7529, !7529, i64 0}
!7529 = !{!"000001F2E999AA60.w16.b352", !7530, i64 0}
!7530 = !{!"000001F2E999AA60.w32.b352", !7525, i64 0}
!7531 = !{!7532, !7532, i64 0}
!7532 = !{!"000001F2E999AA60.w16.b368", !7530, i64 0}
!7533 = !{!7534, !7534, i64 0}
!7534 = !{!"000001F2E999AA60.w16.b384", !7535, i64 0}
!7535 = !{!"000001F2E999AA60.w32.b384", !7536, i64 0}
!7536 = !{!"000001F2E999AA60.w64.b384", !7537, i64 0}
!7537 = !{!"000001F2E999AA60.w128.b384", !7514, i64 0}
!7538 = !{!7539, !7539, i64 0}
!7539 = !{!"000001F2E999AA60.w16.b400", !7535, i64 0}
!7540 = !{!7541, !7541, i64 0}
!7541 = !{!"000001F2E999AA60.w16.b416", !7542, i64 0}
!7542 = !{!"000001F2E999AA60.w32.b416", !7536, i64 0}
!7543 = !{!7544, !7544, i64 0}
!7544 = !{!"000001F2E999AA60.w16.b432", !7542, i64 0}
!7545 = !{!7546, !7546, i64 0}
!7546 = !{!"000001F2EF9329A0", !21, i64 0}
!7547 = !{!7548, !7548, i64 0}
!7548 = !{!"000001F2EF932260", !21, i64 0}
!7549 = !{!7467, !7467, i64 0}
!7550 = !{!7551, !7551, i64 0}
!7551 = !{!"000001F2EF933EE0", !21, i64 0}
!7552 = !{!7553, !7553, i64 0}
!7553 = !{!"000001F2EC09B8E0", !21, i64 0}
!7554 = !{!7555, !7555, i64 0}
!7555 = !{!"000001F2EC098760", !21, i64 0}
!7556 = !{!7557, !7557, i64 0}
!7557 = !{!"000001F2EC098CE0", !21, i64 0}
!7558 = !{!7559, !7559, i64 0}
!7559 = !{!"000001F2EF57A160", !21, i64 0}
!7560 = !{!7561, !7561, i64 0}
!7561 = !{!"000001F2EC0827A0", !21, i64 0}
!7562 = !{!7563, !7563, i64 0}
!7563 = !{!"000001F2EF5817A0", !21, i64 0}
!7564 = !{!7565, !7565, i64 0}
!7565 = !{!"000001F2EF581CE0", !21, i64 0}
!7566 = !{!7567, !7567, i64 0}
!7567 = !{!"000001F2EF582020", !21, i64 0}
!7568 = !{!7569, !7569, i64 0}
!7569 = !{!"000001F2EF581720", !21, i64 0}
!7570 = !{!7571, !7571, i64 0}
!7571 = !{!"000001F2EF584260", !21, i64 0}
!7572 = !{!7573, !7573, i64 0}
!7573 = !{!"000001F2EF581160", !21, i64 0}
!7574 = !{!7575, !7575, i64 0}
!7575 = !{!"000001F2EABF2FD0.w16.b0", !7576, i64 0}
!7576 = !{!"000001F2EABF2FD0.w32.b0", !7577, i64 0}
!7577 = !{!"000001F2EABF2FD0.w64.b0", !7578, i64 0}
!7578 = !{!"000001F2EABF2FD0.w128.b0", !7579, i64 0}
!7579 = !{!"000001F2EABF2FD0.w256.b0", !7580, i64 0}
!7580 = !{!"000001F2EABF2FD0.w512.b0", !7581, i64 0}
!7581 = !{!"000001F2EABF2FD0.w1024.b0", !7582, i64 0}
!7582 = !{!"000001F2EABF2FD0", !21, i64 0}
!7583 = !{!7584, !7584, i64 0}
!7584 = !{!"000001F2EABF2FD0.w16.b16", !7576, i64 0}
!7585 = !{!7586, !7586, i64 0}
!7586 = !{!"000001F2EABF2FD0.w16.b32", !7587, i64 0}
!7587 = !{!"000001F2EABF2FD0.w32.b32", !7577, i64 0}
!7588 = !{!7589, !7589, i64 0}
!7589 = !{!"000001F2EABF2FD0.w16.b48", !7587, i64 0}
!7590 = !{!7591, !7591, i64 0}
!7591 = !{!"000001F2EABF2FD0.w16.b64", !7592, i64 0}
!7592 = !{!"000001F2EABF2FD0.w32.b64", !7593, i64 0}
!7593 = !{!"000001F2EABF2FD0.w64.b64", !7578, i64 0}
!7594 = !{!7595, !7595, i64 0}
!7595 = !{!"000001F2EABF2FD0.w16.b80", !7592, i64 0}
!7596 = !{!7597, !7597, i64 0}
!7597 = !{!"000001F2EABF2FD0.w16.b96", !7598, i64 0}
!7598 = !{!"000001F2EABF2FD0.w32.b96", !7593, i64 0}
!7599 = !{!7600, !7600, i64 0}
!7600 = !{!"000001F2EABF2FD0.w16.b112", !7598, i64 0}
!7601 = !{!7602, !7602, i64 0}
!7602 = !{!"000001F2EABF2FD0.w16.b128", !7603, i64 0}
!7603 = !{!"000001F2EABF2FD0.w32.b128", !7604, i64 0}
!7604 = !{!"000001F2EABF2FD0.w64.b128", !7605, i64 0}
!7605 = !{!"000001F2EABF2FD0.w128.b128", !7579, i64 0}
!7606 = !{!7607, !7607, i64 0}
!7607 = !{!"000001F2EABF2FD0.w16.b144", !7603, i64 0}
!7608 = !{!7609, !7609, i64 0}
!7609 = !{!"000001F2EABF2FD0.w16.b160", !7610, i64 0}
!7610 = !{!"000001F2EABF2FD0.w32.b160", !7604, i64 0}
!7611 = !{!7612, !7612, i64 0}
!7612 = !{!"000001F2EABF2FD0.w16.b176", !7610, i64 0}
!7613 = !{!7614, !7614, i64 0}
!7614 = !{!"000001F2EABF2FD0.w16.b192", !7615, i64 0}
!7615 = !{!"000001F2EABF2FD0.w32.b192", !7616, i64 0}
!7616 = !{!"000001F2EABF2FD0.w64.b192", !7605, i64 0}
!7617 = !{!7618, !7618, i64 0}
!7618 = !{!"000001F2EABF2FD0.w16.b208", !7615, i64 0}
!7619 = !{!7620, !7620, i64 0}
!7620 = !{!"000001F2EABF2FD0.w16.b224", !7621, i64 0}
!7621 = !{!"000001F2EABF2FD0.w32.b224", !7616, i64 0}
!7622 = !{!7623, !7623, i64 0}
!7623 = !{!"000001F2EABF2FD0.w16.b240", !7621, i64 0}
!7624 = !{!7625, !7625, i64 0}
!7625 = !{!"000001F2EABF2FD0.w16.b256", !7626, i64 0}
!7626 = !{!"000001F2EABF2FD0.w32.b256", !7627, i64 0}
!7627 = !{!"000001F2EABF2FD0.w64.b256", !7628, i64 0}
!7628 = !{!"000001F2EABF2FD0.w128.b256", !7629, i64 0}
!7629 = !{!"000001F2EABF2FD0.w256.b256", !7580, i64 0}
!7630 = !{!7631, !7631, i64 0}
!7631 = !{!"000001F2EABF2FD0.w16.b272", !7626, i64 0}
!7632 = !{!7633, !7633, i64 0}
!7633 = !{!"000001F2EABF2FD0.w16.b288", !7634, i64 0}
!7634 = !{!"000001F2EABF2FD0.w32.b288", !7627, i64 0}
!7635 = !{!7636, !7636, i64 0}
!7636 = !{!"000001F2EABF2FD0.w16.b304", !7634, i64 0}
!7637 = !{!7638, !7638, i64 0}
!7638 = !{!"000001F2EABF2FD0.w16.b320", !7639, i64 0}
!7639 = !{!"000001F2EABF2FD0.w32.b320", !7640, i64 0}
!7640 = !{!"000001F2EABF2FD0.w64.b320", !7628, i64 0}
!7641 = !{!7642, !7642, i64 0}
!7642 = !{!"000001F2EABF2FD0.w16.b336", !7639, i64 0}
!7643 = !{!7644, !7644, i64 0}
!7644 = !{!"000001F2EABF2FD0.w16.b352", !7645, i64 0}
!7645 = !{!"000001F2EABF2FD0.w32.b352", !7640, i64 0}
!7646 = !{!7647, !7647, i64 0}
!7647 = !{!"000001F2EABF2FD0.w16.b368", !7645, i64 0}
!7648 = !{!7649, !7649, i64 0}
!7649 = !{!"000001F2EABF2FD0.w16.b384", !7650, i64 0}
!7650 = !{!"000001F2EABF2FD0.w32.b384", !7651, i64 0}
!7651 = !{!"000001F2EABF2FD0.w64.b384", !7652, i64 0}
!7652 = !{!"000001F2EABF2FD0.w128.b384", !7629, i64 0}
!7653 = !{!7654, !7654, i64 0}
!7654 = !{!"000001F2EABF2FD0.w16.b400", !7650, i64 0}
!7655 = !{!7656, !7656, i64 0}
!7656 = !{!"000001F2EABF2FD0.w16.b416", !7657, i64 0}
!7657 = !{!"000001F2EABF2FD0.w32.b416", !7651, i64 0}
!7658 = !{!7659, !7659, i64 0}
!7659 = !{!"000001F2EABF2FD0.w16.b432", !7657, i64 0}
!7660 = !{!7661, !7661, i64 0}
!7661 = !{!"000001F2EABF0310", !21, i64 0}
!7662 = !{!7663, !7663, i64 0}
!7663 = !{!"000001F2EABF0D10", !21, i64 0}
!7664 = !{!7665, !7665, i64 0}
!7665 = !{!"000001F2EABF0FD0", !21, i64 0}
!7666 = !{!7582, !7582, i64 0}
!7667 = !{!7668, !7668, i64 0}
!7668 = !{!"000001F2EABF0B90", !21, i64 0}
!7669 = !{!7670, !7670, i64 0}
!7670 = !{!"000001F2EABF7FD0", !21, i64 0}
!7671 = !{!7672, !7672, i64 0}
!7672 = !{!"000001F2EABF8490", !21, i64 0}
!7673 = !{!7674, !7674, i64 0}
!7674 = !{!"000001F2EABF83D0", !21, i64 0}
!7675 = !{!7676, !7676, i64 0}
!7676 = !{!"000001F2EABF8B10", !21, i64 0}
!7677 = !{!7678, !7678, i64 0}
!7678 = !{!"000001F2EABF8F10", !21, i64 0}
!7679 = !{!7680, !7680, i64 0}
!7680 = !{!"000001F2EAEE29B0", !21, i64 0}
!7681 = !{!7682, !7682, i64 0}
!7682 = !{!"000001F2EAEE3030", !21, i64 0}
!7683 = !{!7684, !7684, i64 0}
!7684 = !{!"000001F2EAEE2BF0", !21, i64 0}
!7685 = !{!7686, !7686, i64 0}
!7686 = !{!"000001F2EAEE2AB0", !21, i64 0}
!7687 = !{!7688, !7688, i64 0}
!7688 = !{!"000001F2FCD5BBD0", !21, i64 0}
!7689 = !{!7690, !7690, i64 0}
!7690 = !{!"000001F2FCD5B190", !21, i64 0}
